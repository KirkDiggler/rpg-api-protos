// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: api/v1alpha1/dice.proto
// Protobuf C++ Version: 6.32.1

#ifndef api_2fv1alpha1_2fdice_2eproto_2epb_2eh
#define api_2fv1alpha1_2fdice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6032001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_api_2fv1alpha1_2fdice_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_api_2fv1alpha1_2fdice_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_api_2fv1alpha1_2fdice_2eproto;
}  // extern "C"
namespace api {
namespace v1alpha1 {
class ClearRollSessionRequest;
struct ClearRollSessionRequestDefaultTypeInternal;
extern ClearRollSessionRequestDefaultTypeInternal _ClearRollSessionRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ClearRollSessionRequest_class_data_;
class ClearRollSessionResponse;
struct ClearRollSessionResponseDefaultTypeInternal;
extern ClearRollSessionResponseDefaultTypeInternal _ClearRollSessionResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ClearRollSessionResponse_class_data_;
class DiceRoll;
struct DiceRollDefaultTypeInternal;
extern DiceRollDefaultTypeInternal _DiceRoll_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull DiceRoll_class_data_;
class GetRollSessionRequest;
struct GetRollSessionRequestDefaultTypeInternal;
extern GetRollSessionRequestDefaultTypeInternal _GetRollSessionRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetRollSessionRequest_class_data_;
class GetRollSessionResponse;
struct GetRollSessionResponseDefaultTypeInternal;
extern GetRollSessionResponseDefaultTypeInternal _GetRollSessionResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetRollSessionResponse_class_data_;
class RollDiceRequest;
struct RollDiceRequestDefaultTypeInternal;
extern RollDiceRequestDefaultTypeInternal _RollDiceRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull RollDiceRequest_class_data_;
class RollDiceResponse;
struct RollDiceResponseDefaultTypeInternal;
extern RollDiceResponseDefaultTypeInternal _RollDiceResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull RollDiceResponse_class_data_;
}  // namespace v1alpha1
}  // namespace api
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace api {
namespace v1alpha1 {

// ===================================================================


// -------------------------------------------------------------------

class RollDiceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:api.v1alpha1.RollDiceRequest) */ {
 public:
  inline RollDiceRequest() : RollDiceRequest(nullptr) {}
  ~RollDiceRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RollDiceRequest* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RollDiceRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RollDiceRequest(::google::protobuf::internal::ConstantInitialized);

  inline RollDiceRequest(const RollDiceRequest& from) : RollDiceRequest(nullptr, from) {}
  inline RollDiceRequest(RollDiceRequest&& from) noexcept
      : RollDiceRequest(nullptr, ::std::move(from)) {}
  inline RollDiceRequest& operator=(const RollDiceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RollDiceRequest& operator=(RollDiceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RollDiceRequest& default_instance() {
    return *reinterpret_cast<const RollDiceRequest*>(
        &_RollDiceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(RollDiceRequest& a, RollDiceRequest& b) { a.Swap(&b); }
  inline void Swap(RollDiceRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RollDiceRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RollDiceRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RollDiceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RollDiceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RollDiceRequest& from) { RollDiceRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RollDiceRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "api.v1alpha1.RollDiceRequest"; }

 protected:
  explicit RollDiceRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  RollDiceRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RollDiceRequest& from);
  RollDiceRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, RollDiceRequest&& from) noexcept
      : RollDiceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntityIdFieldNumber = 1,
    kContextFieldNumber = 2,
    kNotationFieldNumber = 3,
    kModifierDescriptionFieldNumber = 6,
    kCountFieldNumber = 4,
    kTtlSecondsFieldNumber = 5,
  };
  // string entity_id = 1 [json_name = "entityId"];
  void clear_entity_id() ;
  const ::std::string& entity_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_entity_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_entity_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_entity_id();
  void set_allocated_entity_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_entity_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_entity_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_entity_id();

  public:
  // string context = 2 [json_name = "context"];
  void clear_context() ;
  const ::std::string& context() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_context(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_context();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_context();
  void set_allocated_context(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_context() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_context(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_context();

  public:
  // string notation = 3 [json_name = "notation"];
  void clear_notation() ;
  const ::std::string& notation() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_notation(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_notation();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_notation();
  void set_allocated_notation(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_notation() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_notation(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_notation();

  public:
  // string modifier_description = 6 [json_name = "modifierDescription"];
  void clear_modifier_description() ;
  const ::std::string& modifier_description() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_modifier_description(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_modifier_description();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_modifier_description();
  void set_allocated_modifier_description(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_modifier_description() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_modifier_description(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_modifier_description();

  public:
  // int32 count = 4 [json_name = "count"];
  void clear_count() ;
  ::int32_t count() const;
  void set_count(::int32_t value);

  private:
  ::int32_t _internal_count() const;
  void _internal_set_count(::int32_t value);

  public:
  // int32 ttl_seconds = 5 [json_name = "ttlSeconds"];
  void clear_ttl_seconds() ;
  ::int32_t ttl_seconds() const;
  void set_ttl_seconds(::int32_t value);

  private:
  ::int32_t _internal_ttl_seconds() const;
  void _internal_set_ttl_seconds(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:api.v1alpha1.RollDiceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   0, 81,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const RollDiceRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr entity_id_;
    ::google::protobuf::internal::ArenaStringPtr context_;
    ::google::protobuf::internal::ArenaStringPtr notation_;
    ::google::protobuf::internal::ArenaStringPtr modifier_description_;
    ::int32_t count_;
    ::int32_t ttl_seconds_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fv1alpha1_2fdice_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull RollDiceRequest_class_data_;
// -------------------------------------------------------------------

class GetRollSessionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:api.v1alpha1.GetRollSessionRequest) */ {
 public:
  inline GetRollSessionRequest() : GetRollSessionRequest(nullptr) {}
  ~GetRollSessionRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetRollSessionRequest* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetRollSessionRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetRollSessionRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetRollSessionRequest(const GetRollSessionRequest& from) : GetRollSessionRequest(nullptr, from) {}
  inline GetRollSessionRequest(GetRollSessionRequest&& from) noexcept
      : GetRollSessionRequest(nullptr, ::std::move(from)) {}
  inline GetRollSessionRequest& operator=(const GetRollSessionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetRollSessionRequest& operator=(GetRollSessionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetRollSessionRequest& default_instance() {
    return *reinterpret_cast<const GetRollSessionRequest*>(
        &_GetRollSessionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(GetRollSessionRequest& a, GetRollSessionRequest& b) { a.Swap(&b); }
  inline void Swap(GetRollSessionRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetRollSessionRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetRollSessionRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetRollSessionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetRollSessionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetRollSessionRequest& from) { GetRollSessionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetRollSessionRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "api.v1alpha1.GetRollSessionRequest"; }

 protected:
  explicit GetRollSessionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetRollSessionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetRollSessionRequest& from);
  GetRollSessionRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetRollSessionRequest&& from) noexcept
      : GetRollSessionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntityIdFieldNumber = 1,
    kContextFieldNumber = 2,
  };
  // string entity_id = 1 [json_name = "entityId"];
  void clear_entity_id() ;
  const ::std::string& entity_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_entity_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_entity_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_entity_id();
  void set_allocated_entity_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_entity_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_entity_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_entity_id();

  public:
  // string context = 2 [json_name = "context"];
  void clear_context() ;
  const ::std::string& context() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_context(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_context();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_context();
  void set_allocated_context(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_context() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_context(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_context();

  public:
  // @@protoc_insertion_point(class_scope:api.v1alpha1.GetRollSessionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 59,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetRollSessionRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr entity_id_;
    ::google::protobuf::internal::ArenaStringPtr context_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fv1alpha1_2fdice_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetRollSessionRequest_class_data_;
// -------------------------------------------------------------------

class DiceRoll final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:api.v1alpha1.DiceRoll) */ {
 public:
  inline DiceRoll() : DiceRoll(nullptr) {}
  ~DiceRoll() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DiceRoll* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DiceRoll));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DiceRoll(::google::protobuf::internal::ConstantInitialized);

  inline DiceRoll(const DiceRoll& from) : DiceRoll(nullptr, from) {}
  inline DiceRoll(DiceRoll&& from) noexcept
      : DiceRoll(nullptr, ::std::move(from)) {}
  inline DiceRoll& operator=(const DiceRoll& from) {
    CopyFrom(from);
    return *this;
  }
  inline DiceRoll& operator=(DiceRoll&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DiceRoll& default_instance() {
    return *reinterpret_cast<const DiceRoll*>(
        &_DiceRoll_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(DiceRoll& a, DiceRoll& b) { a.Swap(&b); }
  inline void Swap(DiceRoll* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DiceRoll* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DiceRoll* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DiceRoll>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DiceRoll& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DiceRoll& from) { DiceRoll::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DiceRoll* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "api.v1alpha1.DiceRoll"; }

 protected:
  explicit DiceRoll(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  DiceRoll(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const DiceRoll& from);
  DiceRoll(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, DiceRoll&& from) noexcept
      : DiceRoll(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDiceFieldNumber = 3,
    kDroppedFieldNumber = 5,
    kRollIdFieldNumber = 1,
    kNotationFieldNumber = 2,
    kDescriptionFieldNumber = 6,
    kTotalFieldNumber = 4,
    kDiceTotalFieldNumber = 7,
    kModifierFieldNumber = 8,
  };
  // repeated int32 dice = 3 [json_name = "dice"];
  int dice_size() const;
  private:
  int _internal_dice_size() const;

  public:
  void clear_dice() ;
  ::int32_t dice(int index) const;
  void set_dice(int index, ::int32_t value);
  void add_dice(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& dice() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL mutable_dice();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_dice() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL _internal_mutable_dice();

  public:
  // repeated int32 dropped = 5 [json_name = "dropped"];
  int dropped_size() const;
  private:
  int _internal_dropped_size() const;

  public:
  void clear_dropped() ;
  ::int32_t dropped(int index) const;
  void set_dropped(int index, ::int32_t value);
  void add_dropped(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& dropped() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL mutable_dropped();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_dropped() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL _internal_mutable_dropped();

  public:
  // string roll_id = 1 [json_name = "rollId"];
  void clear_roll_id() ;
  const ::std::string& roll_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_roll_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_roll_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_roll_id();
  void set_allocated_roll_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_roll_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_roll_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_roll_id();

  public:
  // string notation = 2 [json_name = "notation"];
  void clear_notation() ;
  const ::std::string& notation() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_notation(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_notation();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_notation();
  void set_allocated_notation(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_notation() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_notation(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_notation();

  public:
  // string description = 6 [json_name = "description"];
  void clear_description() ;
  const ::std::string& description() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_description();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_description();
  void set_allocated_description(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_description() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_description(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_description();

  public:
  // int32 total = 4 [json_name = "total"];
  void clear_total() ;
  ::int32_t total() const;
  void set_total(::int32_t value);

  private:
  ::int32_t _internal_total() const;
  void _internal_set_total(::int32_t value);

  public:
  // int32 dice_total = 7 [json_name = "diceTotal"];
  void clear_dice_total() ;
  ::int32_t dice_total() const;
  void set_dice_total(::int32_t value);

  private:
  ::int32_t _internal_dice_total() const;
  void _internal_set_dice_total(::int32_t value);

  public:
  // int32 modifier = 8 [json_name = "modifier"];
  void clear_modifier() ;
  ::int32_t modifier() const;
  void set_modifier(::int32_t value);

  private:
  ::int32_t _internal_modifier() const;
  void _internal_set_modifier(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:api.v1alpha1.DiceRoll)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 8,
                                   0, 64,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const DiceRoll& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> dice_;
    ::google::protobuf::internal::CachedSize _dice_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int32_t> dropped_;
    ::google::protobuf::internal::CachedSize _dropped_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr roll_id_;
    ::google::protobuf::internal::ArenaStringPtr notation_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::int32_t total_;
    ::int32_t dice_total_;
    ::int32_t modifier_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fv1alpha1_2fdice_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull DiceRoll_class_data_;
// -------------------------------------------------------------------

class ClearRollSessionResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:api.v1alpha1.ClearRollSessionResponse) */ {
 public:
  inline ClearRollSessionResponse() : ClearRollSessionResponse(nullptr) {}
  ~ClearRollSessionResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ClearRollSessionResponse* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ClearRollSessionResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClearRollSessionResponse(::google::protobuf::internal::ConstantInitialized);

  inline ClearRollSessionResponse(const ClearRollSessionResponse& from) : ClearRollSessionResponse(nullptr, from) {}
  inline ClearRollSessionResponse(ClearRollSessionResponse&& from) noexcept
      : ClearRollSessionResponse(nullptr, ::std::move(from)) {}
  inline ClearRollSessionResponse& operator=(const ClearRollSessionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClearRollSessionResponse& operator=(ClearRollSessionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClearRollSessionResponse& default_instance() {
    return *reinterpret_cast<const ClearRollSessionResponse*>(
        &_ClearRollSessionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(ClearRollSessionResponse& a, ClearRollSessionResponse& b) { a.Swap(&b); }
  inline void Swap(ClearRollSessionResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClearRollSessionResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClearRollSessionResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ClearRollSessionResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ClearRollSessionResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ClearRollSessionResponse& from) { ClearRollSessionResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ClearRollSessionResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "api.v1alpha1.ClearRollSessionResponse"; }

 protected:
  explicit ClearRollSessionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ClearRollSessionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ClearRollSessionResponse& from);
  ClearRollSessionResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ClearRollSessionResponse&& from) noexcept
      : ClearRollSessionResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 1,
    kRollsClearedFieldNumber = 2,
  };
  // string message = 1 [json_name = "message"];
  void clear_message() ;
  const ::std::string& message() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_message();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_message();
  void set_allocated_message(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_message() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_message(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_message();

  public:
  // int32 rolls_cleared = 2 [json_name = "rollsCleared"];
  void clear_rolls_cleared() ;
  ::int32_t rolls_cleared() const;
  void set_rolls_cleared(::int32_t value);

  private:
  ::int32_t _internal_rolls_cleared() const;
  void _internal_set_rolls_cleared(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:api.v1alpha1.ClearRollSessionResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 53,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ClearRollSessionResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::int32_t rolls_cleared_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fv1alpha1_2fdice_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ClearRollSessionResponse_class_data_;
// -------------------------------------------------------------------

class ClearRollSessionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:api.v1alpha1.ClearRollSessionRequest) */ {
 public:
  inline ClearRollSessionRequest() : ClearRollSessionRequest(nullptr) {}
  ~ClearRollSessionRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ClearRollSessionRequest* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ClearRollSessionRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClearRollSessionRequest(::google::protobuf::internal::ConstantInitialized);

  inline ClearRollSessionRequest(const ClearRollSessionRequest& from) : ClearRollSessionRequest(nullptr, from) {}
  inline ClearRollSessionRequest(ClearRollSessionRequest&& from) noexcept
      : ClearRollSessionRequest(nullptr, ::std::move(from)) {}
  inline ClearRollSessionRequest& operator=(const ClearRollSessionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClearRollSessionRequest& operator=(ClearRollSessionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClearRollSessionRequest& default_instance() {
    return *reinterpret_cast<const ClearRollSessionRequest*>(
        &_ClearRollSessionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(ClearRollSessionRequest& a, ClearRollSessionRequest& b) { a.Swap(&b); }
  inline void Swap(ClearRollSessionRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClearRollSessionRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClearRollSessionRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ClearRollSessionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ClearRollSessionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ClearRollSessionRequest& from) { ClearRollSessionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ClearRollSessionRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "api.v1alpha1.ClearRollSessionRequest"; }

 protected:
  explicit ClearRollSessionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ClearRollSessionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ClearRollSessionRequest& from);
  ClearRollSessionRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ClearRollSessionRequest&& from) noexcept
      : ClearRollSessionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntityIdFieldNumber = 1,
    kContextFieldNumber = 2,
  };
  // string entity_id = 1 [json_name = "entityId"];
  void clear_entity_id() ;
  const ::std::string& entity_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_entity_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_entity_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_entity_id();
  void set_allocated_entity_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_entity_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_entity_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_entity_id();

  public:
  // string context = 2 [json_name = "context"];
  void clear_context() ;
  const ::std::string& context() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_context(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_context();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_context();
  void set_allocated_context(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_context() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_context(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_context();

  public:
  // @@protoc_insertion_point(class_scope:api.v1alpha1.ClearRollSessionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 61,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ClearRollSessionRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr entity_id_;
    ::google::protobuf::internal::ArenaStringPtr context_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fv1alpha1_2fdice_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ClearRollSessionRequest_class_data_;
// -------------------------------------------------------------------

class RollDiceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:api.v1alpha1.RollDiceResponse) */ {
 public:
  inline RollDiceResponse() : RollDiceResponse(nullptr) {}
  ~RollDiceResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RollDiceResponse* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RollDiceResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RollDiceResponse(::google::protobuf::internal::ConstantInitialized);

  inline RollDiceResponse(const RollDiceResponse& from) : RollDiceResponse(nullptr, from) {}
  inline RollDiceResponse(RollDiceResponse&& from) noexcept
      : RollDiceResponse(nullptr, ::std::move(from)) {}
  inline RollDiceResponse& operator=(const RollDiceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RollDiceResponse& operator=(RollDiceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RollDiceResponse& default_instance() {
    return *reinterpret_cast<const RollDiceResponse*>(
        &_RollDiceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(RollDiceResponse& a, RollDiceResponse& b) { a.Swap(&b); }
  inline void Swap(RollDiceResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RollDiceResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RollDiceResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RollDiceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RollDiceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RollDiceResponse& from) { RollDiceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RollDiceResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "api.v1alpha1.RollDiceResponse"; }

 protected:
  explicit RollDiceResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  RollDiceResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RollDiceResponse& from);
  RollDiceResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, RollDiceResponse&& from) noexcept
      : RollDiceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRollsFieldNumber = 1,
    kExpiresAtFieldNumber = 2,
  };
  // repeated .api.v1alpha1.DiceRoll rolls = 1 [json_name = "rolls"];
  int rolls_size() const;
  private:
  int _internal_rolls_size() const;

  public:
  void clear_rolls() ;
  ::api::v1alpha1::DiceRoll* PROTOBUF_NONNULL mutable_rolls(int index);
  ::google::protobuf::RepeatedPtrField<::api::v1alpha1::DiceRoll>* PROTOBUF_NONNULL mutable_rolls();

  private:
  const ::google::protobuf::RepeatedPtrField<::api::v1alpha1::DiceRoll>& _internal_rolls() const;
  ::google::protobuf::RepeatedPtrField<::api::v1alpha1::DiceRoll>* PROTOBUF_NONNULL _internal_mutable_rolls();
  public:
  const ::api::v1alpha1::DiceRoll& rolls(int index) const;
  ::api::v1alpha1::DiceRoll* PROTOBUF_NONNULL add_rolls();
  const ::google::protobuf::RepeatedPtrField<::api::v1alpha1::DiceRoll>& rolls() const;
  // int64 expires_at = 2 [json_name = "expiresAt"];
  void clear_expires_at() ;
  ::int64_t expires_at() const;
  void set_expires_at(::int64_t value);

  private:
  ::int64_t _internal_expires_at() const;
  void _internal_set_expires_at(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:api.v1alpha1.RollDiceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const RollDiceResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::api::v1alpha1::DiceRoll > rolls_;
    ::int64_t expires_at_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fv1alpha1_2fdice_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull RollDiceResponse_class_data_;
// -------------------------------------------------------------------

class GetRollSessionResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:api.v1alpha1.GetRollSessionResponse) */ {
 public:
  inline GetRollSessionResponse() : GetRollSessionResponse(nullptr) {}
  ~GetRollSessionResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetRollSessionResponse* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetRollSessionResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetRollSessionResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetRollSessionResponse(const GetRollSessionResponse& from) : GetRollSessionResponse(nullptr, from) {}
  inline GetRollSessionResponse(GetRollSessionResponse&& from) noexcept
      : GetRollSessionResponse(nullptr, ::std::move(from)) {}
  inline GetRollSessionResponse& operator=(const GetRollSessionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetRollSessionResponse& operator=(GetRollSessionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetRollSessionResponse& default_instance() {
    return *reinterpret_cast<const GetRollSessionResponse*>(
        &_GetRollSessionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(GetRollSessionResponse& a, GetRollSessionResponse& b) { a.Swap(&b); }
  inline void Swap(GetRollSessionResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetRollSessionResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetRollSessionResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetRollSessionResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetRollSessionResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetRollSessionResponse& from) { GetRollSessionResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetRollSessionResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "api.v1alpha1.GetRollSessionResponse"; }

 protected:
  explicit GetRollSessionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetRollSessionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetRollSessionResponse& from);
  GetRollSessionResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetRollSessionResponse&& from) noexcept
      : GetRollSessionResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRollsFieldNumber = 1,
    kExpiresAtFieldNumber = 2,
    kCreatedAtFieldNumber = 3,
  };
  // repeated .api.v1alpha1.DiceRoll rolls = 1 [json_name = "rolls"];
  int rolls_size() const;
  private:
  int _internal_rolls_size() const;

  public:
  void clear_rolls() ;
  ::api::v1alpha1::DiceRoll* PROTOBUF_NONNULL mutable_rolls(int index);
  ::google::protobuf::RepeatedPtrField<::api::v1alpha1::DiceRoll>* PROTOBUF_NONNULL mutable_rolls();

  private:
  const ::google::protobuf::RepeatedPtrField<::api::v1alpha1::DiceRoll>& _internal_rolls() const;
  ::google::protobuf::RepeatedPtrField<::api::v1alpha1::DiceRoll>* PROTOBUF_NONNULL _internal_mutable_rolls();
  public:
  const ::api::v1alpha1::DiceRoll& rolls(int index) const;
  ::api::v1alpha1::DiceRoll* PROTOBUF_NONNULL add_rolls();
  const ::google::protobuf::RepeatedPtrField<::api::v1alpha1::DiceRoll>& rolls() const;
  // int64 expires_at = 2 [json_name = "expiresAt"];
  void clear_expires_at() ;
  ::int64_t expires_at() const;
  void set_expires_at(::int64_t value);

  private:
  ::int64_t _internal_expires_at() const;
  void _internal_set_expires_at(::int64_t value);

  public:
  // int64 created_at = 3 [json_name = "createdAt"];
  void clear_created_at() ;
  ::int64_t created_at() const;
  void set_created_at(::int64_t value);

  private:
  ::int64_t _internal_created_at() const;
  void _internal_set_created_at(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:api.v1alpha1.GetRollSessionResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetRollSessionResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::api::v1alpha1::DiceRoll > rolls_;
    ::int64_t expires_at_;
    ::int64_t created_at_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fv1alpha1_2fdice_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetRollSessionResponse_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// RollDiceRequest

// string entity_id = 1 [json_name = "entityId"];
inline void RollDiceRequest::clear_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& RollDiceRequest::entity_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1alpha1.RollDiceRequest.entity_id)
  return _internal_entity_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void RollDiceRequest::set_entity_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.entity_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1alpha1.RollDiceRequest.entity_id)
}
inline ::std::string* PROTOBUF_NONNULL RollDiceRequest::mutable_entity_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_entity_id();
  // @@protoc_insertion_point(field_mutable:api.v1alpha1.RollDiceRequest.entity_id)
  return _s;
}
inline const ::std::string& RollDiceRequest::_internal_entity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_id_.Get();
}
inline void RollDiceRequest::_internal_set_entity_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.entity_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL RollDiceRequest::_internal_mutable_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.entity_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE RollDiceRequest::release_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1alpha1.RollDiceRequest.entity_id)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.entity_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.entity_id_.Set("", GetArena());
  }
  return released;
}
inline void RollDiceRequest::set_allocated_entity_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.entity_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.entity_id_.IsDefault()) {
    _impl_.entity_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:api.v1alpha1.RollDiceRequest.entity_id)
}

// string context = 2 [json_name = "context"];
inline void RollDiceRequest::clear_context() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.context_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& RollDiceRequest::context() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1alpha1.RollDiceRequest.context)
  return _internal_context();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void RollDiceRequest::set_context(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.context_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1alpha1.RollDiceRequest.context)
}
inline ::std::string* PROTOBUF_NONNULL RollDiceRequest::mutable_context()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_context();
  // @@protoc_insertion_point(field_mutable:api.v1alpha1.RollDiceRequest.context)
  return _s;
}
inline const ::std::string& RollDiceRequest::_internal_context() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.context_.Get();
}
inline void RollDiceRequest::_internal_set_context(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.context_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL RollDiceRequest::_internal_mutable_context() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.context_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE RollDiceRequest::release_context() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1alpha1.RollDiceRequest.context)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.context_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.context_.Set("", GetArena());
  }
  return released;
}
inline void RollDiceRequest::set_allocated_context(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.context_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.context_.IsDefault()) {
    _impl_.context_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:api.v1alpha1.RollDiceRequest.context)
}

// string notation = 3 [json_name = "notation"];
inline void RollDiceRequest::clear_notation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.notation_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::std::string& RollDiceRequest::notation() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1alpha1.RollDiceRequest.notation)
  return _internal_notation();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void RollDiceRequest::set_notation(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.notation_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1alpha1.RollDiceRequest.notation)
}
inline ::std::string* PROTOBUF_NONNULL RollDiceRequest::mutable_notation()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_notation();
  // @@protoc_insertion_point(field_mutable:api.v1alpha1.RollDiceRequest.notation)
  return _s;
}
inline const ::std::string& RollDiceRequest::_internal_notation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.notation_.Get();
}
inline void RollDiceRequest::_internal_set_notation(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.notation_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL RollDiceRequest::_internal_mutable_notation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  return _impl_.notation_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE RollDiceRequest::release_notation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1alpha1.RollDiceRequest.notation)
  if ((_impl_._has_bits_[0] & 0x00000004U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004U;
  auto* released = _impl_.notation_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.notation_.Set("", GetArena());
  }
  return released;
}
inline void RollDiceRequest::set_allocated_notation(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  _impl_.notation_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.notation_.IsDefault()) {
    _impl_.notation_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:api.v1alpha1.RollDiceRequest.notation)
}

// int32 count = 4 [json_name = "count"];
inline void RollDiceRequest::clear_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline ::int32_t RollDiceRequest::count() const {
  // @@protoc_insertion_point(field_get:api.v1alpha1.RollDiceRequest.count)
  return _internal_count();
}
inline void RollDiceRequest::set_count(::int32_t value) {
  _internal_set_count(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:api.v1alpha1.RollDiceRequest.count)
}
inline ::int32_t RollDiceRequest::_internal_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.count_;
}
inline void RollDiceRequest::_internal_set_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = value;
}

// int32 ttl_seconds = 5 [json_name = "ttlSeconds"];
inline void RollDiceRequest::clear_ttl_seconds() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ttl_seconds_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020U;
}
inline ::int32_t RollDiceRequest::ttl_seconds() const {
  // @@protoc_insertion_point(field_get:api.v1alpha1.RollDiceRequest.ttl_seconds)
  return _internal_ttl_seconds();
}
inline void RollDiceRequest::set_ttl_seconds(::int32_t value) {
  _internal_set_ttl_seconds(value);
  _impl_._has_bits_[0] |= 0x00000020U;
  // @@protoc_insertion_point(field_set:api.v1alpha1.RollDiceRequest.ttl_seconds)
}
inline ::int32_t RollDiceRequest::_internal_ttl_seconds() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ttl_seconds_;
}
inline void RollDiceRequest::_internal_set_ttl_seconds(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ttl_seconds_ = value;
}

// string modifier_description = 6 [json_name = "modifierDescription"];
inline void RollDiceRequest::clear_modifier_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.modifier_description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline const ::std::string& RollDiceRequest::modifier_description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1alpha1.RollDiceRequest.modifier_description)
  return _internal_modifier_description();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void RollDiceRequest::set_modifier_description(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  _impl_.modifier_description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1alpha1.RollDiceRequest.modifier_description)
}
inline ::std::string* PROTOBUF_NONNULL RollDiceRequest::mutable_modifier_description()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_modifier_description();
  // @@protoc_insertion_point(field_mutable:api.v1alpha1.RollDiceRequest.modifier_description)
  return _s;
}
inline const ::std::string& RollDiceRequest::_internal_modifier_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.modifier_description_.Get();
}
inline void RollDiceRequest::_internal_set_modifier_description(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  _impl_.modifier_description_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL RollDiceRequest::_internal_mutable_modifier_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  return _impl_.modifier_description_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE RollDiceRequest::release_modifier_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1alpha1.RollDiceRequest.modifier_description)
  if ((_impl_._has_bits_[0] & 0x00000008U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008U;
  auto* released = _impl_.modifier_description_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.modifier_description_.Set("", GetArena());
  }
  return released;
}
inline void RollDiceRequest::set_allocated_modifier_description(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }
  _impl_.modifier_description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.modifier_description_.IsDefault()) {
    _impl_.modifier_description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:api.v1alpha1.RollDiceRequest.modifier_description)
}

// -------------------------------------------------------------------

// RollDiceResponse

// repeated .api.v1alpha1.DiceRoll rolls = 1 [json_name = "rolls"];
inline int RollDiceResponse::_internal_rolls_size() const {
  return _internal_rolls().size();
}
inline int RollDiceResponse::rolls_size() const {
  return _internal_rolls_size();
}
inline void RollDiceResponse::clear_rolls() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rolls_.Clear();
}
inline ::api::v1alpha1::DiceRoll* PROTOBUF_NONNULL RollDiceResponse::mutable_rolls(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:api.v1alpha1.RollDiceResponse.rolls)
  return _internal_mutable_rolls()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::api::v1alpha1::DiceRoll>* PROTOBUF_NONNULL RollDiceResponse::mutable_rolls()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:api.v1alpha1.RollDiceResponse.rolls)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_rolls();
}
inline const ::api::v1alpha1::DiceRoll& RollDiceResponse::rolls(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1alpha1.RollDiceResponse.rolls)
  return _internal_rolls().Get(index);
}
inline ::api::v1alpha1::DiceRoll* PROTOBUF_NONNULL RollDiceResponse::add_rolls()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::api::v1alpha1::DiceRoll* _add = _internal_mutable_rolls()->Add();
  // @@protoc_insertion_point(field_add:api.v1alpha1.RollDiceResponse.rolls)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::api::v1alpha1::DiceRoll>& RollDiceResponse::rolls() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:api.v1alpha1.RollDiceResponse.rolls)
  return _internal_rolls();
}
inline const ::google::protobuf::RepeatedPtrField<::api::v1alpha1::DiceRoll>&
RollDiceResponse::_internal_rolls() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rolls_;
}
inline ::google::protobuf::RepeatedPtrField<::api::v1alpha1::DiceRoll>* PROTOBUF_NONNULL
RollDiceResponse::_internal_mutable_rolls() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.rolls_;
}

// int64 expires_at = 2 [json_name = "expiresAt"];
inline void RollDiceResponse::clear_expires_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expires_at_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline ::int64_t RollDiceResponse::expires_at() const {
  // @@protoc_insertion_point(field_get:api.v1alpha1.RollDiceResponse.expires_at)
  return _internal_expires_at();
}
inline void RollDiceResponse::set_expires_at(::int64_t value) {
  _internal_set_expires_at(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:api.v1alpha1.RollDiceResponse.expires_at)
}
inline ::int64_t RollDiceResponse::_internal_expires_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.expires_at_;
}
inline void RollDiceResponse::_internal_set_expires_at(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expires_at_ = value;
}

// -------------------------------------------------------------------

// DiceRoll

// string roll_id = 1 [json_name = "rollId"];
inline void DiceRoll::clear_roll_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.roll_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& DiceRoll::roll_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1alpha1.DiceRoll.roll_id)
  return _internal_roll_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void DiceRoll::set_roll_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.roll_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1alpha1.DiceRoll.roll_id)
}
inline ::std::string* PROTOBUF_NONNULL DiceRoll::mutable_roll_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_roll_id();
  // @@protoc_insertion_point(field_mutable:api.v1alpha1.DiceRoll.roll_id)
  return _s;
}
inline const ::std::string& DiceRoll::_internal_roll_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.roll_id_.Get();
}
inline void DiceRoll::_internal_set_roll_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.roll_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL DiceRoll::_internal_mutable_roll_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.roll_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE DiceRoll::release_roll_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1alpha1.DiceRoll.roll_id)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.roll_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.roll_id_.Set("", GetArena());
  }
  return released;
}
inline void DiceRoll::set_allocated_roll_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.roll_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.roll_id_.IsDefault()) {
    _impl_.roll_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:api.v1alpha1.DiceRoll.roll_id)
}

// string notation = 2 [json_name = "notation"];
inline void DiceRoll::clear_notation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.notation_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& DiceRoll::notation() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1alpha1.DiceRoll.notation)
  return _internal_notation();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void DiceRoll::set_notation(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.notation_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1alpha1.DiceRoll.notation)
}
inline ::std::string* PROTOBUF_NONNULL DiceRoll::mutable_notation()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_notation();
  // @@protoc_insertion_point(field_mutable:api.v1alpha1.DiceRoll.notation)
  return _s;
}
inline const ::std::string& DiceRoll::_internal_notation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.notation_.Get();
}
inline void DiceRoll::_internal_set_notation(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.notation_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL DiceRoll::_internal_mutable_notation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.notation_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE DiceRoll::release_notation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1alpha1.DiceRoll.notation)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.notation_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.notation_.Set("", GetArena());
  }
  return released;
}
inline void DiceRoll::set_allocated_notation(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.notation_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.notation_.IsDefault()) {
    _impl_.notation_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:api.v1alpha1.DiceRoll.notation)
}

// repeated int32 dice = 3 [json_name = "dice"];
inline int DiceRoll::_internal_dice_size() const {
  return _internal_dice().size();
}
inline int DiceRoll::dice_size() const {
  return _internal_dice_size();
}
inline void DiceRoll::clear_dice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dice_.Clear();
}
inline ::int32_t DiceRoll::dice(int index) const {
  // @@protoc_insertion_point(field_get:api.v1alpha1.DiceRoll.dice)
  return _internal_dice().Get(index);
}
inline void DiceRoll::set_dice(int index, ::int32_t value) {
  _internal_mutable_dice()->Set(index, value);
  // @@protoc_insertion_point(field_set:api.v1alpha1.DiceRoll.dice)
}
inline void DiceRoll::add_dice(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_dice()->Add(value);
  // @@protoc_insertion_point(field_add:api.v1alpha1.DiceRoll.dice)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& DiceRoll::dice() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:api.v1alpha1.DiceRoll.dice)
  return _internal_dice();
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL DiceRoll::mutable_dice()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:api.v1alpha1.DiceRoll.dice)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_dice();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
DiceRoll::_internal_dice() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dice_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL
DiceRoll::_internal_mutable_dice() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.dice_;
}

// int32 total = 4 [json_name = "total"];
inline void DiceRoll::clear_total() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::int32_t DiceRoll::total() const {
  // @@protoc_insertion_point(field_get:api.v1alpha1.DiceRoll.total)
  return _internal_total();
}
inline void DiceRoll::set_total(::int32_t value) {
  _internal_set_total(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:api.v1alpha1.DiceRoll.total)
}
inline ::int32_t DiceRoll::_internal_total() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_;
}
inline void DiceRoll::_internal_set_total(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_ = value;
}

// repeated int32 dropped = 5 [json_name = "dropped"];
inline int DiceRoll::_internal_dropped_size() const {
  return _internal_dropped().size();
}
inline int DiceRoll::dropped_size() const {
  return _internal_dropped_size();
}
inline void DiceRoll::clear_dropped() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dropped_.Clear();
}
inline ::int32_t DiceRoll::dropped(int index) const {
  // @@protoc_insertion_point(field_get:api.v1alpha1.DiceRoll.dropped)
  return _internal_dropped().Get(index);
}
inline void DiceRoll::set_dropped(int index, ::int32_t value) {
  _internal_mutable_dropped()->Set(index, value);
  // @@protoc_insertion_point(field_set:api.v1alpha1.DiceRoll.dropped)
}
inline void DiceRoll::add_dropped(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_dropped()->Add(value);
  // @@protoc_insertion_point(field_add:api.v1alpha1.DiceRoll.dropped)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& DiceRoll::dropped() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:api.v1alpha1.DiceRoll.dropped)
  return _internal_dropped();
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL DiceRoll::mutable_dropped()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:api.v1alpha1.DiceRoll.dropped)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_dropped();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
DiceRoll::_internal_dropped() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dropped_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL
DiceRoll::_internal_mutable_dropped() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.dropped_;
}

// string description = 6 [json_name = "description"];
inline void DiceRoll::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::std::string& DiceRoll::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1alpha1.DiceRoll.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void DiceRoll::set_description(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1alpha1.DiceRoll.description)
}
inline ::std::string* PROTOBUF_NONNULL DiceRoll::mutable_description()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:api.v1alpha1.DiceRoll.description)
  return _s;
}
inline const ::std::string& DiceRoll::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void DiceRoll::_internal_set_description(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.description_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL DiceRoll::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  return _impl_.description_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE DiceRoll::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1alpha1.DiceRoll.description)
  if ((_impl_._has_bits_[0] & 0x00000004U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004U;
  auto* released = _impl_.description_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.description_.Set("", GetArena());
  }
  return released;
}
inline void DiceRoll::set_allocated_description(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:api.v1alpha1.DiceRoll.description)
}

// int32 dice_total = 7 [json_name = "diceTotal"];
inline void DiceRoll::clear_dice_total() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dice_total_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline ::int32_t DiceRoll::dice_total() const {
  // @@protoc_insertion_point(field_get:api.v1alpha1.DiceRoll.dice_total)
  return _internal_dice_total();
}
inline void DiceRoll::set_dice_total(::int32_t value) {
  _internal_set_dice_total(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:api.v1alpha1.DiceRoll.dice_total)
}
inline ::int32_t DiceRoll::_internal_dice_total() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dice_total_;
}
inline void DiceRoll::_internal_set_dice_total(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dice_total_ = value;
}

// int32 modifier = 8 [json_name = "modifier"];
inline void DiceRoll::clear_modifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.modifier_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020U;
}
inline ::int32_t DiceRoll::modifier() const {
  // @@protoc_insertion_point(field_get:api.v1alpha1.DiceRoll.modifier)
  return _internal_modifier();
}
inline void DiceRoll::set_modifier(::int32_t value) {
  _internal_set_modifier(value);
  _impl_._has_bits_[0] |= 0x00000020U;
  // @@protoc_insertion_point(field_set:api.v1alpha1.DiceRoll.modifier)
}
inline ::int32_t DiceRoll::_internal_modifier() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.modifier_;
}
inline void DiceRoll::_internal_set_modifier(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.modifier_ = value;
}

// -------------------------------------------------------------------

// GetRollSessionRequest

// string entity_id = 1 [json_name = "entityId"];
inline void GetRollSessionRequest::clear_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& GetRollSessionRequest::entity_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1alpha1.GetRollSessionRequest.entity_id)
  return _internal_entity_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetRollSessionRequest::set_entity_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.entity_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1alpha1.GetRollSessionRequest.entity_id)
}
inline ::std::string* PROTOBUF_NONNULL GetRollSessionRequest::mutable_entity_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_entity_id();
  // @@protoc_insertion_point(field_mutable:api.v1alpha1.GetRollSessionRequest.entity_id)
  return _s;
}
inline const ::std::string& GetRollSessionRequest::_internal_entity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_id_.Get();
}
inline void GetRollSessionRequest::_internal_set_entity_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.entity_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetRollSessionRequest::_internal_mutable_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.entity_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetRollSessionRequest::release_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1alpha1.GetRollSessionRequest.entity_id)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.entity_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.entity_id_.Set("", GetArena());
  }
  return released;
}
inline void GetRollSessionRequest::set_allocated_entity_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.entity_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.entity_id_.IsDefault()) {
    _impl_.entity_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:api.v1alpha1.GetRollSessionRequest.entity_id)
}

// string context = 2 [json_name = "context"];
inline void GetRollSessionRequest::clear_context() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.context_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& GetRollSessionRequest::context() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1alpha1.GetRollSessionRequest.context)
  return _internal_context();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetRollSessionRequest::set_context(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.context_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1alpha1.GetRollSessionRequest.context)
}
inline ::std::string* PROTOBUF_NONNULL GetRollSessionRequest::mutable_context()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_context();
  // @@protoc_insertion_point(field_mutable:api.v1alpha1.GetRollSessionRequest.context)
  return _s;
}
inline const ::std::string& GetRollSessionRequest::_internal_context() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.context_.Get();
}
inline void GetRollSessionRequest::_internal_set_context(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.context_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetRollSessionRequest::_internal_mutable_context() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.context_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetRollSessionRequest::release_context() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1alpha1.GetRollSessionRequest.context)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.context_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.context_.Set("", GetArena());
  }
  return released;
}
inline void GetRollSessionRequest::set_allocated_context(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.context_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.context_.IsDefault()) {
    _impl_.context_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:api.v1alpha1.GetRollSessionRequest.context)
}

// -------------------------------------------------------------------

// GetRollSessionResponse

// repeated .api.v1alpha1.DiceRoll rolls = 1 [json_name = "rolls"];
inline int GetRollSessionResponse::_internal_rolls_size() const {
  return _internal_rolls().size();
}
inline int GetRollSessionResponse::rolls_size() const {
  return _internal_rolls_size();
}
inline void GetRollSessionResponse::clear_rolls() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rolls_.Clear();
}
inline ::api::v1alpha1::DiceRoll* PROTOBUF_NONNULL GetRollSessionResponse::mutable_rolls(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:api.v1alpha1.GetRollSessionResponse.rolls)
  return _internal_mutable_rolls()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::api::v1alpha1::DiceRoll>* PROTOBUF_NONNULL GetRollSessionResponse::mutable_rolls()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:api.v1alpha1.GetRollSessionResponse.rolls)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_rolls();
}
inline const ::api::v1alpha1::DiceRoll& GetRollSessionResponse::rolls(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1alpha1.GetRollSessionResponse.rolls)
  return _internal_rolls().Get(index);
}
inline ::api::v1alpha1::DiceRoll* PROTOBUF_NONNULL GetRollSessionResponse::add_rolls()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::api::v1alpha1::DiceRoll* _add = _internal_mutable_rolls()->Add();
  // @@protoc_insertion_point(field_add:api.v1alpha1.GetRollSessionResponse.rolls)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::api::v1alpha1::DiceRoll>& GetRollSessionResponse::rolls() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:api.v1alpha1.GetRollSessionResponse.rolls)
  return _internal_rolls();
}
inline const ::google::protobuf::RepeatedPtrField<::api::v1alpha1::DiceRoll>&
GetRollSessionResponse::_internal_rolls() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rolls_;
}
inline ::google::protobuf::RepeatedPtrField<::api::v1alpha1::DiceRoll>* PROTOBUF_NONNULL
GetRollSessionResponse::_internal_mutable_rolls() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.rolls_;
}

// int64 expires_at = 2 [json_name = "expiresAt"];
inline void GetRollSessionResponse::clear_expires_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expires_at_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline ::int64_t GetRollSessionResponse::expires_at() const {
  // @@protoc_insertion_point(field_get:api.v1alpha1.GetRollSessionResponse.expires_at)
  return _internal_expires_at();
}
inline void GetRollSessionResponse::set_expires_at(::int64_t value) {
  _internal_set_expires_at(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:api.v1alpha1.GetRollSessionResponse.expires_at)
}
inline ::int64_t GetRollSessionResponse::_internal_expires_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.expires_at_;
}
inline void GetRollSessionResponse::_internal_set_expires_at(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expires_at_ = value;
}

// int64 created_at = 3 [json_name = "createdAt"];
inline void GetRollSessionResponse::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::int64_t GetRollSessionResponse::created_at() const {
  // @@protoc_insertion_point(field_get:api.v1alpha1.GetRollSessionResponse.created_at)
  return _internal_created_at();
}
inline void GetRollSessionResponse::set_created_at(::int64_t value) {
  _internal_set_created_at(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:api.v1alpha1.GetRollSessionResponse.created_at)
}
inline ::int64_t GetRollSessionResponse::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_at_;
}
inline void GetRollSessionResponse::_internal_set_created_at(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_at_ = value;
}

// -------------------------------------------------------------------

// ClearRollSessionRequest

// string entity_id = 1 [json_name = "entityId"];
inline void ClearRollSessionRequest::clear_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& ClearRollSessionRequest::entity_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1alpha1.ClearRollSessionRequest.entity_id)
  return _internal_entity_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ClearRollSessionRequest::set_entity_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.entity_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1alpha1.ClearRollSessionRequest.entity_id)
}
inline ::std::string* PROTOBUF_NONNULL ClearRollSessionRequest::mutable_entity_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_entity_id();
  // @@protoc_insertion_point(field_mutable:api.v1alpha1.ClearRollSessionRequest.entity_id)
  return _s;
}
inline const ::std::string& ClearRollSessionRequest::_internal_entity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_id_.Get();
}
inline void ClearRollSessionRequest::_internal_set_entity_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.entity_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ClearRollSessionRequest::_internal_mutable_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.entity_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ClearRollSessionRequest::release_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1alpha1.ClearRollSessionRequest.entity_id)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.entity_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.entity_id_.Set("", GetArena());
  }
  return released;
}
inline void ClearRollSessionRequest::set_allocated_entity_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.entity_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.entity_id_.IsDefault()) {
    _impl_.entity_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:api.v1alpha1.ClearRollSessionRequest.entity_id)
}

// string context = 2 [json_name = "context"];
inline void ClearRollSessionRequest::clear_context() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.context_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& ClearRollSessionRequest::context() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1alpha1.ClearRollSessionRequest.context)
  return _internal_context();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ClearRollSessionRequest::set_context(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.context_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1alpha1.ClearRollSessionRequest.context)
}
inline ::std::string* PROTOBUF_NONNULL ClearRollSessionRequest::mutable_context()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_context();
  // @@protoc_insertion_point(field_mutable:api.v1alpha1.ClearRollSessionRequest.context)
  return _s;
}
inline const ::std::string& ClearRollSessionRequest::_internal_context() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.context_.Get();
}
inline void ClearRollSessionRequest::_internal_set_context(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.context_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ClearRollSessionRequest::_internal_mutable_context() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.context_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ClearRollSessionRequest::release_context() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1alpha1.ClearRollSessionRequest.context)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.context_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.context_.Set("", GetArena());
  }
  return released;
}
inline void ClearRollSessionRequest::set_allocated_context(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.context_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.context_.IsDefault()) {
    _impl_.context_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:api.v1alpha1.ClearRollSessionRequest.context)
}

// -------------------------------------------------------------------

// ClearRollSessionResponse

// string message = 1 [json_name = "message"];
inline void ClearRollSessionResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& ClearRollSessionResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:api.v1alpha1.ClearRollSessionResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ClearRollSessionResponse::set_message(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:api.v1alpha1.ClearRollSessionResponse.message)
}
inline ::std::string* PROTOBUF_NONNULL ClearRollSessionResponse::mutable_message()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:api.v1alpha1.ClearRollSessionResponse.message)
  return _s;
}
inline const ::std::string& ClearRollSessionResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void ClearRollSessionResponse::_internal_set_message(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.message_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ClearRollSessionResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.message_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ClearRollSessionResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:api.v1alpha1.ClearRollSessionResponse.message)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.message_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.message_.Set("", GetArena());
  }
  return released;
}
inline void ClearRollSessionResponse::set_allocated_message(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:api.v1alpha1.ClearRollSessionResponse.message)
}

// int32 rolls_cleared = 2 [json_name = "rollsCleared"];
inline void ClearRollSessionResponse::clear_rolls_cleared() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rolls_cleared_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::int32_t ClearRollSessionResponse::rolls_cleared() const {
  // @@protoc_insertion_point(field_get:api.v1alpha1.ClearRollSessionResponse.rolls_cleared)
  return _internal_rolls_cleared();
}
inline void ClearRollSessionResponse::set_rolls_cleared(::int32_t value) {
  _internal_set_rolls_cleared(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:api.v1alpha1.ClearRollSessionResponse.rolls_cleared)
}
inline ::int32_t ClearRollSessionResponse::_internal_rolls_cleared() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rolls_cleared_;
}
inline void ClearRollSessionResponse::_internal_set_rolls_cleared(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rolls_cleared_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace api


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // api_2fv1alpha1_2fdice_2eproto_2epb_2eh
