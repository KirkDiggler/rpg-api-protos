// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             (unknown)
// source: api/v1alpha1/room_environments.proto

package apiv1alpha1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	EnvironmentService_GenerateRoom_FullMethodName       = "/api.v1alpha1.EnvironmentService/GenerateRoom"
	EnvironmentService_GetRoomDetails_FullMethodName     = "/api.v1alpha1.EnvironmentService/GetRoomDetails"
	EnvironmentService_ListRooms_FullMethodName          = "/api.v1alpha1.EnvironmentService/ListRooms"
	EnvironmentService_UpdateRoom_FullMethodName         = "/api.v1alpha1.EnvironmentService/UpdateRoom"
	EnvironmentService_DeleteRoom_FullMethodName         = "/api.v1alpha1.EnvironmentService/DeleteRoom"
	EnvironmentService_ValidateRoomConfig_FullMethodName = "/api.v1alpha1.EnvironmentService/ValidateRoomConfig"
	EnvironmentService_ListRoomTemplates_FullMethodName  = "/api.v1alpha1.EnvironmentService/ListRoomTemplates"
	EnvironmentService_CreateRoomTemplate_FullMethodName = "/api.v1alpha1.EnvironmentService/CreateRoomTemplate"
)

// EnvironmentServiceClient is the client API for EnvironmentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// Environment generation service for room layout and structure
// Handles room creation, configuration, and basic CRUD operations
type EnvironmentServiceClient interface {
	// Generate a new room environment
	GenerateRoom(ctx context.Context, in *GenerateRoomRequest, opts ...grpc.CallOption) (*GenerateRoomResponse, error)
	// Get details of an existing room
	GetRoomDetails(ctx context.Context, in *GetRoomDetailsRequest, opts ...grpc.CallOption) (*GetRoomDetailsResponse, error)
	// List rooms with filtering and pagination
	ListRooms(ctx context.Context, in *ListRoomsRequest, opts ...grpc.CallOption) (*ListRoomsResponse, error)
	// Update room configuration (regenerates structure)
	UpdateRoom(ctx context.Context, in *UpdateRoomRequest, opts ...grpc.CallOption) (*UpdateRoomResponse, error)
	// Delete a room
	DeleteRoom(ctx context.Context, in *DeleteRoomRequest, opts ...grpc.CallOption) (*DeleteRoomResponse, error)
	// Validate room configuration before generation
	ValidateRoomConfig(ctx context.Context, in *ValidateRoomConfigRequest, opts ...grpc.CallOption) (*ValidateRoomConfigResponse, error)
	// Get room generation templates
	ListRoomTemplates(ctx context.Context, in *ListRoomTemplatesRequest, opts ...grpc.CallOption) (*ListRoomTemplatesResponse, error)
	// Create custom room template
	CreateRoomTemplate(ctx context.Context, in *CreateRoomTemplateRequest, opts ...grpc.CallOption) (*CreateRoomTemplateResponse, error)
}

type environmentServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewEnvironmentServiceClient(cc grpc.ClientConnInterface) EnvironmentServiceClient {
	return &environmentServiceClient{cc}
}

func (c *environmentServiceClient) GenerateRoom(ctx context.Context, in *GenerateRoomRequest, opts ...grpc.CallOption) (*GenerateRoomResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GenerateRoomResponse)
	err := c.cc.Invoke(ctx, EnvironmentService_GenerateRoom_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *environmentServiceClient) GetRoomDetails(ctx context.Context, in *GetRoomDetailsRequest, opts ...grpc.CallOption) (*GetRoomDetailsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetRoomDetailsResponse)
	err := c.cc.Invoke(ctx, EnvironmentService_GetRoomDetails_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *environmentServiceClient) ListRooms(ctx context.Context, in *ListRoomsRequest, opts ...grpc.CallOption) (*ListRoomsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListRoomsResponse)
	err := c.cc.Invoke(ctx, EnvironmentService_ListRooms_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *environmentServiceClient) UpdateRoom(ctx context.Context, in *UpdateRoomRequest, opts ...grpc.CallOption) (*UpdateRoomResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateRoomResponse)
	err := c.cc.Invoke(ctx, EnvironmentService_UpdateRoom_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *environmentServiceClient) DeleteRoom(ctx context.Context, in *DeleteRoomRequest, opts ...grpc.CallOption) (*DeleteRoomResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DeleteRoomResponse)
	err := c.cc.Invoke(ctx, EnvironmentService_DeleteRoom_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *environmentServiceClient) ValidateRoomConfig(ctx context.Context, in *ValidateRoomConfigRequest, opts ...grpc.CallOption) (*ValidateRoomConfigResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ValidateRoomConfigResponse)
	err := c.cc.Invoke(ctx, EnvironmentService_ValidateRoomConfig_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *environmentServiceClient) ListRoomTemplates(ctx context.Context, in *ListRoomTemplatesRequest, opts ...grpc.CallOption) (*ListRoomTemplatesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListRoomTemplatesResponse)
	err := c.cc.Invoke(ctx, EnvironmentService_ListRoomTemplates_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *environmentServiceClient) CreateRoomTemplate(ctx context.Context, in *CreateRoomTemplateRequest, opts ...grpc.CallOption) (*CreateRoomTemplateResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateRoomTemplateResponse)
	err := c.cc.Invoke(ctx, EnvironmentService_CreateRoomTemplate_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EnvironmentServiceServer is the server API for EnvironmentService service.
// All implementations should embed UnimplementedEnvironmentServiceServer
// for forward compatibility.
//
// Environment generation service for room layout and structure
// Handles room creation, configuration, and basic CRUD operations
type EnvironmentServiceServer interface {
	// Generate a new room environment
	GenerateRoom(context.Context, *GenerateRoomRequest) (*GenerateRoomResponse, error)
	// Get details of an existing room
	GetRoomDetails(context.Context, *GetRoomDetailsRequest) (*GetRoomDetailsResponse, error)
	// List rooms with filtering and pagination
	ListRooms(context.Context, *ListRoomsRequest) (*ListRoomsResponse, error)
	// Update room configuration (regenerates structure)
	UpdateRoom(context.Context, *UpdateRoomRequest) (*UpdateRoomResponse, error)
	// Delete a room
	DeleteRoom(context.Context, *DeleteRoomRequest) (*DeleteRoomResponse, error)
	// Validate room configuration before generation
	ValidateRoomConfig(context.Context, *ValidateRoomConfigRequest) (*ValidateRoomConfigResponse, error)
	// Get room generation templates
	ListRoomTemplates(context.Context, *ListRoomTemplatesRequest) (*ListRoomTemplatesResponse, error)
	// Create custom room template
	CreateRoomTemplate(context.Context, *CreateRoomTemplateRequest) (*CreateRoomTemplateResponse, error)
}

// UnimplementedEnvironmentServiceServer should be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedEnvironmentServiceServer struct{}

func (UnimplementedEnvironmentServiceServer) GenerateRoom(context.Context, *GenerateRoomRequest) (*GenerateRoomResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateRoom not implemented")
}
func (UnimplementedEnvironmentServiceServer) GetRoomDetails(context.Context, *GetRoomDetailsRequest) (*GetRoomDetailsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRoomDetails not implemented")
}
func (UnimplementedEnvironmentServiceServer) ListRooms(context.Context, *ListRoomsRequest) (*ListRoomsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRooms not implemented")
}
func (UnimplementedEnvironmentServiceServer) UpdateRoom(context.Context, *UpdateRoomRequest) (*UpdateRoomResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRoom not implemented")
}
func (UnimplementedEnvironmentServiceServer) DeleteRoom(context.Context, *DeleteRoomRequest) (*DeleteRoomResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRoom not implemented")
}
func (UnimplementedEnvironmentServiceServer) ValidateRoomConfig(context.Context, *ValidateRoomConfigRequest) (*ValidateRoomConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateRoomConfig not implemented")
}
func (UnimplementedEnvironmentServiceServer) ListRoomTemplates(context.Context, *ListRoomTemplatesRequest) (*ListRoomTemplatesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRoomTemplates not implemented")
}
func (UnimplementedEnvironmentServiceServer) CreateRoomTemplate(context.Context, *CreateRoomTemplateRequest) (*CreateRoomTemplateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRoomTemplate not implemented")
}
func (UnimplementedEnvironmentServiceServer) testEmbeddedByValue() {}

// UnsafeEnvironmentServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to EnvironmentServiceServer will
// result in compilation errors.
type UnsafeEnvironmentServiceServer interface {
	mustEmbedUnimplementedEnvironmentServiceServer()
}

func RegisterEnvironmentServiceServer(s grpc.ServiceRegistrar, srv EnvironmentServiceServer) {
	// If the following call pancis, it indicates UnimplementedEnvironmentServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&EnvironmentService_ServiceDesc, srv)
}

func _EnvironmentService_GenerateRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateRoomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnvironmentServiceServer).GenerateRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: EnvironmentService_GenerateRoom_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnvironmentServiceServer).GenerateRoom(ctx, req.(*GenerateRoomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EnvironmentService_GetRoomDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRoomDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnvironmentServiceServer).GetRoomDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: EnvironmentService_GetRoomDetails_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnvironmentServiceServer).GetRoomDetails(ctx, req.(*GetRoomDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EnvironmentService_ListRooms_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRoomsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnvironmentServiceServer).ListRooms(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: EnvironmentService_ListRooms_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnvironmentServiceServer).ListRooms(ctx, req.(*ListRoomsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EnvironmentService_UpdateRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRoomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnvironmentServiceServer).UpdateRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: EnvironmentService_UpdateRoom_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnvironmentServiceServer).UpdateRoom(ctx, req.(*UpdateRoomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EnvironmentService_DeleteRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRoomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnvironmentServiceServer).DeleteRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: EnvironmentService_DeleteRoom_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnvironmentServiceServer).DeleteRoom(ctx, req.(*DeleteRoomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EnvironmentService_ValidateRoomConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateRoomConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnvironmentServiceServer).ValidateRoomConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: EnvironmentService_ValidateRoomConfig_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnvironmentServiceServer).ValidateRoomConfig(ctx, req.(*ValidateRoomConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EnvironmentService_ListRoomTemplates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRoomTemplatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnvironmentServiceServer).ListRoomTemplates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: EnvironmentService_ListRoomTemplates_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnvironmentServiceServer).ListRoomTemplates(ctx, req.(*ListRoomTemplatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EnvironmentService_CreateRoomTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRoomTemplateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnvironmentServiceServer).CreateRoomTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: EnvironmentService_CreateRoomTemplate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnvironmentServiceServer).CreateRoomTemplate(ctx, req.(*CreateRoomTemplateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// EnvironmentService_ServiceDesc is the grpc.ServiceDesc for EnvironmentService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var EnvironmentService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "api.v1alpha1.EnvironmentService",
	HandlerType: (*EnvironmentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GenerateRoom",
			Handler:    _EnvironmentService_GenerateRoom_Handler,
		},
		{
			MethodName: "GetRoomDetails",
			Handler:    _EnvironmentService_GetRoomDetails_Handler,
		},
		{
			MethodName: "ListRooms",
			Handler:    _EnvironmentService_ListRooms_Handler,
		},
		{
			MethodName: "UpdateRoom",
			Handler:    _EnvironmentService_UpdateRoom_Handler,
		},
		{
			MethodName: "DeleteRoom",
			Handler:    _EnvironmentService_DeleteRoom_Handler,
		},
		{
			MethodName: "ValidateRoomConfig",
			Handler:    _EnvironmentService_ValidateRoomConfig_Handler,
		},
		{
			MethodName: "ListRoomTemplates",
			Handler:    _EnvironmentService_ListRoomTemplates_Handler,
		},
		{
			MethodName: "CreateRoomTemplate",
			Handler:    _EnvironmentService_CreateRoomTemplate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/v1alpha1/room_environments.proto",
}
