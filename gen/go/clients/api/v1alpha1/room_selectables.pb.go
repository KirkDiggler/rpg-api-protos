// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api/v1alpha1/room_selectables.proto

package apiv1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Types of selection tables
type SelectionTableType int32

const (
	SelectionTableType_SELECTION_TABLE_TYPE_UNSPECIFIED SelectionTableType = 0
	SelectionTableType_SELECTION_TABLE_TYPE_WEIGHTED    SelectionTableType = 1 // Weighted random selection
	SelectionTableType_SELECTION_TABLE_TYPE_DICE_RANGE  SelectionTableType = 2 // Dice roll ranges (1-10, 11-20, etc.)
	SelectionTableType_SELECTION_TABLE_TYPE_SEQUENTIAL  SelectionTableType = 3 // Sequential selection
	SelectionTableType_SELECTION_TABLE_TYPE_CONDITIONAL SelectionTableType = 4 // Conditional based on parameters
	SelectionTableType_SELECTION_TABLE_TYPE_NESTED      SelectionTableType = 5 // Contains references to other tables
)

// Enum value maps for SelectionTableType.
var (
	SelectionTableType_name = map[int32]string{
		0: "SELECTION_TABLE_TYPE_UNSPECIFIED",
		1: "SELECTION_TABLE_TYPE_WEIGHTED",
		2: "SELECTION_TABLE_TYPE_DICE_RANGE",
		3: "SELECTION_TABLE_TYPE_SEQUENTIAL",
		4: "SELECTION_TABLE_TYPE_CONDITIONAL",
		5: "SELECTION_TABLE_TYPE_NESTED",
	}
	SelectionTableType_value = map[string]int32{
		"SELECTION_TABLE_TYPE_UNSPECIFIED": 0,
		"SELECTION_TABLE_TYPE_WEIGHTED":    1,
		"SELECTION_TABLE_TYPE_DICE_RANGE":  2,
		"SELECTION_TABLE_TYPE_SEQUENTIAL":  3,
		"SELECTION_TABLE_TYPE_CONDITIONAL": 4,
		"SELECTION_TABLE_TYPE_NESTED":      5,
	}
)

func (x SelectionTableType) Enum() *SelectionTableType {
	p := new(SelectionTableType)
	*p = x
	return p
}

func (x SelectionTableType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SelectionTableType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1alpha1_room_selectables_proto_enumTypes[0].Descriptor()
}

func (SelectionTableType) Type() protoreflect.EnumType {
	return &file_api_v1alpha1_room_selectables_proto_enumTypes[0]
}

func (x SelectionTableType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SelectionTableType.Descriptor instead.
func (SelectionTableType) EnumDescriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{0}
}

// Types of table entry results
type TableEntryResultType int32

const (
	TableEntryResultType_TABLE_ENTRY_RESULT_TYPE_UNSPECIFIED  TableEntryResultType = 0
	TableEntryResultType_TABLE_ENTRY_RESULT_TYPE_ITEM         TableEntryResultType = 1 // Item or loot
	TableEntryResultType_TABLE_ENTRY_RESULT_TYPE_ENTITY       TableEntryResultType = 2 // Monster or NPC
	TableEntryResultType_TABLE_ENTRY_RESULT_TYPE_NESTED_TABLE TableEntryResultType = 3 // Roll on another table
	TableEntryResultType_TABLE_ENTRY_RESULT_TYPE_TEXT         TableEntryResultType = 4 // Text description/event
	TableEntryResultType_TABLE_ENTRY_RESULT_TYPE_EFFECT       TableEntryResultType = 5 // Game effect or spell
	TableEntryResultType_TABLE_ENTRY_RESULT_TYPE_MULTIPLE     TableEntryResultType = 6 // Multiple results combined
)

// Enum value maps for TableEntryResultType.
var (
	TableEntryResultType_name = map[int32]string{
		0: "TABLE_ENTRY_RESULT_TYPE_UNSPECIFIED",
		1: "TABLE_ENTRY_RESULT_TYPE_ITEM",
		2: "TABLE_ENTRY_RESULT_TYPE_ENTITY",
		3: "TABLE_ENTRY_RESULT_TYPE_NESTED_TABLE",
		4: "TABLE_ENTRY_RESULT_TYPE_TEXT",
		5: "TABLE_ENTRY_RESULT_TYPE_EFFECT",
		6: "TABLE_ENTRY_RESULT_TYPE_MULTIPLE",
	}
	TableEntryResultType_value = map[string]int32{
		"TABLE_ENTRY_RESULT_TYPE_UNSPECIFIED":  0,
		"TABLE_ENTRY_RESULT_TYPE_ITEM":         1,
		"TABLE_ENTRY_RESULT_TYPE_ENTITY":       2,
		"TABLE_ENTRY_RESULT_TYPE_NESTED_TABLE": 3,
		"TABLE_ENTRY_RESULT_TYPE_TEXT":         4,
		"TABLE_ENTRY_RESULT_TYPE_EFFECT":       5,
		"TABLE_ENTRY_RESULT_TYPE_MULTIPLE":     6,
	}
)

func (x TableEntryResultType) Enum() *TableEntryResultType {
	p := new(TableEntryResultType)
	*p = x
	return p
}

func (x TableEntryResultType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TableEntryResultType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1alpha1_room_selectables_proto_enumTypes[1].Descriptor()
}

func (TableEntryResultType) Type() protoreflect.EnumType {
	return &file_api_v1alpha1_room_selectables_proto_enumTypes[1]
}

func (x TableEntryResultType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TableEntryResultType.Descriptor instead.
func (TableEntryResultType) EnumDescriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{1}
}

// Sort direction for tables
type TableSortDirection int32

const (
	TableSortDirection_TABLE_SORT_DIRECTION_UNSPECIFIED TableSortDirection = 0
	TableSortDirection_TABLE_SORT_DIRECTION_ASC         TableSortDirection = 1
	TableSortDirection_TABLE_SORT_DIRECTION_DESC        TableSortDirection = 2
)

// Enum value maps for TableSortDirection.
var (
	TableSortDirection_name = map[int32]string{
		0: "TABLE_SORT_DIRECTION_UNSPECIFIED",
		1: "TABLE_SORT_DIRECTION_ASC",
		2: "TABLE_SORT_DIRECTION_DESC",
	}
	TableSortDirection_value = map[string]int32{
		"TABLE_SORT_DIRECTION_UNSPECIFIED": 0,
		"TABLE_SORT_DIRECTION_ASC":         1,
		"TABLE_SORT_DIRECTION_DESC":        2,
	}
)

func (x TableSortDirection) Enum() *TableSortDirection {
	p := new(TableSortDirection)
	*p = x
	return p
}

func (x TableSortDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TableSortDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1alpha1_room_selectables_proto_enumTypes[2].Descriptor()
}

func (TableSortDirection) Type() protoreflect.EnumType {
	return &file_api_v1alpha1_room_selectables_proto_enumTypes[2]
}

func (x TableSortDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TableSortDirection.Descriptor instead.
func (TableSortDirection) EnumDescriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{2}
}

// Available sort fields for tables
type TableSortField int32

const (
	TableSortField_TABLE_SORT_FIELD_UNSPECIFIED TableSortField = 0
	TableSortField_TABLE_SORT_FIELD_NAME        TableSortField = 1
	TableSortField_TABLE_SORT_FIELD_CREATED_AT  TableSortField = 2
	TableSortField_TABLE_SORT_FIELD_UPDATED_AT  TableSortField = 3
	TableSortField_TABLE_SORT_FIELD_USAGE_COUNT TableSortField = 4
	TableSortField_TABLE_SORT_FIELD_CATEGORY    TableSortField = 5
)

// Enum value maps for TableSortField.
var (
	TableSortField_name = map[int32]string{
		0: "TABLE_SORT_FIELD_UNSPECIFIED",
		1: "TABLE_SORT_FIELD_NAME",
		2: "TABLE_SORT_FIELD_CREATED_AT",
		3: "TABLE_SORT_FIELD_UPDATED_AT",
		4: "TABLE_SORT_FIELD_USAGE_COUNT",
		5: "TABLE_SORT_FIELD_CATEGORY",
	}
	TableSortField_value = map[string]int32{
		"TABLE_SORT_FIELD_UNSPECIFIED": 0,
		"TABLE_SORT_FIELD_NAME":        1,
		"TABLE_SORT_FIELD_CREATED_AT":  2,
		"TABLE_SORT_FIELD_UPDATED_AT":  3,
		"TABLE_SORT_FIELD_USAGE_COUNT": 4,
		"TABLE_SORT_FIELD_CATEGORY":    5,
	}
)

func (x TableSortField) Enum() *TableSortField {
	p := new(TableSortField)
	*p = x
	return p
}

func (x TableSortField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TableSortField) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1alpha1_room_selectables_proto_enumTypes[3].Descriptor()
}

func (TableSortField) Type() protoreflect.EnumType {
	return &file_api_v1alpha1_room_selectables_proto_enumTypes[3]
}

func (x TableSortField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TableSortField.Descriptor instead.
func (TableSortField) EnumDescriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{3}
}

// Result of a table validation check
type TableValidationCheckResult int32

const (
	TableValidationCheckResult_TABLE_VALIDATION_CHECK_RESULT_UNSPECIFIED TableValidationCheckResult = 0
	TableValidationCheckResult_TABLE_VALIDATION_CHECK_RESULT_PASS        TableValidationCheckResult = 1
	TableValidationCheckResult_TABLE_VALIDATION_CHECK_RESULT_FAIL        TableValidationCheckResult = 2
	TableValidationCheckResult_TABLE_VALIDATION_CHECK_RESULT_WARNING     TableValidationCheckResult = 3
	TableValidationCheckResult_TABLE_VALIDATION_CHECK_RESULT_SKIP        TableValidationCheckResult = 4
)

// Enum value maps for TableValidationCheckResult.
var (
	TableValidationCheckResult_name = map[int32]string{
		0: "TABLE_VALIDATION_CHECK_RESULT_UNSPECIFIED",
		1: "TABLE_VALIDATION_CHECK_RESULT_PASS",
		2: "TABLE_VALIDATION_CHECK_RESULT_FAIL",
		3: "TABLE_VALIDATION_CHECK_RESULT_WARNING",
		4: "TABLE_VALIDATION_CHECK_RESULT_SKIP",
	}
	TableValidationCheckResult_value = map[string]int32{
		"TABLE_VALIDATION_CHECK_RESULT_UNSPECIFIED": 0,
		"TABLE_VALIDATION_CHECK_RESULT_PASS":        1,
		"TABLE_VALIDATION_CHECK_RESULT_FAIL":        2,
		"TABLE_VALIDATION_CHECK_RESULT_WARNING":     3,
		"TABLE_VALIDATION_CHECK_RESULT_SKIP":        4,
	}
)

func (x TableValidationCheckResult) Enum() *TableValidationCheckResult {
	p := new(TableValidationCheckResult)
	*p = x
	return p
}

func (x TableValidationCheckResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TableValidationCheckResult) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1alpha1_room_selectables_proto_enumTypes[4].Descriptor()
}

func (TableValidationCheckResult) Type() protoreflect.EnumType {
	return &file_api_v1alpha1_room_selectables_proto_enumTypes[4]
}

func (x TableValidationCheckResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TableValidationCheckResult.Descriptor instead.
func (TableValidationCheckResult) EnumDescriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{4}
}

// Severity of table validation issues
type TableValidationSeverity int32

const (
	TableValidationSeverity_TABLE_VALIDATION_SEVERITY_UNSPECIFIED TableValidationSeverity = 0
	TableValidationSeverity_TABLE_VALIDATION_SEVERITY_INFO        TableValidationSeverity = 1
	TableValidationSeverity_TABLE_VALIDATION_SEVERITY_WARNING     TableValidationSeverity = 2
	TableValidationSeverity_TABLE_VALIDATION_SEVERITY_ERROR       TableValidationSeverity = 3
	TableValidationSeverity_TABLE_VALIDATION_SEVERITY_CRITICAL    TableValidationSeverity = 4
)

// Enum value maps for TableValidationSeverity.
var (
	TableValidationSeverity_name = map[int32]string{
		0: "TABLE_VALIDATION_SEVERITY_UNSPECIFIED",
		1: "TABLE_VALIDATION_SEVERITY_INFO",
		2: "TABLE_VALIDATION_SEVERITY_WARNING",
		3: "TABLE_VALIDATION_SEVERITY_ERROR",
		4: "TABLE_VALIDATION_SEVERITY_CRITICAL",
	}
	TableValidationSeverity_value = map[string]int32{
		"TABLE_VALIDATION_SEVERITY_UNSPECIFIED": 0,
		"TABLE_VALIDATION_SEVERITY_INFO":        1,
		"TABLE_VALIDATION_SEVERITY_WARNING":     2,
		"TABLE_VALIDATION_SEVERITY_ERROR":       3,
		"TABLE_VALIDATION_SEVERITY_CRITICAL":    4,
	}
)

func (x TableValidationSeverity) Enum() *TableValidationSeverity {
	p := new(TableValidationSeverity)
	*p = x
	return p
}

func (x TableValidationSeverity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TableValidationSeverity) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1alpha1_room_selectables_proto_enumTypes[5].Descriptor()
}

func (TableValidationSeverity) Type() protoreflect.EnumType {
	return &file_api_v1alpha1_room_selectables_proto_enumTypes[5]
}

func (x TableValidationSeverity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TableValidationSeverity.Descriptor instead.
func (TableValidationSeverity) EnumDescriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{5}
}

// Level of statistical detail
type StatisticsDetail int32

const (
	StatisticsDetail_STATISTICS_DETAIL_UNSPECIFIED   StatisticsDetail = 0
	StatisticsDetail_STATISTICS_DETAIL_BASIC         StatisticsDetail = 1 // Basic usage stats only
	StatisticsDetail_STATISTICS_DETAIL_DETAILED      StatisticsDetail = 2 // Include distributions and frequency
	StatisticsDetail_STATISTICS_DETAIL_COMPREHENSIVE StatisticsDetail = 3 // Include all available metrics
)

// Enum value maps for StatisticsDetail.
var (
	StatisticsDetail_name = map[int32]string{
		0: "STATISTICS_DETAIL_UNSPECIFIED",
		1: "STATISTICS_DETAIL_BASIC",
		2: "STATISTICS_DETAIL_DETAILED",
		3: "STATISTICS_DETAIL_COMPREHENSIVE",
	}
	StatisticsDetail_value = map[string]int32{
		"STATISTICS_DETAIL_UNSPECIFIED":   0,
		"STATISTICS_DETAIL_BASIC":         1,
		"STATISTICS_DETAIL_DETAILED":      2,
		"STATISTICS_DETAIL_COMPREHENSIVE": 3,
	}
)

func (x StatisticsDetail) Enum() *StatisticsDetail {
	p := new(StatisticsDetail)
	*p = x
	return p
}

func (x StatisticsDetail) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatisticsDetail) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1alpha1_room_selectables_proto_enumTypes[6].Descriptor()
}

func (StatisticsDetail) Type() protoreflect.EnumType {
	return &file_api_v1alpha1_room_selectables_proto_enumTypes[6]
}

func (x StatisticsDetail) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatisticsDetail.Descriptor instead.
func (StatisticsDetail) EnumDescriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{6}
}

// Available export formats
type ExportFormat int32

const (
	ExportFormat_EXPORT_FORMAT_UNSPECIFIED ExportFormat = 0
	ExportFormat_EXPORT_FORMAT_JSON        ExportFormat = 1
	ExportFormat_EXPORT_FORMAT_CSV         ExportFormat = 2
	ExportFormat_EXPORT_FORMAT_XML         ExportFormat = 3
	ExportFormat_EXPORT_FORMAT_YAML        ExportFormat = 4
	ExportFormat_EXPORT_FORMAT_PROTOBUF    ExportFormat = 5
)

// Enum value maps for ExportFormat.
var (
	ExportFormat_name = map[int32]string{
		0: "EXPORT_FORMAT_UNSPECIFIED",
		1: "EXPORT_FORMAT_JSON",
		2: "EXPORT_FORMAT_CSV",
		3: "EXPORT_FORMAT_XML",
		4: "EXPORT_FORMAT_YAML",
		5: "EXPORT_FORMAT_PROTOBUF",
	}
	ExportFormat_value = map[string]int32{
		"EXPORT_FORMAT_UNSPECIFIED": 0,
		"EXPORT_FORMAT_JSON":        1,
		"EXPORT_FORMAT_CSV":         2,
		"EXPORT_FORMAT_XML":         3,
		"EXPORT_FORMAT_YAML":        4,
		"EXPORT_FORMAT_PROTOBUF":    5,
	}
)

func (x ExportFormat) Enum() *ExportFormat {
	p := new(ExportFormat)
	*p = x
	return p
}

func (x ExportFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExportFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1alpha1_room_selectables_proto_enumTypes[7].Descriptor()
}

func (ExportFormat) Type() protoreflect.EnumType {
	return &file_api_v1alpha1_room_selectables_proto_enumTypes[7]
}

func (x ExportFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExportFormat.Descriptor instead.
func (ExportFormat) EnumDescriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{7}
}

// Create selection table request
type CreateSelectionTableRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Table definition
	Table *SelectionTable `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	// Whether to make table public
	IsPublic bool `protobuf:"varint,2,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	// Validation options
	ValidationOptions *TableValidationOptions `protobuf:"bytes,3,opt,name=validation_options,json=validationOptions,proto3" json:"validation_options,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CreateSelectionTableRequest) Reset() {
	*x = CreateSelectionTableRequest{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSelectionTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSelectionTableRequest) ProtoMessage() {}

func (x *CreateSelectionTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSelectionTableRequest.ProtoReflect.Descriptor instead.
func (*CreateSelectionTableRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSelectionTableRequest) GetTable() *SelectionTable {
	if x != nil {
		return x.Table
	}
	return nil
}

func (x *CreateSelectionTableRequest) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *CreateSelectionTableRequest) GetValidationOptions() *TableValidationOptions {
	if x != nil {
		return x.ValidationOptions
	}
	return nil
}

// Selection table definition
type SelectionTable struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Table identifier
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Table name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Table description
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Table category
	Category string `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"` // "loot", "encounter", "treasure", "random_event"
	// Table type
	TableType SelectionTableType `protobuf:"varint,5,opt,name=table_type,json=tableType,proto3,enum=api.v1alpha1.SelectionTableType" json:"table_type,omitempty"`
	// Dice configuration for rolls
	DiceConfig *DiceConfiguration `protobuf:"bytes,6,opt,name=dice_config,json=diceConfig,proto3" json:"dice_config,omitempty"`
	// Table entries
	Entries []*TableEntry `protobuf:"bytes,7,rep,name=entries,proto3" json:"entries,omitempty"`
	// Table metadata
	Metadata *SelectionTableMetadata `protobuf:"bytes,8,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Nested tables that can be referenced
	NestedTableIds []string `protobuf:"bytes,9,rep,name=nested_table_ids,json=nestedTableIds,proto3" json:"nested_table_ids,omitempty"`
	// Table options
	Options       *TableOptions `protobuf:"bytes,10,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SelectionTable) Reset() {
	*x = SelectionTable{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectionTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectionTable) ProtoMessage() {}

func (x *SelectionTable) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectionTable.ProtoReflect.Descriptor instead.
func (*SelectionTable) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{1}
}

func (x *SelectionTable) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SelectionTable) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SelectionTable) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SelectionTable) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *SelectionTable) GetTableType() SelectionTableType {
	if x != nil {
		return x.TableType
	}
	return SelectionTableType_SELECTION_TABLE_TYPE_UNSPECIFIED
}

func (x *SelectionTable) GetDiceConfig() *DiceConfiguration {
	if x != nil {
		return x.DiceConfig
	}
	return nil
}

func (x *SelectionTable) GetEntries() []*TableEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *SelectionTable) GetMetadata() *SelectionTableMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *SelectionTable) GetNestedTableIds() []string {
	if x != nil {
		return x.NestedTableIds
	}
	return nil
}

func (x *SelectionTable) GetOptions() *TableOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

// Dice configuration for table rolls
type DiceConfiguration struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Dice notation (e.g., "1d100", "2d6", "1d20")
	DiceNotation string `protobuf:"bytes,1,opt,name=dice_notation,json=diceNotation,proto3" json:"dice_notation,omitempty"`
	// Modifier to add to roll
	Modifier int32 `protobuf:"varint,2,opt,name=modifier,proto3" json:"modifier,omitempty"`
	// Minimum roll result
	MinRoll int32 `protobuf:"varint,3,opt,name=min_roll,json=minRoll,proto3" json:"min_roll,omitempty"`
	// Maximum roll result
	MaxRoll int32 `protobuf:"varint,4,opt,name=max_roll,json=maxRoll,proto3" json:"max_roll,omitempty"`
	// Whether to reroll on certain results
	RerollOn []int32 `protobuf:"varint,5,rep,packed,name=reroll_on,json=rerollOn,proto3" json:"reroll_on,omitempty"`
	// Whether to explode dice (roll again on max)
	ExplodingDice bool `protobuf:"varint,6,opt,name=exploding_dice,json=explodingDice,proto3" json:"exploding_dice,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiceConfiguration) Reset() {
	*x = DiceConfiguration{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiceConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiceConfiguration) ProtoMessage() {}

func (x *DiceConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiceConfiguration.ProtoReflect.Descriptor instead.
func (*DiceConfiguration) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{2}
}

func (x *DiceConfiguration) GetDiceNotation() string {
	if x != nil {
		return x.DiceNotation
	}
	return ""
}

func (x *DiceConfiguration) GetModifier() int32 {
	if x != nil {
		return x.Modifier
	}
	return 0
}

func (x *DiceConfiguration) GetMinRoll() int32 {
	if x != nil {
		return x.MinRoll
	}
	return 0
}

func (x *DiceConfiguration) GetMaxRoll() int32 {
	if x != nil {
		return x.MaxRoll
	}
	return 0
}

func (x *DiceConfiguration) GetRerollOn() []int32 {
	if x != nil {
		return x.RerollOn
	}
	return nil
}

func (x *DiceConfiguration) GetExplodingDice() bool {
	if x != nil {
		return x.ExplodingDice
	}
	return false
}

// Individual table entry
type TableEntry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Entry identifier
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Entry name/title
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Entry description
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Roll range for dice-based tables
	RollRange *RollRange `protobuf:"bytes,4,opt,name=roll_range,json=rollRange,proto3" json:"roll_range,omitempty"`
	// Weight for weighted tables
	Weight float64 `protobuf:"fixed64,5,opt,name=weight,proto3" json:"weight,omitempty"`
	// Entry result
	Result *TableEntryResult `protobuf:"bytes,6,opt,name=result,proto3" json:"result,omitempty"`
	// Conditions for conditional tables
	Conditions []*EntryCondition `protobuf:"bytes,7,rep,name=conditions,proto3" json:"conditions,omitempty"`
	// Whether this entry can appear multiple times
	AllowDuplicates bool `protobuf:"varint,8,opt,name=allow_duplicates,json=allowDuplicates,proto3" json:"allow_duplicates,omitempty"`
	// Maximum times this entry can be selected
	MaxSelections int32 `protobuf:"varint,9,opt,name=max_selections,json=maxSelections,proto3" json:"max_selections,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TableEntry) Reset() {
	*x = TableEntry{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableEntry) ProtoMessage() {}

func (x *TableEntry) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableEntry.ProtoReflect.Descriptor instead.
func (*TableEntry) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{3}
}

func (x *TableEntry) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TableEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TableEntry) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TableEntry) GetRollRange() *RollRange {
	if x != nil {
		return x.RollRange
	}
	return nil
}

func (x *TableEntry) GetWeight() float64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *TableEntry) GetResult() *TableEntryResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *TableEntry) GetConditions() []*EntryCondition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *TableEntry) GetAllowDuplicates() bool {
	if x != nil {
		return x.AllowDuplicates
	}
	return false
}

func (x *TableEntry) GetMaxSelections() int32 {
	if x != nil {
		return x.MaxSelections
	}
	return 0
}

// Roll range for dice-based entries
type RollRange struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Minimum roll (inclusive)
	Min int32 `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	// Maximum roll (inclusive)
	Max           int32 `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollRange) Reset() {
	*x = RollRange{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollRange) ProtoMessage() {}

func (x *RollRange) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollRange.ProtoReflect.Descriptor instead.
func (*RollRange) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{4}
}

func (x *RollRange) GetMin() int32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *RollRange) GetMax() int32 {
	if x != nil {
		return x.Max
	}
	return 0
}

// Result of a table entry selection
type TableEntryResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Result type
	ResultType TableEntryResultType `protobuf:"varint,1,opt,name=result_type,json=resultType,proto3,enum=api.v1alpha1.TableEntryResultType" json:"result_type,omitempty"`
	// Result data
	//
	// Types that are valid to be assigned to ResultData:
	//
	//	*TableEntryResult_ItemResult
	//	*TableEntryResult_EntityResult
	//	*TableEntryResult_NestedTableResult
	//	*TableEntryResult_TextResult
	//	*TableEntryResult_EffectResult
	//	*TableEntryResult_MultipleResult
	ResultData    isTableEntryResult_ResultData `protobuf_oneof:"result_data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TableEntryResult) Reset() {
	*x = TableEntryResult{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableEntryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableEntryResult) ProtoMessage() {}

func (x *TableEntryResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableEntryResult.ProtoReflect.Descriptor instead.
func (*TableEntryResult) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{5}
}

func (x *TableEntryResult) GetResultType() TableEntryResultType {
	if x != nil {
		return x.ResultType
	}
	return TableEntryResultType_TABLE_ENTRY_RESULT_TYPE_UNSPECIFIED
}

func (x *TableEntryResult) GetResultData() isTableEntryResult_ResultData {
	if x != nil {
		return x.ResultData
	}
	return nil
}

func (x *TableEntryResult) GetItemResult() *ItemResult {
	if x != nil {
		if x, ok := x.ResultData.(*TableEntryResult_ItemResult); ok {
			return x.ItemResult
		}
	}
	return nil
}

func (x *TableEntryResult) GetEntityResult() *EntityResult {
	if x != nil {
		if x, ok := x.ResultData.(*TableEntryResult_EntityResult); ok {
			return x.EntityResult
		}
	}
	return nil
}

func (x *TableEntryResult) GetNestedTableResult() *NestedTableResult {
	if x != nil {
		if x, ok := x.ResultData.(*TableEntryResult_NestedTableResult); ok {
			return x.NestedTableResult
		}
	}
	return nil
}

func (x *TableEntryResult) GetTextResult() *TextResult {
	if x != nil {
		if x, ok := x.ResultData.(*TableEntryResult_TextResult); ok {
			return x.TextResult
		}
	}
	return nil
}

func (x *TableEntryResult) GetEffectResult() *EffectResult {
	if x != nil {
		if x, ok := x.ResultData.(*TableEntryResult_EffectResult); ok {
			return x.EffectResult
		}
	}
	return nil
}

func (x *TableEntryResult) GetMultipleResult() *MultipleResult {
	if x != nil {
		if x, ok := x.ResultData.(*TableEntryResult_MultipleResult); ok {
			return x.MultipleResult
		}
	}
	return nil
}

type isTableEntryResult_ResultData interface {
	isTableEntryResult_ResultData()
}

type TableEntryResult_ItemResult struct {
	ItemResult *ItemResult `protobuf:"bytes,2,opt,name=item_result,json=itemResult,proto3,oneof"`
}

type TableEntryResult_EntityResult struct {
	EntityResult *EntityResult `protobuf:"bytes,3,opt,name=entity_result,json=entityResult,proto3,oneof"`
}

type TableEntryResult_NestedTableResult struct {
	NestedTableResult *NestedTableResult `protobuf:"bytes,4,opt,name=nested_table_result,json=nestedTableResult,proto3,oneof"`
}

type TableEntryResult_TextResult struct {
	TextResult *TextResult `protobuf:"bytes,5,opt,name=text_result,json=textResult,proto3,oneof"`
}

type TableEntryResult_EffectResult struct {
	EffectResult *EffectResult `protobuf:"bytes,6,opt,name=effect_result,json=effectResult,proto3,oneof"`
}

type TableEntryResult_MultipleResult struct {
	MultipleResult *MultipleResult `protobuf:"bytes,7,opt,name=multiple_result,json=multipleResult,proto3,oneof"`
}

func (*TableEntryResult_ItemResult) isTableEntryResult_ResultData() {}

func (*TableEntryResult_EntityResult) isTableEntryResult_ResultData() {}

func (*TableEntryResult_NestedTableResult) isTableEntryResult_ResultData() {}

func (*TableEntryResult_TextResult) isTableEntryResult_ResultData() {}

func (*TableEntryResult_EffectResult) isTableEntryResult_ResultData() {}

func (*TableEntryResult_MultipleResult) isTableEntryResult_ResultData() {}

// Item result from table
type ItemResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Item identifier
	ItemId string `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	// Item name
	ItemName string `protobuf:"bytes,2,opt,name=item_name,json=itemName,proto3" json:"item_name,omitempty"`
	// Item quantity
	Quantity *QuantityRange `protobuf:"bytes,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Item rarity
	Rarity string `protobuf:"bytes,4,opt,name=rarity,proto3" json:"rarity,omitempty"`
	// Item value in gold pieces
	ValueGp int32 `protobuf:"varint,5,opt,name=value_gp,json=valueGp,proto3" json:"value_gp,omitempty"`
	// Item properties
	Properties map[string]string `protobuf:"bytes,6,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Whether item is magical
	IsMagical bool `protobuf:"varint,7,opt,name=is_magical,json=isMagical,proto3" json:"is_magical,omitempty"`
	// Item condition
	Condition     string `protobuf:"bytes,8,opt,name=condition,proto3" json:"condition,omitempty"` // "new", "used", "damaged", "broken"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ItemResult) Reset() {
	*x = ItemResult{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ItemResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemResult) ProtoMessage() {}

func (x *ItemResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemResult.ProtoReflect.Descriptor instead.
func (*ItemResult) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{6}
}

func (x *ItemResult) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *ItemResult) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

func (x *ItemResult) GetQuantity() *QuantityRange {
	if x != nil {
		return x.Quantity
	}
	return nil
}

func (x *ItemResult) GetRarity() string {
	if x != nil {
		return x.Rarity
	}
	return ""
}

func (x *ItemResult) GetValueGp() int32 {
	if x != nil {
		return x.ValueGp
	}
	return 0
}

func (x *ItemResult) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *ItemResult) GetIsMagical() bool {
	if x != nil {
		return x.IsMagical
	}
	return false
}

func (x *ItemResult) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

// Quantity range for items
type QuantityRange struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Minimum quantity
	Min int32 `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	// Maximum quantity
	Max int32 `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
	// Dice notation for quantity (optional)
	DiceNotation  string `protobuf:"bytes,3,opt,name=dice_notation,json=diceNotation,proto3" json:"dice_notation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuantityRange) Reset() {
	*x = QuantityRange{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuantityRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuantityRange) ProtoMessage() {}

func (x *QuantityRange) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuantityRange.ProtoReflect.Descriptor instead.
func (*QuantityRange) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{7}
}

func (x *QuantityRange) GetMin() int32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *QuantityRange) GetMax() int32 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *QuantityRange) GetDiceNotation() string {
	if x != nil {
		return x.DiceNotation
	}
	return ""
}

// Entity result from table
type EntityResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Entity type
	EntityType string `protobuf:"bytes,1,opt,name=entity_type,json=entityType,proto3" json:"entity_type,omitempty"`
	// Entity identifier or template
	EntityId string `protobuf:"bytes,2,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	// Entity name
	EntityName string `protobuf:"bytes,3,opt,name=entity_name,json=entityName,proto3" json:"entity_name,omitempty"`
	// Number of entities
	Quantity *QuantityRange `protobuf:"bytes,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Challenge rating (for monsters)
	ChallengeRating float64 `protobuf:"fixed64,5,opt,name=challenge_rating,json=challengeRating,proto3" json:"challenge_rating,omitempty"`
	// Entity properties
	Properties map[string]string `protobuf:"bytes,6,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Spawn preferences
	SpawnPreferences *EntitySpawnPreferences `protobuf:"bytes,7,opt,name=spawn_preferences,json=spawnPreferences,proto3" json:"spawn_preferences,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *EntityResult) Reset() {
	*x = EntityResult{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntityResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityResult) ProtoMessage() {}

func (x *EntityResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityResult.ProtoReflect.Descriptor instead.
func (*EntityResult) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{8}
}

func (x *EntityResult) GetEntityType() string {
	if x != nil {
		return x.EntityType
	}
	return ""
}

func (x *EntityResult) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *EntityResult) GetEntityName() string {
	if x != nil {
		return x.EntityName
	}
	return ""
}

func (x *EntityResult) GetQuantity() *QuantityRange {
	if x != nil {
		return x.Quantity
	}
	return nil
}

func (x *EntityResult) GetChallengeRating() float64 {
	if x != nil {
		return x.ChallengeRating
	}
	return 0
}

func (x *EntityResult) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *EntityResult) GetSpawnPreferences() *EntitySpawnPreferences {
	if x != nil {
		return x.SpawnPreferences
	}
	return nil
}

// Spawn preferences for entities from tables
type EntitySpawnPreferences struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Preferred spawn locations
	PreferredLocations []string `protobuf:"bytes,1,rep,name=preferred_locations,json=preferredLocations,proto3" json:"preferred_locations,omitempty"` // "corner", "center", "edge", "random"
	// Formation for multiple entities
	Formation string `protobuf:"bytes,2,opt,name=formation,proto3" json:"formation,omitempty"` // "scattered", "grouped", "line", "circle"
	// Behavior settings
	Behavior string `protobuf:"bytes,3,opt,name=behavior,proto3" json:"behavior,omitempty"` // "hostile", "neutral", "friendly", "patrol"
	// Special instructions
	SpecialInstructions string `protobuf:"bytes,4,opt,name=special_instructions,json=specialInstructions,proto3" json:"special_instructions,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *EntitySpawnPreferences) Reset() {
	*x = EntitySpawnPreferences{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntitySpawnPreferences) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntitySpawnPreferences) ProtoMessage() {}

func (x *EntitySpawnPreferences) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntitySpawnPreferences.ProtoReflect.Descriptor instead.
func (*EntitySpawnPreferences) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{9}
}

func (x *EntitySpawnPreferences) GetPreferredLocations() []string {
	if x != nil {
		return x.PreferredLocations
	}
	return nil
}

func (x *EntitySpawnPreferences) GetFormation() string {
	if x != nil {
		return x.Formation
	}
	return ""
}

func (x *EntitySpawnPreferences) GetBehavior() string {
	if x != nil {
		return x.Behavior
	}
	return ""
}

func (x *EntitySpawnPreferences) GetSpecialInstructions() string {
	if x != nil {
		return x.SpecialInstructions
	}
	return ""
}

// Nested table result
type NestedTableResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Table to roll on
	TableId string `protobuf:"bytes,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	// Number of rolls to make
	RollCount int32 `protobuf:"varint,2,opt,name=roll_count,json=rollCount,proto3" json:"roll_count,omitempty"`
	// Modifiers to apply to nested rolls
	Modifiers []*RollModifier `protobuf:"bytes,3,rep,name=modifiers,proto3" json:"modifiers,omitempty"`
	// Whether to combine results
	CombineResults bool `protobuf:"varint,4,opt,name=combine_results,json=combineResults,proto3" json:"combine_results,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *NestedTableResult) Reset() {
	*x = NestedTableResult{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NestedTableResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NestedTableResult) ProtoMessage() {}

func (x *NestedTableResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NestedTableResult.ProtoReflect.Descriptor instead.
func (*NestedTableResult) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{10}
}

func (x *NestedTableResult) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *NestedTableResult) GetRollCount() int32 {
	if x != nil {
		return x.RollCount
	}
	return 0
}

func (x *NestedTableResult) GetModifiers() []*RollModifier {
	if x != nil {
		return x.Modifiers
	}
	return nil
}

func (x *NestedTableResult) GetCombineResults() bool {
	if x != nil {
		return x.CombineResults
	}
	return false
}

// Roll modifier for nested tables
type RollModifier struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Modifier type
	ModifierType string `protobuf:"bytes,1,opt,name=modifier_type,json=modifierType,proto3" json:"modifier_type,omitempty"` // "add", "multiply", "reroll_on", "advantage", "disadvantage"
	// Modifier value
	Value float64 `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	// Condition for when to apply modifier
	Condition     string `protobuf:"bytes,3,opt,name=condition,proto3" json:"condition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollModifier) Reset() {
	*x = RollModifier{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollModifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollModifier) ProtoMessage() {}

func (x *RollModifier) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollModifier.ProtoReflect.Descriptor instead.
func (*RollModifier) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{11}
}

func (x *RollModifier) GetModifierType() string {
	if x != nil {
		return x.ModifierType
	}
	return ""
}

func (x *RollModifier) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *RollModifier) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

// Text result from table
type TextResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Result text
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// Text category
	Category string `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"` // "event", "description", "rumor", "quest_hook"
	// Variables to substitute in text
	Variables map[string]string `protobuf:"bytes,3,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Whether text requires further action
	RequiresAction bool `protobuf:"varint,4,opt,name=requires_action,json=requiresAction,proto3" json:"requires_action,omitempty"`
	// Action type if required
	ActionType    string `protobuf:"bytes,5,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TextResult) Reset() {
	*x = TextResult{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextResult) ProtoMessage() {}

func (x *TextResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextResult.ProtoReflect.Descriptor instead.
func (*TextResult) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{12}
}

func (x *TextResult) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TextResult) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *TextResult) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *TextResult) GetRequiresAction() bool {
	if x != nil {
		return x.RequiresAction
	}
	return false
}

func (x *TextResult) GetActionType() string {
	if x != nil {
		return x.ActionType
	}
	return ""
}

// Effect result from table
type EffectResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Effect type
	EffectType string `protobuf:"bytes,1,opt,name=effect_type,json=effectType,proto3" json:"effect_type,omitempty"` // "spell", "trap", "environmental", "magical"
	// Effect name
	EffectName string `protobuf:"bytes,2,opt,name=effect_name,json=effectName,proto3" json:"effect_name,omitempty"`
	// Effect description
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Effect parameters
	Parameters map[string]string `protobuf:"bytes,4,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Effect duration
	Duration string `protobuf:"bytes,5,opt,name=duration,proto3" json:"duration,omitempty"`
	// Effect intensity
	Intensity float64 `protobuf:"fixed64,6,opt,name=intensity,proto3" json:"intensity,omitempty"`
	// Area of effect (using spatial service definition)
	AreaOfEffectDescription string `protobuf:"bytes,7,opt,name=area_of_effect_description,json=areaOfEffectDescription,proto3" json:"area_of_effect_description,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *EffectResult) Reset() {
	*x = EffectResult{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EffectResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EffectResult) ProtoMessage() {}

func (x *EffectResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EffectResult.ProtoReflect.Descriptor instead.
func (*EffectResult) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{13}
}

func (x *EffectResult) GetEffectType() string {
	if x != nil {
		return x.EffectType
	}
	return ""
}

func (x *EffectResult) GetEffectName() string {
	if x != nil {
		return x.EffectName
	}
	return ""
}

func (x *EffectResult) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EffectResult) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *EffectResult) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *EffectResult) GetIntensity() float64 {
	if x != nil {
		return x.Intensity
	}
	return 0
}

func (x *EffectResult) GetAreaOfEffectDescription() string {
	if x != nil {
		return x.AreaOfEffectDescription
	}
	return ""
}

// Multiple results combined
type MultipleResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Individual results
	Results []*TableEntryResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	// How to combine results
	CombinationMethod string `protobuf:"bytes,2,opt,name=combination_method,json=combinationMethod,proto3" json:"combination_method,omitempty"` // "all", "choose_one", "weighted_choice"
	// Number to choose if using choice method
	ChooseCount   int32 `protobuf:"varint,3,opt,name=choose_count,json=chooseCount,proto3" json:"choose_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MultipleResult) Reset() {
	*x = MultipleResult{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MultipleResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultipleResult) ProtoMessage() {}

func (x *MultipleResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultipleResult.ProtoReflect.Descriptor instead.
func (*MultipleResult) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{14}
}

func (x *MultipleResult) GetResults() []*TableEntryResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *MultipleResult) GetCombinationMethod() string {
	if x != nil {
		return x.CombinationMethod
	}
	return ""
}

func (x *MultipleResult) GetChooseCount() int32 {
	if x != nil {
		return x.ChooseCount
	}
	return 0
}

// Condition for conditional table entries
type EntryCondition struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Condition type
	ConditionType string `protobuf:"bytes,1,opt,name=condition_type,json=conditionType,proto3" json:"condition_type,omitempty"` // "parameter", "roll", "time", "location"
	// Parameter name for parameter conditions
	ParameterName string `protobuf:"bytes,2,opt,name=parameter_name,json=parameterName,proto3" json:"parameter_name,omitempty"`
	// Comparison operator
	Operator string `protobuf:"bytes,3,opt,name=operator,proto3" json:"operator,omitempty"` // "equals", "greater_than", "less_than", "contains"
	// Expected value
	ExpectedValue string `protobuf:"bytes,4,opt,name=expected_value,json=expectedValue,proto3" json:"expected_value,omitempty"`
	// Whether condition is required or optional
	IsRequired    bool `protobuf:"varint,5,opt,name=is_required,json=isRequired,proto3" json:"is_required,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EntryCondition) Reset() {
	*x = EntryCondition{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntryCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntryCondition) ProtoMessage() {}

func (x *EntryCondition) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntryCondition.ProtoReflect.Descriptor instead.
func (*EntryCondition) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{15}
}

func (x *EntryCondition) GetConditionType() string {
	if x != nil {
		return x.ConditionType
	}
	return ""
}

func (x *EntryCondition) GetParameterName() string {
	if x != nil {
		return x.ParameterName
	}
	return ""
}

func (x *EntryCondition) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *EntryCondition) GetExpectedValue() string {
	if x != nil {
		return x.ExpectedValue
	}
	return ""
}

func (x *EntryCondition) GetIsRequired() bool {
	if x != nil {
		return x.IsRequired
	}
	return false
}

// Table options and settings
type TableOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Allow duplicate results in single roll
	AllowDuplicates bool `protobuf:"varint,1,opt,name=allow_duplicates,json=allowDuplicates,proto3" json:"allow_duplicates,omitempty"`
	// Maximum results per roll
	MaxResultsPerRoll int32 `protobuf:"varint,2,opt,name=max_results_per_roll,json=maxResultsPerRoll,proto3" json:"max_results_per_roll,omitempty"`
	// Default number of rolls
	DefaultRollCount int32 `protobuf:"varint,3,opt,name=default_roll_count,json=defaultRollCount,proto3" json:"default_roll_count,omitempty"`
	// Whether to sort results
	SortResults bool `protobuf:"varint,4,opt,name=sort_results,json=sortResults,proto3" json:"sort_results,omitempty"`
	// Sort criteria
	SortCriteria string `protobuf:"bytes,5,opt,name=sort_criteria,json=sortCriteria,proto3" json:"sort_criteria,omitempty"` // "alphabetical", "value", "rarity", "roll_order"
	// Whether to group similar results
	GroupSimilarResults bool `protobuf:"varint,6,opt,name=group_similar_results,json=groupSimilarResults,proto3" json:"group_similar_results,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *TableOptions) Reset() {
	*x = TableOptions{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableOptions) ProtoMessage() {}

func (x *TableOptions) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableOptions.ProtoReflect.Descriptor instead.
func (*TableOptions) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{16}
}

func (x *TableOptions) GetAllowDuplicates() bool {
	if x != nil {
		return x.AllowDuplicates
	}
	return false
}

func (x *TableOptions) GetMaxResultsPerRoll() int32 {
	if x != nil {
		return x.MaxResultsPerRoll
	}
	return 0
}

func (x *TableOptions) GetDefaultRollCount() int32 {
	if x != nil {
		return x.DefaultRollCount
	}
	return 0
}

func (x *TableOptions) GetSortResults() bool {
	if x != nil {
		return x.SortResults
	}
	return false
}

func (x *TableOptions) GetSortCriteria() string {
	if x != nil {
		return x.SortCriteria
	}
	return ""
}

func (x *TableOptions) GetGroupSimilarResults() bool {
	if x != nil {
		return x.GroupSimilarResults
	}
	return false
}

// Selection table metadata
type SelectionTableMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Table author
	Author string `protobuf:"bytes,1,opt,name=author,proto3" json:"author,omitempty"`
	// Table version
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// Creation timestamp
	CreatedAt int64 `protobuf:"varint,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Last update timestamp
	UpdatedAt int64 `protobuf:"varint,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Usage statistics
	UsageStats *TableUsageStats `protobuf:"bytes,5,opt,name=usage_stats,json=usageStats,proto3" json:"usage_stats,omitempty"`
	// Table tags
	Tags []string `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	// Source material
	Source string `protobuf:"bytes,7,opt,name=source,proto3" json:"source,omitempty"`
	// Copyright information
	Copyright string `protobuf:"bytes,8,opt,name=copyright,proto3" json:"copyright,omitempty"`
	// Whether table is official content
	IsOfficial    bool `protobuf:"varint,9,opt,name=is_official,json=isOfficial,proto3" json:"is_official,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SelectionTableMetadata) Reset() {
	*x = SelectionTableMetadata{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectionTableMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectionTableMetadata) ProtoMessage() {}

func (x *SelectionTableMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectionTableMetadata.ProtoReflect.Descriptor instead.
func (*SelectionTableMetadata) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{17}
}

func (x *SelectionTableMetadata) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *SelectionTableMetadata) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SelectionTableMetadata) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SelectionTableMetadata) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SelectionTableMetadata) GetUsageStats() *TableUsageStats {
	if x != nil {
		return x.UsageStats
	}
	return nil
}

func (x *SelectionTableMetadata) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *SelectionTableMetadata) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *SelectionTableMetadata) GetCopyright() string {
	if x != nil {
		return x.Copyright
	}
	return ""
}

func (x *SelectionTableMetadata) GetIsOfficial() bool {
	if x != nil {
		return x.IsOfficial
	}
	return false
}

// Usage statistics for selection table
type TableUsageStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Number of times table has been rolled
	RollCount int64 `protobuf:"varint,1,opt,name=roll_count,json=rollCount,proto3" json:"roll_count,omitempty"`
	// Total results generated
	ResultsGenerated int64 `protobuf:"varint,2,opt,name=results_generated,json=resultsGenerated,proto3" json:"results_generated,omitempty"`
	// Most common result
	MostCommonResult string `protobuf:"bytes,3,opt,name=most_common_result,json=mostCommonResult,proto3" json:"most_common_result,omitempty"`
	// Least common result
	LeastCommonResult string `protobuf:"bytes,4,opt,name=least_common_result,json=leastCommonResult,proto3" json:"least_common_result,omitempty"`
	// Average rolls per session
	AverageRollsPerSession float64 `protobuf:"fixed64,5,opt,name=average_rolls_per_session,json=averageRollsPerSession,proto3" json:"average_rolls_per_session,omitempty"`
	// Last used timestamp
	LastUsed      int64 `protobuf:"varint,6,opt,name=last_used,json=lastUsed,proto3" json:"last_used,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TableUsageStats) Reset() {
	*x = TableUsageStats{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableUsageStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableUsageStats) ProtoMessage() {}

func (x *TableUsageStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableUsageStats.ProtoReflect.Descriptor instead.
func (*TableUsageStats) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{18}
}

func (x *TableUsageStats) GetRollCount() int64 {
	if x != nil {
		return x.RollCount
	}
	return 0
}

func (x *TableUsageStats) GetResultsGenerated() int64 {
	if x != nil {
		return x.ResultsGenerated
	}
	return 0
}

func (x *TableUsageStats) GetMostCommonResult() string {
	if x != nil {
		return x.MostCommonResult
	}
	return ""
}

func (x *TableUsageStats) GetLeastCommonResult() string {
	if x != nil {
		return x.LeastCommonResult
	}
	return ""
}

func (x *TableUsageStats) GetAverageRollsPerSession() float64 {
	if x != nil {
		return x.AverageRollsPerSession
	}
	return 0
}

func (x *TableUsageStats) GetLastUsed() int64 {
	if x != nil {
		return x.LastUsed
	}
	return 0
}

// Table validation options
type TableValidationOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Check for roll range gaps
	CheckRangeGaps bool `protobuf:"varint,1,opt,name=check_range_gaps,json=checkRangeGaps,proto3" json:"check_range_gaps,omitempty"`
	// Check for overlapping ranges
	CheckRangeOverlaps bool `protobuf:"varint,2,opt,name=check_range_overlaps,json=checkRangeOverlaps,proto3" json:"check_range_overlaps,omitempty"`
	// Validate nested table references
	ValidateNestedReferences bool `protobuf:"varint,3,opt,name=validate_nested_references,json=validateNestedReferences,proto3" json:"validate_nested_references,omitempty"`
	// Check weight distribution
	CheckWeightDistribution bool `protobuf:"varint,4,opt,name=check_weight_distribution,json=checkWeightDistribution,proto3" json:"check_weight_distribution,omitempty"`
	// Validate dice configuration
	ValidateDiceConfig bool `protobuf:"varint,5,opt,name=validate_dice_config,json=validateDiceConfig,proto3" json:"validate_dice_config,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *TableValidationOptions) Reset() {
	*x = TableValidationOptions{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableValidationOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableValidationOptions) ProtoMessage() {}

func (x *TableValidationOptions) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableValidationOptions.ProtoReflect.Descriptor instead.
func (*TableValidationOptions) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{19}
}

func (x *TableValidationOptions) GetCheckRangeGaps() bool {
	if x != nil {
		return x.CheckRangeGaps
	}
	return false
}

func (x *TableValidationOptions) GetCheckRangeOverlaps() bool {
	if x != nil {
		return x.CheckRangeOverlaps
	}
	return false
}

func (x *TableValidationOptions) GetValidateNestedReferences() bool {
	if x != nil {
		return x.ValidateNestedReferences
	}
	return false
}

func (x *TableValidationOptions) GetCheckWeightDistribution() bool {
	if x != nil {
		return x.CheckWeightDistribution
	}
	return false
}

func (x *TableValidationOptions) GetValidateDiceConfig() bool {
	if x != nil {
		return x.ValidateDiceConfig
	}
	return false
}

// Create selection table response
type CreateSelectionTableResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Created table
	Table *SelectionTable `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	// Validation results
	ValidationResult *ValidationResult `protobuf:"bytes,2,opt,name=validation_result,json=validationResult,proto3" json:"validation_result,omitempty"`
	// Creation confirmation
	Message       string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSelectionTableResponse) Reset() {
	*x = CreateSelectionTableResponse{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSelectionTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSelectionTableResponse) ProtoMessage() {}

func (x *CreateSelectionTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSelectionTableResponse.ProtoReflect.Descriptor instead.
func (*CreateSelectionTableResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{20}
}

func (x *CreateSelectionTableResponse) GetTable() *SelectionTable {
	if x != nil {
		return x.Table
	}
	return nil
}

func (x *CreateSelectionTableResponse) GetValidationResult() *ValidationResult {
	if x != nil {
		return x.ValidationResult
	}
	return nil
}

func (x *CreateSelectionTableResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Get selection table request
type GetSelectionTableRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Table identifier
	TableId string `protobuf:"bytes,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	// Whether to include usage statistics
	IncludeStatistics bool `protobuf:"varint,2,opt,name=include_statistics,json=includeStatistics,proto3" json:"include_statistics,omitempty"`
	// Whether to include entry details
	IncludeEntryDetails bool `protobuf:"varint,3,opt,name=include_entry_details,json=includeEntryDetails,proto3" json:"include_entry_details,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetSelectionTableRequest) Reset() {
	*x = GetSelectionTableRequest{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSelectionTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSelectionTableRequest) ProtoMessage() {}

func (x *GetSelectionTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSelectionTableRequest.ProtoReflect.Descriptor instead.
func (*GetSelectionTableRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{21}
}

func (x *GetSelectionTableRequest) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *GetSelectionTableRequest) GetIncludeStatistics() bool {
	if x != nil {
		return x.IncludeStatistics
	}
	return false
}

func (x *GetSelectionTableRequest) GetIncludeEntryDetails() bool {
	if x != nil {
		return x.IncludeEntryDetails
	}
	return false
}

// Get selection table response
type GetSelectionTableResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Requested table
	Table *SelectionTable `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	// Table statistics (if requested)
	Statistics    *TableStatistics `protobuf:"bytes,2,opt,name=statistics,proto3" json:"statistics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSelectionTableResponse) Reset() {
	*x = GetSelectionTableResponse{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSelectionTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSelectionTableResponse) ProtoMessage() {}

func (x *GetSelectionTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSelectionTableResponse.ProtoReflect.Descriptor instead.
func (*GetSelectionTableResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{22}
}

func (x *GetSelectionTableResponse) GetTable() *SelectionTable {
	if x != nil {
		return x.Table
	}
	return nil
}

func (x *GetSelectionTableResponse) GetStatistics() *TableStatistics {
	if x != nil {
		return x.Statistics
	}
	return nil
}

// Detailed statistics for selection table
type TableStatistics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Basic usage stats
	UsageStats *TableUsageStats `protobuf:"bytes,1,opt,name=usage_stats,json=usageStats,proto3" json:"usage_stats,omitempty"`
	// Entry selection frequency
	EntryFrequency map[string]int64 `protobuf:"bytes,2,rep,name=entry_frequency,json=entryFrequency,proto3" json:"entry_frequency,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	// Average roll results
	AverageRoll float64 `protobuf:"fixed64,3,opt,name=average_roll,json=averageRoll,proto3" json:"average_roll,omitempty"`
	// Roll distribution
	RollDistribution map[int32]int64 `protobuf:"bytes,4,rep,name=roll_distribution,json=rollDistribution,proto3" json:"roll_distribution,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	// Result type breakdown
	ResultTypeCounts map[string]int64 `protobuf:"bytes,5,rep,name=result_type_counts,json=resultTypeCounts,proto3" json:"result_type_counts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	// Performance metrics
	PerformanceStats *TablePerformanceStats `protobuf:"bytes,6,opt,name=performance_stats,json=performanceStats,proto3" json:"performance_stats,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TableStatistics) Reset() {
	*x = TableStatistics{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableStatistics) ProtoMessage() {}

func (x *TableStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableStatistics.ProtoReflect.Descriptor instead.
func (*TableStatistics) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{23}
}

func (x *TableStatistics) GetUsageStats() *TableUsageStats {
	if x != nil {
		return x.UsageStats
	}
	return nil
}

func (x *TableStatistics) GetEntryFrequency() map[string]int64 {
	if x != nil {
		return x.EntryFrequency
	}
	return nil
}

func (x *TableStatistics) GetAverageRoll() float64 {
	if x != nil {
		return x.AverageRoll
	}
	return 0
}

func (x *TableStatistics) GetRollDistribution() map[int32]int64 {
	if x != nil {
		return x.RollDistribution
	}
	return nil
}

func (x *TableStatistics) GetResultTypeCounts() map[string]int64 {
	if x != nil {
		return x.ResultTypeCounts
	}
	return nil
}

func (x *TableStatistics) GetPerformanceStats() *TablePerformanceStats {
	if x != nil {
		return x.PerformanceStats
	}
	return nil
}

// Performance statistics for table operations
type TablePerformanceStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Average roll time (milliseconds)
	AverageRollTimeMs float64 `protobuf:"fixed64,1,opt,name=average_roll_time_ms,json=averageRollTimeMs,proto3" json:"average_roll_time_ms,omitempty"`
	// Cache hit ratio
	CacheHitRatio float64 `protobuf:"fixed64,2,opt,name=cache_hit_ratio,json=cacheHitRatio,proto3" json:"cache_hit_ratio,omitempty"`
	// Memory usage
	MemoryUsageBytes int64 `protobuf:"varint,3,opt,name=memory_usage_bytes,json=memoryUsageBytes,proto3" json:"memory_usage_bytes,omitempty"`
	// Last optimization timestamp
	LastOptimized int64 `protobuf:"varint,4,opt,name=last_optimized,json=lastOptimized,proto3" json:"last_optimized,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TablePerformanceStats) Reset() {
	*x = TablePerformanceStats{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TablePerformanceStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TablePerformanceStats) ProtoMessage() {}

func (x *TablePerformanceStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TablePerformanceStats.ProtoReflect.Descriptor instead.
func (*TablePerformanceStats) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{24}
}

func (x *TablePerformanceStats) GetAverageRollTimeMs() float64 {
	if x != nil {
		return x.AverageRollTimeMs
	}
	return 0
}

func (x *TablePerformanceStats) GetCacheHitRatio() float64 {
	if x != nil {
		return x.CacheHitRatio
	}
	return 0
}

func (x *TablePerformanceStats) GetMemoryUsageBytes() int64 {
	if x != nil {
		return x.MemoryUsageBytes
	}
	return 0
}

func (x *TablePerformanceStats) GetLastOptimized() int64 {
	if x != nil {
		return x.LastOptimized
	}
	return 0
}

// Update selection table request
type UpdateSelectionTableRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Table identifier
	TableId string `protobuf:"bytes,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	// Updated table data
	Table *SelectionTable `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	// Update options
	UpdateOptions *TableUpdateOptions `protobuf:"bytes,3,opt,name=update_options,json=updateOptions,proto3" json:"update_options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSelectionTableRequest) Reset() {
	*x = UpdateSelectionTableRequest{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSelectionTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSelectionTableRequest) ProtoMessage() {}

func (x *UpdateSelectionTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSelectionTableRequest.ProtoReflect.Descriptor instead.
func (*UpdateSelectionTableRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateSelectionTableRequest) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *UpdateSelectionTableRequest) GetTable() *SelectionTable {
	if x != nil {
		return x.Table
	}
	return nil
}

func (x *UpdateSelectionTableRequest) GetUpdateOptions() *TableUpdateOptions {
	if x != nil {
		return x.UpdateOptions
	}
	return nil
}

// Options for table updates
type TableUpdateOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether to preserve usage statistics
	PreserveStatistics bool `protobuf:"varint,1,opt,name=preserve_statistics,json=preserveStatistics,proto3" json:"preserve_statistics,omitempty"`
	// Whether to validate after update
	ValidateAfterUpdate bool `protobuf:"varint,2,opt,name=validate_after_update,json=validateAfterUpdate,proto3" json:"validate_after_update,omitempty"`
	// Whether to backup old version
	CreateBackup bool `protobuf:"varint,3,opt,name=create_backup,json=createBackup,proto3" json:"create_backup,omitempty"`
	// Update reason
	UpdateReason  string `protobuf:"bytes,4,opt,name=update_reason,json=updateReason,proto3" json:"update_reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TableUpdateOptions) Reset() {
	*x = TableUpdateOptions{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableUpdateOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableUpdateOptions) ProtoMessage() {}

func (x *TableUpdateOptions) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableUpdateOptions.ProtoReflect.Descriptor instead.
func (*TableUpdateOptions) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{26}
}

func (x *TableUpdateOptions) GetPreserveStatistics() bool {
	if x != nil {
		return x.PreserveStatistics
	}
	return false
}

func (x *TableUpdateOptions) GetValidateAfterUpdate() bool {
	if x != nil {
		return x.ValidateAfterUpdate
	}
	return false
}

func (x *TableUpdateOptions) GetCreateBackup() bool {
	if x != nil {
		return x.CreateBackup
	}
	return false
}

func (x *TableUpdateOptions) GetUpdateReason() string {
	if x != nil {
		return x.UpdateReason
	}
	return ""
}

// Update selection table response
type UpdateSelectionTableResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Updated table
	Table *SelectionTable `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	// Validation results
	ValidationResult *ValidationResult `protobuf:"bytes,2,opt,name=validation_result,json=validationResult,proto3" json:"validation_result,omitempty"`
	// Update confirmation
	Message       string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSelectionTableResponse) Reset() {
	*x = UpdateSelectionTableResponse{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSelectionTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSelectionTableResponse) ProtoMessage() {}

func (x *UpdateSelectionTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSelectionTableResponse.ProtoReflect.Descriptor instead.
func (*UpdateSelectionTableResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateSelectionTableResponse) GetTable() *SelectionTable {
	if x != nil {
		return x.Table
	}
	return nil
}

func (x *UpdateSelectionTableResponse) GetValidationResult() *ValidationResult {
	if x != nil {
		return x.ValidationResult
	}
	return nil
}

func (x *UpdateSelectionTableResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Delete selection table request
type DeleteSelectionTableRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Table identifier
	TableId string `protobuf:"bytes,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	// Whether to force deletion even if referenced by other tables
	Force         bool `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSelectionTableRequest) Reset() {
	*x = DeleteSelectionTableRequest{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSelectionTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSelectionTableRequest) ProtoMessage() {}

func (x *DeleteSelectionTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSelectionTableRequest.ProtoReflect.Descriptor instead.
func (*DeleteSelectionTableRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{28}
}

func (x *DeleteSelectionTableRequest) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *DeleteSelectionTableRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

// Delete selection table response
type DeleteSelectionTableResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deletion confirmation
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// Number of references that were removed
	ReferencesRemoved int32 `protobuf:"varint,2,opt,name=references_removed,json=referencesRemoved,proto3" json:"references_removed,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DeleteSelectionTableResponse) Reset() {
	*x = DeleteSelectionTableResponse{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSelectionTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSelectionTableResponse) ProtoMessage() {}

func (x *DeleteSelectionTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSelectionTableResponse.ProtoReflect.Descriptor instead.
func (*DeleteSelectionTableResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteSelectionTableResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteSelectionTableResponse) GetReferencesRemoved() int32 {
	if x != nil {
		return x.ReferencesRemoved
	}
	return 0
}

// List selection tables request
type ListSelectionTablesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Table filter
	Filter *SelectionTableFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	// Pagination
	PageInfo *PageInfo `protobuf:"bytes,2,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`
	// Sort options
	SortOptions *TableSortOptions `protobuf:"bytes,3,opt,name=sort_options,json=sortOptions,proto3" json:"sort_options,omitempty"`
	// Whether to include table statistics
	IncludeStatistics bool `protobuf:"varint,4,opt,name=include_statistics,json=includeStatistics,proto3" json:"include_statistics,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ListSelectionTablesRequest) Reset() {
	*x = ListSelectionTablesRequest{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSelectionTablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSelectionTablesRequest) ProtoMessage() {}

func (x *ListSelectionTablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSelectionTablesRequest.ProtoReflect.Descriptor instead.
func (*ListSelectionTablesRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{30}
}

func (x *ListSelectionTablesRequest) GetFilter() *SelectionTableFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListSelectionTablesRequest) GetPageInfo() *PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

func (x *ListSelectionTablesRequest) GetSortOptions() *TableSortOptions {
	if x != nil {
		return x.SortOptions
	}
	return nil
}

func (x *ListSelectionTablesRequest) GetIncludeStatistics() bool {
	if x != nil {
		return x.IncludeStatistics
	}
	return false
}

// Filter for selection tables
type SelectionTableFilter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Table categories
	Categories []string `protobuf:"bytes,1,rep,name=categories,proto3" json:"categories,omitempty"`
	// Table types
	TableTypes []SelectionTableType `protobuf:"varint,2,rep,packed,name=table_types,json=tableTypes,proto3,enum=api.v1alpha1.SelectionTableType" json:"table_types,omitempty"`
	// Author filter
	Author string `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	// Search term in name/description
	SearchTerm string `protobuf:"bytes,4,opt,name=search_term,json=searchTerm,proto3" json:"search_term,omitempty"`
	// Tags to match
	Tags []string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	// Only official content
	OfficialOnly bool `protobuf:"varint,6,opt,name=official_only,json=officialOnly,proto3" json:"official_only,omitempty"`
	// Only public tables
	PublicOnly    bool `protobuf:"varint,7,opt,name=public_only,json=publicOnly,proto3" json:"public_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SelectionTableFilter) Reset() {
	*x = SelectionTableFilter{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectionTableFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectionTableFilter) ProtoMessage() {}

func (x *SelectionTableFilter) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectionTableFilter.ProtoReflect.Descriptor instead.
func (*SelectionTableFilter) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{31}
}

func (x *SelectionTableFilter) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *SelectionTableFilter) GetTableTypes() []SelectionTableType {
	if x != nil {
		return x.TableTypes
	}
	return nil
}

func (x *SelectionTableFilter) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *SelectionTableFilter) GetSearchTerm() string {
	if x != nil {
		return x.SearchTerm
	}
	return ""
}

func (x *SelectionTableFilter) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *SelectionTableFilter) GetOfficialOnly() bool {
	if x != nil {
		return x.OfficialOnly
	}
	return false
}

func (x *SelectionTableFilter) GetPublicOnly() bool {
	if x != nil {
		return x.PublicOnly
	}
	return false
}

// Sort options for table lists
type TableSortOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Field to sort by
	SortBy TableSortField `protobuf:"varint,1,opt,name=sort_by,json=sortBy,proto3,enum=api.v1alpha1.TableSortField" json:"sort_by,omitempty"`
	// Sort direction
	Direction     TableSortDirection `protobuf:"varint,2,opt,name=direction,proto3,enum=api.v1alpha1.TableSortDirection" json:"direction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TableSortOptions) Reset() {
	*x = TableSortOptions{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableSortOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableSortOptions) ProtoMessage() {}

func (x *TableSortOptions) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableSortOptions.ProtoReflect.Descriptor instead.
func (*TableSortOptions) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{32}
}

func (x *TableSortOptions) GetSortBy() TableSortField {
	if x != nil {
		return x.SortBy
	}
	return TableSortField_TABLE_SORT_FIELD_UNSPECIFIED
}

func (x *TableSortOptions) GetDirection() TableSortDirection {
	if x != nil {
		return x.Direction
	}
	return TableSortDirection_TABLE_SORT_DIRECTION_UNSPECIFIED
}

// List selection tables response
type ListSelectionTablesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of tables
	Tables []*SelectionTable `protobuf:"bytes,1,rep,name=tables,proto3" json:"tables,omitempty"`
	// Pagination information
	PageInfo *PageInfo `protobuf:"bytes,2,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`
	// List statistics
	ListStats     *TableListStats `protobuf:"bytes,3,opt,name=list_stats,json=listStats,proto3" json:"list_stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSelectionTablesResponse) Reset() {
	*x = ListSelectionTablesResponse{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSelectionTablesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSelectionTablesResponse) ProtoMessage() {}

func (x *ListSelectionTablesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSelectionTablesResponse.ProtoReflect.Descriptor instead.
func (*ListSelectionTablesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{33}
}

func (x *ListSelectionTablesResponse) GetTables() []*SelectionTable {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *ListSelectionTablesResponse) GetPageInfo() *PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

func (x *ListSelectionTablesResponse) GetListStats() *TableListStats {
	if x != nil {
		return x.ListStats
	}
	return nil
}

// Statistics for table list
type TableListStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Total tables matching filter
	TotalCount int32 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// Tables returned in this page
	ReturnedCount int32 `protobuf:"varint,2,opt,name=returned_count,json=returnedCount,proto3" json:"returned_count,omitempty"`
	// Tables by category breakdown
	TablesByCategory map[string]int32 `protobuf:"bytes,3,rep,name=tables_by_category,json=tablesByCategory,proto3" json:"tables_by_category,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	// Tables by type breakdown
	TablesByType map[string]int32 `protobuf:"bytes,4,rep,name=tables_by_type,json=tablesByType,proto3" json:"tables_by_type,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	// Most popular table
	MostPopularTable string `protobuf:"bytes,5,opt,name=most_popular_table,json=mostPopularTable,proto3" json:"most_popular_table,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TableListStats) Reset() {
	*x = TableListStats{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableListStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableListStats) ProtoMessage() {}

func (x *TableListStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableListStats.ProtoReflect.Descriptor instead.
func (*TableListStats) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{34}
}

func (x *TableListStats) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *TableListStats) GetReturnedCount() int32 {
	if x != nil {
		return x.ReturnedCount
	}
	return 0
}

func (x *TableListStats) GetTablesByCategory() map[string]int32 {
	if x != nil {
		return x.TablesByCategory
	}
	return nil
}

func (x *TableListStats) GetTablesByType() map[string]int32 {
	if x != nil {
		return x.TablesByType
	}
	return nil
}

func (x *TableListStats) GetMostPopularTable() string {
	if x != nil {
		return x.MostPopularTable
	}
	return ""
}

// Roll on table request
type RollOnTableRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Table to roll on
	TableId string `protobuf:"bytes,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	// Number of rolls to make
	RollCount int32 `protobuf:"varint,2,opt,name=roll_count,json=rollCount,proto3" json:"roll_count,omitempty"`
	// Roll parameters
	Parameters map[string]string `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Roll options
	Options       *RollOptions `protobuf:"bytes,4,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollOnTableRequest) Reset() {
	*x = RollOnTableRequest{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollOnTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollOnTableRequest) ProtoMessage() {}

func (x *RollOnTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollOnTableRequest.ProtoReflect.Descriptor instead.
func (*RollOnTableRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{35}
}

func (x *RollOnTableRequest) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *RollOnTableRequest) GetRollCount() int32 {
	if x != nil {
		return x.RollCount
	}
	return 0
}

func (x *RollOnTableRequest) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *RollOnTableRequest) GetOptions() *RollOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

// Options for table rolls
type RollOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Random seed for reproducible results
	Seed string `protobuf:"bytes,1,opt,name=seed,proto3" json:"seed,omitempty"`
	// Roll modifiers
	Modifiers []*RollModifier `protobuf:"bytes,2,rep,name=modifiers,proto3" json:"modifiers,omitempty"`
	// Whether to show roll details
	ShowRollDetails bool `protobuf:"varint,3,opt,name=show_roll_details,json=showRollDetails,proto3" json:"show_roll_details,omitempty"`
	// Whether to group similar results
	GroupSimilar bool `protobuf:"varint,4,opt,name=group_similar,json=groupSimilar,proto3" json:"group_similar,omitempty"`
	// Maximum results to return
	MaxResults int32 `protobuf:"varint,5,opt,name=max_results,json=maxResults,proto3" json:"max_results,omitempty"`
	// Whether to allow rerolls
	AllowRerolls  bool `protobuf:"varint,6,opt,name=allow_rerolls,json=allowRerolls,proto3" json:"allow_rerolls,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollOptions) Reset() {
	*x = RollOptions{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollOptions) ProtoMessage() {}

func (x *RollOptions) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollOptions.ProtoReflect.Descriptor instead.
func (*RollOptions) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{36}
}

func (x *RollOptions) GetSeed() string {
	if x != nil {
		return x.Seed
	}
	return ""
}

func (x *RollOptions) GetModifiers() []*RollModifier {
	if x != nil {
		return x.Modifiers
	}
	return nil
}

func (x *RollOptions) GetShowRollDetails() bool {
	if x != nil {
		return x.ShowRollDetails
	}
	return false
}

func (x *RollOptions) GetGroupSimilar() bool {
	if x != nil {
		return x.GroupSimilar
	}
	return false
}

func (x *RollOptions) GetMaxResults() int32 {
	if x != nil {
		return x.MaxResults
	}
	return 0
}

func (x *RollOptions) GetAllowRerolls() bool {
	if x != nil {
		return x.AllowRerolls
	}
	return false
}

// Roll on table response
type RollOnTableResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Roll results
	Results []*RollResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	// Roll statistics
	RollStats *RollStats `protobuf:"bytes,2,opt,name=roll_stats,json=rollStats,proto3" json:"roll_stats,omitempty"`
	// Table that was rolled
	TableId string `protobuf:"bytes,3,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	// Roll session information
	Session       *RollSession `protobuf:"bytes,4,opt,name=session,proto3" json:"session,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollOnTableResponse) Reset() {
	*x = RollOnTableResponse{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollOnTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollOnTableResponse) ProtoMessage() {}

func (x *RollOnTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollOnTableResponse.ProtoReflect.Descriptor instead.
func (*RollOnTableResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{37}
}

func (x *RollOnTableResponse) GetResults() []*RollResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *RollOnTableResponse) GetRollStats() *RollStats {
	if x != nil {
		return x.RollStats
	}
	return nil
}

func (x *RollOnTableResponse) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *RollOnTableResponse) GetSession() *RollSession {
	if x != nil {
		return x.Session
	}
	return nil
}

// Individual roll result
type RollResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Result identifier
	ResultId string `protobuf:"bytes,1,opt,name=result_id,json=resultId,proto3" json:"result_id,omitempty"`
	// Table entry that was selected
	SelectedEntry *TableEntry `protobuf:"bytes,2,opt,name=selected_entry,json=selectedEntry,proto3" json:"selected_entry,omitempty"`
	// Actual roll value
	RollValue int32 `protobuf:"varint,3,opt,name=roll_value,json=rollValue,proto3" json:"roll_value,omitempty"`
	// Result data
	ResultData *TableEntryResult `protobuf:"bytes,4,opt,name=result_data,json=resultData,proto3" json:"result_data,omitempty"`
	// Roll details
	RollDetails *RollDetails `protobuf:"bytes,5,opt,name=roll_details,json=rollDetails,proto3" json:"roll_details,omitempty"`
	// Whether this result was modified
	WasModified bool `protobuf:"varint,6,opt,name=was_modified,json=wasModified,proto3" json:"was_modified,omitempty"`
	// Modification reason
	ModificationReason string `protobuf:"bytes,7,opt,name=modification_reason,json=modificationReason,proto3" json:"modification_reason,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *RollResult) Reset() {
	*x = RollResult{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollResult) ProtoMessage() {}

func (x *RollResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollResult.ProtoReflect.Descriptor instead.
func (*RollResult) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{38}
}

func (x *RollResult) GetResultId() string {
	if x != nil {
		return x.ResultId
	}
	return ""
}

func (x *RollResult) GetSelectedEntry() *TableEntry {
	if x != nil {
		return x.SelectedEntry
	}
	return nil
}

func (x *RollResult) GetRollValue() int32 {
	if x != nil {
		return x.RollValue
	}
	return 0
}

func (x *RollResult) GetResultData() *TableEntryResult {
	if x != nil {
		return x.ResultData
	}
	return nil
}

func (x *RollResult) GetRollDetails() *RollDetails {
	if x != nil {
		return x.RollDetails
	}
	return nil
}

func (x *RollResult) GetWasModified() bool {
	if x != nil {
		return x.WasModified
	}
	return false
}

func (x *RollResult) GetModificationReason() string {
	if x != nil {
		return x.ModificationReason
	}
	return ""
}

// Details about the roll itself
type RollDetails struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Dice that were rolled
	DiceValues []int32 `protobuf:"varint,1,rep,packed,name=dice_values,json=diceValues,proto3" json:"dice_values,omitempty"`
	// Modifiers applied
	TotalModifier int32 `protobuf:"varint,2,opt,name=total_modifier,json=totalModifier,proto3" json:"total_modifier,omitempty"`
	// Raw roll before modifiers
	RawRoll int32 `protobuf:"varint,3,opt,name=raw_roll,json=rawRoll,proto3" json:"raw_roll,omitempty"`
	// Final roll after modifiers
	FinalRoll int32 `protobuf:"varint,4,opt,name=final_roll,json=finalRoll,proto3" json:"final_roll,omitempty"`
	// Dice notation used
	DiceNotation string `protobuf:"bytes,5,opt,name=dice_notation,json=diceNotation,proto3" json:"dice_notation,omitempty"`
	// Any rerolls that occurred
	Rerolls       []int32 `protobuf:"varint,6,rep,packed,name=rerolls,proto3" json:"rerolls,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollDetails) Reset() {
	*x = RollDetails{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollDetails) ProtoMessage() {}

func (x *RollDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollDetails.ProtoReflect.Descriptor instead.
func (*RollDetails) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{39}
}

func (x *RollDetails) GetDiceValues() []int32 {
	if x != nil {
		return x.DiceValues
	}
	return nil
}

func (x *RollDetails) GetTotalModifier() int32 {
	if x != nil {
		return x.TotalModifier
	}
	return 0
}

func (x *RollDetails) GetRawRoll() int32 {
	if x != nil {
		return x.RawRoll
	}
	return 0
}

func (x *RollDetails) GetFinalRoll() int32 {
	if x != nil {
		return x.FinalRoll
	}
	return 0
}

func (x *RollDetails) GetDiceNotation() string {
	if x != nil {
		return x.DiceNotation
	}
	return ""
}

func (x *RollDetails) GetRerolls() []int32 {
	if x != nil {
		return x.Rerolls
	}
	return nil
}

// Statistics for roll operation
type RollStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Roll execution time
	RollTimeMs int64 `protobuf:"varint,1,opt,name=roll_time_ms,json=rollTimeMs,proto3" json:"roll_time_ms,omitempty"`
	// Number of dice rolled
	DiceRolled int32 `protobuf:"varint,2,opt,name=dice_rolled,json=diceRolled,proto3" json:"dice_rolled,omitempty"`
	// Number of rerolls
	RerollsMade int32 `protobuf:"varint,3,opt,name=rerolls_made,json=rerollsMade,proto3" json:"rerolls_made,omitempty"`
	// Average roll value
	AverageRoll float64 `protobuf:"fixed64,4,opt,name=average_roll,json=averageRoll,proto3" json:"average_roll,omitempty"`
	// Highest roll
	HighestRoll int32 `protobuf:"varint,5,opt,name=highest_roll,json=highestRoll,proto3" json:"highest_roll,omitempty"`
	// Lowest roll
	LowestRoll    int32 `protobuf:"varint,6,opt,name=lowest_roll,json=lowestRoll,proto3" json:"lowest_roll,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollStats) Reset() {
	*x = RollStats{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollStats) ProtoMessage() {}

func (x *RollStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollStats.ProtoReflect.Descriptor instead.
func (*RollStats) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{40}
}

func (x *RollStats) GetRollTimeMs() int64 {
	if x != nil {
		return x.RollTimeMs
	}
	return 0
}

func (x *RollStats) GetDiceRolled() int32 {
	if x != nil {
		return x.DiceRolled
	}
	return 0
}

func (x *RollStats) GetRerollsMade() int32 {
	if x != nil {
		return x.RerollsMade
	}
	return 0
}

func (x *RollStats) GetAverageRoll() float64 {
	if x != nil {
		return x.AverageRoll
	}
	return 0
}

func (x *RollStats) GetHighestRoll() int32 {
	if x != nil {
		return x.HighestRoll
	}
	return 0
}

func (x *RollStats) GetLowestRoll() int32 {
	if x != nil {
		return x.LowestRoll
	}
	return 0
}

// Roll session information
type RollSession struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Session identifier
	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// When session expires
	ExpiresAt int64 `protobuf:"varint,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// Number of rolls in session
	RollCount int32 `protobuf:"varint,3,opt,name=roll_count,json=rollCount,proto3" json:"roll_count,omitempty"`
	// Session parameters
	Parameters    map[string]string `protobuf:"bytes,4,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollSession) Reset() {
	*x = RollSession{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollSession) ProtoMessage() {}

func (x *RollSession) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollSession.ProtoReflect.Descriptor instead.
func (*RollSession) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{41}
}

func (x *RollSession) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *RollSession) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *RollSession) GetRollCount() int32 {
	if x != nil {
		return x.RollCount
	}
	return 0
}

func (x *RollSession) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

// Roll multiple tables request
type RollMultipleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Tables to roll with their configurations
	TableRolls []*TableRollConfig `protobuf:"bytes,1,rep,name=table_rolls,json=tableRolls,proto3" json:"table_rolls,omitempty"`
	// Global roll options
	GlobalOptions *RollOptions `protobuf:"bytes,2,opt,name=global_options,json=globalOptions,proto3" json:"global_options,omitempty"`
	// Whether to correlate results between tables
	CorrelateResults bool `protobuf:"varint,3,opt,name=correlate_results,json=correlateResults,proto3" json:"correlate_results,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RollMultipleRequest) Reset() {
	*x = RollMultipleRequest{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollMultipleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollMultipleRequest) ProtoMessage() {}

func (x *RollMultipleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollMultipleRequest.ProtoReflect.Descriptor instead.
func (*RollMultipleRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{42}
}

func (x *RollMultipleRequest) GetTableRolls() []*TableRollConfig {
	if x != nil {
		return x.TableRolls
	}
	return nil
}

func (x *RollMultipleRequest) GetGlobalOptions() *RollOptions {
	if x != nil {
		return x.GlobalOptions
	}
	return nil
}

func (x *RollMultipleRequest) GetCorrelateResults() bool {
	if x != nil {
		return x.CorrelateResults
	}
	return false
}

// Configuration for rolling a single table
type TableRollConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Table identifier
	TableId string `protobuf:"bytes,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	// Number of rolls for this table
	RollCount int32 `protobuf:"varint,2,opt,name=roll_count,json=rollCount,proto3" json:"roll_count,omitempty"`
	// Table-specific parameters
	Parameters map[string]string `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Table-specific modifiers
	Modifiers     []*RollModifier `protobuf:"bytes,4,rep,name=modifiers,proto3" json:"modifiers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TableRollConfig) Reset() {
	*x = TableRollConfig{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableRollConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableRollConfig) ProtoMessage() {}

func (x *TableRollConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableRollConfig.ProtoReflect.Descriptor instead.
func (*TableRollConfig) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{43}
}

func (x *TableRollConfig) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *TableRollConfig) GetRollCount() int32 {
	if x != nil {
		return x.RollCount
	}
	return 0
}

func (x *TableRollConfig) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *TableRollConfig) GetModifiers() []*RollModifier {
	if x != nil {
		return x.Modifiers
	}
	return nil
}

// Roll multiple tables response
type RollMultipleResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Results organized by table
	ResultsByTable map[string]*TableRollResults `protobuf:"bytes,1,rep,name=results_by_table,json=resultsByTable,proto3" json:"results_by_table,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Combined results if correlation requested
	CombinedResults []*CombinedResult `protobuf:"bytes,2,rep,name=combined_results,json=combinedResults,proto3" json:"combined_results,omitempty"`
	// Overall roll statistics
	MultiRollStats *MultiRollStats `protobuf:"bytes,3,opt,name=multi_roll_stats,json=multiRollStats,proto3" json:"multi_roll_stats,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RollMultipleResponse) Reset() {
	*x = RollMultipleResponse{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollMultipleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollMultipleResponse) ProtoMessage() {}

func (x *RollMultipleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollMultipleResponse.ProtoReflect.Descriptor instead.
func (*RollMultipleResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{44}
}

func (x *RollMultipleResponse) GetResultsByTable() map[string]*TableRollResults {
	if x != nil {
		return x.ResultsByTable
	}
	return nil
}

func (x *RollMultipleResponse) GetCombinedResults() []*CombinedResult {
	if x != nil {
		return x.CombinedResults
	}
	return nil
}

func (x *RollMultipleResponse) GetMultiRollStats() *MultiRollStats {
	if x != nil {
		return x.MultiRollStats
	}
	return nil
}

// Results for a single table in multi-roll
type TableRollResults struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Table identifier
	TableId string `protobuf:"bytes,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	// Roll results for this table
	Results []*RollResult `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	// Table-specific statistics
	Stats         *RollStats `protobuf:"bytes,3,opt,name=stats,proto3" json:"stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TableRollResults) Reset() {
	*x = TableRollResults{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableRollResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableRollResults) ProtoMessage() {}

func (x *TableRollResults) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableRollResults.ProtoReflect.Descriptor instead.
func (*TableRollResults) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{45}
}

func (x *TableRollResults) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *TableRollResults) GetResults() []*RollResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *TableRollResults) GetStats() *RollStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

// Combined result from multiple tables
type CombinedResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Result identifier
	ResultId string `protobuf:"bytes,1,opt,name=result_id,json=resultId,proto3" json:"result_id,omitempty"`
	// Components from different tables
	Components []*ResultComponent `protobuf:"bytes,2,rep,name=components,proto3" json:"components,omitempty"`
	// Combined description
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Total value (if applicable)
	TotalValue    float64 `protobuf:"fixed64,4,opt,name=total_value,json=totalValue,proto3" json:"total_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CombinedResult) Reset() {
	*x = CombinedResult{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CombinedResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombinedResult) ProtoMessage() {}

func (x *CombinedResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombinedResult.ProtoReflect.Descriptor instead.
func (*CombinedResult) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{46}
}

func (x *CombinedResult) GetResultId() string {
	if x != nil {
		return x.ResultId
	}
	return ""
}

func (x *CombinedResult) GetComponents() []*ResultComponent {
	if x != nil {
		return x.Components
	}
	return nil
}

func (x *CombinedResult) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CombinedResult) GetTotalValue() float64 {
	if x != nil {
		return x.TotalValue
	}
	return 0
}

// Component of a combined result
type ResultComponent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Source table
	TableId string `protobuf:"bytes,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	// Result from that table
	Result *RollResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	// How this component relates to the combined result
	Relationship  string `protobuf:"bytes,3,opt,name=relationship,proto3" json:"relationship,omitempty"` // "primary", "modifier", "additional", "flavor"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResultComponent) Reset() {
	*x = ResultComponent{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResultComponent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultComponent) ProtoMessage() {}

func (x *ResultComponent) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultComponent.ProtoReflect.Descriptor instead.
func (*ResultComponent) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{47}
}

func (x *ResultComponent) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *ResultComponent) GetResult() *RollResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ResultComponent) GetRelationship() string {
	if x != nil {
		return x.Relationship
	}
	return ""
}

// Statistics for multiple table rolls
type MultiRollStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Total execution time
	TotalTimeMs int64 `protobuf:"varint,1,opt,name=total_time_ms,json=totalTimeMs,proto3" json:"total_time_ms,omitempty"`
	// Number of tables rolled
	TablesRolled int32 `protobuf:"varint,2,opt,name=tables_rolled,json=tablesRolled,proto3" json:"tables_rolled,omitempty"`
	// Total results generated
	TotalResults int32 `protobuf:"varint,3,opt,name=total_results,json=totalResults,proto3" json:"total_results,omitempty"`
	// Average time per table
	AverageTimePerTableMs float64 `protobuf:"fixed64,4,opt,name=average_time_per_table_ms,json=averageTimePerTableMs,proto3" json:"average_time_per_table_ms,omitempty"`
	// Number of correlations found
	CorrelationsFound int32 `protobuf:"varint,5,opt,name=correlations_found,json=correlationsFound,proto3" json:"correlations_found,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *MultiRollStats) Reset() {
	*x = MultiRollStats{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MultiRollStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiRollStats) ProtoMessage() {}

func (x *MultiRollStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiRollStats.ProtoReflect.Descriptor instead.
func (*MultiRollStats) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{48}
}

func (x *MultiRollStats) GetTotalTimeMs() int64 {
	if x != nil {
		return x.TotalTimeMs
	}
	return 0
}

func (x *MultiRollStats) GetTablesRolled() int32 {
	if x != nil {
		return x.TablesRolled
	}
	return 0
}

func (x *MultiRollStats) GetTotalResults() int32 {
	if x != nil {
		return x.TotalResults
	}
	return 0
}

func (x *MultiRollStats) GetAverageTimePerTableMs() float64 {
	if x != nil {
		return x.AverageTimePerTableMs
	}
	return 0
}

func (x *MultiRollStats) GetCorrelationsFound() int32 {
	if x != nil {
		return x.CorrelationsFound
	}
	return 0
}

// Roll with modifiers request
type RollWithModifiersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Table to roll on
	TableId string `protobuf:"bytes,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	// Roll modifiers to apply
	Modifiers []*RollModifier `protobuf:"bytes,2,rep,name=modifiers,proto3" json:"modifiers,omitempty"`
	// Number of rolls
	RollCount int32 `protobuf:"varint,3,opt,name=roll_count,json=rollCount,proto3" json:"roll_count,omitempty"`
	// Roll options
	Options       *RollOptions `protobuf:"bytes,4,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollWithModifiersRequest) Reset() {
	*x = RollWithModifiersRequest{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollWithModifiersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollWithModifiersRequest) ProtoMessage() {}

func (x *RollWithModifiersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollWithModifiersRequest.ProtoReflect.Descriptor instead.
func (*RollWithModifiersRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{49}
}

func (x *RollWithModifiersRequest) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *RollWithModifiersRequest) GetModifiers() []*RollModifier {
	if x != nil {
		return x.Modifiers
	}
	return nil
}

func (x *RollWithModifiersRequest) GetRollCount() int32 {
	if x != nil {
		return x.RollCount
	}
	return 0
}

func (x *RollWithModifiersRequest) GetOptions() *RollOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

// Roll with modifiers response
type RollWithModifiersResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Modified roll results
	Results []*RollResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	// Modifier effects
	ModifierEffects []*ModifierEffect `protobuf:"bytes,2,rep,name=modifier_effects,json=modifierEffects,proto3" json:"modifier_effects,omitempty"`
	// Roll statistics
	RollStats     *RollStats `protobuf:"bytes,3,opt,name=roll_stats,json=rollStats,proto3" json:"roll_stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollWithModifiersResponse) Reset() {
	*x = RollWithModifiersResponse{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollWithModifiersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollWithModifiersResponse) ProtoMessage() {}

func (x *RollWithModifiersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollWithModifiersResponse.ProtoReflect.Descriptor instead.
func (*RollWithModifiersResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{50}
}

func (x *RollWithModifiersResponse) GetResults() []*RollResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *RollWithModifiersResponse) GetModifierEffects() []*ModifierEffect {
	if x != nil {
		return x.ModifierEffects
	}
	return nil
}

func (x *RollWithModifiersResponse) GetRollStats() *RollStats {
	if x != nil {
		return x.RollStats
	}
	return nil
}

// Effect of a modifier on rolls
type ModifierEffect struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Modifier that was applied
	Modifier *RollModifier `protobuf:"bytes,1,opt,name=modifier,proto3" json:"modifier,omitempty"`
	// How many rolls were affected
	RollsAffected int32 `protobuf:"varint,2,opt,name=rolls_affected,json=rollsAffected,proto3" json:"rolls_affected,omitempty"`
	// Average change caused by modifier
	AverageChange float64 `protobuf:"fixed64,3,opt,name=average_change,json=averageChange,proto3" json:"average_change,omitempty"`
	// Description of effect
	EffectDescription string `protobuf:"bytes,4,opt,name=effect_description,json=effectDescription,proto3" json:"effect_description,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ModifierEffect) Reset() {
	*x = ModifierEffect{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModifierEffect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifierEffect) ProtoMessage() {}

func (x *ModifierEffect) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifierEffect.ProtoReflect.Descriptor instead.
func (*ModifierEffect) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{51}
}

func (x *ModifierEffect) GetModifier() *RollModifier {
	if x != nil {
		return x.Modifier
	}
	return nil
}

func (x *ModifierEffect) GetRollsAffected() int32 {
	if x != nil {
		return x.RollsAffected
	}
	return 0
}

func (x *ModifierEffect) GetAverageChange() float64 {
	if x != nil {
		return x.AverageChange
	}
	return 0
}

func (x *ModifierEffect) GetEffectDescription() string {
	if x != nil {
		return x.EffectDescription
	}
	return ""
}

// Batch roll tables request
type BatchRollTablesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Batch of roll operations
	RollOperations []*BatchRollOperation `protobuf:"bytes,1,rep,name=roll_operations,json=rollOperations,proto3" json:"roll_operations,omitempty"`
	// Batch options
	BatchOptions  *BatchRollOptions `protobuf:"bytes,2,opt,name=batch_options,json=batchOptions,proto3" json:"batch_options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchRollTablesRequest) Reset() {
	*x = BatchRollTablesRequest{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchRollTablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchRollTablesRequest) ProtoMessage() {}

func (x *BatchRollTablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchRollTablesRequest.ProtoReflect.Descriptor instead.
func (*BatchRollTablesRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{52}
}

func (x *BatchRollTablesRequest) GetRollOperations() []*BatchRollOperation {
	if x != nil {
		return x.RollOperations
	}
	return nil
}

func (x *BatchRollTablesRequest) GetBatchOptions() *BatchRollOptions {
	if x != nil {
		return x.BatchOptions
	}
	return nil
}

// Individual roll operation in batch
type BatchRollOperation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Operation identifier
	OperationId string `protobuf:"bytes,1,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	// Table to roll on
	TableId string `protobuf:"bytes,2,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	// Number of rolls
	RollCount int32 `protobuf:"varint,3,opt,name=roll_count,json=rollCount,proto3" json:"roll_count,omitempty"`
	// Operation parameters
	Parameters map[string]string `protobuf:"bytes,4,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Operation-specific options
	Options       *RollOptions `protobuf:"bytes,5,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchRollOperation) Reset() {
	*x = BatchRollOperation{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchRollOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchRollOperation) ProtoMessage() {}

func (x *BatchRollOperation) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchRollOperation.ProtoReflect.Descriptor instead.
func (*BatchRollOperation) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{53}
}

func (x *BatchRollOperation) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *BatchRollOperation) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *BatchRollOperation) GetRollCount() int32 {
	if x != nil {
		return x.RollCount
	}
	return 0
}

func (x *BatchRollOperation) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *BatchRollOperation) GetOptions() *RollOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

// Options for batch roll operations
type BatchRollOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether to execute operations in parallel
	ParallelExecution bool `protobuf:"varint,1,opt,name=parallel_execution,json=parallelExecution,proto3" json:"parallel_execution,omitempty"`
	// Maximum execution time for entire batch
	TimeoutMs int32 `protobuf:"varint,2,opt,name=timeout_ms,json=timeoutMs,proto3" json:"timeout_ms,omitempty"`
	// Whether to abort all if any fail
	AllOrNothing bool `protobuf:"varint,3,opt,name=all_or_nothing,json=allOrNothing,proto3" json:"all_or_nothing,omitempty"`
	// Whether to correlate results across operations
	CorrelateAcrossOperations bool `protobuf:"varint,4,opt,name=correlate_across_operations,json=correlateAcrossOperations,proto3" json:"correlate_across_operations,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *BatchRollOptions) Reset() {
	*x = BatchRollOptions{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchRollOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchRollOptions) ProtoMessage() {}

func (x *BatchRollOptions) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchRollOptions.ProtoReflect.Descriptor instead.
func (*BatchRollOptions) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{54}
}

func (x *BatchRollOptions) GetParallelExecution() bool {
	if x != nil {
		return x.ParallelExecution
	}
	return false
}

func (x *BatchRollOptions) GetTimeoutMs() int32 {
	if x != nil {
		return x.TimeoutMs
	}
	return 0
}

func (x *BatchRollOptions) GetAllOrNothing() bool {
	if x != nil {
		return x.AllOrNothing
	}
	return false
}

func (x *BatchRollOptions) GetCorrelateAcrossOperations() bool {
	if x != nil {
		return x.CorrelateAcrossOperations
	}
	return false
}

// Batch roll tables response
type BatchRollTablesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Successful roll operations
	SuccessfulOperations []*BatchRollResult `protobuf:"bytes,1,rep,name=successful_operations,json=successfulOperations,proto3" json:"successful_operations,omitempty"`
	// Failed roll operations
	FailedOperations []*BatchRollFailure `protobuf:"bytes,2,rep,name=failed_operations,json=failedOperations,proto3" json:"failed_operations,omitempty"`
	// Batch statistics
	BatchStats *BatchRollStats `protobuf:"bytes,3,opt,name=batch_stats,json=batchStats,proto3" json:"batch_stats,omitempty"`
	// Cross-operation correlations (if requested)
	Correlations  []*OperationCorrelation `protobuf:"bytes,4,rep,name=correlations,proto3" json:"correlations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchRollTablesResponse) Reset() {
	*x = BatchRollTablesResponse{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchRollTablesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchRollTablesResponse) ProtoMessage() {}

func (x *BatchRollTablesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchRollTablesResponse.ProtoReflect.Descriptor instead.
func (*BatchRollTablesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{55}
}

func (x *BatchRollTablesResponse) GetSuccessfulOperations() []*BatchRollResult {
	if x != nil {
		return x.SuccessfulOperations
	}
	return nil
}

func (x *BatchRollTablesResponse) GetFailedOperations() []*BatchRollFailure {
	if x != nil {
		return x.FailedOperations
	}
	return nil
}

func (x *BatchRollTablesResponse) GetBatchStats() *BatchRollStats {
	if x != nil {
		return x.BatchStats
	}
	return nil
}

func (x *BatchRollTablesResponse) GetCorrelations() []*OperationCorrelation {
	if x != nil {
		return x.Correlations
	}
	return nil
}

// Result of successful batch roll operation
type BatchRollResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Operation identifier
	OperationId string `protobuf:"bytes,1,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	// Roll results
	Results []*RollResult `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	// Operation statistics
	Stats         *RollStats `protobuf:"bytes,3,opt,name=stats,proto3" json:"stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchRollResult) Reset() {
	*x = BatchRollResult{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchRollResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchRollResult) ProtoMessage() {}

func (x *BatchRollResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchRollResult.ProtoReflect.Descriptor instead.
func (*BatchRollResult) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{56}
}

func (x *BatchRollResult) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *BatchRollResult) GetResults() []*RollResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *BatchRollResult) GetStats() *RollStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

// Failed batch roll operation
type BatchRollFailure struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Operation identifier
	OperationId string `protobuf:"bytes,1,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	// Table that failed to roll
	TableId string `protobuf:"bytes,2,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	// Failure reason
	FailureReason string `protobuf:"bytes,3,opt,name=failure_reason,json=failureReason,proto3" json:"failure_reason,omitempty"`
	// Error details
	Errors        []*RoomError `protobuf:"bytes,4,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchRollFailure) Reset() {
	*x = BatchRollFailure{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchRollFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchRollFailure) ProtoMessage() {}

func (x *BatchRollFailure) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchRollFailure.ProtoReflect.Descriptor instead.
func (*BatchRollFailure) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{57}
}

func (x *BatchRollFailure) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *BatchRollFailure) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *BatchRollFailure) GetFailureReason() string {
	if x != nil {
		return x.FailureReason
	}
	return ""
}

func (x *BatchRollFailure) GetErrors() []*RoomError {
	if x != nil {
		return x.Errors
	}
	return nil
}

// Statistics for batch roll operations
type BatchRollStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Total batch execution time
	TotalBatchTimeMs int64 `protobuf:"varint,1,opt,name=total_batch_time_ms,json=totalBatchTimeMs,proto3" json:"total_batch_time_ms,omitempty"`
	// Successful operations
	SuccessfulOperations int32 `protobuf:"varint,2,opt,name=successful_operations,json=successfulOperations,proto3" json:"successful_operations,omitempty"`
	// Failed operations
	FailedOperations int32 `protobuf:"varint,3,opt,name=failed_operations,json=failedOperations,proto3" json:"failed_operations,omitempty"`
	// Total results generated
	TotalResults int32 `protobuf:"varint,4,opt,name=total_results,json=totalResults,proto3" json:"total_results,omitempty"`
	// Average operation time
	AverageOperationTimeMs float64 `protobuf:"fixed64,5,opt,name=average_operation_time_ms,json=averageOperationTimeMs,proto3" json:"average_operation_time_ms,omitempty"`
	// Whether parallel execution was used
	UsedParallelExecution bool `protobuf:"varint,6,opt,name=used_parallel_execution,json=usedParallelExecution,proto3" json:"used_parallel_execution,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *BatchRollStats) Reset() {
	*x = BatchRollStats{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchRollStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchRollStats) ProtoMessage() {}

func (x *BatchRollStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchRollStats.ProtoReflect.Descriptor instead.
func (*BatchRollStats) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{58}
}

func (x *BatchRollStats) GetTotalBatchTimeMs() int64 {
	if x != nil {
		return x.TotalBatchTimeMs
	}
	return 0
}

func (x *BatchRollStats) GetSuccessfulOperations() int32 {
	if x != nil {
		return x.SuccessfulOperations
	}
	return 0
}

func (x *BatchRollStats) GetFailedOperations() int32 {
	if x != nil {
		return x.FailedOperations
	}
	return 0
}

func (x *BatchRollStats) GetTotalResults() int32 {
	if x != nil {
		return x.TotalResults
	}
	return 0
}

func (x *BatchRollStats) GetAverageOperationTimeMs() float64 {
	if x != nil {
		return x.AverageOperationTimeMs
	}
	return 0
}

func (x *BatchRollStats) GetUsedParallelExecution() bool {
	if x != nil {
		return x.UsedParallelExecution
	}
	return false
}

// Correlation between batch operations
type OperationCorrelation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Operations involved in correlation
	OperationIds []string `protobuf:"bytes,1,rep,name=operation_ids,json=operationIds,proto3" json:"operation_ids,omitempty"`
	// Type of correlation
	CorrelationType string `protobuf:"bytes,2,opt,name=correlation_type,json=correlationType,proto3" json:"correlation_type,omitempty"` // "complementary", "contradictory", "reinforcing"
	// Correlation strength (0.0-1.0)
	Strength float64 `protobuf:"fixed64,3,opt,name=strength,proto3" json:"strength,omitempty"`
	// Description of correlation
	Description   string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OperationCorrelation) Reset() {
	*x = OperationCorrelation{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperationCorrelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationCorrelation) ProtoMessage() {}

func (x *OperationCorrelation) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationCorrelation.ProtoReflect.Descriptor instead.
func (*OperationCorrelation) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{59}
}

func (x *OperationCorrelation) GetOperationIds() []string {
	if x != nil {
		return x.OperationIds
	}
	return nil
}

func (x *OperationCorrelation) GetCorrelationType() string {
	if x != nil {
		return x.CorrelationType
	}
	return ""
}

func (x *OperationCorrelation) GetStrength() float64 {
	if x != nil {
		return x.Strength
	}
	return 0
}

func (x *OperationCorrelation) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Generate encounter request
type GenerateEncounterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Room to generate encounter for
	RoomId string `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	// Encounter parameters
	EncounterParams *EncounterParameters `protobuf:"bytes,2,opt,name=encounter_params,json=encounterParams,proto3" json:"encounter_params,omitempty"`
	// Tables to use for generation
	EncounterTables *EncounterTables `protobuf:"bytes,3,opt,name=encounter_tables,json=encounterTables,proto3" json:"encounter_tables,omitempty"`
	// Generation options
	Options       *EncounterGenerationOptions `protobuf:"bytes,4,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateEncounterRequest) Reset() {
	*x = GenerateEncounterRequest{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateEncounterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateEncounterRequest) ProtoMessage() {}

func (x *GenerateEncounterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateEncounterRequest.ProtoReflect.Descriptor instead.
func (*GenerateEncounterRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{60}
}

func (x *GenerateEncounterRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *GenerateEncounterRequest) GetEncounterParams() *EncounterParameters {
	if x != nil {
		return x.EncounterParams
	}
	return nil
}

func (x *GenerateEncounterRequest) GetEncounterTables() *EncounterTables {
	if x != nil {
		return x.EncounterTables
	}
	return nil
}

func (x *GenerateEncounterRequest) GetOptions() *EncounterGenerationOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

// Parameters for encounter generation
type EncounterParameters struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Party level for scaling
	PartyLevel int32 `protobuf:"varint,1,opt,name=party_level,json=partyLevel,proto3" json:"party_level,omitempty"`
	// Number of party members
	PartySize int32 `protobuf:"varint,2,opt,name=party_size,json=partySize,proto3" json:"party_size,omitempty"`
	// Desired encounter difficulty
	Difficulty string `protobuf:"bytes,3,opt,name=difficulty,proto3" json:"difficulty,omitempty"` // "easy", "medium", "hard", "deadly"
	// Encounter theme
	Theme string `protobuf:"bytes,4,opt,name=theme,proto3" json:"theme,omitempty"` // "combat", "social", "exploration", "mixed"
	// Environment type
	Environment string `protobuf:"bytes,5,opt,name=environment,proto3" json:"environment,omitempty"` // "dungeon", "wilderness", "urban", "planar"
	// Special requirements
	Requirements  []string `protobuf:"bytes,6,rep,name=requirements,proto3" json:"requirements,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EncounterParameters) Reset() {
	*x = EncounterParameters{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncounterParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncounterParameters) ProtoMessage() {}

func (x *EncounterParameters) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncounterParameters.ProtoReflect.Descriptor instead.
func (*EncounterParameters) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{61}
}

func (x *EncounterParameters) GetPartyLevel() int32 {
	if x != nil {
		return x.PartyLevel
	}
	return 0
}

func (x *EncounterParameters) GetPartySize() int32 {
	if x != nil {
		return x.PartySize
	}
	return 0
}

func (x *EncounterParameters) GetDifficulty() string {
	if x != nil {
		return x.Difficulty
	}
	return ""
}

func (x *EncounterParameters) GetTheme() string {
	if x != nil {
		return x.Theme
	}
	return ""
}

func (x *EncounterParameters) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *EncounterParameters) GetRequirements() []string {
	if x != nil {
		return x.Requirements
	}
	return nil
}

// Tables used for encounter generation
type EncounterTables struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Primary encounter table
	PrimaryTableId string `protobuf:"bytes,1,opt,name=primary_table_id,json=primaryTableId,proto3" json:"primary_table_id,omitempty"`
	// Monster/NPC selection table
	CreatureTableId string `protobuf:"bytes,2,opt,name=creature_table_id,json=creatureTableId,proto3" json:"creature_table_id,omitempty"`
	// Treasure/loot table
	TreasureTableId string `protobuf:"bytes,3,opt,name=treasure_table_id,json=treasureTableId,proto3" json:"treasure_table_id,omitempty"`
	// Environmental features table
	EnvironmentTableId string `protobuf:"bytes,4,opt,name=environment_table_id,json=environmentTableId,proto3" json:"environment_table_id,omitempty"`
	// Complication/twist table
	ComplicationTableId string `protobuf:"bytes,5,opt,name=complication_table_id,json=complicationTableId,proto3" json:"complication_table_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *EncounterTables) Reset() {
	*x = EncounterTables{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncounterTables) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncounterTables) ProtoMessage() {}

func (x *EncounterTables) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncounterTables.ProtoReflect.Descriptor instead.
func (*EncounterTables) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{62}
}

func (x *EncounterTables) GetPrimaryTableId() string {
	if x != nil {
		return x.PrimaryTableId
	}
	return ""
}

func (x *EncounterTables) GetCreatureTableId() string {
	if x != nil {
		return x.CreatureTableId
	}
	return ""
}

func (x *EncounterTables) GetTreasureTableId() string {
	if x != nil {
		return x.TreasureTableId
	}
	return ""
}

func (x *EncounterTables) GetEnvironmentTableId() string {
	if x != nil {
		return x.EnvironmentTableId
	}
	return ""
}

func (x *EncounterTables) GetComplicationTableId() string {
	if x != nil {
		return x.ComplicationTableId
	}
	return ""
}

// Options for encounter generation
type EncounterGenerationOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Random seed for reproducible encounters
	Seed string `protobuf:"bytes,1,opt,name=seed,proto3" json:"seed,omitempty"`
	// Whether to include treasure
	IncludeTreasure bool `protobuf:"varint,2,opt,name=include_treasure,json=includeTreasure,proto3" json:"include_treasure,omitempty"`
	// Whether to add environmental features
	AddEnvironmentalFeatures bool `protobuf:"varint,3,opt,name=add_environmental_features,json=addEnvironmentalFeatures,proto3" json:"add_environmental_features,omitempty"`
	// Whether to include complications
	IncludeComplications bool `protobuf:"varint,4,opt,name=include_complications,json=includeComplications,proto3" json:"include_complications,omitempty"`
	// Maximum creatures in encounter
	MaxCreatures int32 `protobuf:"varint,5,opt,name=max_creatures,json=maxCreatures,proto3" json:"max_creatures,omitempty"`
	// Whether to balance encounter difficulty
	BalanceDifficulty bool `protobuf:"varint,6,opt,name=balance_difficulty,json=balanceDifficulty,proto3" json:"balance_difficulty,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *EncounterGenerationOptions) Reset() {
	*x = EncounterGenerationOptions{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncounterGenerationOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncounterGenerationOptions) ProtoMessage() {}

func (x *EncounterGenerationOptions) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncounterGenerationOptions.ProtoReflect.Descriptor instead.
func (*EncounterGenerationOptions) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{63}
}

func (x *EncounterGenerationOptions) GetSeed() string {
	if x != nil {
		return x.Seed
	}
	return ""
}

func (x *EncounterGenerationOptions) GetIncludeTreasure() bool {
	if x != nil {
		return x.IncludeTreasure
	}
	return false
}

func (x *EncounterGenerationOptions) GetAddEnvironmentalFeatures() bool {
	if x != nil {
		return x.AddEnvironmentalFeatures
	}
	return false
}

func (x *EncounterGenerationOptions) GetIncludeComplications() bool {
	if x != nil {
		return x.IncludeComplications
	}
	return false
}

func (x *EncounterGenerationOptions) GetMaxCreatures() int32 {
	if x != nil {
		return x.MaxCreatures
	}
	return 0
}

func (x *EncounterGenerationOptions) GetBalanceDifficulty() bool {
	if x != nil {
		return x.BalanceDifficulty
	}
	return false
}

// Generate encounter response
type GenerateEncounterResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Generated encounter
	Encounter *GeneratedEncounter `protobuf:"bytes,1,opt,name=encounter,proto3" json:"encounter,omitempty"`
	// Generation statistics
	GenerationStats *EncounterGenerationStats `protobuf:"bytes,2,opt,name=generation_stats,json=generationStats,proto3" json:"generation_stats,omitempty"`
	// Tables used in generation
	TablesUsed    []string `protobuf:"bytes,3,rep,name=tables_used,json=tablesUsed,proto3" json:"tables_used,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateEncounterResponse) Reset() {
	*x = GenerateEncounterResponse{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateEncounterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateEncounterResponse) ProtoMessage() {}

func (x *GenerateEncounterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateEncounterResponse.ProtoReflect.Descriptor instead.
func (*GenerateEncounterResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{64}
}

func (x *GenerateEncounterResponse) GetEncounter() *GeneratedEncounter {
	if x != nil {
		return x.Encounter
	}
	return nil
}

func (x *GenerateEncounterResponse) GetGenerationStats() *EncounterGenerationStats {
	if x != nil {
		return x.GenerationStats
	}
	return nil
}

func (x *GenerateEncounterResponse) GetTablesUsed() []string {
	if x != nil {
		return x.TablesUsed
	}
	return nil
}

// Generated encounter result
type GeneratedEncounter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Encounter identifier
	EncounterId string `protobuf:"bytes,1,opt,name=encounter_id,json=encounterId,proto3" json:"encounter_id,omitempty"`
	// Encounter name/title
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Encounter description
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Creatures in encounter
	Creatures []*EncounterCreature `protobuf:"bytes,4,rep,name=creatures,proto3" json:"creatures,omitempty"`
	// Treasure in encounter
	Treasure []*TreasureItem `protobuf:"bytes,5,rep,name=treasure,proto3" json:"treasure,omitempty"`
	// Environmental features
	EnvironmentalFeatures []*EnvironmentalFeature `protobuf:"bytes,6,rep,name=environmental_features,json=environmentalFeatures,proto3" json:"environmental_features,omitempty"`
	// Complications or twists
	Complications []*EncounterComplication `protobuf:"bytes,7,rep,name=complications,proto3" json:"complications,omitempty"`
	// Encounter difficulty rating
	DifficultyRating string `protobuf:"bytes,8,opt,name=difficulty_rating,json=difficultyRating,proto3" json:"difficulty_rating,omitempty"`
	// Estimated challenge rating
	ChallengeRating float64 `protobuf:"fixed64,9,opt,name=challenge_rating,json=challengeRating,proto3" json:"challenge_rating,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GeneratedEncounter) Reset() {
	*x = GeneratedEncounter{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeneratedEncounter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneratedEncounter) ProtoMessage() {}

func (x *GeneratedEncounter) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneratedEncounter.ProtoReflect.Descriptor instead.
func (*GeneratedEncounter) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{65}
}

func (x *GeneratedEncounter) GetEncounterId() string {
	if x != nil {
		return x.EncounterId
	}
	return ""
}

func (x *GeneratedEncounter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GeneratedEncounter) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GeneratedEncounter) GetCreatures() []*EncounterCreature {
	if x != nil {
		return x.Creatures
	}
	return nil
}

func (x *GeneratedEncounter) GetTreasure() []*TreasureItem {
	if x != nil {
		return x.Treasure
	}
	return nil
}

func (x *GeneratedEncounter) GetEnvironmentalFeatures() []*EnvironmentalFeature {
	if x != nil {
		return x.EnvironmentalFeatures
	}
	return nil
}

func (x *GeneratedEncounter) GetComplications() []*EncounterComplication {
	if x != nil {
		return x.Complications
	}
	return nil
}

func (x *GeneratedEncounter) GetDifficultyRating() string {
	if x != nil {
		return x.DifficultyRating
	}
	return ""
}

func (x *GeneratedEncounter) GetChallengeRating() float64 {
	if x != nil {
		return x.ChallengeRating
	}
	return 0
}

// Creature in generated encounter
type EncounterCreature struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Creature identifier
	CreatureId string `protobuf:"bytes,1,opt,name=creature_id,json=creatureId,proto3" json:"creature_id,omitempty"`
	// Creature name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Number of this creature type
	Quantity int32 `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Challenge rating
	ChallengeRating float64 `protobuf:"fixed64,4,opt,name=challenge_rating,json=challengeRating,proto3" json:"challenge_rating,omitempty"`
	// Role in encounter
	Role string `protobuf:"bytes,5,opt,name=role,proto3" json:"role,omitempty"` // "leader", "minion", "elite", "solo"
	// Spawn preferences
	SpawnPreferences *EntitySpawnPreferences `protobuf:"bytes,6,opt,name=spawn_preferences,json=spawnPreferences,proto3" json:"spawn_preferences,omitempty"`
	// Special instructions
	SpecialInstructions string `protobuf:"bytes,7,opt,name=special_instructions,json=specialInstructions,proto3" json:"special_instructions,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *EncounterCreature) Reset() {
	*x = EncounterCreature{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncounterCreature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncounterCreature) ProtoMessage() {}

func (x *EncounterCreature) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncounterCreature.ProtoReflect.Descriptor instead.
func (*EncounterCreature) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{66}
}

func (x *EncounterCreature) GetCreatureId() string {
	if x != nil {
		return x.CreatureId
	}
	return ""
}

func (x *EncounterCreature) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EncounterCreature) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *EncounterCreature) GetChallengeRating() float64 {
	if x != nil {
		return x.ChallengeRating
	}
	return 0
}

func (x *EncounterCreature) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *EncounterCreature) GetSpawnPreferences() *EntitySpawnPreferences {
	if x != nil {
		return x.SpawnPreferences
	}
	return nil
}

func (x *EncounterCreature) GetSpecialInstructions() string {
	if x != nil {
		return x.SpecialInstructions
	}
	return ""
}

// Treasure item in encounter
type TreasureItem struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Item identifier
	ItemId string `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	// Item name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Item quantity
	Quantity int32 `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Item value
	ValueGp int32 `protobuf:"varint,4,opt,name=value_gp,json=valueGp,proto3" json:"value_gp,omitempty"`
	// Item rarity
	Rarity string `protobuf:"bytes,5,opt,name=rarity,proto3" json:"rarity,omitempty"`
	// Whether item is magical
	IsMagical bool `protobuf:"varint,6,opt,name=is_magical,json=isMagical,proto3" json:"is_magical,omitempty"`
	// Item location in encounter
	Location      string `protobuf:"bytes,7,opt,name=location,proto3" json:"location,omitempty"` // "on_creature", "hidden", "obvious", "trapped"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TreasureItem) Reset() {
	*x = TreasureItem{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TreasureItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreasureItem) ProtoMessage() {}

func (x *TreasureItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreasureItem.ProtoReflect.Descriptor instead.
func (*TreasureItem) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{67}
}

func (x *TreasureItem) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *TreasureItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TreasureItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *TreasureItem) GetValueGp() int32 {
	if x != nil {
		return x.ValueGp
	}
	return 0
}

func (x *TreasureItem) GetRarity() string {
	if x != nil {
		return x.Rarity
	}
	return ""
}

func (x *TreasureItem) GetIsMagical() bool {
	if x != nil {
		return x.IsMagical
	}
	return false
}

func (x *TreasureItem) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

// Environmental feature in encounter
type EnvironmentalFeature struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Feature identifier
	FeatureId string `protobuf:"bytes,1,opt,name=feature_id,json=featureId,proto3" json:"feature_id,omitempty"`
	// Feature name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Feature description
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Feature type
	FeatureType string `protobuf:"bytes,4,opt,name=feature_type,json=featureType,proto3" json:"feature_type,omitempty"` // "terrain", "hazard", "cover", "interactive"
	// Preferred location
	PreferredLocation string `protobuf:"bytes,5,opt,name=preferred_location,json=preferredLocation,proto3" json:"preferred_location,omitempty"`
	// Game effects
	Effects       []string `protobuf:"bytes,6,rep,name=effects,proto3" json:"effects,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnvironmentalFeature) Reset() {
	*x = EnvironmentalFeature{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnvironmentalFeature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentalFeature) ProtoMessage() {}

func (x *EnvironmentalFeature) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentalFeature.ProtoReflect.Descriptor instead.
func (*EnvironmentalFeature) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{68}
}

func (x *EnvironmentalFeature) GetFeatureId() string {
	if x != nil {
		return x.FeatureId
	}
	return ""
}

func (x *EnvironmentalFeature) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EnvironmentalFeature) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EnvironmentalFeature) GetFeatureType() string {
	if x != nil {
		return x.FeatureType
	}
	return ""
}

func (x *EnvironmentalFeature) GetPreferredLocation() string {
	if x != nil {
		return x.PreferredLocation
	}
	return ""
}

func (x *EnvironmentalFeature) GetEffects() []string {
	if x != nil {
		return x.Effects
	}
	return nil
}

// Complication in encounter
type EncounterComplication struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Complication identifier
	ComplicationId string `protobuf:"bytes,1,opt,name=complication_id,json=complicationId,proto3" json:"complication_id,omitempty"`
	// Complication name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Complication description
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// When complication triggers
	Trigger string `protobuf:"bytes,4,opt,name=trigger,proto3" json:"trigger,omitempty"` // "start", "mid_combat", "creature_death", "condition"
	// Complication effects
	Effects       []string `protobuf:"bytes,5,rep,name=effects,proto3" json:"effects,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EncounterComplication) Reset() {
	*x = EncounterComplication{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncounterComplication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncounterComplication) ProtoMessage() {}

func (x *EncounterComplication) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncounterComplication.ProtoReflect.Descriptor instead.
func (*EncounterComplication) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{69}
}

func (x *EncounterComplication) GetComplicationId() string {
	if x != nil {
		return x.ComplicationId
	}
	return ""
}

func (x *EncounterComplication) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EncounterComplication) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EncounterComplication) GetTrigger() string {
	if x != nil {
		return x.Trigger
	}
	return ""
}

func (x *EncounterComplication) GetEffects() []string {
	if x != nil {
		return x.Effects
	}
	return nil
}

// Statistics for encounter generation
type EncounterGenerationStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Generation time
	GenerationTimeMs int64 `protobuf:"varint,1,opt,name=generation_time_ms,json=generationTimeMs,proto3" json:"generation_time_ms,omitempty"`
	// Number of table rolls made
	TableRollsMade int32 `protobuf:"varint,2,opt,name=table_rolls_made,json=tableRollsMade,proto3" json:"table_rolls_made,omitempty"`
	// Number of creatures generated
	CreaturesGenerated int32 `protobuf:"varint,3,opt,name=creatures_generated,json=creaturesGenerated,proto3" json:"creatures_generated,omitempty"`
	// Number of treasure items generated
	TreasureItemsGenerated int32 `protobuf:"varint,4,opt,name=treasure_items_generated,json=treasureItemsGenerated,proto3" json:"treasure_items_generated,omitempty"`
	// Actual difficulty achieved
	ActualDifficulty string `protobuf:"bytes,5,opt,name=actual_difficulty,json=actualDifficulty,proto3" json:"actual_difficulty,omitempty"`
	// Challenge rating calculation
	CalculatedCr  float64 `protobuf:"fixed64,6,opt,name=calculated_cr,json=calculatedCr,proto3" json:"calculated_cr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EncounterGenerationStats) Reset() {
	*x = EncounterGenerationStats{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncounterGenerationStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncounterGenerationStats) ProtoMessage() {}

func (x *EncounterGenerationStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncounterGenerationStats.ProtoReflect.Descriptor instead.
func (*EncounterGenerationStats) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{70}
}

func (x *EncounterGenerationStats) GetGenerationTimeMs() int64 {
	if x != nil {
		return x.GenerationTimeMs
	}
	return 0
}

func (x *EncounterGenerationStats) GetTableRollsMade() int32 {
	if x != nil {
		return x.TableRollsMade
	}
	return 0
}

func (x *EncounterGenerationStats) GetCreaturesGenerated() int32 {
	if x != nil {
		return x.CreaturesGenerated
	}
	return 0
}

func (x *EncounterGenerationStats) GetTreasureItemsGenerated() int32 {
	if x != nil {
		return x.TreasureItemsGenerated
	}
	return 0
}

func (x *EncounterGenerationStats) GetActualDifficulty() string {
	if x != nil {
		return x.ActualDifficulty
	}
	return ""
}

func (x *EncounterGenerationStats) GetCalculatedCr() float64 {
	if x != nil {
		return x.CalculatedCr
	}
	return 0
}

// Generate loot request
type GenerateLootRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Loot generation parameters
	LootParams *LootParameters `protobuf:"bytes,1,opt,name=loot_params,json=lootParams,proto3" json:"loot_params,omitempty"`
	// Loot tables to use
	LootTables *LootTables `protobuf:"bytes,2,opt,name=loot_tables,json=lootTables,proto3" json:"loot_tables,omitempty"`
	// Generation options
	Options       *LootGenerationOptions `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateLootRequest) Reset() {
	*x = GenerateLootRequest{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateLootRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateLootRequest) ProtoMessage() {}

func (x *GenerateLootRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateLootRequest.ProtoReflect.Descriptor instead.
func (*GenerateLootRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{71}
}

func (x *GenerateLootRequest) GetLootParams() *LootParameters {
	if x != nil {
		return x.LootParams
	}
	return nil
}

func (x *GenerateLootRequest) GetLootTables() *LootTables {
	if x != nil {
		return x.LootTables
	}
	return nil
}

func (x *GenerateLootRequest) GetOptions() *LootGenerationOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

// Parameters for loot generation
type LootParameters struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Challenge rating for loot scaling
	ChallengeRating float64 `protobuf:"fixed64,1,opt,name=challenge_rating,json=challengeRating,proto3" json:"challenge_rating,omitempty"`
	// Party level for loot appropriateness
	PartyLevel int32 `protobuf:"varint,2,opt,name=party_level,json=partyLevel,proto3" json:"party_level,omitempty"`
	// Loot type preference
	LootType string `protobuf:"bytes,3,opt,name=loot_type,json=lootType,proto3" json:"loot_type,omitempty"` // "treasure", "equipment", "consumables", "mixed"
	// Loot rarity preference
	RarityPreference string `protobuf:"bytes,4,opt,name=rarity_preference,json=rarityPreference,proto3" json:"rarity_preference,omitempty"` // "common", "uncommon", "rare", "very_rare", "legendary"
	// Total value budget (in gold pieces)
	ValueBudgetGp int32 `protobuf:"varint,5,opt,name=value_budget_gp,json=valueBudgetGp,proto3" json:"value_budget_gp,omitempty"`
	// Loot source
	Source        string `protobuf:"bytes,6,opt,name=source,proto3" json:"source,omitempty"` // "hoard", "individual", "room", "quest_reward"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LootParameters) Reset() {
	*x = LootParameters{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LootParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LootParameters) ProtoMessage() {}

func (x *LootParameters) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LootParameters.ProtoReflect.Descriptor instead.
func (*LootParameters) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{72}
}

func (x *LootParameters) GetChallengeRating() float64 {
	if x != nil {
		return x.ChallengeRating
	}
	return 0
}

func (x *LootParameters) GetPartyLevel() int32 {
	if x != nil {
		return x.PartyLevel
	}
	return 0
}

func (x *LootParameters) GetLootType() string {
	if x != nil {
		return x.LootType
	}
	return ""
}

func (x *LootParameters) GetRarityPreference() string {
	if x != nil {
		return x.RarityPreference
	}
	return ""
}

func (x *LootParameters) GetValueBudgetGp() int32 {
	if x != nil {
		return x.ValueBudgetGp
	}
	return 0
}

func (x *LootParameters) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

// Tables used for loot generation
type LootTables struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Primary loot table
	PrimaryTableId string `protobuf:"bytes,1,opt,name=primary_table_id,json=primaryTableId,proto3" json:"primary_table_id,omitempty"`
	// Magic item table
	MagicItemTableId string `protobuf:"bytes,2,opt,name=magic_item_table_id,json=magicItemTableId,proto3" json:"magic_item_table_id,omitempty"`
	// Mundane equipment table
	EquipmentTableId string `protobuf:"bytes,3,opt,name=equipment_table_id,json=equipmentTableId,proto3" json:"equipment_table_id,omitempty"`
	// Consumables table
	ConsumablesTableId string `protobuf:"bytes,4,opt,name=consumables_table_id,json=consumablesTableId,proto3" json:"consumables_table_id,omitempty"`
	// Currency/gems table
	CurrencyTableId string `protobuf:"bytes,5,opt,name=currency_table_id,json=currencyTableId,proto3" json:"currency_table_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *LootTables) Reset() {
	*x = LootTables{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LootTables) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LootTables) ProtoMessage() {}

func (x *LootTables) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LootTables.ProtoReflect.Descriptor instead.
func (*LootTables) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{73}
}

func (x *LootTables) GetPrimaryTableId() string {
	if x != nil {
		return x.PrimaryTableId
	}
	return ""
}

func (x *LootTables) GetMagicItemTableId() string {
	if x != nil {
		return x.MagicItemTableId
	}
	return ""
}

func (x *LootTables) GetEquipmentTableId() string {
	if x != nil {
		return x.EquipmentTableId
	}
	return ""
}

func (x *LootTables) GetConsumablesTableId() string {
	if x != nil {
		return x.ConsumablesTableId
	}
	return ""
}

func (x *LootTables) GetCurrencyTableId() string {
	if x != nil {
		return x.CurrencyTableId
	}
	return ""
}

// Options for loot generation
type LootGenerationOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Random seed
	Seed string `protobuf:"bytes,1,opt,name=seed,proto3" json:"seed,omitempty"`
	// Whether to include cursed items
	IncludeCursedItems bool `protobuf:"varint,2,opt,name=include_cursed_items,json=includeCursedItems,proto3" json:"include_cursed_items,omitempty"`
	// Whether to vary item conditions
	VaryItemConditions bool `protobuf:"varint,3,opt,name=vary_item_conditions,json=varyItemConditions,proto3" json:"vary_item_conditions,omitempty"`
	// Maximum number of items
	MaxItems int32 `protobuf:"varint,4,opt,name=max_items,json=maxItems,proto3" json:"max_items,omitempty"`
	// Whether to bundle similar items
	BundleSimilarItems bool `protobuf:"varint,5,opt,name=bundle_similar_items,json=bundleSimilarItems,proto3" json:"bundle_similar_items,omitempty"`
	// Whether to include item descriptions
	IncludeDescriptions bool `protobuf:"varint,6,opt,name=include_descriptions,json=includeDescriptions,proto3" json:"include_descriptions,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *LootGenerationOptions) Reset() {
	*x = LootGenerationOptions{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LootGenerationOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LootGenerationOptions) ProtoMessage() {}

func (x *LootGenerationOptions) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LootGenerationOptions.ProtoReflect.Descriptor instead.
func (*LootGenerationOptions) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{74}
}

func (x *LootGenerationOptions) GetSeed() string {
	if x != nil {
		return x.Seed
	}
	return ""
}

func (x *LootGenerationOptions) GetIncludeCursedItems() bool {
	if x != nil {
		return x.IncludeCursedItems
	}
	return false
}

func (x *LootGenerationOptions) GetVaryItemConditions() bool {
	if x != nil {
		return x.VaryItemConditions
	}
	return false
}

func (x *LootGenerationOptions) GetMaxItems() int32 {
	if x != nil {
		return x.MaxItems
	}
	return 0
}

func (x *LootGenerationOptions) GetBundleSimilarItems() bool {
	if x != nil {
		return x.BundleSimilarItems
	}
	return false
}

func (x *LootGenerationOptions) GetIncludeDescriptions() bool {
	if x != nil {
		return x.IncludeDescriptions
	}
	return false
}

// Generate loot response
type GenerateLootResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Generated loot
	Loot *GeneratedLoot `protobuf:"bytes,1,opt,name=loot,proto3" json:"loot,omitempty"`
	// Generation statistics
	GenerationStats *LootGenerationStats `protobuf:"bytes,2,opt,name=generation_stats,json=generationStats,proto3" json:"generation_stats,omitempty"`
	// Tables used
	TablesUsed    []string `protobuf:"bytes,3,rep,name=tables_used,json=tablesUsed,proto3" json:"tables_used,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateLootResponse) Reset() {
	*x = GenerateLootResponse{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateLootResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateLootResponse) ProtoMessage() {}

func (x *GenerateLootResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateLootResponse.ProtoReflect.Descriptor instead.
func (*GenerateLootResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{75}
}

func (x *GenerateLootResponse) GetLoot() *GeneratedLoot {
	if x != nil {
		return x.Loot
	}
	return nil
}

func (x *GenerateLootResponse) GetGenerationStats() *LootGenerationStats {
	if x != nil {
		return x.GenerationStats
	}
	return nil
}

func (x *GenerateLootResponse) GetTablesUsed() []string {
	if x != nil {
		return x.TablesUsed
	}
	return nil
}

// Generated loot result
type GeneratedLoot struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Loot identifier
	LootId string `protobuf:"bytes,1,opt,name=loot_id,json=lootId,proto3" json:"loot_id,omitempty"`
	// Loot description
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Individual loot items
	Items []*GeneratedLootItem `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	// Total loot value
	TotalValueGp int32 `protobuf:"varint,4,opt,name=total_value_gp,json=totalValueGp,proto3" json:"total_value_gp,omitempty"`
	// Loot rarity distribution
	RarityDistribution map[string]int32 `protobuf:"bytes,5,rep,name=rarity_distribution,json=rarityDistribution,proto3" json:"rarity_distribution,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	// Special notes about the loot
	SpecialNotes  []string `protobuf:"bytes,6,rep,name=special_notes,json=specialNotes,proto3" json:"special_notes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GeneratedLoot) Reset() {
	*x = GeneratedLoot{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeneratedLoot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneratedLoot) ProtoMessage() {}

func (x *GeneratedLoot) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneratedLoot.ProtoReflect.Descriptor instead.
func (*GeneratedLoot) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{76}
}

func (x *GeneratedLoot) GetLootId() string {
	if x != nil {
		return x.LootId
	}
	return ""
}

func (x *GeneratedLoot) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GeneratedLoot) GetItems() []*GeneratedLootItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GeneratedLoot) GetTotalValueGp() int32 {
	if x != nil {
		return x.TotalValueGp
	}
	return 0
}

func (x *GeneratedLoot) GetRarityDistribution() map[string]int32 {
	if x != nil {
		return x.RarityDistribution
	}
	return nil
}

func (x *GeneratedLoot) GetSpecialNotes() []string {
	if x != nil {
		return x.SpecialNotes
	}
	return nil
}

// Individual loot item
type GeneratedLootItem struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Item identifier
	ItemId string `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	// Item name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Item description
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Item quantity
	Quantity int32 `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Item value per unit
	UnitValueGp int32 `protobuf:"varint,5,opt,name=unit_value_gp,json=unitValueGp,proto3" json:"unit_value_gp,omitempty"`
	// Total value for this stack
	TotalValueGp int32 `protobuf:"varint,6,opt,name=total_value_gp,json=totalValueGp,proto3" json:"total_value_gp,omitempty"`
	// Item rarity
	Rarity string `protobuf:"bytes,7,opt,name=rarity,proto3" json:"rarity,omitempty"`
	// Item type
	ItemType string `protobuf:"bytes,8,opt,name=item_type,json=itemType,proto3" json:"item_type,omitempty"` // "weapon", "armor", "consumable", "treasure", "currency"
	// Item condition
	Condition string `protobuf:"bytes,9,opt,name=condition,proto3" json:"condition,omitempty"`
	// Whether item is magical
	IsMagical bool `protobuf:"varint,10,opt,name=is_magical,json=isMagical,proto3" json:"is_magical,omitempty"`
	// Whether item is cursed
	IsCursed bool `protobuf:"varint,11,opt,name=is_cursed,json=isCursed,proto3" json:"is_cursed,omitempty"`
	// Item properties
	Properties    map[string]string `protobuf:"bytes,12,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GeneratedLootItem) Reset() {
	*x = GeneratedLootItem{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeneratedLootItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneratedLootItem) ProtoMessage() {}

func (x *GeneratedLootItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneratedLootItem.ProtoReflect.Descriptor instead.
func (*GeneratedLootItem) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{77}
}

func (x *GeneratedLootItem) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *GeneratedLootItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GeneratedLootItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GeneratedLootItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *GeneratedLootItem) GetUnitValueGp() int32 {
	if x != nil {
		return x.UnitValueGp
	}
	return 0
}

func (x *GeneratedLootItem) GetTotalValueGp() int32 {
	if x != nil {
		return x.TotalValueGp
	}
	return 0
}

func (x *GeneratedLootItem) GetRarity() string {
	if x != nil {
		return x.Rarity
	}
	return ""
}

func (x *GeneratedLootItem) GetItemType() string {
	if x != nil {
		return x.ItemType
	}
	return ""
}

func (x *GeneratedLootItem) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

func (x *GeneratedLootItem) GetIsMagical() bool {
	if x != nil {
		return x.IsMagical
	}
	return false
}

func (x *GeneratedLootItem) GetIsCursed() bool {
	if x != nil {
		return x.IsCursed
	}
	return false
}

func (x *GeneratedLootItem) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

// Statistics for loot generation
type LootGenerationStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Generation time
	GenerationTimeMs int64 `protobuf:"varint,1,opt,name=generation_time_ms,json=generationTimeMs,proto3" json:"generation_time_ms,omitempty"`
	// Number of table rolls
	TableRollsMade int32 `protobuf:"varint,2,opt,name=table_rolls_made,json=tableRollsMade,proto3" json:"table_rolls_made,omitempty"`
	// Items generated
	ItemsGenerated int32 `protobuf:"varint,3,opt,name=items_generated,json=itemsGenerated,proto3" json:"items_generated,omitempty"`
	// Value generated vs budget
	ValueGeneratedGp int32 `protobuf:"varint,4,opt,name=value_generated_gp,json=valueGeneratedGp,proto3" json:"value_generated_gp,omitempty"`
	ValueBudgetGp    int32 `protobuf:"varint,5,opt,name=value_budget_gp,json=valueBudgetGp,proto3" json:"value_budget_gp,omitempty"`
	// Rarity breakdown
	RarityCounts  map[string]int32 `protobuf:"bytes,6,rep,name=rarity_counts,json=rarityCounts,proto3" json:"rarity_counts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LootGenerationStats) Reset() {
	*x = LootGenerationStats{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LootGenerationStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LootGenerationStats) ProtoMessage() {}

func (x *LootGenerationStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LootGenerationStats.ProtoReflect.Descriptor instead.
func (*LootGenerationStats) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{78}
}

func (x *LootGenerationStats) GetGenerationTimeMs() int64 {
	if x != nil {
		return x.GenerationTimeMs
	}
	return 0
}

func (x *LootGenerationStats) GetTableRollsMade() int32 {
	if x != nil {
		return x.TableRollsMade
	}
	return 0
}

func (x *LootGenerationStats) GetItemsGenerated() int32 {
	if x != nil {
		return x.ItemsGenerated
	}
	return 0
}

func (x *LootGenerationStats) GetValueGeneratedGp() int32 {
	if x != nil {
		return x.ValueGeneratedGp
	}
	return 0
}

func (x *LootGenerationStats) GetValueBudgetGp() int32 {
	if x != nil {
		return x.ValueBudgetGp
	}
	return 0
}

func (x *LootGenerationStats) GetRarityCounts() map[string]int32 {
	if x != nil {
		return x.RarityCounts
	}
	return nil
}

// Validate selection table request
type ValidateSelectionTableRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Table to validate
	Table *SelectionTable `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	// Validation options
	ValidationOptions *TableValidationOptions `protobuf:"bytes,2,opt,name=validation_options,json=validationOptions,proto3" json:"validation_options,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ValidateSelectionTableRequest) Reset() {
	*x = ValidateSelectionTableRequest{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateSelectionTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateSelectionTableRequest) ProtoMessage() {}

func (x *ValidateSelectionTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateSelectionTableRequest.ProtoReflect.Descriptor instead.
func (*ValidateSelectionTableRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{79}
}

func (x *ValidateSelectionTableRequest) GetTable() *SelectionTable {
	if x != nil {
		return x.Table
	}
	return nil
}

func (x *ValidateSelectionTableRequest) GetValidationOptions() *TableValidationOptions {
	if x != nil {
		return x.ValidationOptions
	}
	return nil
}

// Validate selection table response
type ValidateSelectionTableResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Overall validation result
	ValidationResult *ValidationResult `protobuf:"bytes,1,opt,name=validation_result,json=validationResult,proto3" json:"validation_result,omitempty"`
	// Detailed validation checks
	ValidationChecks []*TableValidationCheck `protobuf:"bytes,2,rep,name=validation_checks,json=validationChecks,proto3" json:"validation_checks,omitempty"`
	// Validation statistics
	ValidationStats *TableValidationStats `protobuf:"bytes,3,opt,name=validation_stats,json=validationStats,proto3" json:"validation_stats,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ValidateSelectionTableResponse) Reset() {
	*x = ValidateSelectionTableResponse{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateSelectionTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateSelectionTableResponse) ProtoMessage() {}

func (x *ValidateSelectionTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateSelectionTableResponse.ProtoReflect.Descriptor instead.
func (*ValidateSelectionTableResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{80}
}

func (x *ValidateSelectionTableResponse) GetValidationResult() *ValidationResult {
	if x != nil {
		return x.ValidationResult
	}
	return nil
}

func (x *ValidateSelectionTableResponse) GetValidationChecks() []*TableValidationCheck {
	if x != nil {
		return x.ValidationChecks
	}
	return nil
}

func (x *ValidateSelectionTableResponse) GetValidationStats() *TableValidationStats {
	if x != nil {
		return x.ValidationStats
	}
	return nil
}

// Individual table validation check
type TableValidationCheck struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Check name
	CheckName string `protobuf:"bytes,1,opt,name=check_name,json=checkName,proto3" json:"check_name,omitempty"`
	// Check result
	Result TableValidationCheckResult `protobuf:"varint,2,opt,name=result,proto3,enum=api.v1alpha1.TableValidationCheckResult" json:"result,omitempty"`
	// Check message
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// Severity
	Severity TableValidationSeverity `protobuf:"varint,4,opt,name=severity,proto3,enum=api.v1alpha1.TableValidationSeverity" json:"severity,omitempty"`
	// Entry ID if check is entry-specific
	EntryId string `protobuf:"bytes,5,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"`
	// Suggested fix
	SuggestedFix  string `protobuf:"bytes,6,opt,name=suggested_fix,json=suggestedFix,proto3" json:"suggested_fix,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TableValidationCheck) Reset() {
	*x = TableValidationCheck{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableValidationCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableValidationCheck) ProtoMessage() {}

func (x *TableValidationCheck) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableValidationCheck.ProtoReflect.Descriptor instead.
func (*TableValidationCheck) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{81}
}

func (x *TableValidationCheck) GetCheckName() string {
	if x != nil {
		return x.CheckName
	}
	return ""
}

func (x *TableValidationCheck) GetResult() TableValidationCheckResult {
	if x != nil {
		return x.Result
	}
	return TableValidationCheckResult_TABLE_VALIDATION_CHECK_RESULT_UNSPECIFIED
}

func (x *TableValidationCheck) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TableValidationCheck) GetSeverity() TableValidationSeverity {
	if x != nil {
		return x.Severity
	}
	return TableValidationSeverity_TABLE_VALIDATION_SEVERITY_UNSPECIFIED
}

func (x *TableValidationCheck) GetEntryId() string {
	if x != nil {
		return x.EntryId
	}
	return ""
}

func (x *TableValidationCheck) GetSuggestedFix() string {
	if x != nil {
		return x.SuggestedFix
	}
	return ""
}

// Statistics for table validation
type TableValidationStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Validation time
	ValidationTimeMs int64 `protobuf:"varint,1,opt,name=validation_time_ms,json=validationTimeMs,proto3" json:"validation_time_ms,omitempty"`
	// Checks performed
	ChecksPerformed int32 `protobuf:"varint,2,opt,name=checks_performed,json=checksPerformed,proto3" json:"checks_performed,omitempty"`
	// Checks passed
	ChecksPassed int32 `protobuf:"varint,3,opt,name=checks_passed,json=checksPassed,proto3" json:"checks_passed,omitempty"`
	// Checks failed
	ChecksFailed int32 `protobuf:"varint,4,opt,name=checks_failed,json=checksFailed,proto3" json:"checks_failed,omitempty"`
	// Warnings generated
	WarningsGenerated int32 `protobuf:"varint,5,opt,name=warnings_generated,json=warningsGenerated,proto3" json:"warnings_generated,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *TableValidationStats) Reset() {
	*x = TableValidationStats{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableValidationStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableValidationStats) ProtoMessage() {}

func (x *TableValidationStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableValidationStats.ProtoReflect.Descriptor instead.
func (*TableValidationStats) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{82}
}

func (x *TableValidationStats) GetValidationTimeMs() int64 {
	if x != nil {
		return x.ValidationTimeMs
	}
	return 0
}

func (x *TableValidationStats) GetChecksPerformed() int32 {
	if x != nil {
		return x.ChecksPerformed
	}
	return 0
}

func (x *TableValidationStats) GetChecksPassed() int32 {
	if x != nil {
		return x.ChecksPassed
	}
	return 0
}

func (x *TableValidationStats) GetChecksFailed() int32 {
	if x != nil {
		return x.ChecksFailed
	}
	return 0
}

func (x *TableValidationStats) GetWarningsGenerated() int32 {
	if x != nil {
		return x.WarningsGenerated
	}
	return 0
}

// Get table statistics request
type GetTableStatisticsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Table identifier
	TableId string `protobuf:"bytes,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	// Time range for statistics
	TimeRange *TableTimeRange `protobuf:"bytes,2,opt,name=time_range,json=timeRange,proto3" json:"time_range,omitempty"`
	// Level of detail
	DetailLevel   StatisticsDetail `protobuf:"varint,3,opt,name=detail_level,json=detailLevel,proto3,enum=api.v1alpha1.StatisticsDetail" json:"detail_level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTableStatisticsRequest) Reset() {
	*x = GetTableStatisticsRequest{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTableStatisticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTableStatisticsRequest) ProtoMessage() {}

func (x *GetTableStatisticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTableStatisticsRequest.ProtoReflect.Descriptor instead.
func (*GetTableStatisticsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{83}
}

func (x *GetTableStatisticsRequest) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *GetTableStatisticsRequest) GetTimeRange() *TableTimeRange {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

func (x *GetTableStatisticsRequest) GetDetailLevel() StatisticsDetail {
	if x != nil {
		return x.DetailLevel
	}
	return StatisticsDetail_STATISTICS_DETAIL_UNSPECIFIED
}

// Time range for table statistics
type TableTimeRange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     int64                  `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       int64                  `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TableTimeRange) Reset() {
	*x = TableTimeRange{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableTimeRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableTimeRange) ProtoMessage() {}

func (x *TableTimeRange) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableTimeRange.ProtoReflect.Descriptor instead.
func (*TableTimeRange) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{84}
}

func (x *TableTimeRange) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *TableTimeRange) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

// Get table statistics response
type GetTableStatisticsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Table statistics
	Statistics *TableStatistics `protobuf:"bytes,1,opt,name=statistics,proto3" json:"statistics,omitempty"`
	// Statistical analysis
	Analysis      *StatisticalAnalysis `protobuf:"bytes,2,opt,name=analysis,proto3" json:"analysis,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTableStatisticsResponse) Reset() {
	*x = GetTableStatisticsResponse{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTableStatisticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTableStatisticsResponse) ProtoMessage() {}

func (x *GetTableStatisticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTableStatisticsResponse.ProtoReflect.Descriptor instead.
func (*GetTableStatisticsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{85}
}

func (x *GetTableStatisticsResponse) GetStatistics() *TableStatistics {
	if x != nil {
		return x.Statistics
	}
	return nil
}

func (x *GetTableStatisticsResponse) GetAnalysis() *StatisticalAnalysis {
	if x != nil {
		return x.Analysis
	}
	return nil
}

// Statistical analysis of table usage
type StatisticalAnalysis struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Roll distribution analysis
	RollDistribution *RollDistributionAnalysis `protobuf:"bytes,1,opt,name=roll_distribution,json=rollDistribution,proto3" json:"roll_distribution,omitempty"`
	// Entry selection analysis
	EntrySelection *EntrySelectionAnalysis `protobuf:"bytes,2,opt,name=entry_selection,json=entrySelection,proto3" json:"entry_selection,omitempty"`
	// Performance analysis
	Performance *PerformanceAnalysis `protobuf:"bytes,3,opt,name=performance,proto3" json:"performance,omitempty"`
	// Trends over time
	Trends        []*TrendData `protobuf:"bytes,4,rep,name=trends,proto3" json:"trends,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatisticalAnalysis) Reset() {
	*x = StatisticalAnalysis{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatisticalAnalysis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatisticalAnalysis) ProtoMessage() {}

func (x *StatisticalAnalysis) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatisticalAnalysis.ProtoReflect.Descriptor instead.
func (*StatisticalAnalysis) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{86}
}

func (x *StatisticalAnalysis) GetRollDistribution() *RollDistributionAnalysis {
	if x != nil {
		return x.RollDistribution
	}
	return nil
}

func (x *StatisticalAnalysis) GetEntrySelection() *EntrySelectionAnalysis {
	if x != nil {
		return x.EntrySelection
	}
	return nil
}

func (x *StatisticalAnalysis) GetPerformance() *PerformanceAnalysis {
	if x != nil {
		return x.Performance
	}
	return nil
}

func (x *StatisticalAnalysis) GetTrends() []*TrendData {
	if x != nil {
		return x.Trends
	}
	return nil
}

// Analysis of roll distribution
type RollDistributionAnalysis struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Expected vs actual distribution
	ExpectedFrequency map[int32]float64 `protobuf:"bytes,1,rep,name=expected_frequency,json=expectedFrequency,proto3" json:"expected_frequency,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	ActualFrequency   map[int32]float64 `protobuf:"bytes,2,rep,name=actual_frequency,json=actualFrequency,proto3" json:"actual_frequency,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	// Chi-square test result
	ChiSquareStatistic float64 `protobuf:"fixed64,3,opt,name=chi_square_statistic,json=chiSquareStatistic,proto3" json:"chi_square_statistic,omitempty"`
	PValue             float64 `protobuf:"fixed64,4,opt,name=p_value,json=pValue,proto3" json:"p_value,omitempty"`
	// Distribution uniformity
	UniformityScore float64 `protobuf:"fixed64,5,opt,name=uniformity_score,json=uniformityScore,proto3" json:"uniformity_score,omitempty"`
	// Outlier rolls
	OutlierRolls  []int32 `protobuf:"varint,6,rep,packed,name=outlier_rolls,json=outlierRolls,proto3" json:"outlier_rolls,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollDistributionAnalysis) Reset() {
	*x = RollDistributionAnalysis{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollDistributionAnalysis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollDistributionAnalysis) ProtoMessage() {}

func (x *RollDistributionAnalysis) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollDistributionAnalysis.ProtoReflect.Descriptor instead.
func (*RollDistributionAnalysis) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{87}
}

func (x *RollDistributionAnalysis) GetExpectedFrequency() map[int32]float64 {
	if x != nil {
		return x.ExpectedFrequency
	}
	return nil
}

func (x *RollDistributionAnalysis) GetActualFrequency() map[int32]float64 {
	if x != nil {
		return x.ActualFrequency
	}
	return nil
}

func (x *RollDistributionAnalysis) GetChiSquareStatistic() float64 {
	if x != nil {
		return x.ChiSquareStatistic
	}
	return 0
}

func (x *RollDistributionAnalysis) GetPValue() float64 {
	if x != nil {
		return x.PValue
	}
	return 0
}

func (x *RollDistributionAnalysis) GetUniformityScore() float64 {
	if x != nil {
		return x.UniformityScore
	}
	return 0
}

func (x *RollDistributionAnalysis) GetOutlierRolls() []int32 {
	if x != nil {
		return x.OutlierRolls
	}
	return nil
}

// Analysis of entry selection patterns
type EntrySelectionAnalysis struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Most/least selected entries
	MostSelectedEntry  string `protobuf:"bytes,1,opt,name=most_selected_entry,json=mostSelectedEntry,proto3" json:"most_selected_entry,omitempty"`
	LeastSelectedEntry string `protobuf:"bytes,2,opt,name=least_selected_entry,json=leastSelectedEntry,proto3" json:"least_selected_entry,omitempty"`
	// Selection bias score
	SelectionBias float64 `protobuf:"fixed64,3,opt,name=selection_bias,json=selectionBias,proto3" json:"selection_bias,omitempty"`
	// Entropy of selections
	SelectionEntropy float64 `protobuf:"fixed64,4,opt,name=selection_entropy,json=selectionEntropy,proto3" json:"selection_entropy,omitempty"`
	// Clustering of selections
	Clusters      []*SelectionCluster `protobuf:"bytes,5,rep,name=clusters,proto3" json:"clusters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EntrySelectionAnalysis) Reset() {
	*x = EntrySelectionAnalysis{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntrySelectionAnalysis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntrySelectionAnalysis) ProtoMessage() {}

func (x *EntrySelectionAnalysis) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntrySelectionAnalysis.ProtoReflect.Descriptor instead.
func (*EntrySelectionAnalysis) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{88}
}

func (x *EntrySelectionAnalysis) GetMostSelectedEntry() string {
	if x != nil {
		return x.MostSelectedEntry
	}
	return ""
}

func (x *EntrySelectionAnalysis) GetLeastSelectedEntry() string {
	if x != nil {
		return x.LeastSelectedEntry
	}
	return ""
}

func (x *EntrySelectionAnalysis) GetSelectionBias() float64 {
	if x != nil {
		return x.SelectionBias
	}
	return 0
}

func (x *EntrySelectionAnalysis) GetSelectionEntropy() float64 {
	if x != nil {
		return x.SelectionEntropy
	}
	return 0
}

func (x *EntrySelectionAnalysis) GetClusters() []*SelectionCluster {
	if x != nil {
		return x.Clusters
	}
	return nil
}

// Cluster of similar selections
type SelectionCluster struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Cluster identifier
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Entries in cluster
	EntryIds []string `protobuf:"bytes,2,rep,name=entry_ids,json=entryIds,proto3" json:"entry_ids,omitempty"`
	// Cluster frequency
	Frequency float64 `protobuf:"fixed64,3,opt,name=frequency,proto3" json:"frequency,omitempty"`
	// Cluster characteristics
	Characteristics string `protobuf:"bytes,4,opt,name=characteristics,proto3" json:"characteristics,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SelectionCluster) Reset() {
	*x = SelectionCluster{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectionCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectionCluster) ProtoMessage() {}

func (x *SelectionCluster) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectionCluster.ProtoReflect.Descriptor instead.
func (*SelectionCluster) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{89}
}

func (x *SelectionCluster) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *SelectionCluster) GetEntryIds() []string {
	if x != nil {
		return x.EntryIds
	}
	return nil
}

func (x *SelectionCluster) GetFrequency() float64 {
	if x != nil {
		return x.Frequency
	}
	return 0
}

func (x *SelectionCluster) GetCharacteristics() string {
	if x != nil {
		return x.Characteristics
	}
	return ""
}

// Performance analysis
type PerformanceAnalysis struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Performance trend
	PerformanceTrend string `protobuf:"bytes,1,opt,name=performance_trend,json=performanceTrend,proto3" json:"performance_trend,omitempty"` // "improving", "stable", "degrading"
	// Bottlenecks identified
	Bottlenecks []string `protobuf:"bytes,2,rep,name=bottlenecks,proto3" json:"bottlenecks,omitempty"`
	// Optimization recommendations
	Recommendations []string `protobuf:"bytes,3,rep,name=recommendations,proto3" json:"recommendations,omitempty"`
	// Resource usage patterns
	ResourceUsage *ResourceUsagePattern `protobuf:"bytes,4,opt,name=resource_usage,json=resourceUsage,proto3" json:"resource_usage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PerformanceAnalysis) Reset() {
	*x = PerformanceAnalysis{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[90]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PerformanceAnalysis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformanceAnalysis) ProtoMessage() {}

func (x *PerformanceAnalysis) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[90]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerformanceAnalysis.ProtoReflect.Descriptor instead.
func (*PerformanceAnalysis) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{90}
}

func (x *PerformanceAnalysis) GetPerformanceTrend() string {
	if x != nil {
		return x.PerformanceTrend
	}
	return ""
}

func (x *PerformanceAnalysis) GetBottlenecks() []string {
	if x != nil {
		return x.Bottlenecks
	}
	return nil
}

func (x *PerformanceAnalysis) GetRecommendations() []string {
	if x != nil {
		return x.Recommendations
	}
	return nil
}

func (x *PerformanceAnalysis) GetResourceUsage() *ResourceUsagePattern {
	if x != nil {
		return x.ResourceUsage
	}
	return nil
}

// Resource usage pattern
type ResourceUsagePattern struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Memory usage trend
	MemoryTrend string `protobuf:"bytes,1,opt,name=memory_trend,json=memoryTrend,proto3" json:"memory_trend,omitempty"`
	// CPU usage pattern
	CpuPattern string `protobuf:"bytes,2,opt,name=cpu_pattern,json=cpuPattern,proto3" json:"cpu_pattern,omitempty"`
	// Cache effectiveness
	CacheEffectiveness float64 `protobuf:"fixed64,3,opt,name=cache_effectiveness,json=cacheEffectiveness,proto3" json:"cache_effectiveness,omitempty"`
	// Peak usage times
	PeakUsageTimes []int64 `protobuf:"varint,4,rep,packed,name=peak_usage_times,json=peakUsageTimes,proto3" json:"peak_usage_times,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ResourceUsagePattern) Reset() {
	*x = ResourceUsagePattern{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[91]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceUsagePattern) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceUsagePattern) ProtoMessage() {}

func (x *ResourceUsagePattern) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[91]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceUsagePattern.ProtoReflect.Descriptor instead.
func (*ResourceUsagePattern) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{91}
}

func (x *ResourceUsagePattern) GetMemoryTrend() string {
	if x != nil {
		return x.MemoryTrend
	}
	return ""
}

func (x *ResourceUsagePattern) GetCpuPattern() string {
	if x != nil {
		return x.CpuPattern
	}
	return ""
}

func (x *ResourceUsagePattern) GetCacheEffectiveness() float64 {
	if x != nil {
		return x.CacheEffectiveness
	}
	return 0
}

func (x *ResourceUsagePattern) GetPeakUsageTimes() []int64 {
	if x != nil {
		return x.PeakUsageTimes
	}
	return nil
}

// Trend data over time
type TrendData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Trend name
	TrendName string `protobuf:"bytes,1,opt,name=trend_name,json=trendName,proto3" json:"trend_name,omitempty"`
	// Time period
	TimePeriod *TableTimeRange `protobuf:"bytes,2,opt,name=time_period,json=timePeriod,proto3" json:"time_period,omitempty"`
	// Trend direction
	Direction string `protobuf:"bytes,3,opt,name=direction,proto3" json:"direction,omitempty"` // "increasing", "decreasing", "stable", "cyclical"
	// Trend strength
	Strength float64 `protobuf:"fixed64,4,opt,name=strength,proto3" json:"strength,omitempty"`
	// Data points
	DataPoints    []*TrendPoint `protobuf:"bytes,5,rep,name=data_points,json=dataPoints,proto3" json:"data_points,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrendData) Reset() {
	*x = TrendData{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[92]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrendData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrendData) ProtoMessage() {}

func (x *TrendData) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[92]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrendData.ProtoReflect.Descriptor instead.
func (*TrendData) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{92}
}

func (x *TrendData) GetTrendName() string {
	if x != nil {
		return x.TrendName
	}
	return ""
}

func (x *TrendData) GetTimePeriod() *TableTimeRange {
	if x != nil {
		return x.TimePeriod
	}
	return nil
}

func (x *TrendData) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *TrendData) GetStrength() float64 {
	if x != nil {
		return x.Strength
	}
	return 0
}

func (x *TrendData) GetDataPoints() []*TrendPoint {
	if x != nil {
		return x.DataPoints
	}
	return nil
}

// Individual trend data point
type TrendPoint struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Timestamp
	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Value at this time
	Value float64 `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	// Context or notes
	Context       string `protobuf:"bytes,3,opt,name=context,proto3" json:"context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrendPoint) Reset() {
	*x = TrendPoint{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[93]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrendPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrendPoint) ProtoMessage() {}

func (x *TrendPoint) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[93]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrendPoint.ProtoReflect.Descriptor instead.
func (*TrendPoint) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{93}
}

func (x *TrendPoint) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TrendPoint) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *TrendPoint) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

// Export selection table request
type ExportSelectionTableRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Table identifier
	TableId string `protobuf:"bytes,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	// Export format
	Format ExportFormat `protobuf:"varint,2,opt,name=format,proto3,enum=api.v1alpha1.ExportFormat" json:"format,omitempty"`
	// Export options
	ExportOptions *ExportOptions `protobuf:"bytes,3,opt,name=export_options,json=exportOptions,proto3" json:"export_options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportSelectionTableRequest) Reset() {
	*x = ExportSelectionTableRequest{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[94]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportSelectionTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportSelectionTableRequest) ProtoMessage() {}

func (x *ExportSelectionTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[94]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportSelectionTableRequest.ProtoReflect.Descriptor instead.
func (*ExportSelectionTableRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{94}
}

func (x *ExportSelectionTableRequest) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *ExportSelectionTableRequest) GetFormat() ExportFormat {
	if x != nil {
		return x.Format
	}
	return ExportFormat_EXPORT_FORMAT_UNSPECIFIED
}

func (x *ExportSelectionTableRequest) GetExportOptions() *ExportOptions {
	if x != nil {
		return x.ExportOptions
	}
	return nil
}

// Options for table export
type ExportOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether to include metadata
	IncludeMetadata bool `protobuf:"varint,1,opt,name=include_metadata,json=includeMetadata,proto3" json:"include_metadata,omitempty"`
	// Whether to include statistics
	IncludeStatistics bool `protobuf:"varint,2,opt,name=include_statistics,json=includeStatistics,proto3" json:"include_statistics,omitempty"`
	// Whether to include usage history
	IncludeUsageHistory bool `protobuf:"varint,3,opt,name=include_usage_history,json=includeUsageHistory,proto3" json:"include_usage_history,omitempty"`
	// Compression type
	Compression string `protobuf:"bytes,4,opt,name=compression,proto3" json:"compression,omitempty"` // "none", "gzip", "zip"
	// Character encoding
	Encoding      string `protobuf:"bytes,5,opt,name=encoding,proto3" json:"encoding,omitempty"` // "utf-8", "ascii"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportOptions) Reset() {
	*x = ExportOptions{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[95]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportOptions) ProtoMessage() {}

func (x *ExportOptions) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[95]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportOptions.ProtoReflect.Descriptor instead.
func (*ExportOptions) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{95}
}

func (x *ExportOptions) GetIncludeMetadata() bool {
	if x != nil {
		return x.IncludeMetadata
	}
	return false
}

func (x *ExportOptions) GetIncludeStatistics() bool {
	if x != nil {
		return x.IncludeStatistics
	}
	return false
}

func (x *ExportOptions) GetIncludeUsageHistory() bool {
	if x != nil {
		return x.IncludeUsageHistory
	}
	return false
}

func (x *ExportOptions) GetCompression() string {
	if x != nil {
		return x.Compression
	}
	return ""
}

func (x *ExportOptions) GetEncoding() string {
	if x != nil {
		return x.Encoding
	}
	return ""
}

// Export selection table response
type ExportSelectionTableResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Exported data
	ExportedData []byte `protobuf:"bytes,1,opt,name=exported_data,json=exportedData,proto3" json:"exported_data,omitempty"`
	// Export format used
	Format ExportFormat `protobuf:"varint,2,opt,name=format,proto3,enum=api.v1alpha1.ExportFormat" json:"format,omitempty"`
	// Export metadata
	ExportMetadata *ExportMetadata `protobuf:"bytes,3,opt,name=export_metadata,json=exportMetadata,proto3" json:"export_metadata,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ExportSelectionTableResponse) Reset() {
	*x = ExportSelectionTableResponse{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[96]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportSelectionTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportSelectionTableResponse) ProtoMessage() {}

func (x *ExportSelectionTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[96]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportSelectionTableResponse.ProtoReflect.Descriptor instead.
func (*ExportSelectionTableResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{96}
}

func (x *ExportSelectionTableResponse) GetExportedData() []byte {
	if x != nil {
		return x.ExportedData
	}
	return nil
}

func (x *ExportSelectionTableResponse) GetFormat() ExportFormat {
	if x != nil {
		return x.Format
	}
	return ExportFormat_EXPORT_FORMAT_UNSPECIFIED
}

func (x *ExportSelectionTableResponse) GetExportMetadata() *ExportMetadata {
	if x != nil {
		return x.ExportMetadata
	}
	return nil
}

// Metadata about export
type ExportMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Export timestamp
	ExportedAt int64 `protobuf:"varint,1,opt,name=exported_at,json=exportedAt,proto3" json:"exported_at,omitempty"`
	// Export size
	SizeBytes int64 `protobuf:"varint,2,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
	// Compression ratio (if compressed)
	CompressionRatio float64 `protobuf:"fixed64,3,opt,name=compression_ratio,json=compressionRatio,proto3" json:"compression_ratio,omitempty"`
	// Checksum
	Checksum string `protobuf:"bytes,4,opt,name=checksum,proto3" json:"checksum,omitempty"`
	// Export version
	ExportVersion string `protobuf:"bytes,5,opt,name=export_version,json=exportVersion,proto3" json:"export_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportMetadata) Reset() {
	*x = ExportMetadata{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[97]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportMetadata) ProtoMessage() {}

func (x *ExportMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[97]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportMetadata.ProtoReflect.Descriptor instead.
func (*ExportMetadata) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{97}
}

func (x *ExportMetadata) GetExportedAt() int64 {
	if x != nil {
		return x.ExportedAt
	}
	return 0
}

func (x *ExportMetadata) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *ExportMetadata) GetCompressionRatio() float64 {
	if x != nil {
		return x.CompressionRatio
	}
	return 0
}

func (x *ExportMetadata) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *ExportMetadata) GetExportVersion() string {
	if x != nil {
		return x.ExportVersion
	}
	return ""
}

// Import selection table request
type ImportSelectionTableRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Data to import
	ImportData []byte `protobuf:"bytes,1,opt,name=import_data,json=importData,proto3" json:"import_data,omitempty"`
	// Import format
	Format ExportFormat `protobuf:"varint,2,opt,name=format,proto3,enum=api.v1alpha1.ExportFormat" json:"format,omitempty"`
	// Import options
	ImportOptions *ImportOptions `protobuf:"bytes,3,opt,name=import_options,json=importOptions,proto3" json:"import_options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportSelectionTableRequest) Reset() {
	*x = ImportSelectionTableRequest{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[98]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportSelectionTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportSelectionTableRequest) ProtoMessage() {}

func (x *ImportSelectionTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[98]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportSelectionTableRequest.ProtoReflect.Descriptor instead.
func (*ImportSelectionTableRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{98}
}

func (x *ImportSelectionTableRequest) GetImportData() []byte {
	if x != nil {
		return x.ImportData
	}
	return nil
}

func (x *ImportSelectionTableRequest) GetFormat() ExportFormat {
	if x != nil {
		return x.Format
	}
	return ExportFormat_EXPORT_FORMAT_UNSPECIFIED
}

func (x *ImportSelectionTableRequest) GetImportOptions() *ImportOptions {
	if x != nil {
		return x.ImportOptions
	}
	return nil
}

// Options for table import
type ImportOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether to validate during import
	ValidateDuringImport bool `protobuf:"varint,1,opt,name=validate_during_import,json=validateDuringImport,proto3" json:"validate_during_import,omitempty"`
	// Whether to overwrite existing table
	OverwriteExisting bool `protobuf:"varint,2,opt,name=overwrite_existing,json=overwriteExisting,proto3" json:"overwrite_existing,omitempty"`
	// Whether to preserve original IDs
	PreserveIds bool `protobuf:"varint,3,opt,name=preserve_ids,json=preserveIds,proto3" json:"preserve_ids,omitempty"`
	// Whether to update metadata
	UpdateMetadata bool `protobuf:"varint,4,opt,name=update_metadata,json=updateMetadata,proto3" json:"update_metadata,omitempty"`
	// Import source description
	SourceDescription string `protobuf:"bytes,5,opt,name=source_description,json=sourceDescription,proto3" json:"source_description,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ImportOptions) Reset() {
	*x = ImportOptions{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[99]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportOptions) ProtoMessage() {}

func (x *ImportOptions) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[99]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportOptions.ProtoReflect.Descriptor instead.
func (*ImportOptions) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{99}
}

func (x *ImportOptions) GetValidateDuringImport() bool {
	if x != nil {
		return x.ValidateDuringImport
	}
	return false
}

func (x *ImportOptions) GetOverwriteExisting() bool {
	if x != nil {
		return x.OverwriteExisting
	}
	return false
}

func (x *ImportOptions) GetPreserveIds() bool {
	if x != nil {
		return x.PreserveIds
	}
	return false
}

func (x *ImportOptions) GetUpdateMetadata() bool {
	if x != nil {
		return x.UpdateMetadata
	}
	return false
}

func (x *ImportOptions) GetSourceDescription() string {
	if x != nil {
		return x.SourceDescription
	}
	return ""
}

// Import selection table response
type ImportSelectionTableResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Imported table
	ImportedTable *SelectionTable `protobuf:"bytes,1,opt,name=imported_table,json=importedTable,proto3" json:"imported_table,omitempty"`
	// Import result
	ImportResult *ImportResult `protobuf:"bytes,2,opt,name=import_result,json=importResult,proto3" json:"import_result,omitempty"`
	// Import statistics
	ImportStats   *ImportStats `protobuf:"bytes,3,opt,name=import_stats,json=importStats,proto3" json:"import_stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportSelectionTableResponse) Reset() {
	*x = ImportSelectionTableResponse{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[100]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportSelectionTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportSelectionTableResponse) ProtoMessage() {}

func (x *ImportSelectionTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[100]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportSelectionTableResponse.ProtoReflect.Descriptor instead.
func (*ImportSelectionTableResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{100}
}

func (x *ImportSelectionTableResponse) GetImportedTable() *SelectionTable {
	if x != nil {
		return x.ImportedTable
	}
	return nil
}

func (x *ImportSelectionTableResponse) GetImportResult() *ImportResult {
	if x != nil {
		return x.ImportResult
	}
	return nil
}

func (x *ImportSelectionTableResponse) GetImportStats() *ImportStats {
	if x != nil {
		return x.ImportStats
	}
	return nil
}

// Result of import operation
type ImportResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether import was successful
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Import warnings
	Warnings []*RoomError `protobuf:"bytes,2,rep,name=warnings,proto3" json:"warnings,omitempty"`
	// Import errors
	Errors []*RoomError `protobuf:"bytes,3,rep,name=errors,proto3" json:"errors,omitempty"`
	// Items imported
	ItemsImported int32 `protobuf:"varint,4,opt,name=items_imported,json=itemsImported,proto3" json:"items_imported,omitempty"`
	// Items skipped
	ItemsSkipped  int32 `protobuf:"varint,5,opt,name=items_skipped,json=itemsSkipped,proto3" json:"items_skipped,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportResult) Reset() {
	*x = ImportResult{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[101]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportResult) ProtoMessage() {}

func (x *ImportResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[101]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportResult.ProtoReflect.Descriptor instead.
func (*ImportResult) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{101}
}

func (x *ImportResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ImportResult) GetWarnings() []*RoomError {
	if x != nil {
		return x.Warnings
	}
	return nil
}

func (x *ImportResult) GetErrors() []*RoomError {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *ImportResult) GetItemsImported() int32 {
	if x != nil {
		return x.ItemsImported
	}
	return 0
}

func (x *ImportResult) GetItemsSkipped() int32 {
	if x != nil {
		return x.ItemsSkipped
	}
	return 0
}

// Statistics for import operation
type ImportStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Import time
	ImportTimeMs int64 `protobuf:"varint,1,opt,name=import_time_ms,json=importTimeMs,proto3" json:"import_time_ms,omitempty"`
	// Data processed
	DataProcessedBytes int64 `protobuf:"varint,2,opt,name=data_processed_bytes,json=dataProcessedBytes,proto3" json:"data_processed_bytes,omitempty"`
	// Validation time
	ValidationTimeMs int64 `protobuf:"varint,3,opt,name=validation_time_ms,json=validationTimeMs,proto3" json:"validation_time_ms,omitempty"`
	// Processing rate
	ProcessingRateMbps float64 `protobuf:"fixed64,4,opt,name=processing_rate_mbps,json=processingRateMbps,proto3" json:"processing_rate_mbps,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ImportStats) Reset() {
	*x = ImportStats{}
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[102]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportStats) ProtoMessage() {}

func (x *ImportStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_room_selectables_proto_msgTypes[102]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportStats.ProtoReflect.Descriptor instead.
func (*ImportStats) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_room_selectables_proto_rawDescGZIP(), []int{102}
}

func (x *ImportStats) GetImportTimeMs() int64 {
	if x != nil {
		return x.ImportTimeMs
	}
	return 0
}

func (x *ImportStats) GetDataProcessedBytes() int64 {
	if x != nil {
		return x.DataProcessedBytes
	}
	return 0
}

func (x *ImportStats) GetValidationTimeMs() int64 {
	if x != nil {
		return x.ValidationTimeMs
	}
	return 0
}

func (x *ImportStats) GetProcessingRateMbps() float64 {
	if x != nil {
		return x.ProcessingRateMbps
	}
	return 0
}

var File_api_v1alpha1_room_selectables_proto protoreflect.FileDescriptor

const file_api_v1alpha1_room_selectables_proto_rawDesc = "" +
	"\n" +
	"#api/v1alpha1/room_selectables.proto\x12\fapi.v1alpha1\x1a\x1eapi/v1alpha1/room_common.proto\"\xc3\x01\n" +
	"\x1bCreateSelectionTableRequest\x122\n" +
	"\x05table\x18\x01 \x01(\v2\x1c.api.v1alpha1.SelectionTableR\x05table\x12\x1b\n" +
	"\tis_public\x18\x02 \x01(\bR\bisPublic\x12S\n" +
	"\x12validation_options\x18\x03 \x01(\v2$.api.v1alpha1.TableValidationOptionsR\x11validationOptions\"\xcb\x03\n" +
	"\x0eSelectionTable\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1a\n" +
	"\bcategory\x18\x04 \x01(\tR\bcategory\x12?\n" +
	"\n" +
	"table_type\x18\x05 \x01(\x0e2 .api.v1alpha1.SelectionTableTypeR\ttableType\x12@\n" +
	"\vdice_config\x18\x06 \x01(\v2\x1f.api.v1alpha1.DiceConfigurationR\n" +
	"diceConfig\x122\n" +
	"\aentries\x18\a \x03(\v2\x18.api.v1alpha1.TableEntryR\aentries\x12@\n" +
	"\bmetadata\x18\b \x01(\v2$.api.v1alpha1.SelectionTableMetadataR\bmetadata\x12(\n" +
	"\x10nested_table_ids\x18\t \x03(\tR\x0enestedTableIds\x124\n" +
	"\aoptions\x18\n" +
	" \x01(\v2\x1a.api.v1alpha1.TableOptionsR\aoptions\"\xce\x01\n" +
	"\x11DiceConfiguration\x12#\n" +
	"\rdice_notation\x18\x01 \x01(\tR\fdiceNotation\x12\x1a\n" +
	"\bmodifier\x18\x02 \x01(\x05R\bmodifier\x12\x19\n" +
	"\bmin_roll\x18\x03 \x01(\x05R\aminRoll\x12\x19\n" +
	"\bmax_roll\x18\x04 \x01(\x05R\amaxRoll\x12\x1b\n" +
	"\treroll_on\x18\x05 \x03(\x05R\brerollOn\x12%\n" +
	"\x0eexploding_dice\x18\x06 \x01(\bR\rexplodingDice\"\xea\x02\n" +
	"\n" +
	"TableEntry\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x126\n" +
	"\n" +
	"roll_range\x18\x04 \x01(\v2\x17.api.v1alpha1.RollRangeR\trollRange\x12\x16\n" +
	"\x06weight\x18\x05 \x01(\x01R\x06weight\x126\n" +
	"\x06result\x18\x06 \x01(\v2\x1e.api.v1alpha1.TableEntryResultR\x06result\x12<\n" +
	"\n" +
	"conditions\x18\a \x03(\v2\x1c.api.v1alpha1.EntryConditionR\n" +
	"conditions\x12)\n" +
	"\x10allow_duplicates\x18\b \x01(\bR\x0fallowDuplicates\x12%\n" +
	"\x0emax_selections\x18\t \x01(\x05R\rmaxSelections\"/\n" +
	"\tRollRange\x12\x10\n" +
	"\x03min\x18\x01 \x01(\x05R\x03min\x12\x10\n" +
	"\x03max\x18\x02 \x01(\x05R\x03max\"\x82\x04\n" +
	"\x10TableEntryResult\x12C\n" +
	"\vresult_type\x18\x01 \x01(\x0e2\".api.v1alpha1.TableEntryResultTypeR\n" +
	"resultType\x12;\n" +
	"\vitem_result\x18\x02 \x01(\v2\x18.api.v1alpha1.ItemResultH\x00R\n" +
	"itemResult\x12A\n" +
	"\rentity_result\x18\x03 \x01(\v2\x1a.api.v1alpha1.EntityResultH\x00R\fentityResult\x12Q\n" +
	"\x13nested_table_result\x18\x04 \x01(\v2\x1f.api.v1alpha1.NestedTableResultH\x00R\x11nestedTableResult\x12;\n" +
	"\vtext_result\x18\x05 \x01(\v2\x18.api.v1alpha1.TextResultH\x00R\n" +
	"textResult\x12A\n" +
	"\reffect_result\x18\x06 \x01(\v2\x1a.api.v1alpha1.EffectResultH\x00R\feffectResult\x12G\n" +
	"\x0fmultiple_result\x18\a \x01(\v2\x1c.api.v1alpha1.MultipleResultH\x00R\x0emultipleResultB\r\n" +
	"\vresult_data\"\xf4\x02\n" +
	"\n" +
	"ItemResult\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\tR\x06itemId\x12\x1b\n" +
	"\titem_name\x18\x02 \x01(\tR\bitemName\x127\n" +
	"\bquantity\x18\x03 \x01(\v2\x1b.api.v1alpha1.QuantityRangeR\bquantity\x12\x16\n" +
	"\x06rarity\x18\x04 \x01(\tR\x06rarity\x12\x19\n" +
	"\bvalue_gp\x18\x05 \x01(\x05R\avalueGp\x12H\n" +
	"\n" +
	"properties\x18\x06 \x03(\v2(.api.v1alpha1.ItemResult.PropertiesEntryR\n" +
	"properties\x12\x1d\n" +
	"\n" +
	"is_magical\x18\a \x01(\bR\tisMagical\x12\x1c\n" +
	"\tcondition\x18\b \x01(\tR\tcondition\x1a=\n" +
	"\x0fPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"X\n" +
	"\rQuantityRange\x12\x10\n" +
	"\x03min\x18\x01 \x01(\x05R\x03min\x12\x10\n" +
	"\x03max\x18\x02 \x01(\x05R\x03max\x12#\n" +
	"\rdice_notation\x18\x03 \x01(\tR\fdiceNotation\"\xaf\x03\n" +
	"\fEntityResult\x12\x1f\n" +
	"\ventity_type\x18\x01 \x01(\tR\n" +
	"entityType\x12\x1b\n" +
	"\tentity_id\x18\x02 \x01(\tR\bentityId\x12\x1f\n" +
	"\ventity_name\x18\x03 \x01(\tR\n" +
	"entityName\x127\n" +
	"\bquantity\x18\x04 \x01(\v2\x1b.api.v1alpha1.QuantityRangeR\bquantity\x12)\n" +
	"\x10challenge_rating\x18\x05 \x01(\x01R\x0fchallengeRating\x12J\n" +
	"\n" +
	"properties\x18\x06 \x03(\v2*.api.v1alpha1.EntityResult.PropertiesEntryR\n" +
	"properties\x12Q\n" +
	"\x11spawn_preferences\x18\a \x01(\v2$.api.v1alpha1.EntitySpawnPreferencesR\x10spawnPreferences\x1a=\n" +
	"\x0fPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb6\x01\n" +
	"\x16EntitySpawnPreferences\x12/\n" +
	"\x13preferred_locations\x18\x01 \x03(\tR\x12preferredLocations\x12\x1c\n" +
	"\tformation\x18\x02 \x01(\tR\tformation\x12\x1a\n" +
	"\bbehavior\x18\x03 \x01(\tR\bbehavior\x121\n" +
	"\x14special_instructions\x18\x04 \x01(\tR\x13specialInstructions\"\xb0\x01\n" +
	"\x11NestedTableResult\x12\x19\n" +
	"\btable_id\x18\x01 \x01(\tR\atableId\x12\x1d\n" +
	"\n" +
	"roll_count\x18\x02 \x01(\x05R\trollCount\x128\n" +
	"\tmodifiers\x18\x03 \x03(\v2\x1a.api.v1alpha1.RollModifierR\tmodifiers\x12'\n" +
	"\x0fcombine_results\x18\x04 \x01(\bR\x0ecombineResults\"g\n" +
	"\fRollModifier\x12#\n" +
	"\rmodifier_type\x18\x01 \x01(\tR\fmodifierType\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value\x12\x1c\n" +
	"\tcondition\x18\x03 \x01(\tR\tcondition\"\x8b\x02\n" +
	"\n" +
	"TextResult\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\x12\x1a\n" +
	"\bcategory\x18\x02 \x01(\tR\bcategory\x12E\n" +
	"\tvariables\x18\x03 \x03(\v2'.api.v1alpha1.TextResult.VariablesEntryR\tvariables\x12'\n" +
	"\x0frequires_action\x18\x04 \x01(\bR\x0erequiresAction\x12\x1f\n" +
	"\vaction_type\x18\x05 \x01(\tR\n" +
	"actionType\x1a<\n" +
	"\x0eVariablesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf4\x02\n" +
	"\fEffectResult\x12\x1f\n" +
	"\veffect_type\x18\x01 \x01(\tR\n" +
	"effectType\x12\x1f\n" +
	"\veffect_name\x18\x02 \x01(\tR\n" +
	"effectName\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12J\n" +
	"\n" +
	"parameters\x18\x04 \x03(\v2*.api.v1alpha1.EffectResult.ParametersEntryR\n" +
	"parameters\x12\x1a\n" +
	"\bduration\x18\x05 \x01(\tR\bduration\x12\x1c\n" +
	"\tintensity\x18\x06 \x01(\x01R\tintensity\x12;\n" +
	"\x1aarea_of_effect_description\x18\a \x01(\tR\x17areaOfEffectDescription\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9c\x01\n" +
	"\x0eMultipleResult\x128\n" +
	"\aresults\x18\x01 \x03(\v2\x1e.api.v1alpha1.TableEntryResultR\aresults\x12-\n" +
	"\x12combination_method\x18\x02 \x01(\tR\x11combinationMethod\x12!\n" +
	"\fchoose_count\x18\x03 \x01(\x05R\vchooseCount\"\xc2\x01\n" +
	"\x0eEntryCondition\x12%\n" +
	"\x0econdition_type\x18\x01 \x01(\tR\rconditionType\x12%\n" +
	"\x0eparameter_name\x18\x02 \x01(\tR\rparameterName\x12\x1a\n" +
	"\boperator\x18\x03 \x01(\tR\boperator\x12%\n" +
	"\x0eexpected_value\x18\x04 \x01(\tR\rexpectedValue\x12\x1f\n" +
	"\vis_required\x18\x05 \x01(\bR\n" +
	"isRequired\"\x94\x02\n" +
	"\fTableOptions\x12)\n" +
	"\x10allow_duplicates\x18\x01 \x01(\bR\x0fallowDuplicates\x12/\n" +
	"\x14max_results_per_roll\x18\x02 \x01(\x05R\x11maxResultsPerRoll\x12,\n" +
	"\x12default_roll_count\x18\x03 \x01(\x05R\x10defaultRollCount\x12!\n" +
	"\fsort_results\x18\x04 \x01(\bR\vsortResults\x12#\n" +
	"\rsort_criteria\x18\x05 \x01(\tR\fsortCriteria\x122\n" +
	"\x15group_similar_results\x18\x06 \x01(\bR\x13groupSimilarResults\"\xb3\x02\n" +
	"\x16SelectionTableMetadata\x12\x16\n" +
	"\x06author\x18\x01 \x01(\tR\x06author\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x1d\n" +
	"\n" +
	"created_at\x18\x03 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x04 \x01(\x03R\tupdatedAt\x12>\n" +
	"\vusage_stats\x18\x05 \x01(\v2\x1d.api.v1alpha1.TableUsageStatsR\n" +
	"usageStats\x12\x12\n" +
	"\x04tags\x18\x06 \x03(\tR\x04tags\x12\x16\n" +
	"\x06source\x18\a \x01(\tR\x06source\x12\x1c\n" +
	"\tcopyright\x18\b \x01(\tR\tcopyright\x12\x1f\n" +
	"\vis_official\x18\t \x01(\bR\n" +
	"isOfficial\"\x93\x02\n" +
	"\x0fTableUsageStats\x12\x1d\n" +
	"\n" +
	"roll_count\x18\x01 \x01(\x03R\trollCount\x12+\n" +
	"\x11results_generated\x18\x02 \x01(\x03R\x10resultsGenerated\x12,\n" +
	"\x12most_common_result\x18\x03 \x01(\tR\x10mostCommonResult\x12.\n" +
	"\x13least_common_result\x18\x04 \x01(\tR\x11leastCommonResult\x129\n" +
	"\x19average_rolls_per_session\x18\x05 \x01(\x01R\x16averageRollsPerSession\x12\x1b\n" +
	"\tlast_used\x18\x06 \x01(\x03R\blastUsed\"\xa0\x02\n" +
	"\x16TableValidationOptions\x12(\n" +
	"\x10check_range_gaps\x18\x01 \x01(\bR\x0echeckRangeGaps\x120\n" +
	"\x14check_range_overlaps\x18\x02 \x01(\bR\x12checkRangeOverlaps\x12<\n" +
	"\x1avalidate_nested_references\x18\x03 \x01(\bR\x18validateNestedReferences\x12:\n" +
	"\x19check_weight_distribution\x18\x04 \x01(\bR\x17checkWeightDistribution\x120\n" +
	"\x14validate_dice_config\x18\x05 \x01(\bR\x12validateDiceConfig\"\xb9\x01\n" +
	"\x1cCreateSelectionTableResponse\x122\n" +
	"\x05table\x18\x01 \x01(\v2\x1c.api.v1alpha1.SelectionTableR\x05table\x12K\n" +
	"\x11validation_result\x18\x02 \x01(\v2\x1e.api.v1alpha1.ValidationResultR\x10validationResult\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"\x98\x01\n" +
	"\x18GetSelectionTableRequest\x12\x19\n" +
	"\btable_id\x18\x01 \x01(\tR\atableId\x12-\n" +
	"\x12include_statistics\x18\x02 \x01(\bR\x11includeStatistics\x122\n" +
	"\x15include_entry_details\x18\x03 \x01(\bR\x13includeEntryDetails\"\x8e\x01\n" +
	"\x19GetSelectionTableResponse\x122\n" +
	"\x05table\x18\x01 \x01(\v2\x1c.api.v1alpha1.SelectionTableR\x05table\x12=\n" +
	"\n" +
	"statistics\x18\x02 \x01(\v2\x1d.api.v1alpha1.TableStatisticsR\n" +
	"statistics\"\xb4\x05\n" +
	"\x0fTableStatistics\x12>\n" +
	"\vusage_stats\x18\x01 \x01(\v2\x1d.api.v1alpha1.TableUsageStatsR\n" +
	"usageStats\x12Z\n" +
	"\x0fentry_frequency\x18\x02 \x03(\v21.api.v1alpha1.TableStatistics.EntryFrequencyEntryR\x0eentryFrequency\x12!\n" +
	"\faverage_roll\x18\x03 \x01(\x01R\vaverageRoll\x12`\n" +
	"\x11roll_distribution\x18\x04 \x03(\v23.api.v1alpha1.TableStatistics.RollDistributionEntryR\x10rollDistribution\x12a\n" +
	"\x12result_type_counts\x18\x05 \x03(\v23.api.v1alpha1.TableStatistics.ResultTypeCountsEntryR\x10resultTypeCounts\x12P\n" +
	"\x11performance_stats\x18\x06 \x01(\v2#.api.v1alpha1.TablePerformanceStatsR\x10performanceStats\x1aA\n" +
	"\x13EntryFrequencyEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\x1aC\n" +
	"\x15RollDistributionEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\x1aC\n" +
	"\x15ResultTypeCountsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\"\xc5\x01\n" +
	"\x15TablePerformanceStats\x12/\n" +
	"\x14average_roll_time_ms\x18\x01 \x01(\x01R\x11averageRollTimeMs\x12&\n" +
	"\x0fcache_hit_ratio\x18\x02 \x01(\x01R\rcacheHitRatio\x12,\n" +
	"\x12memory_usage_bytes\x18\x03 \x01(\x03R\x10memoryUsageBytes\x12%\n" +
	"\x0elast_optimized\x18\x04 \x01(\x03R\rlastOptimized\"\xb5\x01\n" +
	"\x1bUpdateSelectionTableRequest\x12\x19\n" +
	"\btable_id\x18\x01 \x01(\tR\atableId\x122\n" +
	"\x05table\x18\x02 \x01(\v2\x1c.api.v1alpha1.SelectionTableR\x05table\x12G\n" +
	"\x0eupdate_options\x18\x03 \x01(\v2 .api.v1alpha1.TableUpdateOptionsR\rupdateOptions\"\xc3\x01\n" +
	"\x12TableUpdateOptions\x12/\n" +
	"\x13preserve_statistics\x18\x01 \x01(\bR\x12preserveStatistics\x122\n" +
	"\x15validate_after_update\x18\x02 \x01(\bR\x13validateAfterUpdate\x12#\n" +
	"\rcreate_backup\x18\x03 \x01(\bR\fcreateBackup\x12#\n" +
	"\rupdate_reason\x18\x04 \x01(\tR\fupdateReason\"\xb9\x01\n" +
	"\x1cUpdateSelectionTableResponse\x122\n" +
	"\x05table\x18\x01 \x01(\v2\x1c.api.v1alpha1.SelectionTableR\x05table\x12K\n" +
	"\x11validation_result\x18\x02 \x01(\v2\x1e.api.v1alpha1.ValidationResultR\x10validationResult\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"N\n" +
	"\x1bDeleteSelectionTableRequest\x12\x19\n" +
	"\btable_id\x18\x01 \x01(\tR\atableId\x12\x14\n" +
	"\x05force\x18\x02 \x01(\bR\x05force\"g\n" +
	"\x1cDeleteSelectionTableResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12-\n" +
	"\x12references_removed\x18\x02 \x01(\x05R\x11referencesRemoved\"\xff\x01\n" +
	"\x1aListSelectionTablesRequest\x12:\n" +
	"\x06filter\x18\x01 \x01(\v2\".api.v1alpha1.SelectionTableFilterR\x06filter\x123\n" +
	"\tpage_info\x18\x02 \x01(\v2\x16.api.v1alpha1.PageInfoR\bpageInfo\x12A\n" +
	"\fsort_options\x18\x03 \x01(\v2\x1e.api.v1alpha1.TableSortOptionsR\vsortOptions\x12-\n" +
	"\x12include_statistics\x18\x04 \x01(\bR\x11includeStatistics\"\x8c\x02\n" +
	"\x14SelectionTableFilter\x12\x1e\n" +
	"\n" +
	"categories\x18\x01 \x03(\tR\n" +
	"categories\x12A\n" +
	"\vtable_types\x18\x02 \x03(\x0e2 .api.v1alpha1.SelectionTableTypeR\n" +
	"tableTypes\x12\x16\n" +
	"\x06author\x18\x03 \x01(\tR\x06author\x12\x1f\n" +
	"\vsearch_term\x18\x04 \x01(\tR\n" +
	"searchTerm\x12\x12\n" +
	"\x04tags\x18\x05 \x03(\tR\x04tags\x12#\n" +
	"\rofficial_only\x18\x06 \x01(\bR\fofficialOnly\x12\x1f\n" +
	"\vpublic_only\x18\a \x01(\bR\n" +
	"publicOnly\"\x89\x01\n" +
	"\x10TableSortOptions\x125\n" +
	"\asort_by\x18\x01 \x01(\x0e2\x1c.api.v1alpha1.TableSortFieldR\x06sortBy\x12>\n" +
	"\tdirection\x18\x02 \x01(\x0e2 .api.v1alpha1.TableSortDirectionR\tdirection\"\xc5\x01\n" +
	"\x1bListSelectionTablesResponse\x124\n" +
	"\x06tables\x18\x01 \x03(\v2\x1c.api.v1alpha1.SelectionTableR\x06tables\x123\n" +
	"\tpage_info\x18\x02 \x01(\v2\x16.api.v1alpha1.PageInfoR\bpageInfo\x12;\n" +
	"\n" +
	"list_stats\x18\x03 \x01(\v2\x1c.api.v1alpha1.TableListStatsR\tlistStats\"\xc4\x03\n" +
	"\x0eTableListStats\x12\x1f\n" +
	"\vtotal_count\x18\x01 \x01(\x05R\n" +
	"totalCount\x12%\n" +
	"\x0ereturned_count\x18\x02 \x01(\x05R\rreturnedCount\x12`\n" +
	"\x12tables_by_category\x18\x03 \x03(\v22.api.v1alpha1.TableListStats.TablesByCategoryEntryR\x10tablesByCategory\x12T\n" +
	"\x0etables_by_type\x18\x04 \x03(\v2..api.v1alpha1.TableListStats.TablesByTypeEntryR\ftablesByType\x12,\n" +
	"\x12most_popular_table\x18\x05 \x01(\tR\x10mostPopularTable\x1aC\n" +
	"\x15TablesByCategoryEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\x1a?\n" +
	"\x11TablesByTypeEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\x94\x02\n" +
	"\x12RollOnTableRequest\x12\x19\n" +
	"\btable_id\x18\x01 \x01(\tR\atableId\x12\x1d\n" +
	"\n" +
	"roll_count\x18\x02 \x01(\x05R\trollCount\x12P\n" +
	"\n" +
	"parameters\x18\x03 \x03(\v20.api.v1alpha1.RollOnTableRequest.ParametersEntryR\n" +
	"parameters\x123\n" +
	"\aoptions\x18\x04 \x01(\v2\x19.api.v1alpha1.RollOptionsR\aoptions\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf2\x01\n" +
	"\vRollOptions\x12\x12\n" +
	"\x04seed\x18\x01 \x01(\tR\x04seed\x128\n" +
	"\tmodifiers\x18\x02 \x03(\v2\x1a.api.v1alpha1.RollModifierR\tmodifiers\x12*\n" +
	"\x11show_roll_details\x18\x03 \x01(\bR\x0fshowRollDetails\x12#\n" +
	"\rgroup_similar\x18\x04 \x01(\bR\fgroupSimilar\x12\x1f\n" +
	"\vmax_results\x18\x05 \x01(\x05R\n" +
	"maxResults\x12#\n" +
	"\rallow_rerolls\x18\x06 \x01(\bR\fallowRerolls\"\xd1\x01\n" +
	"\x13RollOnTableResponse\x122\n" +
	"\aresults\x18\x01 \x03(\v2\x18.api.v1alpha1.RollResultR\aresults\x126\n" +
	"\n" +
	"roll_stats\x18\x02 \x01(\v2\x17.api.v1alpha1.RollStatsR\trollStats\x12\x19\n" +
	"\btable_id\x18\x03 \x01(\tR\atableId\x123\n" +
	"\asession\x18\x04 \x01(\v2\x19.api.v1alpha1.RollSessionR\asession\"\xdc\x02\n" +
	"\n" +
	"RollResult\x12\x1b\n" +
	"\tresult_id\x18\x01 \x01(\tR\bresultId\x12?\n" +
	"\x0eselected_entry\x18\x02 \x01(\v2\x18.api.v1alpha1.TableEntryR\rselectedEntry\x12\x1d\n" +
	"\n" +
	"roll_value\x18\x03 \x01(\x05R\trollValue\x12?\n" +
	"\vresult_data\x18\x04 \x01(\v2\x1e.api.v1alpha1.TableEntryResultR\n" +
	"resultData\x12<\n" +
	"\froll_details\x18\x05 \x01(\v2\x19.api.v1alpha1.RollDetailsR\vrollDetails\x12!\n" +
	"\fwas_modified\x18\x06 \x01(\bR\vwasModified\x12/\n" +
	"\x13modification_reason\x18\a \x01(\tR\x12modificationReason\"\xce\x01\n" +
	"\vRollDetails\x12\x1f\n" +
	"\vdice_values\x18\x01 \x03(\x05R\n" +
	"diceValues\x12%\n" +
	"\x0etotal_modifier\x18\x02 \x01(\x05R\rtotalModifier\x12\x19\n" +
	"\braw_roll\x18\x03 \x01(\x05R\arawRoll\x12\x1d\n" +
	"\n" +
	"final_roll\x18\x04 \x01(\x05R\tfinalRoll\x12#\n" +
	"\rdice_notation\x18\x05 \x01(\tR\fdiceNotation\x12\x18\n" +
	"\arerolls\x18\x06 \x03(\x05R\arerolls\"\xd8\x01\n" +
	"\tRollStats\x12 \n" +
	"\froll_time_ms\x18\x01 \x01(\x03R\n" +
	"rollTimeMs\x12\x1f\n" +
	"\vdice_rolled\x18\x02 \x01(\x05R\n" +
	"diceRolled\x12!\n" +
	"\frerolls_made\x18\x03 \x01(\x05R\vrerollsMade\x12!\n" +
	"\faverage_roll\x18\x04 \x01(\x01R\vaverageRoll\x12!\n" +
	"\fhighest_roll\x18\x05 \x01(\x05R\vhighestRoll\x12\x1f\n" +
	"\vlowest_roll\x18\x06 \x01(\x05R\n" +
	"lowestRoll\"\xf4\x01\n" +
	"\vRollSession\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x02 \x01(\x03R\texpiresAt\x12\x1d\n" +
	"\n" +
	"roll_count\x18\x03 \x01(\x05R\trollCount\x12I\n" +
	"\n" +
	"parameters\x18\x04 \x03(\v2).api.v1alpha1.RollSession.ParametersEntryR\n" +
	"parameters\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc4\x01\n" +
	"\x13RollMultipleRequest\x12>\n" +
	"\vtable_rolls\x18\x01 \x03(\v2\x1d.api.v1alpha1.TableRollConfigR\n" +
	"tableRolls\x12@\n" +
	"\x0eglobal_options\x18\x02 \x01(\v2\x19.api.v1alpha1.RollOptionsR\rglobalOptions\x12+\n" +
	"\x11correlate_results\x18\x03 \x01(\bR\x10correlateResults\"\x93\x02\n" +
	"\x0fTableRollConfig\x12\x19\n" +
	"\btable_id\x18\x01 \x01(\tR\atableId\x12\x1d\n" +
	"\n" +
	"roll_count\x18\x02 \x01(\x05R\trollCount\x12M\n" +
	"\n" +
	"parameters\x18\x03 \x03(\v2-.api.v1alpha1.TableRollConfig.ParametersEntryR\n" +
	"parameters\x128\n" +
	"\tmodifiers\x18\x04 \x03(\v2\x1a.api.v1alpha1.RollModifierR\tmodifiers\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xec\x02\n" +
	"\x14RollMultipleResponse\x12`\n" +
	"\x10results_by_table\x18\x01 \x03(\v26.api.v1alpha1.RollMultipleResponse.ResultsByTableEntryR\x0eresultsByTable\x12G\n" +
	"\x10combined_results\x18\x02 \x03(\v2\x1c.api.v1alpha1.CombinedResultR\x0fcombinedResults\x12F\n" +
	"\x10multi_roll_stats\x18\x03 \x01(\v2\x1c.api.v1alpha1.MultiRollStatsR\x0emultiRollStats\x1aa\n" +
	"\x13ResultsByTableEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x124\n" +
	"\x05value\x18\x02 \x01(\v2\x1e.api.v1alpha1.TableRollResultsR\x05value:\x028\x01\"\x90\x01\n" +
	"\x10TableRollResults\x12\x19\n" +
	"\btable_id\x18\x01 \x01(\tR\atableId\x122\n" +
	"\aresults\x18\x02 \x03(\v2\x18.api.v1alpha1.RollResultR\aresults\x12-\n" +
	"\x05stats\x18\x03 \x01(\v2\x17.api.v1alpha1.RollStatsR\x05stats\"\xaf\x01\n" +
	"\x0eCombinedResult\x12\x1b\n" +
	"\tresult_id\x18\x01 \x01(\tR\bresultId\x12=\n" +
	"\n" +
	"components\x18\x02 \x03(\v2\x1d.api.v1alpha1.ResultComponentR\n" +
	"components\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1f\n" +
	"\vtotal_value\x18\x04 \x01(\x01R\n" +
	"totalValue\"\x82\x01\n" +
	"\x0fResultComponent\x12\x19\n" +
	"\btable_id\x18\x01 \x01(\tR\atableId\x120\n" +
	"\x06result\x18\x02 \x01(\v2\x18.api.v1alpha1.RollResultR\x06result\x12\"\n" +
	"\frelationship\x18\x03 \x01(\tR\frelationship\"\xe7\x01\n" +
	"\x0eMultiRollStats\x12\"\n" +
	"\rtotal_time_ms\x18\x01 \x01(\x03R\vtotalTimeMs\x12#\n" +
	"\rtables_rolled\x18\x02 \x01(\x05R\ftablesRolled\x12#\n" +
	"\rtotal_results\x18\x03 \x01(\x05R\ftotalResults\x128\n" +
	"\x19average_time_per_table_ms\x18\x04 \x01(\x01R\x15averageTimePerTableMs\x12-\n" +
	"\x12correlations_found\x18\x05 \x01(\x05R\x11correlationsFound\"\xc3\x01\n" +
	"\x18RollWithModifiersRequest\x12\x19\n" +
	"\btable_id\x18\x01 \x01(\tR\atableId\x128\n" +
	"\tmodifiers\x18\x02 \x03(\v2\x1a.api.v1alpha1.RollModifierR\tmodifiers\x12\x1d\n" +
	"\n" +
	"roll_count\x18\x03 \x01(\x05R\trollCount\x123\n" +
	"\aoptions\x18\x04 \x01(\v2\x19.api.v1alpha1.RollOptionsR\aoptions\"\xd0\x01\n" +
	"\x19RollWithModifiersResponse\x122\n" +
	"\aresults\x18\x01 \x03(\v2\x18.api.v1alpha1.RollResultR\aresults\x12G\n" +
	"\x10modifier_effects\x18\x02 \x03(\v2\x1c.api.v1alpha1.ModifierEffectR\x0fmodifierEffects\x126\n" +
	"\n" +
	"roll_stats\x18\x03 \x01(\v2\x17.api.v1alpha1.RollStatsR\trollStats\"\xc5\x01\n" +
	"\x0eModifierEffect\x126\n" +
	"\bmodifier\x18\x01 \x01(\v2\x1a.api.v1alpha1.RollModifierR\bmodifier\x12%\n" +
	"\x0erolls_affected\x18\x02 \x01(\x05R\rrollsAffected\x12%\n" +
	"\x0eaverage_change\x18\x03 \x01(\x01R\raverageChange\x12-\n" +
	"\x12effect_description\x18\x04 \x01(\tR\x11effectDescription\"\xa8\x01\n" +
	"\x16BatchRollTablesRequest\x12I\n" +
	"\x0froll_operations\x18\x01 \x03(\v2 .api.v1alpha1.BatchRollOperationR\x0erollOperations\x12C\n" +
	"\rbatch_options\x18\x02 \x01(\v2\x1e.api.v1alpha1.BatchRollOptionsR\fbatchOptions\"\xb7\x02\n" +
	"\x12BatchRollOperation\x12!\n" +
	"\foperation_id\x18\x01 \x01(\tR\voperationId\x12\x19\n" +
	"\btable_id\x18\x02 \x01(\tR\atableId\x12\x1d\n" +
	"\n" +
	"roll_count\x18\x03 \x01(\x05R\trollCount\x12P\n" +
	"\n" +
	"parameters\x18\x04 \x03(\v20.api.v1alpha1.BatchRollOperation.ParametersEntryR\n" +
	"parameters\x123\n" +
	"\aoptions\x18\x05 \x01(\v2\x19.api.v1alpha1.RollOptionsR\aoptions\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc6\x01\n" +
	"\x10BatchRollOptions\x12-\n" +
	"\x12parallel_execution\x18\x01 \x01(\bR\x11parallelExecution\x12\x1d\n" +
	"\n" +
	"timeout_ms\x18\x02 \x01(\x05R\ttimeoutMs\x12$\n" +
	"\x0eall_or_nothing\x18\x03 \x01(\bR\fallOrNothing\x12>\n" +
	"\x1bcorrelate_across_operations\x18\x04 \x01(\bR\x19correlateAcrossOperations\"\xc1\x02\n" +
	"\x17BatchRollTablesResponse\x12R\n" +
	"\x15successful_operations\x18\x01 \x03(\v2\x1d.api.v1alpha1.BatchRollResultR\x14successfulOperations\x12K\n" +
	"\x11failed_operations\x18\x02 \x03(\v2\x1e.api.v1alpha1.BatchRollFailureR\x10failedOperations\x12=\n" +
	"\vbatch_stats\x18\x03 \x01(\v2\x1c.api.v1alpha1.BatchRollStatsR\n" +
	"batchStats\x12F\n" +
	"\fcorrelations\x18\x04 \x03(\v2\".api.v1alpha1.OperationCorrelationR\fcorrelations\"\x97\x01\n" +
	"\x0fBatchRollResult\x12!\n" +
	"\foperation_id\x18\x01 \x01(\tR\voperationId\x122\n" +
	"\aresults\x18\x02 \x03(\v2\x18.api.v1alpha1.RollResultR\aresults\x12-\n" +
	"\x05stats\x18\x03 \x01(\v2\x17.api.v1alpha1.RollStatsR\x05stats\"\xa8\x01\n" +
	"\x10BatchRollFailure\x12!\n" +
	"\foperation_id\x18\x01 \x01(\tR\voperationId\x12\x19\n" +
	"\btable_id\x18\x02 \x01(\tR\atableId\x12%\n" +
	"\x0efailure_reason\x18\x03 \x01(\tR\rfailureReason\x12/\n" +
	"\x06errors\x18\x04 \x03(\v2\x17.api.v1alpha1.RoomErrorR\x06errors\"\xb9\x02\n" +
	"\x0eBatchRollStats\x12-\n" +
	"\x13total_batch_time_ms\x18\x01 \x01(\x03R\x10totalBatchTimeMs\x123\n" +
	"\x15successful_operations\x18\x02 \x01(\x05R\x14successfulOperations\x12+\n" +
	"\x11failed_operations\x18\x03 \x01(\x05R\x10failedOperations\x12#\n" +
	"\rtotal_results\x18\x04 \x01(\x05R\ftotalResults\x129\n" +
	"\x19average_operation_time_ms\x18\x05 \x01(\x01R\x16averageOperationTimeMs\x126\n" +
	"\x17used_parallel_execution\x18\x06 \x01(\bR\x15usedParallelExecution\"\xa4\x01\n" +
	"\x14OperationCorrelation\x12#\n" +
	"\roperation_ids\x18\x01 \x03(\tR\foperationIds\x12)\n" +
	"\x10correlation_type\x18\x02 \x01(\tR\x0fcorrelationType\x12\x1a\n" +
	"\bstrength\x18\x03 \x01(\x01R\bstrength\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\"\x8f\x02\n" +
	"\x18GenerateEncounterRequest\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\x12L\n" +
	"\x10encounter_params\x18\x02 \x01(\v2!.api.v1alpha1.EncounterParametersR\x0fencounterParams\x12H\n" +
	"\x10encounter_tables\x18\x03 \x01(\v2\x1d.api.v1alpha1.EncounterTablesR\x0fencounterTables\x12B\n" +
	"\aoptions\x18\x04 \x01(\v2(.api.v1alpha1.EncounterGenerationOptionsR\aoptions\"\xd1\x01\n" +
	"\x13EncounterParameters\x12\x1f\n" +
	"\vparty_level\x18\x01 \x01(\x05R\n" +
	"partyLevel\x12\x1d\n" +
	"\n" +
	"party_size\x18\x02 \x01(\x05R\tpartySize\x12\x1e\n" +
	"\n" +
	"difficulty\x18\x03 \x01(\tR\n" +
	"difficulty\x12\x14\n" +
	"\x05theme\x18\x04 \x01(\tR\x05theme\x12 \n" +
	"\venvironment\x18\x05 \x01(\tR\venvironment\x12\"\n" +
	"\frequirements\x18\x06 \x03(\tR\frequirements\"\xf9\x01\n" +
	"\x0fEncounterTables\x12(\n" +
	"\x10primary_table_id\x18\x01 \x01(\tR\x0eprimaryTableId\x12*\n" +
	"\x11creature_table_id\x18\x02 \x01(\tR\x0fcreatureTableId\x12*\n" +
	"\x11treasure_table_id\x18\x03 \x01(\tR\x0ftreasureTableId\x120\n" +
	"\x14environment_table_id\x18\x04 \x01(\tR\x12environmentTableId\x122\n" +
	"\x15complication_table_id\x18\x05 \x01(\tR\x13complicationTableId\"\xa2\x02\n" +
	"\x1aEncounterGenerationOptions\x12\x12\n" +
	"\x04seed\x18\x01 \x01(\tR\x04seed\x12)\n" +
	"\x10include_treasure\x18\x02 \x01(\bR\x0fincludeTreasure\x12<\n" +
	"\x1aadd_environmental_features\x18\x03 \x01(\bR\x18addEnvironmentalFeatures\x123\n" +
	"\x15include_complications\x18\x04 \x01(\bR\x14includeComplications\x12#\n" +
	"\rmax_creatures\x18\x05 \x01(\x05R\fmaxCreatures\x12-\n" +
	"\x12balance_difficulty\x18\x06 \x01(\bR\x11balanceDifficulty\"\xcf\x01\n" +
	"\x19GenerateEncounterResponse\x12>\n" +
	"\tencounter\x18\x01 \x01(\v2 .api.v1alpha1.GeneratedEncounterR\tencounter\x12Q\n" +
	"\x10generation_stats\x18\x02 \x01(\v2&.api.v1alpha1.EncounterGenerationStatsR\x0fgenerationStats\x12\x1f\n" +
	"\vtables_used\x18\x03 \x03(\tR\n" +
	"tablesUsed\"\xe2\x03\n" +
	"\x12GeneratedEncounter\x12!\n" +
	"\fencounter_id\x18\x01 \x01(\tR\vencounterId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12=\n" +
	"\tcreatures\x18\x04 \x03(\v2\x1f.api.v1alpha1.EncounterCreatureR\tcreatures\x126\n" +
	"\btreasure\x18\x05 \x03(\v2\x1a.api.v1alpha1.TreasureItemR\btreasure\x12Y\n" +
	"\x16environmental_features\x18\x06 \x03(\v2\".api.v1alpha1.EnvironmentalFeatureR\x15environmentalFeatures\x12I\n" +
	"\rcomplications\x18\a \x03(\v2#.api.v1alpha1.EncounterComplicationR\rcomplications\x12+\n" +
	"\x11difficulty_rating\x18\b \x01(\tR\x10difficultyRating\x12)\n" +
	"\x10challenge_rating\x18\t \x01(\x01R\x0fchallengeRating\"\xa9\x02\n" +
	"\x11EncounterCreature\x12\x1f\n" +
	"\vcreature_id\x18\x01 \x01(\tR\n" +
	"creatureId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1a\n" +
	"\bquantity\x18\x03 \x01(\x05R\bquantity\x12)\n" +
	"\x10challenge_rating\x18\x04 \x01(\x01R\x0fchallengeRating\x12\x12\n" +
	"\x04role\x18\x05 \x01(\tR\x04role\x12Q\n" +
	"\x11spawn_preferences\x18\x06 \x01(\v2$.api.v1alpha1.EntitySpawnPreferencesR\x10spawnPreferences\x121\n" +
	"\x14special_instructions\x18\a \x01(\tR\x13specialInstructions\"\xc5\x01\n" +
	"\fTreasureItem\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\tR\x06itemId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1a\n" +
	"\bquantity\x18\x03 \x01(\x05R\bquantity\x12\x19\n" +
	"\bvalue_gp\x18\x04 \x01(\x05R\avalueGp\x12\x16\n" +
	"\x06rarity\x18\x05 \x01(\tR\x06rarity\x12\x1d\n" +
	"\n" +
	"is_magical\x18\x06 \x01(\bR\tisMagical\x12\x1a\n" +
	"\blocation\x18\a \x01(\tR\blocation\"\xd7\x01\n" +
	"\x14EnvironmentalFeature\x12\x1d\n" +
	"\n" +
	"feature_id\x18\x01 \x01(\tR\tfeatureId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12!\n" +
	"\ffeature_type\x18\x04 \x01(\tR\vfeatureType\x12-\n" +
	"\x12preferred_location\x18\x05 \x01(\tR\x11preferredLocation\x12\x18\n" +
	"\aeffects\x18\x06 \x03(\tR\aeffects\"\xaa\x01\n" +
	"\x15EncounterComplication\x12'\n" +
	"\x0fcomplication_id\x18\x01 \x01(\tR\x0ecomplicationId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x18\n" +
	"\atrigger\x18\x04 \x01(\tR\atrigger\x12\x18\n" +
	"\aeffects\x18\x05 \x03(\tR\aeffects\"\xaf\x02\n" +
	"\x18EncounterGenerationStats\x12,\n" +
	"\x12generation_time_ms\x18\x01 \x01(\x03R\x10generationTimeMs\x12(\n" +
	"\x10table_rolls_made\x18\x02 \x01(\x05R\x0etableRollsMade\x12/\n" +
	"\x13creatures_generated\x18\x03 \x01(\x05R\x12creaturesGenerated\x128\n" +
	"\x18treasure_items_generated\x18\x04 \x01(\x05R\x16treasureItemsGenerated\x12+\n" +
	"\x11actual_difficulty\x18\x05 \x01(\tR\x10actualDifficulty\x12#\n" +
	"\rcalculated_cr\x18\x06 \x01(\x01R\fcalculatedCr\"\xce\x01\n" +
	"\x13GenerateLootRequest\x12=\n" +
	"\vloot_params\x18\x01 \x01(\v2\x1c.api.v1alpha1.LootParametersR\n" +
	"lootParams\x129\n" +
	"\vloot_tables\x18\x02 \x01(\v2\x18.api.v1alpha1.LootTablesR\n" +
	"lootTables\x12=\n" +
	"\aoptions\x18\x03 \x01(\v2#.api.v1alpha1.LootGenerationOptionsR\aoptions\"\xe6\x01\n" +
	"\x0eLootParameters\x12)\n" +
	"\x10challenge_rating\x18\x01 \x01(\x01R\x0fchallengeRating\x12\x1f\n" +
	"\vparty_level\x18\x02 \x01(\x05R\n" +
	"partyLevel\x12\x1b\n" +
	"\tloot_type\x18\x03 \x01(\tR\blootType\x12+\n" +
	"\x11rarity_preference\x18\x04 \x01(\tR\x10rarityPreference\x12&\n" +
	"\x0fvalue_budget_gp\x18\x05 \x01(\x05R\rvalueBudgetGp\x12\x16\n" +
	"\x06source\x18\x06 \x01(\tR\x06source\"\xf1\x01\n" +
	"\n" +
	"LootTables\x12(\n" +
	"\x10primary_table_id\x18\x01 \x01(\tR\x0eprimaryTableId\x12-\n" +
	"\x13magic_item_table_id\x18\x02 \x01(\tR\x10magicItemTableId\x12,\n" +
	"\x12equipment_table_id\x18\x03 \x01(\tR\x10equipmentTableId\x120\n" +
	"\x14consumables_table_id\x18\x04 \x01(\tR\x12consumablesTableId\x12*\n" +
	"\x11currency_table_id\x18\x05 \x01(\tR\x0fcurrencyTableId\"\x91\x02\n" +
	"\x15LootGenerationOptions\x12\x12\n" +
	"\x04seed\x18\x01 \x01(\tR\x04seed\x120\n" +
	"\x14include_cursed_items\x18\x02 \x01(\bR\x12includeCursedItems\x120\n" +
	"\x14vary_item_conditions\x18\x03 \x01(\bR\x12varyItemConditions\x12\x1b\n" +
	"\tmax_items\x18\x04 \x01(\x05R\bmaxItems\x120\n" +
	"\x14bundle_similar_items\x18\x05 \x01(\bR\x12bundleSimilarItems\x121\n" +
	"\x14include_descriptions\x18\x06 \x01(\bR\x13includeDescriptions\"\xb6\x01\n" +
	"\x14GenerateLootResponse\x12/\n" +
	"\x04loot\x18\x01 \x01(\v2\x1b.api.v1alpha1.GeneratedLootR\x04loot\x12L\n" +
	"\x10generation_stats\x18\x02 \x01(\v2!.api.v1alpha1.LootGenerationStatsR\x0fgenerationStats\x12\x1f\n" +
	"\vtables_used\x18\x03 \x03(\tR\n" +
	"tablesUsed\"\xf9\x02\n" +
	"\rGeneratedLoot\x12\x17\n" +
	"\aloot_id\x18\x01 \x01(\tR\x06lootId\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x125\n" +
	"\x05items\x18\x03 \x03(\v2\x1f.api.v1alpha1.GeneratedLootItemR\x05items\x12$\n" +
	"\x0etotal_value_gp\x18\x04 \x01(\x05R\ftotalValueGp\x12d\n" +
	"\x13rarity_distribution\x18\x05 \x03(\v23.api.v1alpha1.GeneratedLoot.RarityDistributionEntryR\x12rarityDistribution\x12#\n" +
	"\rspecial_notes\x18\x06 \x03(\tR\fspecialNotes\x1aE\n" +
	"\x17RarityDistributionEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\xe7\x03\n" +
	"\x11GeneratedLootItem\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\tR\x06itemId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1a\n" +
	"\bquantity\x18\x04 \x01(\x05R\bquantity\x12\"\n" +
	"\runit_value_gp\x18\x05 \x01(\x05R\vunitValueGp\x12$\n" +
	"\x0etotal_value_gp\x18\x06 \x01(\x05R\ftotalValueGp\x12\x16\n" +
	"\x06rarity\x18\a \x01(\tR\x06rarity\x12\x1b\n" +
	"\titem_type\x18\b \x01(\tR\bitemType\x12\x1c\n" +
	"\tcondition\x18\t \x01(\tR\tcondition\x12\x1d\n" +
	"\n" +
	"is_magical\x18\n" +
	" \x01(\bR\tisMagical\x12\x1b\n" +
	"\tis_cursed\x18\v \x01(\bR\bisCursed\x12O\n" +
	"\n" +
	"properties\x18\f \x03(\v2/.api.v1alpha1.GeneratedLootItem.PropertiesEntryR\n" +
	"properties\x1a=\n" +
	"\x0fPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x87\x03\n" +
	"\x13LootGenerationStats\x12,\n" +
	"\x12generation_time_ms\x18\x01 \x01(\x03R\x10generationTimeMs\x12(\n" +
	"\x10table_rolls_made\x18\x02 \x01(\x05R\x0etableRollsMade\x12'\n" +
	"\x0fitems_generated\x18\x03 \x01(\x05R\x0eitemsGenerated\x12,\n" +
	"\x12value_generated_gp\x18\x04 \x01(\x05R\x10valueGeneratedGp\x12&\n" +
	"\x0fvalue_budget_gp\x18\x05 \x01(\x05R\rvalueBudgetGp\x12X\n" +
	"\rrarity_counts\x18\x06 \x03(\v23.api.v1alpha1.LootGenerationStats.RarityCountsEntryR\frarityCounts\x1a?\n" +
	"\x11RarityCountsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\xa8\x01\n" +
	"\x1dValidateSelectionTableRequest\x122\n" +
	"\x05table\x18\x01 \x01(\v2\x1c.api.v1alpha1.SelectionTableR\x05table\x12S\n" +
	"\x12validation_options\x18\x02 \x01(\v2$.api.v1alpha1.TableValidationOptionsR\x11validationOptions\"\x8d\x02\n" +
	"\x1eValidateSelectionTableResponse\x12K\n" +
	"\x11validation_result\x18\x01 \x01(\v2\x1e.api.v1alpha1.ValidationResultR\x10validationResult\x12O\n" +
	"\x11validation_checks\x18\x02 \x03(\v2\".api.v1alpha1.TableValidationCheckR\x10validationChecks\x12M\n" +
	"\x10validation_stats\x18\x03 \x01(\v2\".api.v1alpha1.TableValidationStatsR\x0fvalidationStats\"\x94\x02\n" +
	"\x14TableValidationCheck\x12\x1d\n" +
	"\n" +
	"check_name\x18\x01 \x01(\tR\tcheckName\x12@\n" +
	"\x06result\x18\x02 \x01(\x0e2(.api.v1alpha1.TableValidationCheckResultR\x06result\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12A\n" +
	"\bseverity\x18\x04 \x01(\x0e2%.api.v1alpha1.TableValidationSeverityR\bseverity\x12\x19\n" +
	"\bentry_id\x18\x05 \x01(\tR\aentryId\x12#\n" +
	"\rsuggested_fix\x18\x06 \x01(\tR\fsuggestedFix\"\xe8\x01\n" +
	"\x14TableValidationStats\x12,\n" +
	"\x12validation_time_ms\x18\x01 \x01(\x03R\x10validationTimeMs\x12)\n" +
	"\x10checks_performed\x18\x02 \x01(\x05R\x0fchecksPerformed\x12#\n" +
	"\rchecks_passed\x18\x03 \x01(\x05R\fchecksPassed\x12#\n" +
	"\rchecks_failed\x18\x04 \x01(\x05R\fchecksFailed\x12-\n" +
	"\x12warnings_generated\x18\x05 \x01(\x05R\x11warningsGenerated\"\xb6\x01\n" +
	"\x19GetTableStatisticsRequest\x12\x19\n" +
	"\btable_id\x18\x01 \x01(\tR\atableId\x12;\n" +
	"\n" +
	"time_range\x18\x02 \x01(\v2\x1c.api.v1alpha1.TableTimeRangeR\ttimeRange\x12A\n" +
	"\fdetail_level\x18\x03 \x01(\x0e2\x1e.api.v1alpha1.StatisticsDetailR\vdetailLevel\"J\n" +
	"\x0eTableTimeRange\x12\x1d\n" +
	"\n" +
	"start_time\x18\x01 \x01(\x03R\tstartTime\x12\x19\n" +
	"\bend_time\x18\x02 \x01(\x03R\aendTime\"\x9a\x01\n" +
	"\x1aGetTableStatisticsResponse\x12=\n" +
	"\n" +
	"statistics\x18\x01 \x01(\v2\x1d.api.v1alpha1.TableStatisticsR\n" +
	"statistics\x12=\n" +
	"\banalysis\x18\x02 \x01(\v2!.api.v1alpha1.StatisticalAnalysisR\banalysis\"\xaf\x02\n" +
	"\x13StatisticalAnalysis\x12S\n" +
	"\x11roll_distribution\x18\x01 \x01(\v2&.api.v1alpha1.RollDistributionAnalysisR\x10rollDistribution\x12M\n" +
	"\x0fentry_selection\x18\x02 \x01(\v2$.api.v1alpha1.EntrySelectionAnalysisR\x0eentrySelection\x12C\n" +
	"\vperformance\x18\x03 \x01(\v2!.api.v1alpha1.PerformanceAnalysisR\vperformance\x12/\n" +
	"\x06trends\x18\x04 \x03(\v2\x17.api.v1alpha1.TrendDataR\x06trends\"\x95\x04\n" +
	"\x18RollDistributionAnalysis\x12l\n" +
	"\x12expected_frequency\x18\x01 \x03(\v2=.api.v1alpha1.RollDistributionAnalysis.ExpectedFrequencyEntryR\x11expectedFrequency\x12f\n" +
	"\x10actual_frequency\x18\x02 \x03(\v2;.api.v1alpha1.RollDistributionAnalysis.ActualFrequencyEntryR\x0factualFrequency\x120\n" +
	"\x14chi_square_statistic\x18\x03 \x01(\x01R\x12chiSquareStatistic\x12\x17\n" +
	"\ap_value\x18\x04 \x01(\x01R\x06pValue\x12)\n" +
	"\x10uniformity_score\x18\x05 \x01(\x01R\x0funiformityScore\x12#\n" +
	"\routlier_rolls\x18\x06 \x03(\x05R\foutlierRolls\x1aD\n" +
	"\x16ExpectedFrequencyEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\x1aB\n" +
	"\x14ActualFrequencyEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\"\x8a\x02\n" +
	"\x16EntrySelectionAnalysis\x12.\n" +
	"\x13most_selected_entry\x18\x01 \x01(\tR\x11mostSelectedEntry\x120\n" +
	"\x14least_selected_entry\x18\x02 \x01(\tR\x12leastSelectedEntry\x12%\n" +
	"\x0eselection_bias\x18\x03 \x01(\x01R\rselectionBias\x12+\n" +
	"\x11selection_entropy\x18\x04 \x01(\x01R\x10selectionEntropy\x12:\n" +
	"\bclusters\x18\x05 \x03(\v2\x1e.api.v1alpha1.SelectionClusterR\bclusters\"\x96\x01\n" +
	"\x10SelectionCluster\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12\x1b\n" +
	"\tentry_ids\x18\x02 \x03(\tR\bentryIds\x12\x1c\n" +
	"\tfrequency\x18\x03 \x01(\x01R\tfrequency\x12(\n" +
	"\x0fcharacteristics\x18\x04 \x01(\tR\x0fcharacteristics\"\xd9\x01\n" +
	"\x13PerformanceAnalysis\x12+\n" +
	"\x11performance_trend\x18\x01 \x01(\tR\x10performanceTrend\x12 \n" +
	"\vbottlenecks\x18\x02 \x03(\tR\vbottlenecks\x12(\n" +
	"\x0frecommendations\x18\x03 \x03(\tR\x0frecommendations\x12I\n" +
	"\x0eresource_usage\x18\x04 \x01(\v2\".api.v1alpha1.ResourceUsagePatternR\rresourceUsage\"\xb5\x01\n" +
	"\x14ResourceUsagePattern\x12!\n" +
	"\fmemory_trend\x18\x01 \x01(\tR\vmemoryTrend\x12\x1f\n" +
	"\vcpu_pattern\x18\x02 \x01(\tR\n" +
	"cpuPattern\x12/\n" +
	"\x13cache_effectiveness\x18\x03 \x01(\x01R\x12cacheEffectiveness\x12(\n" +
	"\x10peak_usage_times\x18\x04 \x03(\x03R\x0epeakUsageTimes\"\xde\x01\n" +
	"\tTrendData\x12\x1d\n" +
	"\n" +
	"trend_name\x18\x01 \x01(\tR\ttrendName\x12=\n" +
	"\vtime_period\x18\x02 \x01(\v2\x1c.api.v1alpha1.TableTimeRangeR\n" +
	"timePeriod\x12\x1c\n" +
	"\tdirection\x18\x03 \x01(\tR\tdirection\x12\x1a\n" +
	"\bstrength\x18\x04 \x01(\x01R\bstrength\x129\n" +
	"\vdata_points\x18\x05 \x03(\v2\x18.api.v1alpha1.TrendPointR\n" +
	"dataPoints\"Z\n" +
	"\n" +
	"TrendPoint\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value\x12\x18\n" +
	"\acontext\x18\x03 \x01(\tR\acontext\"\xb0\x01\n" +
	"\x1bExportSelectionTableRequest\x12\x19\n" +
	"\btable_id\x18\x01 \x01(\tR\atableId\x122\n" +
	"\x06format\x18\x02 \x01(\x0e2\x1a.api.v1alpha1.ExportFormatR\x06format\x12B\n" +
	"\x0eexport_options\x18\x03 \x01(\v2\x1b.api.v1alpha1.ExportOptionsR\rexportOptions\"\xdb\x01\n" +
	"\rExportOptions\x12)\n" +
	"\x10include_metadata\x18\x01 \x01(\bR\x0fincludeMetadata\x12-\n" +
	"\x12include_statistics\x18\x02 \x01(\bR\x11includeStatistics\x122\n" +
	"\x15include_usage_history\x18\x03 \x01(\bR\x13includeUsageHistory\x12 \n" +
	"\vcompression\x18\x04 \x01(\tR\vcompression\x12\x1a\n" +
	"\bencoding\x18\x05 \x01(\tR\bencoding\"\xbe\x01\n" +
	"\x1cExportSelectionTableResponse\x12#\n" +
	"\rexported_data\x18\x01 \x01(\fR\fexportedData\x122\n" +
	"\x06format\x18\x02 \x01(\x0e2\x1a.api.v1alpha1.ExportFormatR\x06format\x12E\n" +
	"\x0fexport_metadata\x18\x03 \x01(\v2\x1c.api.v1alpha1.ExportMetadataR\x0eexportMetadata\"\xc0\x01\n" +
	"\x0eExportMetadata\x12\x1f\n" +
	"\vexported_at\x18\x01 \x01(\x03R\n" +
	"exportedAt\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x02 \x01(\x03R\tsizeBytes\x12+\n" +
	"\x11compression_ratio\x18\x03 \x01(\x01R\x10compressionRatio\x12\x1a\n" +
	"\bchecksum\x18\x04 \x01(\tR\bchecksum\x12%\n" +
	"\x0eexport_version\x18\x05 \x01(\tR\rexportVersion\"\xb6\x01\n" +
	"\x1bImportSelectionTableRequest\x12\x1f\n" +
	"\vimport_data\x18\x01 \x01(\fR\n" +
	"importData\x122\n" +
	"\x06format\x18\x02 \x01(\x0e2\x1a.api.v1alpha1.ExportFormatR\x06format\x12B\n" +
	"\x0eimport_options\x18\x03 \x01(\v2\x1b.api.v1alpha1.ImportOptionsR\rimportOptions\"\xef\x01\n" +
	"\rImportOptions\x124\n" +
	"\x16validate_during_import\x18\x01 \x01(\bR\x14validateDuringImport\x12-\n" +
	"\x12overwrite_existing\x18\x02 \x01(\bR\x11overwriteExisting\x12!\n" +
	"\fpreserve_ids\x18\x03 \x01(\bR\vpreserveIds\x12'\n" +
	"\x0fupdate_metadata\x18\x04 \x01(\bR\x0eupdateMetadata\x12-\n" +
	"\x12source_description\x18\x05 \x01(\tR\x11sourceDescription\"\xe2\x01\n" +
	"\x1cImportSelectionTableResponse\x12C\n" +
	"\x0eimported_table\x18\x01 \x01(\v2\x1c.api.v1alpha1.SelectionTableR\rimportedTable\x12?\n" +
	"\rimport_result\x18\x02 \x01(\v2\x1a.api.v1alpha1.ImportResultR\fimportResult\x12<\n" +
	"\fimport_stats\x18\x03 \x01(\v2\x19.api.v1alpha1.ImportStatsR\vimportStats\"\xda\x01\n" +
	"\fImportResult\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x123\n" +
	"\bwarnings\x18\x02 \x03(\v2\x17.api.v1alpha1.RoomErrorR\bwarnings\x12/\n" +
	"\x06errors\x18\x03 \x03(\v2\x17.api.v1alpha1.RoomErrorR\x06errors\x12%\n" +
	"\x0eitems_imported\x18\x04 \x01(\x05R\ritemsImported\x12#\n" +
	"\ritems_skipped\x18\x05 \x01(\x05R\fitemsSkipped\"\xc5\x01\n" +
	"\vImportStats\x12$\n" +
	"\x0eimport_time_ms\x18\x01 \x01(\x03R\fimportTimeMs\x120\n" +
	"\x14data_processed_bytes\x18\x02 \x01(\x03R\x12dataProcessedBytes\x12,\n" +
	"\x12validation_time_ms\x18\x03 \x01(\x03R\x10validationTimeMs\x120\n" +
	"\x14processing_rate_mbps\x18\x04 \x01(\x01R\x12processingRateMbps*\xee\x01\n" +
	"\x12SelectionTableType\x12$\n" +
	" SELECTION_TABLE_TYPE_UNSPECIFIED\x10\x00\x12!\n" +
	"\x1dSELECTION_TABLE_TYPE_WEIGHTED\x10\x01\x12#\n" +
	"\x1fSELECTION_TABLE_TYPE_DICE_RANGE\x10\x02\x12#\n" +
	"\x1fSELECTION_TABLE_TYPE_SEQUENTIAL\x10\x03\x12$\n" +
	" SELECTION_TABLE_TYPE_CONDITIONAL\x10\x04\x12\x1f\n" +
	"\x1bSELECTION_TABLE_TYPE_NESTED\x10\x05*\x9b\x02\n" +
	"\x14TableEntryResultType\x12'\n" +
	"#TABLE_ENTRY_RESULT_TYPE_UNSPECIFIED\x10\x00\x12 \n" +
	"\x1cTABLE_ENTRY_RESULT_TYPE_ITEM\x10\x01\x12\"\n" +
	"\x1eTABLE_ENTRY_RESULT_TYPE_ENTITY\x10\x02\x12(\n" +
	"$TABLE_ENTRY_RESULT_TYPE_NESTED_TABLE\x10\x03\x12 \n" +
	"\x1cTABLE_ENTRY_RESULT_TYPE_TEXT\x10\x04\x12\"\n" +
	"\x1eTABLE_ENTRY_RESULT_TYPE_EFFECT\x10\x05\x12$\n" +
	" TABLE_ENTRY_RESULT_TYPE_MULTIPLE\x10\x06*w\n" +
	"\x12TableSortDirection\x12$\n" +
	" TABLE_SORT_DIRECTION_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18TABLE_SORT_DIRECTION_ASC\x10\x01\x12\x1d\n" +
	"\x19TABLE_SORT_DIRECTION_DESC\x10\x02*\xd0\x01\n" +
	"\x0eTableSortField\x12 \n" +
	"\x1cTABLE_SORT_FIELD_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15TABLE_SORT_FIELD_NAME\x10\x01\x12\x1f\n" +
	"\x1bTABLE_SORT_FIELD_CREATED_AT\x10\x02\x12\x1f\n" +
	"\x1bTABLE_SORT_FIELD_UPDATED_AT\x10\x03\x12 \n" +
	"\x1cTABLE_SORT_FIELD_USAGE_COUNT\x10\x04\x12\x1d\n" +
	"\x19TABLE_SORT_FIELD_CATEGORY\x10\x05*\xee\x01\n" +
	"\x1aTableValidationCheckResult\x12-\n" +
	")TABLE_VALIDATION_CHECK_RESULT_UNSPECIFIED\x10\x00\x12&\n" +
	"\"TABLE_VALIDATION_CHECK_RESULT_PASS\x10\x01\x12&\n" +
	"\"TABLE_VALIDATION_CHECK_RESULT_FAIL\x10\x02\x12)\n" +
	"%TABLE_VALIDATION_CHECK_RESULT_WARNING\x10\x03\x12&\n" +
	"\"TABLE_VALIDATION_CHECK_RESULT_SKIP\x10\x04*\xdc\x01\n" +
	"\x17TableValidationSeverity\x12)\n" +
	"%TABLE_VALIDATION_SEVERITY_UNSPECIFIED\x10\x00\x12\"\n" +
	"\x1eTABLE_VALIDATION_SEVERITY_INFO\x10\x01\x12%\n" +
	"!TABLE_VALIDATION_SEVERITY_WARNING\x10\x02\x12#\n" +
	"\x1fTABLE_VALIDATION_SEVERITY_ERROR\x10\x03\x12&\n" +
	"\"TABLE_VALIDATION_SEVERITY_CRITICAL\x10\x04*\x97\x01\n" +
	"\x10StatisticsDetail\x12!\n" +
	"\x1dSTATISTICS_DETAIL_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17STATISTICS_DETAIL_BASIC\x10\x01\x12\x1e\n" +
	"\x1aSTATISTICS_DETAIL_DETAILED\x10\x02\x12#\n" +
	"\x1fSTATISTICS_DETAIL_COMPREHENSIVE\x10\x03*\xa7\x01\n" +
	"\fExportFormat\x12\x1d\n" +
	"\x19EXPORT_FORMAT_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12EXPORT_FORMAT_JSON\x10\x01\x12\x15\n" +
	"\x11EXPORT_FORMAT_CSV\x10\x02\x12\x15\n" +
	"\x11EXPORT_FORMAT_XML\x10\x03\x12\x16\n" +
	"\x12EXPORT_FORMAT_YAML\x10\x04\x12\x1a\n" +
	"\x16EXPORT_FORMAT_PROTOBUF\x10\x052\xa0\f\n" +
	"\x15SelectionTableService\x12m\n" +
	"\x14CreateSelectionTable\x12).api.v1alpha1.CreateSelectionTableRequest\x1a*.api.v1alpha1.CreateSelectionTableResponse\x12d\n" +
	"\x11GetSelectionTable\x12&.api.v1alpha1.GetSelectionTableRequest\x1a'.api.v1alpha1.GetSelectionTableResponse\x12m\n" +
	"\x14UpdateSelectionTable\x12).api.v1alpha1.UpdateSelectionTableRequest\x1a*.api.v1alpha1.UpdateSelectionTableResponse\x12m\n" +
	"\x14DeleteSelectionTable\x12).api.v1alpha1.DeleteSelectionTableRequest\x1a*.api.v1alpha1.DeleteSelectionTableResponse\x12j\n" +
	"\x13ListSelectionTables\x12(.api.v1alpha1.ListSelectionTablesRequest\x1a).api.v1alpha1.ListSelectionTablesResponse\x12R\n" +
	"\vRollOnTable\x12 .api.v1alpha1.RollOnTableRequest\x1a!.api.v1alpha1.RollOnTableResponse\x12U\n" +
	"\fRollMultiple\x12!.api.v1alpha1.RollMultipleRequest\x1a\".api.v1alpha1.RollMultipleResponse\x12d\n" +
	"\x11RollWithModifiers\x12&.api.v1alpha1.RollWithModifiersRequest\x1a'.api.v1alpha1.RollWithModifiersResponse\x12^\n" +
	"\x0fBatchRollTables\x12$.api.v1alpha1.BatchRollTablesRequest\x1a%.api.v1alpha1.BatchRollTablesResponse\x12d\n" +
	"\x11GenerateEncounter\x12&.api.v1alpha1.GenerateEncounterRequest\x1a'.api.v1alpha1.GenerateEncounterResponse\x12U\n" +
	"\fGenerateLoot\x12!.api.v1alpha1.GenerateLootRequest\x1a\".api.v1alpha1.GenerateLootResponse\x12s\n" +
	"\x16ValidateSelectionTable\x12+.api.v1alpha1.ValidateSelectionTableRequest\x1a,.api.v1alpha1.ValidateSelectionTableResponse\x12g\n" +
	"\x12GetTableStatistics\x12'.api.v1alpha1.GetTableStatisticsRequest\x1a(.api.v1alpha1.GetTableStatisticsResponse\x12m\n" +
	"\x14ExportSelectionTable\x12).api.v1alpha1.ExportSelectionTableRequest\x1a*.api.v1alpha1.ExportSelectionTableResponse\x12m\n" +
	"\x14ImportSelectionTable\x12).api.v1alpha1.ImportSelectionTableRequest\x1a*.api.v1alpha1.ImportSelectionTableResponseB\x9b\x01\n" +
	"\x10com.api.v1alpha1B\x14RoomSelectablesProtoP\x01Z clients/api/v1alpha1;apiv1alpha1\xa2\x02\x03AXX\xaa\x02\fApi.V1alpha1\xca\x02\fApi\\V1alpha1\xe2\x02\x18Api\\V1alpha1\\GPBMetadata\xea\x02\rApi::V1alpha1b\x06proto3"

var (
	file_api_v1alpha1_room_selectables_proto_rawDescOnce sync.Once
	file_api_v1alpha1_room_selectables_proto_rawDescData []byte
)

func file_api_v1alpha1_room_selectables_proto_rawDescGZIP() []byte {
	file_api_v1alpha1_room_selectables_proto_rawDescOnce.Do(func() {
		file_api_v1alpha1_room_selectables_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_v1alpha1_room_selectables_proto_rawDesc), len(file_api_v1alpha1_room_selectables_proto_rawDesc)))
	})
	return file_api_v1alpha1_room_selectables_proto_rawDescData
}

var file_api_v1alpha1_room_selectables_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_api_v1alpha1_room_selectables_proto_msgTypes = make([]protoimpl.MessageInfo, 122)
var file_api_v1alpha1_room_selectables_proto_goTypes = []any{
	(SelectionTableType)(0),                // 0: api.v1alpha1.SelectionTableType
	(TableEntryResultType)(0),              // 1: api.v1alpha1.TableEntryResultType
	(TableSortDirection)(0),                // 2: api.v1alpha1.TableSortDirection
	(TableSortField)(0),                    // 3: api.v1alpha1.TableSortField
	(TableValidationCheckResult)(0),        // 4: api.v1alpha1.TableValidationCheckResult
	(TableValidationSeverity)(0),           // 5: api.v1alpha1.TableValidationSeverity
	(StatisticsDetail)(0),                  // 6: api.v1alpha1.StatisticsDetail
	(ExportFormat)(0),                      // 7: api.v1alpha1.ExportFormat
	(*CreateSelectionTableRequest)(nil),    // 8: api.v1alpha1.CreateSelectionTableRequest
	(*SelectionTable)(nil),                 // 9: api.v1alpha1.SelectionTable
	(*DiceConfiguration)(nil),              // 10: api.v1alpha1.DiceConfiguration
	(*TableEntry)(nil),                     // 11: api.v1alpha1.TableEntry
	(*RollRange)(nil),                      // 12: api.v1alpha1.RollRange
	(*TableEntryResult)(nil),               // 13: api.v1alpha1.TableEntryResult
	(*ItemResult)(nil),                     // 14: api.v1alpha1.ItemResult
	(*QuantityRange)(nil),                  // 15: api.v1alpha1.QuantityRange
	(*EntityResult)(nil),                   // 16: api.v1alpha1.EntityResult
	(*EntitySpawnPreferences)(nil),         // 17: api.v1alpha1.EntitySpawnPreferences
	(*NestedTableResult)(nil),              // 18: api.v1alpha1.NestedTableResult
	(*RollModifier)(nil),                   // 19: api.v1alpha1.RollModifier
	(*TextResult)(nil),                     // 20: api.v1alpha1.TextResult
	(*EffectResult)(nil),                   // 21: api.v1alpha1.EffectResult
	(*MultipleResult)(nil),                 // 22: api.v1alpha1.MultipleResult
	(*EntryCondition)(nil),                 // 23: api.v1alpha1.EntryCondition
	(*TableOptions)(nil),                   // 24: api.v1alpha1.TableOptions
	(*SelectionTableMetadata)(nil),         // 25: api.v1alpha1.SelectionTableMetadata
	(*TableUsageStats)(nil),                // 26: api.v1alpha1.TableUsageStats
	(*TableValidationOptions)(nil),         // 27: api.v1alpha1.TableValidationOptions
	(*CreateSelectionTableResponse)(nil),   // 28: api.v1alpha1.CreateSelectionTableResponse
	(*GetSelectionTableRequest)(nil),       // 29: api.v1alpha1.GetSelectionTableRequest
	(*GetSelectionTableResponse)(nil),      // 30: api.v1alpha1.GetSelectionTableResponse
	(*TableStatistics)(nil),                // 31: api.v1alpha1.TableStatistics
	(*TablePerformanceStats)(nil),          // 32: api.v1alpha1.TablePerformanceStats
	(*UpdateSelectionTableRequest)(nil),    // 33: api.v1alpha1.UpdateSelectionTableRequest
	(*TableUpdateOptions)(nil),             // 34: api.v1alpha1.TableUpdateOptions
	(*UpdateSelectionTableResponse)(nil),   // 35: api.v1alpha1.UpdateSelectionTableResponse
	(*DeleteSelectionTableRequest)(nil),    // 36: api.v1alpha1.DeleteSelectionTableRequest
	(*DeleteSelectionTableResponse)(nil),   // 37: api.v1alpha1.DeleteSelectionTableResponse
	(*ListSelectionTablesRequest)(nil),     // 38: api.v1alpha1.ListSelectionTablesRequest
	(*SelectionTableFilter)(nil),           // 39: api.v1alpha1.SelectionTableFilter
	(*TableSortOptions)(nil),               // 40: api.v1alpha1.TableSortOptions
	(*ListSelectionTablesResponse)(nil),    // 41: api.v1alpha1.ListSelectionTablesResponse
	(*TableListStats)(nil),                 // 42: api.v1alpha1.TableListStats
	(*RollOnTableRequest)(nil),             // 43: api.v1alpha1.RollOnTableRequest
	(*RollOptions)(nil),                    // 44: api.v1alpha1.RollOptions
	(*RollOnTableResponse)(nil),            // 45: api.v1alpha1.RollOnTableResponse
	(*RollResult)(nil),                     // 46: api.v1alpha1.RollResult
	(*RollDetails)(nil),                    // 47: api.v1alpha1.RollDetails
	(*RollStats)(nil),                      // 48: api.v1alpha1.RollStats
	(*RollSession)(nil),                    // 49: api.v1alpha1.RollSession
	(*RollMultipleRequest)(nil),            // 50: api.v1alpha1.RollMultipleRequest
	(*TableRollConfig)(nil),                // 51: api.v1alpha1.TableRollConfig
	(*RollMultipleResponse)(nil),           // 52: api.v1alpha1.RollMultipleResponse
	(*TableRollResults)(nil),               // 53: api.v1alpha1.TableRollResults
	(*CombinedResult)(nil),                 // 54: api.v1alpha1.CombinedResult
	(*ResultComponent)(nil),                // 55: api.v1alpha1.ResultComponent
	(*MultiRollStats)(nil),                 // 56: api.v1alpha1.MultiRollStats
	(*RollWithModifiersRequest)(nil),       // 57: api.v1alpha1.RollWithModifiersRequest
	(*RollWithModifiersResponse)(nil),      // 58: api.v1alpha1.RollWithModifiersResponse
	(*ModifierEffect)(nil),                 // 59: api.v1alpha1.ModifierEffect
	(*BatchRollTablesRequest)(nil),         // 60: api.v1alpha1.BatchRollTablesRequest
	(*BatchRollOperation)(nil),             // 61: api.v1alpha1.BatchRollOperation
	(*BatchRollOptions)(nil),               // 62: api.v1alpha1.BatchRollOptions
	(*BatchRollTablesResponse)(nil),        // 63: api.v1alpha1.BatchRollTablesResponse
	(*BatchRollResult)(nil),                // 64: api.v1alpha1.BatchRollResult
	(*BatchRollFailure)(nil),               // 65: api.v1alpha1.BatchRollFailure
	(*BatchRollStats)(nil),                 // 66: api.v1alpha1.BatchRollStats
	(*OperationCorrelation)(nil),           // 67: api.v1alpha1.OperationCorrelation
	(*GenerateEncounterRequest)(nil),       // 68: api.v1alpha1.GenerateEncounterRequest
	(*EncounterParameters)(nil),            // 69: api.v1alpha1.EncounterParameters
	(*EncounterTables)(nil),                // 70: api.v1alpha1.EncounterTables
	(*EncounterGenerationOptions)(nil),     // 71: api.v1alpha1.EncounterGenerationOptions
	(*GenerateEncounterResponse)(nil),      // 72: api.v1alpha1.GenerateEncounterResponse
	(*GeneratedEncounter)(nil),             // 73: api.v1alpha1.GeneratedEncounter
	(*EncounterCreature)(nil),              // 74: api.v1alpha1.EncounterCreature
	(*TreasureItem)(nil),                   // 75: api.v1alpha1.TreasureItem
	(*EnvironmentalFeature)(nil),           // 76: api.v1alpha1.EnvironmentalFeature
	(*EncounterComplication)(nil),          // 77: api.v1alpha1.EncounterComplication
	(*EncounterGenerationStats)(nil),       // 78: api.v1alpha1.EncounterGenerationStats
	(*GenerateLootRequest)(nil),            // 79: api.v1alpha1.GenerateLootRequest
	(*LootParameters)(nil),                 // 80: api.v1alpha1.LootParameters
	(*LootTables)(nil),                     // 81: api.v1alpha1.LootTables
	(*LootGenerationOptions)(nil),          // 82: api.v1alpha1.LootGenerationOptions
	(*GenerateLootResponse)(nil),           // 83: api.v1alpha1.GenerateLootResponse
	(*GeneratedLoot)(nil),                  // 84: api.v1alpha1.GeneratedLoot
	(*GeneratedLootItem)(nil),              // 85: api.v1alpha1.GeneratedLootItem
	(*LootGenerationStats)(nil),            // 86: api.v1alpha1.LootGenerationStats
	(*ValidateSelectionTableRequest)(nil),  // 87: api.v1alpha1.ValidateSelectionTableRequest
	(*ValidateSelectionTableResponse)(nil), // 88: api.v1alpha1.ValidateSelectionTableResponse
	(*TableValidationCheck)(nil),           // 89: api.v1alpha1.TableValidationCheck
	(*TableValidationStats)(nil),           // 90: api.v1alpha1.TableValidationStats
	(*GetTableStatisticsRequest)(nil),      // 91: api.v1alpha1.GetTableStatisticsRequest
	(*TableTimeRange)(nil),                 // 92: api.v1alpha1.TableTimeRange
	(*GetTableStatisticsResponse)(nil),     // 93: api.v1alpha1.GetTableStatisticsResponse
	(*StatisticalAnalysis)(nil),            // 94: api.v1alpha1.StatisticalAnalysis
	(*RollDistributionAnalysis)(nil),       // 95: api.v1alpha1.RollDistributionAnalysis
	(*EntrySelectionAnalysis)(nil),         // 96: api.v1alpha1.EntrySelectionAnalysis
	(*SelectionCluster)(nil),               // 97: api.v1alpha1.SelectionCluster
	(*PerformanceAnalysis)(nil),            // 98: api.v1alpha1.PerformanceAnalysis
	(*ResourceUsagePattern)(nil),           // 99: api.v1alpha1.ResourceUsagePattern
	(*TrendData)(nil),                      // 100: api.v1alpha1.TrendData
	(*TrendPoint)(nil),                     // 101: api.v1alpha1.TrendPoint
	(*ExportSelectionTableRequest)(nil),    // 102: api.v1alpha1.ExportSelectionTableRequest
	(*ExportOptions)(nil),                  // 103: api.v1alpha1.ExportOptions
	(*ExportSelectionTableResponse)(nil),   // 104: api.v1alpha1.ExportSelectionTableResponse
	(*ExportMetadata)(nil),                 // 105: api.v1alpha1.ExportMetadata
	(*ImportSelectionTableRequest)(nil),    // 106: api.v1alpha1.ImportSelectionTableRequest
	(*ImportOptions)(nil),                  // 107: api.v1alpha1.ImportOptions
	(*ImportSelectionTableResponse)(nil),   // 108: api.v1alpha1.ImportSelectionTableResponse
	(*ImportResult)(nil),                   // 109: api.v1alpha1.ImportResult
	(*ImportStats)(nil),                    // 110: api.v1alpha1.ImportStats
	nil,                                    // 111: api.v1alpha1.ItemResult.PropertiesEntry
	nil,                                    // 112: api.v1alpha1.EntityResult.PropertiesEntry
	nil,                                    // 113: api.v1alpha1.TextResult.VariablesEntry
	nil,                                    // 114: api.v1alpha1.EffectResult.ParametersEntry
	nil,                                    // 115: api.v1alpha1.TableStatistics.EntryFrequencyEntry
	nil,                                    // 116: api.v1alpha1.TableStatistics.RollDistributionEntry
	nil,                                    // 117: api.v1alpha1.TableStatistics.ResultTypeCountsEntry
	nil,                                    // 118: api.v1alpha1.TableListStats.TablesByCategoryEntry
	nil,                                    // 119: api.v1alpha1.TableListStats.TablesByTypeEntry
	nil,                                    // 120: api.v1alpha1.RollOnTableRequest.ParametersEntry
	nil,                                    // 121: api.v1alpha1.RollSession.ParametersEntry
	nil,                                    // 122: api.v1alpha1.TableRollConfig.ParametersEntry
	nil,                                    // 123: api.v1alpha1.RollMultipleResponse.ResultsByTableEntry
	nil,                                    // 124: api.v1alpha1.BatchRollOperation.ParametersEntry
	nil,                                    // 125: api.v1alpha1.GeneratedLoot.RarityDistributionEntry
	nil,                                    // 126: api.v1alpha1.GeneratedLootItem.PropertiesEntry
	nil,                                    // 127: api.v1alpha1.LootGenerationStats.RarityCountsEntry
	nil,                                    // 128: api.v1alpha1.RollDistributionAnalysis.ExpectedFrequencyEntry
	nil,                                    // 129: api.v1alpha1.RollDistributionAnalysis.ActualFrequencyEntry
	(*ValidationResult)(nil),               // 130: api.v1alpha1.ValidationResult
	(*PageInfo)(nil),                       // 131: api.v1alpha1.PageInfo
	(*RoomError)(nil),                      // 132: api.v1alpha1.RoomError
}
var file_api_v1alpha1_room_selectables_proto_depIdxs = []int32{
	9,   // 0: api.v1alpha1.CreateSelectionTableRequest.table:type_name -> api.v1alpha1.SelectionTable
	27,  // 1: api.v1alpha1.CreateSelectionTableRequest.validation_options:type_name -> api.v1alpha1.TableValidationOptions
	0,   // 2: api.v1alpha1.SelectionTable.table_type:type_name -> api.v1alpha1.SelectionTableType
	10,  // 3: api.v1alpha1.SelectionTable.dice_config:type_name -> api.v1alpha1.DiceConfiguration
	11,  // 4: api.v1alpha1.SelectionTable.entries:type_name -> api.v1alpha1.TableEntry
	25,  // 5: api.v1alpha1.SelectionTable.metadata:type_name -> api.v1alpha1.SelectionTableMetadata
	24,  // 6: api.v1alpha1.SelectionTable.options:type_name -> api.v1alpha1.TableOptions
	12,  // 7: api.v1alpha1.TableEntry.roll_range:type_name -> api.v1alpha1.RollRange
	13,  // 8: api.v1alpha1.TableEntry.result:type_name -> api.v1alpha1.TableEntryResult
	23,  // 9: api.v1alpha1.TableEntry.conditions:type_name -> api.v1alpha1.EntryCondition
	1,   // 10: api.v1alpha1.TableEntryResult.result_type:type_name -> api.v1alpha1.TableEntryResultType
	14,  // 11: api.v1alpha1.TableEntryResult.item_result:type_name -> api.v1alpha1.ItemResult
	16,  // 12: api.v1alpha1.TableEntryResult.entity_result:type_name -> api.v1alpha1.EntityResult
	18,  // 13: api.v1alpha1.TableEntryResult.nested_table_result:type_name -> api.v1alpha1.NestedTableResult
	20,  // 14: api.v1alpha1.TableEntryResult.text_result:type_name -> api.v1alpha1.TextResult
	21,  // 15: api.v1alpha1.TableEntryResult.effect_result:type_name -> api.v1alpha1.EffectResult
	22,  // 16: api.v1alpha1.TableEntryResult.multiple_result:type_name -> api.v1alpha1.MultipleResult
	15,  // 17: api.v1alpha1.ItemResult.quantity:type_name -> api.v1alpha1.QuantityRange
	111, // 18: api.v1alpha1.ItemResult.properties:type_name -> api.v1alpha1.ItemResult.PropertiesEntry
	15,  // 19: api.v1alpha1.EntityResult.quantity:type_name -> api.v1alpha1.QuantityRange
	112, // 20: api.v1alpha1.EntityResult.properties:type_name -> api.v1alpha1.EntityResult.PropertiesEntry
	17,  // 21: api.v1alpha1.EntityResult.spawn_preferences:type_name -> api.v1alpha1.EntitySpawnPreferences
	19,  // 22: api.v1alpha1.NestedTableResult.modifiers:type_name -> api.v1alpha1.RollModifier
	113, // 23: api.v1alpha1.TextResult.variables:type_name -> api.v1alpha1.TextResult.VariablesEntry
	114, // 24: api.v1alpha1.EffectResult.parameters:type_name -> api.v1alpha1.EffectResult.ParametersEntry
	13,  // 25: api.v1alpha1.MultipleResult.results:type_name -> api.v1alpha1.TableEntryResult
	26,  // 26: api.v1alpha1.SelectionTableMetadata.usage_stats:type_name -> api.v1alpha1.TableUsageStats
	9,   // 27: api.v1alpha1.CreateSelectionTableResponse.table:type_name -> api.v1alpha1.SelectionTable
	130, // 28: api.v1alpha1.CreateSelectionTableResponse.validation_result:type_name -> api.v1alpha1.ValidationResult
	9,   // 29: api.v1alpha1.GetSelectionTableResponse.table:type_name -> api.v1alpha1.SelectionTable
	31,  // 30: api.v1alpha1.GetSelectionTableResponse.statistics:type_name -> api.v1alpha1.TableStatistics
	26,  // 31: api.v1alpha1.TableStatistics.usage_stats:type_name -> api.v1alpha1.TableUsageStats
	115, // 32: api.v1alpha1.TableStatistics.entry_frequency:type_name -> api.v1alpha1.TableStatistics.EntryFrequencyEntry
	116, // 33: api.v1alpha1.TableStatistics.roll_distribution:type_name -> api.v1alpha1.TableStatistics.RollDistributionEntry
	117, // 34: api.v1alpha1.TableStatistics.result_type_counts:type_name -> api.v1alpha1.TableStatistics.ResultTypeCountsEntry
	32,  // 35: api.v1alpha1.TableStatistics.performance_stats:type_name -> api.v1alpha1.TablePerformanceStats
	9,   // 36: api.v1alpha1.UpdateSelectionTableRequest.table:type_name -> api.v1alpha1.SelectionTable
	34,  // 37: api.v1alpha1.UpdateSelectionTableRequest.update_options:type_name -> api.v1alpha1.TableUpdateOptions
	9,   // 38: api.v1alpha1.UpdateSelectionTableResponse.table:type_name -> api.v1alpha1.SelectionTable
	130, // 39: api.v1alpha1.UpdateSelectionTableResponse.validation_result:type_name -> api.v1alpha1.ValidationResult
	39,  // 40: api.v1alpha1.ListSelectionTablesRequest.filter:type_name -> api.v1alpha1.SelectionTableFilter
	131, // 41: api.v1alpha1.ListSelectionTablesRequest.page_info:type_name -> api.v1alpha1.PageInfo
	40,  // 42: api.v1alpha1.ListSelectionTablesRequest.sort_options:type_name -> api.v1alpha1.TableSortOptions
	0,   // 43: api.v1alpha1.SelectionTableFilter.table_types:type_name -> api.v1alpha1.SelectionTableType
	3,   // 44: api.v1alpha1.TableSortOptions.sort_by:type_name -> api.v1alpha1.TableSortField
	2,   // 45: api.v1alpha1.TableSortOptions.direction:type_name -> api.v1alpha1.TableSortDirection
	9,   // 46: api.v1alpha1.ListSelectionTablesResponse.tables:type_name -> api.v1alpha1.SelectionTable
	131, // 47: api.v1alpha1.ListSelectionTablesResponse.page_info:type_name -> api.v1alpha1.PageInfo
	42,  // 48: api.v1alpha1.ListSelectionTablesResponse.list_stats:type_name -> api.v1alpha1.TableListStats
	118, // 49: api.v1alpha1.TableListStats.tables_by_category:type_name -> api.v1alpha1.TableListStats.TablesByCategoryEntry
	119, // 50: api.v1alpha1.TableListStats.tables_by_type:type_name -> api.v1alpha1.TableListStats.TablesByTypeEntry
	120, // 51: api.v1alpha1.RollOnTableRequest.parameters:type_name -> api.v1alpha1.RollOnTableRequest.ParametersEntry
	44,  // 52: api.v1alpha1.RollOnTableRequest.options:type_name -> api.v1alpha1.RollOptions
	19,  // 53: api.v1alpha1.RollOptions.modifiers:type_name -> api.v1alpha1.RollModifier
	46,  // 54: api.v1alpha1.RollOnTableResponse.results:type_name -> api.v1alpha1.RollResult
	48,  // 55: api.v1alpha1.RollOnTableResponse.roll_stats:type_name -> api.v1alpha1.RollStats
	49,  // 56: api.v1alpha1.RollOnTableResponse.session:type_name -> api.v1alpha1.RollSession
	11,  // 57: api.v1alpha1.RollResult.selected_entry:type_name -> api.v1alpha1.TableEntry
	13,  // 58: api.v1alpha1.RollResult.result_data:type_name -> api.v1alpha1.TableEntryResult
	47,  // 59: api.v1alpha1.RollResult.roll_details:type_name -> api.v1alpha1.RollDetails
	121, // 60: api.v1alpha1.RollSession.parameters:type_name -> api.v1alpha1.RollSession.ParametersEntry
	51,  // 61: api.v1alpha1.RollMultipleRequest.table_rolls:type_name -> api.v1alpha1.TableRollConfig
	44,  // 62: api.v1alpha1.RollMultipleRequest.global_options:type_name -> api.v1alpha1.RollOptions
	122, // 63: api.v1alpha1.TableRollConfig.parameters:type_name -> api.v1alpha1.TableRollConfig.ParametersEntry
	19,  // 64: api.v1alpha1.TableRollConfig.modifiers:type_name -> api.v1alpha1.RollModifier
	123, // 65: api.v1alpha1.RollMultipleResponse.results_by_table:type_name -> api.v1alpha1.RollMultipleResponse.ResultsByTableEntry
	54,  // 66: api.v1alpha1.RollMultipleResponse.combined_results:type_name -> api.v1alpha1.CombinedResult
	56,  // 67: api.v1alpha1.RollMultipleResponse.multi_roll_stats:type_name -> api.v1alpha1.MultiRollStats
	46,  // 68: api.v1alpha1.TableRollResults.results:type_name -> api.v1alpha1.RollResult
	48,  // 69: api.v1alpha1.TableRollResults.stats:type_name -> api.v1alpha1.RollStats
	55,  // 70: api.v1alpha1.CombinedResult.components:type_name -> api.v1alpha1.ResultComponent
	46,  // 71: api.v1alpha1.ResultComponent.result:type_name -> api.v1alpha1.RollResult
	19,  // 72: api.v1alpha1.RollWithModifiersRequest.modifiers:type_name -> api.v1alpha1.RollModifier
	44,  // 73: api.v1alpha1.RollWithModifiersRequest.options:type_name -> api.v1alpha1.RollOptions
	46,  // 74: api.v1alpha1.RollWithModifiersResponse.results:type_name -> api.v1alpha1.RollResult
	59,  // 75: api.v1alpha1.RollWithModifiersResponse.modifier_effects:type_name -> api.v1alpha1.ModifierEffect
	48,  // 76: api.v1alpha1.RollWithModifiersResponse.roll_stats:type_name -> api.v1alpha1.RollStats
	19,  // 77: api.v1alpha1.ModifierEffect.modifier:type_name -> api.v1alpha1.RollModifier
	61,  // 78: api.v1alpha1.BatchRollTablesRequest.roll_operations:type_name -> api.v1alpha1.BatchRollOperation
	62,  // 79: api.v1alpha1.BatchRollTablesRequest.batch_options:type_name -> api.v1alpha1.BatchRollOptions
	124, // 80: api.v1alpha1.BatchRollOperation.parameters:type_name -> api.v1alpha1.BatchRollOperation.ParametersEntry
	44,  // 81: api.v1alpha1.BatchRollOperation.options:type_name -> api.v1alpha1.RollOptions
	64,  // 82: api.v1alpha1.BatchRollTablesResponse.successful_operations:type_name -> api.v1alpha1.BatchRollResult
	65,  // 83: api.v1alpha1.BatchRollTablesResponse.failed_operations:type_name -> api.v1alpha1.BatchRollFailure
	66,  // 84: api.v1alpha1.BatchRollTablesResponse.batch_stats:type_name -> api.v1alpha1.BatchRollStats
	67,  // 85: api.v1alpha1.BatchRollTablesResponse.correlations:type_name -> api.v1alpha1.OperationCorrelation
	46,  // 86: api.v1alpha1.BatchRollResult.results:type_name -> api.v1alpha1.RollResult
	48,  // 87: api.v1alpha1.BatchRollResult.stats:type_name -> api.v1alpha1.RollStats
	132, // 88: api.v1alpha1.BatchRollFailure.errors:type_name -> api.v1alpha1.RoomError
	69,  // 89: api.v1alpha1.GenerateEncounterRequest.encounter_params:type_name -> api.v1alpha1.EncounterParameters
	70,  // 90: api.v1alpha1.GenerateEncounterRequest.encounter_tables:type_name -> api.v1alpha1.EncounterTables
	71,  // 91: api.v1alpha1.GenerateEncounterRequest.options:type_name -> api.v1alpha1.EncounterGenerationOptions
	73,  // 92: api.v1alpha1.GenerateEncounterResponse.encounter:type_name -> api.v1alpha1.GeneratedEncounter
	78,  // 93: api.v1alpha1.GenerateEncounterResponse.generation_stats:type_name -> api.v1alpha1.EncounterGenerationStats
	74,  // 94: api.v1alpha1.GeneratedEncounter.creatures:type_name -> api.v1alpha1.EncounterCreature
	75,  // 95: api.v1alpha1.GeneratedEncounter.treasure:type_name -> api.v1alpha1.TreasureItem
	76,  // 96: api.v1alpha1.GeneratedEncounter.environmental_features:type_name -> api.v1alpha1.EnvironmentalFeature
	77,  // 97: api.v1alpha1.GeneratedEncounter.complications:type_name -> api.v1alpha1.EncounterComplication
	17,  // 98: api.v1alpha1.EncounterCreature.spawn_preferences:type_name -> api.v1alpha1.EntitySpawnPreferences
	80,  // 99: api.v1alpha1.GenerateLootRequest.loot_params:type_name -> api.v1alpha1.LootParameters
	81,  // 100: api.v1alpha1.GenerateLootRequest.loot_tables:type_name -> api.v1alpha1.LootTables
	82,  // 101: api.v1alpha1.GenerateLootRequest.options:type_name -> api.v1alpha1.LootGenerationOptions
	84,  // 102: api.v1alpha1.GenerateLootResponse.loot:type_name -> api.v1alpha1.GeneratedLoot
	86,  // 103: api.v1alpha1.GenerateLootResponse.generation_stats:type_name -> api.v1alpha1.LootGenerationStats
	85,  // 104: api.v1alpha1.GeneratedLoot.items:type_name -> api.v1alpha1.GeneratedLootItem
	125, // 105: api.v1alpha1.GeneratedLoot.rarity_distribution:type_name -> api.v1alpha1.GeneratedLoot.RarityDistributionEntry
	126, // 106: api.v1alpha1.GeneratedLootItem.properties:type_name -> api.v1alpha1.GeneratedLootItem.PropertiesEntry
	127, // 107: api.v1alpha1.LootGenerationStats.rarity_counts:type_name -> api.v1alpha1.LootGenerationStats.RarityCountsEntry
	9,   // 108: api.v1alpha1.ValidateSelectionTableRequest.table:type_name -> api.v1alpha1.SelectionTable
	27,  // 109: api.v1alpha1.ValidateSelectionTableRequest.validation_options:type_name -> api.v1alpha1.TableValidationOptions
	130, // 110: api.v1alpha1.ValidateSelectionTableResponse.validation_result:type_name -> api.v1alpha1.ValidationResult
	89,  // 111: api.v1alpha1.ValidateSelectionTableResponse.validation_checks:type_name -> api.v1alpha1.TableValidationCheck
	90,  // 112: api.v1alpha1.ValidateSelectionTableResponse.validation_stats:type_name -> api.v1alpha1.TableValidationStats
	4,   // 113: api.v1alpha1.TableValidationCheck.result:type_name -> api.v1alpha1.TableValidationCheckResult
	5,   // 114: api.v1alpha1.TableValidationCheck.severity:type_name -> api.v1alpha1.TableValidationSeverity
	92,  // 115: api.v1alpha1.GetTableStatisticsRequest.time_range:type_name -> api.v1alpha1.TableTimeRange
	6,   // 116: api.v1alpha1.GetTableStatisticsRequest.detail_level:type_name -> api.v1alpha1.StatisticsDetail
	31,  // 117: api.v1alpha1.GetTableStatisticsResponse.statistics:type_name -> api.v1alpha1.TableStatistics
	94,  // 118: api.v1alpha1.GetTableStatisticsResponse.analysis:type_name -> api.v1alpha1.StatisticalAnalysis
	95,  // 119: api.v1alpha1.StatisticalAnalysis.roll_distribution:type_name -> api.v1alpha1.RollDistributionAnalysis
	96,  // 120: api.v1alpha1.StatisticalAnalysis.entry_selection:type_name -> api.v1alpha1.EntrySelectionAnalysis
	98,  // 121: api.v1alpha1.StatisticalAnalysis.performance:type_name -> api.v1alpha1.PerformanceAnalysis
	100, // 122: api.v1alpha1.StatisticalAnalysis.trends:type_name -> api.v1alpha1.TrendData
	128, // 123: api.v1alpha1.RollDistributionAnalysis.expected_frequency:type_name -> api.v1alpha1.RollDistributionAnalysis.ExpectedFrequencyEntry
	129, // 124: api.v1alpha1.RollDistributionAnalysis.actual_frequency:type_name -> api.v1alpha1.RollDistributionAnalysis.ActualFrequencyEntry
	97,  // 125: api.v1alpha1.EntrySelectionAnalysis.clusters:type_name -> api.v1alpha1.SelectionCluster
	99,  // 126: api.v1alpha1.PerformanceAnalysis.resource_usage:type_name -> api.v1alpha1.ResourceUsagePattern
	92,  // 127: api.v1alpha1.TrendData.time_period:type_name -> api.v1alpha1.TableTimeRange
	101, // 128: api.v1alpha1.TrendData.data_points:type_name -> api.v1alpha1.TrendPoint
	7,   // 129: api.v1alpha1.ExportSelectionTableRequest.format:type_name -> api.v1alpha1.ExportFormat
	103, // 130: api.v1alpha1.ExportSelectionTableRequest.export_options:type_name -> api.v1alpha1.ExportOptions
	7,   // 131: api.v1alpha1.ExportSelectionTableResponse.format:type_name -> api.v1alpha1.ExportFormat
	105, // 132: api.v1alpha1.ExportSelectionTableResponse.export_metadata:type_name -> api.v1alpha1.ExportMetadata
	7,   // 133: api.v1alpha1.ImportSelectionTableRequest.format:type_name -> api.v1alpha1.ExportFormat
	107, // 134: api.v1alpha1.ImportSelectionTableRequest.import_options:type_name -> api.v1alpha1.ImportOptions
	9,   // 135: api.v1alpha1.ImportSelectionTableResponse.imported_table:type_name -> api.v1alpha1.SelectionTable
	109, // 136: api.v1alpha1.ImportSelectionTableResponse.import_result:type_name -> api.v1alpha1.ImportResult
	110, // 137: api.v1alpha1.ImportSelectionTableResponse.import_stats:type_name -> api.v1alpha1.ImportStats
	132, // 138: api.v1alpha1.ImportResult.warnings:type_name -> api.v1alpha1.RoomError
	132, // 139: api.v1alpha1.ImportResult.errors:type_name -> api.v1alpha1.RoomError
	53,  // 140: api.v1alpha1.RollMultipleResponse.ResultsByTableEntry.value:type_name -> api.v1alpha1.TableRollResults
	8,   // 141: api.v1alpha1.SelectionTableService.CreateSelectionTable:input_type -> api.v1alpha1.CreateSelectionTableRequest
	29,  // 142: api.v1alpha1.SelectionTableService.GetSelectionTable:input_type -> api.v1alpha1.GetSelectionTableRequest
	33,  // 143: api.v1alpha1.SelectionTableService.UpdateSelectionTable:input_type -> api.v1alpha1.UpdateSelectionTableRequest
	36,  // 144: api.v1alpha1.SelectionTableService.DeleteSelectionTable:input_type -> api.v1alpha1.DeleteSelectionTableRequest
	38,  // 145: api.v1alpha1.SelectionTableService.ListSelectionTables:input_type -> api.v1alpha1.ListSelectionTablesRequest
	43,  // 146: api.v1alpha1.SelectionTableService.RollOnTable:input_type -> api.v1alpha1.RollOnTableRequest
	50,  // 147: api.v1alpha1.SelectionTableService.RollMultiple:input_type -> api.v1alpha1.RollMultipleRequest
	57,  // 148: api.v1alpha1.SelectionTableService.RollWithModifiers:input_type -> api.v1alpha1.RollWithModifiersRequest
	60,  // 149: api.v1alpha1.SelectionTableService.BatchRollTables:input_type -> api.v1alpha1.BatchRollTablesRequest
	68,  // 150: api.v1alpha1.SelectionTableService.GenerateEncounter:input_type -> api.v1alpha1.GenerateEncounterRequest
	79,  // 151: api.v1alpha1.SelectionTableService.GenerateLoot:input_type -> api.v1alpha1.GenerateLootRequest
	87,  // 152: api.v1alpha1.SelectionTableService.ValidateSelectionTable:input_type -> api.v1alpha1.ValidateSelectionTableRequest
	91,  // 153: api.v1alpha1.SelectionTableService.GetTableStatistics:input_type -> api.v1alpha1.GetTableStatisticsRequest
	102, // 154: api.v1alpha1.SelectionTableService.ExportSelectionTable:input_type -> api.v1alpha1.ExportSelectionTableRequest
	106, // 155: api.v1alpha1.SelectionTableService.ImportSelectionTable:input_type -> api.v1alpha1.ImportSelectionTableRequest
	28,  // 156: api.v1alpha1.SelectionTableService.CreateSelectionTable:output_type -> api.v1alpha1.CreateSelectionTableResponse
	30,  // 157: api.v1alpha1.SelectionTableService.GetSelectionTable:output_type -> api.v1alpha1.GetSelectionTableResponse
	35,  // 158: api.v1alpha1.SelectionTableService.UpdateSelectionTable:output_type -> api.v1alpha1.UpdateSelectionTableResponse
	37,  // 159: api.v1alpha1.SelectionTableService.DeleteSelectionTable:output_type -> api.v1alpha1.DeleteSelectionTableResponse
	41,  // 160: api.v1alpha1.SelectionTableService.ListSelectionTables:output_type -> api.v1alpha1.ListSelectionTablesResponse
	45,  // 161: api.v1alpha1.SelectionTableService.RollOnTable:output_type -> api.v1alpha1.RollOnTableResponse
	52,  // 162: api.v1alpha1.SelectionTableService.RollMultiple:output_type -> api.v1alpha1.RollMultipleResponse
	58,  // 163: api.v1alpha1.SelectionTableService.RollWithModifiers:output_type -> api.v1alpha1.RollWithModifiersResponse
	63,  // 164: api.v1alpha1.SelectionTableService.BatchRollTables:output_type -> api.v1alpha1.BatchRollTablesResponse
	72,  // 165: api.v1alpha1.SelectionTableService.GenerateEncounter:output_type -> api.v1alpha1.GenerateEncounterResponse
	83,  // 166: api.v1alpha1.SelectionTableService.GenerateLoot:output_type -> api.v1alpha1.GenerateLootResponse
	88,  // 167: api.v1alpha1.SelectionTableService.ValidateSelectionTable:output_type -> api.v1alpha1.ValidateSelectionTableResponse
	93,  // 168: api.v1alpha1.SelectionTableService.GetTableStatistics:output_type -> api.v1alpha1.GetTableStatisticsResponse
	104, // 169: api.v1alpha1.SelectionTableService.ExportSelectionTable:output_type -> api.v1alpha1.ExportSelectionTableResponse
	108, // 170: api.v1alpha1.SelectionTableService.ImportSelectionTable:output_type -> api.v1alpha1.ImportSelectionTableResponse
	156, // [156:171] is the sub-list for method output_type
	141, // [141:156] is the sub-list for method input_type
	141, // [141:141] is the sub-list for extension type_name
	141, // [141:141] is the sub-list for extension extendee
	0,   // [0:141] is the sub-list for field type_name
}

func init() { file_api_v1alpha1_room_selectables_proto_init() }
func file_api_v1alpha1_room_selectables_proto_init() {
	if File_api_v1alpha1_room_selectables_proto != nil {
		return
	}
	file_api_v1alpha1_room_common_proto_init()
	file_api_v1alpha1_room_selectables_proto_msgTypes[5].OneofWrappers = []any{
		(*TableEntryResult_ItemResult)(nil),
		(*TableEntryResult_EntityResult)(nil),
		(*TableEntryResult_NestedTableResult)(nil),
		(*TableEntryResult_TextResult)(nil),
		(*TableEntryResult_EffectResult)(nil),
		(*TableEntryResult_MultipleResult)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1alpha1_room_selectables_proto_rawDesc), len(file_api_v1alpha1_room_selectables_proto_rawDesc)),
			NumEnums:      8,
			NumMessages:   122,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1alpha1_room_selectables_proto_goTypes,
		DependencyIndexes: file_api_v1alpha1_room_selectables_proto_depIdxs,
		EnumInfos:         file_api_v1alpha1_room_selectables_proto_enumTypes,
		MessageInfos:      file_api_v1alpha1_room_selectables_proto_msgTypes,
	}.Build()
	File_api_v1alpha1_room_selectables_proto = out.File
	file_api_v1alpha1_room_selectables_proto_goTypes = nil
	file_api_v1alpha1_room_selectables_proto_depIdxs = nil
}
