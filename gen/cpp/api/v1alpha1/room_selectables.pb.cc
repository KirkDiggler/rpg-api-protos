// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: api/v1alpha1/room_selectables.proto
// Protobuf C++ Version: 6.32.0

#include "api/v1alpha1/room_selectables.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace api {
namespace v1alpha1 {

inline constexpr TrendPoint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        context_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{::int64_t{0}},
        value_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TrendPoint::TrendPoint(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TrendPoint_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TrendPointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TrendPointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TrendPointDefaultTypeInternal() {}
  union {
    TrendPoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TrendPointDefaultTypeInternal _TrendPoint_default_instance_;

inline constexpr TreasureItem::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        item_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        rarity_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        location_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        quantity_{0},
        value_gp_{0},
        is_magical_{false} {}

template <typename>
PROTOBUF_CONSTEXPR TreasureItem::TreasureItem(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TreasureItem_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TreasureItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TreasureItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TreasureItemDefaultTypeInternal() {}
  union {
    TreasureItem _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TreasureItemDefaultTypeInternal _TreasureItem_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR TextResult_VariablesEntry_DoNotUse::TextResult_VariablesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : TextResult_VariablesEntry_DoNotUse::MapEntry(TextResult_VariablesEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : TextResult_VariablesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct TextResult_VariablesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TextResult_VariablesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TextResult_VariablesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TextResult_VariablesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TextResult_VariablesEntry_DoNotUseDefaultTypeInternal _TextResult_VariablesEntry_DoNotUse_default_instance_;

inline constexpr TableValidationStats::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        validation_time_ms_{::int64_t{0}},
        checks_performed_{0},
        checks_passed_{0},
        checks_failed_{0},
        warnings_generated_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TableValidationStats::TableValidationStats(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TableValidationStats_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TableValidationStatsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TableValidationStatsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TableValidationStatsDefaultTypeInternal() {}
  union {
    TableValidationStats _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TableValidationStatsDefaultTypeInternal _TableValidationStats_default_instance_;

inline constexpr TableValidationOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        check_range_gaps_{false},
        check_range_overlaps_{false},
        validate_nested_references_{false},
        check_weight_distribution_{false},
        validate_dice_config_{false} {}

template <typename>
PROTOBUF_CONSTEXPR TableValidationOptions::TableValidationOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TableValidationOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TableValidationOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TableValidationOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TableValidationOptionsDefaultTypeInternal() {}
  union {
    TableValidationOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TableValidationOptionsDefaultTypeInternal _TableValidationOptions_default_instance_;

inline constexpr TableValidationCheck::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        check_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        entry_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        suggested_fix_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{static_cast< ::api::v1alpha1::TableValidationCheckResult >(0)},
        severity_{static_cast< ::api::v1alpha1::TableValidationSeverity >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR TableValidationCheck::TableValidationCheck(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TableValidationCheck_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TableValidationCheckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TableValidationCheckDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TableValidationCheckDefaultTypeInternal() {}
  union {
    TableValidationCheck _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TableValidationCheckDefaultTypeInternal _TableValidationCheck_default_instance_;

inline constexpr TableUsageStats::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        most_common_result_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        least_common_result_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        roll_count_{::int64_t{0}},
        results_generated_{::int64_t{0}},
        average_rolls_per_session_{0},
        last_used_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR TableUsageStats::TableUsageStats(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TableUsageStats_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TableUsageStatsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TableUsageStatsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TableUsageStatsDefaultTypeInternal() {}
  union {
    TableUsageStats _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TableUsageStatsDefaultTypeInternal _TableUsageStats_default_instance_;

inline constexpr TableUpdateOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        update_reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        preserve_statistics_{false},
        validate_after_update_{false},
        create_backup_{false} {}

template <typename>
PROTOBUF_CONSTEXPR TableUpdateOptions::TableUpdateOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TableUpdateOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TableUpdateOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TableUpdateOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TableUpdateOptionsDefaultTypeInternal() {}
  union {
    TableUpdateOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TableUpdateOptionsDefaultTypeInternal _TableUpdateOptions_default_instance_;

inline constexpr TableTimeRange::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        start_time_{::int64_t{0}},
        end_time_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR TableTimeRange::TableTimeRange(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TableTimeRange_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TableTimeRangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TableTimeRangeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TableTimeRangeDefaultTypeInternal() {}
  union {
    TableTimeRange _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TableTimeRangeDefaultTypeInternal _TableTimeRange_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR TableStatistics_RollDistributionEntry_DoNotUse::TableStatistics_RollDistributionEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : TableStatistics_RollDistributionEntry_DoNotUse::MapEntry(TableStatistics_RollDistributionEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : TableStatistics_RollDistributionEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct TableStatistics_RollDistributionEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TableStatistics_RollDistributionEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TableStatistics_RollDistributionEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TableStatistics_RollDistributionEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TableStatistics_RollDistributionEntry_DoNotUseDefaultTypeInternal _TableStatistics_RollDistributionEntry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR TableStatistics_ResultTypeCountsEntry_DoNotUse::TableStatistics_ResultTypeCountsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : TableStatistics_ResultTypeCountsEntry_DoNotUse::MapEntry(TableStatistics_ResultTypeCountsEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : TableStatistics_ResultTypeCountsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct TableStatistics_ResultTypeCountsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TableStatistics_ResultTypeCountsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TableStatistics_ResultTypeCountsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TableStatistics_ResultTypeCountsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TableStatistics_ResultTypeCountsEntry_DoNotUseDefaultTypeInternal _TableStatistics_ResultTypeCountsEntry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR TableStatistics_EntryFrequencyEntry_DoNotUse::TableStatistics_EntryFrequencyEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : TableStatistics_EntryFrequencyEntry_DoNotUse::MapEntry(TableStatistics_EntryFrequencyEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : TableStatistics_EntryFrequencyEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct TableStatistics_EntryFrequencyEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TableStatistics_EntryFrequencyEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TableStatistics_EntryFrequencyEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TableStatistics_EntryFrequencyEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TableStatistics_EntryFrequencyEntry_DoNotUseDefaultTypeInternal _TableStatistics_EntryFrequencyEntry_DoNotUse_default_instance_;

inline constexpr TableSortOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sort_by_{static_cast< ::api::v1alpha1::TableSortField >(0)},
        direction_{static_cast< ::api::v1alpha1::TableSortDirection >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR TableSortOptions::TableSortOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TableSortOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TableSortOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TableSortOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TableSortOptionsDefaultTypeInternal() {}
  union {
    TableSortOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TableSortOptionsDefaultTypeInternal _TableSortOptions_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR TableRollConfig_ParametersEntry_DoNotUse::TableRollConfig_ParametersEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : TableRollConfig_ParametersEntry_DoNotUse::MapEntry(TableRollConfig_ParametersEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : TableRollConfig_ParametersEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct TableRollConfig_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TableRollConfig_ParametersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TableRollConfig_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TableRollConfig_ParametersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TableRollConfig_ParametersEntry_DoNotUseDefaultTypeInternal _TableRollConfig_ParametersEntry_DoNotUse_default_instance_;

inline constexpr TablePerformanceStats::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        average_roll_time_ms_{0},
        cache_hit_ratio_{0},
        memory_usage_bytes_{::int64_t{0}},
        last_optimized_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR TablePerformanceStats::TablePerformanceStats(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TablePerformanceStats_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TablePerformanceStatsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TablePerformanceStatsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TablePerformanceStatsDefaultTypeInternal() {}
  union {
    TablePerformanceStats _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TablePerformanceStatsDefaultTypeInternal _TablePerformanceStats_default_instance_;

inline constexpr TableOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sort_criteria_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        max_results_per_roll_{0},
        default_roll_count_{0},
        allow_duplicates_{false},
        sort_results_{false},
        group_similar_results_{false} {}

template <typename>
PROTOBUF_CONSTEXPR TableOptions::TableOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TableOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TableOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TableOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TableOptionsDefaultTypeInternal() {}
  union {
    TableOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TableOptionsDefaultTypeInternal _TableOptions_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR TableListStats_TablesByTypeEntry_DoNotUse::TableListStats_TablesByTypeEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : TableListStats_TablesByTypeEntry_DoNotUse::MapEntry(TableListStats_TablesByTypeEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : TableListStats_TablesByTypeEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct TableListStats_TablesByTypeEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TableListStats_TablesByTypeEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TableListStats_TablesByTypeEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TableListStats_TablesByTypeEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TableListStats_TablesByTypeEntry_DoNotUseDefaultTypeInternal _TableListStats_TablesByTypeEntry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR TableListStats_TablesByCategoryEntry_DoNotUse::TableListStats_TablesByCategoryEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : TableListStats_TablesByCategoryEntry_DoNotUse::MapEntry(TableListStats_TablesByCategoryEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : TableListStats_TablesByCategoryEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct TableListStats_TablesByCategoryEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TableListStats_TablesByCategoryEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TableListStats_TablesByCategoryEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TableListStats_TablesByCategoryEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TableListStats_TablesByCategoryEntry_DoNotUseDefaultTypeInternal _TableListStats_TablesByCategoryEntry_DoNotUse_default_instance_;

inline constexpr SelectionTableFilter::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        categories_{},
        table_types_{},
        _table_types_cached_byte_size_{0},
        tags_{},
        author_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        search_term_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        official_only_{false},
        public_only_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SelectionTableFilter::SelectionTableFilter(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SelectionTableFilter_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SelectionTableFilterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SelectionTableFilterDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SelectionTableFilterDefaultTypeInternal() {}
  union {
    SelectionTableFilter _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SelectionTableFilterDefaultTypeInternal _SelectionTableFilter_default_instance_;

inline constexpr SelectionCluster::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        entry_ids_{},
        cluster_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        characteristics_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        frequency_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SelectionCluster::SelectionCluster(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SelectionCluster_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SelectionClusterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SelectionClusterDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SelectionClusterDefaultTypeInternal() {}
  union {
    SelectionCluster _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SelectionClusterDefaultTypeInternal _SelectionCluster_default_instance_;

inline constexpr RollStats::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        roll_time_ms_{::int64_t{0}},
        dice_rolled_{0},
        rerolls_made_{0},
        average_roll_{0},
        highest_roll_{0},
        lowest_roll_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RollStats::RollStats(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RollStats_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RollStatsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollStatsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollStatsDefaultTypeInternal() {}
  union {
    RollStats _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollStatsDefaultTypeInternal _RollStats_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR RollSession_ParametersEntry_DoNotUse::RollSession_ParametersEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : RollSession_ParametersEntry_DoNotUse::MapEntry(RollSession_ParametersEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : RollSession_ParametersEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct RollSession_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollSession_ParametersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollSession_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    RollSession_ParametersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollSession_ParametersEntry_DoNotUseDefaultTypeInternal _RollSession_ParametersEntry_DoNotUse_default_instance_;

inline constexpr RollRange::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        min_{0},
        max_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RollRange::RollRange(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RollRange_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RollRangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollRangeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollRangeDefaultTypeInternal() {}
  union {
    RollRange _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollRangeDefaultTypeInternal _RollRange_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR RollOnTableRequest_ParametersEntry_DoNotUse::RollOnTableRequest_ParametersEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : RollOnTableRequest_ParametersEntry_DoNotUse::MapEntry(RollOnTableRequest_ParametersEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : RollOnTableRequest_ParametersEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct RollOnTableRequest_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollOnTableRequest_ParametersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollOnTableRequest_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    RollOnTableRequest_ParametersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollOnTableRequest_ParametersEntry_DoNotUseDefaultTypeInternal _RollOnTableRequest_ParametersEntry_DoNotUse_default_instance_;

inline constexpr RollModifier::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        modifier_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        condition_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RollModifier::RollModifier(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RollModifier_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RollModifierDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollModifierDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollModifierDefaultTypeInternal() {}
  union {
    RollModifier _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollModifierDefaultTypeInternal _RollModifier_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse::RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse::MapEntry(RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUseDefaultTypeInternal() {}
  union {
    RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUseDefaultTypeInternal _RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse::RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse::MapEntry(RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct RollDistributionAnalysis_ActualFrequencyEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollDistributionAnalysis_ActualFrequencyEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollDistributionAnalysis_ActualFrequencyEntry_DoNotUseDefaultTypeInternal() {}
  union {
    RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollDistributionAnalysis_ActualFrequencyEntry_DoNotUseDefaultTypeInternal _RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse_default_instance_;

inline constexpr RollDetails::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        dice_values_{},
        _dice_values_cached_byte_size_{0},
        rerolls_{},
        _rerolls_cached_byte_size_{0},
        dice_notation_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        total_modifier_{0},
        raw_roll_{0},
        final_roll_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RollDetails::RollDetails(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RollDetails_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RollDetailsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollDetailsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollDetailsDefaultTypeInternal() {}
  union {
    RollDetails _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollDetailsDefaultTypeInternal _RollDetails_default_instance_;

inline constexpr ResourceUsagePattern::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        peak_usage_times_{},
        _peak_usage_times_cached_byte_size_{0},
        memory_trend_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cpu_pattern_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cache_effectiveness_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ResourceUsagePattern::ResourceUsagePattern(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ResourceUsagePattern_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResourceUsagePatternDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResourceUsagePatternDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResourceUsagePatternDefaultTypeInternal() {}
  union {
    ResourceUsagePattern _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResourceUsagePatternDefaultTypeInternal _ResourceUsagePattern_default_instance_;

inline constexpr QuantityRange::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        dice_notation_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        min_{0},
        max_{0} {}

template <typename>
PROTOBUF_CONSTEXPR QuantityRange::QuantityRange(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(QuantityRange_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QuantityRangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuantityRangeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuantityRangeDefaultTypeInternal() {}
  union {
    QuantityRange _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuantityRangeDefaultTypeInternal _QuantityRange_default_instance_;

inline constexpr OperationCorrelation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        operation_ids_{},
        correlation_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        strength_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OperationCorrelation::OperationCorrelation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(OperationCorrelation_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OperationCorrelationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperationCorrelationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperationCorrelationDefaultTypeInternal() {}
  union {
    OperationCorrelation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperationCorrelationDefaultTypeInternal _OperationCorrelation_default_instance_;

inline constexpr MultiRollStats::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        total_time_ms_{::int64_t{0}},
        tables_rolled_{0},
        total_results_{0},
        average_time_per_table_ms_{0},
        correlations_found_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MultiRollStats::MultiRollStats(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MultiRollStats_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MultiRollStatsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MultiRollStatsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MultiRollStatsDefaultTypeInternal() {}
  union {
    MultiRollStats _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MultiRollStatsDefaultTypeInternal _MultiRollStats_default_instance_;

inline constexpr LootTables::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        primary_table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        magic_item_table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        equipment_table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        consumables_table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        currency_table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR LootTables::LootTables(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LootTables_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LootTablesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LootTablesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LootTablesDefaultTypeInternal() {}
  union {
    LootTables _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LootTablesDefaultTypeInternal _LootTables_default_instance_;

inline constexpr LootParameters::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        loot_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        rarity_preference_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        challenge_rating_{0},
        party_level_{0},
        value_budget_gp_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LootParameters::LootParameters(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LootParameters_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LootParametersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LootParametersDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LootParametersDefaultTypeInternal() {}
  union {
    LootParameters _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LootParametersDefaultTypeInternal _LootParameters_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR LootGenerationStats_RarityCountsEntry_DoNotUse::LootGenerationStats_RarityCountsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : LootGenerationStats_RarityCountsEntry_DoNotUse::MapEntry(LootGenerationStats_RarityCountsEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : LootGenerationStats_RarityCountsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct LootGenerationStats_RarityCountsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LootGenerationStats_RarityCountsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LootGenerationStats_RarityCountsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    LootGenerationStats_RarityCountsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LootGenerationStats_RarityCountsEntry_DoNotUseDefaultTypeInternal _LootGenerationStats_RarityCountsEntry_DoNotUse_default_instance_;

inline constexpr LootGenerationOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        seed_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        max_items_{0},
        include_cursed_items_{false},
        vary_item_conditions_{false},
        bundle_similar_items_{false},
        include_descriptions_{false} {}

template <typename>
PROTOBUF_CONSTEXPR LootGenerationOptions::LootGenerationOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LootGenerationOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LootGenerationOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LootGenerationOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LootGenerationOptionsDefaultTypeInternal() {}
  union {
    LootGenerationOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LootGenerationOptionsDefaultTypeInternal _LootGenerationOptions_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR ItemResult_PropertiesEntry_DoNotUse::ItemResult_PropertiesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ItemResult_PropertiesEntry_DoNotUse::MapEntry(ItemResult_PropertiesEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ItemResult_PropertiesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ItemResult_PropertiesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ItemResult_PropertiesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ItemResult_PropertiesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ItemResult_PropertiesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ItemResult_PropertiesEntry_DoNotUseDefaultTypeInternal _ItemResult_PropertiesEntry_DoNotUse_default_instance_;

inline constexpr ImportStats::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        import_time_ms_{::int64_t{0}},
        data_processed_bytes_{::int64_t{0}},
        validation_time_ms_{::int64_t{0}},
        processing_rate_mbps_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ImportStats::ImportStats(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ImportStats_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ImportStatsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ImportStatsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ImportStatsDefaultTypeInternal() {}
  union {
    ImportStats _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ImportStatsDefaultTypeInternal _ImportStats_default_instance_;

inline constexpr ImportOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        source_description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        validate_during_import_{false},
        overwrite_existing_{false},
        preserve_ids_{false},
        update_metadata_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ImportOptions::ImportOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ImportOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ImportOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ImportOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ImportOptionsDefaultTypeInternal() {}
  union {
    ImportOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ImportOptionsDefaultTypeInternal _ImportOptions_default_instance_;

inline constexpr GetSelectionTableRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        include_statistics_{false},
        include_entry_details_{false} {}

template <typename>
PROTOBUF_CONSTEXPR GetSelectionTableRequest::GetSelectionTableRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetSelectionTableRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetSelectionTableRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSelectionTableRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSelectionTableRequestDefaultTypeInternal() {}
  union {
    GetSelectionTableRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSelectionTableRequestDefaultTypeInternal _GetSelectionTableRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GeneratedLootItem_PropertiesEntry_DoNotUse::GeneratedLootItem_PropertiesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : GeneratedLootItem_PropertiesEntry_DoNotUse::MapEntry(GeneratedLootItem_PropertiesEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : GeneratedLootItem_PropertiesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct GeneratedLootItem_PropertiesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GeneratedLootItem_PropertiesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GeneratedLootItem_PropertiesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GeneratedLootItem_PropertiesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GeneratedLootItem_PropertiesEntry_DoNotUseDefaultTypeInternal _GeneratedLootItem_PropertiesEntry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GeneratedLoot_RarityDistributionEntry_DoNotUse::GeneratedLoot_RarityDistributionEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : GeneratedLoot_RarityDistributionEntry_DoNotUse::MapEntry(GeneratedLoot_RarityDistributionEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : GeneratedLoot_RarityDistributionEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct GeneratedLoot_RarityDistributionEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GeneratedLoot_RarityDistributionEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GeneratedLoot_RarityDistributionEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GeneratedLoot_RarityDistributionEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GeneratedLoot_RarityDistributionEntry_DoNotUseDefaultTypeInternal _GeneratedLoot_RarityDistributionEntry_DoNotUse_default_instance_;

inline constexpr ExportOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        compression_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        encoding_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        include_metadata_{false},
        include_statistics_{false},
        include_usage_history_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ExportOptions::ExportOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ExportOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ExportOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExportOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExportOptionsDefaultTypeInternal() {}
  union {
    ExportOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExportOptionsDefaultTypeInternal _ExportOptions_default_instance_;

inline constexpr ExportMetadata::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        checksum_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        export_version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        exported_at_{::int64_t{0}},
        size_bytes_{::int64_t{0}},
        compression_ratio_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ExportMetadata::ExportMetadata(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ExportMetadata_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ExportMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExportMetadataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExportMetadataDefaultTypeInternal() {}
  union {
    ExportMetadata _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExportMetadataDefaultTypeInternal _ExportMetadata_default_instance_;

inline constexpr EnvironmentalFeature::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        effects_{},
        feature_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        feature_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        preferred_location_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR EnvironmentalFeature::EnvironmentalFeature(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EnvironmentalFeature_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EnvironmentalFeatureDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EnvironmentalFeatureDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EnvironmentalFeatureDefaultTypeInternal() {}
  union {
    EnvironmentalFeature _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EnvironmentalFeatureDefaultTypeInternal _EnvironmentalFeature_default_instance_;

inline constexpr EntryCondition::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        condition_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        parameter_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        operator__(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        expected_value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        is_required_{false} {}

template <typename>
PROTOBUF_CONSTEXPR EntryCondition::EntryCondition(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EntryCondition_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EntryConditionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EntryConditionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EntryConditionDefaultTypeInternal() {}
  union {
    EntryCondition _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EntryConditionDefaultTypeInternal _EntryCondition_default_instance_;

inline constexpr EntitySpawnPreferences::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        preferred_locations_{},
        formation_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        behavior_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        special_instructions_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR EntitySpawnPreferences::EntitySpawnPreferences(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EntitySpawnPreferences_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EntitySpawnPreferencesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EntitySpawnPreferencesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EntitySpawnPreferencesDefaultTypeInternal() {}
  union {
    EntitySpawnPreferences _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EntitySpawnPreferencesDefaultTypeInternal _EntitySpawnPreferences_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR EntityResult_PropertiesEntry_DoNotUse::EntityResult_PropertiesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : EntityResult_PropertiesEntry_DoNotUse::MapEntry(EntityResult_PropertiesEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : EntityResult_PropertiesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct EntityResult_PropertiesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EntityResult_PropertiesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EntityResult_PropertiesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    EntityResult_PropertiesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EntityResult_PropertiesEntry_DoNotUseDefaultTypeInternal _EntityResult_PropertiesEntry_DoNotUse_default_instance_;

inline constexpr EncounterTables::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        primary_table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        creature_table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        treasure_table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        environment_table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        complication_table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR EncounterTables::EncounterTables(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EncounterTables_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EncounterTablesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EncounterTablesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EncounterTablesDefaultTypeInternal() {}
  union {
    EncounterTables _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EncounterTablesDefaultTypeInternal _EncounterTables_default_instance_;

inline constexpr EncounterParameters::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        requirements_{},
        difficulty_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        theme_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        environment_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        party_level_{0},
        party_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EncounterParameters::EncounterParameters(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EncounterParameters_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EncounterParametersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EncounterParametersDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EncounterParametersDefaultTypeInternal() {}
  union {
    EncounterParameters _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EncounterParametersDefaultTypeInternal _EncounterParameters_default_instance_;

inline constexpr EncounterGenerationStats::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        actual_difficulty_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        generation_time_ms_{::int64_t{0}},
        table_rolls_made_{0},
        creatures_generated_{0},
        calculated_cr_{0},
        treasure_items_generated_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EncounterGenerationStats::EncounterGenerationStats(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EncounterGenerationStats_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EncounterGenerationStatsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EncounterGenerationStatsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EncounterGenerationStatsDefaultTypeInternal() {}
  union {
    EncounterGenerationStats _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EncounterGenerationStatsDefaultTypeInternal _EncounterGenerationStats_default_instance_;

inline constexpr EncounterGenerationOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        seed_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        include_treasure_{false},
        add_environmental_features_{false},
        include_complications_{false},
        balance_difficulty_{false},
        max_creatures_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EncounterGenerationOptions::EncounterGenerationOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EncounterGenerationOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EncounterGenerationOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EncounterGenerationOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EncounterGenerationOptionsDefaultTypeInternal() {}
  union {
    EncounterGenerationOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EncounterGenerationOptionsDefaultTypeInternal _EncounterGenerationOptions_default_instance_;

inline constexpr EncounterComplication::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        effects_{},
        complication_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        trigger_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR EncounterComplication::EncounterComplication(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EncounterComplication_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EncounterComplicationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EncounterComplicationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EncounterComplicationDefaultTypeInternal() {}
  union {
    EncounterComplication _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EncounterComplicationDefaultTypeInternal _EncounterComplication_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR EffectResult_ParametersEntry_DoNotUse::EffectResult_ParametersEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : EffectResult_ParametersEntry_DoNotUse::MapEntry(EffectResult_ParametersEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : EffectResult_ParametersEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct EffectResult_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EffectResult_ParametersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EffectResult_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    EffectResult_ParametersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EffectResult_ParametersEntry_DoNotUseDefaultTypeInternal _EffectResult_ParametersEntry_DoNotUse_default_instance_;

inline constexpr DiceConfiguration::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        reroll_on_{},
        _reroll_on_cached_byte_size_{0},
        dice_notation_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        modifier_{0},
        min_roll_{0},
        max_roll_{0},
        exploding_dice_{false} {}

template <typename>
PROTOBUF_CONSTEXPR DiceConfiguration::DiceConfiguration(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DiceConfiguration_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DiceConfigurationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DiceConfigurationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DiceConfigurationDefaultTypeInternal() {}
  union {
    DiceConfiguration _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DiceConfigurationDefaultTypeInternal _DiceConfiguration_default_instance_;

inline constexpr DeleteSelectionTableResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        references_removed_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeleteSelectionTableResponse::DeleteSelectionTableResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DeleteSelectionTableResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeleteSelectionTableResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteSelectionTableResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteSelectionTableResponseDefaultTypeInternal() {}
  union {
    DeleteSelectionTableResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteSelectionTableResponseDefaultTypeInternal _DeleteSelectionTableResponse_default_instance_;

inline constexpr DeleteSelectionTableRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        force_{false} {}

template <typename>
PROTOBUF_CONSTEXPR DeleteSelectionTableRequest::DeleteSelectionTableRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DeleteSelectionTableRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeleteSelectionTableRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteSelectionTableRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteSelectionTableRequestDefaultTypeInternal() {}
  union {
    DeleteSelectionTableRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteSelectionTableRequestDefaultTypeInternal _DeleteSelectionTableRequest_default_instance_;

inline constexpr BatchRollStats::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        total_batch_time_ms_{::int64_t{0}},
        successful_operations_{0},
        failed_operations_{0},
        average_operation_time_ms_{0},
        total_results_{0},
        used_parallel_execution_{false} {}

template <typename>
PROTOBUF_CONSTEXPR BatchRollStats::BatchRollStats(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(BatchRollStats_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BatchRollStatsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BatchRollStatsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BatchRollStatsDefaultTypeInternal() {}
  union {
    BatchRollStats _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BatchRollStatsDefaultTypeInternal _BatchRollStats_default_instance_;

inline constexpr BatchRollOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        timeout_ms_{0},
        parallel_execution_{false},
        all_or_nothing_{false},
        correlate_across_operations_{false} {}

template <typename>
PROTOBUF_CONSTEXPR BatchRollOptions::BatchRollOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(BatchRollOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BatchRollOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BatchRollOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BatchRollOptionsDefaultTypeInternal() {}
  union {
    BatchRollOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BatchRollOptionsDefaultTypeInternal _BatchRollOptions_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR BatchRollOperation_ParametersEntry_DoNotUse::BatchRollOperation_ParametersEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : BatchRollOperation_ParametersEntry_DoNotUse::MapEntry(BatchRollOperation_ParametersEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : BatchRollOperation_ParametersEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct BatchRollOperation_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BatchRollOperation_ParametersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BatchRollOperation_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    BatchRollOperation_ParametersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BatchRollOperation_ParametersEntry_DoNotUseDefaultTypeInternal _BatchRollOperation_ParametersEntry_DoNotUse_default_instance_;

inline constexpr TrendData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        data_points_{},
        trend_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        direction_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        time_period_{nullptr},
        strength_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TrendData::TrendData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TrendData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TrendDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TrendDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TrendDataDefaultTypeInternal() {}
  union {
    TrendData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TrendDataDefaultTypeInternal _TrendData_default_instance_;

inline constexpr TextResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        variables_{},
        text_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        action_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        requires_action_{false} {}

template <typename>
PROTOBUF_CONSTEXPR TextResult::TextResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TextResult_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TextResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TextResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TextResultDefaultTypeInternal() {}
  union {
    TextResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TextResultDefaultTypeInternal _TextResult_default_instance_;

inline constexpr TableStatistics::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        entry_frequency_{},
        roll_distribution_{},
        result_type_counts_{},
        usage_stats_{nullptr},
        performance_stats_{nullptr},
        average_roll_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TableStatistics::TableStatistics(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TableStatistics_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TableStatisticsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TableStatisticsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TableStatisticsDefaultTypeInternal() {}
  union {
    TableStatistics _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TableStatisticsDefaultTypeInternal _TableStatistics_default_instance_;

inline constexpr TableRollConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        parameters_{},
        modifiers_{},
        table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        roll_count_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TableRollConfig::TableRollConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TableRollConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TableRollConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TableRollConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TableRollConfigDefaultTypeInternal() {}
  union {
    TableRollConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TableRollConfigDefaultTypeInternal _TableRollConfig_default_instance_;

inline constexpr TableListStats::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tables_by_category_{},
        tables_by_type_{},
        most_popular_table_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        total_count_{0},
        returned_count_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TableListStats::TableListStats(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TableListStats_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TableListStatsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TableListStatsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TableListStatsDefaultTypeInternal() {}
  union {
    TableListStats _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TableListStatsDefaultTypeInternal _TableListStats_default_instance_;

inline constexpr SelectionTableMetadata::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tags_{},
        author_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        copyright_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        usage_stats_{nullptr},
        created_at_{::int64_t{0}},
        updated_at_{::int64_t{0}},
        is_official_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SelectionTableMetadata::SelectionTableMetadata(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SelectionTableMetadata_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SelectionTableMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SelectionTableMetadataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SelectionTableMetadataDefaultTypeInternal() {}
  union {
    SelectionTableMetadata _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SelectionTableMetadataDefaultTypeInternal _SelectionTableMetadata_default_instance_;

inline constexpr RollSession::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        parameters_{},
        session_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        expires_at_{::int64_t{0}},
        roll_count_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RollSession::RollSession(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RollSession_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RollSessionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollSessionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollSessionDefaultTypeInternal() {}
  union {
    RollSession _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollSessionDefaultTypeInternal _RollSession_default_instance_;

inline constexpr RollOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        modifiers_{},
        seed_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        show_roll_details_{false},
        group_similar_{false},
        allow_rerolls_{false},
        max_results_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RollOptions::RollOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RollOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RollOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollOptionsDefaultTypeInternal() {}
  union {
    RollOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollOptionsDefaultTypeInternal _RollOptions_default_instance_;

inline constexpr RollDistributionAnalysis::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        expected_frequency_{},
        actual_frequency_{},
        outlier_rolls_{},
        _outlier_rolls_cached_byte_size_{0},
        chi_square_statistic_{0},
        p_value_{0},
        uniformity_score_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RollDistributionAnalysis::RollDistributionAnalysis(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RollDistributionAnalysis_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RollDistributionAnalysisDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollDistributionAnalysisDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollDistributionAnalysisDefaultTypeInternal() {}
  union {
    RollDistributionAnalysis _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollDistributionAnalysisDefaultTypeInternal _RollDistributionAnalysis_default_instance_;

inline constexpr PerformanceAnalysis::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        bottlenecks_{},
        recommendations_{},
        performance_trend_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        resource_usage_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PerformanceAnalysis::PerformanceAnalysis(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PerformanceAnalysis_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PerformanceAnalysisDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PerformanceAnalysisDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PerformanceAnalysisDefaultTypeInternal() {}
  union {
    PerformanceAnalysis _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PerformanceAnalysisDefaultTypeInternal _PerformanceAnalysis_default_instance_;

inline constexpr NestedTableResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        modifiers_{},
        table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        roll_count_{0},
        combine_results_{false} {}

template <typename>
PROTOBUF_CONSTEXPR NestedTableResult::NestedTableResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(NestedTableResult_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NestedTableResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NestedTableResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NestedTableResultDefaultTypeInternal() {}
  union {
    NestedTableResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NestedTableResultDefaultTypeInternal _NestedTableResult_default_instance_;

inline constexpr ModifierEffect::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        effect_description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        modifier_{nullptr},
        average_change_{0},
        rolls_affected_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ModifierEffect::ModifierEffect(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ModifierEffect_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModifierEffectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModifierEffectDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModifierEffectDefaultTypeInternal() {}
  union {
    ModifierEffect _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModifierEffectDefaultTypeInternal _ModifierEffect_default_instance_;

inline constexpr LootGenerationStats::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rarity_counts_{},
        generation_time_ms_{::int64_t{0}},
        table_rolls_made_{0},
        items_generated_{0},
        value_generated_gp_{0},
        value_budget_gp_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LootGenerationStats::LootGenerationStats(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LootGenerationStats_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LootGenerationStatsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LootGenerationStatsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LootGenerationStatsDefaultTypeInternal() {}
  union {
    LootGenerationStats _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LootGenerationStatsDefaultTypeInternal _LootGenerationStats_default_instance_;

inline constexpr ListSelectionTablesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        filter_{nullptr},
        page_info_{nullptr},
        sort_options_{nullptr},
        include_statistics_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ListSelectionTablesRequest::ListSelectionTablesRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ListSelectionTablesRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListSelectionTablesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListSelectionTablesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListSelectionTablesRequestDefaultTypeInternal() {}
  union {
    ListSelectionTablesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListSelectionTablesRequestDefaultTypeInternal _ListSelectionTablesRequest_default_instance_;

inline constexpr ItemResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        properties_{},
        item_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        item_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        rarity_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        condition_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        quantity_{nullptr},
        value_gp_{0},
        is_magical_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ItemResult::ItemResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ItemResult_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ItemResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ItemResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ItemResultDefaultTypeInternal() {}
  union {
    ItemResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ItemResultDefaultTypeInternal _ItemResult_default_instance_;

inline constexpr ImportSelectionTableRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        import_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        import_options_{nullptr},
        format_{static_cast< ::api::v1alpha1::ExportFormat >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR ImportSelectionTableRequest::ImportSelectionTableRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ImportSelectionTableRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ImportSelectionTableRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ImportSelectionTableRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ImportSelectionTableRequestDefaultTypeInternal() {}
  union {
    ImportSelectionTableRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ImportSelectionTableRequestDefaultTypeInternal _ImportSelectionTableRequest_default_instance_;

inline constexpr GetTableStatisticsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        time_range_{nullptr},
        detail_level_{static_cast< ::api::v1alpha1::StatisticsDetail >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR GetTableStatisticsRequest::GetTableStatisticsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetTableStatisticsRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetTableStatisticsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTableStatisticsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTableStatisticsRequestDefaultTypeInternal() {}
  union {
    GetTableStatisticsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTableStatisticsRequestDefaultTypeInternal _GetTableStatisticsRequest_default_instance_;

inline constexpr GeneratedLootItem::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        properties_{},
        item_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        rarity_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        item_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        condition_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        quantity_{0},
        unit_value_gp_{0},
        total_value_gp_{0},
        is_magical_{false},
        is_cursed_{false} {}

template <typename>
PROTOBUF_CONSTEXPR GeneratedLootItem::GeneratedLootItem(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GeneratedLootItem_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GeneratedLootItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GeneratedLootItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GeneratedLootItemDefaultTypeInternal() {}
  union {
    GeneratedLootItem _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GeneratedLootItemDefaultTypeInternal _GeneratedLootItem_default_instance_;

inline constexpr GenerateLootRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        loot_params_{nullptr},
        loot_tables_{nullptr},
        options_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GenerateLootRequest::GenerateLootRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GenerateLootRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GenerateLootRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenerateLootRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenerateLootRequestDefaultTypeInternal() {}
  union {
    GenerateLootRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenerateLootRequestDefaultTypeInternal _GenerateLootRequest_default_instance_;

inline constexpr GenerateEncounterRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        room_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        encounter_params_{nullptr},
        encounter_tables_{nullptr},
        options_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GenerateEncounterRequest::GenerateEncounterRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GenerateEncounterRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GenerateEncounterRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenerateEncounterRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenerateEncounterRequestDefaultTypeInternal() {}
  union {
    GenerateEncounterRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenerateEncounterRequestDefaultTypeInternal _GenerateEncounterRequest_default_instance_;

inline constexpr ExportSelectionTableResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        exported_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        export_metadata_{nullptr},
        format_{static_cast< ::api::v1alpha1::ExportFormat >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR ExportSelectionTableResponse::ExportSelectionTableResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ExportSelectionTableResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ExportSelectionTableResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExportSelectionTableResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExportSelectionTableResponseDefaultTypeInternal() {}
  union {
    ExportSelectionTableResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExportSelectionTableResponseDefaultTypeInternal _ExportSelectionTableResponse_default_instance_;

inline constexpr ExportSelectionTableRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        export_options_{nullptr},
        format_{static_cast< ::api::v1alpha1::ExportFormat >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR ExportSelectionTableRequest::ExportSelectionTableRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ExportSelectionTableRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ExportSelectionTableRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExportSelectionTableRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExportSelectionTableRequestDefaultTypeInternal() {}
  union {
    ExportSelectionTableRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExportSelectionTableRequestDefaultTypeInternal _ExportSelectionTableRequest_default_instance_;

inline constexpr EntrySelectionAnalysis::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        clusters_{},
        most_selected_entry_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        least_selected_entry_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        selection_bias_{0},
        selection_entropy_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EntrySelectionAnalysis::EntrySelectionAnalysis(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EntrySelectionAnalysis_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EntrySelectionAnalysisDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EntrySelectionAnalysisDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EntrySelectionAnalysisDefaultTypeInternal() {}
  union {
    EntrySelectionAnalysis _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EntrySelectionAnalysisDefaultTypeInternal _EntrySelectionAnalysis_default_instance_;

inline constexpr EntityResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        properties_{},
        entity_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        entity_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        entity_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        quantity_{nullptr},
        spawn_preferences_{nullptr},
        challenge_rating_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EntityResult::EntityResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EntityResult_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EntityResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EntityResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EntityResultDefaultTypeInternal() {}
  union {
    EntityResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EntityResultDefaultTypeInternal _EntityResult_default_instance_;

inline constexpr EncounterCreature::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        creature_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        role_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        special_instructions_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        spawn_preferences_{nullptr},
        challenge_rating_{0},
        quantity_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EncounterCreature::EncounterCreature(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EncounterCreature_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EncounterCreatureDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EncounterCreatureDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EncounterCreatureDefaultTypeInternal() {}
  union {
    EncounterCreature _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EncounterCreatureDefaultTypeInternal _EncounterCreature_default_instance_;

inline constexpr EffectResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        parameters_{},
        effect_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        effect_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        duration_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        area_of_effect_description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        intensity_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EffectResult::EffectResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EffectResult_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EffectResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EffectResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EffectResultDefaultTypeInternal() {}
  union {
    EffectResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EffectResultDefaultTypeInternal _EffectResult_default_instance_;

inline constexpr StatisticalAnalysis::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        trends_{},
        roll_distribution_{nullptr},
        entry_selection_{nullptr},
        performance_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR StatisticalAnalysis::StatisticalAnalysis(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(StatisticalAnalysis_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StatisticalAnalysisDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatisticalAnalysisDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatisticalAnalysisDefaultTypeInternal() {}
  union {
    StatisticalAnalysis _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatisticalAnalysisDefaultTypeInternal _StatisticalAnalysis_default_instance_;

inline constexpr RollWithModifiersRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        modifiers_{},
        table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        options_{nullptr},
        roll_count_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RollWithModifiersRequest::RollWithModifiersRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RollWithModifiersRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RollWithModifiersRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollWithModifiersRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollWithModifiersRequestDefaultTypeInternal() {}
  union {
    RollWithModifiersRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollWithModifiersRequestDefaultTypeInternal _RollWithModifiersRequest_default_instance_;

inline constexpr RollOnTableRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        parameters_{},
        table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        options_{nullptr},
        roll_count_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RollOnTableRequest::RollOnTableRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RollOnTableRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RollOnTableRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollOnTableRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollOnTableRequestDefaultTypeInternal() {}
  union {
    RollOnTableRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollOnTableRequestDefaultTypeInternal _RollOnTableRequest_default_instance_;

inline constexpr RollMultipleRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        table_rolls_{},
        global_options_{nullptr},
        correlate_results_{false} {}

template <typename>
PROTOBUF_CONSTEXPR RollMultipleRequest::RollMultipleRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RollMultipleRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RollMultipleRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollMultipleRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollMultipleRequestDefaultTypeInternal() {}
  union {
    RollMultipleRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollMultipleRequestDefaultTypeInternal _RollMultipleRequest_default_instance_;

inline constexpr MultipleResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        results_{},
        combination_method_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        choose_count_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MultipleResult::MultipleResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MultipleResult_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MultipleResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MultipleResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MultipleResultDefaultTypeInternal() {}
  union {
    MultipleResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MultipleResultDefaultTypeInternal _MultipleResult_default_instance_;

inline constexpr TableEntryResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        result_type_{static_cast< ::api::v1alpha1::TableEntryResultType >(0)},
        result_data_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR TableEntryResult::TableEntryResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TableEntryResult_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TableEntryResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TableEntryResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TableEntryResultDefaultTypeInternal() {}
  union {
    TableEntryResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TableEntryResultDefaultTypeInternal _TableEntryResult_default_instance_;

inline constexpr ImportResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        warnings_{},
        errors_{},
        success_{false},
        items_imported_{0},
        items_skipped_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ImportResult::ImportResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ImportResult_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ImportResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ImportResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ImportResultDefaultTypeInternal() {}
  union {
    ImportResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ImportResultDefaultTypeInternal _ImportResult_default_instance_;

inline constexpr GeneratedLoot::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        items_{},
        rarity_distribution_{},
        special_notes_{},
        loot_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        total_value_gp_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GeneratedLoot::GeneratedLoot(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GeneratedLoot_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GeneratedLootDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GeneratedLootDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GeneratedLootDefaultTypeInternal() {}
  union {
    GeneratedLoot _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GeneratedLootDefaultTypeInternal _GeneratedLoot_default_instance_;

inline constexpr GeneratedEncounter::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        creatures_{},
        treasure_{},
        environmental_features_{},
        complications_{},
        encounter_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        difficulty_rating_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        challenge_rating_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GeneratedEncounter::GeneratedEncounter(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GeneratedEncounter_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GeneratedEncounterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GeneratedEncounterDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GeneratedEncounterDefaultTypeInternal() {}
  union {
    GeneratedEncounter _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GeneratedEncounterDefaultTypeInternal _GeneratedEncounter_default_instance_;

inline constexpr BatchRollOperation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        parameters_{},
        operation_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        options_{nullptr},
        roll_count_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BatchRollOperation::BatchRollOperation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(BatchRollOperation_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BatchRollOperationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BatchRollOperationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BatchRollOperationDefaultTypeInternal() {}
  union {
    BatchRollOperation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BatchRollOperationDefaultTypeInternal _BatchRollOperation_default_instance_;

inline constexpr BatchRollFailure::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        errors_{},
        operation_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        failure_reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR BatchRollFailure::BatchRollFailure(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(BatchRollFailure_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BatchRollFailureDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BatchRollFailureDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BatchRollFailureDefaultTypeInternal() {}
  union {
    BatchRollFailure _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BatchRollFailureDefaultTypeInternal _BatchRollFailure_default_instance_;

inline constexpr ValidateSelectionTableResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        validation_checks_{},
        validation_result_{nullptr},
        validation_stats_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ValidateSelectionTableResponse::ValidateSelectionTableResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ValidateSelectionTableResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValidateSelectionTableResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidateSelectionTableResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidateSelectionTableResponseDefaultTypeInternal() {}
  union {
    ValidateSelectionTableResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidateSelectionTableResponseDefaultTypeInternal _ValidateSelectionTableResponse_default_instance_;

inline constexpr TableEntry::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        conditions_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        roll_range_{nullptr},
        result_{nullptr},
        weight_{0},
        allow_duplicates_{false},
        max_selections_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TableEntry::TableEntry(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TableEntry_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TableEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TableEntryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TableEntryDefaultTypeInternal() {}
  union {
    TableEntry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TableEntryDefaultTypeInternal _TableEntry_default_instance_;

inline constexpr GetTableStatisticsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        statistics_{nullptr},
        analysis_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetTableStatisticsResponse::GetTableStatisticsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetTableStatisticsResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetTableStatisticsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTableStatisticsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTableStatisticsResponseDefaultTypeInternal() {}
  union {
    GetTableStatisticsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTableStatisticsResponseDefaultTypeInternal _GetTableStatisticsResponse_default_instance_;

inline constexpr GenerateLootResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tables_used_{},
        loot_{nullptr},
        generation_stats_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GenerateLootResponse::GenerateLootResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GenerateLootResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GenerateLootResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenerateLootResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenerateLootResponseDefaultTypeInternal() {}
  union {
    GenerateLootResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenerateLootResponseDefaultTypeInternal _GenerateLootResponse_default_instance_;

inline constexpr GenerateEncounterResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tables_used_{},
        encounter_{nullptr},
        generation_stats_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GenerateEncounterResponse::GenerateEncounterResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GenerateEncounterResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GenerateEncounterResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenerateEncounterResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenerateEncounterResponseDefaultTypeInternal() {}
  union {
    GenerateEncounterResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenerateEncounterResponseDefaultTypeInternal _GenerateEncounterResponse_default_instance_;

inline constexpr BatchRollTablesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        roll_operations_{},
        batch_options_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR BatchRollTablesRequest::BatchRollTablesRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(BatchRollTablesRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BatchRollTablesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BatchRollTablesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BatchRollTablesRequestDefaultTypeInternal() {}
  union {
    BatchRollTablesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BatchRollTablesRequestDefaultTypeInternal _BatchRollTablesRequest_default_instance_;

inline constexpr SelectionTable::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        entries_{},
        nested_table_ids_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dice_config_{nullptr},
        metadata_{nullptr},
        options_{nullptr},
        table_type_{static_cast< ::api::v1alpha1::SelectionTableType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR SelectionTable::SelectionTable(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SelectionTable_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SelectionTableDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SelectionTableDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SelectionTableDefaultTypeInternal() {}
  union {
    SelectionTable _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SelectionTableDefaultTypeInternal _SelectionTable_default_instance_;

inline constexpr RollResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        result_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        modification_reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        selected_entry_{nullptr},
        result_data_{nullptr},
        roll_details_{nullptr},
        roll_value_{0},
        was_modified_{false} {}

template <typename>
PROTOBUF_CONSTEXPR RollResult::RollResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RollResult_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RollResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollResultDefaultTypeInternal() {}
  union {
    RollResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollResultDefaultTypeInternal _RollResult_default_instance_;

inline constexpr ValidateSelectionTableRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        table_{nullptr},
        validation_options_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ValidateSelectionTableRequest::ValidateSelectionTableRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ValidateSelectionTableRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValidateSelectionTableRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidateSelectionTableRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidateSelectionTableRequestDefaultTypeInternal() {}
  union {
    ValidateSelectionTableRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidateSelectionTableRequestDefaultTypeInternal _ValidateSelectionTableRequest_default_instance_;

inline constexpr UpdateSelectionTableResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        table_{nullptr},
        validation_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateSelectionTableResponse::UpdateSelectionTableResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UpdateSelectionTableResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateSelectionTableResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateSelectionTableResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateSelectionTableResponseDefaultTypeInternal() {}
  union {
    UpdateSelectionTableResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateSelectionTableResponseDefaultTypeInternal _UpdateSelectionTableResponse_default_instance_;

inline constexpr UpdateSelectionTableRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        table_{nullptr},
        update_options_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateSelectionTableRequest::UpdateSelectionTableRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UpdateSelectionTableRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateSelectionTableRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateSelectionTableRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateSelectionTableRequestDefaultTypeInternal() {}
  union {
    UpdateSelectionTableRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateSelectionTableRequestDefaultTypeInternal _UpdateSelectionTableRequest_default_instance_;

inline constexpr TableRollResults::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        results_{},
        table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        stats_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TableRollResults::TableRollResults(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TableRollResults_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TableRollResultsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TableRollResultsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TableRollResultsDefaultTypeInternal() {}
  union {
    TableRollResults _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TableRollResultsDefaultTypeInternal _TableRollResults_default_instance_;

inline constexpr RollWithModifiersResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        results_{},
        modifier_effects_{},
        roll_stats_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RollWithModifiersResponse::RollWithModifiersResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RollWithModifiersResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RollWithModifiersResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollWithModifiersResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollWithModifiersResponseDefaultTypeInternal() {}
  union {
    RollWithModifiersResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollWithModifiersResponseDefaultTypeInternal _RollWithModifiersResponse_default_instance_;

inline constexpr RollOnTableResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        results_{},
        table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        roll_stats_{nullptr},
        session_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RollOnTableResponse::RollOnTableResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RollOnTableResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RollOnTableResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollOnTableResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollOnTableResponseDefaultTypeInternal() {}
  union {
    RollOnTableResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollOnTableResponseDefaultTypeInternal _RollOnTableResponse_default_instance_;

inline constexpr ResultComponent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        relationship_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ResultComponent::ResultComponent(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ResultComponent_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResultComponentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResultComponentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResultComponentDefaultTypeInternal() {}
  union {
    ResultComponent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResultComponentDefaultTypeInternal _ResultComponent_default_instance_;

inline constexpr ListSelectionTablesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tables_{},
        page_info_{nullptr},
        list_stats_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ListSelectionTablesResponse::ListSelectionTablesResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ListSelectionTablesResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListSelectionTablesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListSelectionTablesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListSelectionTablesResponseDefaultTypeInternal() {}
  union {
    ListSelectionTablesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListSelectionTablesResponseDefaultTypeInternal _ListSelectionTablesResponse_default_instance_;

inline constexpr ImportSelectionTableResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        imported_table_{nullptr},
        import_result_{nullptr},
        import_stats_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ImportSelectionTableResponse::ImportSelectionTableResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ImportSelectionTableResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ImportSelectionTableResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ImportSelectionTableResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ImportSelectionTableResponseDefaultTypeInternal() {}
  union {
    ImportSelectionTableResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ImportSelectionTableResponseDefaultTypeInternal _ImportSelectionTableResponse_default_instance_;

inline constexpr GetSelectionTableResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        table_{nullptr},
        statistics_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetSelectionTableResponse::GetSelectionTableResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetSelectionTableResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetSelectionTableResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSelectionTableResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSelectionTableResponseDefaultTypeInternal() {}
  union {
    GetSelectionTableResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSelectionTableResponseDefaultTypeInternal _GetSelectionTableResponse_default_instance_;

inline constexpr CreateSelectionTableResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        table_{nullptr},
        validation_result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateSelectionTableResponse::CreateSelectionTableResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CreateSelectionTableResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateSelectionTableResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateSelectionTableResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateSelectionTableResponseDefaultTypeInternal() {}
  union {
    CreateSelectionTableResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateSelectionTableResponseDefaultTypeInternal _CreateSelectionTableResponse_default_instance_;

inline constexpr CreateSelectionTableRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        table_{nullptr},
        validation_options_{nullptr},
        is_public_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CreateSelectionTableRequest::CreateSelectionTableRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CreateSelectionTableRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateSelectionTableRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateSelectionTableRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateSelectionTableRequestDefaultTypeInternal() {}
  union {
    CreateSelectionTableRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateSelectionTableRequestDefaultTypeInternal _CreateSelectionTableRequest_default_instance_;

inline constexpr BatchRollResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        results_{},
        operation_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        stats_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR BatchRollResult::BatchRollResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(BatchRollResult_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BatchRollResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BatchRollResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BatchRollResultDefaultTypeInternal() {}
  union {
    BatchRollResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BatchRollResultDefaultTypeInternal _BatchRollResult_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR RollMultipleResponse_ResultsByTableEntry_DoNotUse::RollMultipleResponse_ResultsByTableEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : RollMultipleResponse_ResultsByTableEntry_DoNotUse::MapEntry(RollMultipleResponse_ResultsByTableEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : RollMultipleResponse_ResultsByTableEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct RollMultipleResponse_ResultsByTableEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollMultipleResponse_ResultsByTableEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollMultipleResponse_ResultsByTableEntry_DoNotUseDefaultTypeInternal() {}
  union {
    RollMultipleResponse_ResultsByTableEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollMultipleResponse_ResultsByTableEntry_DoNotUseDefaultTypeInternal _RollMultipleResponse_ResultsByTableEntry_DoNotUse_default_instance_;

inline constexpr CombinedResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        components_{},
        result_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        total_value_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CombinedResult::CombinedResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CombinedResult_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CombinedResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CombinedResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CombinedResultDefaultTypeInternal() {}
  union {
    CombinedResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CombinedResultDefaultTypeInternal _CombinedResult_default_instance_;

inline constexpr BatchRollTablesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        successful_operations_{},
        failed_operations_{},
        correlations_{},
        batch_stats_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR BatchRollTablesResponse::BatchRollTablesResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(BatchRollTablesResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BatchRollTablesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BatchRollTablesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BatchRollTablesResponseDefaultTypeInternal() {}
  union {
    BatchRollTablesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BatchRollTablesResponseDefaultTypeInternal _BatchRollTablesResponse_default_instance_;

inline constexpr RollMultipleResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        results_by_table_{},
        combined_results_{},
        multi_roll_stats_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RollMultipleResponse::RollMultipleResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RollMultipleResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RollMultipleResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollMultipleResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollMultipleResponseDefaultTypeInternal() {}
  union {
    RollMultipleResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollMultipleResponseDefaultTypeInternal _RollMultipleResponse_default_instance_;
}  // namespace v1alpha1
}  // namespace api
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_api_2fv1alpha1_2froom_5fselectables_2eproto[8];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_api_2fv1alpha1_2froom_5fselectables_2eproto = nullptr;
const ::uint32_t
    TableStruct_api_2fv1alpha1_2froom_5fselectables_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CreateSelectionTableRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CreateSelectionTableRequest, _impl_.table_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CreateSelectionTableRequest, _impl_.is_public_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CreateSelectionTableRequest, _impl_.validation_options_),
        0,
        2,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SelectionTable, _impl_._has_bits_),
        13, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SelectionTable, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SelectionTable, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SelectionTable, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SelectionTable, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SelectionTable, _impl_.table_type_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SelectionTable, _impl_.dice_config_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SelectionTable, _impl_.entries_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SelectionTable, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SelectionTable, _impl_.nested_table_ids_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SelectionTable, _impl_.options_),
        0,
        1,
        2,
        3,
        7,
        4,
        ~0u,
        5,
        ~0u,
        6,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::DiceConfiguration, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::DiceConfiguration, _impl_.dice_notation_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::DiceConfiguration, _impl_.modifier_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::DiceConfiguration, _impl_.min_roll_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::DiceConfiguration, _impl_.max_roll_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::DiceConfiguration, _impl_.reroll_on_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::DiceConfiguration, _impl_.exploding_dice_),
        0,
        1,
        2,
        3,
        ~0u,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableEntry, _impl_._has_bits_),
        12, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableEntry, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableEntry, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableEntry, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableEntry, _impl_.roll_range_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableEntry, _impl_.weight_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableEntry, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableEntry, _impl_.conditions_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableEntry, _impl_.allow_duplicates_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableEntry, _impl_.max_selections_),
        0,
        1,
        2,
        3,
        5,
        4,
        ~0u,
        6,
        7,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollRange, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollRange, _impl_.min_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollRange, _impl_.max_),
        0,
        1,
        0x085, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableEntryResult, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableEntryResult, _impl_._oneof_case_[0]),
        12, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableEntryResult, _impl_.result_type_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableEntryResult, _impl_.result_data_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableEntryResult, _impl_.result_data_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableEntryResult, _impl_.result_data_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableEntryResult, _impl_.result_data_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableEntryResult, _impl_.result_data_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableEntryResult, _impl_.result_data_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableEntryResult, _impl_.result_data_),
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ItemResult_PropertiesEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ItemResult_PropertiesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ItemResult_PropertiesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ItemResult, _impl_._has_bits_),
        11, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ItemResult, _impl_.item_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ItemResult, _impl_.item_name_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ItemResult, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ItemResult, _impl_.rarity_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ItemResult, _impl_.value_gp_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ItemResult, _impl_.properties_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ItemResult, _impl_.is_magical_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ItemResult, _impl_.condition_),
        0,
        1,
        4,
        2,
        5,
        ~0u,
        6,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QuantityRange, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QuantityRange, _impl_.min_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QuantityRange, _impl_.max_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QuantityRange, _impl_.dice_notation_),
        1,
        2,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntityResult_PropertiesEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntityResult_PropertiesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntityResult_PropertiesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntityResult, _impl_._has_bits_),
        10, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntityResult, _impl_.entity_type_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntityResult, _impl_.entity_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntityResult, _impl_.entity_name_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntityResult, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntityResult, _impl_.challenge_rating_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntityResult, _impl_.properties_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntityResult, _impl_.spawn_preferences_),
        0,
        1,
        2,
        3,
        5,
        ~0u,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntitySpawnPreferences, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntitySpawnPreferences, _impl_.preferred_locations_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntitySpawnPreferences, _impl_.formation_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntitySpawnPreferences, _impl_.behavior_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntitySpawnPreferences, _impl_.special_instructions_),
        ~0u,
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::NestedTableResult, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::NestedTableResult, _impl_.table_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::NestedTableResult, _impl_.roll_count_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::NestedTableResult, _impl_.modifiers_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::NestedTableResult, _impl_.combine_results_),
        0,
        1,
        ~0u,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollModifier, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollModifier, _impl_.modifier_type_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollModifier, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollModifier, _impl_.condition_),
        0,
        2,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TextResult_VariablesEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TextResult_VariablesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TextResult_VariablesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TextResult, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TextResult, _impl_.text_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TextResult, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TextResult, _impl_.variables_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TextResult, _impl_.requires_action_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TextResult, _impl_.action_type_),
        0,
        1,
        ~0u,
        3,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EffectResult_ParametersEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EffectResult_ParametersEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EffectResult_ParametersEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EffectResult, _impl_._has_bits_),
        10, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EffectResult, _impl_.effect_type_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EffectResult, _impl_.effect_name_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EffectResult, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EffectResult, _impl_.parameters_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EffectResult, _impl_.duration_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EffectResult, _impl_.intensity_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EffectResult, _impl_.area_of_effect_description_),
        0,
        1,
        2,
        ~0u,
        3,
        5,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MultipleResult, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MultipleResult, _impl_.results_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MultipleResult, _impl_.combination_method_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MultipleResult, _impl_.choose_count_),
        ~0u,
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntryCondition, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntryCondition, _impl_.condition_type_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntryCondition, _impl_.parameter_name_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntryCondition, _impl_.operator__),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntryCondition, _impl_.expected_value_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntryCondition, _impl_.is_required_),
        0,
        1,
        2,
        3,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableOptions, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableOptions, _impl_.allow_duplicates_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableOptions, _impl_.max_results_per_roll_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableOptions, _impl_.default_roll_count_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableOptions, _impl_.sort_results_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableOptions, _impl_.sort_criteria_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableOptions, _impl_.group_similar_results_),
        3,
        1,
        2,
        4,
        0,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SelectionTableMetadata, _impl_._has_bits_),
        12, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SelectionTableMetadata, _impl_.author_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SelectionTableMetadata, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SelectionTableMetadata, _impl_.created_at_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SelectionTableMetadata, _impl_.updated_at_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SelectionTableMetadata, _impl_.usage_stats_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SelectionTableMetadata, _impl_.tags_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SelectionTableMetadata, _impl_.source_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SelectionTableMetadata, _impl_.copyright_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SelectionTableMetadata, _impl_.is_official_),
        0,
        1,
        5,
        6,
        4,
        ~0u,
        2,
        3,
        7,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableUsageStats, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableUsageStats, _impl_.roll_count_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableUsageStats, _impl_.results_generated_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableUsageStats, _impl_.most_common_result_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableUsageStats, _impl_.least_common_result_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableUsageStats, _impl_.average_rolls_per_session_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableUsageStats, _impl_.last_used_),
        2,
        3,
        0,
        1,
        4,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableValidationOptions, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableValidationOptions, _impl_.check_range_gaps_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableValidationOptions, _impl_.check_range_overlaps_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableValidationOptions, _impl_.validate_nested_references_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableValidationOptions, _impl_.check_weight_distribution_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableValidationOptions, _impl_.validate_dice_config_),
        0,
        1,
        2,
        3,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CreateSelectionTableResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CreateSelectionTableResponse, _impl_.table_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CreateSelectionTableResponse, _impl_.validation_result_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CreateSelectionTableResponse, _impl_.message_),
        1,
        2,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GetSelectionTableRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GetSelectionTableRequest, _impl_.table_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GetSelectionTableRequest, _impl_.include_statistics_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GetSelectionTableRequest, _impl_.include_entry_details_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GetSelectionTableResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GetSelectionTableResponse, _impl_.table_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GetSelectionTableResponse, _impl_.statistics_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableStatistics_EntryFrequencyEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableStatistics_EntryFrequencyEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableStatistics_EntryFrequencyEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableStatistics_RollDistributionEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableStatistics_RollDistributionEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableStatistics_RollDistributionEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableStatistics_ResultTypeCountsEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableStatistics_ResultTypeCountsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableStatistics_ResultTypeCountsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableStatistics, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableStatistics, _impl_.usage_stats_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableStatistics, _impl_.entry_frequency_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableStatistics, _impl_.average_roll_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableStatistics, _impl_.roll_distribution_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableStatistics, _impl_.result_type_counts_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableStatistics, _impl_.performance_stats_),
        0,
        ~0u,
        2,
        ~0u,
        ~0u,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TablePerformanceStats, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TablePerformanceStats, _impl_.average_roll_time_ms_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TablePerformanceStats, _impl_.cache_hit_ratio_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TablePerformanceStats, _impl_.memory_usage_bytes_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TablePerformanceStats, _impl_.last_optimized_),
        0,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::UpdateSelectionTableRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::UpdateSelectionTableRequest, _impl_.table_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::UpdateSelectionTableRequest, _impl_.table_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::UpdateSelectionTableRequest, _impl_.update_options_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableUpdateOptions, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableUpdateOptions, _impl_.preserve_statistics_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableUpdateOptions, _impl_.validate_after_update_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableUpdateOptions, _impl_.create_backup_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableUpdateOptions, _impl_.update_reason_),
        1,
        2,
        3,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::UpdateSelectionTableResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::UpdateSelectionTableResponse, _impl_.table_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::UpdateSelectionTableResponse, _impl_.validation_result_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::UpdateSelectionTableResponse, _impl_.message_),
        1,
        2,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::DeleteSelectionTableRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::DeleteSelectionTableRequest, _impl_.table_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::DeleteSelectionTableRequest, _impl_.force_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::DeleteSelectionTableResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::DeleteSelectionTableResponse, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::DeleteSelectionTableResponse, _impl_.references_removed_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ListSelectionTablesRequest, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ListSelectionTablesRequest, _impl_.filter_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ListSelectionTablesRequest, _impl_.page_info_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ListSelectionTablesRequest, _impl_.sort_options_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ListSelectionTablesRequest, _impl_.include_statistics_),
        0,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SelectionTableFilter, _impl_._has_bits_),
        10, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SelectionTableFilter, _impl_.categories_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SelectionTableFilter, _impl_.table_types_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SelectionTableFilter, _impl_.author_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SelectionTableFilter, _impl_.search_term_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SelectionTableFilter, _impl_.tags_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SelectionTableFilter, _impl_.official_only_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SelectionTableFilter, _impl_.public_only_),
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableSortOptions, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableSortOptions, _impl_.sort_by_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableSortOptions, _impl_.direction_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ListSelectionTablesResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ListSelectionTablesResponse, _impl_.tables_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ListSelectionTablesResponse, _impl_.page_info_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ListSelectionTablesResponse, _impl_.list_stats_),
        ~0u,
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableListStats_TablesByCategoryEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableListStats_TablesByCategoryEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableListStats_TablesByCategoryEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableListStats_TablesByTypeEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableListStats_TablesByTypeEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableListStats_TablesByTypeEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableListStats, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableListStats, _impl_.total_count_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableListStats, _impl_.returned_count_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableListStats, _impl_.tables_by_category_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableListStats, _impl_.tables_by_type_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableListStats, _impl_.most_popular_table_),
        1,
        2,
        ~0u,
        ~0u,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollOnTableRequest_ParametersEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollOnTableRequest_ParametersEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollOnTableRequest_ParametersEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollOnTableRequest, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollOnTableRequest, _impl_.table_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollOnTableRequest, _impl_.roll_count_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollOnTableRequest, _impl_.parameters_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollOnTableRequest, _impl_.options_),
        0,
        2,
        ~0u,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollOptions, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollOptions, _impl_.seed_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollOptions, _impl_.modifiers_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollOptions, _impl_.show_roll_details_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollOptions, _impl_.group_similar_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollOptions, _impl_.max_results_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollOptions, _impl_.allow_rerolls_),
        0,
        ~0u,
        1,
        2,
        4,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollOnTableResponse, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollOnTableResponse, _impl_.results_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollOnTableResponse, _impl_.roll_stats_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollOnTableResponse, _impl_.table_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollOnTableResponse, _impl_.session_),
        ~0u,
        1,
        0,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollResult, _impl_._has_bits_),
        10, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollResult, _impl_.result_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollResult, _impl_.selected_entry_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollResult, _impl_.roll_value_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollResult, _impl_.result_data_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollResult, _impl_.roll_details_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollResult, _impl_.was_modified_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollResult, _impl_.modification_reason_),
        0,
        2,
        5,
        3,
        4,
        6,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollDetails, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollDetails, _impl_.dice_values_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollDetails, _impl_.total_modifier_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollDetails, _impl_.raw_roll_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollDetails, _impl_.final_roll_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollDetails, _impl_.dice_notation_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollDetails, _impl_.rerolls_),
        ~0u,
        1,
        2,
        3,
        0,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollStats, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollStats, _impl_.roll_time_ms_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollStats, _impl_.dice_rolled_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollStats, _impl_.rerolls_made_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollStats, _impl_.average_roll_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollStats, _impl_.highest_roll_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollStats, _impl_.lowest_roll_),
        0,
        1,
        2,
        3,
        4,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollSession_ParametersEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollSession_ParametersEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollSession_ParametersEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollSession, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollSession, _impl_.session_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollSession, _impl_.expires_at_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollSession, _impl_.roll_count_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollSession, _impl_.parameters_),
        0,
        1,
        2,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollMultipleRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollMultipleRequest, _impl_.table_rolls_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollMultipleRequest, _impl_.global_options_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollMultipleRequest, _impl_.correlate_results_),
        ~0u,
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableRollConfig_ParametersEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableRollConfig_ParametersEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableRollConfig_ParametersEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableRollConfig, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableRollConfig, _impl_.table_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableRollConfig, _impl_.roll_count_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableRollConfig, _impl_.parameters_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableRollConfig, _impl_.modifiers_),
        0,
        1,
        ~0u,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollMultipleResponse_ResultsByTableEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollMultipleResponse_ResultsByTableEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollMultipleResponse_ResultsByTableEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollMultipleResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollMultipleResponse, _impl_.results_by_table_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollMultipleResponse, _impl_.combined_results_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollMultipleResponse, _impl_.multi_roll_stats_),
        ~0u,
        ~0u,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableRollResults, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableRollResults, _impl_.table_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableRollResults, _impl_.results_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableRollResults, _impl_.stats_),
        0,
        ~0u,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CombinedResult, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CombinedResult, _impl_.result_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CombinedResult, _impl_.components_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CombinedResult, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CombinedResult, _impl_.total_value_),
        0,
        ~0u,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ResultComponent, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ResultComponent, _impl_.table_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ResultComponent, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ResultComponent, _impl_.relationship_),
        0,
        2,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MultiRollStats, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MultiRollStats, _impl_.total_time_ms_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MultiRollStats, _impl_.tables_rolled_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MultiRollStats, _impl_.total_results_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MultiRollStats, _impl_.average_time_per_table_ms_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MultiRollStats, _impl_.correlations_found_),
        0,
        1,
        2,
        3,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollWithModifiersRequest, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollWithModifiersRequest, _impl_.table_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollWithModifiersRequest, _impl_.modifiers_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollWithModifiersRequest, _impl_.roll_count_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollWithModifiersRequest, _impl_.options_),
        0,
        ~0u,
        2,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollWithModifiersResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollWithModifiersResponse, _impl_.results_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollWithModifiersResponse, _impl_.modifier_effects_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollWithModifiersResponse, _impl_.roll_stats_),
        ~0u,
        ~0u,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ModifierEffect, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ModifierEffect, _impl_.modifier_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ModifierEffect, _impl_.rolls_affected_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ModifierEffect, _impl_.average_change_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ModifierEffect, _impl_.effect_description_),
        1,
        3,
        2,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollTablesRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollTablesRequest, _impl_.roll_operations_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollTablesRequest, _impl_.batch_options_),
        ~0u,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollOperation_ParametersEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollOperation_ParametersEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollOperation_ParametersEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollOperation, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollOperation, _impl_.operation_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollOperation, _impl_.table_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollOperation, _impl_.roll_count_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollOperation, _impl_.parameters_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollOperation, _impl_.options_),
        0,
        1,
        3,
        ~0u,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollOptions, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollOptions, _impl_.parallel_execution_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollOptions, _impl_.timeout_ms_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollOptions, _impl_.all_or_nothing_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollOptions, _impl_.correlate_across_operations_),
        1,
        0,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollTablesResponse, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollTablesResponse, _impl_.successful_operations_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollTablesResponse, _impl_.failed_operations_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollTablesResponse, _impl_.batch_stats_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollTablesResponse, _impl_.correlations_),
        ~0u,
        ~0u,
        0,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollResult, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollResult, _impl_.operation_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollResult, _impl_.results_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollResult, _impl_.stats_),
        0,
        ~0u,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollFailure, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollFailure, _impl_.operation_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollFailure, _impl_.table_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollFailure, _impl_.failure_reason_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollFailure, _impl_.errors_),
        0,
        1,
        2,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollStats, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollStats, _impl_.total_batch_time_ms_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollStats, _impl_.successful_operations_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollStats, _impl_.failed_operations_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollStats, _impl_.total_results_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollStats, _impl_.average_operation_time_ms_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BatchRollStats, _impl_.used_parallel_execution_),
        0,
        1,
        2,
        4,
        3,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::OperationCorrelation, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::OperationCorrelation, _impl_.operation_ids_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::OperationCorrelation, _impl_.correlation_type_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::OperationCorrelation, _impl_.strength_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::OperationCorrelation, _impl_.description_),
        ~0u,
        0,
        2,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GenerateEncounterRequest, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GenerateEncounterRequest, _impl_.room_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GenerateEncounterRequest, _impl_.encounter_params_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GenerateEncounterRequest, _impl_.encounter_tables_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GenerateEncounterRequest, _impl_.options_),
        0,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterParameters, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterParameters, _impl_.party_level_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterParameters, _impl_.party_size_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterParameters, _impl_.difficulty_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterParameters, _impl_.theme_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterParameters, _impl_.environment_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterParameters, _impl_.requirements_),
        3,
        4,
        0,
        1,
        2,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterTables, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterTables, _impl_.primary_table_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterTables, _impl_.creature_table_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterTables, _impl_.treasure_table_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterTables, _impl_.environment_table_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterTables, _impl_.complication_table_id_),
        0,
        1,
        2,
        3,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterGenerationOptions, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterGenerationOptions, _impl_.seed_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterGenerationOptions, _impl_.include_treasure_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterGenerationOptions, _impl_.add_environmental_features_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterGenerationOptions, _impl_.include_complications_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterGenerationOptions, _impl_.max_creatures_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterGenerationOptions, _impl_.balance_difficulty_),
        0,
        1,
        2,
        3,
        5,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GenerateEncounterResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GenerateEncounterResponse, _impl_.encounter_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GenerateEncounterResponse, _impl_.generation_stats_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GenerateEncounterResponse, _impl_.tables_used_),
        0,
        1,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedEncounter, _impl_._has_bits_),
        12, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedEncounter, _impl_.encounter_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedEncounter, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedEncounter, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedEncounter, _impl_.creatures_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedEncounter, _impl_.treasure_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedEncounter, _impl_.environmental_features_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedEncounter, _impl_.complications_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedEncounter, _impl_.difficulty_rating_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedEncounter, _impl_.challenge_rating_),
        0,
        1,
        2,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        3,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterCreature, _impl_._has_bits_),
        10, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterCreature, _impl_.creature_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterCreature, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterCreature, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterCreature, _impl_.challenge_rating_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterCreature, _impl_.role_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterCreature, _impl_.spawn_preferences_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterCreature, _impl_.special_instructions_),
        0,
        1,
        6,
        5,
        2,
        4,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TreasureItem, _impl_._has_bits_),
        10, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TreasureItem, _impl_.item_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TreasureItem, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TreasureItem, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TreasureItem, _impl_.value_gp_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TreasureItem, _impl_.rarity_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TreasureItem, _impl_.is_magical_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TreasureItem, _impl_.location_),
        0,
        1,
        4,
        5,
        2,
        6,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EnvironmentalFeature, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EnvironmentalFeature, _impl_.feature_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EnvironmentalFeature, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EnvironmentalFeature, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EnvironmentalFeature, _impl_.feature_type_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EnvironmentalFeature, _impl_.preferred_location_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EnvironmentalFeature, _impl_.effects_),
        0,
        1,
        2,
        3,
        4,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterComplication, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterComplication, _impl_.complication_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterComplication, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterComplication, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterComplication, _impl_.trigger_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterComplication, _impl_.effects_),
        0,
        1,
        2,
        3,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterGenerationStats, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterGenerationStats, _impl_.generation_time_ms_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterGenerationStats, _impl_.table_rolls_made_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterGenerationStats, _impl_.creatures_generated_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterGenerationStats, _impl_.treasure_items_generated_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterGenerationStats, _impl_.actual_difficulty_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EncounterGenerationStats, _impl_.calculated_cr_),
        1,
        2,
        3,
        5,
        0,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GenerateLootRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GenerateLootRequest, _impl_.loot_params_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GenerateLootRequest, _impl_.loot_tables_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GenerateLootRequest, _impl_.options_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LootParameters, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LootParameters, _impl_.challenge_rating_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LootParameters, _impl_.party_level_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LootParameters, _impl_.loot_type_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LootParameters, _impl_.rarity_preference_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LootParameters, _impl_.value_budget_gp_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LootParameters, _impl_.source_),
        3,
        4,
        0,
        1,
        5,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LootTables, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LootTables, _impl_.primary_table_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LootTables, _impl_.magic_item_table_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LootTables, _impl_.equipment_table_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LootTables, _impl_.consumables_table_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LootTables, _impl_.currency_table_id_),
        0,
        1,
        2,
        3,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LootGenerationOptions, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LootGenerationOptions, _impl_.seed_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LootGenerationOptions, _impl_.include_cursed_items_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LootGenerationOptions, _impl_.vary_item_conditions_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LootGenerationOptions, _impl_.max_items_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LootGenerationOptions, _impl_.bundle_similar_items_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LootGenerationOptions, _impl_.include_descriptions_),
        0,
        2,
        3,
        1,
        4,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GenerateLootResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GenerateLootResponse, _impl_.loot_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GenerateLootResponse, _impl_.generation_stats_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GenerateLootResponse, _impl_.tables_used_),
        0,
        1,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedLoot_RarityDistributionEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedLoot_RarityDistributionEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedLoot_RarityDistributionEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedLoot, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedLoot, _impl_.loot_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedLoot, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedLoot, _impl_.items_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedLoot, _impl_.total_value_gp_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedLoot, _impl_.rarity_distribution_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedLoot, _impl_.special_notes_),
        0,
        1,
        ~0u,
        2,
        ~0u,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedLootItem_PropertiesEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedLootItem_PropertiesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedLootItem_PropertiesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedLootItem, _impl_._has_bits_),
        15, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedLootItem, _impl_.item_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedLootItem, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedLootItem, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedLootItem, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedLootItem, _impl_.unit_value_gp_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedLootItem, _impl_.total_value_gp_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedLootItem, _impl_.rarity_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedLootItem, _impl_.item_type_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedLootItem, _impl_.condition_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedLootItem, _impl_.is_magical_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedLootItem, _impl_.is_cursed_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GeneratedLootItem, _impl_.properties_),
        0,
        1,
        2,
        6,
        7,
        8,
        3,
        4,
        5,
        9,
        10,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LootGenerationStats_RarityCountsEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LootGenerationStats_RarityCountsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LootGenerationStats_RarityCountsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LootGenerationStats, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LootGenerationStats, _impl_.generation_time_ms_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LootGenerationStats, _impl_.table_rolls_made_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LootGenerationStats, _impl_.items_generated_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LootGenerationStats, _impl_.value_generated_gp_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LootGenerationStats, _impl_.value_budget_gp_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LootGenerationStats, _impl_.rarity_counts_),
        0,
        1,
        2,
        3,
        4,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidateSelectionTableRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidateSelectionTableRequest, _impl_.table_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidateSelectionTableRequest, _impl_.validation_options_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidateSelectionTableResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidateSelectionTableResponse, _impl_.validation_result_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidateSelectionTableResponse, _impl_.validation_checks_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidateSelectionTableResponse, _impl_.validation_stats_),
        0,
        ~0u,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableValidationCheck, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableValidationCheck, _impl_.check_name_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableValidationCheck, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableValidationCheck, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableValidationCheck, _impl_.severity_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableValidationCheck, _impl_.entry_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableValidationCheck, _impl_.suggested_fix_),
        0,
        4,
        1,
        5,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableValidationStats, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableValidationStats, _impl_.validation_time_ms_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableValidationStats, _impl_.checks_performed_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableValidationStats, _impl_.checks_passed_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableValidationStats, _impl_.checks_failed_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableValidationStats, _impl_.warnings_generated_),
        0,
        1,
        2,
        3,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GetTableStatisticsRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GetTableStatisticsRequest, _impl_.table_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GetTableStatisticsRequest, _impl_.time_range_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GetTableStatisticsRequest, _impl_.detail_level_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableTimeRange, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableTimeRange, _impl_.start_time_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableTimeRange, _impl_.end_time_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GetTableStatisticsResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GetTableStatisticsResponse, _impl_.statistics_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GetTableStatisticsResponse, _impl_.analysis_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::StatisticalAnalysis, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::StatisticalAnalysis, _impl_.roll_distribution_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::StatisticalAnalysis, _impl_.entry_selection_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::StatisticalAnalysis, _impl_.performance_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::StatisticalAnalysis, _impl_.trends_),
        0,
        1,
        2,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollDistributionAnalysis, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollDistributionAnalysis, _impl_.expected_frequency_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollDistributionAnalysis, _impl_.actual_frequency_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollDistributionAnalysis, _impl_.chi_square_statistic_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollDistributionAnalysis, _impl_.p_value_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollDistributionAnalysis, _impl_.uniformity_score_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RollDistributionAnalysis, _impl_.outlier_rolls_),
        ~0u,
        ~0u,
        0,
        1,
        2,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntrySelectionAnalysis, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntrySelectionAnalysis, _impl_.most_selected_entry_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntrySelectionAnalysis, _impl_.least_selected_entry_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntrySelectionAnalysis, _impl_.selection_bias_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntrySelectionAnalysis, _impl_.selection_entropy_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntrySelectionAnalysis, _impl_.clusters_),
        0,
        1,
        2,
        3,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SelectionCluster, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SelectionCluster, _impl_.cluster_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SelectionCluster, _impl_.entry_ids_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SelectionCluster, _impl_.frequency_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SelectionCluster, _impl_.characteristics_),
        0,
        ~0u,
        2,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PerformanceAnalysis, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PerformanceAnalysis, _impl_.performance_trend_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PerformanceAnalysis, _impl_.bottlenecks_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PerformanceAnalysis, _impl_.recommendations_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PerformanceAnalysis, _impl_.resource_usage_),
        0,
        ~0u,
        ~0u,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ResourceUsagePattern, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ResourceUsagePattern, _impl_.memory_trend_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ResourceUsagePattern, _impl_.cpu_pattern_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ResourceUsagePattern, _impl_.cache_effectiveness_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ResourceUsagePattern, _impl_.peak_usage_times_),
        0,
        1,
        2,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TrendData, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TrendData, _impl_.trend_name_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TrendData, _impl_.time_period_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TrendData, _impl_.direction_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TrendData, _impl_.strength_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TrendData, _impl_.data_points_),
        0,
        2,
        1,
        3,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TrendPoint, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TrendPoint, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TrendPoint, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TrendPoint, _impl_.context_),
        1,
        2,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ExportSelectionTableRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ExportSelectionTableRequest, _impl_.table_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ExportSelectionTableRequest, _impl_.format_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ExportSelectionTableRequest, _impl_.export_options_),
        0,
        2,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ExportOptions, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ExportOptions, _impl_.include_metadata_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ExportOptions, _impl_.include_statistics_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ExportOptions, _impl_.include_usage_history_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ExportOptions, _impl_.compression_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ExportOptions, _impl_.encoding_),
        2,
        3,
        4,
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ExportSelectionTableResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ExportSelectionTableResponse, _impl_.exported_data_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ExportSelectionTableResponse, _impl_.format_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ExportSelectionTableResponse, _impl_.export_metadata_),
        0,
        2,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ExportMetadata, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ExportMetadata, _impl_.exported_at_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ExportMetadata, _impl_.size_bytes_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ExportMetadata, _impl_.compression_ratio_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ExportMetadata, _impl_.checksum_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ExportMetadata, _impl_.export_version_),
        2,
        3,
        4,
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ImportSelectionTableRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ImportSelectionTableRequest, _impl_.import_data_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ImportSelectionTableRequest, _impl_.format_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ImportSelectionTableRequest, _impl_.import_options_),
        0,
        2,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ImportOptions, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ImportOptions, _impl_.validate_during_import_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ImportOptions, _impl_.overwrite_existing_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ImportOptions, _impl_.preserve_ids_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ImportOptions, _impl_.update_metadata_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ImportOptions, _impl_.source_description_),
        1,
        2,
        3,
        4,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ImportSelectionTableResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ImportSelectionTableResponse, _impl_.imported_table_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ImportSelectionTableResponse, _impl_.import_result_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ImportSelectionTableResponse, _impl_.import_stats_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ImportResult, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ImportResult, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ImportResult, _impl_.warnings_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ImportResult, _impl_.errors_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ImportResult, _impl_.items_imported_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ImportResult, _impl_.items_skipped_),
        0,
        ~0u,
        ~0u,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ImportStats, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ImportStats, _impl_.import_time_ms_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ImportStats, _impl_.data_processed_bytes_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ImportStats, _impl_.validation_time_ms_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ImportStats, _impl_.processing_rate_mbps_),
        0,
        1,
        2,
        3,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::api::v1alpha1::CreateSelectionTableRequest)},
        {9, sizeof(::api::v1alpha1::SelectionTable)},
        {32, sizeof(::api::v1alpha1::DiceConfiguration)},
        {47, sizeof(::api::v1alpha1::TableEntry)},
        {68, sizeof(::api::v1alpha1::RollRange)},
        {75, sizeof(::api::v1alpha1::TableEntryResult)},
        {94, sizeof(::api::v1alpha1::ItemResult_PropertiesEntry_DoNotUse)},
        {101, sizeof(::api::v1alpha1::ItemResult)},
        {120, sizeof(::api::v1alpha1::QuantityRange)},
        {129, sizeof(::api::v1alpha1::EntityResult_PropertiesEntry_DoNotUse)},
        {136, sizeof(::api::v1alpha1::EntityResult)},
        {153, sizeof(::api::v1alpha1::EntitySpawnPreferences)},
        {164, sizeof(::api::v1alpha1::NestedTableResult)},
        {175, sizeof(::api::v1alpha1::RollModifier)},
        {184, sizeof(::api::v1alpha1::TextResult_VariablesEntry_DoNotUse)},
        {191, sizeof(::api::v1alpha1::TextResult)},
        {204, sizeof(::api::v1alpha1::EffectResult_ParametersEntry_DoNotUse)},
        {211, sizeof(::api::v1alpha1::EffectResult)},
        {228, sizeof(::api::v1alpha1::MultipleResult)},
        {237, sizeof(::api::v1alpha1::EntryCondition)},
        {250, sizeof(::api::v1alpha1::TableOptions)},
        {265, sizeof(::api::v1alpha1::SelectionTableMetadata)},
        {286, sizeof(::api::v1alpha1::TableUsageStats)},
        {301, sizeof(::api::v1alpha1::TableValidationOptions)},
        {314, sizeof(::api::v1alpha1::CreateSelectionTableResponse)},
        {323, sizeof(::api::v1alpha1::GetSelectionTableRequest)},
        {332, sizeof(::api::v1alpha1::GetSelectionTableResponse)},
        {339, sizeof(::api::v1alpha1::TableStatistics_EntryFrequencyEntry_DoNotUse)},
        {346, sizeof(::api::v1alpha1::TableStatistics_RollDistributionEntry_DoNotUse)},
        {353, sizeof(::api::v1alpha1::TableStatistics_ResultTypeCountsEntry_DoNotUse)},
        {360, sizeof(::api::v1alpha1::TableStatistics)},
        {375, sizeof(::api::v1alpha1::TablePerformanceStats)},
        {386, sizeof(::api::v1alpha1::UpdateSelectionTableRequest)},
        {395, sizeof(::api::v1alpha1::TableUpdateOptions)},
        {406, sizeof(::api::v1alpha1::UpdateSelectionTableResponse)},
        {415, sizeof(::api::v1alpha1::DeleteSelectionTableRequest)},
        {422, sizeof(::api::v1alpha1::DeleteSelectionTableResponse)},
        {429, sizeof(::api::v1alpha1::ListSelectionTablesRequest)},
        {440, sizeof(::api::v1alpha1::SelectionTableFilter)},
        {457, sizeof(::api::v1alpha1::TableSortOptions)},
        {464, sizeof(::api::v1alpha1::ListSelectionTablesResponse)},
        {473, sizeof(::api::v1alpha1::TableListStats_TablesByCategoryEntry_DoNotUse)},
        {480, sizeof(::api::v1alpha1::TableListStats_TablesByTypeEntry_DoNotUse)},
        {487, sizeof(::api::v1alpha1::TableListStats)},
        {500, sizeof(::api::v1alpha1::RollOnTableRequest_ParametersEntry_DoNotUse)},
        {507, sizeof(::api::v1alpha1::RollOnTableRequest)},
        {518, sizeof(::api::v1alpha1::RollOptions)},
        {533, sizeof(::api::v1alpha1::RollOnTableResponse)},
        {544, sizeof(::api::v1alpha1::RollResult)},
        {561, sizeof(::api::v1alpha1::RollDetails)},
        {576, sizeof(::api::v1alpha1::RollStats)},
        {591, sizeof(::api::v1alpha1::RollSession_ParametersEntry_DoNotUse)},
        {598, sizeof(::api::v1alpha1::RollSession)},
        {609, sizeof(::api::v1alpha1::RollMultipleRequest)},
        {618, sizeof(::api::v1alpha1::TableRollConfig_ParametersEntry_DoNotUse)},
        {625, sizeof(::api::v1alpha1::TableRollConfig)},
        {636, sizeof(::api::v1alpha1::RollMultipleResponse_ResultsByTableEntry_DoNotUse)},
        {643, sizeof(::api::v1alpha1::RollMultipleResponse)},
        {652, sizeof(::api::v1alpha1::TableRollResults)},
        {661, sizeof(::api::v1alpha1::CombinedResult)},
        {672, sizeof(::api::v1alpha1::ResultComponent)},
        {681, sizeof(::api::v1alpha1::MultiRollStats)},
        {694, sizeof(::api::v1alpha1::RollWithModifiersRequest)},
        {705, sizeof(::api::v1alpha1::RollWithModifiersResponse)},
        {714, sizeof(::api::v1alpha1::ModifierEffect)},
        {725, sizeof(::api::v1alpha1::BatchRollTablesRequest)},
        {732, sizeof(::api::v1alpha1::BatchRollOperation_ParametersEntry_DoNotUse)},
        {739, sizeof(::api::v1alpha1::BatchRollOperation)},
        {752, sizeof(::api::v1alpha1::BatchRollOptions)},
        {763, sizeof(::api::v1alpha1::BatchRollTablesResponse)},
        {774, sizeof(::api::v1alpha1::BatchRollResult)},
        {783, sizeof(::api::v1alpha1::BatchRollFailure)},
        {794, sizeof(::api::v1alpha1::BatchRollStats)},
        {809, sizeof(::api::v1alpha1::OperationCorrelation)},
        {820, sizeof(::api::v1alpha1::GenerateEncounterRequest)},
        {831, sizeof(::api::v1alpha1::EncounterParameters)},
        {846, sizeof(::api::v1alpha1::EncounterTables)},
        {859, sizeof(::api::v1alpha1::EncounterGenerationOptions)},
        {874, sizeof(::api::v1alpha1::GenerateEncounterResponse)},
        {883, sizeof(::api::v1alpha1::GeneratedEncounter)},
        {904, sizeof(::api::v1alpha1::EncounterCreature)},
        {921, sizeof(::api::v1alpha1::TreasureItem)},
        {938, sizeof(::api::v1alpha1::EnvironmentalFeature)},
        {953, sizeof(::api::v1alpha1::EncounterComplication)},
        {966, sizeof(::api::v1alpha1::EncounterGenerationStats)},
        {981, sizeof(::api::v1alpha1::GenerateLootRequest)},
        {990, sizeof(::api::v1alpha1::LootParameters)},
        {1005, sizeof(::api::v1alpha1::LootTables)},
        {1018, sizeof(::api::v1alpha1::LootGenerationOptions)},
        {1033, sizeof(::api::v1alpha1::GenerateLootResponse)},
        {1042, sizeof(::api::v1alpha1::GeneratedLoot_RarityDistributionEntry_DoNotUse)},
        {1049, sizeof(::api::v1alpha1::GeneratedLoot)},
        {1064, sizeof(::api::v1alpha1::GeneratedLootItem_PropertiesEntry_DoNotUse)},
        {1071, sizeof(::api::v1alpha1::GeneratedLootItem)},
        {1098, sizeof(::api::v1alpha1::LootGenerationStats_RarityCountsEntry_DoNotUse)},
        {1105, sizeof(::api::v1alpha1::LootGenerationStats)},
        {1120, sizeof(::api::v1alpha1::ValidateSelectionTableRequest)},
        {1127, sizeof(::api::v1alpha1::ValidateSelectionTableResponse)},
        {1136, sizeof(::api::v1alpha1::TableValidationCheck)},
        {1151, sizeof(::api::v1alpha1::TableValidationStats)},
        {1164, sizeof(::api::v1alpha1::GetTableStatisticsRequest)},
        {1173, sizeof(::api::v1alpha1::TableTimeRange)},
        {1180, sizeof(::api::v1alpha1::GetTableStatisticsResponse)},
        {1187, sizeof(::api::v1alpha1::StatisticalAnalysis)},
        {1198, sizeof(::api::v1alpha1::RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse)},
        {1205, sizeof(::api::v1alpha1::RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse)},
        {1212, sizeof(::api::v1alpha1::RollDistributionAnalysis)},
        {1227, sizeof(::api::v1alpha1::EntrySelectionAnalysis)},
        {1240, sizeof(::api::v1alpha1::SelectionCluster)},
        {1251, sizeof(::api::v1alpha1::PerformanceAnalysis)},
        {1262, sizeof(::api::v1alpha1::ResourceUsagePattern)},
        {1273, sizeof(::api::v1alpha1::TrendData)},
        {1286, sizeof(::api::v1alpha1::TrendPoint)},
        {1295, sizeof(::api::v1alpha1::ExportSelectionTableRequest)},
        {1304, sizeof(::api::v1alpha1::ExportOptions)},
        {1317, sizeof(::api::v1alpha1::ExportSelectionTableResponse)},
        {1326, sizeof(::api::v1alpha1::ExportMetadata)},
        {1339, sizeof(::api::v1alpha1::ImportSelectionTableRequest)},
        {1348, sizeof(::api::v1alpha1::ImportOptions)},
        {1361, sizeof(::api::v1alpha1::ImportSelectionTableResponse)},
        {1370, sizeof(::api::v1alpha1::ImportResult)},
        {1383, sizeof(::api::v1alpha1::ImportStats)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::api::v1alpha1::_CreateSelectionTableRequest_default_instance_._instance,
    &::api::v1alpha1::_SelectionTable_default_instance_._instance,
    &::api::v1alpha1::_DiceConfiguration_default_instance_._instance,
    &::api::v1alpha1::_TableEntry_default_instance_._instance,
    &::api::v1alpha1::_RollRange_default_instance_._instance,
    &::api::v1alpha1::_TableEntryResult_default_instance_._instance,
    &::api::v1alpha1::_ItemResult_PropertiesEntry_DoNotUse_default_instance_._instance,
    &::api::v1alpha1::_ItemResult_default_instance_._instance,
    &::api::v1alpha1::_QuantityRange_default_instance_._instance,
    &::api::v1alpha1::_EntityResult_PropertiesEntry_DoNotUse_default_instance_._instance,
    &::api::v1alpha1::_EntityResult_default_instance_._instance,
    &::api::v1alpha1::_EntitySpawnPreferences_default_instance_._instance,
    &::api::v1alpha1::_NestedTableResult_default_instance_._instance,
    &::api::v1alpha1::_RollModifier_default_instance_._instance,
    &::api::v1alpha1::_TextResult_VariablesEntry_DoNotUse_default_instance_._instance,
    &::api::v1alpha1::_TextResult_default_instance_._instance,
    &::api::v1alpha1::_EffectResult_ParametersEntry_DoNotUse_default_instance_._instance,
    &::api::v1alpha1::_EffectResult_default_instance_._instance,
    &::api::v1alpha1::_MultipleResult_default_instance_._instance,
    &::api::v1alpha1::_EntryCondition_default_instance_._instance,
    &::api::v1alpha1::_TableOptions_default_instance_._instance,
    &::api::v1alpha1::_SelectionTableMetadata_default_instance_._instance,
    &::api::v1alpha1::_TableUsageStats_default_instance_._instance,
    &::api::v1alpha1::_TableValidationOptions_default_instance_._instance,
    &::api::v1alpha1::_CreateSelectionTableResponse_default_instance_._instance,
    &::api::v1alpha1::_GetSelectionTableRequest_default_instance_._instance,
    &::api::v1alpha1::_GetSelectionTableResponse_default_instance_._instance,
    &::api::v1alpha1::_TableStatistics_EntryFrequencyEntry_DoNotUse_default_instance_._instance,
    &::api::v1alpha1::_TableStatistics_RollDistributionEntry_DoNotUse_default_instance_._instance,
    &::api::v1alpha1::_TableStatistics_ResultTypeCountsEntry_DoNotUse_default_instance_._instance,
    &::api::v1alpha1::_TableStatistics_default_instance_._instance,
    &::api::v1alpha1::_TablePerformanceStats_default_instance_._instance,
    &::api::v1alpha1::_UpdateSelectionTableRequest_default_instance_._instance,
    &::api::v1alpha1::_TableUpdateOptions_default_instance_._instance,
    &::api::v1alpha1::_UpdateSelectionTableResponse_default_instance_._instance,
    &::api::v1alpha1::_DeleteSelectionTableRequest_default_instance_._instance,
    &::api::v1alpha1::_DeleteSelectionTableResponse_default_instance_._instance,
    &::api::v1alpha1::_ListSelectionTablesRequest_default_instance_._instance,
    &::api::v1alpha1::_SelectionTableFilter_default_instance_._instance,
    &::api::v1alpha1::_TableSortOptions_default_instance_._instance,
    &::api::v1alpha1::_ListSelectionTablesResponse_default_instance_._instance,
    &::api::v1alpha1::_TableListStats_TablesByCategoryEntry_DoNotUse_default_instance_._instance,
    &::api::v1alpha1::_TableListStats_TablesByTypeEntry_DoNotUse_default_instance_._instance,
    &::api::v1alpha1::_TableListStats_default_instance_._instance,
    &::api::v1alpha1::_RollOnTableRequest_ParametersEntry_DoNotUse_default_instance_._instance,
    &::api::v1alpha1::_RollOnTableRequest_default_instance_._instance,
    &::api::v1alpha1::_RollOptions_default_instance_._instance,
    &::api::v1alpha1::_RollOnTableResponse_default_instance_._instance,
    &::api::v1alpha1::_RollResult_default_instance_._instance,
    &::api::v1alpha1::_RollDetails_default_instance_._instance,
    &::api::v1alpha1::_RollStats_default_instance_._instance,
    &::api::v1alpha1::_RollSession_ParametersEntry_DoNotUse_default_instance_._instance,
    &::api::v1alpha1::_RollSession_default_instance_._instance,
    &::api::v1alpha1::_RollMultipleRequest_default_instance_._instance,
    &::api::v1alpha1::_TableRollConfig_ParametersEntry_DoNotUse_default_instance_._instance,
    &::api::v1alpha1::_TableRollConfig_default_instance_._instance,
    &::api::v1alpha1::_RollMultipleResponse_ResultsByTableEntry_DoNotUse_default_instance_._instance,
    &::api::v1alpha1::_RollMultipleResponse_default_instance_._instance,
    &::api::v1alpha1::_TableRollResults_default_instance_._instance,
    &::api::v1alpha1::_CombinedResult_default_instance_._instance,
    &::api::v1alpha1::_ResultComponent_default_instance_._instance,
    &::api::v1alpha1::_MultiRollStats_default_instance_._instance,
    &::api::v1alpha1::_RollWithModifiersRequest_default_instance_._instance,
    &::api::v1alpha1::_RollWithModifiersResponse_default_instance_._instance,
    &::api::v1alpha1::_ModifierEffect_default_instance_._instance,
    &::api::v1alpha1::_BatchRollTablesRequest_default_instance_._instance,
    &::api::v1alpha1::_BatchRollOperation_ParametersEntry_DoNotUse_default_instance_._instance,
    &::api::v1alpha1::_BatchRollOperation_default_instance_._instance,
    &::api::v1alpha1::_BatchRollOptions_default_instance_._instance,
    &::api::v1alpha1::_BatchRollTablesResponse_default_instance_._instance,
    &::api::v1alpha1::_BatchRollResult_default_instance_._instance,
    &::api::v1alpha1::_BatchRollFailure_default_instance_._instance,
    &::api::v1alpha1::_BatchRollStats_default_instance_._instance,
    &::api::v1alpha1::_OperationCorrelation_default_instance_._instance,
    &::api::v1alpha1::_GenerateEncounterRequest_default_instance_._instance,
    &::api::v1alpha1::_EncounterParameters_default_instance_._instance,
    &::api::v1alpha1::_EncounterTables_default_instance_._instance,
    &::api::v1alpha1::_EncounterGenerationOptions_default_instance_._instance,
    &::api::v1alpha1::_GenerateEncounterResponse_default_instance_._instance,
    &::api::v1alpha1::_GeneratedEncounter_default_instance_._instance,
    &::api::v1alpha1::_EncounterCreature_default_instance_._instance,
    &::api::v1alpha1::_TreasureItem_default_instance_._instance,
    &::api::v1alpha1::_EnvironmentalFeature_default_instance_._instance,
    &::api::v1alpha1::_EncounterComplication_default_instance_._instance,
    &::api::v1alpha1::_EncounterGenerationStats_default_instance_._instance,
    &::api::v1alpha1::_GenerateLootRequest_default_instance_._instance,
    &::api::v1alpha1::_LootParameters_default_instance_._instance,
    &::api::v1alpha1::_LootTables_default_instance_._instance,
    &::api::v1alpha1::_LootGenerationOptions_default_instance_._instance,
    &::api::v1alpha1::_GenerateLootResponse_default_instance_._instance,
    &::api::v1alpha1::_GeneratedLoot_RarityDistributionEntry_DoNotUse_default_instance_._instance,
    &::api::v1alpha1::_GeneratedLoot_default_instance_._instance,
    &::api::v1alpha1::_GeneratedLootItem_PropertiesEntry_DoNotUse_default_instance_._instance,
    &::api::v1alpha1::_GeneratedLootItem_default_instance_._instance,
    &::api::v1alpha1::_LootGenerationStats_RarityCountsEntry_DoNotUse_default_instance_._instance,
    &::api::v1alpha1::_LootGenerationStats_default_instance_._instance,
    &::api::v1alpha1::_ValidateSelectionTableRequest_default_instance_._instance,
    &::api::v1alpha1::_ValidateSelectionTableResponse_default_instance_._instance,
    &::api::v1alpha1::_TableValidationCheck_default_instance_._instance,
    &::api::v1alpha1::_TableValidationStats_default_instance_._instance,
    &::api::v1alpha1::_GetTableStatisticsRequest_default_instance_._instance,
    &::api::v1alpha1::_TableTimeRange_default_instance_._instance,
    &::api::v1alpha1::_GetTableStatisticsResponse_default_instance_._instance,
    &::api::v1alpha1::_StatisticalAnalysis_default_instance_._instance,
    &::api::v1alpha1::_RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse_default_instance_._instance,
    &::api::v1alpha1::_RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse_default_instance_._instance,
    &::api::v1alpha1::_RollDistributionAnalysis_default_instance_._instance,
    &::api::v1alpha1::_EntrySelectionAnalysis_default_instance_._instance,
    &::api::v1alpha1::_SelectionCluster_default_instance_._instance,
    &::api::v1alpha1::_PerformanceAnalysis_default_instance_._instance,
    &::api::v1alpha1::_ResourceUsagePattern_default_instance_._instance,
    &::api::v1alpha1::_TrendData_default_instance_._instance,
    &::api::v1alpha1::_TrendPoint_default_instance_._instance,
    &::api::v1alpha1::_ExportSelectionTableRequest_default_instance_._instance,
    &::api::v1alpha1::_ExportOptions_default_instance_._instance,
    &::api::v1alpha1::_ExportSelectionTableResponse_default_instance_._instance,
    &::api::v1alpha1::_ExportMetadata_default_instance_._instance,
    &::api::v1alpha1::_ImportSelectionTableRequest_default_instance_._instance,
    &::api::v1alpha1::_ImportOptions_default_instance_._instance,
    &::api::v1alpha1::_ImportSelectionTableResponse_default_instance_._instance,
    &::api::v1alpha1::_ImportResult_default_instance_._instance,
    &::api::v1alpha1::_ImportStats_default_instance_._instance,
};
const char descriptor_table_protodef_api_2fv1alpha1_2froom_5fselectables_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n#api/v1alpha1/room_selectables.proto\022\014a"
    "pi.v1alpha1\032\036api/v1alpha1/room_common.pr"
    "oto\"\303\001\n\033CreateSelectionTableRequest\0222\n\005t"
    "able\030\001 \001(\0132\034.api.v1alpha1.SelectionTable"
    "R\005table\022\033\n\tis_public\030\002 \001(\010R\010isPublic\022S\n\022"
    "validation_options\030\003 \001(\0132$.api.v1alpha1."
    "TableValidationOptionsR\021validationOption"
    "s\"\313\003\n\016SelectionTable\022\016\n\002id\030\001 \001(\tR\002id\022\022\n\004"
    "name\030\002 \001(\tR\004name\022 \n\013description\030\003 \001(\tR\013d"
    "escription\022\032\n\010category\030\004 \001(\tR\010category\022\?"
    "\n\ntable_type\030\005 \001(\0162 .api.v1alpha1.Select"
    "ionTableTypeR\ttableType\022@\n\013dice_config\030\006"
    " \001(\0132\037.api.v1alpha1.DiceConfigurationR\nd"
    "iceConfig\0222\n\007entries\030\007 \003(\0132\030.api.v1alpha"
    "1.TableEntryR\007entries\022@\n\010metadata\030\010 \001(\0132"
    "$.api.v1alpha1.SelectionTableMetadataR\010m"
    "etadata\022(\n\020nested_table_ids\030\t \003(\tR\016neste"
    "dTableIds\0224\n\007options\030\n \001(\0132\032.api.v1alpha"
    "1.TableOptionsR\007options\"\316\001\n\021DiceConfigur"
    "ation\022#\n\rdice_notation\030\001 \001(\tR\014diceNotati"
    "on\022\032\n\010modifier\030\002 \001(\005R\010modifier\022\031\n\010min_ro"
    "ll\030\003 \001(\005R\007minRoll\022\031\n\010max_roll\030\004 \001(\005R\007max"
    "Roll\022\033\n\treroll_on\030\005 \003(\005R\010rerollOn\022%\n\016exp"
    "loding_dice\030\006 \001(\010R\rexplodingDice\"\352\002\n\nTab"
    "leEntry\022\016\n\002id\030\001 \001(\tR\002id\022\022\n\004name\030\002 \001(\tR\004n"
    "ame\022 \n\013description\030\003 \001(\tR\013description\0226\n"
    "\nroll_range\030\004 \001(\0132\027.api.v1alpha1.RollRan"
    "geR\trollRange\022\026\n\006weight\030\005 \001(\001R\006weight\0226\n"
    "\006result\030\006 \001(\0132\036.api.v1alpha1.TableEntryR"
    "esultR\006result\022<\n\nconditions\030\007 \003(\0132\034.api."
    "v1alpha1.EntryConditionR\nconditions\022)\n\020a"
    "llow_duplicates\030\010 \001(\010R\017allowDuplicates\022%"
    "\n\016max_selections\030\t \001(\005R\rmaxSelections\"/\n"
    "\tRollRange\022\020\n\003min\030\001 \001(\005R\003min\022\020\n\003max\030\002 \001("
    "\005R\003max\"\202\004\n\020TableEntryResult\022C\n\013result_ty"
    "pe\030\001 \001(\0162\".api.v1alpha1.TableEntryResult"
    "TypeR\nresultType\022;\n\013item_result\030\002 \001(\0132\030."
    "api.v1alpha1.ItemResultH\000R\nitemResult\022A\n"
    "\rentity_result\030\003 \001(\0132\032.api.v1alpha1.Enti"
    "tyResultH\000R\014entityResult\022Q\n\023nested_table"
    "_result\030\004 \001(\0132\037.api.v1alpha1.NestedTable"
    "ResultH\000R\021nestedTableResult\022;\n\013text_resu"
    "lt\030\005 \001(\0132\030.api.v1alpha1.TextResultH\000R\nte"
    "xtResult\022A\n\reffect_result\030\006 \001(\0132\032.api.v1"
    "alpha1.EffectResultH\000R\014effectResult\022G\n\017m"
    "ultiple_result\030\007 \001(\0132\034.api.v1alpha1.Mult"
    "ipleResultH\000R\016multipleResultB\r\n\013result_d"
    "ata\"\364\002\n\nItemResult\022\027\n\007item_id\030\001 \001(\tR\006ite"
    "mId\022\033\n\titem_name\030\002 \001(\tR\010itemName\0227\n\010quan"
    "tity\030\003 \001(\0132\033.api.v1alpha1.QuantityRangeR"
    "\010quantity\022\026\n\006rarity\030\004 \001(\tR\006rarity\022\031\n\010val"
    "ue_gp\030\005 \001(\005R\007valueGp\022H\n\nproperties\030\006 \003(\013"
    "2(.api.v1alpha1.ItemResult.PropertiesEnt"
    "ryR\nproperties\022\035\n\nis_magical\030\007 \001(\010R\tisMa"
    "gical\022\034\n\tcondition\030\010 \001(\tR\tcondition\032=\n\017P"
    "ropertiesEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005valu"
    "e\030\002 \001(\tR\005value:\0028\001\"X\n\rQuantityRange\022\020\n\003m"
    "in\030\001 \001(\005R\003min\022\020\n\003max\030\002 \001(\005R\003max\022#\n\rdice_"
    "notation\030\003 \001(\tR\014diceNotation\"\257\003\n\014EntityR"
    "esult\022\037\n\013entity_type\030\001 \001(\tR\nentityType\022\033"
    "\n\tentity_id\030\002 \001(\tR\010entityId\022\037\n\013entity_na"
    "me\030\003 \001(\tR\nentityName\0227\n\010quantity\030\004 \001(\0132\033"
    ".api.v1alpha1.QuantityRangeR\010quantity\022)\n"
    "\020challenge_rating\030\005 \001(\001R\017challengeRating"
    "\022J\n\nproperties\030\006 \003(\0132*.api.v1alpha1.Enti"
    "tyResult.PropertiesEntryR\nproperties\022Q\n\021"
    "spawn_preferences\030\007 \001(\0132$.api.v1alpha1.E"
    "ntitySpawnPreferencesR\020spawnPreferences\032"
    "=\n\017PropertiesEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005"
    "value\030\002 \001(\tR\005value:\0028\001\"\266\001\n\026EntitySpawnPr"
    "eferences\022/\n\023preferred_locations\030\001 \003(\tR\022"
    "preferredLocations\022\034\n\tformation\030\002 \001(\tR\tf"
    "ormation\022\032\n\010behavior\030\003 \001(\tR\010behavior\0221\n\024"
    "special_instructions\030\004 \001(\tR\023specialInstr"
    "uctions\"\260\001\n\021NestedTableResult\022\031\n\010table_i"
    "d\030\001 \001(\tR\007tableId\022\035\n\nroll_count\030\002 \001(\005R\tro"
    "llCount\0228\n\tmodifiers\030\003 \003(\0132\032.api.v1alpha"
    "1.RollModifierR\tmodifiers\022\'\n\017combine_res"
    "ults\030\004 \001(\010R\016combineResults\"g\n\014RollModifi"
    "er\022#\n\rmodifier_type\030\001 \001(\tR\014modifierType\022"
    "\024\n\005value\030\002 \001(\001R\005value\022\034\n\tcondition\030\003 \001(\t"
    "R\tcondition\"\213\002\n\nTextResult\022\022\n\004text\030\001 \001(\t"
    "R\004text\022\032\n\010category\030\002 \001(\tR\010category\022E\n\tva"
    "riables\030\003 \003(\0132\'.api.v1alpha1.TextResult."
    "VariablesEntryR\tvariables\022\'\n\017requires_ac"
    "tion\030\004 \001(\010R\016requiresAction\022\037\n\013action_typ"
    "e\030\005 \001(\tR\nactionType\032<\n\016VariablesEntry\022\020\n"
    "\003key\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001(\tR\005value:\0028"
    "\001\"\364\002\n\014EffectResult\022\037\n\013effect_type\030\001 \001(\tR"
    "\neffectType\022\037\n\013effect_name\030\002 \001(\tR\neffect"
    "Name\022 \n\013description\030\003 \001(\tR\013description\022J"
    "\n\nparameters\030\004 \003(\0132*.api.v1alpha1.Effect"
    "Result.ParametersEntryR\nparameters\022\032\n\010du"
    "ration\030\005 \001(\tR\010duration\022\034\n\tintensity\030\006 \001("
    "\001R\tintensity\022;\n\032area_of_effect_descripti"
    "on\030\007 \001(\tR\027areaOfEffectDescription\032=\n\017Par"
    "ametersEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005value\030"
    "\002 \001(\tR\005value:\0028\001\"\234\001\n\016MultipleResult\0228\n\007r"
    "esults\030\001 \003(\0132\036.api.v1alpha1.TableEntryRe"
    "sultR\007results\022-\n\022combination_method\030\002 \001("
    "\tR\021combinationMethod\022!\n\014choose_count\030\003 \001"
    "(\005R\013chooseCount\"\302\001\n\016EntryCondition\022%\n\016co"
    "ndition_type\030\001 \001(\tR\rconditionType\022%\n\016par"
    "ameter_name\030\002 \001(\tR\rparameterName\022\032\n\010oper"
    "ator\030\003 \001(\tR\010operator\022%\n\016expected_value\030\004"
    " \001(\tR\rexpectedValue\022\037\n\013is_required\030\005 \001(\010"
    "R\nisRequired\"\224\002\n\014TableOptions\022)\n\020allow_d"
    "uplicates\030\001 \001(\010R\017allowDuplicates\022/\n\024max_"
    "results_per_roll\030\002 \001(\005R\021maxResultsPerRol"
    "l\022,\n\022default_roll_count\030\003 \001(\005R\020defaultRo"
    "llCount\022!\n\014sort_results\030\004 \001(\010R\013sortResul"
    "ts\022#\n\rsort_criteria\030\005 \001(\tR\014sortCriteria\022"
    "2\n\025group_similar_results\030\006 \001(\010R\023groupSim"
    "ilarResults\"\263\002\n\026SelectionTableMetadata\022\026"
    "\n\006author\030\001 \001(\tR\006author\022\030\n\007version\030\002 \001(\tR"
    "\007version\022\035\n\ncreated_at\030\003 \001(\003R\tcreatedAt\022"
    "\035\n\nupdated_at\030\004 \001(\003R\tupdatedAt\022>\n\013usage_"
    "stats\030\005 \001(\0132\035.api.v1alpha1.TableUsageSta"
    "tsR\nusageStats\022\022\n\004tags\030\006 \003(\tR\004tags\022\026\n\006so"
    "urce\030\007 \001(\tR\006source\022\034\n\tcopyright\030\010 \001(\tR\tc"
    "opyright\022\037\n\013is_official\030\t \001(\010R\nisOfficia"
    "l\"\223\002\n\017TableUsageStats\022\035\n\nroll_count\030\001 \001("
    "\003R\trollCount\022+\n\021results_generated\030\002 \001(\003R"
    "\020resultsGenerated\022,\n\022most_common_result\030"
    "\003 \001(\tR\020mostCommonResult\022.\n\023least_common_"
    "result\030\004 \001(\tR\021leastCommonResult\0229\n\031avera"
    "ge_rolls_per_session\030\005 \001(\001R\026averageRolls"
    "PerSession\022\033\n\tlast_used\030\006 \001(\003R\010lastUsed\""
    "\240\002\n\026TableValidationOptions\022(\n\020check_rang"
    "e_gaps\030\001 \001(\010R\016checkRangeGaps\0220\n\024check_ra"
    "nge_overlaps\030\002 \001(\010R\022checkRangeOverlaps\022<"
    "\n\032validate_nested_references\030\003 \001(\010R\030vali"
    "dateNestedReferences\022:\n\031check_weight_dis"
    "tribution\030\004 \001(\010R\027checkWeightDistribution"
    "\0220\n\024validate_dice_config\030\005 \001(\010R\022validate"
    "DiceConfig\"\271\001\n\034CreateSelectionTableRespo"
    "nse\0222\n\005table\030\001 \001(\0132\034.api.v1alpha1.Select"
    "ionTableR\005table\022K\n\021validation_result\030\002 \001"
    "(\0132\036.api.v1alpha1.ValidationResultR\020vali"
    "dationResult\022\030\n\007message\030\003 \001(\tR\007message\"\230"
    "\001\n\030GetSelectionTableRequest\022\031\n\010table_id\030"
    "\001 \001(\tR\007tableId\022-\n\022include_statistics\030\002 \001"
    "(\010R\021includeStatistics\0222\n\025include_entry_d"
    "etails\030\003 \001(\010R\023includeEntryDetails\"\216\001\n\031Ge"
    "tSelectionTableResponse\0222\n\005table\030\001 \001(\0132\034"
    ".api.v1alpha1.SelectionTableR\005table\022=\n\ns"
    "tatistics\030\002 \001(\0132\035.api.v1alpha1.TableStat"
    "isticsR\nstatistics\"\264\005\n\017TableStatistics\022>"
    "\n\013usage_stats\030\001 \001(\0132\035.api.v1alpha1.Table"
    "UsageStatsR\nusageStats\022Z\n\017entry_frequenc"
    "y\030\002 \003(\01321.api.v1alpha1.TableStatistics.E"
    "ntryFrequencyEntryR\016entryFrequency\022!\n\014av"
    "erage_roll\030\003 \001(\001R\013averageRoll\022`\n\021roll_di"
    "stribution\030\004 \003(\01323.api.v1alpha1.TableSta"
    "tistics.RollDistributionEntryR\020rollDistr"
    "ibution\022a\n\022result_type_counts\030\005 \003(\01323.ap"
    "i.v1alpha1.TableStatistics.ResultTypeCou"
    "ntsEntryR\020resultTypeCounts\022P\n\021performanc"
    "e_stats\030\006 \001(\0132#.api.v1alpha1.TablePerfor"
    "manceStatsR\020performanceStats\032A\n\023EntryFre"
    "quencyEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005value\030\002"
    " \001(\003R\005value:\0028\001\032C\n\025RollDistributionEntry"
    "\022\020\n\003key\030\001 \001(\005R\003key\022\024\n\005value\030\002 \001(\003R\005value"
    ":\0028\001\032C\n\025ResultTypeCountsEntry\022\020\n\003key\030\001 \001"
    "(\tR\003key\022\024\n\005value\030\002 \001(\003R\005value:\0028\001\"\305\001\n\025Ta"
    "blePerformanceStats\022/\n\024average_roll_time"
    "_ms\030\001 \001(\001R\021averageRollTimeMs\022&\n\017cache_hi"
    "t_ratio\030\002 \001(\001R\rcacheHitRatio\022,\n\022memory_u"
    "sage_bytes\030\003 \001(\003R\020memoryUsageBytes\022%\n\016la"
    "st_optimized\030\004 \001(\003R\rlastOptimized\"\265\001\n\033Up"
    "dateSelectionTableRequest\022\031\n\010table_id\030\001 "
    "\001(\tR\007tableId\0222\n\005table\030\002 \001(\0132\034.api.v1alph"
    "a1.SelectionTableR\005table\022G\n\016update_optio"
    "ns\030\003 \001(\0132 .api.v1alpha1.TableUpdateOptio"
    "nsR\rupdateOptions\"\303\001\n\022TableUpdateOptions"
    "\022/\n\023preserve_statistics\030\001 \001(\010R\022preserveS"
    "tatistics\0222\n\025validate_after_update\030\002 \001(\010"
    "R\023validateAfterUpdate\022#\n\rcreate_backup\030\003"
    " \001(\010R\014createBackup\022#\n\rupdate_reason\030\004 \001("
    "\tR\014updateReason\"\271\001\n\034UpdateSelectionTable"
    "Response\0222\n\005table\030\001 \001(\0132\034.api.v1alpha1.S"
    "electionTableR\005table\022K\n\021validation_resul"
    "t\030\002 \001(\0132\036.api.v1alpha1.ValidationResultR"
    "\020validationResult\022\030\n\007message\030\003 \001(\tR\007mess"
    "age\"N\n\033DeleteSelectionTableRequest\022\031\n\010ta"
    "ble_id\030\001 \001(\tR\007tableId\022\024\n\005force\030\002 \001(\010R\005fo"
    "rce\"g\n\034DeleteSelectionTableResponse\022\030\n\007m"
    "essage\030\001 \001(\tR\007message\022-\n\022references_remo"
    "ved\030\002 \001(\005R\021referencesRemoved\"\377\001\n\032ListSel"
    "ectionTablesRequest\022:\n\006filter\030\001 \001(\0132\".ap"
    "i.v1alpha1.SelectionTableFilterR\006filter\022"
    "3\n\tpage_info\030\002 \001(\0132\026.api.v1alpha1.PageIn"
    "foR\010pageInfo\022A\n\014sort_options\030\003 \001(\0132\036.api"
    ".v1alpha1.TableSortOptionsR\013sortOptions\022"
    "-\n\022include_statistics\030\004 \001(\010R\021includeStat"
    "istics\"\214\002\n\024SelectionTableFilter\022\036\n\ncateg"
    "ories\030\001 \003(\tR\ncategories\022A\n\013table_types\030\002"
    " \003(\0162 .api.v1alpha1.SelectionTableTypeR\n"
    "tableTypes\022\026\n\006author\030\003 \001(\tR\006author\022\037\n\013se"
    "arch_term\030\004 \001(\tR\nsearchTerm\022\022\n\004tags\030\005 \003("
    "\tR\004tags\022#\n\rofficial_only\030\006 \001(\010R\014official"
    "Only\022\037\n\013public_only\030\007 \001(\010R\npublicOnly\"\211\001"
    "\n\020TableSortOptions\0225\n\007sort_by\030\001 \001(\0162\034.ap"
    "i.v1alpha1.TableSortFieldR\006sortBy\022>\n\tdir"
    "ection\030\002 \001(\0162 .api.v1alpha1.TableSortDir"
    "ectionR\tdirection\"\305\001\n\033ListSelectionTable"
    "sResponse\0224\n\006tables\030\001 \003(\0132\034.api.v1alpha1"
    ".SelectionTableR\006tables\0223\n\tpage_info\030\002 \001"
    "(\0132\026.api.v1alpha1.PageInfoR\010pageInfo\022;\n\n"
    "list_stats\030\003 \001(\0132\034.api.v1alpha1.TableLis"
    "tStatsR\tlistStats\"\304\003\n\016TableListStats\022\037\n\013"
    "total_count\030\001 \001(\005R\ntotalCount\022%\n\016returne"
    "d_count\030\002 \001(\005R\rreturnedCount\022`\n\022tables_b"
    "y_category\030\003 \003(\01322.api.v1alpha1.TableLis"
    "tStats.TablesByCategoryEntryR\020tablesByCa"
    "tegory\022T\n\016tables_by_type\030\004 \003(\0132..api.v1a"
    "lpha1.TableListStats.TablesByTypeEntryR\014"
    "tablesByType\022,\n\022most_popular_table\030\005 \001(\t"
    "R\020mostPopularTable\032C\n\025TablesByCategoryEn"
    "try\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001(\005R\005va"
    "lue:\0028\001\032\?\n\021TablesByTypeEntry\022\020\n\003key\030\001 \001("
    "\tR\003key\022\024\n\005value\030\002 \001(\005R\005value:\0028\001\"\224\002\n\022Rol"
    "lOnTableRequest\022\031\n\010table_id\030\001 \001(\tR\007table"
    "Id\022\035\n\nroll_count\030\002 \001(\005R\trollCount\022P\n\npar"
    "ameters\030\003 \003(\01320.api.v1alpha1.RollOnTable"
    "Request.ParametersEntryR\nparameters\0223\n\007o"
    "ptions\030\004 \001(\0132\031.api.v1alpha1.RollOptionsR"
    "\007options\032=\n\017ParametersEntry\022\020\n\003key\030\001 \001(\t"
    "R\003key\022\024\n\005value\030\002 \001(\tR\005value:\0028\001\"\362\001\n\013Roll"
    "Options\022\022\n\004seed\030\001 \001(\tR\004seed\0228\n\tmodifiers"
    "\030\002 \003(\0132\032.api.v1alpha1.RollModifierR\tmodi"
    "fiers\022*\n\021show_roll_details\030\003 \001(\010R\017showRo"
    "llDetails\022#\n\rgroup_similar\030\004 \001(\010R\014groupS"
    "imilar\022\037\n\013max_results\030\005 \001(\005R\nmaxResults\022"
    "#\n\rallow_rerolls\030\006 \001(\010R\014allowRerolls\"\321\001\n"
    "\023RollOnTableResponse\0222\n\007results\030\001 \003(\0132\030."
    "api.v1alpha1.RollResultR\007results\0226\n\nroll"
    "_stats\030\002 \001(\0132\027.api.v1alpha1.RollStatsR\tr"
    "ollStats\022\031\n\010table_id\030\003 \001(\tR\007tableId\0223\n\007s"
    "ession\030\004 \001(\0132\031.api.v1alpha1.RollSessionR"
    "\007session\"\334\002\n\nRollResult\022\033\n\tresult_id\030\001 \001"
    "(\tR\010resultId\022\?\n\016selected_entry\030\002 \001(\0132\030.a"
    "pi.v1alpha1.TableEntryR\rselectedEntry\022\035\n"
    "\nroll_value\030\003 \001(\005R\trollValue\022\?\n\013result_d"
    "ata\030\004 \001(\0132\036.api.v1alpha1.TableEntryResul"
    "tR\nresultData\022<\n\014roll_details\030\005 \001(\0132\031.ap"
    "i.v1alpha1.RollDetailsR\013rollDetails\022!\n\014w"
    "as_modified\030\006 \001(\010R\013wasModified\022/\n\023modifi"
    "cation_reason\030\007 \001(\tR\022modificationReason\""
    "\316\001\n\013RollDetails\022\037\n\013dice_values\030\001 \003(\005R\ndi"
    "ceValues\022%\n\016total_modifier\030\002 \001(\005R\rtotalM"
    "odifier\022\031\n\010raw_roll\030\003 \001(\005R\007rawRoll\022\035\n\nfi"
    "nal_roll\030\004 \001(\005R\tfinalRoll\022#\n\rdice_notati"
    "on\030\005 \001(\tR\014diceNotation\022\030\n\007rerolls\030\006 \003(\005R"
    "\007rerolls\"\330\001\n\tRollStats\022 \n\014roll_time_ms\030\001"
    " \001(\003R\nrollTimeMs\022\037\n\013dice_rolled\030\002 \001(\005R\nd"
    "iceRolled\022!\n\014rerolls_made\030\003 \001(\005R\013rerolls"
    "Made\022!\n\014average_roll\030\004 \001(\001R\013averageRoll\022"
    "!\n\014highest_roll\030\005 \001(\005R\013highestRoll\022\037\n\013lo"
    "west_roll\030\006 \001(\005R\nlowestRoll\"\364\001\n\013RollSess"
    "ion\022\035\n\nsession_id\030\001 \001(\tR\tsessionId\022\035\n\nex"
    "pires_at\030\002 \001(\003R\texpiresAt\022\035\n\nroll_count\030"
    "\003 \001(\005R\trollCount\022I\n\nparameters\030\004 \003(\0132).a"
    "pi.v1alpha1.RollSession.ParametersEntryR"
    "\nparameters\032=\n\017ParametersEntry\022\020\n\003key\030\001 "
    "\001(\tR\003key\022\024\n\005value\030\002 \001(\tR\005value:\0028\001\"\304\001\n\023R"
    "ollMultipleRequest\022>\n\013table_rolls\030\001 \003(\0132"
    "\035.api.v1alpha1.TableRollConfigR\ntableRol"
    "ls\022@\n\016global_options\030\002 \001(\0132\031.api.v1alpha"
    "1.RollOptionsR\rglobalOptions\022+\n\021correlat"
    "e_results\030\003 \001(\010R\020correlateResults\"\223\002\n\017Ta"
    "bleRollConfig\022\031\n\010table_id\030\001 \001(\tR\007tableId"
    "\022\035\n\nroll_count\030\002 \001(\005R\trollCount\022M\n\nparam"
    "eters\030\003 \003(\0132-.api.v1alpha1.TableRollConf"
    "ig.ParametersEntryR\nparameters\0228\n\tmodifi"
    "ers\030\004 \003(\0132\032.api.v1alpha1.RollModifierR\tm"
    "odifiers\032=\n\017ParametersEntry\022\020\n\003key\030\001 \001(\t"
    "R\003key\022\024\n\005value\030\002 \001(\tR\005value:\0028\001\"\354\002\n\024Roll"
    "MultipleResponse\022`\n\020results_by_table\030\001 \003"
    "(\01326.api.v1alpha1.RollMultipleResponse.R"
    "esultsByTableEntryR\016resultsByTable\022G\n\020co"
    "mbined_results\030\002 \003(\0132\034.api.v1alpha1.Comb"
    "inedResultR\017combinedResults\022F\n\020multi_rol"
    "l_stats\030\003 \001(\0132\034.api.v1alpha1.MultiRollSt"
    "atsR\016multiRollStats\032a\n\023ResultsByTableEnt"
    "ry\022\020\n\003key\030\001 \001(\tR\003key\0224\n\005value\030\002 \001(\0132\036.ap"
    "i.v1alpha1.TableRollResultsR\005value:\0028\001\"\220"
    "\001\n\020TableRollResults\022\031\n\010table_id\030\001 \001(\tR\007t"
    "ableId\0222\n\007results\030\002 \003(\0132\030.api.v1alpha1.R"
    "ollResultR\007results\022-\n\005stats\030\003 \001(\0132\027.api."
    "v1alpha1.RollStatsR\005stats\"\257\001\n\016CombinedRe"
    "sult\022\033\n\tresult_id\030\001 \001(\tR\010resultId\022=\n\ncom"
    "ponents\030\002 \003(\0132\035.api.v1alpha1.ResultCompo"
    "nentR\ncomponents\022 \n\013description\030\003 \001(\tR\013d"
    "escription\022\037\n\013total_value\030\004 \001(\001R\ntotalVa"
    "lue\"\202\001\n\017ResultComponent\022\031\n\010table_id\030\001 \001("
    "\tR\007tableId\0220\n\006result\030\002 \001(\0132\030.api.v1alpha"
    "1.RollResultR\006result\022\"\n\014relationship\030\003 \001"
    "(\tR\014relationship\"\347\001\n\016MultiRollStats\022\"\n\rt"
    "otal_time_ms\030\001 \001(\003R\013totalTimeMs\022#\n\rtable"
    "s_rolled\030\002 \001(\005R\014tablesRolled\022#\n\rtotal_re"
    "sults\030\003 \001(\005R\014totalResults\0228\n\031average_tim"
    "e_per_table_ms\030\004 \001(\001R\025averageTimePerTabl"
    "eMs\022-\n\022correlations_found\030\005 \001(\005R\021correla"
    "tionsFound\"\303\001\n\030RollWithModifiersRequest\022"
    "\031\n\010table_id\030\001 \001(\tR\007tableId\0228\n\tmodifiers\030"
    "\002 \003(\0132\032.api.v1alpha1.RollModifierR\tmodif"
    "iers\022\035\n\nroll_count\030\003 \001(\005R\trollCount\0223\n\007o"
    "ptions\030\004 \001(\0132\031.api.v1alpha1.RollOptionsR"
    "\007options\"\320\001\n\031RollWithModifiersResponse\0222"
    "\n\007results\030\001 \003(\0132\030.api.v1alpha1.RollResul"
    "tR\007results\022G\n\020modifier_effects\030\002 \003(\0132\034.a"
    "pi.v1alpha1.ModifierEffectR\017modifierEffe"
    "cts\0226\n\nroll_stats\030\003 \001(\0132\027.api.v1alpha1.R"
    "ollStatsR\trollStats\"\305\001\n\016ModifierEffect\0226"
    "\n\010modifier\030\001 \001(\0132\032.api.v1alpha1.RollModi"
    "fierR\010modifier\022%\n\016rolls_affected\030\002 \001(\005R\r"
    "rollsAffected\022%\n\016average_change\030\003 \001(\001R\ra"
    "verageChange\022-\n\022effect_description\030\004 \001(\t"
    "R\021effectDescription\"\250\001\n\026BatchRollTablesR"
    "equest\022I\n\017roll_operations\030\001 \003(\0132 .api.v1"
    "alpha1.BatchRollOperationR\016rollOperation"
    "s\022C\n\rbatch_options\030\002 \001(\0132\036.api.v1alpha1."
    "BatchRollOptionsR\014batchOptions\"\267\002\n\022Batch"
    "RollOperation\022!\n\014operation_id\030\001 \001(\tR\013ope"
    "rationId\022\031\n\010table_id\030\002 \001(\tR\007tableId\022\035\n\nr"
    "oll_count\030\003 \001(\005R\trollCount\022P\n\nparameters"
    "\030\004 \003(\01320.api.v1alpha1.BatchRollOperation"
    ".ParametersEntryR\nparameters\0223\n\007options\030"
    "\005 \001(\0132\031.api.v1alpha1.RollOptionsR\007option"
    "s\032=\n\017ParametersEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024"
    "\n\005value\030\002 \001(\tR\005value:\0028\001\"\306\001\n\020BatchRollOp"
    "tions\022-\n\022parallel_execution\030\001 \001(\010R\021paral"
    "lelExecution\022\035\n\ntimeout_ms\030\002 \001(\005R\ttimeou"
    "tMs\022$\n\016all_or_nothing\030\003 \001(\010R\014allOrNothin"
    "g\022>\n\033correlate_across_operations\030\004 \001(\010R\031"
    "correlateAcrossOperations\"\301\002\n\027BatchRollT"
    "ablesResponse\022R\n\025successful_operations\030\001"
    " \003(\0132\035.api.v1alpha1.BatchRollResultR\024suc"
    "cessfulOperations\022K\n\021failed_operations\030\002"
    " \003(\0132\036.api.v1alpha1.BatchRollFailureR\020fa"
    "iledOperations\022=\n\013batch_stats\030\003 \001(\0132\034.ap"
    "i.v1alpha1.BatchRollStatsR\nbatchStats\022F\n"
    "\014correlations\030\004 \003(\0132\".api.v1alpha1.Opera"
    "tionCorrelationR\014correlations\"\227\001\n\017BatchR"
    "ollResult\022!\n\014operation_id\030\001 \001(\tR\013operati"
    "onId\0222\n\007results\030\002 \003(\0132\030.api.v1alpha1.Rol"
    "lResultR\007results\022-\n\005stats\030\003 \001(\0132\027.api.v1"
    "alpha1.RollStatsR\005stats\"\250\001\n\020BatchRollFai"
    "lure\022!\n\014operation_id\030\001 \001(\tR\013operationId\022"
    "\031\n\010table_id\030\002 \001(\tR\007tableId\022%\n\016failure_re"
    "ason\030\003 \001(\tR\rfailureReason\022/\n\006errors\030\004 \003("
    "\0132\027.api.v1alpha1.RoomErrorR\006errors\"\271\002\n\016B"
    "atchRollStats\022-\n\023total_batch_time_ms\030\001 \001"
    "(\003R\020totalBatchTimeMs\0223\n\025successful_opera"
    "tions\030\002 \001(\005R\024successfulOperations\022+\n\021fai"
    "led_operations\030\003 \001(\005R\020failedOperations\022#"
    "\n\rtotal_results\030\004 \001(\005R\014totalResults\0229\n\031a"
    "verage_operation_time_ms\030\005 \001(\001R\026averageO"
    "perationTimeMs\0226\n\027used_parallel_executio"
    "n\030\006 \001(\010R\025usedParallelExecution\"\244\001\n\024Opera"
    "tionCorrelation\022#\n\roperation_ids\030\001 \003(\tR\014"
    "operationIds\022)\n\020correlation_type\030\002 \001(\tR\017"
    "correlationType\022\032\n\010strength\030\003 \001(\001R\010stren"
    "gth\022 \n\013description\030\004 \001(\tR\013description\"\217\002"
    "\n\030GenerateEncounterRequest\022\027\n\007room_id\030\001 "
    "\001(\tR\006roomId\022L\n\020encounter_params\030\002 \001(\0132!."
    "api.v1alpha1.EncounterParametersR\017encoun"
    "terParams\022H\n\020encounter_tables\030\003 \001(\0132\035.ap"
    "i.v1alpha1.EncounterTablesR\017encounterTab"
    "les\022B\n\007options\030\004 \001(\0132(.api.v1alpha1.Enco"
    "unterGenerationOptionsR\007options\"\321\001\n\023Enco"
    "unterParameters\022\037\n\013party_level\030\001 \001(\005R\npa"
    "rtyLevel\022\035\n\nparty_size\030\002 \001(\005R\tpartySize\022"
    "\036\n\ndifficulty\030\003 \001(\tR\ndifficulty\022\024\n\005theme"
    "\030\004 \001(\tR\005theme\022 \n\013environment\030\005 \001(\tR\013envi"
    "ronment\022\"\n\014requirements\030\006 \003(\tR\014requireme"
    "nts\"\371\001\n\017EncounterTables\022(\n\020primary_table"
    "_id\030\001 \001(\tR\016primaryTableId\022*\n\021creature_ta"
    "ble_id\030\002 \001(\tR\017creatureTableId\022*\n\021treasur"
    "e_table_id\030\003 \001(\tR\017treasureTableId\0220\n\024env"
    "ironment_table_id\030\004 \001(\tR\022environmentTabl"
    "eId\0222\n\025complication_table_id\030\005 \001(\tR\023comp"
    "licationTableId\"\242\002\n\032EncounterGenerationO"
    "ptions\022\022\n\004seed\030\001 \001(\tR\004seed\022)\n\020include_tr"
    "easure\030\002 \001(\010R\017includeTreasure\022<\n\032add_env"
    "ironmental_features\030\003 \001(\010R\030addEnvironmen"
    "talFeatures\0223\n\025include_complications\030\004 \001"
    "(\010R\024includeComplications\022#\n\rmax_creature"
    "s\030\005 \001(\005R\014maxCreatures\022-\n\022balance_difficu"
    "lty\030\006 \001(\010R\021balanceDifficulty\"\317\001\n\031Generat"
    "eEncounterResponse\022>\n\tencounter\030\001 \001(\0132 ."
    "api.v1alpha1.GeneratedEncounterR\tencount"
    "er\022Q\n\020generation_stats\030\002 \001(\0132&.api.v1alp"
    "ha1.EncounterGenerationStatsR\017generation"
    "Stats\022\037\n\013tables_used\030\003 \003(\tR\ntablesUsed\"\342"
    "\003\n\022GeneratedEncounter\022!\n\014encounter_id\030\001 "
    "\001(\tR\013encounterId\022\022\n\004name\030\002 \001(\tR\004name\022 \n\013"
    "description\030\003 \001(\tR\013description\022=\n\tcreatu"
    "res\030\004 \003(\0132\037.api.v1alpha1.EncounterCreatu"
    "reR\tcreatures\0226\n\010treasure\030\005 \003(\0132\032.api.v1"
    "alpha1.TreasureItemR\010treasure\022Y\n\026environ"
    "mental_features\030\006 \003(\0132\".api.v1alpha1.Env"
    "ironmentalFeatureR\025environmentalFeatures"
    "\022I\n\rcomplications\030\007 \003(\0132#.api.v1alpha1.E"
    "ncounterComplicationR\rcomplications\022+\n\021d"
    "ifficulty_rating\030\010 \001(\tR\020difficultyRating"
    "\022)\n\020challenge_rating\030\t \001(\001R\017challengeRat"
    "ing\"\251\002\n\021EncounterCreature\022\037\n\013creature_id"
    "\030\001 \001(\tR\ncreatureId\022\022\n\004name\030\002 \001(\tR\004name\022\032"
    "\n\010quantity\030\003 \001(\005R\010quantity\022)\n\020challenge_"
    "rating\030\004 \001(\001R\017challengeRating\022\022\n\004role\030\005 "
    "\001(\tR\004role\022Q\n\021spawn_preferences\030\006 \001(\0132$.a"
    "pi.v1alpha1.EntitySpawnPreferencesR\020spaw"
    "nPreferences\0221\n\024special_instructions\030\007 \001"
    "(\tR\023specialInstructions\"\305\001\n\014TreasureItem"
    "\022\027\n\007item_id\030\001 \001(\tR\006itemId\022\022\n\004name\030\002 \001(\tR"
    "\004name\022\032\n\010quantity\030\003 \001(\005R\010quantity\022\031\n\010val"
    "ue_gp\030\004 \001(\005R\007valueGp\022\026\n\006rarity\030\005 \001(\tR\006ra"
    "rity\022\035\n\nis_magical\030\006 \001(\010R\tisMagical\022\032\n\010l"
    "ocation\030\007 \001(\tR\010location\"\327\001\n\024Environmenta"
    "lFeature\022\035\n\nfeature_id\030\001 \001(\tR\tfeatureId\022"
    "\022\n\004name\030\002 \001(\tR\004name\022 \n\013description\030\003 \001(\t"
    "R\013description\022!\n\014feature_type\030\004 \001(\tR\013fea"
    "tureType\022-\n\022preferred_location\030\005 \001(\tR\021pr"
    "eferredLocation\022\030\n\007effects\030\006 \003(\tR\007effect"
    "s\"\252\001\n\025EncounterComplication\022\'\n\017complicat"
    "ion_id\030\001 \001(\tR\016complicationId\022\022\n\004name\030\002 \001"
    "(\tR\004name\022 \n\013description\030\003 \001(\tR\013descripti"
    "on\022\030\n\007trigger\030\004 \001(\tR\007trigger\022\030\n\007effects\030"
    "\005 \003(\tR\007effects\"\257\002\n\030EncounterGenerationSt"
    "ats\022,\n\022generation_time_ms\030\001 \001(\003R\020generat"
    "ionTimeMs\022(\n\020table_rolls_made\030\002 \001(\005R\016tab"
    "leRollsMade\022/\n\023creatures_generated\030\003 \001(\005"
    "R\022creaturesGenerated\0228\n\030treasure_items_g"
    "enerated\030\004 \001(\005R\026treasureItemsGenerated\022+"
    "\n\021actual_difficulty\030\005 \001(\tR\020actualDifficu"
    "lty\022#\n\rcalculated_cr\030\006 \001(\001R\014calculatedCr"
    "\"\316\001\n\023GenerateLootRequest\022=\n\013loot_params\030"
    "\001 \001(\0132\034.api.v1alpha1.LootParametersR\nloo"
    "tParams\0229\n\013loot_tables\030\002 \001(\0132\030.api.v1alp"
    "ha1.LootTablesR\nlootTables\022=\n\007options\030\003 "
    "\001(\0132#.api.v1alpha1.LootGenerationOptions"
    "R\007options\"\346\001\n\016LootParameters\022)\n\020challeng"
    "e_rating\030\001 \001(\001R\017challengeRating\022\037\n\013party"
    "_level\030\002 \001(\005R\npartyLevel\022\033\n\tloot_type\030\003 "
    "\001(\tR\010lootType\022+\n\021rarity_preference\030\004 \001(\t"
    "R\020rarityPreference\022&\n\017value_budget_gp\030\005 "
    "\001(\005R\rvalueBudgetGp\022\026\n\006source\030\006 \001(\tR\006sour"
    "ce\"\361\001\n\nLootTables\022(\n\020primary_table_id\030\001 "
    "\001(\tR\016primaryTableId\022-\n\023magic_item_table_"
    "id\030\002 \001(\tR\020magicItemTableId\022,\n\022equipment_"
    "table_id\030\003 \001(\tR\020equipmentTableId\0220\n\024cons"
    "umables_table_id\030\004 \001(\tR\022consumablesTable"
    "Id\022*\n\021currency_table_id\030\005 \001(\tR\017currencyT"
    "ableId\"\221\002\n\025LootGenerationOptions\022\022\n\004seed"
    "\030\001 \001(\tR\004seed\0220\n\024include_cursed_items\030\002 \001"
    "(\010R\022includeCursedItems\0220\n\024vary_item_cond"
    "itions\030\003 \001(\010R\022varyItemConditions\022\033\n\tmax_"
    "items\030\004 \001(\005R\010maxItems\0220\n\024bundle_similar_"
    "items\030\005 \001(\010R\022bundleSimilarItems\0221\n\024inclu"
    "de_descriptions\030\006 \001(\010R\023includeDescriptio"
    "ns\"\266\001\n\024GenerateLootResponse\022/\n\004loot\030\001 \001("
    "\0132\033.api.v1alpha1.GeneratedLootR\004loot\022L\n\020"
    "generation_stats\030\002 \001(\0132!.api.v1alpha1.Lo"
    "otGenerationStatsR\017generationStats\022\037\n\013ta"
    "bles_used\030\003 \003(\tR\ntablesUsed\"\371\002\n\rGenerate"
    "dLoot\022\027\n\007loot_id\030\001 \001(\tR\006lootId\022 \n\013descri"
    "ption\030\002 \001(\tR\013description\0225\n\005items\030\003 \003(\0132"
    "\037.api.v1alpha1.GeneratedLootItemR\005items\022"
    "$\n\016total_value_gp\030\004 \001(\005R\014totalValueGp\022d\n"
    "\023rarity_distribution\030\005 \003(\01323.api.v1alpha"
    "1.GeneratedLoot.RarityDistributionEntryR"
    "\022rarityDistribution\022#\n\rspecial_notes\030\006 \003"
    "(\tR\014specialNotes\032E\n\027RarityDistributionEn"
    "try\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001(\005R\005va"
    "lue:\0028\001\"\347\003\n\021GeneratedLootItem\022\027\n\007item_id"
    "\030\001 \001(\tR\006itemId\022\022\n\004name\030\002 \001(\tR\004name\022 \n\013de"
    "scription\030\003 \001(\tR\013description\022\032\n\010quantity"
    "\030\004 \001(\005R\010quantity\022\"\n\runit_value_gp\030\005 \001(\005R"
    "\013unitValueGp\022$\n\016total_value_gp\030\006 \001(\005R\014to"
    "talValueGp\022\026\n\006rarity\030\007 \001(\tR\006rarity\022\033\n\tit"
    "em_type\030\010 \001(\tR\010itemType\022\034\n\tcondition\030\t \001"
    "(\tR\tcondition\022\035\n\nis_magical\030\n \001(\010R\tisMag"
    "ical\022\033\n\tis_cursed\030\013 \001(\010R\010isCursed\022O\n\npro"
    "perties\030\014 \003(\0132/.api.v1alpha1.GeneratedLo"
    "otItem.PropertiesEntryR\nproperties\032=\n\017Pr"
    "opertiesEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005value"
    "\030\002 \001(\tR\005value:\0028\001\"\207\003\n\023LootGenerationStat"
    "s\022,\n\022generation_time_ms\030\001 \001(\003R\020generatio"
    "nTimeMs\022(\n\020table_rolls_made\030\002 \001(\005R\016table"
    "RollsMade\022\'\n\017items_generated\030\003 \001(\005R\016item"
    "sGenerated\022,\n\022value_generated_gp\030\004 \001(\005R\020"
    "valueGeneratedGp\022&\n\017value_budget_gp\030\005 \001("
    "\005R\rvalueBudgetGp\022X\n\rrarity_counts\030\006 \003(\0132"
    "3.api.v1alpha1.LootGenerationStats.Rarit"
    "yCountsEntryR\014rarityCounts\032\?\n\021RarityCoun"
    "tsEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001(\005"
    "R\005value:\0028\001\"\250\001\n\035ValidateSelectionTableRe"
    "quest\0222\n\005table\030\001 \001(\0132\034.api.v1alpha1.Sele"
    "ctionTableR\005table\022S\n\022validation_options\030"
    "\002 \001(\0132$.api.v1alpha1.TableValidationOpti"
    "onsR\021validationOptions\"\215\002\n\036ValidateSelec"
    "tionTableResponse\022K\n\021validation_result\030\001"
    " \001(\0132\036.api.v1alpha1.ValidationResultR\020va"
    "lidationResult\022O\n\021validation_checks\030\002 \003("
    "\0132\".api.v1alpha1.TableValidationCheckR\020v"
    "alidationChecks\022M\n\020validation_stats\030\003 \001("
    "\0132\".api.v1alpha1.TableValidationStatsR\017v"
    "alidationStats\"\224\002\n\024TableValidationCheck\022"
    "\035\n\ncheck_name\030\001 \001(\tR\tcheckName\022@\n\006result"
    "\030\002 \001(\0162(.api.v1alpha1.TableValidationChe"
    "ckResultR\006result\022\030\n\007message\030\003 \001(\tR\007messa"
    "ge\022A\n\010severity\030\004 \001(\0162%.api.v1alpha1.Tabl"
    "eValidationSeverityR\010severity\022\031\n\010entry_i"
    "d\030\005 \001(\tR\007entryId\022#\n\rsuggested_fix\030\006 \001(\tR"
    "\014suggestedFix\"\350\001\n\024TableValidationStats\022,"
    "\n\022validation_time_ms\030\001 \001(\003R\020validationTi"
    "meMs\022)\n\020checks_performed\030\002 \001(\005R\017checksPe"
    "rformed\022#\n\rchecks_passed\030\003 \001(\005R\014checksPa"
    "ssed\022#\n\rchecks_failed\030\004 \001(\005R\014checksFaile"
    "d\022-\n\022warnings_generated\030\005 \001(\005R\021warningsG"
    "enerated\"\266\001\n\031GetTableStatisticsRequest\022\031"
    "\n\010table_id\030\001 \001(\tR\007tableId\022;\n\ntime_range\030"
    "\002 \001(\0132\034.api.v1alpha1.TableTimeRangeR\ttim"
    "eRange\022A\n\014detail_level\030\003 \001(\0162\036.api.v1alp"
    "ha1.StatisticsDetailR\013detailLevel\"J\n\016Tab"
    "leTimeRange\022\035\n\nstart_time\030\001 \001(\003R\tstartTi"
    "me\022\031\n\010end_time\030\002 \001(\003R\007endTime\"\232\001\n\032GetTab"
    "leStatisticsResponse\022=\n\nstatistics\030\001 \001(\013"
    "2\035.api.v1alpha1.TableStatisticsR\nstatist"
    "ics\022=\n\010analysis\030\002 \001(\0132!.api.v1alpha1.Sta"
    "tisticalAnalysisR\010analysis\"\257\002\n\023Statistic"
    "alAnalysis\022S\n\021roll_distribution\030\001 \001(\0132&."
    "api.v1alpha1.RollDistributionAnalysisR\020r"
    "ollDistribution\022M\n\017entry_selection\030\002 \001(\013"
    "2$.api.v1alpha1.EntrySelectionAnalysisR\016"
    "entrySelection\022C\n\013performance\030\003 \001(\0132!.ap"
    "i.v1alpha1.PerformanceAnalysisR\013performa"
    "nce\022/\n\006trends\030\004 \003(\0132\027.api.v1alpha1.Trend"
    "DataR\006trends\"\225\004\n\030RollDistributionAnalysi"
    "s\022l\n\022expected_frequency\030\001 \003(\0132=.api.v1al"
    "pha1.RollDistributionAnalysis.ExpectedFr"
    "equencyEntryR\021expectedFrequency\022f\n\020actua"
    "l_frequency\030\002 \003(\0132;.api.v1alpha1.RollDis"
    "tributionAnalysis.ActualFrequencyEntryR\017"
    "actualFrequency\0220\n\024chi_square_statistic\030"
    "\003 \001(\001R\022chiSquareStatistic\022\027\n\007p_value\030\004 \001"
    "(\001R\006pValue\022)\n\020uniformity_score\030\005 \001(\001R\017un"
    "iformityScore\022#\n\routlier_rolls\030\006 \003(\005R\014ou"
    "tlierRolls\032D\n\026ExpectedFrequencyEntry\022\020\n\003"
    "key\030\001 \001(\005R\003key\022\024\n\005value\030\002 \001(\001R\005value:\0028\001"
    "\032B\n\024ActualFrequencyEntry\022\020\n\003key\030\001 \001(\005R\003k"
    "ey\022\024\n\005value\030\002 \001(\001R\005value:\0028\001\"\212\002\n\026EntrySe"
    "lectionAnalysis\022.\n\023most_selected_entry\030\001"
    " \001(\tR\021mostSelectedEntry\0220\n\024least_selecte"
    "d_entry\030\002 \001(\tR\022leastSelectedEntry\022%\n\016sel"
    "ection_bias\030\003 \001(\001R\rselectionBias\022+\n\021sele"
    "ction_entropy\030\004 \001(\001R\020selectionEntropy\022:\n"
    "\010clusters\030\005 \003(\0132\036.api.v1alpha1.Selection"
    "ClusterR\010clusters\"\226\001\n\020SelectionCluster\022\035"
    "\n\ncluster_id\030\001 \001(\tR\tclusterId\022\033\n\tentry_i"
    "ds\030\002 \003(\tR\010entryIds\022\034\n\tfrequency\030\003 \001(\001R\tf"
    "requency\022(\n\017characteristics\030\004 \001(\tR\017chara"
    "cteristics\"\331\001\n\023PerformanceAnalysis\022+\n\021pe"
    "rformance_trend\030\001 \001(\tR\020performanceTrend\022"
    " \n\013bottlenecks\030\002 \003(\tR\013bottlenecks\022(\n\017rec"
    "ommendations\030\003 \003(\tR\017recommendations\022I\n\016r"
    "esource_usage\030\004 \001(\0132\".api.v1alpha1.Resou"
    "rceUsagePatternR\rresourceUsage\"\265\001\n\024Resou"
    "rceUsagePattern\022!\n\014memory_trend\030\001 \001(\tR\013m"
    "emoryTrend\022\037\n\013cpu_pattern\030\002 \001(\tR\ncpuPatt"
    "ern\022/\n\023cache_effectiveness\030\003 \001(\001R\022cacheE"
    "ffectiveness\022(\n\020peak_usage_times\030\004 \003(\003R\016"
    "peakUsageTimes\"\336\001\n\tTrendData\022\035\n\ntrend_na"
    "me\030\001 \001(\tR\ttrendName\022=\n\013time_period\030\002 \001(\013"
    "2\034.api.v1alpha1.TableTimeRangeR\ntimePeri"
    "od\022\034\n\tdirection\030\003 \001(\tR\tdirection\022\032\n\010stre"
    "ngth\030\004 \001(\001R\010strength\0229\n\013data_points\030\005 \003("
    "\0132\030.api.v1alpha1.TrendPointR\ndataPoints\""
    "Z\n\nTrendPoint\022\034\n\ttimestamp\030\001 \001(\003R\ttimest"
    "amp\022\024\n\005value\030\002 \001(\001R\005value\022\030\n\007context\030\003 \001"
    "(\tR\007context\"\260\001\n\033ExportSelectionTableRequ"
    "est\022\031\n\010table_id\030\001 \001(\tR\007tableId\0222\n\006format"
    "\030\002 \001(\0162\032.api.v1alpha1.ExportFormatR\006form"
    "at\022B\n\016export_options\030\003 \001(\0132\033.api.v1alpha"
    "1.ExportOptionsR\rexportOptions\"\333\001\n\rExpor"
    "tOptions\022)\n\020include_metadata\030\001 \001(\010R\017incl"
    "udeMetadata\022-\n\022include_statistics\030\002 \001(\010R"
    "\021includeStatistics\0222\n\025include_usage_hist"
    "ory\030\003 \001(\010R\023includeUsageHistory\022 \n\013compre"
    "ssion\030\004 \001(\tR\013compression\022\032\n\010encoding\030\005 \001"
    "(\tR\010encoding\"\276\001\n\034ExportSelectionTableRes"
    "ponse\022#\n\rexported_data\030\001 \001(\014R\014exportedDa"
    "ta\0222\n\006format\030\002 \001(\0162\032.api.v1alpha1.Export"
    "FormatR\006format\022E\n\017export_metadata\030\003 \001(\0132"
    "\034.api.v1alpha1.ExportMetadataR\016exportMet"
    "adata\"\300\001\n\016ExportMetadata\022\037\n\013exported_at\030"
    "\001 \001(\003R\nexportedAt\022\035\n\nsize_bytes\030\002 \001(\003R\ts"
    "izeBytes\022+\n\021compression_ratio\030\003 \001(\001R\020com"
    "pressionRatio\022\032\n\010checksum\030\004 \001(\tR\010checksu"
    "m\022%\n\016export_version\030\005 \001(\tR\rexportVersion"
    "\"\266\001\n\033ImportSelectionTableRequest\022\037\n\013impo"
    "rt_data\030\001 \001(\014R\nimportData\0222\n\006format\030\002 \001("
    "\0162\032.api.v1alpha1.ExportFormatR\006format\022B\n"
    "\016import_options\030\003 \001(\0132\033.api.v1alpha1.Imp"
    "ortOptionsR\rimportOptions\"\357\001\n\rImportOpti"
    "ons\0224\n\026validate_during_import\030\001 \001(\010R\024val"
    "idateDuringImport\022-\n\022overwrite_existing\030"
    "\002 \001(\010R\021overwriteExisting\022!\n\014preserve_ids"
    "\030\003 \001(\010R\013preserveIds\022\'\n\017update_metadata\030\004"
    " \001(\010R\016updateMetadata\022-\n\022source_descripti"
    "on\030\005 \001(\tR\021sourceDescription\"\342\001\n\034ImportSe"
    "lectionTableResponse\022C\n\016imported_table\030\001"
    " \001(\0132\034.api.v1alpha1.SelectionTableR\rimpo"
    "rtedTable\022\?\n\rimport_result\030\002 \001(\0132\032.api.v"
    "1alpha1.ImportResultR\014importResult\022<\n\014im"
    "port_stats\030\003 \001(\0132\031.api.v1alpha1.ImportSt"
    "atsR\013importStats\"\332\001\n\014ImportResult\022\030\n\007suc"
    "cess\030\001 \001(\010R\007success\0223\n\010warnings\030\002 \003(\0132\027."
    "api.v1alpha1.RoomErrorR\010warnings\022/\n\006erro"
    "rs\030\003 \003(\0132\027.api.v1alpha1.RoomErrorR\006error"
    "s\022%\n\016items_imported\030\004 \001(\005R\ritemsImported"
    "\022#\n\ritems_skipped\030\005 \001(\005R\014itemsSkipped\"\305\001"
    "\n\013ImportStats\022$\n\016import_time_ms\030\001 \001(\003R\014i"
    "mportTimeMs\0220\n\024data_processed_bytes\030\002 \001("
    "\003R\022dataProcessedBytes\022,\n\022validation_time"
    "_ms\030\003 \001(\003R\020validationTimeMs\0220\n\024processin"
    "g_rate_mbps\030\004 \001(\001R\022processingRateMbps*\356\001"
    "\n\022SelectionTableType\022$\n SELECTION_TABLE_"
    "TYPE_UNSPECIFIED\020\000\022!\n\035SELECTION_TABLE_TY"
    "PE_WEIGHTED\020\001\022#\n\037SELECTION_TABLE_TYPE_DI"
    "CE_RANGE\020\002\022#\n\037SELECTION_TABLE_TYPE_SEQUE"
    "NTIAL\020\003\022$\n SELECTION_TABLE_TYPE_CONDITIO"
    "NAL\020\004\022\037\n\033SELECTION_TABLE_TYPE_NESTED\020\005*\233"
    "\002\n\024TableEntryResultType\022\'\n#TABLE_ENTRY_R"
    "ESULT_TYPE_UNSPECIFIED\020\000\022 \n\034TABLE_ENTRY_"
    "RESULT_TYPE_ITEM\020\001\022\"\n\036TABLE_ENTRY_RESULT"
    "_TYPE_ENTITY\020\002\022(\n$TABLE_ENTRY_RESULT_TYP"
    "E_NESTED_TABLE\020\003\022 \n\034TABLE_ENTRY_RESULT_T"
    "YPE_TEXT\020\004\022\"\n\036TABLE_ENTRY_RESULT_TYPE_EF"
    "FECT\020\005\022$\n TABLE_ENTRY_RESULT_TYPE_MULTIP"
    "LE\020\006*w\n\022TableSortDirection\022$\n TABLE_SORT"
    "_DIRECTION_UNSPECIFIED\020\000\022\034\n\030TABLE_SORT_D"
    "IRECTION_ASC\020\001\022\035\n\031TABLE_SORT_DIRECTION_D"
    "ESC\020\002*\320\001\n\016TableSortField\022 \n\034TABLE_SORT_F"
    "IELD_UNSPECIFIED\020\000\022\031\n\025TABLE_SORT_FIELD_N"
    "AME\020\001\022\037\n\033TABLE_SORT_FIELD_CREATED_AT\020\002\022\037"
    "\n\033TABLE_SORT_FIELD_UPDATED_AT\020\003\022 \n\034TABLE"
    "_SORT_FIELD_USAGE_COUNT\020\004\022\035\n\031TABLE_SORT_"
    "FIELD_CATEGORY\020\005*\356\001\n\032TableValidationChec"
    "kResult\022-\n)TABLE_VALIDATION_CHECK_RESULT"
    "_UNSPECIFIED\020\000\022&\n\"TABLE_VALIDATION_CHECK"
    "_RESULT_PASS\020\001\022&\n\"TABLE_VALIDATION_CHECK"
    "_RESULT_FAIL\020\002\022)\n%TABLE_VALIDATION_CHECK"
    "_RESULT_WARNING\020\003\022&\n\"TABLE_VALIDATION_CH"
    "ECK_RESULT_SKIP\020\004*\334\001\n\027TableValidationSev"
    "erity\022)\n%TABLE_VALIDATION_SEVERITY_UNSPE"
    "CIFIED\020\000\022\"\n\036TABLE_VALIDATION_SEVERITY_IN"
    "FO\020\001\022%\n!TABLE_VALIDATION_SEVERITY_WARNIN"
    "G\020\002\022#\n\037TABLE_VALIDATION_SEVERITY_ERROR\020\003"
    "\022&\n\"TABLE_VALIDATION_SEVERITY_CRITICAL\020\004"
    "*\227\001\n\020StatisticsDetail\022!\n\035STATISTICS_DETA"
    "IL_UNSPECIFIED\020\000\022\033\n\027STATISTICS_DETAIL_BA"
    "SIC\020\001\022\036\n\032STATISTICS_DETAIL_DETAILED\020\002\022#\n"
    "\037STATISTICS_DETAIL_COMPREHENSIVE\020\003*\247\001\n\014E"
    "xportFormat\022\035\n\031EXPORT_FORMAT_UNSPECIFIED"
    "\020\000\022\026\n\022EXPORT_FORMAT_JSON\020\001\022\025\n\021EXPORT_FOR"
    "MAT_CSV\020\002\022\025\n\021EXPORT_FORMAT_XML\020\003\022\026\n\022EXPO"
    "RT_FORMAT_YAML\020\004\022\032\n\026EXPORT_FORMAT_PROTOB"
    "UF\020\0052\240\014\n\025SelectionTableService\022m\n\024Create"
    "SelectionTable\022).api.v1alpha1.CreateSele"
    "ctionTableRequest\032*.api.v1alpha1.CreateS"
    "electionTableResponse\022d\n\021GetSelectionTab"
    "le\022&.api.v1alpha1.GetSelectionTableReque"
    "st\032\'.api.v1alpha1.GetSelectionTableRespo"
    "nse\022m\n\024UpdateSelectionTable\022).api.v1alph"
    "a1.UpdateSelectionTableRequest\032*.api.v1a"
    "lpha1.UpdateSelectionTableResponse\022m\n\024De"
    "leteSelectionTable\022).api.v1alpha1.Delete"
    "SelectionTableRequest\032*.api.v1alpha1.Del"
    "eteSelectionTableResponse\022j\n\023ListSelecti"
    "onTables\022(.api.v1alpha1.ListSelectionTab"
    "lesRequest\032).api.v1alpha1.ListSelectionT"
    "ablesResponse\022R\n\013RollOnTable\022 .api.v1alp"
    "ha1.RollOnTableRequest\032!.api.v1alpha1.Ro"
    "llOnTableResponse\022U\n\014RollMultiple\022!.api."
    "v1alpha1.RollMultipleRequest\032\".api.v1alp"
    "ha1.RollMultipleResponse\022d\n\021RollWithModi"
    "fiers\022&.api.v1alpha1.RollWithModifiersRe"
    "quest\032\'.api.v1alpha1.RollWithModifiersRe"
    "sponse\022^\n\017BatchRollTables\022$.api.v1alpha1"
    ".BatchRollTablesRequest\032%.api.v1alpha1.B"
    "atchRollTablesResponse\022d\n\021GenerateEncoun"
    "ter\022&.api.v1alpha1.GenerateEncounterRequ"
    "est\032\'.api.v1alpha1.GenerateEncounterResp"
    "onse\022U\n\014GenerateLoot\022!.api.v1alpha1.Gene"
    "rateLootRequest\032\".api.v1alpha1.GenerateL"
    "ootResponse\022s\n\026ValidateSelectionTable\022+."
    "api.v1alpha1.ValidateSelectionTableReque"
    "st\032,.api.v1alpha1.ValidateSelectionTable"
    "Response\022g\n\022GetTableStatistics\022\'.api.v1a"
    "lpha1.GetTableStatisticsRequest\032(.api.v1"
    "alpha1.GetTableStatisticsResponse\022m\n\024Exp"
    "ortSelectionTable\022).api.v1alpha1.ExportS"
    "electionTableRequest\032*.api.v1alpha1.Expo"
    "rtSelectionTableResponse\022m\n\024ImportSelect"
    "ionTable\022).api.v1alpha1.ImportSelectionT"
    "ableRequest\032*.api.v1alpha1.ImportSelecti"
    "onTableResponseB\300\001\n\020com.api.v1alpha1B\024Ro"
    "omSelectablesProtoP\001ZEgithub.com/KirkDig"
    "gler/rpg-api-protos/gen/go/api/v1alpha1;"
    "apiv1alpha1\242\002\003AXX\252\002\014Api.V1alpha1\312\002\014Api\\V"
    "1alpha1\342\002\030Api\\V1alpha1\\GPBMetadata\352\002\rApi"
    "::V1alpha1b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto_deps[1] = {
        &::descriptor_table_api_2fv1alpha1_2froom_5fcommon_2eproto,
};
static ::absl::once_flag descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto = {
    false,
    false,
    28578,
    descriptor_table_protodef_api_2fv1alpha1_2froom_5fselectables_2eproto,
    "api/v1alpha1/room_selectables.proto",
    &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto_once,
    descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto_deps,
    1,
    122,
    schemas,
    file_default_instances,
    TableStruct_api_2fv1alpha1_2froom_5fselectables_2eproto::offsets,
    file_level_enum_descriptors_api_2fv1alpha1_2froom_5fselectables_2eproto,
    file_level_service_descriptors_api_2fv1alpha1_2froom_5fselectables_2eproto,
};
namespace api {
namespace v1alpha1 {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL SelectionTableType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto);
  return file_level_enum_descriptors_api_2fv1alpha1_2froom_5fselectables_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t SelectionTableType_internal_data_[] = {
    393216u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL TableEntryResultType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto);
  return file_level_enum_descriptors_api_2fv1alpha1_2froom_5fselectables_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t TableEntryResultType_internal_data_[] = {
    458752u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL TableSortDirection_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto);
  return file_level_enum_descriptors_api_2fv1alpha1_2froom_5fselectables_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t TableSortDirection_internal_data_[] = {
    196608u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL TableSortField_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto);
  return file_level_enum_descriptors_api_2fv1alpha1_2froom_5fselectables_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t TableSortField_internal_data_[] = {
    393216u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL TableValidationCheckResult_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto);
  return file_level_enum_descriptors_api_2fv1alpha1_2froom_5fselectables_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t TableValidationCheckResult_internal_data_[] = {
    327680u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL TableValidationSeverity_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto);
  return file_level_enum_descriptors_api_2fv1alpha1_2froom_5fselectables_2eproto[5];
}
PROTOBUF_CONSTINIT const uint32_t TableValidationSeverity_internal_data_[] = {
    327680u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL StatisticsDetail_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto);
  return file_level_enum_descriptors_api_2fv1alpha1_2froom_5fselectables_2eproto[6];
}
PROTOBUF_CONSTINIT const uint32_t StatisticsDetail_internal_data_[] = {
    262144u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ExportFormat_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto);
  return file_level_enum_descriptors_api_2fv1alpha1_2froom_5fselectables_2eproto[7];
}
PROTOBUF_CONSTINIT const uint32_t ExportFormat_internal_data_[] = {
    393216u, 0u, };
// ===================================================================

class CreateSelectionTableRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CreateSelectionTableRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateSelectionTableRequest, _impl_._has_bits_);
};

CreateSelectionTableRequest::CreateSelectionTableRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CreateSelectionTableRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.CreateSelectionTableRequest)
}
PROTOBUF_NDEBUG_INLINE CreateSelectionTableRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::CreateSelectionTableRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CreateSelectionTableRequest::CreateSelectionTableRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CreateSelectionTableRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CreateSelectionTableRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateSelectionTableRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.table_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.table_)
                : nullptr;
  _impl_.validation_options_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.validation_options_)
                : nullptr;
  _impl_.is_public_ = from._impl_.is_public_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.CreateSelectionTableRequest)
}
PROTOBUF_NDEBUG_INLINE CreateSelectionTableRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CreateSelectionTableRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, table_),
           0,
           offsetof(Impl_, is_public_) -
               offsetof(Impl_, table_) +
               sizeof(Impl_::is_public_));
}
CreateSelectionTableRequest::~CreateSelectionTableRequest() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.CreateSelectionTableRequest)
  SharedDtor(*this);
}
inline void CreateSelectionTableRequest::SharedDtor(MessageLite& self) {
  CreateSelectionTableRequest& this_ = static_cast<CreateSelectionTableRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.table_;
  delete this_._impl_.validation_options_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CreateSelectionTableRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CreateSelectionTableRequest(arena);
}
constexpr auto CreateSelectionTableRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CreateSelectionTableRequest),
                                            alignof(CreateSelectionTableRequest));
}
constexpr auto CreateSelectionTableRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CreateSelectionTableRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CreateSelectionTableRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CreateSelectionTableRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CreateSelectionTableRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CreateSelectionTableRequest>(), &CreateSelectionTableRequest::ByteSizeLong,
              &CreateSelectionTableRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CreateSelectionTableRequest, _impl_._cached_size_),
          false,
      },
      &CreateSelectionTableRequest::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CreateSelectionTableRequest_class_data_ =
        CreateSelectionTableRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CreateSelectionTableRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CreateSelectionTableRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CreateSelectionTableRequest_class_data_.tc_table);
  return CreateSelectionTableRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2>
CreateSelectionTableRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateSelectionTableRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CreateSelectionTableRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::CreateSelectionTableRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .api.v1alpha1.SelectionTable table = 1 [json_name = "table"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateSelectionTableRequest, _impl_.table_)}},
    // bool is_public = 2 [json_name = "isPublic"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CreateSelectionTableRequest, _impl_.is_public_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(CreateSelectionTableRequest, _impl_.is_public_)}},
    // .api.v1alpha1.TableValidationOptions validation_options = 3 [json_name = "validationOptions"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(CreateSelectionTableRequest, _impl_.validation_options_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .api.v1alpha1.SelectionTable table = 1 [json_name = "table"];
    {PROTOBUF_FIELD_OFFSET(CreateSelectionTableRequest, _impl_.table_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool is_public = 2 [json_name = "isPublic"];
    {PROTOBUF_FIELD_OFFSET(CreateSelectionTableRequest, _impl_.is_public_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // .api.v1alpha1.TableValidationOptions validation_options = 3 [json_name = "validationOptions"];
    {PROTOBUF_FIELD_OFFSET(CreateSelectionTableRequest, _impl_.validation_options_), _Internal::kHasBitsOffset + 1, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::SelectionTable>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::TableValidationOptions>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CreateSelectionTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.CreateSelectionTableRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.table_ != nullptr);
      _impl_.table_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.validation_options_ != nullptr);
      _impl_.validation_options_->Clear();
    }
  }
  _impl_.is_public_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CreateSelectionTableRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CreateSelectionTableRequest& this_ = static_cast<const CreateSelectionTableRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CreateSelectionTableRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CreateSelectionTableRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.CreateSelectionTableRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.SelectionTable table = 1 [json_name = "table"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.table_, this_._impl_.table_->GetCachedSize(), target,
        stream);
  }

  // bool is_public = 2 [json_name = "isPublic"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    if (this_._internal_is_public() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_is_public(), target);
    }
  }

  // .api.v1alpha1.TableValidationOptions validation_options = 3 [json_name = "validationOptions"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.validation_options_, this_._impl_.validation_options_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.CreateSelectionTableRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CreateSelectionTableRequest::ByteSizeLong(const MessageLite& base) {
  const CreateSelectionTableRequest& this_ = static_cast<const CreateSelectionTableRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CreateSelectionTableRequest::ByteSizeLong() const {
  const CreateSelectionTableRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.CreateSelectionTableRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // .api.v1alpha1.SelectionTable table = 1 [json_name = "table"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.table_);
    }
    // .api.v1alpha1.TableValidationOptions validation_options = 3 [json_name = "validationOptions"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.validation_options_);
    }
    // bool is_public = 2 [json_name = "isPublic"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_is_public() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CreateSelectionTableRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateSelectionTableRequest*>(&to_msg);
  auto& from = static_cast<const CreateSelectionTableRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.CreateSelectionTableRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.table_ != nullptr);
      if (_this->_impl_.table_ == nullptr) {
        _this->_impl_.table_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.table_);
      } else {
        _this->_impl_.table_->MergeFrom(*from._impl_.table_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.validation_options_ != nullptr);
      if (_this->_impl_.validation_options_ == nullptr) {
        _this->_impl_.validation_options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.validation_options_);
      } else {
        _this->_impl_.validation_options_->MergeFrom(*from._impl_.validation_options_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_is_public() != 0) {
        _this->_impl_.is_public_ = from._impl_.is_public_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateSelectionTableRequest::CopyFrom(const CreateSelectionTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.CreateSelectionTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateSelectionTableRequest::InternalSwap(CreateSelectionTableRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateSelectionTableRequest, _impl_.is_public_)
      + sizeof(CreateSelectionTableRequest::_impl_.is_public_)
      - PROTOBUF_FIELD_OFFSET(CreateSelectionTableRequest, _impl_.table_)>(
          reinterpret_cast<char*>(&_impl_.table_),
          reinterpret_cast<char*>(&other->_impl_.table_));
}

::google::protobuf::Metadata CreateSelectionTableRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SelectionTable::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SelectionTable>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_._has_bits_);
};

SelectionTable::SelectionTable(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SelectionTable_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.SelectionTable)
}
PROTOBUF_NDEBUG_INLINE SelectionTable::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::SelectionTable& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        entries_{visibility, arena, from.entries_},
        nested_table_ids_{visibility, arena, from.nested_table_ids_},
        id_(arena, from.id_),
        name_(arena, from.name_),
        description_(arena, from.description_),
        category_(arena, from.category_) {}

SelectionTable::SelectionTable(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SelectionTable& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SelectionTable_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SelectionTable* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.dice_config_ = ((cached_has_bits & 0x00000010U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dice_config_)
                : nullptr;
  _impl_.metadata_ = ((cached_has_bits & 0x00000020U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.metadata_)
                : nullptr;
  _impl_.options_ = ((cached_has_bits & 0x00000040U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_)
                : nullptr;
  _impl_.table_type_ = from._impl_.table_type_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.SelectionTable)
}
PROTOBUF_NDEBUG_INLINE SelectionTable::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        entries_{visibility, arena},
        nested_table_ids_{visibility, arena},
        id_(arena),
        name_(arena),
        description_(arena),
        category_(arena) {}

inline void SelectionTable::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, dice_config_),
           0,
           offsetof(Impl_, table_type_) -
               offsetof(Impl_, dice_config_) +
               sizeof(Impl_::table_type_));
}
SelectionTable::~SelectionTable() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.SelectionTable)
  SharedDtor(*this);
}
inline void SelectionTable::SharedDtor(MessageLite& self) {
  SelectionTable& this_ = static_cast<SelectionTable&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.category_.Destroy();
  delete this_._impl_.dice_config_;
  delete this_._impl_.metadata_;
  delete this_._impl_.options_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SelectionTable::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SelectionTable(arena);
}
constexpr auto SelectionTable::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.entries_) +
          decltype(SelectionTable::_impl_.entries_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.nested_table_ids_) +
          decltype(SelectionTable::_impl_.nested_table_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SelectionTable), alignof(SelectionTable), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SelectionTable::PlacementNew_,
                                 sizeof(SelectionTable),
                                 alignof(SelectionTable));
  }
}
constexpr auto SelectionTable::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SelectionTable_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SelectionTable::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SelectionTable>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SelectionTable::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SelectionTable>(), &SelectionTable::ByteSizeLong,
              &SelectionTable::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_._cached_size_),
          false,
      },
      &SelectionTable::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SelectionTable_class_data_ =
        SelectionTable::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SelectionTable::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SelectionTable_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SelectionTable_class_data_.tc_table);
  return SelectionTable_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 4, 85, 2>
SelectionTable::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SelectionTable_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::SelectionTable>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.id_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.name_)}},
    // string description = 3 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.description_)}},
    // string category = 4 [json_name = "category"];
    {::_pbi::TcParser::FastUS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.category_)}},
    // .api.v1alpha1.SelectionTableType table_type = 5 [json_name = "tableType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SelectionTable, _impl_.table_type_), 7>(),
     {40, 7, 0, PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.table_type_)}},
    // .api.v1alpha1.DiceConfiguration dice_config = 6 [json_name = "diceConfig"];
    {::_pbi::TcParser::FastMtS1,
     {50, 4, 0, PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.dice_config_)}},
    // repeated .api.v1alpha1.TableEntry entries = 7 [json_name = "entries"];
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 1, PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.entries_)}},
    // .api.v1alpha1.SelectionTableMetadata metadata = 8 [json_name = "metadata"];
    {::_pbi::TcParser::FastMtS1,
     {66, 5, 2, PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.metadata_)}},
    // repeated string nested_table_ids = 9 [json_name = "nestedTableIds"];
    {::_pbi::TcParser::FastUR1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.nested_table_ids_)}},
    // .api.v1alpha1.TableOptions options = 10 [json_name = "options"];
    {::_pbi::TcParser::FastMtS1,
     {82, 6, 3, PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.options_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.name_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 3 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.description_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string category = 4 [json_name = "category"];
    {PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.category_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.SelectionTableType table_type = 5 [json_name = "tableType"];
    {PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.table_type_), _Internal::kHasBitsOffset + 7, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .api.v1alpha1.DiceConfiguration dice_config = 6 [json_name = "diceConfig"];
    {PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.dice_config_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .api.v1alpha1.TableEntry entries = 7 [json_name = "entries"];
    {PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.entries_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.SelectionTableMetadata metadata = 8 [json_name = "metadata"];
    {PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.metadata_), _Internal::kHasBitsOffset + 5, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string nested_table_ids = 9 [json_name = "nestedTableIds"];
    {PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.nested_table_ids_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .api.v1alpha1.TableOptions options = 10 [json_name = "options"];
    {PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.options_), _Internal::kHasBitsOffset + 6, 3, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::DiceConfiguration>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::TableEntry>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::SelectionTableMetadata>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::TableOptions>()},
  }},
  {{
    "\33\2\4\13\10\0\0\0\0\20\0\0\0\0\0\0"
    "api.v1alpha1.SelectionTable"
    "id"
    "name"
    "description"
    "category"
    "nested_table_ids"
  }},
};
PROTOBUF_NOINLINE void SelectionTable::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.SelectionTable)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entries_.Clear();
  _impl_.nested_table_ids_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.category_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(_impl_.dice_config_ != nullptr);
      _impl_.dice_config_->Clear();
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      ABSL_DCHECK(_impl_.metadata_ != nullptr);
      _impl_.metadata_->Clear();
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      ABSL_DCHECK(_impl_.options_ != nullptr);
      _impl_.options_->Clear();
    }
  }
  _impl_.table_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SelectionTable::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SelectionTable& this_ = static_cast<const SelectionTable&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SelectionTable::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SelectionTable& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.SelectionTable)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1 [json_name = "id"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_id().empty()) {
      const ::std::string& _s = this_._internal_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.SelectionTable.id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string name = 2 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.SelectionTable.name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string description = 3 [json_name = "description"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.SelectionTable.description");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string category = 4 [json_name = "category"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (!this_._internal_category().empty()) {
      const ::std::string& _s = this_._internal_category();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.SelectionTable.category");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // .api.v1alpha1.SelectionTableType table_type = 5 [json_name = "tableType"];
  if ((this_._impl_._has_bits_[0] & 0x00000080U) != 0) {
    if (this_._internal_table_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          5, this_._internal_table_type(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.DiceConfiguration dice_config = 6 [json_name = "diceConfig"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.dice_config_, this_._impl_.dice_config_->GetCachedSize(), target,
        stream);
  }

  // repeated .api.v1alpha1.TableEntry entries = 7 [json_name = "entries"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_entries_size());
       i < n; i++) {
    const auto& repfield = this_._internal_entries().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            7, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // .api.v1alpha1.SelectionTableMetadata metadata = 8 [json_name = "metadata"];
  if ((cached_has_bits & 0x00000020U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *this_._impl_.metadata_, this_._impl_.metadata_->GetCachedSize(), target,
        stream);
  }

  // repeated string nested_table_ids = 9 [json_name = "nestedTableIds"];
  for (int i = 0, n = this_._internal_nested_table_ids_size(); i < n; ++i) {
    const auto& s = this_._internal_nested_table_ids().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.SelectionTable.nested_table_ids");
    target = stream->WriteString(9, s, target);
  }

  // .api.v1alpha1.TableOptions options = 10 [json_name = "options"];
  if ((cached_has_bits & 0x00000040U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        10, *this_._impl_.options_, this_._impl_.options_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.SelectionTable)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SelectionTable::ByteSizeLong(const MessageLite& base) {
  const SelectionTable& this_ = static_cast<const SelectionTable&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SelectionTable::ByteSizeLong() const {
  const SelectionTable& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.SelectionTable)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.TableEntry entries = 7 [json_name = "entries"];
    {
      total_size += 1UL * this_._internal_entries_size();
      for (const auto& msg : this_._internal_entries()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated string nested_table_ids = 9 [json_name = "nestedTableIds"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_nested_table_ids().size());
      for (int i = 0, n = this_._internal_nested_table_ids().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_nested_table_ids().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    // string id = 1 [json_name = "id"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_id());
      }
    }
    // string name = 2 [json_name = "name"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string description = 3 [json_name = "description"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // string category = 4 [json_name = "category"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_category().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_category());
      }
    }
    // .api.v1alpha1.DiceConfiguration dice_config = 6 [json_name = "diceConfig"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.dice_config_);
    }
    // .api.v1alpha1.SelectionTableMetadata metadata = 8 [json_name = "metadata"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.metadata_);
    }
    // .api.v1alpha1.TableOptions options = 10 [json_name = "options"];
    if ((cached_has_bits & 0x00000040U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.options_);
    }
    // .api.v1alpha1.SelectionTableType table_type = 5 [json_name = "tableType"];
    if ((cached_has_bits & 0x00000080U) != 0) {
      if (this_._internal_table_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_table_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SelectionTable::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SelectionTable*>(&to_msg);
  auto& from = static_cast<const SelectionTable&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.SelectionTable)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entries()->MergeFrom(
      from._internal_entries());
  _this->_internal_mutable_nested_table_ids()->MergeFrom(from._internal_nested_table_ids());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_id().empty()) {
        _this->_internal_set_id(from._internal_id());
      } else {
        if (_this->_impl_.id_.IsDefault()) {
          _this->_internal_set_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_category().empty()) {
        _this->_internal_set_category(from._internal_category());
      } else {
        if (_this->_impl_.category_.IsDefault()) {
          _this->_internal_set_category("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(from._impl_.dice_config_ != nullptr);
      if (_this->_impl_.dice_config_ == nullptr) {
        _this->_impl_.dice_config_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dice_config_);
      } else {
        _this->_impl_.dice_config_->MergeFrom(*from._impl_.dice_config_);
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      ABSL_DCHECK(from._impl_.metadata_ != nullptr);
      if (_this->_impl_.metadata_ == nullptr) {
        _this->_impl_.metadata_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.metadata_);
      } else {
        _this->_impl_.metadata_->MergeFrom(*from._impl_.metadata_);
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      ABSL_DCHECK(from._impl_.options_ != nullptr);
      if (_this->_impl_.options_ == nullptr) {
        _this->_impl_.options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_);
      } else {
        _this->_impl_.options_->MergeFrom(*from._impl_.options_);
      }
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      if (from._internal_table_type() != 0) {
        _this->_impl_.table_type_ = from._impl_.table_type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SelectionTable::CopyFrom(const SelectionTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.SelectionTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SelectionTable::InternalSwap(SelectionTable* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.entries_.InternalSwap(&other->_impl_.entries_);
  _impl_.nested_table_ids_.InternalSwap(&other->_impl_.nested_table_ids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.table_type_)
      + sizeof(SelectionTable::_impl_.table_type_)
      - PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.dice_config_)>(
          reinterpret_cast<char*>(&_impl_.dice_config_),
          reinterpret_cast<char*>(&other->_impl_.dice_config_));
}

::google::protobuf::Metadata SelectionTable::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DiceConfiguration::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<DiceConfiguration>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DiceConfiguration, _impl_._has_bits_);
};

DiceConfiguration::DiceConfiguration(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DiceConfiguration_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.DiceConfiguration)
}
PROTOBUF_NDEBUG_INLINE DiceConfiguration::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::DiceConfiguration& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        reroll_on_{visibility, arena, from.reroll_on_},
        _reroll_on_cached_byte_size_{0},
        dice_notation_(arena, from.dice_notation_) {}

DiceConfiguration::DiceConfiguration(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DiceConfiguration& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DiceConfiguration_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DiceConfiguration* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, modifier_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, modifier_),
           offsetof(Impl_, exploding_dice_) -
               offsetof(Impl_, modifier_) +
               sizeof(Impl_::exploding_dice_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.DiceConfiguration)
}
PROTOBUF_NDEBUG_INLINE DiceConfiguration::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        reroll_on_{visibility, arena},
        _reroll_on_cached_byte_size_{0},
        dice_notation_(arena) {}

inline void DiceConfiguration::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, modifier_),
           0,
           offsetof(Impl_, exploding_dice_) -
               offsetof(Impl_, modifier_) +
               sizeof(Impl_::exploding_dice_));
}
DiceConfiguration::~DiceConfiguration() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.DiceConfiguration)
  SharedDtor(*this);
}
inline void DiceConfiguration::SharedDtor(MessageLite& self) {
  DiceConfiguration& this_ = static_cast<DiceConfiguration&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.dice_notation_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DiceConfiguration::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DiceConfiguration(arena);
}
constexpr auto DiceConfiguration::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DiceConfiguration, _impl_.reroll_on_) +
          decltype(DiceConfiguration::_impl_.reroll_on_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(DiceConfiguration), alignof(DiceConfiguration), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DiceConfiguration::PlacementNew_,
                                 sizeof(DiceConfiguration),
                                 alignof(DiceConfiguration));
  }
}
constexpr auto DiceConfiguration::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DiceConfiguration_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DiceConfiguration::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DiceConfiguration>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DiceConfiguration::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DiceConfiguration>(), &DiceConfiguration::ByteSizeLong,
              &DiceConfiguration::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DiceConfiguration, _impl_._cached_size_),
          false,
      },
      &DiceConfiguration::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull DiceConfiguration_class_data_ =
        DiceConfiguration::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
DiceConfiguration::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DiceConfiguration_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DiceConfiguration_class_data_.tc_table);
  return DiceConfiguration_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 52, 2>
DiceConfiguration::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DiceConfiguration, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    DiceConfiguration_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::DiceConfiguration>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string dice_notation = 1 [json_name = "diceNotation"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DiceConfiguration, _impl_.dice_notation_)}},
    // int32 modifier = 2 [json_name = "modifier"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DiceConfiguration, _impl_.modifier_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(DiceConfiguration, _impl_.modifier_)}},
    // int32 min_roll = 3 [json_name = "minRoll"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DiceConfiguration, _impl_.min_roll_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(DiceConfiguration, _impl_.min_roll_)}},
    // int32 max_roll = 4 [json_name = "maxRoll"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DiceConfiguration, _impl_.max_roll_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(DiceConfiguration, _impl_.max_roll_)}},
    // repeated int32 reroll_on = 5 [json_name = "rerollOn"];
    {::_pbi::TcParser::FastV32P1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(DiceConfiguration, _impl_.reroll_on_)}},
    // bool exploding_dice = 6 [json_name = "explodingDice"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DiceConfiguration, _impl_.exploding_dice_), 4>(),
     {48, 4, 0, PROTOBUF_FIELD_OFFSET(DiceConfiguration, _impl_.exploding_dice_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string dice_notation = 1 [json_name = "diceNotation"];
    {PROTOBUF_FIELD_OFFSET(DiceConfiguration, _impl_.dice_notation_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 modifier = 2 [json_name = "modifier"];
    {PROTOBUF_FIELD_OFFSET(DiceConfiguration, _impl_.modifier_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 min_roll = 3 [json_name = "minRoll"];
    {PROTOBUF_FIELD_OFFSET(DiceConfiguration, _impl_.min_roll_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 max_roll = 4 [json_name = "maxRoll"];
    {PROTOBUF_FIELD_OFFSET(DiceConfiguration, _impl_.max_roll_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated int32 reroll_on = 5 [json_name = "rerollOn"];
    {PROTOBUF_FIELD_OFFSET(DiceConfiguration, _impl_.reroll_on_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // bool exploding_dice = 6 [json_name = "explodingDice"];
    {PROTOBUF_FIELD_OFFSET(DiceConfiguration, _impl_.exploding_dice_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\36\15\0\0\0\0\0\0"
    "api.v1alpha1.DiceConfiguration"
    "dice_notation"
  }},
};
PROTOBUF_NOINLINE void DiceConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.DiceConfiguration)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reroll_on_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.dice_notation_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x0000001eU) != 0) {
    ::memset(&_impl_.modifier_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.exploding_dice_) -
        reinterpret_cast<char*>(&_impl_.modifier_)) + sizeof(_impl_.exploding_dice_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DiceConfiguration::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DiceConfiguration& this_ = static_cast<const DiceConfiguration&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DiceConfiguration::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DiceConfiguration& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.DiceConfiguration)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string dice_notation = 1 [json_name = "diceNotation"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_dice_notation().empty()) {
      const ::std::string& _s = this_._internal_dice_notation();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.DiceConfiguration.dice_notation");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // int32 modifier = 2 [json_name = "modifier"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_modifier() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_modifier(), target);
    }
  }

  // int32 min_roll = 3 [json_name = "minRoll"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_min_roll() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_min_roll(), target);
    }
  }

  // int32 max_roll = 4 [json_name = "maxRoll"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_max_roll() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_max_roll(), target);
    }
  }

  // repeated int32 reroll_on = 5 [json_name = "rerollOn"];
  {
    int byte_size = this_._impl_._reroll_on_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          5, this_._internal_reroll_on(), byte_size, target);
    }
  }

  // bool exploding_dice = 6 [json_name = "explodingDice"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_exploding_dice() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          6, this_._internal_exploding_dice(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.DiceConfiguration)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DiceConfiguration::ByteSizeLong(const MessageLite& base) {
  const DiceConfiguration& this_ = static_cast<const DiceConfiguration&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DiceConfiguration::ByteSizeLong() const {
  const DiceConfiguration& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.DiceConfiguration)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated int32 reroll_on = 5 [json_name = "rerollOn"];
    {
      total_size +=
          ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
              this_._internal_reroll_on(), 1,
              this_._impl_._reroll_on_cached_byte_size_);
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // string dice_notation = 1 [json_name = "diceNotation"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_dice_notation().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_dice_notation());
      }
    }
    // int32 modifier = 2 [json_name = "modifier"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_modifier() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_modifier());
      }
    }
    // int32 min_roll = 3 [json_name = "minRoll"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_min_roll() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_min_roll());
      }
    }
    // int32 max_roll = 4 [json_name = "maxRoll"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_max_roll() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_max_roll());
      }
    }
    // bool exploding_dice = 6 [json_name = "explodingDice"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_exploding_dice() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DiceConfiguration::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DiceConfiguration*>(&to_msg);
  auto& from = static_cast<const DiceConfiguration&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.DiceConfiguration)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_reroll_on()->MergeFrom(from._internal_reroll_on());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_dice_notation().empty()) {
        _this->_internal_set_dice_notation(from._internal_dice_notation());
      } else {
        if (_this->_impl_.dice_notation_.IsDefault()) {
          _this->_internal_set_dice_notation("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_modifier() != 0) {
        _this->_impl_.modifier_ = from._impl_.modifier_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_min_roll() != 0) {
        _this->_impl_.min_roll_ = from._impl_.min_roll_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_max_roll() != 0) {
        _this->_impl_.max_roll_ = from._impl_.max_roll_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_exploding_dice() != 0) {
        _this->_impl_.exploding_dice_ = from._impl_.exploding_dice_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DiceConfiguration::CopyFrom(const DiceConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.DiceConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DiceConfiguration::InternalSwap(DiceConfiguration* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.reroll_on_.InternalSwap(&other->_impl_.reroll_on_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dice_notation_, &other->_impl_.dice_notation_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DiceConfiguration, _impl_.exploding_dice_)
      + sizeof(DiceConfiguration::_impl_.exploding_dice_)
      - PROTOBUF_FIELD_OFFSET(DiceConfiguration, _impl_.modifier_)>(
          reinterpret_cast<char*>(&_impl_.modifier_),
          reinterpret_cast<char*>(&other->_impl_.modifier_));
}

::google::protobuf::Metadata DiceConfiguration::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TableEntry::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TableEntry>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TableEntry, _impl_._has_bits_);
};

TableEntry::TableEntry(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TableEntry_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.TableEntry)
}
PROTOBUF_NDEBUG_INLINE TableEntry::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::TableEntry& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        conditions_{visibility, arena, from.conditions_},
        id_(arena, from.id_),
        name_(arena, from.name_),
        description_(arena, from.description_) {}

TableEntry::TableEntry(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TableEntry& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TableEntry_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TableEntry* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.roll_range_ = ((cached_has_bits & 0x00000008U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.roll_range_)
                : nullptr;
  _impl_.result_ = ((cached_has_bits & 0x00000010U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.result_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, weight_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, weight_),
           offsetof(Impl_, max_selections_) -
               offsetof(Impl_, weight_) +
               sizeof(Impl_::max_selections_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.TableEntry)
}
PROTOBUF_NDEBUG_INLINE TableEntry::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        conditions_{visibility, arena},
        id_(arena),
        name_(arena),
        description_(arena) {}

inline void TableEntry::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, roll_range_),
           0,
           offsetof(Impl_, max_selections_) -
               offsetof(Impl_, roll_range_) +
               sizeof(Impl_::max_selections_));
}
TableEntry::~TableEntry() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.TableEntry)
  SharedDtor(*this);
}
inline void TableEntry::SharedDtor(MessageLite& self) {
  TableEntry& this_ = static_cast<TableEntry&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.description_.Destroy();
  delete this_._impl_.roll_range_;
  delete this_._impl_.result_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TableEntry::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TableEntry(arena);
}
constexpr auto TableEntry::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TableEntry, _impl_.conditions_) +
          decltype(TableEntry::_impl_.conditions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(TableEntry), alignof(TableEntry), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TableEntry::PlacementNew_,
                                 sizeof(TableEntry),
                                 alignof(TableEntry));
  }
}
constexpr auto TableEntry::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TableEntry_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TableEntry::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TableEntry>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TableEntry::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TableEntry>(), &TableEntry::ByteSizeLong,
              &TableEntry::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TableEntry, _impl_._cached_size_),
          false,
      },
      &TableEntry::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TableEntry_class_data_ =
        TableEntry::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TableEntry::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TableEntry_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TableEntry_class_data_.tc_table);
  return TableEntry_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 3, 57, 2>
TableEntry::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TableEntry, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TableEntry_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::TableEntry>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TableEntry, _impl_.id_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(TableEntry, _impl_.name_)}},
    // string description = 3 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(TableEntry, _impl_.description_)}},
    // .api.v1alpha1.RollRange roll_range = 4 [json_name = "rollRange"];
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(TableEntry, _impl_.roll_range_)}},
    // double weight = 5 [json_name = "weight"];
    {::_pbi::TcParser::FastF64S1,
     {41, 5, 0, PROTOBUF_FIELD_OFFSET(TableEntry, _impl_.weight_)}},
    // .api.v1alpha1.TableEntryResult result = 6 [json_name = "result"];
    {::_pbi::TcParser::FastMtS1,
     {50, 4, 1, PROTOBUF_FIELD_OFFSET(TableEntry, _impl_.result_)}},
    // repeated .api.v1alpha1.EntryCondition conditions = 7 [json_name = "conditions"];
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 2, PROTOBUF_FIELD_OFFSET(TableEntry, _impl_.conditions_)}},
    // bool allow_duplicates = 8 [json_name = "allowDuplicates"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TableEntry, _impl_.allow_duplicates_), 6>(),
     {64, 6, 0, PROTOBUF_FIELD_OFFSET(TableEntry, _impl_.allow_duplicates_)}},
    // int32 max_selections = 9 [json_name = "maxSelections"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TableEntry, _impl_.max_selections_), 7>(),
     {72, 7, 0, PROTOBUF_FIELD_OFFSET(TableEntry, _impl_.max_selections_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(TableEntry, _impl_.id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(TableEntry, _impl_.name_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 3 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(TableEntry, _impl_.description_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.RollRange roll_range = 4 [json_name = "rollRange"];
    {PROTOBUF_FIELD_OFFSET(TableEntry, _impl_.roll_range_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // double weight = 5 [json_name = "weight"];
    {PROTOBUF_FIELD_OFFSET(TableEntry, _impl_.weight_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // .api.v1alpha1.TableEntryResult result = 6 [json_name = "result"];
    {PROTOBUF_FIELD_OFFSET(TableEntry, _impl_.result_), _Internal::kHasBitsOffset + 4, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .api.v1alpha1.EntryCondition conditions = 7 [json_name = "conditions"];
    {PROTOBUF_FIELD_OFFSET(TableEntry, _impl_.conditions_), -1, 2, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool allow_duplicates = 8 [json_name = "allowDuplicates"];
    {PROTOBUF_FIELD_OFFSET(TableEntry, _impl_.allow_duplicates_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // int32 max_selections = 9 [json_name = "maxSelections"];
    {PROTOBUF_FIELD_OFFSET(TableEntry, _impl_.max_selections_), _Internal::kHasBitsOffset + 7, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RollRange>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::TableEntryResult>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::EntryCondition>()},
  }},
  {{
    "\27\2\4\13\0\0\0\0\0\0\0\0\0\0\0\0"
    "api.v1alpha1.TableEntry"
    "id"
    "name"
    "description"
  }},
};
PROTOBUF_NOINLINE void TableEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.TableEntry)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.conditions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(_impl_.roll_range_ != nullptr);
      _impl_.roll_range_->Clear();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(_impl_.result_ != nullptr);
      _impl_.result_->Clear();
    }
  }
  if ((cached_has_bits & 0x000000e0U) != 0) {
    ::memset(&_impl_.weight_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.max_selections_) -
        reinterpret_cast<char*>(&_impl_.weight_)) + sizeof(_impl_.max_selections_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TableEntry::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TableEntry& this_ = static_cast<const TableEntry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TableEntry::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TableEntry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.TableEntry)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1 [json_name = "id"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_id().empty()) {
      const ::std::string& _s = this_._internal_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TableEntry.id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string name = 2 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TableEntry.name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string description = 3 [json_name = "description"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TableEntry.description");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.RollRange roll_range = 4 [json_name = "rollRange"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.roll_range_, this_._impl_.roll_range_->GetCachedSize(), target,
        stream);
  }

  // double weight = 5 [json_name = "weight"];
  if ((cached_has_bits & 0x00000020U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_weight()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          5, this_._internal_weight(), target);
    }
  }

  // .api.v1alpha1.TableEntryResult result = 6 [json_name = "result"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.result_, this_._impl_.result_->GetCachedSize(), target,
        stream);
  }

  // repeated .api.v1alpha1.EntryCondition conditions = 7 [json_name = "conditions"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_conditions_size());
       i < n; i++) {
    const auto& repfield = this_._internal_conditions().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            7, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // bool allow_duplicates = 8 [json_name = "allowDuplicates"];
  if ((cached_has_bits & 0x00000040U) != 0) {
    if (this_._internal_allow_duplicates() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          8, this_._internal_allow_duplicates(), target);
    }
  }

  // int32 max_selections = 9 [json_name = "maxSelections"];
  if ((cached_has_bits & 0x00000080U) != 0) {
    if (this_._internal_max_selections() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<9>(
              stream, this_._internal_max_selections(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.TableEntry)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TableEntry::ByteSizeLong(const MessageLite& base) {
  const TableEntry& this_ = static_cast<const TableEntry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TableEntry::ByteSizeLong() const {
  const TableEntry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.TableEntry)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.EntryCondition conditions = 7 [json_name = "conditions"];
    {
      total_size += 1UL * this_._internal_conditions_size();
      for (const auto& msg : this_._internal_conditions()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    // string id = 1 [json_name = "id"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_id());
      }
    }
    // string name = 2 [json_name = "name"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string description = 3 [json_name = "description"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // .api.v1alpha1.RollRange roll_range = 4 [json_name = "rollRange"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.roll_range_);
    }
    // .api.v1alpha1.TableEntryResult result = 6 [json_name = "result"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.result_);
    }
    // double weight = 5 [json_name = "weight"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_weight()) != 0) {
        total_size += 9;
      }
    }
    // bool allow_duplicates = 8 [json_name = "allowDuplicates"];
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (this_._internal_allow_duplicates() != 0) {
        total_size += 2;
      }
    }
    // int32 max_selections = 9 [json_name = "maxSelections"];
    if ((cached_has_bits & 0x00000080U) != 0) {
      if (this_._internal_max_selections() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_max_selections());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TableEntry::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TableEntry*>(&to_msg);
  auto& from = static_cast<const TableEntry&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.TableEntry)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_conditions()->MergeFrom(
      from._internal_conditions());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_id().empty()) {
        _this->_internal_set_id(from._internal_id());
      } else {
        if (_this->_impl_.id_.IsDefault()) {
          _this->_internal_set_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(from._impl_.roll_range_ != nullptr);
      if (_this->_impl_.roll_range_ == nullptr) {
        _this->_impl_.roll_range_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.roll_range_);
      } else {
        _this->_impl_.roll_range_->MergeFrom(*from._impl_.roll_range_);
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(from._impl_.result_ != nullptr);
      if (_this->_impl_.result_ == nullptr) {
        _this->_impl_.result_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.result_);
      } else {
        _this->_impl_.result_->MergeFrom(*from._impl_.result_);
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_weight()) != 0) {
        _this->_impl_.weight_ = from._impl_.weight_;
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (from._internal_allow_duplicates() != 0) {
        _this->_impl_.allow_duplicates_ = from._impl_.allow_duplicates_;
      }
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      if (from._internal_max_selections() != 0) {
        _this->_impl_.max_selections_ = from._impl_.max_selections_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TableEntry::CopyFrom(const TableEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.TableEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TableEntry::InternalSwap(TableEntry* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.conditions_.InternalSwap(&other->_impl_.conditions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TableEntry, _impl_.max_selections_)
      + sizeof(TableEntry::_impl_.max_selections_)
      - PROTOBUF_FIELD_OFFSET(TableEntry, _impl_.roll_range_)>(
          reinterpret_cast<char*>(&_impl_.roll_range_),
          reinterpret_cast<char*>(&other->_impl_.roll_range_));
}

::google::protobuf::Metadata TableEntry::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RollRange::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RollRange>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RollRange, _impl_._has_bits_);
};

RollRange::RollRange(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RollRange_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.RollRange)
}
RollRange::RollRange(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RollRange& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RollRange_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE RollRange::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void RollRange::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, min_),
           0,
           offsetof(Impl_, max_) -
               offsetof(Impl_, min_) +
               sizeof(Impl_::max_));
}
RollRange::~RollRange() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.RollRange)
  SharedDtor(*this);
}
inline void RollRange::SharedDtor(MessageLite& self) {
  RollRange& this_ = static_cast<RollRange&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RollRange::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RollRange(arena);
}
constexpr auto RollRange::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RollRange),
                                            alignof(RollRange));
}
constexpr auto RollRange::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RollRange_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RollRange::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RollRange>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RollRange::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RollRange>(), &RollRange::ByteSizeLong,
              &RollRange::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RollRange, _impl_._cached_size_),
          false,
      },
      &RollRange::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RollRange_class_data_ =
        RollRange::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RollRange::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RollRange_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RollRange_class_data_.tc_table);
  return RollRange_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
RollRange::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RollRange, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RollRange_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::RollRange>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 max = 2 [json_name = "max"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RollRange, _impl_.max_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(RollRange, _impl_.max_)}},
    // int32 min = 1 [json_name = "min"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RollRange, _impl_.min_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(RollRange, _impl_.min_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 min = 1 [json_name = "min"];
    {PROTOBUF_FIELD_OFFSET(RollRange, _impl_.min_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 max = 2 [json_name = "max"];
    {PROTOBUF_FIELD_OFFSET(RollRange, _impl_.max_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void RollRange::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.RollRange)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    ::memset(&_impl_.min_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.max_) -
        reinterpret_cast<char*>(&_impl_.min_)) + sizeof(_impl_.max_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RollRange::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RollRange& this_ = static_cast<const RollRange&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RollRange::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RollRange& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.RollRange)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 min = 1 [json_name = "min"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_min() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_min(), target);
    }
  }

  // int32 max = 2 [json_name = "max"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_max() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_max(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.RollRange)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RollRange::ByteSizeLong(const MessageLite& base) {
  const RollRange& this_ = static_cast<const RollRange&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RollRange::ByteSizeLong() const {
  const RollRange& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.RollRange)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // int32 min = 1 [json_name = "min"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_min() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_min());
      }
    }
    // int32 max = 2 [json_name = "max"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_max() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_max());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RollRange::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RollRange*>(&to_msg);
  auto& from = static_cast<const RollRange&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.RollRange)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (from._internal_min() != 0) {
        _this->_impl_.min_ = from._impl_.min_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_max() != 0) {
        _this->_impl_.max_ = from._impl_.max_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RollRange::CopyFrom(const RollRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.RollRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RollRange::InternalSwap(RollRange* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RollRange, _impl_.max_)
      + sizeof(RollRange::_impl_.max_)
      - PROTOBUF_FIELD_OFFSET(RollRange, _impl_.min_)>(
          reinterpret_cast<char*>(&_impl_.min_),
          reinterpret_cast<char*>(&other->_impl_.min_));
}

::google::protobuf::Metadata RollRange::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TableEntryResult::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TableEntryResult>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TableEntryResult, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TableEntryResult, _impl_._oneof_case_);
};

void TableEntryResult::set_allocated_item_result(::api::v1alpha1::ItemResult* PROTOBUF_NULLABLE item_result) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_result_data();
  if (item_result) {
    ::google::protobuf::Arena* submessage_arena = item_result->GetArena();
    if (message_arena != submessage_arena) {
      item_result = ::google::protobuf::internal::GetOwnedMessage(message_arena, item_result, submessage_arena);
    }
    set_has_item_result();
    _impl_.result_data_.item_result_ = item_result;
  }
  // @@protoc_insertion_point(field_set_allocated:api.v1alpha1.TableEntryResult.item_result)
}
void TableEntryResult::set_allocated_entity_result(::api::v1alpha1::EntityResult* PROTOBUF_NULLABLE entity_result) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_result_data();
  if (entity_result) {
    ::google::protobuf::Arena* submessage_arena = entity_result->GetArena();
    if (message_arena != submessage_arena) {
      entity_result = ::google::protobuf::internal::GetOwnedMessage(message_arena, entity_result, submessage_arena);
    }
    set_has_entity_result();
    _impl_.result_data_.entity_result_ = entity_result;
  }
  // @@protoc_insertion_point(field_set_allocated:api.v1alpha1.TableEntryResult.entity_result)
}
void TableEntryResult::set_allocated_nested_table_result(::api::v1alpha1::NestedTableResult* PROTOBUF_NULLABLE nested_table_result) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_result_data();
  if (nested_table_result) {
    ::google::protobuf::Arena* submessage_arena = nested_table_result->GetArena();
    if (message_arena != submessage_arena) {
      nested_table_result = ::google::protobuf::internal::GetOwnedMessage(message_arena, nested_table_result, submessage_arena);
    }
    set_has_nested_table_result();
    _impl_.result_data_.nested_table_result_ = nested_table_result;
  }
  // @@protoc_insertion_point(field_set_allocated:api.v1alpha1.TableEntryResult.nested_table_result)
}
void TableEntryResult::set_allocated_text_result(::api::v1alpha1::TextResult* PROTOBUF_NULLABLE text_result) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_result_data();
  if (text_result) {
    ::google::protobuf::Arena* submessage_arena = text_result->GetArena();
    if (message_arena != submessage_arena) {
      text_result = ::google::protobuf::internal::GetOwnedMessage(message_arena, text_result, submessage_arena);
    }
    set_has_text_result();
    _impl_.result_data_.text_result_ = text_result;
  }
  // @@protoc_insertion_point(field_set_allocated:api.v1alpha1.TableEntryResult.text_result)
}
void TableEntryResult::set_allocated_effect_result(::api::v1alpha1::EffectResult* PROTOBUF_NULLABLE effect_result) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_result_data();
  if (effect_result) {
    ::google::protobuf::Arena* submessage_arena = effect_result->GetArena();
    if (message_arena != submessage_arena) {
      effect_result = ::google::protobuf::internal::GetOwnedMessage(message_arena, effect_result, submessage_arena);
    }
    set_has_effect_result();
    _impl_.result_data_.effect_result_ = effect_result;
  }
  // @@protoc_insertion_point(field_set_allocated:api.v1alpha1.TableEntryResult.effect_result)
}
void TableEntryResult::set_allocated_multiple_result(::api::v1alpha1::MultipleResult* PROTOBUF_NULLABLE multiple_result) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_result_data();
  if (multiple_result) {
    ::google::protobuf::Arena* submessage_arena = multiple_result->GetArena();
    if (message_arena != submessage_arena) {
      multiple_result = ::google::protobuf::internal::GetOwnedMessage(message_arena, multiple_result, submessage_arena);
    }
    set_has_multiple_result();
    _impl_.result_data_.multiple_result_ = multiple_result;
  }
  // @@protoc_insertion_point(field_set_allocated:api.v1alpha1.TableEntryResult.multiple_result)
}
TableEntryResult::TableEntryResult(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TableEntryResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.TableEntryResult)
}
PROTOBUF_NDEBUG_INLINE TableEntryResult::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::TableEntryResult& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        result_data_{},
        _oneof_case_{from._oneof_case_[0]} {}

TableEntryResult::TableEntryResult(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TableEntryResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TableEntryResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TableEntryResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.result_type_ = from._impl_.result_type_;
  switch (result_data_case()) {
    case RESULT_DATA_NOT_SET:
      break;
      case kItemResult:
        _impl_.result_data_.item_result_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.result_data_.item_result_);
        break;
      case kEntityResult:
        _impl_.result_data_.entity_result_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.result_data_.entity_result_);
        break;
      case kNestedTableResult:
        _impl_.result_data_.nested_table_result_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.result_data_.nested_table_result_);
        break;
      case kTextResult:
        _impl_.result_data_.text_result_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.result_data_.text_result_);
        break;
      case kEffectResult:
        _impl_.result_data_.effect_result_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.result_data_.effect_result_);
        break;
      case kMultipleResult:
        _impl_.result_data_.multiple_result_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.result_data_.multiple_result_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.TableEntryResult)
}
PROTOBUF_NDEBUG_INLINE TableEntryResult::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        result_data_{},
        _oneof_case_{} {}

inline void TableEntryResult::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_type_ = {};
}
TableEntryResult::~TableEntryResult() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.TableEntryResult)
  SharedDtor(*this);
}
inline void TableEntryResult::SharedDtor(MessageLite& self) {
  TableEntryResult& this_ = static_cast<TableEntryResult&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_result_data()) {
    this_.clear_result_data();
  }
  this_._impl_.~Impl_();
}

void TableEntryResult::clear_result_data() {
// @@protoc_insertion_point(one_of_clear_start:api.v1alpha1.TableEntryResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (result_data_case()) {
    case kItemResult: {
      if (GetArena() == nullptr) {
        delete _impl_.result_data_.item_result_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.result_data_.item_result_);
      }
      break;
    }
    case kEntityResult: {
      if (GetArena() == nullptr) {
        delete _impl_.result_data_.entity_result_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.result_data_.entity_result_);
      }
      break;
    }
    case kNestedTableResult: {
      if (GetArena() == nullptr) {
        delete _impl_.result_data_.nested_table_result_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.result_data_.nested_table_result_);
      }
      break;
    }
    case kTextResult: {
      if (GetArena() == nullptr) {
        delete _impl_.result_data_.text_result_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.result_data_.text_result_);
      }
      break;
    }
    case kEffectResult: {
      if (GetArena() == nullptr) {
        delete _impl_.result_data_.effect_result_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.result_data_.effect_result_);
      }
      break;
    }
    case kMultipleResult: {
      if (GetArena() == nullptr) {
        delete _impl_.result_data_.multiple_result_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.result_data_.multiple_result_);
      }
      break;
    }
    case RESULT_DATA_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = RESULT_DATA_NOT_SET;
}


inline void* PROTOBUF_NONNULL TableEntryResult::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TableEntryResult(arena);
}
constexpr auto TableEntryResult::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TableEntryResult),
                                            alignof(TableEntryResult));
}
constexpr auto TableEntryResult::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TableEntryResult_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TableEntryResult::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TableEntryResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TableEntryResult::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TableEntryResult>(), &TableEntryResult::ByteSizeLong,
              &TableEntryResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TableEntryResult, _impl_._cached_size_),
          false,
      },
      &TableEntryResult::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TableEntryResult_class_data_ =
        TableEntryResult::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TableEntryResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TableEntryResult_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TableEntryResult_class_data_.tc_table);
  return TableEntryResult_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 7, 6, 0, 2>
TableEntryResult::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TableEntryResult, _impl_._has_bits_),
    0, // no _extensions_
    7, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TableEntryResult_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::TableEntryResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .api.v1alpha1.TableEntryResultType result_type = 1 [json_name = "resultType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TableEntryResult, _impl_.result_type_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(TableEntryResult, _impl_.result_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .api.v1alpha1.TableEntryResultType result_type = 1 [json_name = "resultType"];
    {PROTOBUF_FIELD_OFFSET(TableEntryResult, _impl_.result_type_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .api.v1alpha1.ItemResult item_result = 2 [json_name = "itemResult"];
    {PROTOBUF_FIELD_OFFSET(TableEntryResult, _impl_.result_data_.item_result_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.EntityResult entity_result = 3 [json_name = "entityResult"];
    {PROTOBUF_FIELD_OFFSET(TableEntryResult, _impl_.result_data_.entity_result_), _Internal::kOneofCaseOffset + 0, 1, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.NestedTableResult nested_table_result = 4 [json_name = "nestedTableResult"];
    {PROTOBUF_FIELD_OFFSET(TableEntryResult, _impl_.result_data_.nested_table_result_), _Internal::kOneofCaseOffset + 0, 2, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.TextResult text_result = 5 [json_name = "textResult"];
    {PROTOBUF_FIELD_OFFSET(TableEntryResult, _impl_.result_data_.text_result_), _Internal::kOneofCaseOffset + 0, 3, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.EffectResult effect_result = 6 [json_name = "effectResult"];
    {PROTOBUF_FIELD_OFFSET(TableEntryResult, _impl_.result_data_.effect_result_), _Internal::kOneofCaseOffset + 0, 4, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.MultipleResult multiple_result = 7 [json_name = "multipleResult"];
    {PROTOBUF_FIELD_OFFSET(TableEntryResult, _impl_.result_data_.multiple_result_), _Internal::kOneofCaseOffset + 0, 5, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::ItemResult>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::EntityResult>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::NestedTableResult>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::TextResult>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::EffectResult>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::MultipleResult>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void TableEntryResult::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.TableEntryResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_type_ = 0;
  clear_result_data();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TableEntryResult::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TableEntryResult& this_ = static_cast<const TableEntryResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TableEntryResult::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TableEntryResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.TableEntryResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .api.v1alpha1.TableEntryResultType result_type = 1 [json_name = "resultType"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_result_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_result_type(), target);
    }
  }

  switch (this_.result_data_case()) {
    case kItemResult: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *this_._impl_.result_data_.item_result_, this_._impl_.result_data_.item_result_->GetCachedSize(), target,
          stream);
      break;
    }
    case kEntityResult: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *this_._impl_.result_data_.entity_result_, this_._impl_.result_data_.entity_result_->GetCachedSize(), target,
          stream);
      break;
    }
    case kNestedTableResult: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *this_._impl_.result_data_.nested_table_result_, this_._impl_.result_data_.nested_table_result_->GetCachedSize(), target,
          stream);
      break;
    }
    case kTextResult: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, *this_._impl_.result_data_.text_result_, this_._impl_.result_data_.text_result_->GetCachedSize(), target,
          stream);
      break;
    }
    case kEffectResult: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, *this_._impl_.result_data_.effect_result_, this_._impl_.result_data_.effect_result_->GetCachedSize(), target,
          stream);
      break;
    }
    case kMultipleResult: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          7, *this_._impl_.result_data_.multiple_result_, this_._impl_.result_data_.multiple_result_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.TableEntryResult)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TableEntryResult::ByteSizeLong(const MessageLite& base) {
  const TableEntryResult& this_ = static_cast<const TableEntryResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TableEntryResult::ByteSizeLong() const {
  const TableEntryResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.TableEntryResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .api.v1alpha1.TableEntryResultType result_type = 1 [json_name = "resultType"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_result_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_result_type());
      }
    }
  }
  switch (this_.result_data_case()) {
    // .api.v1alpha1.ItemResult item_result = 2 [json_name = "itemResult"];
    case kItemResult: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.result_data_.item_result_);
      break;
    }
    // .api.v1alpha1.EntityResult entity_result = 3 [json_name = "entityResult"];
    case kEntityResult: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.result_data_.entity_result_);
      break;
    }
    // .api.v1alpha1.NestedTableResult nested_table_result = 4 [json_name = "nestedTableResult"];
    case kNestedTableResult: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.result_data_.nested_table_result_);
      break;
    }
    // .api.v1alpha1.TextResult text_result = 5 [json_name = "textResult"];
    case kTextResult: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.result_data_.text_result_);
      break;
    }
    // .api.v1alpha1.EffectResult effect_result = 6 [json_name = "effectResult"];
    case kEffectResult: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.result_data_.effect_result_);
      break;
    }
    // .api.v1alpha1.MultipleResult multiple_result = 7 [json_name = "multipleResult"];
    case kMultipleResult: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.result_data_.multiple_result_);
      break;
    }
    case RESULT_DATA_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TableEntryResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TableEntryResult*>(&to_msg);
  auto& from = static_cast<const TableEntryResult&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.TableEntryResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (from._internal_result_type() != 0) {
      _this->_impl_.result_type_ = from._impl_.result_type_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_result_data();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kItemResult: {
        if (oneof_needs_init) {
          _this->_impl_.result_data_.item_result_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.result_data_.item_result_);
        } else {
          _this->_impl_.result_data_.item_result_->MergeFrom(*from._impl_.result_data_.item_result_);
        }
        break;
      }
      case kEntityResult: {
        if (oneof_needs_init) {
          _this->_impl_.result_data_.entity_result_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.result_data_.entity_result_);
        } else {
          _this->_impl_.result_data_.entity_result_->MergeFrom(*from._impl_.result_data_.entity_result_);
        }
        break;
      }
      case kNestedTableResult: {
        if (oneof_needs_init) {
          _this->_impl_.result_data_.nested_table_result_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.result_data_.nested_table_result_);
        } else {
          _this->_impl_.result_data_.nested_table_result_->MergeFrom(*from._impl_.result_data_.nested_table_result_);
        }
        break;
      }
      case kTextResult: {
        if (oneof_needs_init) {
          _this->_impl_.result_data_.text_result_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.result_data_.text_result_);
        } else {
          _this->_impl_.result_data_.text_result_->MergeFrom(*from._impl_.result_data_.text_result_);
        }
        break;
      }
      case kEffectResult: {
        if (oneof_needs_init) {
          _this->_impl_.result_data_.effect_result_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.result_data_.effect_result_);
        } else {
          _this->_impl_.result_data_.effect_result_->MergeFrom(*from._impl_.result_data_.effect_result_);
        }
        break;
      }
      case kMultipleResult: {
        if (oneof_needs_init) {
          _this->_impl_.result_data_.multiple_result_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.result_data_.multiple_result_);
        } else {
          _this->_impl_.result_data_.multiple_result_->MergeFrom(*from._impl_.result_data_.multiple_result_);
        }
        break;
      }
      case RESULT_DATA_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TableEntryResult::CopyFrom(const TableEntryResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.TableEntryResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TableEntryResult::InternalSwap(TableEntryResult* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.result_type_, other->_impl_.result_type_);
  swap(_impl_.result_data_, other->_impl_.result_data_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata TableEntryResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
ItemResult_PropertiesEntry_DoNotUse::ItemResult_PropertiesEntry_DoNotUse()
    : SuperType(ItemResult_PropertiesEntry_DoNotUse_class_data_.base()) {}
ItemResult_PropertiesEntry_DoNotUse::ItemResult_PropertiesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, ItemResult_PropertiesEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
ItemResult_PropertiesEntry_DoNotUse::ItemResult_PropertiesEntry_DoNotUse() : SuperType() {}
ItemResult_PropertiesEntry_DoNotUse::ItemResult_PropertiesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL ItemResult_PropertiesEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ItemResult_PropertiesEntry_DoNotUse(arena);
}
constexpr auto ItemResult_PropertiesEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ItemResult_PropertiesEntry_DoNotUse),
                                            alignof(ItemResult_PropertiesEntry_DoNotUse));
}
constexpr auto ItemResult_PropertiesEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ItemResult_PropertiesEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ItemResult_PropertiesEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ItemResult_PropertiesEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ItemResult_PropertiesEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&ItemResult_PropertiesEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ItemResult_PropertiesEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &ItemResult_PropertiesEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ItemResult_PropertiesEntry_DoNotUse_class_data_ =
        ItemResult_PropertiesEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ItemResult_PropertiesEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ItemResult_PropertiesEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ItemResult_PropertiesEntry_DoNotUse_class_data_.tc_table);
  return ItemResult_PropertiesEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 56, 2>
ItemResult_PropertiesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ItemResult_PropertiesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ItemResult_PropertiesEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::ItemResult_PropertiesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(ItemResult_PropertiesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ItemResult_PropertiesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(ItemResult_PropertiesEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(ItemResult_PropertiesEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\47\3\5\0\0\0\0\0"
    "api.v1alpha1.ItemResult.PropertiesEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class ItemResult::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ItemResult>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ItemResult, _impl_._has_bits_);
};

ItemResult::ItemResult(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ItemResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.ItemResult)
}
PROTOBUF_NDEBUG_INLINE ItemResult::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::ItemResult& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        properties_{visibility, arena, from.properties_},
        item_id_(arena, from.item_id_),
        item_name_(arena, from.item_name_),
        rarity_(arena, from.rarity_),
        condition_(arena, from.condition_) {}

ItemResult::ItemResult(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ItemResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ItemResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ItemResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.quantity_ = ((cached_has_bits & 0x00000010U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.quantity_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, value_gp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, value_gp_),
           offsetof(Impl_, is_magical_) -
               offsetof(Impl_, value_gp_) +
               sizeof(Impl_::is_magical_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.ItemResult)
}
PROTOBUF_NDEBUG_INLINE ItemResult::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        properties_{visibility, arena},
        item_id_(arena),
        item_name_(arena),
        rarity_(arena),
        condition_(arena) {}

inline void ItemResult::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, quantity_),
           0,
           offsetof(Impl_, is_magical_) -
               offsetof(Impl_, quantity_) +
               sizeof(Impl_::is_magical_));
}
ItemResult::~ItemResult() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.ItemResult)
  SharedDtor(*this);
}
inline void ItemResult::SharedDtor(MessageLite& self) {
  ItemResult& this_ = static_cast<ItemResult&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.item_id_.Destroy();
  this_._impl_.item_name_.Destroy();
  this_._impl_.rarity_.Destroy();
  this_._impl_.condition_.Destroy();
  delete this_._impl_.quantity_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ItemResult::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ItemResult(arena);
}
constexpr auto ItemResult::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ItemResult, _impl_.properties_) +
          decltype(ItemResult::_impl_.properties_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ItemResult, _impl_.properties_) +
          decltype(ItemResult::_impl_.properties_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ItemResult), alignof(ItemResult), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ItemResult::PlacementNew_,
                                 sizeof(ItemResult),
                                 alignof(ItemResult));
  }
}
constexpr auto ItemResult::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ItemResult_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ItemResult::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ItemResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ItemResult::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ItemResult>(), &ItemResult::ByteSizeLong,
              &ItemResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ItemResult, _impl_._cached_size_),
          false,
      },
      &ItemResult::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ItemResult_class_data_ =
        ItemResult::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ItemResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ItemResult_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ItemResult_class_data_.tc_table);
  return ItemResult_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 2, 81, 2>
ItemResult::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ItemResult, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ItemResult_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::ItemResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string condition = 8 [json_name = "condition"];
    {::_pbi::TcParser::FastUS1,
     {66, 3, 0, PROTOBUF_FIELD_OFFSET(ItemResult, _impl_.condition_)}},
    // string item_id = 1 [json_name = "itemId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ItemResult, _impl_.item_id_)}},
    // string item_name = 2 [json_name = "itemName"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(ItemResult, _impl_.item_name_)}},
    // .api.v1alpha1.QuantityRange quantity = 3 [json_name = "quantity"];
    {::_pbi::TcParser::FastMtS1,
     {26, 4, 0, PROTOBUF_FIELD_OFFSET(ItemResult, _impl_.quantity_)}},
    // string rarity = 4 [json_name = "rarity"];
    {::_pbi::TcParser::FastUS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(ItemResult, _impl_.rarity_)}},
    // int32 value_gp = 5 [json_name = "valueGp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ItemResult, _impl_.value_gp_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(ItemResult, _impl_.value_gp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool is_magical = 7 [json_name = "isMagical"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ItemResult, _impl_.is_magical_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(ItemResult, _impl_.is_magical_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string item_id = 1 [json_name = "itemId"];
    {PROTOBUF_FIELD_OFFSET(ItemResult, _impl_.item_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string item_name = 2 [json_name = "itemName"];
    {PROTOBUF_FIELD_OFFSET(ItemResult, _impl_.item_name_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.QuantityRange quantity = 3 [json_name = "quantity"];
    {PROTOBUF_FIELD_OFFSET(ItemResult, _impl_.quantity_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string rarity = 4 [json_name = "rarity"];
    {PROTOBUF_FIELD_OFFSET(ItemResult, _impl_.rarity_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 value_gp = 5 [json_name = "valueGp"];
    {PROTOBUF_FIELD_OFFSET(ItemResult, _impl_.value_gp_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // map<string, string> properties = 6 [json_name = "properties"];
    {PROTOBUF_FIELD_OFFSET(ItemResult, _impl_.properties_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // bool is_magical = 7 [json_name = "isMagical"];
    {PROTOBUF_FIELD_OFFSET(ItemResult, _impl_.is_magical_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string condition = 8 [json_name = "condition"];
    {PROTOBUF_FIELD_OFFSET(ItemResult, _impl_.condition_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::QuantityRange>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\27\7\11\0\6\0\12\0\11\0\0\0\0\0\0\0"
    "api.v1alpha1.ItemResult"
    "item_id"
    "item_name"
    "rarity"
    "properties"
    "condition"
  }},
};
PROTOBUF_NOINLINE void ItemResult::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.ItemResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.properties_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.item_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.item_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.rarity_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.condition_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(_impl_.quantity_ != nullptr);
      _impl_.quantity_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000060U) != 0) {
    ::memset(&_impl_.value_gp_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_magical_) -
        reinterpret_cast<char*>(&_impl_.value_gp_)) + sizeof(_impl_.is_magical_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ItemResult::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ItemResult& this_ = static_cast<const ItemResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ItemResult::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ItemResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.ItemResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string item_id = 1 [json_name = "itemId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_item_id().empty()) {
      const ::std::string& _s = this_._internal_item_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.ItemResult.item_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string item_name = 2 [json_name = "itemName"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_item_name().empty()) {
      const ::std::string& _s = this_._internal_item_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.ItemResult.item_name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.QuantityRange quantity = 3 [json_name = "quantity"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.quantity_, this_._impl_.quantity_->GetCachedSize(), target,
        stream);
  }

  // string rarity = 4 [json_name = "rarity"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    if (!this_._internal_rarity().empty()) {
      const ::std::string& _s = this_._internal_rarity();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.ItemResult.rarity");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // int32 value_gp = 5 [json_name = "valueGp"];
  if ((cached_has_bits & 0x00000020U) != 0) {
    if (this_._internal_value_gp() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
              stream, this_._internal_value_gp(), target);
    }
  }

  // map<string, string> properties = 6 [json_name = "properties"];
  if (!this_._internal_properties().empty()) {
    using MapType = ::google::protobuf::Map<::std::string, ::std::string>;
    using WireHelper = _pbi::MapEntryFuncs<::std::string, ::std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_properties();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.ItemResult.properties");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.ItemResult.properties");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.ItemResult.properties");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.ItemResult.properties");
      }
    }
  }

  // bool is_magical = 7 [json_name = "isMagical"];
  if ((cached_has_bits & 0x00000040U) != 0) {
    if (this_._internal_is_magical() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          7, this_._internal_is_magical(), target);
    }
  }

  // string condition = 8 [json_name = "condition"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    if (!this_._internal_condition().empty()) {
      const ::std::string& _s = this_._internal_condition();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.ItemResult.condition");
      target = stream->WriteStringMaybeAliased(8, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.ItemResult)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ItemResult::ByteSizeLong(const MessageLite& base) {
  const ItemResult& this_ = static_cast<const ItemResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ItemResult::ByteSizeLong() const {
  const ItemResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.ItemResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, string> properties = 6 [json_name = "properties"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_properties_size());
      for (const auto& entry : this_._internal_properties()) {
        total_size += _pbi::MapEntryFuncs<::std::string, ::std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    // string item_id = 1 [json_name = "itemId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_item_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_item_id());
      }
    }
    // string item_name = 2 [json_name = "itemName"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_item_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_item_name());
      }
    }
    // string rarity = 4 [json_name = "rarity"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_rarity().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_rarity());
      }
    }
    // string condition = 8 [json_name = "condition"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_condition().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_condition());
      }
    }
    // .api.v1alpha1.QuantityRange quantity = 3 [json_name = "quantity"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.quantity_);
    }
    // int32 value_gp = 5 [json_name = "valueGp"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_value_gp() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_value_gp());
      }
    }
    // bool is_magical = 7 [json_name = "isMagical"];
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (this_._internal_is_magical() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ItemResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ItemResult*>(&to_msg);
  auto& from = static_cast<const ItemResult&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.ItemResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.properties_.MergeFrom(from._impl_.properties_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_item_id().empty()) {
        _this->_internal_set_item_id(from._internal_item_id());
      } else {
        if (_this->_impl_.item_id_.IsDefault()) {
          _this->_internal_set_item_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_item_name().empty()) {
        _this->_internal_set_item_name(from._internal_item_name());
      } else {
        if (_this->_impl_.item_name_.IsDefault()) {
          _this->_internal_set_item_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_rarity().empty()) {
        _this->_internal_set_rarity(from._internal_rarity());
      } else {
        if (_this->_impl_.rarity_.IsDefault()) {
          _this->_internal_set_rarity("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_condition().empty()) {
        _this->_internal_set_condition(from._internal_condition());
      } else {
        if (_this->_impl_.condition_.IsDefault()) {
          _this->_internal_set_condition("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(from._impl_.quantity_ != nullptr);
      if (_this->_impl_.quantity_ == nullptr) {
        _this->_impl_.quantity_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.quantity_);
      } else {
        _this->_impl_.quantity_->MergeFrom(*from._impl_.quantity_);
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_value_gp() != 0) {
        _this->_impl_.value_gp_ = from._impl_.value_gp_;
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (from._internal_is_magical() != 0) {
        _this->_impl_.is_magical_ = from._impl_.is_magical_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ItemResult::CopyFrom(const ItemResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.ItemResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ItemResult::InternalSwap(ItemResult* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.properties_.InternalSwap(&other->_impl_.properties_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.item_id_, &other->_impl_.item_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.item_name_, &other->_impl_.item_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.rarity_, &other->_impl_.rarity_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.condition_, &other->_impl_.condition_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ItemResult, _impl_.is_magical_)
      + sizeof(ItemResult::_impl_.is_magical_)
      - PROTOBUF_FIELD_OFFSET(ItemResult, _impl_.quantity_)>(
          reinterpret_cast<char*>(&_impl_.quantity_),
          reinterpret_cast<char*>(&other->_impl_.quantity_));
}

::google::protobuf::Metadata ItemResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QuantityRange::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<QuantityRange>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QuantityRange, _impl_._has_bits_);
};

QuantityRange::QuantityRange(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, QuantityRange_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.QuantityRange)
}
PROTOBUF_NDEBUG_INLINE QuantityRange::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::QuantityRange& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        dice_notation_(arena, from.dice_notation_) {}

QuantityRange::QuantityRange(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const QuantityRange& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, QuantityRange_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QuantityRange* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, min_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, min_),
           offsetof(Impl_, max_) -
               offsetof(Impl_, min_) +
               sizeof(Impl_::max_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.QuantityRange)
}
PROTOBUF_NDEBUG_INLINE QuantityRange::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        dice_notation_(arena) {}

inline void QuantityRange::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, min_),
           0,
           offsetof(Impl_, max_) -
               offsetof(Impl_, min_) +
               sizeof(Impl_::max_));
}
QuantityRange::~QuantityRange() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.QuantityRange)
  SharedDtor(*this);
}
inline void QuantityRange::SharedDtor(MessageLite& self) {
  QuantityRange& this_ = static_cast<QuantityRange&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.dice_notation_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL QuantityRange::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) QuantityRange(arena);
}
constexpr auto QuantityRange::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(QuantityRange),
                                            alignof(QuantityRange));
}
constexpr auto QuantityRange::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_QuantityRange_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &QuantityRange::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<QuantityRange>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &QuantityRange::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<QuantityRange>(), &QuantityRange::ByteSizeLong,
              &QuantityRange::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(QuantityRange, _impl_._cached_size_),
          false,
      },
      &QuantityRange::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull QuantityRange_class_data_ =
        QuantityRange::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
QuantityRange::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&QuantityRange_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(QuantityRange_class_data_.tc_table);
  return QuantityRange_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 48, 2>
QuantityRange::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QuantityRange, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    QuantityRange_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::QuantityRange>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 min = 1 [json_name = "min"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(QuantityRange, _impl_.min_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(QuantityRange, _impl_.min_)}},
    // int32 max = 2 [json_name = "max"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(QuantityRange, _impl_.max_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(QuantityRange, _impl_.max_)}},
    // string dice_notation = 3 [json_name = "diceNotation"];
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(QuantityRange, _impl_.dice_notation_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 min = 1 [json_name = "min"];
    {PROTOBUF_FIELD_OFFSET(QuantityRange, _impl_.min_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 max = 2 [json_name = "max"];
    {PROTOBUF_FIELD_OFFSET(QuantityRange, _impl_.max_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string dice_notation = 3 [json_name = "diceNotation"];
    {PROTOBUF_FIELD_OFFSET(QuantityRange, _impl_.dice_notation_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\0\0\15\0\0\0\0"
    "api.v1alpha1.QuantityRange"
    "dice_notation"
  }},
};
PROTOBUF_NOINLINE void QuantityRange::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.QuantityRange)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.dice_notation_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x00000006U) != 0) {
    ::memset(&_impl_.min_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.max_) -
        reinterpret_cast<char*>(&_impl_.min_)) + sizeof(_impl_.max_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL QuantityRange::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const QuantityRange& this_ = static_cast<const QuantityRange&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL QuantityRange::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const QuantityRange& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.QuantityRange)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 min = 1 [json_name = "min"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_min() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_min(), target);
    }
  }

  // int32 max = 2 [json_name = "max"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_max() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_max(), target);
    }
  }

  // string dice_notation = 3 [json_name = "diceNotation"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_dice_notation().empty()) {
      const ::std::string& _s = this_._internal_dice_notation();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.QuantityRange.dice_notation");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.QuantityRange)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t QuantityRange::ByteSizeLong(const MessageLite& base) {
  const QuantityRange& this_ = static_cast<const QuantityRange&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t QuantityRange::ByteSizeLong() const {
  const QuantityRange& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.QuantityRange)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string dice_notation = 3 [json_name = "diceNotation"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_dice_notation().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_dice_notation());
      }
    }
    // int32 min = 1 [json_name = "min"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_min() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_min());
      }
    }
    // int32 max = 2 [json_name = "max"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_max() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_max());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void QuantityRange::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QuantityRange*>(&to_msg);
  auto& from = static_cast<const QuantityRange&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.QuantityRange)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_dice_notation().empty()) {
        _this->_internal_set_dice_notation(from._internal_dice_notation());
      } else {
        if (_this->_impl_.dice_notation_.IsDefault()) {
          _this->_internal_set_dice_notation("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_min() != 0) {
        _this->_impl_.min_ = from._impl_.min_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_max() != 0) {
        _this->_impl_.max_ = from._impl_.max_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QuantityRange::CopyFrom(const QuantityRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.QuantityRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QuantityRange::InternalSwap(QuantityRange* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dice_notation_, &other->_impl_.dice_notation_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QuantityRange, _impl_.max_)
      + sizeof(QuantityRange::_impl_.max_)
      - PROTOBUF_FIELD_OFFSET(QuantityRange, _impl_.min_)>(
          reinterpret_cast<char*>(&_impl_.min_),
          reinterpret_cast<char*>(&other->_impl_.min_));
}

::google::protobuf::Metadata QuantityRange::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
EntityResult_PropertiesEntry_DoNotUse::EntityResult_PropertiesEntry_DoNotUse()
    : SuperType(EntityResult_PropertiesEntry_DoNotUse_class_data_.base()) {}
EntityResult_PropertiesEntry_DoNotUse::EntityResult_PropertiesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, EntityResult_PropertiesEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
EntityResult_PropertiesEntry_DoNotUse::EntityResult_PropertiesEntry_DoNotUse() : SuperType() {}
EntityResult_PropertiesEntry_DoNotUse::EntityResult_PropertiesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL EntityResult_PropertiesEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EntityResult_PropertiesEntry_DoNotUse(arena);
}
constexpr auto EntityResult_PropertiesEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EntityResult_PropertiesEntry_DoNotUse),
                                            alignof(EntityResult_PropertiesEntry_DoNotUse));
}
constexpr auto EntityResult_PropertiesEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EntityResult_PropertiesEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EntityResult_PropertiesEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EntityResult_PropertiesEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EntityResult_PropertiesEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&EntityResult_PropertiesEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EntityResult_PropertiesEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &EntityResult_PropertiesEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EntityResult_PropertiesEntry_DoNotUse_class_data_ =
        EntityResult_PropertiesEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EntityResult_PropertiesEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EntityResult_PropertiesEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EntityResult_PropertiesEntry_DoNotUse_class_data_.tc_table);
  return EntityResult_PropertiesEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 58, 2>
EntityResult_PropertiesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EntityResult_PropertiesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    EntityResult_PropertiesEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::EntityResult_PropertiesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(EntityResult_PropertiesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EntityResult_PropertiesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(EntityResult_PropertiesEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(EntityResult_PropertiesEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\3\5\0\0\0\0\0"
    "api.v1alpha1.EntityResult.PropertiesEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class EntityResult::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<EntityResult>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EntityResult, _impl_._has_bits_);
};

EntityResult::EntityResult(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EntityResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.EntityResult)
}
PROTOBUF_NDEBUG_INLINE EntityResult::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::EntityResult& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        properties_{visibility, arena, from.properties_},
        entity_type_(arena, from.entity_type_),
        entity_id_(arena, from.entity_id_),
        entity_name_(arena, from.entity_name_) {}

EntityResult::EntityResult(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EntityResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EntityResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EntityResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.quantity_ = ((cached_has_bits & 0x00000008U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.quantity_)
                : nullptr;
  _impl_.spawn_preferences_ = ((cached_has_bits & 0x00000010U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.spawn_preferences_)
                : nullptr;
  _impl_.challenge_rating_ = from._impl_.challenge_rating_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.EntityResult)
}
PROTOBUF_NDEBUG_INLINE EntityResult::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        properties_{visibility, arena},
        entity_type_(arena),
        entity_id_(arena),
        entity_name_(arena) {}

inline void EntityResult::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, quantity_),
           0,
           offsetof(Impl_, challenge_rating_) -
               offsetof(Impl_, quantity_) +
               sizeof(Impl_::challenge_rating_));
}
EntityResult::~EntityResult() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.EntityResult)
  SharedDtor(*this);
}
inline void EntityResult::SharedDtor(MessageLite& self) {
  EntityResult& this_ = static_cast<EntityResult&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.entity_type_.Destroy();
  this_._impl_.entity_id_.Destroy();
  this_._impl_.entity_name_.Destroy();
  delete this_._impl_.quantity_;
  delete this_._impl_.spawn_preferences_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EntityResult::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EntityResult(arena);
}
constexpr auto EntityResult::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(EntityResult, _impl_.properties_) +
          decltype(EntityResult::_impl_.properties_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EntityResult, _impl_.properties_) +
          decltype(EntityResult::_impl_.properties_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(EntityResult), alignof(EntityResult), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&EntityResult::PlacementNew_,
                                 sizeof(EntityResult),
                                 alignof(EntityResult));
  }
}
constexpr auto EntityResult::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EntityResult_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EntityResult::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EntityResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EntityResult::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EntityResult>(), &EntityResult::ByteSizeLong,
              &EntityResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EntityResult, _impl_._cached_size_),
          false,
      },
      &EntityResult::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EntityResult_class_data_ =
        EntityResult::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EntityResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EntityResult_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EntityResult_class_data_.tc_table);
  return EntityResult_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 3, 75, 2>
EntityResult::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EntityResult, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    EntityResult_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::EntityResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string entity_type = 1 [json_name = "entityType"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EntityResult, _impl_.entity_type_)}},
    // string entity_id = 2 [json_name = "entityId"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(EntityResult, _impl_.entity_id_)}},
    // string entity_name = 3 [json_name = "entityName"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(EntityResult, _impl_.entity_name_)}},
    // .api.v1alpha1.QuantityRange quantity = 4 [json_name = "quantity"];
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(EntityResult, _impl_.quantity_)}},
    // double challenge_rating = 5 [json_name = "challengeRating"];
    {::_pbi::TcParser::FastF64S1,
     {41, 5, 0, PROTOBUF_FIELD_OFFSET(EntityResult, _impl_.challenge_rating_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .api.v1alpha1.EntitySpawnPreferences spawn_preferences = 7 [json_name = "spawnPreferences"];
    {::_pbi::TcParser::FastMtS1,
     {58, 4, 1, PROTOBUF_FIELD_OFFSET(EntityResult, _impl_.spawn_preferences_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string entity_type = 1 [json_name = "entityType"];
    {PROTOBUF_FIELD_OFFSET(EntityResult, _impl_.entity_type_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string entity_id = 2 [json_name = "entityId"];
    {PROTOBUF_FIELD_OFFSET(EntityResult, _impl_.entity_id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string entity_name = 3 [json_name = "entityName"];
    {PROTOBUF_FIELD_OFFSET(EntityResult, _impl_.entity_name_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.QuantityRange quantity = 4 [json_name = "quantity"];
    {PROTOBUF_FIELD_OFFSET(EntityResult, _impl_.quantity_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // double challenge_rating = 5 [json_name = "challengeRating"];
    {PROTOBUF_FIELD_OFFSET(EntityResult, _impl_.challenge_rating_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // map<string, string> properties = 6 [json_name = "properties"];
    {PROTOBUF_FIELD_OFFSET(EntityResult, _impl_.properties_), -1, 2, (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // .api.v1alpha1.EntitySpawnPreferences spawn_preferences = 7 [json_name = "spawnPreferences"];
    {PROTOBUF_FIELD_OFFSET(EntityResult, _impl_.spawn_preferences_), _Internal::kHasBitsOffset + 4, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::QuantityRange>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::EntitySpawnPreferences>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\31\13\11\13\0\0\12\0"
    "api.v1alpha1.EntityResult"
    "entity_type"
    "entity_id"
    "entity_name"
    "properties"
  }},
};
PROTOBUF_NOINLINE void EntityResult::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.EntityResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.properties_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.entity_type_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.entity_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.entity_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(_impl_.quantity_ != nullptr);
      _impl_.quantity_->Clear();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(_impl_.spawn_preferences_ != nullptr);
      _impl_.spawn_preferences_->Clear();
    }
  }
  _impl_.challenge_rating_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EntityResult::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EntityResult& this_ = static_cast<const EntityResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EntityResult::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EntityResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.EntityResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string entity_type = 1 [json_name = "entityType"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_entity_type().empty()) {
      const ::std::string& _s = this_._internal_entity_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EntityResult.entity_type");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string entity_id = 2 [json_name = "entityId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_entity_id().empty()) {
      const ::std::string& _s = this_._internal_entity_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EntityResult.entity_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string entity_name = 3 [json_name = "entityName"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_entity_name().empty()) {
      const ::std::string& _s = this_._internal_entity_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EntityResult.entity_name");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.QuantityRange quantity = 4 [json_name = "quantity"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.quantity_, this_._impl_.quantity_->GetCachedSize(), target,
        stream);
  }

  // double challenge_rating = 5 [json_name = "challengeRating"];
  if ((cached_has_bits & 0x00000020U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_challenge_rating()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          5, this_._internal_challenge_rating(), target);
    }
  }

  // map<string, string> properties = 6 [json_name = "properties"];
  if (!this_._internal_properties().empty()) {
    using MapType = ::google::protobuf::Map<::std::string, ::std::string>;
    using WireHelper = _pbi::MapEntryFuncs<::std::string, ::std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_properties();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EntityResult.properties");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EntityResult.properties");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EntityResult.properties");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EntityResult.properties");
      }
    }
  }

  // .api.v1alpha1.EntitySpawnPreferences spawn_preferences = 7 [json_name = "spawnPreferences"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *this_._impl_.spawn_preferences_, this_._impl_.spawn_preferences_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.EntityResult)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EntityResult::ByteSizeLong(const MessageLite& base) {
  const EntityResult& this_ = static_cast<const EntityResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EntityResult::ByteSizeLong() const {
  const EntityResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.EntityResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, string> properties = 6 [json_name = "properties"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_properties_size());
      for (const auto& entry : this_._internal_properties()) {
        total_size += _pbi::MapEntryFuncs<::std::string, ::std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    // string entity_type = 1 [json_name = "entityType"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_entity_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_entity_type());
      }
    }
    // string entity_id = 2 [json_name = "entityId"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_entity_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_entity_id());
      }
    }
    // string entity_name = 3 [json_name = "entityName"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_entity_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_entity_name());
      }
    }
    // .api.v1alpha1.QuantityRange quantity = 4 [json_name = "quantity"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.quantity_);
    }
    // .api.v1alpha1.EntitySpawnPreferences spawn_preferences = 7 [json_name = "spawnPreferences"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.spawn_preferences_);
    }
    // double challenge_rating = 5 [json_name = "challengeRating"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_challenge_rating()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EntityResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EntityResult*>(&to_msg);
  auto& from = static_cast<const EntityResult&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.EntityResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.properties_.MergeFrom(from._impl_.properties_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_entity_type().empty()) {
        _this->_internal_set_entity_type(from._internal_entity_type());
      } else {
        if (_this->_impl_.entity_type_.IsDefault()) {
          _this->_internal_set_entity_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_entity_id().empty()) {
        _this->_internal_set_entity_id(from._internal_entity_id());
      } else {
        if (_this->_impl_.entity_id_.IsDefault()) {
          _this->_internal_set_entity_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_entity_name().empty()) {
        _this->_internal_set_entity_name(from._internal_entity_name());
      } else {
        if (_this->_impl_.entity_name_.IsDefault()) {
          _this->_internal_set_entity_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(from._impl_.quantity_ != nullptr);
      if (_this->_impl_.quantity_ == nullptr) {
        _this->_impl_.quantity_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.quantity_);
      } else {
        _this->_impl_.quantity_->MergeFrom(*from._impl_.quantity_);
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(from._impl_.spawn_preferences_ != nullptr);
      if (_this->_impl_.spawn_preferences_ == nullptr) {
        _this->_impl_.spawn_preferences_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.spawn_preferences_);
      } else {
        _this->_impl_.spawn_preferences_->MergeFrom(*from._impl_.spawn_preferences_);
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_challenge_rating()) != 0) {
        _this->_impl_.challenge_rating_ = from._impl_.challenge_rating_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EntityResult::CopyFrom(const EntityResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.EntityResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EntityResult::InternalSwap(EntityResult* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.properties_.InternalSwap(&other->_impl_.properties_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entity_type_, &other->_impl_.entity_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entity_id_, &other->_impl_.entity_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entity_name_, &other->_impl_.entity_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EntityResult, _impl_.challenge_rating_)
      + sizeof(EntityResult::_impl_.challenge_rating_)
      - PROTOBUF_FIELD_OFFSET(EntityResult, _impl_.quantity_)>(
          reinterpret_cast<char*>(&_impl_.quantity_),
          reinterpret_cast<char*>(&other->_impl_.quantity_));
}

::google::protobuf::Metadata EntityResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EntitySpawnPreferences::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<EntitySpawnPreferences>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EntitySpawnPreferences, _impl_._has_bits_);
};

EntitySpawnPreferences::EntitySpawnPreferences(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EntitySpawnPreferences_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.EntitySpawnPreferences)
}
PROTOBUF_NDEBUG_INLINE EntitySpawnPreferences::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::EntitySpawnPreferences& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        preferred_locations_{visibility, arena, from.preferred_locations_},
        formation_(arena, from.formation_),
        behavior_(arena, from.behavior_),
        special_instructions_(arena, from.special_instructions_) {}

EntitySpawnPreferences::EntitySpawnPreferences(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EntitySpawnPreferences& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EntitySpawnPreferences_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EntitySpawnPreferences* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.EntitySpawnPreferences)
}
PROTOBUF_NDEBUG_INLINE EntitySpawnPreferences::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        preferred_locations_{visibility, arena},
        formation_(arena),
        behavior_(arena),
        special_instructions_(arena) {}

inline void EntitySpawnPreferences::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
EntitySpawnPreferences::~EntitySpawnPreferences() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.EntitySpawnPreferences)
  SharedDtor(*this);
}
inline void EntitySpawnPreferences::SharedDtor(MessageLite& self) {
  EntitySpawnPreferences& this_ = static_cast<EntitySpawnPreferences&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.formation_.Destroy();
  this_._impl_.behavior_.Destroy();
  this_._impl_.special_instructions_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EntitySpawnPreferences::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EntitySpawnPreferences(arena);
}
constexpr auto EntitySpawnPreferences::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(EntitySpawnPreferences, _impl_.preferred_locations_) +
          decltype(EntitySpawnPreferences::_impl_.preferred_locations_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(EntitySpawnPreferences), alignof(EntitySpawnPreferences), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&EntitySpawnPreferences::PlacementNew_,
                                 sizeof(EntitySpawnPreferences),
                                 alignof(EntitySpawnPreferences));
  }
}
constexpr auto EntitySpawnPreferences::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EntitySpawnPreferences_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EntitySpawnPreferences::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EntitySpawnPreferences>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EntitySpawnPreferences::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EntitySpawnPreferences>(), &EntitySpawnPreferences::ByteSizeLong,
              &EntitySpawnPreferences::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EntitySpawnPreferences, _impl_._cached_size_),
          false,
      },
      &EntitySpawnPreferences::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EntitySpawnPreferences_class_data_ =
        EntitySpawnPreferences::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EntitySpawnPreferences::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EntitySpawnPreferences_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EntitySpawnPreferences_class_data_.tc_table);
  return EntitySpawnPreferences_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 100, 2>
EntitySpawnPreferences::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EntitySpawnPreferences, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    EntitySpawnPreferences_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::EntitySpawnPreferences>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string special_instructions = 4 [json_name = "specialInstructions"];
    {::_pbi::TcParser::FastUS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(EntitySpawnPreferences, _impl_.special_instructions_)}},
    // repeated string preferred_locations = 1 [json_name = "preferredLocations"];
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EntitySpawnPreferences, _impl_.preferred_locations_)}},
    // string formation = 2 [json_name = "formation"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(EntitySpawnPreferences, _impl_.formation_)}},
    // string behavior = 3 [json_name = "behavior"];
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(EntitySpawnPreferences, _impl_.behavior_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string preferred_locations = 1 [json_name = "preferredLocations"];
    {PROTOBUF_FIELD_OFFSET(EntitySpawnPreferences, _impl_.preferred_locations_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string formation = 2 [json_name = "formation"];
    {PROTOBUF_FIELD_OFFSET(EntitySpawnPreferences, _impl_.formation_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string behavior = 3 [json_name = "behavior"];
    {PROTOBUF_FIELD_OFFSET(EntitySpawnPreferences, _impl_.behavior_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string special_instructions = 4 [json_name = "specialInstructions"];
    {PROTOBUF_FIELD_OFFSET(EntitySpawnPreferences, _impl_.special_instructions_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\23\11\10\24\0\0\0"
    "api.v1alpha1.EntitySpawnPreferences"
    "preferred_locations"
    "formation"
    "behavior"
    "special_instructions"
  }},
};
PROTOBUF_NOINLINE void EntitySpawnPreferences::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.EntitySpawnPreferences)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.preferred_locations_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.formation_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.behavior_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.special_instructions_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EntitySpawnPreferences::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EntitySpawnPreferences& this_ = static_cast<const EntitySpawnPreferences&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EntitySpawnPreferences::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EntitySpawnPreferences& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.EntitySpawnPreferences)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string preferred_locations = 1 [json_name = "preferredLocations"];
  for (int i = 0, n = this_._internal_preferred_locations_size(); i < n; ++i) {
    const auto& s = this_._internal_preferred_locations().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EntitySpawnPreferences.preferred_locations");
    target = stream->WriteString(1, s, target);
  }

  // string formation = 2 [json_name = "formation"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_formation().empty()) {
      const ::std::string& _s = this_._internal_formation();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EntitySpawnPreferences.formation");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string behavior = 3 [json_name = "behavior"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_behavior().empty()) {
      const ::std::string& _s = this_._internal_behavior();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EntitySpawnPreferences.behavior");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string special_instructions = 4 [json_name = "specialInstructions"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_special_instructions().empty()) {
      const ::std::string& _s = this_._internal_special_instructions();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EntitySpawnPreferences.special_instructions");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.EntitySpawnPreferences)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EntitySpawnPreferences::ByteSizeLong(const MessageLite& base) {
  const EntitySpawnPreferences& this_ = static_cast<const EntitySpawnPreferences&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EntitySpawnPreferences::ByteSizeLong() const {
  const EntitySpawnPreferences& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.EntitySpawnPreferences)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string preferred_locations = 1 [json_name = "preferredLocations"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_preferred_locations().size());
      for (int i = 0, n = this_._internal_preferred_locations().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_preferred_locations().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string formation = 2 [json_name = "formation"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_formation().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_formation());
      }
    }
    // string behavior = 3 [json_name = "behavior"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_behavior().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_behavior());
      }
    }
    // string special_instructions = 4 [json_name = "specialInstructions"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_special_instructions().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_special_instructions());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EntitySpawnPreferences::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EntitySpawnPreferences*>(&to_msg);
  auto& from = static_cast<const EntitySpawnPreferences&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.EntitySpawnPreferences)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_preferred_locations()->MergeFrom(from._internal_preferred_locations());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_formation().empty()) {
        _this->_internal_set_formation(from._internal_formation());
      } else {
        if (_this->_impl_.formation_.IsDefault()) {
          _this->_internal_set_formation("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_behavior().empty()) {
        _this->_internal_set_behavior(from._internal_behavior());
      } else {
        if (_this->_impl_.behavior_.IsDefault()) {
          _this->_internal_set_behavior("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_special_instructions().empty()) {
        _this->_internal_set_special_instructions(from._internal_special_instructions());
      } else {
        if (_this->_impl_.special_instructions_.IsDefault()) {
          _this->_internal_set_special_instructions("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EntitySpawnPreferences::CopyFrom(const EntitySpawnPreferences& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.EntitySpawnPreferences)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EntitySpawnPreferences::InternalSwap(EntitySpawnPreferences* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.preferred_locations_.InternalSwap(&other->_impl_.preferred_locations_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.formation_, &other->_impl_.formation_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.behavior_, &other->_impl_.behavior_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.special_instructions_, &other->_impl_.special_instructions_, arena);
}

::google::protobuf::Metadata EntitySpawnPreferences::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NestedTableResult::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<NestedTableResult>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NestedTableResult, _impl_._has_bits_);
};

NestedTableResult::NestedTableResult(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NestedTableResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.NestedTableResult)
}
PROTOBUF_NDEBUG_INLINE NestedTableResult::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::NestedTableResult& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        modifiers_{visibility, arena, from.modifiers_},
        table_id_(arena, from.table_id_) {}

NestedTableResult::NestedTableResult(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const NestedTableResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NestedTableResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NestedTableResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, roll_count_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, roll_count_),
           offsetof(Impl_, combine_results_) -
               offsetof(Impl_, roll_count_) +
               sizeof(Impl_::combine_results_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.NestedTableResult)
}
PROTOBUF_NDEBUG_INLINE NestedTableResult::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        modifiers_{visibility, arena},
        table_id_(arena) {}

inline void NestedTableResult::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, roll_count_),
           0,
           offsetof(Impl_, combine_results_) -
               offsetof(Impl_, roll_count_) +
               sizeof(Impl_::combine_results_));
}
NestedTableResult::~NestedTableResult() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.NestedTableResult)
  SharedDtor(*this);
}
inline void NestedTableResult::SharedDtor(MessageLite& self) {
  NestedTableResult& this_ = static_cast<NestedTableResult&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.table_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL NestedTableResult::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) NestedTableResult(arena);
}
constexpr auto NestedTableResult::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(NestedTableResult, _impl_.modifiers_) +
          decltype(NestedTableResult::_impl_.modifiers_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(NestedTableResult), alignof(NestedTableResult), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&NestedTableResult::PlacementNew_,
                                 sizeof(NestedTableResult),
                                 alignof(NestedTableResult));
  }
}
constexpr auto NestedTableResult::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_NestedTableResult_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &NestedTableResult::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<NestedTableResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &NestedTableResult::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<NestedTableResult>(), &NestedTableResult::ByteSizeLong,
              &NestedTableResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(NestedTableResult, _impl_._cached_size_),
          false,
      },
      &NestedTableResult::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull NestedTableResult_class_data_ =
        NestedTableResult::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
NestedTableResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&NestedTableResult_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(NestedTableResult_class_data_.tc_table);
  return NestedTableResult_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 47, 2>
NestedTableResult::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NestedTableResult, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    NestedTableResult_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::NestedTableResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool combine_results = 4 [json_name = "combineResults"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(NestedTableResult, _impl_.combine_results_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(NestedTableResult, _impl_.combine_results_)}},
    // string table_id = 1 [json_name = "tableId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NestedTableResult, _impl_.table_id_)}},
    // int32 roll_count = 2 [json_name = "rollCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NestedTableResult, _impl_.roll_count_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(NestedTableResult, _impl_.roll_count_)}},
    // repeated .api.v1alpha1.RollModifier modifiers = 3 [json_name = "modifiers"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(NestedTableResult, _impl_.modifiers_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string table_id = 1 [json_name = "tableId"];
    {PROTOBUF_FIELD_OFFSET(NestedTableResult, _impl_.table_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 roll_count = 2 [json_name = "rollCount"];
    {PROTOBUF_FIELD_OFFSET(NestedTableResult, _impl_.roll_count_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated .api.v1alpha1.RollModifier modifiers = 3 [json_name = "modifiers"];
    {PROTOBUF_FIELD_OFFSET(NestedTableResult, _impl_.modifiers_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool combine_results = 4 [json_name = "combineResults"];
    {PROTOBUF_FIELD_OFFSET(NestedTableResult, _impl_.combine_results_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RollModifier>()},
  }},
  {{
    "\36\10\0\0\0\0\0\0"
    "api.v1alpha1.NestedTableResult"
    "table_id"
  }},
};
PROTOBUF_NOINLINE void NestedTableResult::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.NestedTableResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.modifiers_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.table_id_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x00000006U) != 0) {
    ::memset(&_impl_.roll_count_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.combine_results_) -
        reinterpret_cast<char*>(&_impl_.roll_count_)) + sizeof(_impl_.combine_results_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL NestedTableResult::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const NestedTableResult& this_ = static_cast<const NestedTableResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL NestedTableResult::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const NestedTableResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.NestedTableResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string table_id = 1 [json_name = "tableId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_table_id().empty()) {
      const ::std::string& _s = this_._internal_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.NestedTableResult.table_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // int32 roll_count = 2 [json_name = "rollCount"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_roll_count() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_roll_count(), target);
    }
  }

  // repeated .api.v1alpha1.RollModifier modifiers = 3 [json_name = "modifiers"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_modifiers_size());
       i < n; i++) {
    const auto& repfield = this_._internal_modifiers().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // bool combine_results = 4 [json_name = "combineResults"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_combine_results() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_combine_results(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.NestedTableResult)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t NestedTableResult::ByteSizeLong(const MessageLite& base) {
  const NestedTableResult& this_ = static_cast<const NestedTableResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t NestedTableResult::ByteSizeLong() const {
  const NestedTableResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.NestedTableResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.RollModifier modifiers = 3 [json_name = "modifiers"];
    {
      total_size += 1UL * this_._internal_modifiers_size();
      for (const auto& msg : this_._internal_modifiers()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string table_id = 1 [json_name = "tableId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_table_id());
      }
    }
    // int32 roll_count = 2 [json_name = "rollCount"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_roll_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_roll_count());
      }
    }
    // bool combine_results = 4 [json_name = "combineResults"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_combine_results() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void NestedTableResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NestedTableResult*>(&to_msg);
  auto& from = static_cast<const NestedTableResult&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.NestedTableResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_modifiers()->MergeFrom(
      from._internal_modifiers());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_table_id().empty()) {
        _this->_internal_set_table_id(from._internal_table_id());
      } else {
        if (_this->_impl_.table_id_.IsDefault()) {
          _this->_internal_set_table_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_roll_count() != 0) {
        _this->_impl_.roll_count_ = from._impl_.roll_count_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_combine_results() != 0) {
        _this->_impl_.combine_results_ = from._impl_.combine_results_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NestedTableResult::CopyFrom(const NestedTableResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.NestedTableResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NestedTableResult::InternalSwap(NestedTableResult* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.modifiers_.InternalSwap(&other->_impl_.modifiers_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.table_id_, &other->_impl_.table_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NestedTableResult, _impl_.combine_results_)
      + sizeof(NestedTableResult::_impl_.combine_results_)
      - PROTOBUF_FIELD_OFFSET(NestedTableResult, _impl_.roll_count_)>(
          reinterpret_cast<char*>(&_impl_.roll_count_),
          reinterpret_cast<char*>(&other->_impl_.roll_count_));
}

::google::protobuf::Metadata NestedTableResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RollModifier::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RollModifier>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RollModifier, _impl_._has_bits_);
};

RollModifier::RollModifier(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RollModifier_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.RollModifier)
}
PROTOBUF_NDEBUG_INLINE RollModifier::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::RollModifier& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        modifier_type_(arena, from.modifier_type_),
        condition_(arena, from.condition_) {}

RollModifier::RollModifier(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RollModifier& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RollModifier_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RollModifier* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.value_ = from._impl_.value_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.RollModifier)
}
PROTOBUF_NDEBUG_INLINE RollModifier::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        modifier_type_(arena),
        condition_(arena) {}

inline void RollModifier::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
RollModifier::~RollModifier() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.RollModifier)
  SharedDtor(*this);
}
inline void RollModifier::SharedDtor(MessageLite& self) {
  RollModifier& this_ = static_cast<RollModifier&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.modifier_type_.Destroy();
  this_._impl_.condition_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RollModifier::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RollModifier(arena);
}
constexpr auto RollModifier::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RollModifier),
                                            alignof(RollModifier));
}
constexpr auto RollModifier::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RollModifier_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RollModifier::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RollModifier>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RollModifier::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RollModifier>(), &RollModifier::ByteSizeLong,
              &RollModifier::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RollModifier, _impl_._cached_size_),
          false,
      },
      &RollModifier::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RollModifier_class_data_ =
        RollModifier::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RollModifier::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RollModifier_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RollModifier_class_data_.tc_table);
  return RollModifier_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 56, 2>
RollModifier::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RollModifier, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RollModifier_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::RollModifier>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string modifier_type = 1 [json_name = "modifierType"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RollModifier, _impl_.modifier_type_)}},
    // double value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastF64S1,
     {17, 2, 0, PROTOBUF_FIELD_OFFSET(RollModifier, _impl_.value_)}},
    // string condition = 3 [json_name = "condition"];
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(RollModifier, _impl_.condition_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string modifier_type = 1 [json_name = "modifierType"];
    {PROTOBUF_FIELD_OFFSET(RollModifier, _impl_.modifier_type_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(RollModifier, _impl_.value_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // string condition = 3 [json_name = "condition"];
    {PROTOBUF_FIELD_OFFSET(RollModifier, _impl_.condition_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\15\0\11\0\0\0\0"
    "api.v1alpha1.RollModifier"
    "modifier_type"
    "condition"
  }},
};
PROTOBUF_NOINLINE void RollModifier::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.RollModifier)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.modifier_type_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.condition_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.value_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RollModifier::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RollModifier& this_ = static_cast<const RollModifier&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RollModifier::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RollModifier& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.RollModifier)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string modifier_type = 1 [json_name = "modifierType"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_modifier_type().empty()) {
      const ::std::string& _s = this_._internal_modifier_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RollModifier.modifier_type");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // double value = 2 [json_name = "value"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_value()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_value(), target);
    }
  }

  // string condition = 3 [json_name = "condition"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_condition().empty()) {
      const ::std::string& _s = this_._internal_condition();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RollModifier.condition");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.RollModifier)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RollModifier::ByteSizeLong(const MessageLite& base) {
  const RollModifier& this_ = static_cast<const RollModifier&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RollModifier::ByteSizeLong() const {
  const RollModifier& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.RollModifier)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string modifier_type = 1 [json_name = "modifierType"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_modifier_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_modifier_type());
      }
    }
    // string condition = 3 [json_name = "condition"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_condition().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_condition());
      }
    }
    // double value = 2 [json_name = "value"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_value()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RollModifier::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RollModifier*>(&to_msg);
  auto& from = static_cast<const RollModifier&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.RollModifier)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_modifier_type().empty()) {
        _this->_internal_set_modifier_type(from._internal_modifier_type());
      } else {
        if (_this->_impl_.modifier_type_.IsDefault()) {
          _this->_internal_set_modifier_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_condition().empty()) {
        _this->_internal_set_condition(from._internal_condition());
      } else {
        if (_this->_impl_.condition_.IsDefault()) {
          _this->_internal_set_condition("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_value()) != 0) {
        _this->_impl_.value_ = from._impl_.value_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RollModifier::CopyFrom(const RollModifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.RollModifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RollModifier::InternalSwap(RollModifier* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.modifier_type_, &other->_impl_.modifier_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.condition_, &other->_impl_.condition_, arena);
  swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata RollModifier::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
TextResult_VariablesEntry_DoNotUse::TextResult_VariablesEntry_DoNotUse()
    : SuperType(TextResult_VariablesEntry_DoNotUse_class_data_.base()) {}
TextResult_VariablesEntry_DoNotUse::TextResult_VariablesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, TextResult_VariablesEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
TextResult_VariablesEntry_DoNotUse::TextResult_VariablesEntry_DoNotUse() : SuperType() {}
TextResult_VariablesEntry_DoNotUse::TextResult_VariablesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL TextResult_VariablesEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TextResult_VariablesEntry_DoNotUse(arena);
}
constexpr auto TextResult_VariablesEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TextResult_VariablesEntry_DoNotUse),
                                            alignof(TextResult_VariablesEntry_DoNotUse));
}
constexpr auto TextResult_VariablesEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TextResult_VariablesEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TextResult_VariablesEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TextResult_VariablesEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TextResult_VariablesEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&TextResult_VariablesEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TextResult_VariablesEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &TextResult_VariablesEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TextResult_VariablesEntry_DoNotUse_class_data_ =
        TextResult_VariablesEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TextResult_VariablesEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TextResult_VariablesEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TextResult_VariablesEntry_DoNotUse_class_data_.tc_table);
  return TextResult_VariablesEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 55, 2>
TextResult_VariablesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TextResult_VariablesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TextResult_VariablesEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::TextResult_VariablesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(TextResult_VariablesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TextResult_VariablesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(TextResult_VariablesEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(TextResult_VariablesEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\46\3\5\0\0\0\0\0"
    "api.v1alpha1.TextResult.VariablesEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class TextResult::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TextResult>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TextResult, _impl_._has_bits_);
};

TextResult::TextResult(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TextResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.TextResult)
}
PROTOBUF_NDEBUG_INLINE TextResult::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::TextResult& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        variables_{visibility, arena, from.variables_},
        text_(arena, from.text_),
        category_(arena, from.category_),
        action_type_(arena, from.action_type_) {}

TextResult::TextResult(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TextResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TextResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TextResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.requires_action_ = from._impl_.requires_action_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.TextResult)
}
PROTOBUF_NDEBUG_INLINE TextResult::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        variables_{visibility, arena},
        text_(arena),
        category_(arena),
        action_type_(arena) {}

inline void TextResult::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.requires_action_ = {};
}
TextResult::~TextResult() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.TextResult)
  SharedDtor(*this);
}
inline void TextResult::SharedDtor(MessageLite& self) {
  TextResult& this_ = static_cast<TextResult&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.text_.Destroy();
  this_._impl_.category_.Destroy();
  this_._impl_.action_type_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TextResult::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TextResult(arena);
}
constexpr auto TextResult::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TextResult, _impl_.variables_) +
          decltype(TextResult::_impl_.variables_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TextResult, _impl_.variables_) +
          decltype(TextResult::_impl_.variables_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(TextResult), alignof(TextResult), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TextResult::PlacementNew_,
                                 sizeof(TextResult),
                                 alignof(TextResult));
  }
}
constexpr auto TextResult::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TextResult_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TextResult::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TextResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TextResult::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TextResult>(), &TextResult::ByteSizeLong,
              &TextResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TextResult, _impl_._cached_size_),
          false,
      },
      &TextResult::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TextResult_class_data_ =
        TextResult::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TextResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TextResult_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TextResult_class_data_.tc_table);
  return TextResult_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 64, 2>
TextResult::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TextResult, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TextResult_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::TextResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string text = 1 [json_name = "text"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TextResult, _impl_.text_)}},
    // string category = 2 [json_name = "category"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(TextResult, _impl_.category_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool requires_action = 4 [json_name = "requiresAction"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TextResult, _impl_.requires_action_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(TextResult, _impl_.requires_action_)}},
    // string action_type = 5 [json_name = "actionType"];
    {::_pbi::TcParser::FastUS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(TextResult, _impl_.action_type_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string text = 1 [json_name = "text"];
    {PROTOBUF_FIELD_OFFSET(TextResult, _impl_.text_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string category = 2 [json_name = "category"];
    {PROTOBUF_FIELD_OFFSET(TextResult, _impl_.category_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> variables = 3 [json_name = "variables"];
    {PROTOBUF_FIELD_OFFSET(TextResult, _impl_.variables_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // bool requires_action = 4 [json_name = "requiresAction"];
    {PROTOBUF_FIELD_OFFSET(TextResult, _impl_.requires_action_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string action_type = 5 [json_name = "actionType"];
    {PROTOBUF_FIELD_OFFSET(TextResult, _impl_.action_type_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\27\4\10\11\0\13\0\0"
    "api.v1alpha1.TextResult"
    "text"
    "category"
    "variables"
    "action_type"
  }},
};
PROTOBUF_NOINLINE void TextResult::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.TextResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.variables_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.text_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.category_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.action_type_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.requires_action_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TextResult::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TextResult& this_ = static_cast<const TextResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TextResult::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TextResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.TextResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string text = 1 [json_name = "text"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_text().empty()) {
      const ::std::string& _s = this_._internal_text();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TextResult.text");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string category = 2 [json_name = "category"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_category().empty()) {
      const ::std::string& _s = this_._internal_category();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TextResult.category");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // map<string, string> variables = 3 [json_name = "variables"];
  if (!this_._internal_variables().empty()) {
    using MapType = ::google::protobuf::Map<::std::string, ::std::string>;
    using WireHelper = _pbi::MapEntryFuncs<::std::string, ::std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_variables();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TextResult.variables");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TextResult.variables");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TextResult.variables");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TextResult.variables");
      }
    }
  }

  // bool requires_action = 4 [json_name = "requiresAction"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_requires_action() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_requires_action(), target);
    }
  }

  // string action_type = 5 [json_name = "actionType"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_action_type().empty()) {
      const ::std::string& _s = this_._internal_action_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TextResult.action_type");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.TextResult)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TextResult::ByteSizeLong(const MessageLite& base) {
  const TextResult& this_ = static_cast<const TextResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TextResult::ByteSizeLong() const {
  const TextResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.TextResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, string> variables = 3 [json_name = "variables"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_variables_size());
      for (const auto& entry : this_._internal_variables()) {
        total_size += _pbi::MapEntryFuncs<::std::string, ::std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string text = 1 [json_name = "text"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_text().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_text());
      }
    }
    // string category = 2 [json_name = "category"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_category().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_category());
      }
    }
    // string action_type = 5 [json_name = "actionType"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_action_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_action_type());
      }
    }
    // bool requires_action = 4 [json_name = "requiresAction"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_requires_action() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TextResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TextResult*>(&to_msg);
  auto& from = static_cast<const TextResult&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.TextResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.variables_.MergeFrom(from._impl_.variables_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_text().empty()) {
        _this->_internal_set_text(from._internal_text());
      } else {
        if (_this->_impl_.text_.IsDefault()) {
          _this->_internal_set_text("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_category().empty()) {
        _this->_internal_set_category(from._internal_category());
      } else {
        if (_this->_impl_.category_.IsDefault()) {
          _this->_internal_set_category("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_action_type().empty()) {
        _this->_internal_set_action_type(from._internal_action_type());
      } else {
        if (_this->_impl_.action_type_.IsDefault()) {
          _this->_internal_set_action_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_requires_action() != 0) {
        _this->_impl_.requires_action_ = from._impl_.requires_action_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TextResult::CopyFrom(const TextResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.TextResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TextResult::InternalSwap(TextResult* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.variables_.InternalSwap(&other->_impl_.variables_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_, &other->_impl_.text_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.action_type_, &other->_impl_.action_type_, arena);
  swap(_impl_.requires_action_, other->_impl_.requires_action_);
}

::google::protobuf::Metadata TextResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
EffectResult_ParametersEntry_DoNotUse::EffectResult_ParametersEntry_DoNotUse()
    : SuperType(EffectResult_ParametersEntry_DoNotUse_class_data_.base()) {}
EffectResult_ParametersEntry_DoNotUse::EffectResult_ParametersEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, EffectResult_ParametersEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
EffectResult_ParametersEntry_DoNotUse::EffectResult_ParametersEntry_DoNotUse() : SuperType() {}
EffectResult_ParametersEntry_DoNotUse::EffectResult_ParametersEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL EffectResult_ParametersEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EffectResult_ParametersEntry_DoNotUse(arena);
}
constexpr auto EffectResult_ParametersEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EffectResult_ParametersEntry_DoNotUse),
                                            alignof(EffectResult_ParametersEntry_DoNotUse));
}
constexpr auto EffectResult_ParametersEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EffectResult_ParametersEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EffectResult_ParametersEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EffectResult_ParametersEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EffectResult_ParametersEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&EffectResult_ParametersEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EffectResult_ParametersEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &EffectResult_ParametersEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EffectResult_ParametersEntry_DoNotUse_class_data_ =
        EffectResult_ParametersEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EffectResult_ParametersEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EffectResult_ParametersEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EffectResult_ParametersEntry_DoNotUse_class_data_.tc_table);
  return EffectResult_ParametersEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 58, 2>
EffectResult_ParametersEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EffectResult_ParametersEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    EffectResult_ParametersEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::EffectResult_ParametersEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(EffectResult_ParametersEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EffectResult_ParametersEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(EffectResult_ParametersEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(EffectResult_ParametersEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\3\5\0\0\0\0\0"
    "api.v1alpha1.EffectResult.ParametersEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class EffectResult::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<EffectResult>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EffectResult, _impl_._has_bits_);
};

EffectResult::EffectResult(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EffectResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.EffectResult)
}
PROTOBUF_NDEBUG_INLINE EffectResult::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::EffectResult& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        parameters_{visibility, arena, from.parameters_},
        effect_type_(arena, from.effect_type_),
        effect_name_(arena, from.effect_name_),
        description_(arena, from.description_),
        duration_(arena, from.duration_),
        area_of_effect_description_(arena, from.area_of_effect_description_) {}

EffectResult::EffectResult(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EffectResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EffectResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EffectResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.intensity_ = from._impl_.intensity_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.EffectResult)
}
PROTOBUF_NDEBUG_INLINE EffectResult::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        parameters_{visibility, arena},
        effect_type_(arena),
        effect_name_(arena),
        description_(arena),
        duration_(arena),
        area_of_effect_description_(arena) {}

inline void EffectResult::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.intensity_ = {};
}
EffectResult::~EffectResult() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.EffectResult)
  SharedDtor(*this);
}
inline void EffectResult::SharedDtor(MessageLite& self) {
  EffectResult& this_ = static_cast<EffectResult&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.effect_type_.Destroy();
  this_._impl_.effect_name_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.duration_.Destroy();
  this_._impl_.area_of_effect_description_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EffectResult::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EffectResult(arena);
}
constexpr auto EffectResult::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(EffectResult, _impl_.parameters_) +
          decltype(EffectResult::_impl_.parameters_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EffectResult, _impl_.parameters_) +
          decltype(EffectResult::_impl_.parameters_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(EffectResult), alignof(EffectResult), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&EffectResult::PlacementNew_,
                                 sizeof(EffectResult),
                                 alignof(EffectResult));
  }
}
constexpr auto EffectResult::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EffectResult_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EffectResult::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EffectResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EffectResult::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EffectResult>(), &EffectResult::ByteSizeLong,
              &EffectResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EffectResult, _impl_._cached_size_),
          false,
      },
      &EffectResult::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EffectResult_class_data_ =
        EffectResult::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EffectResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EffectResult_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EffectResult_class_data_.tc_table);
  return EffectResult_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 111, 2>
EffectResult::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EffectResult, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    EffectResult_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::EffectResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string effect_type = 1 [json_name = "effectType"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EffectResult, _impl_.effect_type_)}},
    // string effect_name = 2 [json_name = "effectName"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(EffectResult, _impl_.effect_name_)}},
    // string description = 3 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(EffectResult, _impl_.description_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string duration = 5 [json_name = "duration"];
    {::_pbi::TcParser::FastUS1,
     {42, 3, 0, PROTOBUF_FIELD_OFFSET(EffectResult, _impl_.duration_)}},
    // double intensity = 6 [json_name = "intensity"];
    {::_pbi::TcParser::FastF64S1,
     {49, 5, 0, PROTOBUF_FIELD_OFFSET(EffectResult, _impl_.intensity_)}},
    // string area_of_effect_description = 7 [json_name = "areaOfEffectDescription"];
    {::_pbi::TcParser::FastUS1,
     {58, 4, 0, PROTOBUF_FIELD_OFFSET(EffectResult, _impl_.area_of_effect_description_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string effect_type = 1 [json_name = "effectType"];
    {PROTOBUF_FIELD_OFFSET(EffectResult, _impl_.effect_type_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string effect_name = 2 [json_name = "effectName"];
    {PROTOBUF_FIELD_OFFSET(EffectResult, _impl_.effect_name_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 3 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(EffectResult, _impl_.description_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> parameters = 4 [json_name = "parameters"];
    {PROTOBUF_FIELD_OFFSET(EffectResult, _impl_.parameters_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string duration = 5 [json_name = "duration"];
    {PROTOBUF_FIELD_OFFSET(EffectResult, _impl_.duration_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double intensity = 6 [json_name = "intensity"];
    {PROTOBUF_FIELD_OFFSET(EffectResult, _impl_.intensity_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // string area_of_effect_description = 7 [json_name = "areaOfEffectDescription"];
    {PROTOBUF_FIELD_OFFSET(EffectResult, _impl_.area_of_effect_description_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\31\13\13\13\12\10\0\32"
    "api.v1alpha1.EffectResult"
    "effect_type"
    "effect_name"
    "description"
    "parameters"
    "duration"
    "area_of_effect_description"
  }},
};
PROTOBUF_NOINLINE void EffectResult::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.EffectResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parameters_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.effect_type_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.effect_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.duration_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      _impl_.area_of_effect_description_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.intensity_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EffectResult::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EffectResult& this_ = static_cast<const EffectResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EffectResult::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EffectResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.EffectResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string effect_type = 1 [json_name = "effectType"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_effect_type().empty()) {
      const ::std::string& _s = this_._internal_effect_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EffectResult.effect_type");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string effect_name = 2 [json_name = "effectName"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_effect_name().empty()) {
      const ::std::string& _s = this_._internal_effect_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EffectResult.effect_name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string description = 3 [json_name = "description"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EffectResult.description");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // map<string, string> parameters = 4 [json_name = "parameters"];
  if (!this_._internal_parameters().empty()) {
    using MapType = ::google::protobuf::Map<::std::string, ::std::string>;
    using WireHelper = _pbi::MapEntryFuncs<::std::string, ::std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_parameters();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EffectResult.parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EffectResult.parameters");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EffectResult.parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EffectResult.parameters");
      }
    }
  }

  // string duration = 5 [json_name = "duration"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (!this_._internal_duration().empty()) {
      const ::std::string& _s = this_._internal_duration();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EffectResult.duration");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  // double intensity = 6 [json_name = "intensity"];
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_intensity()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          6, this_._internal_intensity(), target);
    }
  }

  // string area_of_effect_description = 7 [json_name = "areaOfEffectDescription"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (!this_._internal_area_of_effect_description().empty()) {
      const ::std::string& _s = this_._internal_area_of_effect_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EffectResult.area_of_effect_description");
      target = stream->WriteStringMaybeAliased(7, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.EffectResult)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EffectResult::ByteSizeLong(const MessageLite& base) {
  const EffectResult& this_ = static_cast<const EffectResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EffectResult::ByteSizeLong() const {
  const EffectResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.EffectResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, string> parameters = 4 [json_name = "parameters"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_parameters_size());
      for (const auto& entry : this_._internal_parameters()) {
        total_size += _pbi::MapEntryFuncs<::std::string, ::std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    // string effect_type = 1 [json_name = "effectType"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_effect_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_effect_type());
      }
    }
    // string effect_name = 2 [json_name = "effectName"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_effect_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_effect_name());
      }
    }
    // string description = 3 [json_name = "description"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // string duration = 5 [json_name = "duration"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_duration().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_duration());
      }
    }
    // string area_of_effect_description = 7 [json_name = "areaOfEffectDescription"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (!this_._internal_area_of_effect_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_area_of_effect_description());
      }
    }
    // double intensity = 6 [json_name = "intensity"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_intensity()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EffectResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EffectResult*>(&to_msg);
  auto& from = static_cast<const EffectResult&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.EffectResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_effect_type().empty()) {
        _this->_internal_set_effect_type(from._internal_effect_type());
      } else {
        if (_this->_impl_.effect_type_.IsDefault()) {
          _this->_internal_set_effect_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_effect_name().empty()) {
        _this->_internal_set_effect_name(from._internal_effect_name());
      } else {
        if (_this->_impl_.effect_name_.IsDefault()) {
          _this->_internal_set_effect_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_duration().empty()) {
        _this->_internal_set_duration(from._internal_duration());
      } else {
        if (_this->_impl_.duration_.IsDefault()) {
          _this->_internal_set_duration("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (!from._internal_area_of_effect_description().empty()) {
        _this->_internal_set_area_of_effect_description(from._internal_area_of_effect_description());
      } else {
        if (_this->_impl_.area_of_effect_description_.IsDefault()) {
          _this->_internal_set_area_of_effect_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_intensity()) != 0) {
        _this->_impl_.intensity_ = from._impl_.intensity_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EffectResult::CopyFrom(const EffectResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.EffectResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EffectResult::InternalSwap(EffectResult* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.parameters_.InternalSwap(&other->_impl_.parameters_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.effect_type_, &other->_impl_.effect_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.effect_name_, &other->_impl_.effect_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.duration_, &other->_impl_.duration_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.area_of_effect_description_, &other->_impl_.area_of_effect_description_, arena);
  swap(_impl_.intensity_, other->_impl_.intensity_);
}

::google::protobuf::Metadata EffectResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MultipleResult::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MultipleResult>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MultipleResult, _impl_._has_bits_);
};

MultipleResult::MultipleResult(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MultipleResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.MultipleResult)
}
PROTOBUF_NDEBUG_INLINE MultipleResult::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::MultipleResult& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        results_{visibility, arena, from.results_},
        combination_method_(arena, from.combination_method_) {}

MultipleResult::MultipleResult(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MultipleResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MultipleResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MultipleResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.choose_count_ = from._impl_.choose_count_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.MultipleResult)
}
PROTOBUF_NDEBUG_INLINE MultipleResult::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        results_{visibility, arena},
        combination_method_(arena) {}

inline void MultipleResult::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.choose_count_ = {};
}
MultipleResult::~MultipleResult() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.MultipleResult)
  SharedDtor(*this);
}
inline void MultipleResult::SharedDtor(MessageLite& self) {
  MultipleResult& this_ = static_cast<MultipleResult&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.combination_method_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MultipleResult::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MultipleResult(arena);
}
constexpr auto MultipleResult::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(MultipleResult, _impl_.results_) +
          decltype(MultipleResult::_impl_.results_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(MultipleResult), alignof(MultipleResult), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&MultipleResult::PlacementNew_,
                                 sizeof(MultipleResult),
                                 alignof(MultipleResult));
  }
}
constexpr auto MultipleResult::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MultipleResult_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MultipleResult::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MultipleResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MultipleResult::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MultipleResult>(), &MultipleResult::ByteSizeLong,
              &MultipleResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MultipleResult, _impl_._cached_size_),
          false,
      },
      &MultipleResult::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MultipleResult_class_data_ =
        MultipleResult::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MultipleResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MultipleResult_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MultipleResult_class_data_.tc_table);
  return MultipleResult_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 54, 2>
MultipleResult::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MultipleResult, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    MultipleResult_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::MultipleResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .api.v1alpha1.TableEntryResult results = 1 [json_name = "results"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MultipleResult, _impl_.results_)}},
    // string combination_method = 2 [json_name = "combinationMethod"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(MultipleResult, _impl_.combination_method_)}},
    // int32 choose_count = 3 [json_name = "chooseCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MultipleResult, _impl_.choose_count_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(MultipleResult, _impl_.choose_count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .api.v1alpha1.TableEntryResult results = 1 [json_name = "results"];
    {PROTOBUF_FIELD_OFFSET(MultipleResult, _impl_.results_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string combination_method = 2 [json_name = "combinationMethod"];
    {PROTOBUF_FIELD_OFFSET(MultipleResult, _impl_.combination_method_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 choose_count = 3 [json_name = "chooseCount"];
    {PROTOBUF_FIELD_OFFSET(MultipleResult, _impl_.choose_count_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::TableEntryResult>()},
  }},
  {{
    "\33\0\22\0\0\0\0\0"
    "api.v1alpha1.MultipleResult"
    "combination_method"
  }},
};
PROTOBUF_NOINLINE void MultipleResult::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.MultipleResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.results_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.combination_method_.ClearNonDefaultToEmpty();
  }
  _impl_.choose_count_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MultipleResult::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MultipleResult& this_ = static_cast<const MultipleResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MultipleResult::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MultipleResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.MultipleResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .api.v1alpha1.TableEntryResult results = 1 [json_name = "results"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_results_size());
       i < n; i++) {
    const auto& repfield = this_._internal_results().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // string combination_method = 2 [json_name = "combinationMethod"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_combination_method().empty()) {
      const ::std::string& _s = this_._internal_combination_method();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.MultipleResult.combination_method");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int32 choose_count = 3 [json_name = "chooseCount"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_choose_count() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_choose_count(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.MultipleResult)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MultipleResult::ByteSizeLong(const MessageLite& base) {
  const MultipleResult& this_ = static_cast<const MultipleResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MultipleResult::ByteSizeLong() const {
  const MultipleResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.MultipleResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.TableEntryResult results = 1 [json_name = "results"];
    {
      total_size += 1UL * this_._internal_results_size();
      for (const auto& msg : this_._internal_results()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string combination_method = 2 [json_name = "combinationMethod"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_combination_method().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_combination_method());
      }
    }
    // int32 choose_count = 3 [json_name = "chooseCount"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_choose_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_choose_count());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MultipleResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MultipleResult*>(&to_msg);
  auto& from = static_cast<const MultipleResult&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.MultipleResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_results()->MergeFrom(
      from._internal_results());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_combination_method().empty()) {
        _this->_internal_set_combination_method(from._internal_combination_method());
      } else {
        if (_this->_impl_.combination_method_.IsDefault()) {
          _this->_internal_set_combination_method("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_choose_count() != 0) {
        _this->_impl_.choose_count_ = from._impl_.choose_count_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MultipleResult::CopyFrom(const MultipleResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.MultipleResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MultipleResult::InternalSwap(MultipleResult* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.results_.InternalSwap(&other->_impl_.results_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.combination_method_, &other->_impl_.combination_method_, arena);
  swap(_impl_.choose_count_, other->_impl_.choose_count_);
}

::google::protobuf::Metadata MultipleResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EntryCondition::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<EntryCondition>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EntryCondition, _impl_._has_bits_);
};

EntryCondition::EntryCondition(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EntryCondition_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.EntryCondition)
}
PROTOBUF_NDEBUG_INLINE EntryCondition::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::EntryCondition& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        condition_type_(arena, from.condition_type_),
        parameter_name_(arena, from.parameter_name_),
        operator__(arena, from.operator__),
        expected_value_(arena, from.expected_value_) {}

EntryCondition::EntryCondition(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EntryCondition& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EntryCondition_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EntryCondition* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.is_required_ = from._impl_.is_required_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.EntryCondition)
}
PROTOBUF_NDEBUG_INLINE EntryCondition::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        condition_type_(arena),
        parameter_name_(arena),
        operator__(arena),
        expected_value_(arena) {}

inline void EntryCondition::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.is_required_ = {};
}
EntryCondition::~EntryCondition() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.EntryCondition)
  SharedDtor(*this);
}
inline void EntryCondition::SharedDtor(MessageLite& self) {
  EntryCondition& this_ = static_cast<EntryCondition&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.condition_type_.Destroy();
  this_._impl_.parameter_name_.Destroy();
  this_._impl_.operator__.Destroy();
  this_._impl_.expected_value_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EntryCondition::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EntryCondition(arena);
}
constexpr auto EntryCondition::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EntryCondition),
                                            alignof(EntryCondition));
}
constexpr auto EntryCondition::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EntryCondition_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EntryCondition::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EntryCondition>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EntryCondition::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EntryCondition>(), &EntryCondition::ByteSizeLong,
              &EntryCondition::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EntryCondition, _impl_._cached_size_),
          false,
      },
      &EntryCondition::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EntryCondition_class_data_ =
        EntryCondition::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EntryCondition::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EntryCondition_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EntryCondition_class_data_.tc_table);
  return EntryCondition_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 86, 2>
EntryCondition::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EntryCondition, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    EntryCondition_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::EntryCondition>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string condition_type = 1 [json_name = "conditionType"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EntryCondition, _impl_.condition_type_)}},
    // string parameter_name = 2 [json_name = "parameterName"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(EntryCondition, _impl_.parameter_name_)}},
    // string operator = 3 [json_name = "operator"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(EntryCondition, _impl_.operator__)}},
    // string expected_value = 4 [json_name = "expectedValue"];
    {::_pbi::TcParser::FastUS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(EntryCondition, _impl_.expected_value_)}},
    // bool is_required = 5 [json_name = "isRequired"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(EntryCondition, _impl_.is_required_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(EntryCondition, _impl_.is_required_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string condition_type = 1 [json_name = "conditionType"];
    {PROTOBUF_FIELD_OFFSET(EntryCondition, _impl_.condition_type_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string parameter_name = 2 [json_name = "parameterName"];
    {PROTOBUF_FIELD_OFFSET(EntryCondition, _impl_.parameter_name_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string operator = 3 [json_name = "operator"];
    {PROTOBUF_FIELD_OFFSET(EntryCondition, _impl_.operator__), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string expected_value = 4 [json_name = "expectedValue"];
    {PROTOBUF_FIELD_OFFSET(EntryCondition, _impl_.expected_value_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool is_required = 5 [json_name = "isRequired"];
    {PROTOBUF_FIELD_OFFSET(EntryCondition, _impl_.is_required_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\33\16\16\10\16\0\0\0"
    "api.v1alpha1.EntryCondition"
    "condition_type"
    "parameter_name"
    "operator"
    "expected_value"
  }},
};
PROTOBUF_NOINLINE void EntryCondition::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.EntryCondition)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.condition_type_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.parameter_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.operator__.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.expected_value_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.is_required_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EntryCondition::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EntryCondition& this_ = static_cast<const EntryCondition&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EntryCondition::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EntryCondition& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.EntryCondition)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string condition_type = 1 [json_name = "conditionType"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_condition_type().empty()) {
      const ::std::string& _s = this_._internal_condition_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EntryCondition.condition_type");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string parameter_name = 2 [json_name = "parameterName"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_parameter_name().empty()) {
      const ::std::string& _s = this_._internal_parameter_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EntryCondition.parameter_name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string operator = 3 [json_name = "operator"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_operator_().empty()) {
      const ::std::string& _s = this_._internal_operator_();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EntryCondition.operator");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string expected_value = 4 [json_name = "expectedValue"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (!this_._internal_expected_value().empty()) {
      const ::std::string& _s = this_._internal_expected_value();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EntryCondition.expected_value");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // bool is_required = 5 [json_name = "isRequired"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_is_required() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          5, this_._internal_is_required(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.EntryCondition)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EntryCondition::ByteSizeLong(const MessageLite& base) {
  const EntryCondition& this_ = static_cast<const EntryCondition&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EntryCondition::ByteSizeLong() const {
  const EntryCondition& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.EntryCondition)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // string condition_type = 1 [json_name = "conditionType"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_condition_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_condition_type());
      }
    }
    // string parameter_name = 2 [json_name = "parameterName"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_parameter_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_parameter_name());
      }
    }
    // string operator = 3 [json_name = "operator"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_operator_().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_operator_());
      }
    }
    // string expected_value = 4 [json_name = "expectedValue"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_expected_value().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_expected_value());
      }
    }
    // bool is_required = 5 [json_name = "isRequired"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_is_required() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EntryCondition::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EntryCondition*>(&to_msg);
  auto& from = static_cast<const EntryCondition&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.EntryCondition)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_condition_type().empty()) {
        _this->_internal_set_condition_type(from._internal_condition_type());
      } else {
        if (_this->_impl_.condition_type_.IsDefault()) {
          _this->_internal_set_condition_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_parameter_name().empty()) {
        _this->_internal_set_parameter_name(from._internal_parameter_name());
      } else {
        if (_this->_impl_.parameter_name_.IsDefault()) {
          _this->_internal_set_parameter_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_operator_().empty()) {
        _this->_internal_set_operator_(from._internal_operator_());
      } else {
        if (_this->_impl_.operator__.IsDefault()) {
          _this->_internal_set_operator_("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_expected_value().empty()) {
        _this->_internal_set_expected_value(from._internal_expected_value());
      } else {
        if (_this->_impl_.expected_value_.IsDefault()) {
          _this->_internal_set_expected_value("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_is_required() != 0) {
        _this->_impl_.is_required_ = from._impl_.is_required_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EntryCondition::CopyFrom(const EntryCondition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.EntryCondition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EntryCondition::InternalSwap(EntryCondition* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.condition_type_, &other->_impl_.condition_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.parameter_name_, &other->_impl_.parameter_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.operator__, &other->_impl_.operator__, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.expected_value_, &other->_impl_.expected_value_, arena);
  swap(_impl_.is_required_, other->_impl_.is_required_);
}

::google::protobuf::Metadata EntryCondition::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TableOptions::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TableOptions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TableOptions, _impl_._has_bits_);
};

TableOptions::TableOptions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TableOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.TableOptions)
}
PROTOBUF_NDEBUG_INLINE TableOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::TableOptions& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        sort_criteria_(arena, from.sort_criteria_) {}

TableOptions::TableOptions(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TableOptions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TableOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TableOptions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, max_results_per_roll_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, max_results_per_roll_),
           offsetof(Impl_, group_similar_results_) -
               offsetof(Impl_, max_results_per_roll_) +
               sizeof(Impl_::group_similar_results_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.TableOptions)
}
PROTOBUF_NDEBUG_INLINE TableOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        sort_criteria_(arena) {}

inline void TableOptions::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, max_results_per_roll_),
           0,
           offsetof(Impl_, group_similar_results_) -
               offsetof(Impl_, max_results_per_roll_) +
               sizeof(Impl_::group_similar_results_));
}
TableOptions::~TableOptions() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.TableOptions)
  SharedDtor(*this);
}
inline void TableOptions::SharedDtor(MessageLite& self) {
  TableOptions& this_ = static_cast<TableOptions&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.sort_criteria_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TableOptions::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TableOptions(arena);
}
constexpr auto TableOptions::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TableOptions),
                                            alignof(TableOptions));
}
constexpr auto TableOptions::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TableOptions_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TableOptions::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TableOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TableOptions::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TableOptions>(), &TableOptions::ByteSizeLong,
              &TableOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TableOptions, _impl_._cached_size_),
          false,
      },
      &TableOptions::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TableOptions_class_data_ =
        TableOptions::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TableOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TableOptions_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TableOptions_class_data_.tc_table);
  return TableOptions_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 47, 2>
TableOptions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TableOptions, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TableOptions_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::TableOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool allow_duplicates = 1 [json_name = "allowDuplicates"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TableOptions, _impl_.allow_duplicates_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(TableOptions, _impl_.allow_duplicates_)}},
    // int32 max_results_per_roll = 2 [json_name = "maxResultsPerRoll"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TableOptions, _impl_.max_results_per_roll_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TableOptions, _impl_.max_results_per_roll_)}},
    // int32 default_roll_count = 3 [json_name = "defaultRollCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TableOptions, _impl_.default_roll_count_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(TableOptions, _impl_.default_roll_count_)}},
    // bool sort_results = 4 [json_name = "sortResults"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TableOptions, _impl_.sort_results_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(TableOptions, _impl_.sort_results_)}},
    // string sort_criteria = 5 [json_name = "sortCriteria"];
    {::_pbi::TcParser::FastUS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(TableOptions, _impl_.sort_criteria_)}},
    // bool group_similar_results = 6 [json_name = "groupSimilarResults"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TableOptions, _impl_.group_similar_results_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(TableOptions, _impl_.group_similar_results_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bool allow_duplicates = 1 [json_name = "allowDuplicates"];
    {PROTOBUF_FIELD_OFFSET(TableOptions, _impl_.allow_duplicates_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // int32 max_results_per_roll = 2 [json_name = "maxResultsPerRoll"];
    {PROTOBUF_FIELD_OFFSET(TableOptions, _impl_.max_results_per_roll_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 default_roll_count = 3 [json_name = "defaultRollCount"];
    {PROTOBUF_FIELD_OFFSET(TableOptions, _impl_.default_roll_count_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // bool sort_results = 4 [json_name = "sortResults"];
    {PROTOBUF_FIELD_OFFSET(TableOptions, _impl_.sort_results_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string sort_criteria = 5 [json_name = "sortCriteria"];
    {PROTOBUF_FIELD_OFFSET(TableOptions, _impl_.sort_criteria_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool group_similar_results = 6 [json_name = "groupSimilarResults"];
    {PROTOBUF_FIELD_OFFSET(TableOptions, _impl_.group_similar_results_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\31\0\0\0\0\15\0\0"
    "api.v1alpha1.TableOptions"
    "sort_criteria"
  }},
};
PROTOBUF_NOINLINE void TableOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.TableOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.sort_criteria_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x0000003eU) != 0) {
    ::memset(&_impl_.max_results_per_roll_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.group_similar_results_) -
        reinterpret_cast<char*>(&_impl_.max_results_per_roll_)) + sizeof(_impl_.group_similar_results_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TableOptions::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TableOptions& this_ = static_cast<const TableOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TableOptions::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TableOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.TableOptions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool allow_duplicates = 1 [json_name = "allowDuplicates"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_allow_duplicates() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_allow_duplicates(), target);
    }
  }

  // int32 max_results_per_roll = 2 [json_name = "maxResultsPerRoll"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_max_results_per_roll() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_max_results_per_roll(), target);
    }
  }

  // int32 default_roll_count = 3 [json_name = "defaultRollCount"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_default_roll_count() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_default_roll_count(), target);
    }
  }

  // bool sort_results = 4 [json_name = "sortResults"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_sort_results() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_sort_results(), target);
    }
  }

  // string sort_criteria = 5 [json_name = "sortCriteria"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_sort_criteria().empty()) {
      const ::std::string& _s = this_._internal_sort_criteria();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TableOptions.sort_criteria");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  // bool group_similar_results = 6 [json_name = "groupSimilarResults"];
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (this_._internal_group_similar_results() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          6, this_._internal_group_similar_results(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.TableOptions)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TableOptions::ByteSizeLong(const MessageLite& base) {
  const TableOptions& this_ = static_cast<const TableOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TableOptions::ByteSizeLong() const {
  const TableOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.TableOptions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    // string sort_criteria = 5 [json_name = "sortCriteria"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_sort_criteria().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_sort_criteria());
      }
    }
    // int32 max_results_per_roll = 2 [json_name = "maxResultsPerRoll"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_max_results_per_roll() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_max_results_per_roll());
      }
    }
    // int32 default_roll_count = 3 [json_name = "defaultRollCount"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_default_roll_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_default_roll_count());
      }
    }
    // bool allow_duplicates = 1 [json_name = "allowDuplicates"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_allow_duplicates() != 0) {
        total_size += 2;
      }
    }
    // bool sort_results = 4 [json_name = "sortResults"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_sort_results() != 0) {
        total_size += 2;
      }
    }
    // bool group_similar_results = 6 [json_name = "groupSimilarResults"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_group_similar_results() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TableOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TableOptions*>(&to_msg);
  auto& from = static_cast<const TableOptions&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.TableOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_sort_criteria().empty()) {
        _this->_internal_set_sort_criteria(from._internal_sort_criteria());
      } else {
        if (_this->_impl_.sort_criteria_.IsDefault()) {
          _this->_internal_set_sort_criteria("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_max_results_per_roll() != 0) {
        _this->_impl_.max_results_per_roll_ = from._impl_.max_results_per_roll_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_default_roll_count() != 0) {
        _this->_impl_.default_roll_count_ = from._impl_.default_roll_count_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_allow_duplicates() != 0) {
        _this->_impl_.allow_duplicates_ = from._impl_.allow_duplicates_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_sort_results() != 0) {
        _this->_impl_.sort_results_ = from._impl_.sort_results_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_group_similar_results() != 0) {
        _this->_impl_.group_similar_results_ = from._impl_.group_similar_results_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TableOptions::CopyFrom(const TableOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.TableOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TableOptions::InternalSwap(TableOptions* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sort_criteria_, &other->_impl_.sort_criteria_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TableOptions, _impl_.group_similar_results_)
      + sizeof(TableOptions::_impl_.group_similar_results_)
      - PROTOBUF_FIELD_OFFSET(TableOptions, _impl_.max_results_per_roll_)>(
          reinterpret_cast<char*>(&_impl_.max_results_per_roll_),
          reinterpret_cast<char*>(&other->_impl_.max_results_per_roll_));
}

::google::protobuf::Metadata TableOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SelectionTableMetadata::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SelectionTableMetadata>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SelectionTableMetadata, _impl_._has_bits_);
};

SelectionTableMetadata::SelectionTableMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SelectionTableMetadata_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.SelectionTableMetadata)
}
PROTOBUF_NDEBUG_INLINE SelectionTableMetadata::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::SelectionTableMetadata& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        tags_{visibility, arena, from.tags_},
        author_(arena, from.author_),
        version_(arena, from.version_),
        source_(arena, from.source_),
        copyright_(arena, from.copyright_) {}

SelectionTableMetadata::SelectionTableMetadata(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SelectionTableMetadata& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SelectionTableMetadata_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SelectionTableMetadata* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.usage_stats_ = ((cached_has_bits & 0x00000010U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.usage_stats_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, created_at_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, created_at_),
           offsetof(Impl_, is_official_) -
               offsetof(Impl_, created_at_) +
               sizeof(Impl_::is_official_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.SelectionTableMetadata)
}
PROTOBUF_NDEBUG_INLINE SelectionTableMetadata::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        tags_{visibility, arena},
        author_(arena),
        version_(arena),
        source_(arena),
        copyright_(arena) {}

inline void SelectionTableMetadata::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, usage_stats_),
           0,
           offsetof(Impl_, is_official_) -
               offsetof(Impl_, usage_stats_) +
               sizeof(Impl_::is_official_));
}
SelectionTableMetadata::~SelectionTableMetadata() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.SelectionTableMetadata)
  SharedDtor(*this);
}
inline void SelectionTableMetadata::SharedDtor(MessageLite& self) {
  SelectionTableMetadata& this_ = static_cast<SelectionTableMetadata&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.author_.Destroy();
  this_._impl_.version_.Destroy();
  this_._impl_.source_.Destroy();
  this_._impl_.copyright_.Destroy();
  delete this_._impl_.usage_stats_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SelectionTableMetadata::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SelectionTableMetadata(arena);
}
constexpr auto SelectionTableMetadata::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SelectionTableMetadata, _impl_.tags_) +
          decltype(SelectionTableMetadata::_impl_.tags_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SelectionTableMetadata), alignof(SelectionTableMetadata), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SelectionTableMetadata::PlacementNew_,
                                 sizeof(SelectionTableMetadata),
                                 alignof(SelectionTableMetadata));
  }
}
constexpr auto SelectionTableMetadata::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SelectionTableMetadata_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SelectionTableMetadata::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SelectionTableMetadata>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SelectionTableMetadata::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SelectionTableMetadata>(), &SelectionTableMetadata::ByteSizeLong,
              &SelectionTableMetadata::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SelectionTableMetadata, _impl_._cached_size_),
          false,
      },
      &SelectionTableMetadata::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SelectionTableMetadata_class_data_ =
        SelectionTableMetadata::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SelectionTableMetadata::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SelectionTableMetadata_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SelectionTableMetadata_class_data_.tc_table);
  return SelectionTableMetadata_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 1, 84, 2>
SelectionTableMetadata::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SelectionTableMetadata, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SelectionTableMetadata_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::SelectionTableMetadata>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string author = 1 [json_name = "author"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SelectionTableMetadata, _impl_.author_)}},
    // string version = 2 [json_name = "version"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SelectionTableMetadata, _impl_.version_)}},
    // int64 created_at = 3 [json_name = "createdAt"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SelectionTableMetadata, _impl_.created_at_), 5>(),
     {24, 5, 0, PROTOBUF_FIELD_OFFSET(SelectionTableMetadata, _impl_.created_at_)}},
    // int64 updated_at = 4 [json_name = "updatedAt"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SelectionTableMetadata, _impl_.updated_at_), 6>(),
     {32, 6, 0, PROTOBUF_FIELD_OFFSET(SelectionTableMetadata, _impl_.updated_at_)}},
    // .api.v1alpha1.TableUsageStats usage_stats = 5 [json_name = "usageStats"];
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 0, PROTOBUF_FIELD_OFFSET(SelectionTableMetadata, _impl_.usage_stats_)}},
    // repeated string tags = 6 [json_name = "tags"];
    {::_pbi::TcParser::FastUR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(SelectionTableMetadata, _impl_.tags_)}},
    // string source = 7 [json_name = "source"];
    {::_pbi::TcParser::FastUS1,
     {58, 2, 0, PROTOBUF_FIELD_OFFSET(SelectionTableMetadata, _impl_.source_)}},
    // string copyright = 8 [json_name = "copyright"];
    {::_pbi::TcParser::FastUS1,
     {66, 3, 0, PROTOBUF_FIELD_OFFSET(SelectionTableMetadata, _impl_.copyright_)}},
    // bool is_official = 9 [json_name = "isOfficial"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SelectionTableMetadata, _impl_.is_official_), 7>(),
     {72, 7, 0, PROTOBUF_FIELD_OFFSET(SelectionTableMetadata, _impl_.is_official_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string author = 1 [json_name = "author"];
    {PROTOBUF_FIELD_OFFSET(SelectionTableMetadata, _impl_.author_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string version = 2 [json_name = "version"];
    {PROTOBUF_FIELD_OFFSET(SelectionTableMetadata, _impl_.version_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 created_at = 3 [json_name = "createdAt"];
    {PROTOBUF_FIELD_OFFSET(SelectionTableMetadata, _impl_.created_at_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 updated_at = 4 [json_name = "updatedAt"];
    {PROTOBUF_FIELD_OFFSET(SelectionTableMetadata, _impl_.updated_at_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // .api.v1alpha1.TableUsageStats usage_stats = 5 [json_name = "usageStats"];
    {PROTOBUF_FIELD_OFFSET(SelectionTableMetadata, _impl_.usage_stats_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string tags = 6 [json_name = "tags"];
    {PROTOBUF_FIELD_OFFSET(SelectionTableMetadata, _impl_.tags_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string source = 7 [json_name = "source"];
    {PROTOBUF_FIELD_OFFSET(SelectionTableMetadata, _impl_.source_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string copyright = 8 [json_name = "copyright"];
    {PROTOBUF_FIELD_OFFSET(SelectionTableMetadata, _impl_.copyright_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool is_official = 9 [json_name = "isOfficial"];
    {PROTOBUF_FIELD_OFFSET(SelectionTableMetadata, _impl_.is_official_), _Internal::kHasBitsOffset + 7, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::TableUsageStats>()},
  }},
  {{
    "\43\6\7\0\0\0\4\6\11\0\0\0\0\0\0\0"
    "api.v1alpha1.SelectionTableMetadata"
    "author"
    "version"
    "tags"
    "source"
    "copyright"
  }},
};
PROTOBUF_NOINLINE void SelectionTableMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.SelectionTableMetadata)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tags_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.author_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.version_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.source_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.copyright_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(_impl_.usage_stats_ != nullptr);
      _impl_.usage_stats_->Clear();
    }
  }
  if ((cached_has_bits & 0x000000e0U) != 0) {
    ::memset(&_impl_.created_at_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_official_) -
        reinterpret_cast<char*>(&_impl_.created_at_)) + sizeof(_impl_.is_official_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SelectionTableMetadata::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SelectionTableMetadata& this_ = static_cast<const SelectionTableMetadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SelectionTableMetadata::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SelectionTableMetadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.SelectionTableMetadata)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string author = 1 [json_name = "author"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_author().empty()) {
      const ::std::string& _s = this_._internal_author();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.SelectionTableMetadata.author");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string version = 2 [json_name = "version"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_version().empty()) {
      const ::std::string& _s = this_._internal_version();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.SelectionTableMetadata.version");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int64 created_at = 3 [json_name = "createdAt"];
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (this_._internal_created_at() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<3>(
              stream, this_._internal_created_at(), target);
    }
  }

  // int64 updated_at = 4 [json_name = "updatedAt"];
  if ((this_._impl_._has_bits_[0] & 0x00000040U) != 0) {
    if (this_._internal_updated_at() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<4>(
              stream, this_._internal_updated_at(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.TableUsageStats usage_stats = 5 [json_name = "usageStats"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.usage_stats_, this_._impl_.usage_stats_->GetCachedSize(), target,
        stream);
  }

  // repeated string tags = 6 [json_name = "tags"];
  for (int i = 0, n = this_._internal_tags_size(); i < n; ++i) {
    const auto& s = this_._internal_tags().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.SelectionTableMetadata.tags");
    target = stream->WriteString(6, s, target);
  }

  // string source = 7 [json_name = "source"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    if (!this_._internal_source().empty()) {
      const ::std::string& _s = this_._internal_source();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.SelectionTableMetadata.source");
      target = stream->WriteStringMaybeAliased(7, _s, target);
    }
  }

  // string copyright = 8 [json_name = "copyright"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    if (!this_._internal_copyright().empty()) {
      const ::std::string& _s = this_._internal_copyright();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.SelectionTableMetadata.copyright");
      target = stream->WriteStringMaybeAliased(8, _s, target);
    }
  }

  // bool is_official = 9 [json_name = "isOfficial"];
  if ((cached_has_bits & 0x00000080U) != 0) {
    if (this_._internal_is_official() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          9, this_._internal_is_official(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.SelectionTableMetadata)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SelectionTableMetadata::ByteSizeLong(const MessageLite& base) {
  const SelectionTableMetadata& this_ = static_cast<const SelectionTableMetadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SelectionTableMetadata::ByteSizeLong() const {
  const SelectionTableMetadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.SelectionTableMetadata)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string tags = 6 [json_name = "tags"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_tags().size());
      for (int i = 0, n = this_._internal_tags().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_tags().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    // string author = 1 [json_name = "author"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_author().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_author());
      }
    }
    // string version = 2 [json_name = "version"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_version().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_version());
      }
    }
    // string source = 7 [json_name = "source"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_source().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_source());
      }
    }
    // string copyright = 8 [json_name = "copyright"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_copyright().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_copyright());
      }
    }
    // .api.v1alpha1.TableUsageStats usage_stats = 5 [json_name = "usageStats"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.usage_stats_);
    }
    // int64 created_at = 3 [json_name = "createdAt"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_created_at() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_created_at());
      }
    }
    // int64 updated_at = 4 [json_name = "updatedAt"];
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (this_._internal_updated_at() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_updated_at());
      }
    }
    // bool is_official = 9 [json_name = "isOfficial"];
    if ((cached_has_bits & 0x00000080U) != 0) {
      if (this_._internal_is_official() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SelectionTableMetadata::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SelectionTableMetadata*>(&to_msg);
  auto& from = static_cast<const SelectionTableMetadata&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.SelectionTableMetadata)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tags()->MergeFrom(from._internal_tags());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_author().empty()) {
        _this->_internal_set_author(from._internal_author());
      } else {
        if (_this->_impl_.author_.IsDefault()) {
          _this->_internal_set_author("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_version().empty()) {
        _this->_internal_set_version(from._internal_version());
      } else {
        if (_this->_impl_.version_.IsDefault()) {
          _this->_internal_set_version("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_source().empty()) {
        _this->_internal_set_source(from._internal_source());
      } else {
        if (_this->_impl_.source_.IsDefault()) {
          _this->_internal_set_source("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_copyright().empty()) {
        _this->_internal_set_copyright(from._internal_copyright());
      } else {
        if (_this->_impl_.copyright_.IsDefault()) {
          _this->_internal_set_copyright("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(from._impl_.usage_stats_ != nullptr);
      if (_this->_impl_.usage_stats_ == nullptr) {
        _this->_impl_.usage_stats_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.usage_stats_);
      } else {
        _this->_impl_.usage_stats_->MergeFrom(*from._impl_.usage_stats_);
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_created_at() != 0) {
        _this->_impl_.created_at_ = from._impl_.created_at_;
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (from._internal_updated_at() != 0) {
        _this->_impl_.updated_at_ = from._impl_.updated_at_;
      }
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      if (from._internal_is_official() != 0) {
        _this->_impl_.is_official_ = from._impl_.is_official_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SelectionTableMetadata::CopyFrom(const SelectionTableMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.SelectionTableMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SelectionTableMetadata::InternalSwap(SelectionTableMetadata* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.author_, &other->_impl_.author_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, &other->_impl_.version_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_, &other->_impl_.source_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.copyright_, &other->_impl_.copyright_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SelectionTableMetadata, _impl_.is_official_)
      + sizeof(SelectionTableMetadata::_impl_.is_official_)
      - PROTOBUF_FIELD_OFFSET(SelectionTableMetadata, _impl_.usage_stats_)>(
          reinterpret_cast<char*>(&_impl_.usage_stats_),
          reinterpret_cast<char*>(&other->_impl_.usage_stats_));
}

::google::protobuf::Metadata SelectionTableMetadata::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TableUsageStats::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TableUsageStats>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TableUsageStats, _impl_._has_bits_);
};

TableUsageStats::TableUsageStats(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TableUsageStats_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.TableUsageStats)
}
PROTOBUF_NDEBUG_INLINE TableUsageStats::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::TableUsageStats& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        most_common_result_(arena, from.most_common_result_),
        least_common_result_(arena, from.least_common_result_) {}

TableUsageStats::TableUsageStats(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TableUsageStats& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TableUsageStats_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TableUsageStats* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, roll_count_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, roll_count_),
           offsetof(Impl_, last_used_) -
               offsetof(Impl_, roll_count_) +
               sizeof(Impl_::last_used_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.TableUsageStats)
}
PROTOBUF_NDEBUG_INLINE TableUsageStats::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        most_common_result_(arena),
        least_common_result_(arena) {}

inline void TableUsageStats::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, roll_count_),
           0,
           offsetof(Impl_, last_used_) -
               offsetof(Impl_, roll_count_) +
               sizeof(Impl_::last_used_));
}
TableUsageStats::~TableUsageStats() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.TableUsageStats)
  SharedDtor(*this);
}
inline void TableUsageStats::SharedDtor(MessageLite& self) {
  TableUsageStats& this_ = static_cast<TableUsageStats&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.most_common_result_.Destroy();
  this_._impl_.least_common_result_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TableUsageStats::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TableUsageStats(arena);
}
constexpr auto TableUsageStats::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TableUsageStats),
                                            alignof(TableUsageStats));
}
constexpr auto TableUsageStats::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TableUsageStats_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TableUsageStats::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TableUsageStats>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TableUsageStats::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TableUsageStats>(), &TableUsageStats::ByteSizeLong,
              &TableUsageStats::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TableUsageStats, _impl_._cached_size_),
          false,
      },
      &TableUsageStats::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TableUsageStats_class_data_ =
        TableUsageStats::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TableUsageStats::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TableUsageStats_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TableUsageStats_class_data_.tc_table);
  return TableUsageStats_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 74, 2>
TableUsageStats::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TableUsageStats, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TableUsageStats_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::TableUsageStats>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 roll_count = 1 [json_name = "rollCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TableUsageStats, _impl_.roll_count_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(TableUsageStats, _impl_.roll_count_)}},
    // int64 results_generated = 2 [json_name = "resultsGenerated"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TableUsageStats, _impl_.results_generated_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(TableUsageStats, _impl_.results_generated_)}},
    // string most_common_result = 3 [json_name = "mostCommonResult"];
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(TableUsageStats, _impl_.most_common_result_)}},
    // string least_common_result = 4 [json_name = "leastCommonResult"];
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(TableUsageStats, _impl_.least_common_result_)}},
    // double average_rolls_per_session = 5 [json_name = "averageRollsPerSession"];
    {::_pbi::TcParser::FastF64S1,
     {41, 4, 0, PROTOBUF_FIELD_OFFSET(TableUsageStats, _impl_.average_rolls_per_session_)}},
    // int64 last_used = 6 [json_name = "lastUsed"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TableUsageStats, _impl_.last_used_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(TableUsageStats, _impl_.last_used_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 roll_count = 1 [json_name = "rollCount"];
    {PROTOBUF_FIELD_OFFSET(TableUsageStats, _impl_.roll_count_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 results_generated = 2 [json_name = "resultsGenerated"];
    {PROTOBUF_FIELD_OFFSET(TableUsageStats, _impl_.results_generated_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // string most_common_result = 3 [json_name = "mostCommonResult"];
    {PROTOBUF_FIELD_OFFSET(TableUsageStats, _impl_.most_common_result_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string least_common_result = 4 [json_name = "leastCommonResult"];
    {PROTOBUF_FIELD_OFFSET(TableUsageStats, _impl_.least_common_result_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double average_rolls_per_session = 5 [json_name = "averageRollsPerSession"];
    {PROTOBUF_FIELD_OFFSET(TableUsageStats, _impl_.average_rolls_per_session_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // int64 last_used = 6 [json_name = "lastUsed"];
    {PROTOBUF_FIELD_OFFSET(TableUsageStats, _impl_.last_used_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\34\0\0\22\23\0\0\0"
    "api.v1alpha1.TableUsageStats"
    "most_common_result"
    "least_common_result"
  }},
};
PROTOBUF_NOINLINE void TableUsageStats::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.TableUsageStats)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.most_common_result_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.least_common_result_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000003cU) != 0) {
    ::memset(&_impl_.roll_count_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.last_used_) -
        reinterpret_cast<char*>(&_impl_.roll_count_)) + sizeof(_impl_.last_used_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TableUsageStats::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TableUsageStats& this_ = static_cast<const TableUsageStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TableUsageStats::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TableUsageStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.TableUsageStats)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 roll_count = 1 [json_name = "rollCount"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_roll_count() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_roll_count(), target);
    }
  }

  // int64 results_generated = 2 [json_name = "resultsGenerated"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_results_generated() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
              stream, this_._internal_results_generated(), target);
    }
  }

  // string most_common_result = 3 [json_name = "mostCommonResult"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_most_common_result().empty()) {
      const ::std::string& _s = this_._internal_most_common_result();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TableUsageStats.most_common_result");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string least_common_result = 4 [json_name = "leastCommonResult"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_least_common_result().empty()) {
      const ::std::string& _s = this_._internal_least_common_result();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TableUsageStats.least_common_result");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // double average_rolls_per_session = 5 [json_name = "averageRollsPerSession"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_average_rolls_per_session()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          5, this_._internal_average_rolls_per_session(), target);
    }
  }

  // int64 last_used = 6 [json_name = "lastUsed"];
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (this_._internal_last_used() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<6>(
              stream, this_._internal_last_used(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.TableUsageStats)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TableUsageStats::ByteSizeLong(const MessageLite& base) {
  const TableUsageStats& this_ = static_cast<const TableUsageStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TableUsageStats::ByteSizeLong() const {
  const TableUsageStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.TableUsageStats)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    // string most_common_result = 3 [json_name = "mostCommonResult"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_most_common_result().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_most_common_result());
      }
    }
    // string least_common_result = 4 [json_name = "leastCommonResult"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_least_common_result().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_least_common_result());
      }
    }
    // int64 roll_count = 1 [json_name = "rollCount"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_roll_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_roll_count());
      }
    }
    // int64 results_generated = 2 [json_name = "resultsGenerated"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_results_generated() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_results_generated());
      }
    }
    // double average_rolls_per_session = 5 [json_name = "averageRollsPerSession"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_average_rolls_per_session()) != 0) {
        total_size += 9;
      }
    }
    // int64 last_used = 6 [json_name = "lastUsed"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_last_used() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_last_used());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TableUsageStats::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TableUsageStats*>(&to_msg);
  auto& from = static_cast<const TableUsageStats&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.TableUsageStats)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_most_common_result().empty()) {
        _this->_internal_set_most_common_result(from._internal_most_common_result());
      } else {
        if (_this->_impl_.most_common_result_.IsDefault()) {
          _this->_internal_set_most_common_result("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_least_common_result().empty()) {
        _this->_internal_set_least_common_result(from._internal_least_common_result());
      } else {
        if (_this->_impl_.least_common_result_.IsDefault()) {
          _this->_internal_set_least_common_result("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_roll_count() != 0) {
        _this->_impl_.roll_count_ = from._impl_.roll_count_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_results_generated() != 0) {
        _this->_impl_.results_generated_ = from._impl_.results_generated_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_average_rolls_per_session()) != 0) {
        _this->_impl_.average_rolls_per_session_ = from._impl_.average_rolls_per_session_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_last_used() != 0) {
        _this->_impl_.last_used_ = from._impl_.last_used_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TableUsageStats::CopyFrom(const TableUsageStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.TableUsageStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TableUsageStats::InternalSwap(TableUsageStats* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.most_common_result_, &other->_impl_.most_common_result_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.least_common_result_, &other->_impl_.least_common_result_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TableUsageStats, _impl_.last_used_)
      + sizeof(TableUsageStats::_impl_.last_used_)
      - PROTOBUF_FIELD_OFFSET(TableUsageStats, _impl_.roll_count_)>(
          reinterpret_cast<char*>(&_impl_.roll_count_),
          reinterpret_cast<char*>(&other->_impl_.roll_count_));
}

::google::protobuf::Metadata TableUsageStats::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TableValidationOptions::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TableValidationOptions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TableValidationOptions, _impl_._has_bits_);
};

TableValidationOptions::TableValidationOptions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TableValidationOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.TableValidationOptions)
}
TableValidationOptions::TableValidationOptions(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TableValidationOptions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TableValidationOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE TableValidationOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void TableValidationOptions::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, check_range_gaps_),
           0,
           offsetof(Impl_, validate_dice_config_) -
               offsetof(Impl_, check_range_gaps_) +
               sizeof(Impl_::validate_dice_config_));
}
TableValidationOptions::~TableValidationOptions() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.TableValidationOptions)
  SharedDtor(*this);
}
inline void TableValidationOptions::SharedDtor(MessageLite& self) {
  TableValidationOptions& this_ = static_cast<TableValidationOptions&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TableValidationOptions::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TableValidationOptions(arena);
}
constexpr auto TableValidationOptions::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TableValidationOptions),
                                            alignof(TableValidationOptions));
}
constexpr auto TableValidationOptions::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TableValidationOptions_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TableValidationOptions::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TableValidationOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TableValidationOptions::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TableValidationOptions>(), &TableValidationOptions::ByteSizeLong,
              &TableValidationOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TableValidationOptions, _impl_._cached_size_),
          false,
      },
      &TableValidationOptions::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TableValidationOptions_class_data_ =
        TableValidationOptions::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TableValidationOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TableValidationOptions_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TableValidationOptions_class_data_.tc_table);
  return TableValidationOptions_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2>
TableValidationOptions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TableValidationOptions, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TableValidationOptions_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::TableValidationOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool check_range_gaps = 1 [json_name = "checkRangeGaps"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TableValidationOptions, _impl_.check_range_gaps_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(TableValidationOptions, _impl_.check_range_gaps_)}},
    // bool check_range_overlaps = 2 [json_name = "checkRangeOverlaps"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TableValidationOptions, _impl_.check_range_overlaps_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TableValidationOptions, _impl_.check_range_overlaps_)}},
    // bool validate_nested_references = 3 [json_name = "validateNestedReferences"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TableValidationOptions, _impl_.validate_nested_references_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(TableValidationOptions, _impl_.validate_nested_references_)}},
    // bool check_weight_distribution = 4 [json_name = "checkWeightDistribution"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TableValidationOptions, _impl_.check_weight_distribution_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(TableValidationOptions, _impl_.check_weight_distribution_)}},
    // bool validate_dice_config = 5 [json_name = "validateDiceConfig"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TableValidationOptions, _impl_.validate_dice_config_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(TableValidationOptions, _impl_.validate_dice_config_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bool check_range_gaps = 1 [json_name = "checkRangeGaps"];
    {PROTOBUF_FIELD_OFFSET(TableValidationOptions, _impl_.check_range_gaps_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool check_range_overlaps = 2 [json_name = "checkRangeOverlaps"];
    {PROTOBUF_FIELD_OFFSET(TableValidationOptions, _impl_.check_range_overlaps_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool validate_nested_references = 3 [json_name = "validateNestedReferences"];
    {PROTOBUF_FIELD_OFFSET(TableValidationOptions, _impl_.validate_nested_references_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool check_weight_distribution = 4 [json_name = "checkWeightDistribution"];
    {PROTOBUF_FIELD_OFFSET(TableValidationOptions, _impl_.check_weight_distribution_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool validate_dice_config = 5 [json_name = "validateDiceConfig"];
    {PROTOBUF_FIELD_OFFSET(TableValidationOptions, _impl_.validate_dice_config_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void TableValidationOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.TableValidationOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    ::memset(&_impl_.check_range_gaps_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.validate_dice_config_) -
        reinterpret_cast<char*>(&_impl_.check_range_gaps_)) + sizeof(_impl_.validate_dice_config_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TableValidationOptions::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TableValidationOptions& this_ = static_cast<const TableValidationOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TableValidationOptions::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TableValidationOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.TableValidationOptions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool check_range_gaps = 1 [json_name = "checkRangeGaps"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_check_range_gaps() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_check_range_gaps(), target);
    }
  }

  // bool check_range_overlaps = 2 [json_name = "checkRangeOverlaps"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_check_range_overlaps() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_check_range_overlaps(), target);
    }
  }

  // bool validate_nested_references = 3 [json_name = "validateNestedReferences"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_validate_nested_references() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_validate_nested_references(), target);
    }
  }

  // bool check_weight_distribution = 4 [json_name = "checkWeightDistribution"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_check_weight_distribution() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_check_weight_distribution(), target);
    }
  }

  // bool validate_dice_config = 5 [json_name = "validateDiceConfig"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_validate_dice_config() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          5, this_._internal_validate_dice_config(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.TableValidationOptions)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TableValidationOptions::ByteSizeLong(const MessageLite& base) {
  const TableValidationOptions& this_ = static_cast<const TableValidationOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TableValidationOptions::ByteSizeLong() const {
  const TableValidationOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.TableValidationOptions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // bool check_range_gaps = 1 [json_name = "checkRangeGaps"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_check_range_gaps() != 0) {
        total_size += 2;
      }
    }
    // bool check_range_overlaps = 2 [json_name = "checkRangeOverlaps"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_check_range_overlaps() != 0) {
        total_size += 2;
      }
    }
    // bool validate_nested_references = 3 [json_name = "validateNestedReferences"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_validate_nested_references() != 0) {
        total_size += 2;
      }
    }
    // bool check_weight_distribution = 4 [json_name = "checkWeightDistribution"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_check_weight_distribution() != 0) {
        total_size += 2;
      }
    }
    // bool validate_dice_config = 5 [json_name = "validateDiceConfig"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_validate_dice_config() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TableValidationOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TableValidationOptions*>(&to_msg);
  auto& from = static_cast<const TableValidationOptions&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.TableValidationOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (from._internal_check_range_gaps() != 0) {
        _this->_impl_.check_range_gaps_ = from._impl_.check_range_gaps_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_check_range_overlaps() != 0) {
        _this->_impl_.check_range_overlaps_ = from._impl_.check_range_overlaps_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_validate_nested_references() != 0) {
        _this->_impl_.validate_nested_references_ = from._impl_.validate_nested_references_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_check_weight_distribution() != 0) {
        _this->_impl_.check_weight_distribution_ = from._impl_.check_weight_distribution_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_validate_dice_config() != 0) {
        _this->_impl_.validate_dice_config_ = from._impl_.validate_dice_config_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TableValidationOptions::CopyFrom(const TableValidationOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.TableValidationOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TableValidationOptions::InternalSwap(TableValidationOptions* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TableValidationOptions, _impl_.validate_dice_config_)
      + sizeof(TableValidationOptions::_impl_.validate_dice_config_)
      - PROTOBUF_FIELD_OFFSET(TableValidationOptions, _impl_.check_range_gaps_)>(
          reinterpret_cast<char*>(&_impl_.check_range_gaps_),
          reinterpret_cast<char*>(&other->_impl_.check_range_gaps_));
}

::google::protobuf::Metadata TableValidationOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateSelectionTableResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CreateSelectionTableResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateSelectionTableResponse, _impl_._has_bits_);
};

void CreateSelectionTableResponse::clear_validation_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.validation_result_ != nullptr) _impl_.validation_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
CreateSelectionTableResponse::CreateSelectionTableResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CreateSelectionTableResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.CreateSelectionTableResponse)
}
PROTOBUF_NDEBUG_INLINE CreateSelectionTableResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::CreateSelectionTableResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        message_(arena, from.message_) {}

CreateSelectionTableResponse::CreateSelectionTableResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CreateSelectionTableResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CreateSelectionTableResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateSelectionTableResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.table_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.table_)
                : nullptr;
  _impl_.validation_result_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.validation_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.CreateSelectionTableResponse)
}
PROTOBUF_NDEBUG_INLINE CreateSelectionTableResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        message_(arena) {}

inline void CreateSelectionTableResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, table_),
           0,
           offsetof(Impl_, validation_result_) -
               offsetof(Impl_, table_) +
               sizeof(Impl_::validation_result_));
}
CreateSelectionTableResponse::~CreateSelectionTableResponse() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.CreateSelectionTableResponse)
  SharedDtor(*this);
}
inline void CreateSelectionTableResponse::SharedDtor(MessageLite& self) {
  CreateSelectionTableResponse& this_ = static_cast<CreateSelectionTableResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  delete this_._impl_.table_;
  delete this_._impl_.validation_result_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CreateSelectionTableResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CreateSelectionTableResponse(arena);
}
constexpr auto CreateSelectionTableResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CreateSelectionTableResponse),
                                            alignof(CreateSelectionTableResponse));
}
constexpr auto CreateSelectionTableResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CreateSelectionTableResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CreateSelectionTableResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CreateSelectionTableResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CreateSelectionTableResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CreateSelectionTableResponse>(), &CreateSelectionTableResponse::ByteSizeLong,
              &CreateSelectionTableResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CreateSelectionTableResponse, _impl_._cached_size_),
          false,
      },
      &CreateSelectionTableResponse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CreateSelectionTableResponse_class_data_ =
        CreateSelectionTableResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CreateSelectionTableResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CreateSelectionTableResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CreateSelectionTableResponse_class_data_.tc_table);
  return CreateSelectionTableResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 57, 2>
CreateSelectionTableResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateSelectionTableResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CreateSelectionTableResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::CreateSelectionTableResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .api.v1alpha1.SelectionTable table = 1 [json_name = "table"];
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0, PROTOBUF_FIELD_OFFSET(CreateSelectionTableResponse, _impl_.table_)}},
    // .api.v1alpha1.ValidationResult validation_result = 2 [json_name = "validationResult"];
    {::_pbi::TcParser::FastMtS1,
     {18, 2, 1, PROTOBUF_FIELD_OFFSET(CreateSelectionTableResponse, _impl_.validation_result_)}},
    // string message = 3 [json_name = "message"];
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CreateSelectionTableResponse, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .api.v1alpha1.SelectionTable table = 1 [json_name = "table"];
    {PROTOBUF_FIELD_OFFSET(CreateSelectionTableResponse, _impl_.table_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.ValidationResult validation_result = 2 [json_name = "validationResult"];
    {PROTOBUF_FIELD_OFFSET(CreateSelectionTableResponse, _impl_.validation_result_), _Internal::kHasBitsOffset + 2, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string message = 3 [json_name = "message"];
    {PROTOBUF_FIELD_OFFSET(CreateSelectionTableResponse, _impl_.message_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::SelectionTable>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::ValidationResult>()},
  }},
  {{
    "\51\0\0\7\0\0\0\0"
    "api.v1alpha1.CreateSelectionTableResponse"
    "message"
  }},
};
PROTOBUF_NOINLINE void CreateSelectionTableResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.CreateSelectionTableResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.message_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.table_ != nullptr);
      _impl_.table_->Clear();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.validation_result_ != nullptr);
      _impl_.validation_result_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CreateSelectionTableResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CreateSelectionTableResponse& this_ = static_cast<const CreateSelectionTableResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CreateSelectionTableResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CreateSelectionTableResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.CreateSelectionTableResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.SelectionTable table = 1 [json_name = "table"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.table_, this_._impl_.table_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.ValidationResult validation_result = 2 [json_name = "validationResult"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.validation_result_, this_._impl_.validation_result_->GetCachedSize(), target,
        stream);
  }

  // string message = 3 [json_name = "message"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!this_._internal_message().empty()) {
      const ::std::string& _s = this_._internal_message();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.CreateSelectionTableResponse.message");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.CreateSelectionTableResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CreateSelectionTableResponse::ByteSizeLong(const MessageLite& base) {
  const CreateSelectionTableResponse& this_ = static_cast<const CreateSelectionTableResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CreateSelectionTableResponse::ByteSizeLong() const {
  const CreateSelectionTableResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.CreateSelectionTableResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string message = 3 [json_name = "message"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_message().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_message());
      }
    }
    // .api.v1alpha1.SelectionTable table = 1 [json_name = "table"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.table_);
    }
    // .api.v1alpha1.ValidationResult validation_result = 2 [json_name = "validationResult"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.validation_result_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CreateSelectionTableResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateSelectionTableResponse*>(&to_msg);
  auto& from = static_cast<const CreateSelectionTableResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.CreateSelectionTableResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_message().empty()) {
        _this->_internal_set_message(from._internal_message());
      } else {
        if (_this->_impl_.message_.IsDefault()) {
          _this->_internal_set_message("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.table_ != nullptr);
      if (_this->_impl_.table_ == nullptr) {
        _this->_impl_.table_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.table_);
      } else {
        _this->_impl_.table_->MergeFrom(*from._impl_.table_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.validation_result_ != nullptr);
      if (_this->_impl_.validation_result_ == nullptr) {
        _this->_impl_.validation_result_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.validation_result_);
      } else {
        _this->_impl_.validation_result_->MergeFrom(*from._impl_.validation_result_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateSelectionTableResponse::CopyFrom(const CreateSelectionTableResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.CreateSelectionTableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateSelectionTableResponse::InternalSwap(CreateSelectionTableResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateSelectionTableResponse, _impl_.validation_result_)
      + sizeof(CreateSelectionTableResponse::_impl_.validation_result_)
      - PROTOBUF_FIELD_OFFSET(CreateSelectionTableResponse, _impl_.table_)>(
          reinterpret_cast<char*>(&_impl_.table_),
          reinterpret_cast<char*>(&other->_impl_.table_));
}

::google::protobuf::Metadata CreateSelectionTableResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetSelectionTableRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetSelectionTableRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetSelectionTableRequest, _impl_._has_bits_);
};

GetSelectionTableRequest::GetSelectionTableRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetSelectionTableRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.GetSelectionTableRequest)
}
PROTOBUF_NDEBUG_INLINE GetSelectionTableRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::GetSelectionTableRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        table_id_(arena, from.table_id_) {}

GetSelectionTableRequest::GetSelectionTableRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetSelectionTableRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetSelectionTableRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetSelectionTableRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, include_statistics_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, include_statistics_),
           offsetof(Impl_, include_entry_details_) -
               offsetof(Impl_, include_statistics_) +
               sizeof(Impl_::include_entry_details_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.GetSelectionTableRequest)
}
PROTOBUF_NDEBUG_INLINE GetSelectionTableRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        table_id_(arena) {}

inline void GetSelectionTableRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, include_statistics_),
           0,
           offsetof(Impl_, include_entry_details_) -
               offsetof(Impl_, include_statistics_) +
               sizeof(Impl_::include_entry_details_));
}
GetSelectionTableRequest::~GetSelectionTableRequest() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.GetSelectionTableRequest)
  SharedDtor(*this);
}
inline void GetSelectionTableRequest::SharedDtor(MessageLite& self) {
  GetSelectionTableRequest& this_ = static_cast<GetSelectionTableRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.table_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetSelectionTableRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetSelectionTableRequest(arena);
}
constexpr auto GetSelectionTableRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetSelectionTableRequest),
                                            alignof(GetSelectionTableRequest));
}
constexpr auto GetSelectionTableRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetSelectionTableRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetSelectionTableRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetSelectionTableRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetSelectionTableRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetSelectionTableRequest>(), &GetSelectionTableRequest::ByteSizeLong,
              &GetSelectionTableRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetSelectionTableRequest, _impl_._cached_size_),
          false,
      },
      &GetSelectionTableRequest::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetSelectionTableRequest_class_data_ =
        GetSelectionTableRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetSelectionTableRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetSelectionTableRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetSelectionTableRequest_class_data_.tc_table);
  return GetSelectionTableRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 54, 2>
GetSelectionTableRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetSelectionTableRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetSelectionTableRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::GetSelectionTableRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string table_id = 1 [json_name = "tableId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetSelectionTableRequest, _impl_.table_id_)}},
    // bool include_statistics = 2 [json_name = "includeStatistics"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetSelectionTableRequest, _impl_.include_statistics_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(GetSelectionTableRequest, _impl_.include_statistics_)}},
    // bool include_entry_details = 3 [json_name = "includeEntryDetails"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetSelectionTableRequest, _impl_.include_entry_details_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(GetSelectionTableRequest, _impl_.include_entry_details_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string table_id = 1 [json_name = "tableId"];
    {PROTOBUF_FIELD_OFFSET(GetSelectionTableRequest, _impl_.table_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool include_statistics = 2 [json_name = "includeStatistics"];
    {PROTOBUF_FIELD_OFFSET(GetSelectionTableRequest, _impl_.include_statistics_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool include_entry_details = 3 [json_name = "includeEntryDetails"];
    {PROTOBUF_FIELD_OFFSET(GetSelectionTableRequest, _impl_.include_entry_details_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\45\10\0\0\0\0\0\0"
    "api.v1alpha1.GetSelectionTableRequest"
    "table_id"
  }},
};
PROTOBUF_NOINLINE void GetSelectionTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.GetSelectionTableRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.table_id_.ClearNonDefaultToEmpty();
  }
  ::memset(&_impl_.include_statistics_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.include_entry_details_) -
      reinterpret_cast<char*>(&_impl_.include_statistics_)) + sizeof(_impl_.include_entry_details_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetSelectionTableRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetSelectionTableRequest& this_ = static_cast<const GetSelectionTableRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetSelectionTableRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetSelectionTableRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.GetSelectionTableRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string table_id = 1 [json_name = "tableId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_table_id().empty()) {
      const ::std::string& _s = this_._internal_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.GetSelectionTableRequest.table_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // bool include_statistics = 2 [json_name = "includeStatistics"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_include_statistics() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_include_statistics(), target);
    }
  }

  // bool include_entry_details = 3 [json_name = "includeEntryDetails"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_include_entry_details() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_include_entry_details(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.GetSelectionTableRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetSelectionTableRequest::ByteSizeLong(const MessageLite& base) {
  const GetSelectionTableRequest& this_ = static_cast<const GetSelectionTableRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetSelectionTableRequest::ByteSizeLong() const {
  const GetSelectionTableRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.GetSelectionTableRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string table_id = 1 [json_name = "tableId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_table_id());
      }
    }
    // bool include_statistics = 2 [json_name = "includeStatistics"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_include_statistics() != 0) {
        total_size += 2;
      }
    }
    // bool include_entry_details = 3 [json_name = "includeEntryDetails"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_include_entry_details() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetSelectionTableRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetSelectionTableRequest*>(&to_msg);
  auto& from = static_cast<const GetSelectionTableRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.GetSelectionTableRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_table_id().empty()) {
        _this->_internal_set_table_id(from._internal_table_id());
      } else {
        if (_this->_impl_.table_id_.IsDefault()) {
          _this->_internal_set_table_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_include_statistics() != 0) {
        _this->_impl_.include_statistics_ = from._impl_.include_statistics_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_include_entry_details() != 0) {
        _this->_impl_.include_entry_details_ = from._impl_.include_entry_details_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetSelectionTableRequest::CopyFrom(const GetSelectionTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.GetSelectionTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetSelectionTableRequest::InternalSwap(GetSelectionTableRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.table_id_, &other->_impl_.table_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetSelectionTableRequest, _impl_.include_entry_details_)
      + sizeof(GetSelectionTableRequest::_impl_.include_entry_details_)
      - PROTOBUF_FIELD_OFFSET(GetSelectionTableRequest, _impl_.include_statistics_)>(
          reinterpret_cast<char*>(&_impl_.include_statistics_),
          reinterpret_cast<char*>(&other->_impl_.include_statistics_));
}

::google::protobuf::Metadata GetSelectionTableRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetSelectionTableResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetSelectionTableResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetSelectionTableResponse, _impl_._has_bits_);
};

GetSelectionTableResponse::GetSelectionTableResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetSelectionTableResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.GetSelectionTableResponse)
}
PROTOBUF_NDEBUG_INLINE GetSelectionTableResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::GetSelectionTableResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetSelectionTableResponse::GetSelectionTableResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetSelectionTableResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetSelectionTableResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetSelectionTableResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.table_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.table_)
                : nullptr;
  _impl_.statistics_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.statistics_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.GetSelectionTableResponse)
}
PROTOBUF_NDEBUG_INLINE GetSelectionTableResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void GetSelectionTableResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, table_),
           0,
           offsetof(Impl_, statistics_) -
               offsetof(Impl_, table_) +
               sizeof(Impl_::statistics_));
}
GetSelectionTableResponse::~GetSelectionTableResponse() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.GetSelectionTableResponse)
  SharedDtor(*this);
}
inline void GetSelectionTableResponse::SharedDtor(MessageLite& self) {
  GetSelectionTableResponse& this_ = static_cast<GetSelectionTableResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.table_;
  delete this_._impl_.statistics_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetSelectionTableResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetSelectionTableResponse(arena);
}
constexpr auto GetSelectionTableResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetSelectionTableResponse),
                                            alignof(GetSelectionTableResponse));
}
constexpr auto GetSelectionTableResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetSelectionTableResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetSelectionTableResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetSelectionTableResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetSelectionTableResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetSelectionTableResponse>(), &GetSelectionTableResponse::ByteSizeLong,
              &GetSelectionTableResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetSelectionTableResponse, _impl_._cached_size_),
          false,
      },
      &GetSelectionTableResponse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetSelectionTableResponse_class_data_ =
        GetSelectionTableResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetSelectionTableResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetSelectionTableResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetSelectionTableResponse_class_data_.tc_table);
  return GetSelectionTableResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
GetSelectionTableResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetSelectionTableResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetSelectionTableResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::GetSelectionTableResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .api.v1alpha1.TableStatistics statistics = 2 [json_name = "statistics"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(GetSelectionTableResponse, _impl_.statistics_)}},
    // .api.v1alpha1.SelectionTable table = 1 [json_name = "table"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetSelectionTableResponse, _impl_.table_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .api.v1alpha1.SelectionTable table = 1 [json_name = "table"];
    {PROTOBUF_FIELD_OFFSET(GetSelectionTableResponse, _impl_.table_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.TableStatistics statistics = 2 [json_name = "statistics"];
    {PROTOBUF_FIELD_OFFSET(GetSelectionTableResponse, _impl_.statistics_), _Internal::kHasBitsOffset + 1, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::SelectionTable>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::TableStatistics>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void GetSelectionTableResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.GetSelectionTableResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.table_ != nullptr);
      _impl_.table_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.statistics_ != nullptr);
      _impl_.statistics_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetSelectionTableResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetSelectionTableResponse& this_ = static_cast<const GetSelectionTableResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetSelectionTableResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetSelectionTableResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.GetSelectionTableResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.SelectionTable table = 1 [json_name = "table"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.table_, this_._impl_.table_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.TableStatistics statistics = 2 [json_name = "statistics"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.statistics_, this_._impl_.statistics_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.GetSelectionTableResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetSelectionTableResponse::ByteSizeLong(const MessageLite& base) {
  const GetSelectionTableResponse& this_ = static_cast<const GetSelectionTableResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetSelectionTableResponse::ByteSizeLong() const {
  const GetSelectionTableResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.GetSelectionTableResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // .api.v1alpha1.SelectionTable table = 1 [json_name = "table"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.table_);
    }
    // .api.v1alpha1.TableStatistics statistics = 2 [json_name = "statistics"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.statistics_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetSelectionTableResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetSelectionTableResponse*>(&to_msg);
  auto& from = static_cast<const GetSelectionTableResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.GetSelectionTableResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.table_ != nullptr);
      if (_this->_impl_.table_ == nullptr) {
        _this->_impl_.table_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.table_);
      } else {
        _this->_impl_.table_->MergeFrom(*from._impl_.table_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.statistics_ != nullptr);
      if (_this->_impl_.statistics_ == nullptr) {
        _this->_impl_.statistics_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.statistics_);
      } else {
        _this->_impl_.statistics_->MergeFrom(*from._impl_.statistics_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetSelectionTableResponse::CopyFrom(const GetSelectionTableResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.GetSelectionTableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetSelectionTableResponse::InternalSwap(GetSelectionTableResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetSelectionTableResponse, _impl_.statistics_)
      + sizeof(GetSelectionTableResponse::_impl_.statistics_)
      - PROTOBUF_FIELD_OFFSET(GetSelectionTableResponse, _impl_.table_)>(
          reinterpret_cast<char*>(&_impl_.table_),
          reinterpret_cast<char*>(&other->_impl_.table_));
}

::google::protobuf::Metadata GetSelectionTableResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
TableStatistics_EntryFrequencyEntry_DoNotUse::TableStatistics_EntryFrequencyEntry_DoNotUse()
    : SuperType(TableStatistics_EntryFrequencyEntry_DoNotUse_class_data_.base()) {}
TableStatistics_EntryFrequencyEntry_DoNotUse::TableStatistics_EntryFrequencyEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, TableStatistics_EntryFrequencyEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
TableStatistics_EntryFrequencyEntry_DoNotUse::TableStatistics_EntryFrequencyEntry_DoNotUse() : SuperType() {}
TableStatistics_EntryFrequencyEntry_DoNotUse::TableStatistics_EntryFrequencyEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL TableStatistics_EntryFrequencyEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TableStatistics_EntryFrequencyEntry_DoNotUse(arena);
}
constexpr auto TableStatistics_EntryFrequencyEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TableStatistics_EntryFrequencyEntry_DoNotUse),
                                            alignof(TableStatistics_EntryFrequencyEntry_DoNotUse));
}
constexpr auto TableStatistics_EntryFrequencyEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TableStatistics_EntryFrequencyEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TableStatistics_EntryFrequencyEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TableStatistics_EntryFrequencyEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TableStatistics_EntryFrequencyEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&TableStatistics_EntryFrequencyEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TableStatistics_EntryFrequencyEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &TableStatistics_EntryFrequencyEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TableStatistics_EntryFrequencyEntry_DoNotUse_class_data_ =
        TableStatistics_EntryFrequencyEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TableStatistics_EntryFrequencyEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TableStatistics_EntryFrequencyEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TableStatistics_EntryFrequencyEntry_DoNotUse_class_data_.tc_table);
  return TableStatistics_EntryFrequencyEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 60, 2>
TableStatistics_EntryFrequencyEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TableStatistics_EntryFrequencyEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TableStatistics_EntryFrequencyEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::TableStatistics_EntryFrequencyEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 value = 2 [json_name = "value"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TableStatistics_EntryFrequencyEntry_DoNotUse, _impl_.value_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TableStatistics_EntryFrequencyEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TableStatistics_EntryFrequencyEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(TableStatistics_EntryFrequencyEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(TableStatistics_EntryFrequencyEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\60\3\0\0\0\0\0\0"
    "api.v1alpha1.TableStatistics.EntryFrequencyEntry"
    "key"
  }},
};
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
TableStatistics_RollDistributionEntry_DoNotUse::TableStatistics_RollDistributionEntry_DoNotUse()
    : SuperType(TableStatistics_RollDistributionEntry_DoNotUse_class_data_.base()) {}
TableStatistics_RollDistributionEntry_DoNotUse::TableStatistics_RollDistributionEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, TableStatistics_RollDistributionEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
TableStatistics_RollDistributionEntry_DoNotUse::TableStatistics_RollDistributionEntry_DoNotUse() : SuperType() {}
TableStatistics_RollDistributionEntry_DoNotUse::TableStatistics_RollDistributionEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL TableStatistics_RollDistributionEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TableStatistics_RollDistributionEntry_DoNotUse(arena);
}
constexpr auto TableStatistics_RollDistributionEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TableStatistics_RollDistributionEntry_DoNotUse),
                                            alignof(TableStatistics_RollDistributionEntry_DoNotUse));
}
constexpr auto TableStatistics_RollDistributionEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TableStatistics_RollDistributionEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TableStatistics_RollDistributionEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TableStatistics_RollDistributionEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TableStatistics_RollDistributionEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&TableStatistics_RollDistributionEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TableStatistics_RollDistributionEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &TableStatistics_RollDistributionEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TableStatistics_RollDistributionEntry_DoNotUse_class_data_ =
        TableStatistics_RollDistributionEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TableStatistics_RollDistributionEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TableStatistics_RollDistributionEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TableStatistics_RollDistributionEntry_DoNotUse_class_data_.tc_table);
  return TableStatistics_RollDistributionEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
TableStatistics_RollDistributionEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TableStatistics_RollDistributionEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TableStatistics_RollDistributionEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::TableStatistics_RollDistributionEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 value = 2 [json_name = "value"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TableStatistics_RollDistributionEntry_DoNotUse, _impl_.value_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(TableStatistics_RollDistributionEntry_DoNotUse, _impl_.value_)}},
    // int32 key = 1 [json_name = "key"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TableStatistics_RollDistributionEntry_DoNotUse, _impl_.key_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(TableStatistics_RollDistributionEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(TableStatistics_RollDistributionEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int64 value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(TableStatistics_RollDistributionEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
TableStatistics_ResultTypeCountsEntry_DoNotUse::TableStatistics_ResultTypeCountsEntry_DoNotUse()
    : SuperType(TableStatistics_ResultTypeCountsEntry_DoNotUse_class_data_.base()) {}
TableStatistics_ResultTypeCountsEntry_DoNotUse::TableStatistics_ResultTypeCountsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, TableStatistics_ResultTypeCountsEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
TableStatistics_ResultTypeCountsEntry_DoNotUse::TableStatistics_ResultTypeCountsEntry_DoNotUse() : SuperType() {}
TableStatistics_ResultTypeCountsEntry_DoNotUse::TableStatistics_ResultTypeCountsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL TableStatistics_ResultTypeCountsEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TableStatistics_ResultTypeCountsEntry_DoNotUse(arena);
}
constexpr auto TableStatistics_ResultTypeCountsEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TableStatistics_ResultTypeCountsEntry_DoNotUse),
                                            alignof(TableStatistics_ResultTypeCountsEntry_DoNotUse));
}
constexpr auto TableStatistics_ResultTypeCountsEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TableStatistics_ResultTypeCountsEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TableStatistics_ResultTypeCountsEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TableStatistics_ResultTypeCountsEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TableStatistics_ResultTypeCountsEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&TableStatistics_ResultTypeCountsEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TableStatistics_ResultTypeCountsEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &TableStatistics_ResultTypeCountsEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TableStatistics_ResultTypeCountsEntry_DoNotUse_class_data_ =
        TableStatistics_ResultTypeCountsEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TableStatistics_ResultTypeCountsEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TableStatistics_ResultTypeCountsEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TableStatistics_ResultTypeCountsEntry_DoNotUse_class_data_.tc_table);
  return TableStatistics_ResultTypeCountsEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 62, 2>
TableStatistics_ResultTypeCountsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TableStatistics_ResultTypeCountsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TableStatistics_ResultTypeCountsEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::TableStatistics_ResultTypeCountsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 value = 2 [json_name = "value"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TableStatistics_ResultTypeCountsEntry_DoNotUse, _impl_.value_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TableStatistics_ResultTypeCountsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TableStatistics_ResultTypeCountsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(TableStatistics_ResultTypeCountsEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(TableStatistics_ResultTypeCountsEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\62\3\0\0\0\0\0\0"
    "api.v1alpha1.TableStatistics.ResultTypeCountsEntry"
    "key"
  }},
};
// ===================================================================

class TableStatistics::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TableStatistics>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TableStatistics, _impl_._has_bits_);
};

TableStatistics::TableStatistics(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TableStatistics_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.TableStatistics)
}
PROTOBUF_NDEBUG_INLINE TableStatistics::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::TableStatistics& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        entry_frequency_{visibility, arena, from.entry_frequency_},
        roll_distribution_{visibility, arena, from.roll_distribution_},
        result_type_counts_{visibility, arena, from.result_type_counts_} {}

TableStatistics::TableStatistics(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TableStatistics& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TableStatistics_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TableStatistics* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.usage_stats_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.usage_stats_)
                : nullptr;
  _impl_.performance_stats_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.performance_stats_)
                : nullptr;
  _impl_.average_roll_ = from._impl_.average_roll_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.TableStatistics)
}
PROTOBUF_NDEBUG_INLINE TableStatistics::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        entry_frequency_{visibility, arena},
        roll_distribution_{visibility, arena},
        result_type_counts_{visibility, arena} {}

inline void TableStatistics::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, usage_stats_),
           0,
           offsetof(Impl_, average_roll_) -
               offsetof(Impl_, usage_stats_) +
               sizeof(Impl_::average_roll_));
}
TableStatistics::~TableStatistics() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.TableStatistics)
  SharedDtor(*this);
}
inline void TableStatistics::SharedDtor(MessageLite& self) {
  TableStatistics& this_ = static_cast<TableStatistics&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.usage_stats_;
  delete this_._impl_.performance_stats_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TableStatistics::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TableStatistics(arena);
}
constexpr auto TableStatistics::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TableStatistics, _impl_.entry_frequency_) +
          decltype(TableStatistics::_impl_.entry_frequency_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TableStatistics, _impl_.entry_frequency_) +
          decltype(TableStatistics::_impl_.entry_frequency_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TableStatistics, _impl_.roll_distribution_) +
          decltype(TableStatistics::_impl_.roll_distribution_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TableStatistics, _impl_.roll_distribution_) +
          decltype(TableStatistics::_impl_.roll_distribution_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TableStatistics, _impl_.result_type_counts_) +
          decltype(TableStatistics::_impl_.result_type_counts_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TableStatistics, _impl_.result_type_counts_) +
          decltype(TableStatistics::_impl_.result_type_counts_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(TableStatistics), alignof(TableStatistics), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TableStatistics::PlacementNew_,
                                 sizeof(TableStatistics),
                                 alignof(TableStatistics));
  }
}
constexpr auto TableStatistics::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TableStatistics_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TableStatistics::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TableStatistics>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TableStatistics::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TableStatistics>(), &TableStatistics::ByteSizeLong,
              &TableStatistics::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TableStatistics, _impl_._cached_size_),
          false,
      },
      &TableStatistics::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TableStatistics_class_data_ =
        TableStatistics::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TableStatistics::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TableStatistics_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TableStatistics_class_data_.tc_table);
  return TableStatistics_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 6, 5, 70, 2>
TableStatistics::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TableStatistics, _impl_._has_bits_),
    0, // no _extensions_
    6, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TableStatistics_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::TableStatistics>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .api.v1alpha1.TableUsageStats usage_stats = 1 [json_name = "usageStats"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TableStatistics, _impl_.usage_stats_)}},
    // .api.v1alpha1.TablePerformanceStats performance_stats = 6 [json_name = "performanceStats"];
    {::_pbi::TcParser::FastMtS1,
     {50, 1, 1, PROTOBUF_FIELD_OFFSET(TableStatistics, _impl_.performance_stats_)}},
    // double average_roll = 3 [json_name = "averageRoll"];
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(TableStatistics, _impl_.average_roll_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .api.v1alpha1.TableUsageStats usage_stats = 1 [json_name = "usageStats"];
    {PROTOBUF_FIELD_OFFSET(TableStatistics, _impl_.usage_stats_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, int64> entry_frequency = 2 [json_name = "entryFrequency"];
    {PROTOBUF_FIELD_OFFSET(TableStatistics, _impl_.entry_frequency_), -1, 2, (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // double average_roll = 3 [json_name = "averageRoll"];
    {PROTOBUF_FIELD_OFFSET(TableStatistics, _impl_.average_roll_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // map<int32, int64> roll_distribution = 4 [json_name = "rollDistribution"];
    {PROTOBUF_FIELD_OFFSET(TableStatistics, _impl_.roll_distribution_), -1, 3, (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, int64> result_type_counts = 5 [json_name = "resultTypeCounts"];
    {PROTOBUF_FIELD_OFFSET(TableStatistics, _impl_.result_type_counts_), -1, 4, (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // .api.v1alpha1.TablePerformanceStats performance_stats = 6 [json_name = "performanceStats"];
    {PROTOBUF_FIELD_OFFSET(TableStatistics, _impl_.performance_stats_), _Internal::kHasBitsOffset + 1, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::TableUsageStats>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::TablePerformanceStats>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 3,
                                       0)},
      {::_pbi::TcParser::GetMapAuxInfo(0, 0, 0,
                                       5, 3,
                                       0)},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 3,
                                       0)},
  }},
  {{
    "\34\0\17\0\0\22\0\0"
    "api.v1alpha1.TableStatistics"
    "entry_frequency"
    "result_type_counts"
  }},
};
PROTOBUF_NOINLINE void TableStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.TableStatistics)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entry_frequency_.Clear();
  _impl_.roll_distribution_.Clear();
  _impl_.result_type_counts_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.usage_stats_ != nullptr);
      _impl_.usage_stats_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.performance_stats_ != nullptr);
      _impl_.performance_stats_->Clear();
    }
  }
  _impl_.average_roll_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TableStatistics::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TableStatistics& this_ = static_cast<const TableStatistics&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TableStatistics::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TableStatistics& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.TableStatistics)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.TableUsageStats usage_stats = 1 [json_name = "usageStats"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.usage_stats_, this_._impl_.usage_stats_->GetCachedSize(), target,
        stream);
  }

  // map<string, int64> entry_frequency = 2 [json_name = "entryFrequency"];
  if (!this_._internal_entry_frequency().empty()) {
    using MapType = ::google::protobuf::Map<::std::string, ::int64_t>;
    using WireHelper = _pbi::MapEntryFuncs<::std::string, ::int64_t,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_INT64>;
    const auto& field = this_._internal_entry_frequency();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TableStatistics.entry_frequency");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TableStatistics.entry_frequency");
      }
    }
  }

  // double average_roll = 3 [json_name = "averageRoll"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_average_roll()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_average_roll(), target);
    }
  }

  // map<int32, int64> roll_distribution = 4 [json_name = "rollDistribution"];
  if (!this_._internal_roll_distribution().empty()) {
    using MapType = ::google::protobuf::Map<::int32_t, ::int64_t>;
    using WireHelper = _pbi::MapEntryFuncs<::int32_t, ::int64_t,
                                   _pbi::WireFormatLite::TYPE_INT32,
                                   _pbi::WireFormatLite::TYPE_INT64>;
    const auto& field = this_._internal_roll_distribution();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<string, int64> result_type_counts = 5 [json_name = "resultTypeCounts"];
  if (!this_._internal_result_type_counts().empty()) {
    using MapType = ::google::protobuf::Map<::std::string, ::int64_t>;
    using WireHelper = _pbi::MapEntryFuncs<::std::string, ::int64_t,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_INT64>;
    const auto& field = this_._internal_result_type_counts();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TableStatistics.result_type_counts");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TableStatistics.result_type_counts");
      }
    }
  }

  // .api.v1alpha1.TablePerformanceStats performance_stats = 6 [json_name = "performanceStats"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.performance_stats_, this_._impl_.performance_stats_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.TableStatistics)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TableStatistics::ByteSizeLong(const MessageLite& base) {
  const TableStatistics& this_ = static_cast<const TableStatistics&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TableStatistics::ByteSizeLong() const {
  const TableStatistics& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.TableStatistics)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, int64> entry_frequency = 2 [json_name = "entryFrequency"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_entry_frequency_size());
      for (const auto& entry : this_._internal_entry_frequency()) {
        total_size += _pbi::MapEntryFuncs<::std::string, ::int64_t,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_INT64>::ByteSizeLong(entry.first, entry.second);
      }
    }
    // map<int32, int64> roll_distribution = 4 [json_name = "rollDistribution"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_roll_distribution_size());
      for (const auto& entry : this_._internal_roll_distribution()) {
        total_size += _pbi::MapEntryFuncs<::int32_t, ::int64_t,
                                       _pbi::WireFormatLite::TYPE_INT32,
                                       _pbi::WireFormatLite::TYPE_INT64>::ByteSizeLong(entry.first, entry.second);
      }
    }
    // map<string, int64> result_type_counts = 5 [json_name = "resultTypeCounts"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_result_type_counts_size());
      for (const auto& entry : this_._internal_result_type_counts()) {
        total_size += _pbi::MapEntryFuncs<::std::string, ::int64_t,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_INT64>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // .api.v1alpha1.TableUsageStats usage_stats = 1 [json_name = "usageStats"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.usage_stats_);
    }
    // .api.v1alpha1.TablePerformanceStats performance_stats = 6 [json_name = "performanceStats"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.performance_stats_);
    }
    // double average_roll = 3 [json_name = "averageRoll"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_average_roll()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TableStatistics::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TableStatistics*>(&to_msg);
  auto& from = static_cast<const TableStatistics&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.TableStatistics)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.entry_frequency_.MergeFrom(from._impl_.entry_frequency_);
  _this->_impl_.roll_distribution_.MergeFrom(from._impl_.roll_distribution_);
  _this->_impl_.result_type_counts_.MergeFrom(from._impl_.result_type_counts_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.usage_stats_ != nullptr);
      if (_this->_impl_.usage_stats_ == nullptr) {
        _this->_impl_.usage_stats_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.usage_stats_);
      } else {
        _this->_impl_.usage_stats_->MergeFrom(*from._impl_.usage_stats_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.performance_stats_ != nullptr);
      if (_this->_impl_.performance_stats_ == nullptr) {
        _this->_impl_.performance_stats_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.performance_stats_);
      } else {
        _this->_impl_.performance_stats_->MergeFrom(*from._impl_.performance_stats_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_average_roll()) != 0) {
        _this->_impl_.average_roll_ = from._impl_.average_roll_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TableStatistics::CopyFrom(const TableStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.TableStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TableStatistics::InternalSwap(TableStatistics* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.entry_frequency_.InternalSwap(&other->_impl_.entry_frequency_);
  _impl_.roll_distribution_.InternalSwap(&other->_impl_.roll_distribution_);
  _impl_.result_type_counts_.InternalSwap(&other->_impl_.result_type_counts_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TableStatistics, _impl_.average_roll_)
      + sizeof(TableStatistics::_impl_.average_roll_)
      - PROTOBUF_FIELD_OFFSET(TableStatistics, _impl_.usage_stats_)>(
          reinterpret_cast<char*>(&_impl_.usage_stats_),
          reinterpret_cast<char*>(&other->_impl_.usage_stats_));
}

::google::protobuf::Metadata TableStatistics::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TablePerformanceStats::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TablePerformanceStats>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TablePerformanceStats, _impl_._has_bits_);
};

TablePerformanceStats::TablePerformanceStats(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TablePerformanceStats_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.TablePerformanceStats)
}
TablePerformanceStats::TablePerformanceStats(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TablePerformanceStats& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TablePerformanceStats_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE TablePerformanceStats::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void TablePerformanceStats::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, average_roll_time_ms_),
           0,
           offsetof(Impl_, last_optimized_) -
               offsetof(Impl_, average_roll_time_ms_) +
               sizeof(Impl_::last_optimized_));
}
TablePerformanceStats::~TablePerformanceStats() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.TablePerformanceStats)
  SharedDtor(*this);
}
inline void TablePerformanceStats::SharedDtor(MessageLite& self) {
  TablePerformanceStats& this_ = static_cast<TablePerformanceStats&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TablePerformanceStats::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TablePerformanceStats(arena);
}
constexpr auto TablePerformanceStats::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TablePerformanceStats),
                                            alignof(TablePerformanceStats));
}
constexpr auto TablePerformanceStats::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TablePerformanceStats_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TablePerformanceStats::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TablePerformanceStats>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TablePerformanceStats::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TablePerformanceStats>(), &TablePerformanceStats::ByteSizeLong,
              &TablePerformanceStats::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TablePerformanceStats, _impl_._cached_size_),
          false,
      },
      &TablePerformanceStats::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TablePerformanceStats_class_data_ =
        TablePerformanceStats::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TablePerformanceStats::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TablePerformanceStats_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TablePerformanceStats_class_data_.tc_table);
  return TablePerformanceStats_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2>
TablePerformanceStats::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TablePerformanceStats, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TablePerformanceStats_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::TablePerformanceStats>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 last_optimized = 4 [json_name = "lastOptimized"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TablePerformanceStats, _impl_.last_optimized_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(TablePerformanceStats, _impl_.last_optimized_)}},
    // double average_roll_time_ms = 1 [json_name = "averageRollTimeMs"];
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(TablePerformanceStats, _impl_.average_roll_time_ms_)}},
    // double cache_hit_ratio = 2 [json_name = "cacheHitRatio"];
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(TablePerformanceStats, _impl_.cache_hit_ratio_)}},
    // int64 memory_usage_bytes = 3 [json_name = "memoryUsageBytes"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TablePerformanceStats, _impl_.memory_usage_bytes_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(TablePerformanceStats, _impl_.memory_usage_bytes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double average_roll_time_ms = 1 [json_name = "averageRollTimeMs"];
    {PROTOBUF_FIELD_OFFSET(TablePerformanceStats, _impl_.average_roll_time_ms_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double cache_hit_ratio = 2 [json_name = "cacheHitRatio"];
    {PROTOBUF_FIELD_OFFSET(TablePerformanceStats, _impl_.cache_hit_ratio_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // int64 memory_usage_bytes = 3 [json_name = "memoryUsageBytes"];
    {PROTOBUF_FIELD_OFFSET(TablePerformanceStats, _impl_.memory_usage_bytes_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 last_optimized = 4 [json_name = "lastOptimized"];
    {PROTOBUF_FIELD_OFFSET(TablePerformanceStats, _impl_.last_optimized_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void TablePerformanceStats::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.TablePerformanceStats)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    ::memset(&_impl_.average_roll_time_ms_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.last_optimized_) -
        reinterpret_cast<char*>(&_impl_.average_roll_time_ms_)) + sizeof(_impl_.last_optimized_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TablePerformanceStats::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TablePerformanceStats& this_ = static_cast<const TablePerformanceStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TablePerformanceStats::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TablePerformanceStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.TablePerformanceStats)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double average_roll_time_ms = 1 [json_name = "averageRollTimeMs"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_average_roll_time_ms()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          1, this_._internal_average_roll_time_ms(), target);
    }
  }

  // double cache_hit_ratio = 2 [json_name = "cacheHitRatio"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_cache_hit_ratio()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_cache_hit_ratio(), target);
    }
  }

  // int64 memory_usage_bytes = 3 [json_name = "memoryUsageBytes"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_memory_usage_bytes() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<3>(
              stream, this_._internal_memory_usage_bytes(), target);
    }
  }

  // int64 last_optimized = 4 [json_name = "lastOptimized"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_last_optimized() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<4>(
              stream, this_._internal_last_optimized(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.TablePerformanceStats)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TablePerformanceStats::ByteSizeLong(const MessageLite& base) {
  const TablePerformanceStats& this_ = static_cast<const TablePerformanceStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TablePerformanceStats::ByteSizeLong() const {
  const TablePerformanceStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.TablePerformanceStats)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // double average_roll_time_ms = 1 [json_name = "averageRollTimeMs"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_average_roll_time_ms()) != 0) {
        total_size += 9;
      }
    }
    // double cache_hit_ratio = 2 [json_name = "cacheHitRatio"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_cache_hit_ratio()) != 0) {
        total_size += 9;
      }
    }
    // int64 memory_usage_bytes = 3 [json_name = "memoryUsageBytes"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_memory_usage_bytes() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_memory_usage_bytes());
      }
    }
    // int64 last_optimized = 4 [json_name = "lastOptimized"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_last_optimized() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_last_optimized());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TablePerformanceStats::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TablePerformanceStats*>(&to_msg);
  auto& from = static_cast<const TablePerformanceStats&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.TablePerformanceStats)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_average_roll_time_ms()) != 0) {
        _this->_impl_.average_roll_time_ms_ = from._impl_.average_roll_time_ms_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_cache_hit_ratio()) != 0) {
        _this->_impl_.cache_hit_ratio_ = from._impl_.cache_hit_ratio_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_memory_usage_bytes() != 0) {
        _this->_impl_.memory_usage_bytes_ = from._impl_.memory_usage_bytes_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_last_optimized() != 0) {
        _this->_impl_.last_optimized_ = from._impl_.last_optimized_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TablePerformanceStats::CopyFrom(const TablePerformanceStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.TablePerformanceStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TablePerformanceStats::InternalSwap(TablePerformanceStats* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TablePerformanceStats, _impl_.last_optimized_)
      + sizeof(TablePerformanceStats::_impl_.last_optimized_)
      - PROTOBUF_FIELD_OFFSET(TablePerformanceStats, _impl_.average_roll_time_ms_)>(
          reinterpret_cast<char*>(&_impl_.average_roll_time_ms_),
          reinterpret_cast<char*>(&other->_impl_.average_roll_time_ms_));
}

::google::protobuf::Metadata TablePerformanceStats::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateSelectionTableRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<UpdateSelectionTableRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateSelectionTableRequest, _impl_._has_bits_);
};

UpdateSelectionTableRequest::UpdateSelectionTableRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateSelectionTableRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.UpdateSelectionTableRequest)
}
PROTOBUF_NDEBUG_INLINE UpdateSelectionTableRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::UpdateSelectionTableRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        table_id_(arena, from.table_id_) {}

UpdateSelectionTableRequest::UpdateSelectionTableRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const UpdateSelectionTableRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateSelectionTableRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateSelectionTableRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.table_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.table_)
                : nullptr;
  _impl_.update_options_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.update_options_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.UpdateSelectionTableRequest)
}
PROTOBUF_NDEBUG_INLINE UpdateSelectionTableRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        table_id_(arena) {}

inline void UpdateSelectionTableRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, table_),
           0,
           offsetof(Impl_, update_options_) -
               offsetof(Impl_, table_) +
               sizeof(Impl_::update_options_));
}
UpdateSelectionTableRequest::~UpdateSelectionTableRequest() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.UpdateSelectionTableRequest)
  SharedDtor(*this);
}
inline void UpdateSelectionTableRequest::SharedDtor(MessageLite& self) {
  UpdateSelectionTableRequest& this_ = static_cast<UpdateSelectionTableRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.table_id_.Destroy();
  delete this_._impl_.table_;
  delete this_._impl_.update_options_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL UpdateSelectionTableRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UpdateSelectionTableRequest(arena);
}
constexpr auto UpdateSelectionTableRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(UpdateSelectionTableRequest),
                                            alignof(UpdateSelectionTableRequest));
}
constexpr auto UpdateSelectionTableRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UpdateSelectionTableRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UpdateSelectionTableRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UpdateSelectionTableRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UpdateSelectionTableRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UpdateSelectionTableRequest>(), &UpdateSelectionTableRequest::ByteSizeLong,
              &UpdateSelectionTableRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UpdateSelectionTableRequest, _impl_._cached_size_),
          false,
      },
      &UpdateSelectionTableRequest::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull UpdateSelectionTableRequest_class_data_ =
        UpdateSelectionTableRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
UpdateSelectionTableRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UpdateSelectionTableRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UpdateSelectionTableRequest_class_data_.tc_table);
  return UpdateSelectionTableRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 57, 2>
UpdateSelectionTableRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateSelectionTableRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    UpdateSelectionTableRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::UpdateSelectionTableRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string table_id = 1 [json_name = "tableId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateSelectionTableRequest, _impl_.table_id_)}},
    // .api.v1alpha1.SelectionTable table = 2 [json_name = "table"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(UpdateSelectionTableRequest, _impl_.table_)}},
    // .api.v1alpha1.TableUpdateOptions update_options = 3 [json_name = "updateOptions"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 1, PROTOBUF_FIELD_OFFSET(UpdateSelectionTableRequest, _impl_.update_options_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string table_id = 1 [json_name = "tableId"];
    {PROTOBUF_FIELD_OFFSET(UpdateSelectionTableRequest, _impl_.table_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.SelectionTable table = 2 [json_name = "table"];
    {PROTOBUF_FIELD_OFFSET(UpdateSelectionTableRequest, _impl_.table_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.TableUpdateOptions update_options = 3 [json_name = "updateOptions"];
    {PROTOBUF_FIELD_OFFSET(UpdateSelectionTableRequest, _impl_.update_options_), _Internal::kHasBitsOffset + 2, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::SelectionTable>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::TableUpdateOptions>()},
  }},
  {{
    "\50\10\0\0\0\0\0\0"
    "api.v1alpha1.UpdateSelectionTableRequest"
    "table_id"
  }},
};
PROTOBUF_NOINLINE void UpdateSelectionTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.UpdateSelectionTableRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.table_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.table_ != nullptr);
      _impl_.table_->Clear();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.update_options_ != nullptr);
      _impl_.update_options_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UpdateSelectionTableRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UpdateSelectionTableRequest& this_ = static_cast<const UpdateSelectionTableRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UpdateSelectionTableRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UpdateSelectionTableRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.UpdateSelectionTableRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string table_id = 1 [json_name = "tableId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_table_id().empty()) {
      const ::std::string& _s = this_._internal_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.UpdateSelectionTableRequest.table_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.SelectionTable table = 2 [json_name = "table"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.table_, this_._impl_.table_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.TableUpdateOptions update_options = 3 [json_name = "updateOptions"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.update_options_, this_._impl_.update_options_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.UpdateSelectionTableRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UpdateSelectionTableRequest::ByteSizeLong(const MessageLite& base) {
  const UpdateSelectionTableRequest& this_ = static_cast<const UpdateSelectionTableRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UpdateSelectionTableRequest::ByteSizeLong() const {
  const UpdateSelectionTableRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.UpdateSelectionTableRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string table_id = 1 [json_name = "tableId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_table_id());
      }
    }
    // .api.v1alpha1.SelectionTable table = 2 [json_name = "table"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.table_);
    }
    // .api.v1alpha1.TableUpdateOptions update_options = 3 [json_name = "updateOptions"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.update_options_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UpdateSelectionTableRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateSelectionTableRequest*>(&to_msg);
  auto& from = static_cast<const UpdateSelectionTableRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.UpdateSelectionTableRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_table_id().empty()) {
        _this->_internal_set_table_id(from._internal_table_id());
      } else {
        if (_this->_impl_.table_id_.IsDefault()) {
          _this->_internal_set_table_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.table_ != nullptr);
      if (_this->_impl_.table_ == nullptr) {
        _this->_impl_.table_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.table_);
      } else {
        _this->_impl_.table_->MergeFrom(*from._impl_.table_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.update_options_ != nullptr);
      if (_this->_impl_.update_options_ == nullptr) {
        _this->_impl_.update_options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.update_options_);
      } else {
        _this->_impl_.update_options_->MergeFrom(*from._impl_.update_options_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateSelectionTableRequest::CopyFrom(const UpdateSelectionTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.UpdateSelectionTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateSelectionTableRequest::InternalSwap(UpdateSelectionTableRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.table_id_, &other->_impl_.table_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateSelectionTableRequest, _impl_.update_options_)
      + sizeof(UpdateSelectionTableRequest::_impl_.update_options_)
      - PROTOBUF_FIELD_OFFSET(UpdateSelectionTableRequest, _impl_.table_)>(
          reinterpret_cast<char*>(&_impl_.table_),
          reinterpret_cast<char*>(&other->_impl_.table_));
}

::google::protobuf::Metadata UpdateSelectionTableRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TableUpdateOptions::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TableUpdateOptions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TableUpdateOptions, _impl_._has_bits_);
};

TableUpdateOptions::TableUpdateOptions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TableUpdateOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.TableUpdateOptions)
}
PROTOBUF_NDEBUG_INLINE TableUpdateOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::TableUpdateOptions& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        update_reason_(arena, from.update_reason_) {}

TableUpdateOptions::TableUpdateOptions(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TableUpdateOptions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TableUpdateOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TableUpdateOptions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, preserve_statistics_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, preserve_statistics_),
           offsetof(Impl_, create_backup_) -
               offsetof(Impl_, preserve_statistics_) +
               sizeof(Impl_::create_backup_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.TableUpdateOptions)
}
PROTOBUF_NDEBUG_INLINE TableUpdateOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        update_reason_(arena) {}

inline void TableUpdateOptions::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, preserve_statistics_),
           0,
           offsetof(Impl_, create_backup_) -
               offsetof(Impl_, preserve_statistics_) +
               sizeof(Impl_::create_backup_));
}
TableUpdateOptions::~TableUpdateOptions() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.TableUpdateOptions)
  SharedDtor(*this);
}
inline void TableUpdateOptions::SharedDtor(MessageLite& self) {
  TableUpdateOptions& this_ = static_cast<TableUpdateOptions&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.update_reason_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TableUpdateOptions::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TableUpdateOptions(arena);
}
constexpr auto TableUpdateOptions::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TableUpdateOptions),
                                            alignof(TableUpdateOptions));
}
constexpr auto TableUpdateOptions::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TableUpdateOptions_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TableUpdateOptions::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TableUpdateOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TableUpdateOptions::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TableUpdateOptions>(), &TableUpdateOptions::ByteSizeLong,
              &TableUpdateOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TableUpdateOptions, _impl_._cached_size_),
          false,
      },
      &TableUpdateOptions::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TableUpdateOptions_class_data_ =
        TableUpdateOptions::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TableUpdateOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TableUpdateOptions_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TableUpdateOptions_class_data_.tc_table);
  return TableUpdateOptions_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 53, 2>
TableUpdateOptions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TableUpdateOptions, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TableUpdateOptions_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::TableUpdateOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string update_reason = 4 [json_name = "updateReason"];
    {::_pbi::TcParser::FastUS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(TableUpdateOptions, _impl_.update_reason_)}},
    // bool preserve_statistics = 1 [json_name = "preserveStatistics"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TableUpdateOptions, _impl_.preserve_statistics_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(TableUpdateOptions, _impl_.preserve_statistics_)}},
    // bool validate_after_update = 2 [json_name = "validateAfterUpdate"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TableUpdateOptions, _impl_.validate_after_update_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(TableUpdateOptions, _impl_.validate_after_update_)}},
    // bool create_backup = 3 [json_name = "createBackup"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TableUpdateOptions, _impl_.create_backup_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(TableUpdateOptions, _impl_.create_backup_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool preserve_statistics = 1 [json_name = "preserveStatistics"];
    {PROTOBUF_FIELD_OFFSET(TableUpdateOptions, _impl_.preserve_statistics_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool validate_after_update = 2 [json_name = "validateAfterUpdate"];
    {PROTOBUF_FIELD_OFFSET(TableUpdateOptions, _impl_.validate_after_update_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool create_backup = 3 [json_name = "createBackup"];
    {PROTOBUF_FIELD_OFFSET(TableUpdateOptions, _impl_.create_backup_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string update_reason = 4 [json_name = "updateReason"];
    {PROTOBUF_FIELD_OFFSET(TableUpdateOptions, _impl_.update_reason_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\0\0\0\15\0\0\0"
    "api.v1alpha1.TableUpdateOptions"
    "update_reason"
  }},
};
PROTOBUF_NOINLINE void TableUpdateOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.TableUpdateOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.update_reason_.ClearNonDefaultToEmpty();
  }
  ::memset(&_impl_.preserve_statistics_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.create_backup_) -
      reinterpret_cast<char*>(&_impl_.preserve_statistics_)) + sizeof(_impl_.create_backup_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TableUpdateOptions::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TableUpdateOptions& this_ = static_cast<const TableUpdateOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TableUpdateOptions::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TableUpdateOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.TableUpdateOptions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool preserve_statistics = 1 [json_name = "preserveStatistics"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_preserve_statistics() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_preserve_statistics(), target);
    }
  }

  // bool validate_after_update = 2 [json_name = "validateAfterUpdate"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_validate_after_update() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_validate_after_update(), target);
    }
  }

  // bool create_backup = 3 [json_name = "createBackup"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_create_backup() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_create_backup(), target);
    }
  }

  // string update_reason = 4 [json_name = "updateReason"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_update_reason().empty()) {
      const ::std::string& _s = this_._internal_update_reason();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TableUpdateOptions.update_reason");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.TableUpdateOptions)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TableUpdateOptions::ByteSizeLong(const MessageLite& base) {
  const TableUpdateOptions& this_ = static_cast<const TableUpdateOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TableUpdateOptions::ByteSizeLong() const {
  const TableUpdateOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.TableUpdateOptions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string update_reason = 4 [json_name = "updateReason"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_update_reason().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_update_reason());
      }
    }
    // bool preserve_statistics = 1 [json_name = "preserveStatistics"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_preserve_statistics() != 0) {
        total_size += 2;
      }
    }
    // bool validate_after_update = 2 [json_name = "validateAfterUpdate"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_validate_after_update() != 0) {
        total_size += 2;
      }
    }
    // bool create_backup = 3 [json_name = "createBackup"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_create_backup() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TableUpdateOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TableUpdateOptions*>(&to_msg);
  auto& from = static_cast<const TableUpdateOptions&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.TableUpdateOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_update_reason().empty()) {
        _this->_internal_set_update_reason(from._internal_update_reason());
      } else {
        if (_this->_impl_.update_reason_.IsDefault()) {
          _this->_internal_set_update_reason("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_preserve_statistics() != 0) {
        _this->_impl_.preserve_statistics_ = from._impl_.preserve_statistics_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_validate_after_update() != 0) {
        _this->_impl_.validate_after_update_ = from._impl_.validate_after_update_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_create_backup() != 0) {
        _this->_impl_.create_backup_ = from._impl_.create_backup_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TableUpdateOptions::CopyFrom(const TableUpdateOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.TableUpdateOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TableUpdateOptions::InternalSwap(TableUpdateOptions* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.update_reason_, &other->_impl_.update_reason_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TableUpdateOptions, _impl_.create_backup_)
      + sizeof(TableUpdateOptions::_impl_.create_backup_)
      - PROTOBUF_FIELD_OFFSET(TableUpdateOptions, _impl_.preserve_statistics_)>(
          reinterpret_cast<char*>(&_impl_.preserve_statistics_),
          reinterpret_cast<char*>(&other->_impl_.preserve_statistics_));
}

::google::protobuf::Metadata TableUpdateOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateSelectionTableResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<UpdateSelectionTableResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateSelectionTableResponse, _impl_._has_bits_);
};

void UpdateSelectionTableResponse::clear_validation_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.validation_result_ != nullptr) _impl_.validation_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
UpdateSelectionTableResponse::UpdateSelectionTableResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateSelectionTableResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.UpdateSelectionTableResponse)
}
PROTOBUF_NDEBUG_INLINE UpdateSelectionTableResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::UpdateSelectionTableResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        message_(arena, from.message_) {}

UpdateSelectionTableResponse::UpdateSelectionTableResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const UpdateSelectionTableResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateSelectionTableResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateSelectionTableResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.table_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.table_)
                : nullptr;
  _impl_.validation_result_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.validation_result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.UpdateSelectionTableResponse)
}
PROTOBUF_NDEBUG_INLINE UpdateSelectionTableResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        message_(arena) {}

inline void UpdateSelectionTableResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, table_),
           0,
           offsetof(Impl_, validation_result_) -
               offsetof(Impl_, table_) +
               sizeof(Impl_::validation_result_));
}
UpdateSelectionTableResponse::~UpdateSelectionTableResponse() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.UpdateSelectionTableResponse)
  SharedDtor(*this);
}
inline void UpdateSelectionTableResponse::SharedDtor(MessageLite& self) {
  UpdateSelectionTableResponse& this_ = static_cast<UpdateSelectionTableResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  delete this_._impl_.table_;
  delete this_._impl_.validation_result_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL UpdateSelectionTableResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UpdateSelectionTableResponse(arena);
}
constexpr auto UpdateSelectionTableResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(UpdateSelectionTableResponse),
                                            alignof(UpdateSelectionTableResponse));
}
constexpr auto UpdateSelectionTableResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UpdateSelectionTableResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UpdateSelectionTableResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UpdateSelectionTableResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UpdateSelectionTableResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UpdateSelectionTableResponse>(), &UpdateSelectionTableResponse::ByteSizeLong,
              &UpdateSelectionTableResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UpdateSelectionTableResponse, _impl_._cached_size_),
          false,
      },
      &UpdateSelectionTableResponse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull UpdateSelectionTableResponse_class_data_ =
        UpdateSelectionTableResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
UpdateSelectionTableResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UpdateSelectionTableResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UpdateSelectionTableResponse_class_data_.tc_table);
  return UpdateSelectionTableResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 57, 2>
UpdateSelectionTableResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateSelectionTableResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    UpdateSelectionTableResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::UpdateSelectionTableResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .api.v1alpha1.SelectionTable table = 1 [json_name = "table"];
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0, PROTOBUF_FIELD_OFFSET(UpdateSelectionTableResponse, _impl_.table_)}},
    // .api.v1alpha1.ValidationResult validation_result = 2 [json_name = "validationResult"];
    {::_pbi::TcParser::FastMtS1,
     {18, 2, 1, PROTOBUF_FIELD_OFFSET(UpdateSelectionTableResponse, _impl_.validation_result_)}},
    // string message = 3 [json_name = "message"];
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateSelectionTableResponse, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .api.v1alpha1.SelectionTable table = 1 [json_name = "table"];
    {PROTOBUF_FIELD_OFFSET(UpdateSelectionTableResponse, _impl_.table_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.ValidationResult validation_result = 2 [json_name = "validationResult"];
    {PROTOBUF_FIELD_OFFSET(UpdateSelectionTableResponse, _impl_.validation_result_), _Internal::kHasBitsOffset + 2, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string message = 3 [json_name = "message"];
    {PROTOBUF_FIELD_OFFSET(UpdateSelectionTableResponse, _impl_.message_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::SelectionTable>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::ValidationResult>()},
  }},
  {{
    "\51\0\0\7\0\0\0\0"
    "api.v1alpha1.UpdateSelectionTableResponse"
    "message"
  }},
};
PROTOBUF_NOINLINE void UpdateSelectionTableResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.UpdateSelectionTableResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.message_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.table_ != nullptr);
      _impl_.table_->Clear();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.validation_result_ != nullptr);
      _impl_.validation_result_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UpdateSelectionTableResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UpdateSelectionTableResponse& this_ = static_cast<const UpdateSelectionTableResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UpdateSelectionTableResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UpdateSelectionTableResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.UpdateSelectionTableResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.SelectionTable table = 1 [json_name = "table"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.table_, this_._impl_.table_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.ValidationResult validation_result = 2 [json_name = "validationResult"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.validation_result_, this_._impl_.validation_result_->GetCachedSize(), target,
        stream);
  }

  // string message = 3 [json_name = "message"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!this_._internal_message().empty()) {
      const ::std::string& _s = this_._internal_message();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.UpdateSelectionTableResponse.message");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.UpdateSelectionTableResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UpdateSelectionTableResponse::ByteSizeLong(const MessageLite& base) {
  const UpdateSelectionTableResponse& this_ = static_cast<const UpdateSelectionTableResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UpdateSelectionTableResponse::ByteSizeLong() const {
  const UpdateSelectionTableResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.UpdateSelectionTableResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string message = 3 [json_name = "message"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_message().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_message());
      }
    }
    // .api.v1alpha1.SelectionTable table = 1 [json_name = "table"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.table_);
    }
    // .api.v1alpha1.ValidationResult validation_result = 2 [json_name = "validationResult"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.validation_result_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UpdateSelectionTableResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateSelectionTableResponse*>(&to_msg);
  auto& from = static_cast<const UpdateSelectionTableResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.UpdateSelectionTableResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_message().empty()) {
        _this->_internal_set_message(from._internal_message());
      } else {
        if (_this->_impl_.message_.IsDefault()) {
          _this->_internal_set_message("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.table_ != nullptr);
      if (_this->_impl_.table_ == nullptr) {
        _this->_impl_.table_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.table_);
      } else {
        _this->_impl_.table_->MergeFrom(*from._impl_.table_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.validation_result_ != nullptr);
      if (_this->_impl_.validation_result_ == nullptr) {
        _this->_impl_.validation_result_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.validation_result_);
      } else {
        _this->_impl_.validation_result_->MergeFrom(*from._impl_.validation_result_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateSelectionTableResponse::CopyFrom(const UpdateSelectionTableResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.UpdateSelectionTableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateSelectionTableResponse::InternalSwap(UpdateSelectionTableResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateSelectionTableResponse, _impl_.validation_result_)
      + sizeof(UpdateSelectionTableResponse::_impl_.validation_result_)
      - PROTOBUF_FIELD_OFFSET(UpdateSelectionTableResponse, _impl_.table_)>(
          reinterpret_cast<char*>(&_impl_.table_),
          reinterpret_cast<char*>(&other->_impl_.table_));
}

::google::protobuf::Metadata UpdateSelectionTableResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeleteSelectionTableRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<DeleteSelectionTableRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DeleteSelectionTableRequest, _impl_._has_bits_);
};

DeleteSelectionTableRequest::DeleteSelectionTableRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DeleteSelectionTableRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.DeleteSelectionTableRequest)
}
PROTOBUF_NDEBUG_INLINE DeleteSelectionTableRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::DeleteSelectionTableRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        table_id_(arena, from.table_id_) {}

DeleteSelectionTableRequest::DeleteSelectionTableRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DeleteSelectionTableRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DeleteSelectionTableRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeleteSelectionTableRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.force_ = from._impl_.force_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.DeleteSelectionTableRequest)
}
PROTOBUF_NDEBUG_INLINE DeleteSelectionTableRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        table_id_(arena) {}

inline void DeleteSelectionTableRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.force_ = {};
}
DeleteSelectionTableRequest::~DeleteSelectionTableRequest() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.DeleteSelectionTableRequest)
  SharedDtor(*this);
}
inline void DeleteSelectionTableRequest::SharedDtor(MessageLite& self) {
  DeleteSelectionTableRequest& this_ = static_cast<DeleteSelectionTableRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.table_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DeleteSelectionTableRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DeleteSelectionTableRequest(arena);
}
constexpr auto DeleteSelectionTableRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DeleteSelectionTableRequest),
                                            alignof(DeleteSelectionTableRequest));
}
constexpr auto DeleteSelectionTableRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DeleteSelectionTableRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DeleteSelectionTableRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DeleteSelectionTableRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DeleteSelectionTableRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DeleteSelectionTableRequest>(), &DeleteSelectionTableRequest::ByteSizeLong,
              &DeleteSelectionTableRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DeleteSelectionTableRequest, _impl_._cached_size_),
          false,
      },
      &DeleteSelectionTableRequest::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull DeleteSelectionTableRequest_class_data_ =
        DeleteSelectionTableRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
DeleteSelectionTableRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DeleteSelectionTableRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DeleteSelectionTableRequest_class_data_.tc_table);
  return DeleteSelectionTableRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 57, 2>
DeleteSelectionTableRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeleteSelectionTableRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    DeleteSelectionTableRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::DeleteSelectionTableRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool force = 2 [json_name = "force"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DeleteSelectionTableRequest, _impl_.force_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(DeleteSelectionTableRequest, _impl_.force_)}},
    // string table_id = 1 [json_name = "tableId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DeleteSelectionTableRequest, _impl_.table_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string table_id = 1 [json_name = "tableId"];
    {PROTOBUF_FIELD_OFFSET(DeleteSelectionTableRequest, _impl_.table_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool force = 2 [json_name = "force"];
    {PROTOBUF_FIELD_OFFSET(DeleteSelectionTableRequest, _impl_.force_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\50\10\0\0\0\0\0\0"
    "api.v1alpha1.DeleteSelectionTableRequest"
    "table_id"
  }},
};
PROTOBUF_NOINLINE void DeleteSelectionTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.DeleteSelectionTableRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.table_id_.ClearNonDefaultToEmpty();
  }
  _impl_.force_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DeleteSelectionTableRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DeleteSelectionTableRequest& this_ = static_cast<const DeleteSelectionTableRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DeleteSelectionTableRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DeleteSelectionTableRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.DeleteSelectionTableRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string table_id = 1 [json_name = "tableId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_table_id().empty()) {
      const ::std::string& _s = this_._internal_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.DeleteSelectionTableRequest.table_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // bool force = 2 [json_name = "force"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_force() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_force(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.DeleteSelectionTableRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DeleteSelectionTableRequest::ByteSizeLong(const MessageLite& base) {
  const DeleteSelectionTableRequest& this_ = static_cast<const DeleteSelectionTableRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DeleteSelectionTableRequest::ByteSizeLong() const {
  const DeleteSelectionTableRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.DeleteSelectionTableRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string table_id = 1 [json_name = "tableId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_table_id());
      }
    }
    // bool force = 2 [json_name = "force"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_force() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DeleteSelectionTableRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeleteSelectionTableRequest*>(&to_msg);
  auto& from = static_cast<const DeleteSelectionTableRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.DeleteSelectionTableRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_table_id().empty()) {
        _this->_internal_set_table_id(from._internal_table_id());
      } else {
        if (_this->_impl_.table_id_.IsDefault()) {
          _this->_internal_set_table_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_force() != 0) {
        _this->_impl_.force_ = from._impl_.force_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteSelectionTableRequest::CopyFrom(const DeleteSelectionTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.DeleteSelectionTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeleteSelectionTableRequest::InternalSwap(DeleteSelectionTableRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.table_id_, &other->_impl_.table_id_, arena);
  swap(_impl_.force_, other->_impl_.force_);
}

::google::protobuf::Metadata DeleteSelectionTableRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeleteSelectionTableResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<DeleteSelectionTableResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DeleteSelectionTableResponse, _impl_._has_bits_);
};

DeleteSelectionTableResponse::DeleteSelectionTableResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DeleteSelectionTableResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.DeleteSelectionTableResponse)
}
PROTOBUF_NDEBUG_INLINE DeleteSelectionTableResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::DeleteSelectionTableResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        message_(arena, from.message_) {}

DeleteSelectionTableResponse::DeleteSelectionTableResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DeleteSelectionTableResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DeleteSelectionTableResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeleteSelectionTableResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.references_removed_ = from._impl_.references_removed_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.DeleteSelectionTableResponse)
}
PROTOBUF_NDEBUG_INLINE DeleteSelectionTableResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        message_(arena) {}

inline void DeleteSelectionTableResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.references_removed_ = {};
}
DeleteSelectionTableResponse::~DeleteSelectionTableResponse() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.DeleteSelectionTableResponse)
  SharedDtor(*this);
}
inline void DeleteSelectionTableResponse::SharedDtor(MessageLite& self) {
  DeleteSelectionTableResponse& this_ = static_cast<DeleteSelectionTableResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DeleteSelectionTableResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DeleteSelectionTableResponse(arena);
}
constexpr auto DeleteSelectionTableResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DeleteSelectionTableResponse),
                                            alignof(DeleteSelectionTableResponse));
}
constexpr auto DeleteSelectionTableResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DeleteSelectionTableResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DeleteSelectionTableResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DeleteSelectionTableResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DeleteSelectionTableResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DeleteSelectionTableResponse>(), &DeleteSelectionTableResponse::ByteSizeLong,
              &DeleteSelectionTableResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DeleteSelectionTableResponse, _impl_._cached_size_),
          false,
      },
      &DeleteSelectionTableResponse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull DeleteSelectionTableResponse_class_data_ =
        DeleteSelectionTableResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
DeleteSelectionTableResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DeleteSelectionTableResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DeleteSelectionTableResponse_class_data_.tc_table);
  return DeleteSelectionTableResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 57, 2>
DeleteSelectionTableResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeleteSelectionTableResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    DeleteSelectionTableResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::DeleteSelectionTableResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 references_removed = 2 [json_name = "referencesRemoved"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeleteSelectionTableResponse, _impl_.references_removed_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(DeleteSelectionTableResponse, _impl_.references_removed_)}},
    // string message = 1 [json_name = "message"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DeleteSelectionTableResponse, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string message = 1 [json_name = "message"];
    {PROTOBUF_FIELD_OFFSET(DeleteSelectionTableResponse, _impl_.message_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 references_removed = 2 [json_name = "referencesRemoved"];
    {PROTOBUF_FIELD_OFFSET(DeleteSelectionTableResponse, _impl_.references_removed_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\51\7\0\0\0\0\0\0"
    "api.v1alpha1.DeleteSelectionTableResponse"
    "message"
  }},
};
PROTOBUF_NOINLINE void DeleteSelectionTableResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.DeleteSelectionTableResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.message_.ClearNonDefaultToEmpty();
  }
  _impl_.references_removed_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DeleteSelectionTableResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DeleteSelectionTableResponse& this_ = static_cast<const DeleteSelectionTableResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DeleteSelectionTableResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DeleteSelectionTableResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.DeleteSelectionTableResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string message = 1 [json_name = "message"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_message().empty()) {
      const ::std::string& _s = this_._internal_message();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.DeleteSelectionTableResponse.message");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // int32 references_removed = 2 [json_name = "referencesRemoved"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_references_removed() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_references_removed(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.DeleteSelectionTableResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DeleteSelectionTableResponse::ByteSizeLong(const MessageLite& base) {
  const DeleteSelectionTableResponse& this_ = static_cast<const DeleteSelectionTableResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DeleteSelectionTableResponse::ByteSizeLong() const {
  const DeleteSelectionTableResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.DeleteSelectionTableResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string message = 1 [json_name = "message"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_message().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_message());
      }
    }
    // int32 references_removed = 2 [json_name = "referencesRemoved"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_references_removed() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_references_removed());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DeleteSelectionTableResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeleteSelectionTableResponse*>(&to_msg);
  auto& from = static_cast<const DeleteSelectionTableResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.DeleteSelectionTableResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_message().empty()) {
        _this->_internal_set_message(from._internal_message());
      } else {
        if (_this->_impl_.message_.IsDefault()) {
          _this->_internal_set_message("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_references_removed() != 0) {
        _this->_impl_.references_removed_ = from._impl_.references_removed_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteSelectionTableResponse::CopyFrom(const DeleteSelectionTableResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.DeleteSelectionTableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeleteSelectionTableResponse::InternalSwap(DeleteSelectionTableResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  swap(_impl_.references_removed_, other->_impl_.references_removed_);
}

::google::protobuf::Metadata DeleteSelectionTableResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListSelectionTablesRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ListSelectionTablesRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ListSelectionTablesRequest, _impl_._has_bits_);
};

void ListSelectionTablesRequest::clear_page_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.page_info_ != nullptr) _impl_.page_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
ListSelectionTablesRequest::ListSelectionTablesRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListSelectionTablesRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.ListSelectionTablesRequest)
}
PROTOBUF_NDEBUG_INLINE ListSelectionTablesRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::ListSelectionTablesRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ListSelectionTablesRequest::ListSelectionTablesRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ListSelectionTablesRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListSelectionTablesRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListSelectionTablesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.filter_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.filter_)
                : nullptr;
  _impl_.page_info_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.page_info_)
                : nullptr;
  _impl_.sort_options_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.sort_options_)
                : nullptr;
  _impl_.include_statistics_ = from._impl_.include_statistics_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.ListSelectionTablesRequest)
}
PROTOBUF_NDEBUG_INLINE ListSelectionTablesRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ListSelectionTablesRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, filter_),
           0,
           offsetof(Impl_, include_statistics_) -
               offsetof(Impl_, filter_) +
               sizeof(Impl_::include_statistics_));
}
ListSelectionTablesRequest::~ListSelectionTablesRequest() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.ListSelectionTablesRequest)
  SharedDtor(*this);
}
inline void ListSelectionTablesRequest::SharedDtor(MessageLite& self) {
  ListSelectionTablesRequest& this_ = static_cast<ListSelectionTablesRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.filter_;
  delete this_._impl_.page_info_;
  delete this_._impl_.sort_options_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ListSelectionTablesRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ListSelectionTablesRequest(arena);
}
constexpr auto ListSelectionTablesRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ListSelectionTablesRequest),
                                            alignof(ListSelectionTablesRequest));
}
constexpr auto ListSelectionTablesRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ListSelectionTablesRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ListSelectionTablesRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ListSelectionTablesRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ListSelectionTablesRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ListSelectionTablesRequest>(), &ListSelectionTablesRequest::ByteSizeLong,
              &ListSelectionTablesRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ListSelectionTablesRequest, _impl_._cached_size_),
          false,
      },
      &ListSelectionTablesRequest::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ListSelectionTablesRequest_class_data_ =
        ListSelectionTablesRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ListSelectionTablesRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ListSelectionTablesRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ListSelectionTablesRequest_class_data_.tc_table);
  return ListSelectionTablesRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 3, 0, 2>
ListSelectionTablesRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ListSelectionTablesRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ListSelectionTablesRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::ListSelectionTablesRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool include_statistics = 4 [json_name = "includeStatistics"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ListSelectionTablesRequest, _impl_.include_statistics_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(ListSelectionTablesRequest, _impl_.include_statistics_)}},
    // .api.v1alpha1.SelectionTableFilter filter = 1 [json_name = "filter"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ListSelectionTablesRequest, _impl_.filter_)}},
    // .api.v1alpha1.PageInfo page_info = 2 [json_name = "pageInfo"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(ListSelectionTablesRequest, _impl_.page_info_)}},
    // .api.v1alpha1.TableSortOptions sort_options = 3 [json_name = "sortOptions"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(ListSelectionTablesRequest, _impl_.sort_options_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .api.v1alpha1.SelectionTableFilter filter = 1 [json_name = "filter"];
    {PROTOBUF_FIELD_OFFSET(ListSelectionTablesRequest, _impl_.filter_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.PageInfo page_info = 2 [json_name = "pageInfo"];
    {PROTOBUF_FIELD_OFFSET(ListSelectionTablesRequest, _impl_.page_info_), _Internal::kHasBitsOffset + 1, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.TableSortOptions sort_options = 3 [json_name = "sortOptions"];
    {PROTOBUF_FIELD_OFFSET(ListSelectionTablesRequest, _impl_.sort_options_), _Internal::kHasBitsOffset + 2, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool include_statistics = 4 [json_name = "includeStatistics"];
    {PROTOBUF_FIELD_OFFSET(ListSelectionTablesRequest, _impl_.include_statistics_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::SelectionTableFilter>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::PageInfo>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::TableSortOptions>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ListSelectionTablesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.ListSelectionTablesRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.filter_ != nullptr);
      _impl_.filter_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.page_info_ != nullptr);
      _impl_.page_info_->Clear();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.sort_options_ != nullptr);
      _impl_.sort_options_->Clear();
    }
  }
  _impl_.include_statistics_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ListSelectionTablesRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ListSelectionTablesRequest& this_ = static_cast<const ListSelectionTablesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ListSelectionTablesRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ListSelectionTablesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.ListSelectionTablesRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.SelectionTableFilter filter = 1 [json_name = "filter"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.filter_, this_._impl_.filter_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.PageInfo page_info = 2 [json_name = "pageInfo"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.page_info_, this_._impl_.page_info_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.TableSortOptions sort_options = 3 [json_name = "sortOptions"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.sort_options_, this_._impl_.sort_options_->GetCachedSize(), target,
        stream);
  }

  // bool include_statistics = 4 [json_name = "includeStatistics"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    if (this_._internal_include_statistics() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_include_statistics(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.ListSelectionTablesRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ListSelectionTablesRequest::ByteSizeLong(const MessageLite& base) {
  const ListSelectionTablesRequest& this_ = static_cast<const ListSelectionTablesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ListSelectionTablesRequest::ByteSizeLong() const {
  const ListSelectionTablesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.ListSelectionTablesRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // .api.v1alpha1.SelectionTableFilter filter = 1 [json_name = "filter"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.filter_);
    }
    // .api.v1alpha1.PageInfo page_info = 2 [json_name = "pageInfo"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.page_info_);
    }
    // .api.v1alpha1.TableSortOptions sort_options = 3 [json_name = "sortOptions"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.sort_options_);
    }
    // bool include_statistics = 4 [json_name = "includeStatistics"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_include_statistics() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ListSelectionTablesRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListSelectionTablesRequest*>(&to_msg);
  auto& from = static_cast<const ListSelectionTablesRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.ListSelectionTablesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.filter_ != nullptr);
      if (_this->_impl_.filter_ == nullptr) {
        _this->_impl_.filter_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.filter_);
      } else {
        _this->_impl_.filter_->MergeFrom(*from._impl_.filter_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.page_info_ != nullptr);
      if (_this->_impl_.page_info_ == nullptr) {
        _this->_impl_.page_info_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.page_info_);
      } else {
        _this->_impl_.page_info_->MergeFrom(*from._impl_.page_info_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.sort_options_ != nullptr);
      if (_this->_impl_.sort_options_ == nullptr) {
        _this->_impl_.sort_options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.sort_options_);
      } else {
        _this->_impl_.sort_options_->MergeFrom(*from._impl_.sort_options_);
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_include_statistics() != 0) {
        _this->_impl_.include_statistics_ = from._impl_.include_statistics_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListSelectionTablesRequest::CopyFrom(const ListSelectionTablesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.ListSelectionTablesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListSelectionTablesRequest::InternalSwap(ListSelectionTablesRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListSelectionTablesRequest, _impl_.include_statistics_)
      + sizeof(ListSelectionTablesRequest::_impl_.include_statistics_)
      - PROTOBUF_FIELD_OFFSET(ListSelectionTablesRequest, _impl_.filter_)>(
          reinterpret_cast<char*>(&_impl_.filter_),
          reinterpret_cast<char*>(&other->_impl_.filter_));
}

::google::protobuf::Metadata ListSelectionTablesRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SelectionTableFilter::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SelectionTableFilter>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SelectionTableFilter, _impl_._has_bits_);
};

SelectionTableFilter::SelectionTableFilter(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SelectionTableFilter_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.SelectionTableFilter)
}
PROTOBUF_NDEBUG_INLINE SelectionTableFilter::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::SelectionTableFilter& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        categories_{visibility, arena, from.categories_},
        table_types_{visibility, arena, from.table_types_},
        _table_types_cached_byte_size_{0},
        tags_{visibility, arena, from.tags_},
        author_(arena, from.author_),
        search_term_(arena, from.search_term_) {}

SelectionTableFilter::SelectionTableFilter(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SelectionTableFilter& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SelectionTableFilter_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SelectionTableFilter* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, official_only_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, official_only_),
           offsetof(Impl_, public_only_) -
               offsetof(Impl_, official_only_) +
               sizeof(Impl_::public_only_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.SelectionTableFilter)
}
PROTOBUF_NDEBUG_INLINE SelectionTableFilter::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        categories_{visibility, arena},
        table_types_{visibility, arena},
        _table_types_cached_byte_size_{0},
        tags_{visibility, arena},
        author_(arena),
        search_term_(arena) {}

inline void SelectionTableFilter::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, official_only_),
           0,
           offsetof(Impl_, public_only_) -
               offsetof(Impl_, official_only_) +
               sizeof(Impl_::public_only_));
}
SelectionTableFilter::~SelectionTableFilter() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.SelectionTableFilter)
  SharedDtor(*this);
}
inline void SelectionTableFilter::SharedDtor(MessageLite& self) {
  SelectionTableFilter& this_ = static_cast<SelectionTableFilter&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.author_.Destroy();
  this_._impl_.search_term_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SelectionTableFilter::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SelectionTableFilter(arena);
}
constexpr auto SelectionTableFilter::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SelectionTableFilter, _impl_.categories_) +
          decltype(SelectionTableFilter::_impl_.categories_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SelectionTableFilter, _impl_.table_types_) +
          decltype(SelectionTableFilter::_impl_.table_types_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SelectionTableFilter, _impl_.tags_) +
          decltype(SelectionTableFilter::_impl_.tags_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SelectionTableFilter), alignof(SelectionTableFilter), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SelectionTableFilter::PlacementNew_,
                                 sizeof(SelectionTableFilter),
                                 alignof(SelectionTableFilter));
  }
}
constexpr auto SelectionTableFilter::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SelectionTableFilter_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SelectionTableFilter::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SelectionTableFilter>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SelectionTableFilter::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SelectionTableFilter>(), &SelectionTableFilter::ByteSizeLong,
              &SelectionTableFilter::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SelectionTableFilter, _impl_._cached_size_),
          false,
      },
      &SelectionTableFilter::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SelectionTableFilter_class_data_ =
        SelectionTableFilter::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SelectionTableFilter::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SelectionTableFilter_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SelectionTableFilter_class_data_.tc_table);
  return SelectionTableFilter_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 73, 2>
SelectionTableFilter::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SelectionTableFilter, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SelectionTableFilter_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::SelectionTableFilter>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string categories = 1 [json_name = "categories"];
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SelectionTableFilter, _impl_.categories_)}},
    // repeated .api.v1alpha1.SelectionTableType table_types = 2 [json_name = "tableTypes"];
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SelectionTableFilter, _impl_.table_types_)}},
    // string author = 3 [json_name = "author"];
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(SelectionTableFilter, _impl_.author_)}},
    // string search_term = 4 [json_name = "searchTerm"];
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(SelectionTableFilter, _impl_.search_term_)}},
    // repeated string tags = 5 [json_name = "tags"];
    {::_pbi::TcParser::FastUR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(SelectionTableFilter, _impl_.tags_)}},
    // bool official_only = 6 [json_name = "officialOnly"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SelectionTableFilter, _impl_.official_only_), 2>(),
     {48, 2, 0, PROTOBUF_FIELD_OFFSET(SelectionTableFilter, _impl_.official_only_)}},
    // bool public_only = 7 [json_name = "publicOnly"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SelectionTableFilter, _impl_.public_only_), 3>(),
     {56, 3, 0, PROTOBUF_FIELD_OFFSET(SelectionTableFilter, _impl_.public_only_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string categories = 1 [json_name = "categories"];
    {PROTOBUF_FIELD_OFFSET(SelectionTableFilter, _impl_.categories_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated .api.v1alpha1.SelectionTableType table_types = 2 [json_name = "tableTypes"];
    {PROTOBUF_FIELD_OFFSET(SelectionTableFilter, _impl_.table_types_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // string author = 3 [json_name = "author"];
    {PROTOBUF_FIELD_OFFSET(SelectionTableFilter, _impl_.author_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string search_term = 4 [json_name = "searchTerm"];
    {PROTOBUF_FIELD_OFFSET(SelectionTableFilter, _impl_.search_term_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string tags = 5 [json_name = "tags"];
    {PROTOBUF_FIELD_OFFSET(SelectionTableFilter, _impl_.tags_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // bool official_only = 6 [json_name = "officialOnly"];
    {PROTOBUF_FIELD_OFFSET(SelectionTableFilter, _impl_.official_only_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool public_only = 7 [json_name = "publicOnly"];
    {PROTOBUF_FIELD_OFFSET(SelectionTableFilter, _impl_.public_only_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\41\12\0\6\13\4\0\0"
    "api.v1alpha1.SelectionTableFilter"
    "categories"
    "author"
    "search_term"
    "tags"
  }},
};
PROTOBUF_NOINLINE void SelectionTableFilter::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.SelectionTableFilter)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.categories_.Clear();
  _impl_.table_types_.Clear();
  _impl_.tags_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.author_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.search_term_.ClearNonDefaultToEmpty();
    }
  }
  ::memset(&_impl_.official_only_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.public_only_) -
      reinterpret_cast<char*>(&_impl_.official_only_)) + sizeof(_impl_.public_only_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SelectionTableFilter::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SelectionTableFilter& this_ = static_cast<const SelectionTableFilter&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SelectionTableFilter::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SelectionTableFilter& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.SelectionTableFilter)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string categories = 1 [json_name = "categories"];
  for (int i = 0, n = this_._internal_categories_size(); i < n; ++i) {
    const auto& s = this_._internal_categories().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.SelectionTableFilter.categories");
    target = stream->WriteString(1, s, target);
  }

  // repeated .api.v1alpha1.SelectionTableType table_types = 2 [json_name = "tableTypes"];
  {
    ::size_t byte_size = this_._impl_._table_types_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          2, this_._internal_table_types(), byte_size, target);
    }
  }

  // string author = 3 [json_name = "author"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_author().empty()) {
      const ::std::string& _s = this_._internal_author();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.SelectionTableFilter.author");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string search_term = 4 [json_name = "searchTerm"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_search_term().empty()) {
      const ::std::string& _s = this_._internal_search_term();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.SelectionTableFilter.search_term");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // repeated string tags = 5 [json_name = "tags"];
  for (int i = 0, n = this_._internal_tags_size(); i < n; ++i) {
    const auto& s = this_._internal_tags().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.SelectionTableFilter.tags");
    target = stream->WriteString(5, s, target);
  }

  // bool official_only = 6 [json_name = "officialOnly"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_official_only() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          6, this_._internal_official_only(), target);
    }
  }

  // bool public_only = 7 [json_name = "publicOnly"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_public_only() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          7, this_._internal_public_only(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.SelectionTableFilter)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SelectionTableFilter::ByteSizeLong(const MessageLite& base) {
  const SelectionTableFilter& this_ = static_cast<const SelectionTableFilter&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SelectionTableFilter::ByteSizeLong() const {
  const SelectionTableFilter& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.SelectionTableFilter)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string categories = 1 [json_name = "categories"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_categories().size());
      for (int i = 0, n = this_._internal_categories().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_categories().Get(i));
      }
    }
    // repeated .api.v1alpha1.SelectionTableType table_types = 2 [json_name = "tableTypes"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_table_types(), 1, this_._impl_._table_types_cached_byte_size_);
    }
    // repeated string tags = 5 [json_name = "tags"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_tags().size());
      for (int i = 0, n = this_._internal_tags().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_tags().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string author = 3 [json_name = "author"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_author().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_author());
      }
    }
    // string search_term = 4 [json_name = "searchTerm"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_search_term().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_search_term());
      }
    }
    // bool official_only = 6 [json_name = "officialOnly"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_official_only() != 0) {
        total_size += 2;
      }
    }
    // bool public_only = 7 [json_name = "publicOnly"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_public_only() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SelectionTableFilter::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SelectionTableFilter*>(&to_msg);
  auto& from = static_cast<const SelectionTableFilter&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.SelectionTableFilter)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_categories()->MergeFrom(from._internal_categories());
  _this->_internal_mutable_table_types()->MergeFrom(from._internal_table_types());
  _this->_internal_mutable_tags()->MergeFrom(from._internal_tags());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_author().empty()) {
        _this->_internal_set_author(from._internal_author());
      } else {
        if (_this->_impl_.author_.IsDefault()) {
          _this->_internal_set_author("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_search_term().empty()) {
        _this->_internal_set_search_term(from._internal_search_term());
      } else {
        if (_this->_impl_.search_term_.IsDefault()) {
          _this->_internal_set_search_term("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_official_only() != 0) {
        _this->_impl_.official_only_ = from._impl_.official_only_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_public_only() != 0) {
        _this->_impl_.public_only_ = from._impl_.public_only_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SelectionTableFilter::CopyFrom(const SelectionTableFilter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.SelectionTableFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SelectionTableFilter::InternalSwap(SelectionTableFilter* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.categories_.InternalSwap(&other->_impl_.categories_);
  _impl_.table_types_.InternalSwap(&other->_impl_.table_types_);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.author_, &other->_impl_.author_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.search_term_, &other->_impl_.search_term_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SelectionTableFilter, _impl_.public_only_)
      + sizeof(SelectionTableFilter::_impl_.public_only_)
      - PROTOBUF_FIELD_OFFSET(SelectionTableFilter, _impl_.official_only_)>(
          reinterpret_cast<char*>(&_impl_.official_only_),
          reinterpret_cast<char*>(&other->_impl_.official_only_));
}

::google::protobuf::Metadata SelectionTableFilter::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TableSortOptions::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TableSortOptions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TableSortOptions, _impl_._has_bits_);
};

TableSortOptions::TableSortOptions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TableSortOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.TableSortOptions)
}
TableSortOptions::TableSortOptions(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TableSortOptions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TableSortOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE TableSortOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void TableSortOptions::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sort_by_),
           0,
           offsetof(Impl_, direction_) -
               offsetof(Impl_, sort_by_) +
               sizeof(Impl_::direction_));
}
TableSortOptions::~TableSortOptions() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.TableSortOptions)
  SharedDtor(*this);
}
inline void TableSortOptions::SharedDtor(MessageLite& self) {
  TableSortOptions& this_ = static_cast<TableSortOptions&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TableSortOptions::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TableSortOptions(arena);
}
constexpr auto TableSortOptions::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TableSortOptions),
                                            alignof(TableSortOptions));
}
constexpr auto TableSortOptions::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TableSortOptions_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TableSortOptions::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TableSortOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TableSortOptions::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TableSortOptions>(), &TableSortOptions::ByteSizeLong,
              &TableSortOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TableSortOptions, _impl_._cached_size_),
          false,
      },
      &TableSortOptions::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TableSortOptions_class_data_ =
        TableSortOptions::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TableSortOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TableSortOptions_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TableSortOptions_class_data_.tc_table);
  return TableSortOptions_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
TableSortOptions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TableSortOptions, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TableSortOptions_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::TableSortOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .api.v1alpha1.TableSortDirection direction = 2 [json_name = "direction"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TableSortOptions, _impl_.direction_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TableSortOptions, _impl_.direction_)}},
    // .api.v1alpha1.TableSortField sort_by = 1 [json_name = "sortBy"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TableSortOptions, _impl_.sort_by_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(TableSortOptions, _impl_.sort_by_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .api.v1alpha1.TableSortField sort_by = 1 [json_name = "sortBy"];
    {PROTOBUF_FIELD_OFFSET(TableSortOptions, _impl_.sort_by_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .api.v1alpha1.TableSortDirection direction = 2 [json_name = "direction"];
    {PROTOBUF_FIELD_OFFSET(TableSortOptions, _impl_.direction_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void TableSortOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.TableSortOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    ::memset(&_impl_.sort_by_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.direction_) -
        reinterpret_cast<char*>(&_impl_.sort_by_)) + sizeof(_impl_.direction_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TableSortOptions::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TableSortOptions& this_ = static_cast<const TableSortOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TableSortOptions::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TableSortOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.TableSortOptions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .api.v1alpha1.TableSortField sort_by = 1 [json_name = "sortBy"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_sort_by() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_sort_by(), target);
    }
  }

  // .api.v1alpha1.TableSortDirection direction = 2 [json_name = "direction"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_direction() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_direction(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.TableSortOptions)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TableSortOptions::ByteSizeLong(const MessageLite& base) {
  const TableSortOptions& this_ = static_cast<const TableSortOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TableSortOptions::ByteSizeLong() const {
  const TableSortOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.TableSortOptions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // .api.v1alpha1.TableSortField sort_by = 1 [json_name = "sortBy"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_sort_by() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_sort_by());
      }
    }
    // .api.v1alpha1.TableSortDirection direction = 2 [json_name = "direction"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_direction() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_direction());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TableSortOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TableSortOptions*>(&to_msg);
  auto& from = static_cast<const TableSortOptions&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.TableSortOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (from._internal_sort_by() != 0) {
        _this->_impl_.sort_by_ = from._impl_.sort_by_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_direction() != 0) {
        _this->_impl_.direction_ = from._impl_.direction_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TableSortOptions::CopyFrom(const TableSortOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.TableSortOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TableSortOptions::InternalSwap(TableSortOptions* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TableSortOptions, _impl_.direction_)
      + sizeof(TableSortOptions::_impl_.direction_)
      - PROTOBUF_FIELD_OFFSET(TableSortOptions, _impl_.sort_by_)>(
          reinterpret_cast<char*>(&_impl_.sort_by_),
          reinterpret_cast<char*>(&other->_impl_.sort_by_));
}

::google::protobuf::Metadata TableSortOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListSelectionTablesResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ListSelectionTablesResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ListSelectionTablesResponse, _impl_._has_bits_);
};

void ListSelectionTablesResponse::clear_page_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.page_info_ != nullptr) _impl_.page_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
ListSelectionTablesResponse::ListSelectionTablesResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListSelectionTablesResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.ListSelectionTablesResponse)
}
PROTOBUF_NDEBUG_INLINE ListSelectionTablesResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::ListSelectionTablesResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        tables_{visibility, arena, from.tables_} {}

ListSelectionTablesResponse::ListSelectionTablesResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ListSelectionTablesResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListSelectionTablesResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListSelectionTablesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.page_info_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.page_info_)
                : nullptr;
  _impl_.list_stats_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.list_stats_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.ListSelectionTablesResponse)
}
PROTOBUF_NDEBUG_INLINE ListSelectionTablesResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        tables_{visibility, arena} {}

inline void ListSelectionTablesResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, page_info_),
           0,
           offsetof(Impl_, list_stats_) -
               offsetof(Impl_, page_info_) +
               sizeof(Impl_::list_stats_));
}
ListSelectionTablesResponse::~ListSelectionTablesResponse() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.ListSelectionTablesResponse)
  SharedDtor(*this);
}
inline void ListSelectionTablesResponse::SharedDtor(MessageLite& self) {
  ListSelectionTablesResponse& this_ = static_cast<ListSelectionTablesResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.page_info_;
  delete this_._impl_.list_stats_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ListSelectionTablesResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ListSelectionTablesResponse(arena);
}
constexpr auto ListSelectionTablesResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ListSelectionTablesResponse, _impl_.tables_) +
          decltype(ListSelectionTablesResponse::_impl_.tables_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ListSelectionTablesResponse), alignof(ListSelectionTablesResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ListSelectionTablesResponse::PlacementNew_,
                                 sizeof(ListSelectionTablesResponse),
                                 alignof(ListSelectionTablesResponse));
  }
}
constexpr auto ListSelectionTablesResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ListSelectionTablesResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ListSelectionTablesResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ListSelectionTablesResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ListSelectionTablesResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ListSelectionTablesResponse>(), &ListSelectionTablesResponse::ByteSizeLong,
              &ListSelectionTablesResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ListSelectionTablesResponse, _impl_._cached_size_),
          false,
      },
      &ListSelectionTablesResponse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ListSelectionTablesResponse_class_data_ =
        ListSelectionTablesResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ListSelectionTablesResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ListSelectionTablesResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ListSelectionTablesResponse_class_data_.tc_table);
  return ListSelectionTablesResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
ListSelectionTablesResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ListSelectionTablesResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ListSelectionTablesResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::ListSelectionTablesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .api.v1alpha1.SelectionTable tables = 1 [json_name = "tables"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListSelectionTablesResponse, _impl_.tables_)}},
    // .api.v1alpha1.PageInfo page_info = 2 [json_name = "pageInfo"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(ListSelectionTablesResponse, _impl_.page_info_)}},
    // .api.v1alpha1.TableListStats list_stats = 3 [json_name = "listStats"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 2, PROTOBUF_FIELD_OFFSET(ListSelectionTablesResponse, _impl_.list_stats_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .api.v1alpha1.SelectionTable tables = 1 [json_name = "tables"];
    {PROTOBUF_FIELD_OFFSET(ListSelectionTablesResponse, _impl_.tables_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.PageInfo page_info = 2 [json_name = "pageInfo"];
    {PROTOBUF_FIELD_OFFSET(ListSelectionTablesResponse, _impl_.page_info_), _Internal::kHasBitsOffset + 0, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.TableListStats list_stats = 3 [json_name = "listStats"];
    {PROTOBUF_FIELD_OFFSET(ListSelectionTablesResponse, _impl_.list_stats_), _Internal::kHasBitsOffset + 1, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::SelectionTable>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::PageInfo>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::TableListStats>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ListSelectionTablesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.ListSelectionTablesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tables_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.page_info_ != nullptr);
      _impl_.page_info_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.list_stats_ != nullptr);
      _impl_.list_stats_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ListSelectionTablesResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ListSelectionTablesResponse& this_ = static_cast<const ListSelectionTablesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ListSelectionTablesResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ListSelectionTablesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.ListSelectionTablesResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .api.v1alpha1.SelectionTable tables = 1 [json_name = "tables"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_tables_size());
       i < n; i++) {
    const auto& repfield = this_._internal_tables().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.PageInfo page_info = 2 [json_name = "pageInfo"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.page_info_, this_._impl_.page_info_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.TableListStats list_stats = 3 [json_name = "listStats"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.list_stats_, this_._impl_.list_stats_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.ListSelectionTablesResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ListSelectionTablesResponse::ByteSizeLong(const MessageLite& base) {
  const ListSelectionTablesResponse& this_ = static_cast<const ListSelectionTablesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ListSelectionTablesResponse::ByteSizeLong() const {
  const ListSelectionTablesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.ListSelectionTablesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.SelectionTable tables = 1 [json_name = "tables"];
    {
      total_size += 1UL * this_._internal_tables_size();
      for (const auto& msg : this_._internal_tables()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // .api.v1alpha1.PageInfo page_info = 2 [json_name = "pageInfo"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.page_info_);
    }
    // .api.v1alpha1.TableListStats list_stats = 3 [json_name = "listStats"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.list_stats_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ListSelectionTablesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListSelectionTablesResponse*>(&to_msg);
  auto& from = static_cast<const ListSelectionTablesResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.ListSelectionTablesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tables()->MergeFrom(
      from._internal_tables());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.page_info_ != nullptr);
      if (_this->_impl_.page_info_ == nullptr) {
        _this->_impl_.page_info_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.page_info_);
      } else {
        _this->_impl_.page_info_->MergeFrom(*from._impl_.page_info_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.list_stats_ != nullptr);
      if (_this->_impl_.list_stats_ == nullptr) {
        _this->_impl_.list_stats_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.list_stats_);
      } else {
        _this->_impl_.list_stats_->MergeFrom(*from._impl_.list_stats_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListSelectionTablesResponse::CopyFrom(const ListSelectionTablesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.ListSelectionTablesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListSelectionTablesResponse::InternalSwap(ListSelectionTablesResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.tables_.InternalSwap(&other->_impl_.tables_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListSelectionTablesResponse, _impl_.list_stats_)
      + sizeof(ListSelectionTablesResponse::_impl_.list_stats_)
      - PROTOBUF_FIELD_OFFSET(ListSelectionTablesResponse, _impl_.page_info_)>(
          reinterpret_cast<char*>(&_impl_.page_info_),
          reinterpret_cast<char*>(&other->_impl_.page_info_));
}

::google::protobuf::Metadata ListSelectionTablesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
TableListStats_TablesByCategoryEntry_DoNotUse::TableListStats_TablesByCategoryEntry_DoNotUse()
    : SuperType(TableListStats_TablesByCategoryEntry_DoNotUse_class_data_.base()) {}
TableListStats_TablesByCategoryEntry_DoNotUse::TableListStats_TablesByCategoryEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, TableListStats_TablesByCategoryEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
TableListStats_TablesByCategoryEntry_DoNotUse::TableListStats_TablesByCategoryEntry_DoNotUse() : SuperType() {}
TableListStats_TablesByCategoryEntry_DoNotUse::TableListStats_TablesByCategoryEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL TableListStats_TablesByCategoryEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TableListStats_TablesByCategoryEntry_DoNotUse(arena);
}
constexpr auto TableListStats_TablesByCategoryEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TableListStats_TablesByCategoryEntry_DoNotUse),
                                            alignof(TableListStats_TablesByCategoryEntry_DoNotUse));
}
constexpr auto TableListStats_TablesByCategoryEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TableListStats_TablesByCategoryEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TableListStats_TablesByCategoryEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TableListStats_TablesByCategoryEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TableListStats_TablesByCategoryEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&TableListStats_TablesByCategoryEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TableListStats_TablesByCategoryEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &TableListStats_TablesByCategoryEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TableListStats_TablesByCategoryEntry_DoNotUse_class_data_ =
        TableListStats_TablesByCategoryEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TableListStats_TablesByCategoryEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TableListStats_TablesByCategoryEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TableListStats_TablesByCategoryEntry_DoNotUse_class_data_.tc_table);
  return TableListStats_TablesByCategoryEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 61, 2>
TableListStats_TablesByCategoryEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TableListStats_TablesByCategoryEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TableListStats_TablesByCategoryEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::TableListStats_TablesByCategoryEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 value = 2 [json_name = "value"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TableListStats_TablesByCategoryEntry_DoNotUse, _impl_.value_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TableListStats_TablesByCategoryEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TableListStats_TablesByCategoryEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(TableListStats_TablesByCategoryEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(TableListStats_TablesByCategoryEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\61\3\0\0\0\0\0\0"
    "api.v1alpha1.TableListStats.TablesByCategoryEntry"
    "key"
  }},
};
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
TableListStats_TablesByTypeEntry_DoNotUse::TableListStats_TablesByTypeEntry_DoNotUse()
    : SuperType(TableListStats_TablesByTypeEntry_DoNotUse_class_data_.base()) {}
TableListStats_TablesByTypeEntry_DoNotUse::TableListStats_TablesByTypeEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, TableListStats_TablesByTypeEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
TableListStats_TablesByTypeEntry_DoNotUse::TableListStats_TablesByTypeEntry_DoNotUse() : SuperType() {}
TableListStats_TablesByTypeEntry_DoNotUse::TableListStats_TablesByTypeEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL TableListStats_TablesByTypeEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TableListStats_TablesByTypeEntry_DoNotUse(arena);
}
constexpr auto TableListStats_TablesByTypeEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TableListStats_TablesByTypeEntry_DoNotUse),
                                            alignof(TableListStats_TablesByTypeEntry_DoNotUse));
}
constexpr auto TableListStats_TablesByTypeEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TableListStats_TablesByTypeEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TableListStats_TablesByTypeEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TableListStats_TablesByTypeEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TableListStats_TablesByTypeEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&TableListStats_TablesByTypeEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TableListStats_TablesByTypeEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &TableListStats_TablesByTypeEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TableListStats_TablesByTypeEntry_DoNotUse_class_data_ =
        TableListStats_TablesByTypeEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TableListStats_TablesByTypeEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TableListStats_TablesByTypeEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TableListStats_TablesByTypeEntry_DoNotUse_class_data_.tc_table);
  return TableListStats_TablesByTypeEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 57, 2>
TableListStats_TablesByTypeEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TableListStats_TablesByTypeEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TableListStats_TablesByTypeEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::TableListStats_TablesByTypeEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 value = 2 [json_name = "value"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TableListStats_TablesByTypeEntry_DoNotUse, _impl_.value_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TableListStats_TablesByTypeEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TableListStats_TablesByTypeEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(TableListStats_TablesByTypeEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(TableListStats_TablesByTypeEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\55\3\0\0\0\0\0\0"
    "api.v1alpha1.TableListStats.TablesByTypeEntry"
    "key"
  }},
};
// ===================================================================

class TableListStats::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TableListStats>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TableListStats, _impl_._has_bits_);
};

TableListStats::TableListStats(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TableListStats_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.TableListStats)
}
PROTOBUF_NDEBUG_INLINE TableListStats::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::TableListStats& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        tables_by_category_{visibility, arena, from.tables_by_category_},
        tables_by_type_{visibility, arena, from.tables_by_type_},
        most_popular_table_(arena, from.most_popular_table_) {}

TableListStats::TableListStats(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TableListStats& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TableListStats_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TableListStats* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_count_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, total_count_),
           offsetof(Impl_, returned_count_) -
               offsetof(Impl_, total_count_) +
               sizeof(Impl_::returned_count_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.TableListStats)
}
PROTOBUF_NDEBUG_INLINE TableListStats::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        tables_by_category_{visibility, arena},
        tables_by_type_{visibility, arena},
        most_popular_table_(arena) {}

inline void TableListStats::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_count_),
           0,
           offsetof(Impl_, returned_count_) -
               offsetof(Impl_, total_count_) +
               sizeof(Impl_::returned_count_));
}
TableListStats::~TableListStats() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.TableListStats)
  SharedDtor(*this);
}
inline void TableListStats::SharedDtor(MessageLite& self) {
  TableListStats& this_ = static_cast<TableListStats&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.most_popular_table_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TableListStats::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TableListStats(arena);
}
constexpr auto TableListStats::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TableListStats, _impl_.tables_by_category_) +
          decltype(TableListStats::_impl_.tables_by_category_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TableListStats, _impl_.tables_by_category_) +
          decltype(TableListStats::_impl_.tables_by_category_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TableListStats, _impl_.tables_by_type_) +
          decltype(TableListStats::_impl_.tables_by_type_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TableListStats, _impl_.tables_by_type_) +
          decltype(TableListStats::_impl_.tables_by_type_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(TableListStats), alignof(TableListStats), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TableListStats::PlacementNew_,
                                 sizeof(TableListStats),
                                 alignof(TableListStats));
  }
}
constexpr auto TableListStats::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TableListStats_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TableListStats::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TableListStats>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TableListStats::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TableListStats>(), &TableListStats::ByteSizeLong,
              &TableListStats::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TableListStats, _impl_._cached_size_),
          false,
      },
      &TableListStats::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TableListStats_class_data_ =
        TableListStats::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TableListStats::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TableListStats_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TableListStats_class_data_.tc_table);
  return TableListStats_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 86, 2>
TableListStats::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TableListStats, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TableListStats_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::TableListStats>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 total_count = 1 [json_name = "totalCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TableListStats, _impl_.total_count_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(TableListStats, _impl_.total_count_)}},
    // int32 returned_count = 2 [json_name = "returnedCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TableListStats, _impl_.returned_count_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(TableListStats, _impl_.returned_count_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // string most_popular_table = 5 [json_name = "mostPopularTable"];
    {::_pbi::TcParser::FastUS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(TableListStats, _impl_.most_popular_table_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 total_count = 1 [json_name = "totalCount"];
    {PROTOBUF_FIELD_OFFSET(TableListStats, _impl_.total_count_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 returned_count = 2 [json_name = "returnedCount"];
    {PROTOBUF_FIELD_OFFSET(TableListStats, _impl_.returned_count_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // map<string, int32> tables_by_category = 3 [json_name = "tablesByCategory"];
    {PROTOBUF_FIELD_OFFSET(TableListStats, _impl_.tables_by_category_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, int32> tables_by_type = 4 [json_name = "tablesByType"];
    {PROTOBUF_FIELD_OFFSET(TableListStats, _impl_.tables_by_type_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string most_popular_table = 5 [json_name = "mostPopularTable"];
    {PROTOBUF_FIELD_OFFSET(TableListStats, _impl_.most_popular_table_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 5,
                                       0)},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 5,
                                       0)},
  }},
  {{
    "\33\0\0\22\16\22\0\0"
    "api.v1alpha1.TableListStats"
    "tables_by_category"
    "tables_by_type"
    "most_popular_table"
  }},
};
PROTOBUF_NOINLINE void TableListStats::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.TableListStats)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tables_by_category_.Clear();
  _impl_.tables_by_type_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.most_popular_table_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x00000006U) != 0) {
    ::memset(&_impl_.total_count_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.returned_count_) -
        reinterpret_cast<char*>(&_impl_.total_count_)) + sizeof(_impl_.returned_count_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TableListStats::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TableListStats& this_ = static_cast<const TableListStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TableListStats::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TableListStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.TableListStats)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 total_count = 1 [json_name = "totalCount"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_total_count() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_total_count(), target);
    }
  }

  // int32 returned_count = 2 [json_name = "returnedCount"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_returned_count() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_returned_count(), target);
    }
  }

  // map<string, int32> tables_by_category = 3 [json_name = "tablesByCategory"];
  if (!this_._internal_tables_by_category().empty()) {
    using MapType = ::google::protobuf::Map<::std::string, ::int32_t>;
    using WireHelper = _pbi::MapEntryFuncs<::std::string, ::int32_t,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_INT32>;
    const auto& field = this_._internal_tables_by_category();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TableListStats.tables_by_category");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TableListStats.tables_by_category");
      }
    }
  }

  // map<string, int32> tables_by_type = 4 [json_name = "tablesByType"];
  if (!this_._internal_tables_by_type().empty()) {
    using MapType = ::google::protobuf::Map<::std::string, ::int32_t>;
    using WireHelper = _pbi::MapEntryFuncs<::std::string, ::int32_t,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_INT32>;
    const auto& field = this_._internal_tables_by_type();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TableListStats.tables_by_type");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TableListStats.tables_by_type");
      }
    }
  }

  // string most_popular_table = 5 [json_name = "mostPopularTable"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_most_popular_table().empty()) {
      const ::std::string& _s = this_._internal_most_popular_table();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TableListStats.most_popular_table");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.TableListStats)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TableListStats::ByteSizeLong(const MessageLite& base) {
  const TableListStats& this_ = static_cast<const TableListStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TableListStats::ByteSizeLong() const {
  const TableListStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.TableListStats)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, int32> tables_by_category = 3 [json_name = "tablesByCategory"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_tables_by_category_size());
      for (const auto& entry : this_._internal_tables_by_category()) {
        total_size += _pbi::MapEntryFuncs<::std::string, ::int32_t,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_INT32>::ByteSizeLong(entry.first, entry.second);
      }
    }
    // map<string, int32> tables_by_type = 4 [json_name = "tablesByType"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_tables_by_type_size());
      for (const auto& entry : this_._internal_tables_by_type()) {
        total_size += _pbi::MapEntryFuncs<::std::string, ::int32_t,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_INT32>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string most_popular_table = 5 [json_name = "mostPopularTable"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_most_popular_table().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_most_popular_table());
      }
    }
    // int32 total_count = 1 [json_name = "totalCount"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_total_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_total_count());
      }
    }
    // int32 returned_count = 2 [json_name = "returnedCount"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_returned_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_returned_count());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TableListStats::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TableListStats*>(&to_msg);
  auto& from = static_cast<const TableListStats&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.TableListStats)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.tables_by_category_.MergeFrom(from._impl_.tables_by_category_);
  _this->_impl_.tables_by_type_.MergeFrom(from._impl_.tables_by_type_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_most_popular_table().empty()) {
        _this->_internal_set_most_popular_table(from._internal_most_popular_table());
      } else {
        if (_this->_impl_.most_popular_table_.IsDefault()) {
          _this->_internal_set_most_popular_table("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_total_count() != 0) {
        _this->_impl_.total_count_ = from._impl_.total_count_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_returned_count() != 0) {
        _this->_impl_.returned_count_ = from._impl_.returned_count_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TableListStats::CopyFrom(const TableListStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.TableListStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TableListStats::InternalSwap(TableListStats* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.tables_by_category_.InternalSwap(&other->_impl_.tables_by_category_);
  _impl_.tables_by_type_.InternalSwap(&other->_impl_.tables_by_type_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.most_popular_table_, &other->_impl_.most_popular_table_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TableListStats, _impl_.returned_count_)
      + sizeof(TableListStats::_impl_.returned_count_)
      - PROTOBUF_FIELD_OFFSET(TableListStats, _impl_.total_count_)>(
          reinterpret_cast<char*>(&_impl_.total_count_),
          reinterpret_cast<char*>(&other->_impl_.total_count_));
}

::google::protobuf::Metadata TableListStats::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
RollOnTableRequest_ParametersEntry_DoNotUse::RollOnTableRequest_ParametersEntry_DoNotUse()
    : SuperType(RollOnTableRequest_ParametersEntry_DoNotUse_class_data_.base()) {}
RollOnTableRequest_ParametersEntry_DoNotUse::RollOnTableRequest_ParametersEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, RollOnTableRequest_ParametersEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
RollOnTableRequest_ParametersEntry_DoNotUse::RollOnTableRequest_ParametersEntry_DoNotUse() : SuperType() {}
RollOnTableRequest_ParametersEntry_DoNotUse::RollOnTableRequest_ParametersEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL RollOnTableRequest_ParametersEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RollOnTableRequest_ParametersEntry_DoNotUse(arena);
}
constexpr auto RollOnTableRequest_ParametersEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RollOnTableRequest_ParametersEntry_DoNotUse),
                                            alignof(RollOnTableRequest_ParametersEntry_DoNotUse));
}
constexpr auto RollOnTableRequest_ParametersEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RollOnTableRequest_ParametersEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RollOnTableRequest_ParametersEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RollOnTableRequest_ParametersEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RollOnTableRequest_ParametersEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&RollOnTableRequest_ParametersEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RollOnTableRequest_ParametersEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &RollOnTableRequest_ParametersEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RollOnTableRequest_ParametersEntry_DoNotUse_class_data_ =
        RollOnTableRequest_ParametersEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RollOnTableRequest_ParametersEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RollOnTableRequest_ParametersEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RollOnTableRequest_ParametersEntry_DoNotUse_class_data_.tc_table);
  return RollOnTableRequest_ParametersEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 64, 2>
RollOnTableRequest_ParametersEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RollOnTableRequest_ParametersEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RollOnTableRequest_ParametersEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::RollOnTableRequest_ParametersEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(RollOnTableRequest_ParametersEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RollOnTableRequest_ParametersEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(RollOnTableRequest_ParametersEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(RollOnTableRequest_ParametersEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\57\3\5\0\0\0\0\0"
    "api.v1alpha1.RollOnTableRequest.ParametersEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class RollOnTableRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RollOnTableRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RollOnTableRequest, _impl_._has_bits_);
};

RollOnTableRequest::RollOnTableRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RollOnTableRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.RollOnTableRequest)
}
PROTOBUF_NDEBUG_INLINE RollOnTableRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::RollOnTableRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        parameters_{visibility, arena, from.parameters_},
        table_id_(arena, from.table_id_) {}

RollOnTableRequest::RollOnTableRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RollOnTableRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RollOnTableRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RollOnTableRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.options_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_)
                : nullptr;
  _impl_.roll_count_ = from._impl_.roll_count_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.RollOnTableRequest)
}
PROTOBUF_NDEBUG_INLINE RollOnTableRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        parameters_{visibility, arena},
        table_id_(arena) {}

inline void RollOnTableRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, options_),
           0,
           offsetof(Impl_, roll_count_) -
               offsetof(Impl_, options_) +
               sizeof(Impl_::roll_count_));
}
RollOnTableRequest::~RollOnTableRequest() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.RollOnTableRequest)
  SharedDtor(*this);
}
inline void RollOnTableRequest::SharedDtor(MessageLite& self) {
  RollOnTableRequest& this_ = static_cast<RollOnTableRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.table_id_.Destroy();
  delete this_._impl_.options_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RollOnTableRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RollOnTableRequest(arena);
}
constexpr auto RollOnTableRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RollOnTableRequest, _impl_.parameters_) +
          decltype(RollOnTableRequest::_impl_.parameters_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RollOnTableRequest, _impl_.parameters_) +
          decltype(RollOnTableRequest::_impl_.parameters_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RollOnTableRequest), alignof(RollOnTableRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RollOnTableRequest::PlacementNew_,
                                 sizeof(RollOnTableRequest),
                                 alignof(RollOnTableRequest));
  }
}
constexpr auto RollOnTableRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RollOnTableRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RollOnTableRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RollOnTableRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RollOnTableRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RollOnTableRequest>(), &RollOnTableRequest::ByteSizeLong,
              &RollOnTableRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RollOnTableRequest, _impl_._cached_size_),
          false,
      },
      &RollOnTableRequest::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RollOnTableRequest_class_data_ =
        RollOnTableRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RollOnTableRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RollOnTableRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RollOnTableRequest_class_data_.tc_table);
  return RollOnTableRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 58, 2>
RollOnTableRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RollOnTableRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RollOnTableRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::RollOnTableRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .api.v1alpha1.RollOptions options = 4 [json_name = "options"];
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(RollOnTableRequest, _impl_.options_)}},
    // string table_id = 1 [json_name = "tableId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RollOnTableRequest, _impl_.table_id_)}},
    // int32 roll_count = 2 [json_name = "rollCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RollOnTableRequest, _impl_.roll_count_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(RollOnTableRequest, _impl_.roll_count_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string table_id = 1 [json_name = "tableId"];
    {PROTOBUF_FIELD_OFFSET(RollOnTableRequest, _impl_.table_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 roll_count = 2 [json_name = "rollCount"];
    {PROTOBUF_FIELD_OFFSET(RollOnTableRequest, _impl_.roll_count_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // map<string, string> parameters = 3 [json_name = "parameters"];
    {PROTOBUF_FIELD_OFFSET(RollOnTableRequest, _impl_.parameters_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // .api.v1alpha1.RollOptions options = 4 [json_name = "options"];
    {PROTOBUF_FIELD_OFFSET(RollOnTableRequest, _impl_.options_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RollOptions>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\37\10\0\12\0\0\0\0"
    "api.v1alpha1.RollOnTableRequest"
    "table_id"
    "parameters"
  }},
};
PROTOBUF_NOINLINE void RollOnTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.RollOnTableRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parameters_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.table_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.options_ != nullptr);
      _impl_.options_->Clear();
    }
  }
  _impl_.roll_count_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RollOnTableRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RollOnTableRequest& this_ = static_cast<const RollOnTableRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RollOnTableRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RollOnTableRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.RollOnTableRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string table_id = 1 [json_name = "tableId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_table_id().empty()) {
      const ::std::string& _s = this_._internal_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RollOnTableRequest.table_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // int32 roll_count = 2 [json_name = "rollCount"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_roll_count() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_roll_count(), target);
    }
  }

  // map<string, string> parameters = 3 [json_name = "parameters"];
  if (!this_._internal_parameters().empty()) {
    using MapType = ::google::protobuf::Map<::std::string, ::std::string>;
    using WireHelper = _pbi::MapEntryFuncs<::std::string, ::std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_parameters();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RollOnTableRequest.parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RollOnTableRequest.parameters");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RollOnTableRequest.parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RollOnTableRequest.parameters");
      }
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.RollOptions options = 4 [json_name = "options"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.options_, this_._impl_.options_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.RollOnTableRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RollOnTableRequest::ByteSizeLong(const MessageLite& base) {
  const RollOnTableRequest& this_ = static_cast<const RollOnTableRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RollOnTableRequest::ByteSizeLong() const {
  const RollOnTableRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.RollOnTableRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, string> parameters = 3 [json_name = "parameters"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_parameters_size());
      for (const auto& entry : this_._internal_parameters()) {
        total_size += _pbi::MapEntryFuncs<::std::string, ::std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string table_id = 1 [json_name = "tableId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_table_id());
      }
    }
    // .api.v1alpha1.RollOptions options = 4 [json_name = "options"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.options_);
    }
    // int32 roll_count = 2 [json_name = "rollCount"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_roll_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_roll_count());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RollOnTableRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RollOnTableRequest*>(&to_msg);
  auto& from = static_cast<const RollOnTableRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.RollOnTableRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_table_id().empty()) {
        _this->_internal_set_table_id(from._internal_table_id());
      } else {
        if (_this->_impl_.table_id_.IsDefault()) {
          _this->_internal_set_table_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.options_ != nullptr);
      if (_this->_impl_.options_ == nullptr) {
        _this->_impl_.options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_);
      } else {
        _this->_impl_.options_->MergeFrom(*from._impl_.options_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_roll_count() != 0) {
        _this->_impl_.roll_count_ = from._impl_.roll_count_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RollOnTableRequest::CopyFrom(const RollOnTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.RollOnTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RollOnTableRequest::InternalSwap(RollOnTableRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.parameters_.InternalSwap(&other->_impl_.parameters_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.table_id_, &other->_impl_.table_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RollOnTableRequest, _impl_.roll_count_)
      + sizeof(RollOnTableRequest::_impl_.roll_count_)
      - PROTOBUF_FIELD_OFFSET(RollOnTableRequest, _impl_.options_)>(
          reinterpret_cast<char*>(&_impl_.options_),
          reinterpret_cast<char*>(&other->_impl_.options_));
}

::google::protobuf::Metadata RollOnTableRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RollOptions::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RollOptions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RollOptions, _impl_._has_bits_);
};

RollOptions::RollOptions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RollOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.RollOptions)
}
PROTOBUF_NDEBUG_INLINE RollOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::RollOptions& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        modifiers_{visibility, arena, from.modifiers_},
        seed_(arena, from.seed_) {}

RollOptions::RollOptions(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RollOptions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RollOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RollOptions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, show_roll_details_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, show_roll_details_),
           offsetof(Impl_, max_results_) -
               offsetof(Impl_, show_roll_details_) +
               sizeof(Impl_::max_results_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.RollOptions)
}
PROTOBUF_NDEBUG_INLINE RollOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        modifiers_{visibility, arena},
        seed_(arena) {}

inline void RollOptions::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, show_roll_details_),
           0,
           offsetof(Impl_, max_results_) -
               offsetof(Impl_, show_roll_details_) +
               sizeof(Impl_::max_results_));
}
RollOptions::~RollOptions() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.RollOptions)
  SharedDtor(*this);
}
inline void RollOptions::SharedDtor(MessageLite& self) {
  RollOptions& this_ = static_cast<RollOptions&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.seed_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RollOptions::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RollOptions(arena);
}
constexpr auto RollOptions::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RollOptions, _impl_.modifiers_) +
          decltype(RollOptions::_impl_.modifiers_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RollOptions), alignof(RollOptions), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RollOptions::PlacementNew_,
                                 sizeof(RollOptions),
                                 alignof(RollOptions));
  }
}
constexpr auto RollOptions::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RollOptions_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RollOptions::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RollOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RollOptions::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RollOptions>(), &RollOptions::ByteSizeLong,
              &RollOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RollOptions, _impl_._cached_size_),
          false,
      },
      &RollOptions::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RollOptions_class_data_ =
        RollOptions::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RollOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RollOptions_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RollOptions_class_data_.tc_table);
  return RollOptions_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 37, 2>
RollOptions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RollOptions, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RollOptions_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::RollOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string seed = 1 [json_name = "seed"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RollOptions, _impl_.seed_)}},
    // repeated .api.v1alpha1.RollModifier modifiers = 2 [json_name = "modifiers"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RollOptions, _impl_.modifiers_)}},
    // bool show_roll_details = 3 [json_name = "showRollDetails"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RollOptions, _impl_.show_roll_details_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(RollOptions, _impl_.show_roll_details_)}},
    // bool group_similar = 4 [json_name = "groupSimilar"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RollOptions, _impl_.group_similar_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(RollOptions, _impl_.group_similar_)}},
    // int32 max_results = 5 [json_name = "maxResults"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RollOptions, _impl_.max_results_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(RollOptions, _impl_.max_results_)}},
    // bool allow_rerolls = 6 [json_name = "allowRerolls"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RollOptions, _impl_.allow_rerolls_), 3>(),
     {48, 3, 0, PROTOBUF_FIELD_OFFSET(RollOptions, _impl_.allow_rerolls_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string seed = 1 [json_name = "seed"];
    {PROTOBUF_FIELD_OFFSET(RollOptions, _impl_.seed_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .api.v1alpha1.RollModifier modifiers = 2 [json_name = "modifiers"];
    {PROTOBUF_FIELD_OFFSET(RollOptions, _impl_.modifiers_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool show_roll_details = 3 [json_name = "showRollDetails"];
    {PROTOBUF_FIELD_OFFSET(RollOptions, _impl_.show_roll_details_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool group_similar = 4 [json_name = "groupSimilar"];
    {PROTOBUF_FIELD_OFFSET(RollOptions, _impl_.group_similar_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // int32 max_results = 5 [json_name = "maxResults"];
    {PROTOBUF_FIELD_OFFSET(RollOptions, _impl_.max_results_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // bool allow_rerolls = 6 [json_name = "allowRerolls"];
    {PROTOBUF_FIELD_OFFSET(RollOptions, _impl_.allow_rerolls_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RollModifier>()},
  }},
  {{
    "\30\4\0\0\0\0\0\0"
    "api.v1alpha1.RollOptions"
    "seed"
  }},
};
PROTOBUF_NOINLINE void RollOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.RollOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.modifiers_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.seed_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x0000001eU) != 0) {
    ::memset(&_impl_.show_roll_details_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.max_results_) -
        reinterpret_cast<char*>(&_impl_.show_roll_details_)) + sizeof(_impl_.max_results_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RollOptions::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RollOptions& this_ = static_cast<const RollOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RollOptions::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RollOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.RollOptions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string seed = 1 [json_name = "seed"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_seed().empty()) {
      const ::std::string& _s = this_._internal_seed();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RollOptions.seed");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // repeated .api.v1alpha1.RollModifier modifiers = 2 [json_name = "modifiers"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_modifiers_size());
       i < n; i++) {
    const auto& repfield = this_._internal_modifiers().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // bool show_roll_details = 3 [json_name = "showRollDetails"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_show_roll_details() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_show_roll_details(), target);
    }
  }

  // bool group_similar = 4 [json_name = "groupSimilar"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_group_similar() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_group_similar(), target);
    }
  }

  // int32 max_results = 5 [json_name = "maxResults"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_max_results() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
              stream, this_._internal_max_results(), target);
    }
  }

  // bool allow_rerolls = 6 [json_name = "allowRerolls"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_allow_rerolls() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          6, this_._internal_allow_rerolls(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.RollOptions)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RollOptions::ByteSizeLong(const MessageLite& base) {
  const RollOptions& this_ = static_cast<const RollOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RollOptions::ByteSizeLong() const {
  const RollOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.RollOptions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.RollModifier modifiers = 2 [json_name = "modifiers"];
    {
      total_size += 1UL * this_._internal_modifiers_size();
      for (const auto& msg : this_._internal_modifiers()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // string seed = 1 [json_name = "seed"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_seed().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_seed());
      }
    }
    // bool show_roll_details = 3 [json_name = "showRollDetails"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_show_roll_details() != 0) {
        total_size += 2;
      }
    }
    // bool group_similar = 4 [json_name = "groupSimilar"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_group_similar() != 0) {
        total_size += 2;
      }
    }
    // bool allow_rerolls = 6 [json_name = "allowRerolls"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_allow_rerolls() != 0) {
        total_size += 2;
      }
    }
    // int32 max_results = 5 [json_name = "maxResults"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_max_results() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_max_results());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RollOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RollOptions*>(&to_msg);
  auto& from = static_cast<const RollOptions&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.RollOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_modifiers()->MergeFrom(
      from._internal_modifiers());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_seed().empty()) {
        _this->_internal_set_seed(from._internal_seed());
      } else {
        if (_this->_impl_.seed_.IsDefault()) {
          _this->_internal_set_seed("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_show_roll_details() != 0) {
        _this->_impl_.show_roll_details_ = from._impl_.show_roll_details_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_group_similar() != 0) {
        _this->_impl_.group_similar_ = from._impl_.group_similar_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_allow_rerolls() != 0) {
        _this->_impl_.allow_rerolls_ = from._impl_.allow_rerolls_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_max_results() != 0) {
        _this->_impl_.max_results_ = from._impl_.max_results_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RollOptions::CopyFrom(const RollOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.RollOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RollOptions::InternalSwap(RollOptions* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.modifiers_.InternalSwap(&other->_impl_.modifiers_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.seed_, &other->_impl_.seed_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RollOptions, _impl_.max_results_)
      + sizeof(RollOptions::_impl_.max_results_)
      - PROTOBUF_FIELD_OFFSET(RollOptions, _impl_.show_roll_details_)>(
          reinterpret_cast<char*>(&_impl_.show_roll_details_),
          reinterpret_cast<char*>(&other->_impl_.show_roll_details_));
}

::google::protobuf::Metadata RollOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RollOnTableResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RollOnTableResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RollOnTableResponse, _impl_._has_bits_);
};

RollOnTableResponse::RollOnTableResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RollOnTableResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.RollOnTableResponse)
}
PROTOBUF_NDEBUG_INLINE RollOnTableResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::RollOnTableResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        results_{visibility, arena, from.results_},
        table_id_(arena, from.table_id_) {}

RollOnTableResponse::RollOnTableResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RollOnTableResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RollOnTableResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RollOnTableResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.roll_stats_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.roll_stats_)
                : nullptr;
  _impl_.session_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.session_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.RollOnTableResponse)
}
PROTOBUF_NDEBUG_INLINE RollOnTableResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        results_{visibility, arena},
        table_id_(arena) {}

inline void RollOnTableResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, roll_stats_),
           0,
           offsetof(Impl_, session_) -
               offsetof(Impl_, roll_stats_) +
               sizeof(Impl_::session_));
}
RollOnTableResponse::~RollOnTableResponse() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.RollOnTableResponse)
  SharedDtor(*this);
}
inline void RollOnTableResponse::SharedDtor(MessageLite& self) {
  RollOnTableResponse& this_ = static_cast<RollOnTableResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.table_id_.Destroy();
  delete this_._impl_.roll_stats_;
  delete this_._impl_.session_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RollOnTableResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RollOnTableResponse(arena);
}
constexpr auto RollOnTableResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RollOnTableResponse, _impl_.results_) +
          decltype(RollOnTableResponse::_impl_.results_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RollOnTableResponse), alignof(RollOnTableResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RollOnTableResponse::PlacementNew_,
                                 sizeof(RollOnTableResponse),
                                 alignof(RollOnTableResponse));
  }
}
constexpr auto RollOnTableResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RollOnTableResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RollOnTableResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RollOnTableResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RollOnTableResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RollOnTableResponse>(), &RollOnTableResponse::ByteSizeLong,
              &RollOnTableResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RollOnTableResponse, _impl_._cached_size_),
          false,
      },
      &RollOnTableResponse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RollOnTableResponse_class_data_ =
        RollOnTableResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RollOnTableResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RollOnTableResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RollOnTableResponse_class_data_.tc_table);
  return RollOnTableResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 3, 49, 2>
RollOnTableResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RollOnTableResponse, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RollOnTableResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::RollOnTableResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .api.v1alpha1.RollSession session = 4 [json_name = "session"];
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 2, PROTOBUF_FIELD_OFFSET(RollOnTableResponse, _impl_.session_)}},
    // repeated .api.v1alpha1.RollResult results = 1 [json_name = "results"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RollOnTableResponse, _impl_.results_)}},
    // .api.v1alpha1.RollStats roll_stats = 2 [json_name = "rollStats"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(RollOnTableResponse, _impl_.roll_stats_)}},
    // string table_id = 3 [json_name = "tableId"];
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(RollOnTableResponse, _impl_.table_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .api.v1alpha1.RollResult results = 1 [json_name = "results"];
    {PROTOBUF_FIELD_OFFSET(RollOnTableResponse, _impl_.results_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.RollStats roll_stats = 2 [json_name = "rollStats"];
    {PROTOBUF_FIELD_OFFSET(RollOnTableResponse, _impl_.roll_stats_), _Internal::kHasBitsOffset + 1, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string table_id = 3 [json_name = "tableId"];
    {PROTOBUF_FIELD_OFFSET(RollOnTableResponse, _impl_.table_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.RollSession session = 4 [json_name = "session"];
    {PROTOBUF_FIELD_OFFSET(RollOnTableResponse, _impl_.session_), _Internal::kHasBitsOffset + 2, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RollResult>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RollStats>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RollSession>()},
  }},
  {{
    "\40\0\0\10\0\0\0\0"
    "api.v1alpha1.RollOnTableResponse"
    "table_id"
  }},
};
PROTOBUF_NOINLINE void RollOnTableResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.RollOnTableResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.results_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.table_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.roll_stats_ != nullptr);
      _impl_.roll_stats_->Clear();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.session_ != nullptr);
      _impl_.session_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RollOnTableResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RollOnTableResponse& this_ = static_cast<const RollOnTableResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RollOnTableResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RollOnTableResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.RollOnTableResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .api.v1alpha1.RollResult results = 1 [json_name = "results"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_results_size());
       i < n; i++) {
    const auto& repfield = this_._internal_results().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.RollStats roll_stats = 2 [json_name = "rollStats"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.roll_stats_, this_._impl_.roll_stats_->GetCachedSize(), target,
        stream);
  }

  // string table_id = 3 [json_name = "tableId"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!this_._internal_table_id().empty()) {
      const ::std::string& _s = this_._internal_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RollOnTableResponse.table_id");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // .api.v1alpha1.RollSession session = 4 [json_name = "session"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.session_, this_._impl_.session_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.RollOnTableResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RollOnTableResponse::ByteSizeLong(const MessageLite& base) {
  const RollOnTableResponse& this_ = static_cast<const RollOnTableResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RollOnTableResponse::ByteSizeLong() const {
  const RollOnTableResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.RollOnTableResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.RollResult results = 1 [json_name = "results"];
    {
      total_size += 1UL * this_._internal_results_size();
      for (const auto& msg : this_._internal_results()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string table_id = 3 [json_name = "tableId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_table_id());
      }
    }
    // .api.v1alpha1.RollStats roll_stats = 2 [json_name = "rollStats"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.roll_stats_);
    }
    // .api.v1alpha1.RollSession session = 4 [json_name = "session"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.session_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RollOnTableResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RollOnTableResponse*>(&to_msg);
  auto& from = static_cast<const RollOnTableResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.RollOnTableResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_results()->MergeFrom(
      from._internal_results());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_table_id().empty()) {
        _this->_internal_set_table_id(from._internal_table_id());
      } else {
        if (_this->_impl_.table_id_.IsDefault()) {
          _this->_internal_set_table_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.roll_stats_ != nullptr);
      if (_this->_impl_.roll_stats_ == nullptr) {
        _this->_impl_.roll_stats_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.roll_stats_);
      } else {
        _this->_impl_.roll_stats_->MergeFrom(*from._impl_.roll_stats_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.session_ != nullptr);
      if (_this->_impl_.session_ == nullptr) {
        _this->_impl_.session_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.session_);
      } else {
        _this->_impl_.session_->MergeFrom(*from._impl_.session_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RollOnTableResponse::CopyFrom(const RollOnTableResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.RollOnTableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RollOnTableResponse::InternalSwap(RollOnTableResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.results_.InternalSwap(&other->_impl_.results_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.table_id_, &other->_impl_.table_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RollOnTableResponse, _impl_.session_)
      + sizeof(RollOnTableResponse::_impl_.session_)
      - PROTOBUF_FIELD_OFFSET(RollOnTableResponse, _impl_.roll_stats_)>(
          reinterpret_cast<char*>(&_impl_.roll_stats_),
          reinterpret_cast<char*>(&other->_impl_.roll_stats_));
}

::google::protobuf::Metadata RollOnTableResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RollResult::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RollResult>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RollResult, _impl_._has_bits_);
};

RollResult::RollResult(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RollResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.RollResult)
}
PROTOBUF_NDEBUG_INLINE RollResult::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::RollResult& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        result_id_(arena, from.result_id_),
        modification_reason_(arena, from.modification_reason_) {}

RollResult::RollResult(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RollResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RollResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RollResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.selected_entry_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.selected_entry_)
                : nullptr;
  _impl_.result_data_ = ((cached_has_bits & 0x00000008U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.result_data_)
                : nullptr;
  _impl_.roll_details_ = ((cached_has_bits & 0x00000010U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.roll_details_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, roll_value_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, roll_value_),
           offsetof(Impl_, was_modified_) -
               offsetof(Impl_, roll_value_) +
               sizeof(Impl_::was_modified_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.RollResult)
}
PROTOBUF_NDEBUG_INLINE RollResult::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        result_id_(arena),
        modification_reason_(arena) {}

inline void RollResult::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, selected_entry_),
           0,
           offsetof(Impl_, was_modified_) -
               offsetof(Impl_, selected_entry_) +
               sizeof(Impl_::was_modified_));
}
RollResult::~RollResult() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.RollResult)
  SharedDtor(*this);
}
inline void RollResult::SharedDtor(MessageLite& self) {
  RollResult& this_ = static_cast<RollResult&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.result_id_.Destroy();
  this_._impl_.modification_reason_.Destroy();
  delete this_._impl_.selected_entry_;
  delete this_._impl_.result_data_;
  delete this_._impl_.roll_details_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RollResult::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RollResult(arena);
}
constexpr auto RollResult::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RollResult),
                                            alignof(RollResult));
}
constexpr auto RollResult::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RollResult_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RollResult::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RollResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RollResult::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RollResult>(), &RollResult::ByteSizeLong,
              &RollResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RollResult, _impl_._cached_size_),
          false,
      },
      &RollResult::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RollResult_class_data_ =
        RollResult::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RollResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RollResult_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RollResult_class_data_.tc_table);
  return RollResult_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 3, 60, 2>
RollResult::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RollResult, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RollResult_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::RollResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string result_id = 1 [json_name = "resultId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RollResult, _impl_.result_id_)}},
    // .api.v1alpha1.TableEntry selected_entry = 2 [json_name = "selectedEntry"];
    {::_pbi::TcParser::FastMtS1,
     {18, 2, 0, PROTOBUF_FIELD_OFFSET(RollResult, _impl_.selected_entry_)}},
    // int32 roll_value = 3 [json_name = "rollValue"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RollResult, _impl_.roll_value_), 5>(),
     {24, 5, 0, PROTOBUF_FIELD_OFFSET(RollResult, _impl_.roll_value_)}},
    // .api.v1alpha1.TableEntryResult result_data = 4 [json_name = "resultData"];
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 1, PROTOBUF_FIELD_OFFSET(RollResult, _impl_.result_data_)}},
    // .api.v1alpha1.RollDetails roll_details = 5 [json_name = "rollDetails"];
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 2, PROTOBUF_FIELD_OFFSET(RollResult, _impl_.roll_details_)}},
    // bool was_modified = 6 [json_name = "wasModified"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RollResult, _impl_.was_modified_), 6>(),
     {48, 6, 0, PROTOBUF_FIELD_OFFSET(RollResult, _impl_.was_modified_)}},
    // string modification_reason = 7 [json_name = "modificationReason"];
    {::_pbi::TcParser::FastUS1,
     {58, 1, 0, PROTOBUF_FIELD_OFFSET(RollResult, _impl_.modification_reason_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string result_id = 1 [json_name = "resultId"];
    {PROTOBUF_FIELD_OFFSET(RollResult, _impl_.result_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.TableEntry selected_entry = 2 [json_name = "selectedEntry"];
    {PROTOBUF_FIELD_OFFSET(RollResult, _impl_.selected_entry_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 roll_value = 3 [json_name = "rollValue"];
    {PROTOBUF_FIELD_OFFSET(RollResult, _impl_.roll_value_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .api.v1alpha1.TableEntryResult result_data = 4 [json_name = "resultData"];
    {PROTOBUF_FIELD_OFFSET(RollResult, _impl_.result_data_), _Internal::kHasBitsOffset + 3, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.RollDetails roll_details = 5 [json_name = "rollDetails"];
    {PROTOBUF_FIELD_OFFSET(RollResult, _impl_.roll_details_), _Internal::kHasBitsOffset + 4, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool was_modified = 6 [json_name = "wasModified"];
    {PROTOBUF_FIELD_OFFSET(RollResult, _impl_.was_modified_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string modification_reason = 7 [json_name = "modificationReason"];
    {PROTOBUF_FIELD_OFFSET(RollResult, _impl_.modification_reason_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::TableEntry>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::TableEntryResult>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RollDetails>()},
  }},
  {{
    "\27\11\0\0\0\0\0\23"
    "api.v1alpha1.RollResult"
    "result_id"
    "modification_reason"
  }},
};
PROTOBUF_NOINLINE void RollResult::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.RollResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.result_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.modification_reason_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.selected_entry_ != nullptr);
      _impl_.selected_entry_->Clear();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(_impl_.result_data_ != nullptr);
      _impl_.result_data_->Clear();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(_impl_.roll_details_ != nullptr);
      _impl_.roll_details_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000060U) != 0) {
    ::memset(&_impl_.roll_value_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.was_modified_) -
        reinterpret_cast<char*>(&_impl_.roll_value_)) + sizeof(_impl_.was_modified_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RollResult::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RollResult& this_ = static_cast<const RollResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RollResult::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RollResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.RollResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string result_id = 1 [json_name = "resultId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_result_id().empty()) {
      const ::std::string& _s = this_._internal_result_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RollResult.result_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.TableEntry selected_entry = 2 [json_name = "selectedEntry"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.selected_entry_, this_._impl_.selected_entry_->GetCachedSize(), target,
        stream);
  }

  // int32 roll_value = 3 [json_name = "rollValue"];
  if ((cached_has_bits & 0x00000020U) != 0) {
    if (this_._internal_roll_value() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_roll_value(), target);
    }
  }

  // .api.v1alpha1.TableEntryResult result_data = 4 [json_name = "resultData"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.result_data_, this_._impl_.result_data_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.RollDetails roll_details = 5 [json_name = "rollDetails"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.roll_details_, this_._impl_.roll_details_->GetCachedSize(), target,
        stream);
  }

  // bool was_modified = 6 [json_name = "wasModified"];
  if ((cached_has_bits & 0x00000040U) != 0) {
    if (this_._internal_was_modified() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          6, this_._internal_was_modified(), target);
    }
  }

  // string modification_reason = 7 [json_name = "modificationReason"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    if (!this_._internal_modification_reason().empty()) {
      const ::std::string& _s = this_._internal_modification_reason();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RollResult.modification_reason");
      target = stream->WriteStringMaybeAliased(7, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.RollResult)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RollResult::ByteSizeLong(const MessageLite& base) {
  const RollResult& this_ = static_cast<const RollResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RollResult::ByteSizeLong() const {
  const RollResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.RollResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    // string result_id = 1 [json_name = "resultId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_result_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_result_id());
      }
    }
    // string modification_reason = 7 [json_name = "modificationReason"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_modification_reason().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_modification_reason());
      }
    }
    // .api.v1alpha1.TableEntry selected_entry = 2 [json_name = "selectedEntry"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.selected_entry_);
    }
    // .api.v1alpha1.TableEntryResult result_data = 4 [json_name = "resultData"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.result_data_);
    }
    // .api.v1alpha1.RollDetails roll_details = 5 [json_name = "rollDetails"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.roll_details_);
    }
    // int32 roll_value = 3 [json_name = "rollValue"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_roll_value() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_roll_value());
      }
    }
    // bool was_modified = 6 [json_name = "wasModified"];
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (this_._internal_was_modified() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RollResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RollResult*>(&to_msg);
  auto& from = static_cast<const RollResult&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.RollResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_result_id().empty()) {
        _this->_internal_set_result_id(from._internal_result_id());
      } else {
        if (_this->_impl_.result_id_.IsDefault()) {
          _this->_internal_set_result_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_modification_reason().empty()) {
        _this->_internal_set_modification_reason(from._internal_modification_reason());
      } else {
        if (_this->_impl_.modification_reason_.IsDefault()) {
          _this->_internal_set_modification_reason("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.selected_entry_ != nullptr);
      if (_this->_impl_.selected_entry_ == nullptr) {
        _this->_impl_.selected_entry_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.selected_entry_);
      } else {
        _this->_impl_.selected_entry_->MergeFrom(*from._impl_.selected_entry_);
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(from._impl_.result_data_ != nullptr);
      if (_this->_impl_.result_data_ == nullptr) {
        _this->_impl_.result_data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.result_data_);
      } else {
        _this->_impl_.result_data_->MergeFrom(*from._impl_.result_data_);
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(from._impl_.roll_details_ != nullptr);
      if (_this->_impl_.roll_details_ == nullptr) {
        _this->_impl_.roll_details_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.roll_details_);
      } else {
        _this->_impl_.roll_details_->MergeFrom(*from._impl_.roll_details_);
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_roll_value() != 0) {
        _this->_impl_.roll_value_ = from._impl_.roll_value_;
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (from._internal_was_modified() != 0) {
        _this->_impl_.was_modified_ = from._impl_.was_modified_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RollResult::CopyFrom(const RollResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.RollResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RollResult::InternalSwap(RollResult* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.result_id_, &other->_impl_.result_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.modification_reason_, &other->_impl_.modification_reason_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RollResult, _impl_.was_modified_)
      + sizeof(RollResult::_impl_.was_modified_)
      - PROTOBUF_FIELD_OFFSET(RollResult, _impl_.selected_entry_)>(
          reinterpret_cast<char*>(&_impl_.selected_entry_),
          reinterpret_cast<char*>(&other->_impl_.selected_entry_));
}

::google::protobuf::Metadata RollResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RollDetails::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RollDetails>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RollDetails, _impl_._has_bits_);
};

RollDetails::RollDetails(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RollDetails_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.RollDetails)
}
PROTOBUF_NDEBUG_INLINE RollDetails::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::RollDetails& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        dice_values_{visibility, arena, from.dice_values_},
        _dice_values_cached_byte_size_{0},
        rerolls_{visibility, arena, from.rerolls_},
        _rerolls_cached_byte_size_{0},
        dice_notation_(arena, from.dice_notation_) {}

RollDetails::RollDetails(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RollDetails& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RollDetails_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RollDetails* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_modifier_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, total_modifier_),
           offsetof(Impl_, final_roll_) -
               offsetof(Impl_, total_modifier_) +
               sizeof(Impl_::final_roll_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.RollDetails)
}
PROTOBUF_NDEBUG_INLINE RollDetails::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        dice_values_{visibility, arena},
        _dice_values_cached_byte_size_{0},
        rerolls_{visibility, arena},
        _rerolls_cached_byte_size_{0},
        dice_notation_(arena) {}

inline void RollDetails::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_modifier_),
           0,
           offsetof(Impl_, final_roll_) -
               offsetof(Impl_, total_modifier_) +
               sizeof(Impl_::final_roll_));
}
RollDetails::~RollDetails() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.RollDetails)
  SharedDtor(*this);
}
inline void RollDetails::SharedDtor(MessageLite& self) {
  RollDetails& this_ = static_cast<RollDetails&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.dice_notation_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RollDetails::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RollDetails(arena);
}
constexpr auto RollDetails::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RollDetails, _impl_.dice_values_) +
          decltype(RollDetails::_impl_.dice_values_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RollDetails, _impl_.rerolls_) +
          decltype(RollDetails::_impl_.rerolls_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RollDetails), alignof(RollDetails), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RollDetails::PlacementNew_,
                                 sizeof(RollDetails),
                                 alignof(RollDetails));
  }
}
constexpr auto RollDetails::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RollDetails_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RollDetails::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RollDetails>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RollDetails::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RollDetails>(), &RollDetails::ByteSizeLong,
              &RollDetails::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RollDetails, _impl_._cached_size_),
          false,
      },
      &RollDetails::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RollDetails_class_data_ =
        RollDetails::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RollDetails::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RollDetails_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RollDetails_class_data_.tc_table);
  return RollDetails_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 46, 2>
RollDetails::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RollDetails, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RollDetails_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::RollDetails>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated int32 dice_values = 1 [json_name = "diceValues"];
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RollDetails, _impl_.dice_values_)}},
    // int32 total_modifier = 2 [json_name = "totalModifier"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RollDetails, _impl_.total_modifier_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(RollDetails, _impl_.total_modifier_)}},
    // int32 raw_roll = 3 [json_name = "rawRoll"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RollDetails, _impl_.raw_roll_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(RollDetails, _impl_.raw_roll_)}},
    // int32 final_roll = 4 [json_name = "finalRoll"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RollDetails, _impl_.final_roll_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(RollDetails, _impl_.final_roll_)}},
    // string dice_notation = 5 [json_name = "diceNotation"];
    {::_pbi::TcParser::FastUS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(RollDetails, _impl_.dice_notation_)}},
    // repeated int32 rerolls = 6 [json_name = "rerolls"];
    {::_pbi::TcParser::FastV32P1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(RollDetails, _impl_.rerolls_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int32 dice_values = 1 [json_name = "diceValues"];
    {PROTOBUF_FIELD_OFFSET(RollDetails, _impl_.dice_values_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // int32 total_modifier = 2 [json_name = "totalModifier"];
    {PROTOBUF_FIELD_OFFSET(RollDetails, _impl_.total_modifier_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 raw_roll = 3 [json_name = "rawRoll"];
    {PROTOBUF_FIELD_OFFSET(RollDetails, _impl_.raw_roll_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 final_roll = 4 [json_name = "finalRoll"];
    {PROTOBUF_FIELD_OFFSET(RollDetails, _impl_.final_roll_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string dice_notation = 5 [json_name = "diceNotation"];
    {PROTOBUF_FIELD_OFFSET(RollDetails, _impl_.dice_notation_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated int32 rerolls = 6 [json_name = "rerolls"];
    {PROTOBUF_FIELD_OFFSET(RollDetails, _impl_.rerolls_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
  }},
  // no aux_entries
  {{
    "\30\0\0\0\0\15\0\0"
    "api.v1alpha1.RollDetails"
    "dice_notation"
  }},
};
PROTOBUF_NOINLINE void RollDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.RollDetails)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dice_values_.Clear();
  _impl_.rerolls_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.dice_notation_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x0000000eU) != 0) {
    ::memset(&_impl_.total_modifier_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.final_roll_) -
        reinterpret_cast<char*>(&_impl_.total_modifier_)) + sizeof(_impl_.final_roll_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RollDetails::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RollDetails& this_ = static_cast<const RollDetails&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RollDetails::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RollDetails& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.RollDetails)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated int32 dice_values = 1 [json_name = "diceValues"];
  {
    int byte_size = this_._impl_._dice_values_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, this_._internal_dice_values(), byte_size, target);
    }
  }

  // int32 total_modifier = 2 [json_name = "totalModifier"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_total_modifier() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_total_modifier(), target);
    }
  }

  // int32 raw_roll = 3 [json_name = "rawRoll"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_raw_roll() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_raw_roll(), target);
    }
  }

  // int32 final_roll = 4 [json_name = "finalRoll"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_final_roll() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_final_roll(), target);
    }
  }

  // string dice_notation = 5 [json_name = "diceNotation"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_dice_notation().empty()) {
      const ::std::string& _s = this_._internal_dice_notation();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RollDetails.dice_notation");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  // repeated int32 rerolls = 6 [json_name = "rerolls"];
  {
    int byte_size = this_._impl_._rerolls_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          6, this_._internal_rerolls(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.RollDetails)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RollDetails::ByteSizeLong(const MessageLite& base) {
  const RollDetails& this_ = static_cast<const RollDetails&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RollDetails::ByteSizeLong() const {
  const RollDetails& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.RollDetails)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated int32 dice_values = 1 [json_name = "diceValues"];
    {
      total_size +=
          ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
              this_._internal_dice_values(), 1,
              this_._impl_._dice_values_cached_byte_size_);
    }
    // repeated int32 rerolls = 6 [json_name = "rerolls"];
    {
      total_size +=
          ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
              this_._internal_rerolls(), 1,
              this_._impl_._rerolls_cached_byte_size_);
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string dice_notation = 5 [json_name = "diceNotation"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_dice_notation().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_dice_notation());
      }
    }
    // int32 total_modifier = 2 [json_name = "totalModifier"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_total_modifier() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_total_modifier());
      }
    }
    // int32 raw_roll = 3 [json_name = "rawRoll"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_raw_roll() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_raw_roll());
      }
    }
    // int32 final_roll = 4 [json_name = "finalRoll"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_final_roll() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_final_roll());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RollDetails::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RollDetails*>(&to_msg);
  auto& from = static_cast<const RollDetails&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.RollDetails)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_dice_values()->MergeFrom(from._internal_dice_values());
  _this->_internal_mutable_rerolls()->MergeFrom(from._internal_rerolls());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_dice_notation().empty()) {
        _this->_internal_set_dice_notation(from._internal_dice_notation());
      } else {
        if (_this->_impl_.dice_notation_.IsDefault()) {
          _this->_internal_set_dice_notation("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_total_modifier() != 0) {
        _this->_impl_.total_modifier_ = from._impl_.total_modifier_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_raw_roll() != 0) {
        _this->_impl_.raw_roll_ = from._impl_.raw_roll_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_final_roll() != 0) {
        _this->_impl_.final_roll_ = from._impl_.final_roll_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RollDetails::CopyFrom(const RollDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.RollDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RollDetails::InternalSwap(RollDetails* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.dice_values_.InternalSwap(&other->_impl_.dice_values_);
  _impl_.rerolls_.InternalSwap(&other->_impl_.rerolls_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dice_notation_, &other->_impl_.dice_notation_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RollDetails, _impl_.final_roll_)
      + sizeof(RollDetails::_impl_.final_roll_)
      - PROTOBUF_FIELD_OFFSET(RollDetails, _impl_.total_modifier_)>(
          reinterpret_cast<char*>(&_impl_.total_modifier_),
          reinterpret_cast<char*>(&other->_impl_.total_modifier_));
}

::google::protobuf::Metadata RollDetails::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RollStats::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RollStats>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RollStats, _impl_._has_bits_);
};

RollStats::RollStats(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RollStats_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.RollStats)
}
RollStats::RollStats(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RollStats& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RollStats_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE RollStats::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void RollStats::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, roll_time_ms_),
           0,
           offsetof(Impl_, lowest_roll_) -
               offsetof(Impl_, roll_time_ms_) +
               sizeof(Impl_::lowest_roll_));
}
RollStats::~RollStats() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.RollStats)
  SharedDtor(*this);
}
inline void RollStats::SharedDtor(MessageLite& self) {
  RollStats& this_ = static_cast<RollStats&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RollStats::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RollStats(arena);
}
constexpr auto RollStats::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RollStats),
                                            alignof(RollStats));
}
constexpr auto RollStats::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RollStats_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RollStats::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RollStats>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RollStats::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RollStats>(), &RollStats::ByteSizeLong,
              &RollStats::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RollStats, _impl_._cached_size_),
          false,
      },
      &RollStats::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RollStats_class_data_ =
        RollStats::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RollStats::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RollStats_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RollStats_class_data_.tc_table);
  return RollStats_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2>
RollStats::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RollStats, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RollStats_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::RollStats>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 roll_time_ms = 1 [json_name = "rollTimeMs"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RollStats, _impl_.roll_time_ms_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(RollStats, _impl_.roll_time_ms_)}},
    // int32 dice_rolled = 2 [json_name = "diceRolled"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RollStats, _impl_.dice_rolled_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(RollStats, _impl_.dice_rolled_)}},
    // int32 rerolls_made = 3 [json_name = "rerollsMade"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RollStats, _impl_.rerolls_made_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(RollStats, _impl_.rerolls_made_)}},
    // double average_roll = 4 [json_name = "averageRoll"];
    {::_pbi::TcParser::FastF64S1,
     {33, 3, 0, PROTOBUF_FIELD_OFFSET(RollStats, _impl_.average_roll_)}},
    // int32 highest_roll = 5 [json_name = "highestRoll"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RollStats, _impl_.highest_roll_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(RollStats, _impl_.highest_roll_)}},
    // int32 lowest_roll = 6 [json_name = "lowestRoll"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RollStats, _impl_.lowest_roll_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(RollStats, _impl_.lowest_roll_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 roll_time_ms = 1 [json_name = "rollTimeMs"];
    {PROTOBUF_FIELD_OFFSET(RollStats, _impl_.roll_time_ms_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int32 dice_rolled = 2 [json_name = "diceRolled"];
    {PROTOBUF_FIELD_OFFSET(RollStats, _impl_.dice_rolled_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 rerolls_made = 3 [json_name = "rerollsMade"];
    {PROTOBUF_FIELD_OFFSET(RollStats, _impl_.rerolls_made_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // double average_roll = 4 [json_name = "averageRoll"];
    {PROTOBUF_FIELD_OFFSET(RollStats, _impl_.average_roll_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // int32 highest_roll = 5 [json_name = "highestRoll"];
    {PROTOBUF_FIELD_OFFSET(RollStats, _impl_.highest_roll_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 lowest_roll = 6 [json_name = "lowestRoll"];
    {PROTOBUF_FIELD_OFFSET(RollStats, _impl_.lowest_roll_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void RollStats::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.RollStats)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    ::memset(&_impl_.roll_time_ms_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.lowest_roll_) -
        reinterpret_cast<char*>(&_impl_.roll_time_ms_)) + sizeof(_impl_.lowest_roll_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RollStats::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RollStats& this_ = static_cast<const RollStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RollStats::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RollStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.RollStats)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 roll_time_ms = 1 [json_name = "rollTimeMs"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_roll_time_ms() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_roll_time_ms(), target);
    }
  }

  // int32 dice_rolled = 2 [json_name = "diceRolled"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_dice_rolled() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_dice_rolled(), target);
    }
  }

  // int32 rerolls_made = 3 [json_name = "rerollsMade"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_rerolls_made() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_rerolls_made(), target);
    }
  }

  // double average_roll = 4 [json_name = "averageRoll"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_average_roll()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          4, this_._internal_average_roll(), target);
    }
  }

  // int32 highest_roll = 5 [json_name = "highestRoll"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_highest_roll() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
              stream, this_._internal_highest_roll(), target);
    }
  }

  // int32 lowest_roll = 6 [json_name = "lowestRoll"];
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (this_._internal_lowest_roll() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<6>(
              stream, this_._internal_lowest_roll(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.RollStats)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RollStats::ByteSizeLong(const MessageLite& base) {
  const RollStats& this_ = static_cast<const RollStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RollStats::ByteSizeLong() const {
  const RollStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.RollStats)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    // int64 roll_time_ms = 1 [json_name = "rollTimeMs"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_roll_time_ms() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_roll_time_ms());
      }
    }
    // int32 dice_rolled = 2 [json_name = "diceRolled"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_dice_rolled() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_dice_rolled());
      }
    }
    // int32 rerolls_made = 3 [json_name = "rerollsMade"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_rerolls_made() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_rerolls_made());
      }
    }
    // double average_roll = 4 [json_name = "averageRoll"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_average_roll()) != 0) {
        total_size += 9;
      }
    }
    // int32 highest_roll = 5 [json_name = "highestRoll"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_highest_roll() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_highest_roll());
      }
    }
    // int32 lowest_roll = 6 [json_name = "lowestRoll"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_lowest_roll() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_lowest_roll());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RollStats::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RollStats*>(&to_msg);
  auto& from = static_cast<const RollStats&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.RollStats)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (from._internal_roll_time_ms() != 0) {
        _this->_impl_.roll_time_ms_ = from._impl_.roll_time_ms_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_dice_rolled() != 0) {
        _this->_impl_.dice_rolled_ = from._impl_.dice_rolled_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_rerolls_made() != 0) {
        _this->_impl_.rerolls_made_ = from._impl_.rerolls_made_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_average_roll()) != 0) {
        _this->_impl_.average_roll_ = from._impl_.average_roll_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_highest_roll() != 0) {
        _this->_impl_.highest_roll_ = from._impl_.highest_roll_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_lowest_roll() != 0) {
        _this->_impl_.lowest_roll_ = from._impl_.lowest_roll_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RollStats::CopyFrom(const RollStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.RollStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RollStats::InternalSwap(RollStats* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RollStats, _impl_.lowest_roll_)
      + sizeof(RollStats::_impl_.lowest_roll_)
      - PROTOBUF_FIELD_OFFSET(RollStats, _impl_.roll_time_ms_)>(
          reinterpret_cast<char*>(&_impl_.roll_time_ms_),
          reinterpret_cast<char*>(&other->_impl_.roll_time_ms_));
}

::google::protobuf::Metadata RollStats::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
RollSession_ParametersEntry_DoNotUse::RollSession_ParametersEntry_DoNotUse()
    : SuperType(RollSession_ParametersEntry_DoNotUse_class_data_.base()) {}
RollSession_ParametersEntry_DoNotUse::RollSession_ParametersEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, RollSession_ParametersEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
RollSession_ParametersEntry_DoNotUse::RollSession_ParametersEntry_DoNotUse() : SuperType() {}
RollSession_ParametersEntry_DoNotUse::RollSession_ParametersEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL RollSession_ParametersEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RollSession_ParametersEntry_DoNotUse(arena);
}
constexpr auto RollSession_ParametersEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RollSession_ParametersEntry_DoNotUse),
                                            alignof(RollSession_ParametersEntry_DoNotUse));
}
constexpr auto RollSession_ParametersEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RollSession_ParametersEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RollSession_ParametersEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RollSession_ParametersEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RollSession_ParametersEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&RollSession_ParametersEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RollSession_ParametersEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &RollSession_ParametersEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RollSession_ParametersEntry_DoNotUse_class_data_ =
        RollSession_ParametersEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RollSession_ParametersEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RollSession_ParametersEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RollSession_ParametersEntry_DoNotUse_class_data_.tc_table);
  return RollSession_ParametersEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 57, 2>
RollSession_ParametersEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RollSession_ParametersEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RollSession_ParametersEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::RollSession_ParametersEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(RollSession_ParametersEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RollSession_ParametersEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(RollSession_ParametersEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(RollSession_ParametersEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\50\3\5\0\0\0\0\0"
    "api.v1alpha1.RollSession.ParametersEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class RollSession::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RollSession>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RollSession, _impl_._has_bits_);
};

RollSession::RollSession(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RollSession_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.RollSession)
}
PROTOBUF_NDEBUG_INLINE RollSession::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::RollSession& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        parameters_{visibility, arena, from.parameters_},
        session_id_(arena, from.session_id_) {}

RollSession::RollSession(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RollSession& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RollSession_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RollSession* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, expires_at_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, expires_at_),
           offsetof(Impl_, roll_count_) -
               offsetof(Impl_, expires_at_) +
               sizeof(Impl_::roll_count_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.RollSession)
}
PROTOBUF_NDEBUG_INLINE RollSession::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        parameters_{visibility, arena},
        session_id_(arena) {}

inline void RollSession::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, expires_at_),
           0,
           offsetof(Impl_, roll_count_) -
               offsetof(Impl_, expires_at_) +
               sizeof(Impl_::roll_count_));
}
RollSession::~RollSession() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.RollSession)
  SharedDtor(*this);
}
inline void RollSession::SharedDtor(MessageLite& self) {
  RollSession& this_ = static_cast<RollSession&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.session_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RollSession::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RollSession(arena);
}
constexpr auto RollSession::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RollSession, _impl_.parameters_) +
          decltype(RollSession::_impl_.parameters_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RollSession, _impl_.parameters_) +
          decltype(RollSession::_impl_.parameters_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RollSession), alignof(RollSession), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RollSession::PlacementNew_,
                                 sizeof(RollSession),
                                 alignof(RollSession));
  }
}
constexpr auto RollSession::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RollSession_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RollSession::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RollSession>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RollSession::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RollSession>(), &RollSession::ByteSizeLong,
              &RollSession::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RollSession, _impl_._cached_size_),
          false,
      },
      &RollSession::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RollSession_class_data_ =
        RollSession::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RollSession::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RollSession_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RollSession_class_data_.tc_table);
  return RollSession_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 53, 2>
RollSession::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RollSession, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RollSession_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::RollSession>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string session_id = 1 [json_name = "sessionId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RollSession, _impl_.session_id_)}},
    // int64 expires_at = 2 [json_name = "expiresAt"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RollSession, _impl_.expires_at_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(RollSession, _impl_.expires_at_)}},
    // int32 roll_count = 3 [json_name = "rollCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RollSession, _impl_.roll_count_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(RollSession, _impl_.roll_count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string session_id = 1 [json_name = "sessionId"];
    {PROTOBUF_FIELD_OFFSET(RollSession, _impl_.session_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 expires_at = 2 [json_name = "expiresAt"];
    {PROTOBUF_FIELD_OFFSET(RollSession, _impl_.expires_at_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int32 roll_count = 3 [json_name = "rollCount"];
    {PROTOBUF_FIELD_OFFSET(RollSession, _impl_.roll_count_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // map<string, string> parameters = 4 [json_name = "parameters"];
    {PROTOBUF_FIELD_OFFSET(RollSession, _impl_.parameters_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }},
  {{
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\30\12\0\0\12\0\0\0"
    "api.v1alpha1.RollSession"
    "session_id"
    "parameters"
  }},
};
PROTOBUF_NOINLINE void RollSession::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.RollSession)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parameters_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.session_id_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x00000006U) != 0) {
    ::memset(&_impl_.expires_at_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.roll_count_) -
        reinterpret_cast<char*>(&_impl_.expires_at_)) + sizeof(_impl_.roll_count_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RollSession::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RollSession& this_ = static_cast<const RollSession&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RollSession::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RollSession& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.RollSession)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string session_id = 1 [json_name = "sessionId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_session_id().empty()) {
      const ::std::string& _s = this_._internal_session_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RollSession.session_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // int64 expires_at = 2 [json_name = "expiresAt"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_expires_at() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
              stream, this_._internal_expires_at(), target);
    }
  }

  // int32 roll_count = 3 [json_name = "rollCount"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_roll_count() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_roll_count(), target);
    }
  }

  // map<string, string> parameters = 4 [json_name = "parameters"];
  if (!this_._internal_parameters().empty()) {
    using MapType = ::google::protobuf::Map<::std::string, ::std::string>;
    using WireHelper = _pbi::MapEntryFuncs<::std::string, ::std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_parameters();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RollSession.parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RollSession.parameters");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RollSession.parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RollSession.parameters");
      }
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.RollSession)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RollSession::ByteSizeLong(const MessageLite& base) {
  const RollSession& this_ = static_cast<const RollSession&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RollSession::ByteSizeLong() const {
  const RollSession& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.RollSession)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, string> parameters = 4 [json_name = "parameters"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_parameters_size());
      for (const auto& entry : this_._internal_parameters()) {
        total_size += _pbi::MapEntryFuncs<::std::string, ::std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string session_id = 1 [json_name = "sessionId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_session_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_session_id());
      }
    }
    // int64 expires_at = 2 [json_name = "expiresAt"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_expires_at() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_expires_at());
      }
    }
    // int32 roll_count = 3 [json_name = "rollCount"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_roll_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_roll_count());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RollSession::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RollSession*>(&to_msg);
  auto& from = static_cast<const RollSession&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.RollSession)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_session_id().empty()) {
        _this->_internal_set_session_id(from._internal_session_id());
      } else {
        if (_this->_impl_.session_id_.IsDefault()) {
          _this->_internal_set_session_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_expires_at() != 0) {
        _this->_impl_.expires_at_ = from._impl_.expires_at_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_roll_count() != 0) {
        _this->_impl_.roll_count_ = from._impl_.roll_count_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RollSession::CopyFrom(const RollSession& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.RollSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RollSession::InternalSwap(RollSession* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.parameters_.InternalSwap(&other->_impl_.parameters_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_id_, &other->_impl_.session_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RollSession, _impl_.roll_count_)
      + sizeof(RollSession::_impl_.roll_count_)
      - PROTOBUF_FIELD_OFFSET(RollSession, _impl_.expires_at_)>(
          reinterpret_cast<char*>(&_impl_.expires_at_),
          reinterpret_cast<char*>(&other->_impl_.expires_at_));
}

::google::protobuf::Metadata RollSession::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RollMultipleRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RollMultipleRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RollMultipleRequest, _impl_._has_bits_);
};

RollMultipleRequest::RollMultipleRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RollMultipleRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.RollMultipleRequest)
}
PROTOBUF_NDEBUG_INLINE RollMultipleRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::RollMultipleRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        table_rolls_{visibility, arena, from.table_rolls_} {}

RollMultipleRequest::RollMultipleRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RollMultipleRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RollMultipleRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RollMultipleRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.global_options_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.global_options_)
                : nullptr;
  _impl_.correlate_results_ = from._impl_.correlate_results_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.RollMultipleRequest)
}
PROTOBUF_NDEBUG_INLINE RollMultipleRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        table_rolls_{visibility, arena} {}

inline void RollMultipleRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, global_options_),
           0,
           offsetof(Impl_, correlate_results_) -
               offsetof(Impl_, global_options_) +
               sizeof(Impl_::correlate_results_));
}
RollMultipleRequest::~RollMultipleRequest() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.RollMultipleRequest)
  SharedDtor(*this);
}
inline void RollMultipleRequest::SharedDtor(MessageLite& self) {
  RollMultipleRequest& this_ = static_cast<RollMultipleRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.global_options_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RollMultipleRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RollMultipleRequest(arena);
}
constexpr auto RollMultipleRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RollMultipleRequest, _impl_.table_rolls_) +
          decltype(RollMultipleRequest::_impl_.table_rolls_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(RollMultipleRequest), alignof(RollMultipleRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RollMultipleRequest::PlacementNew_,
                                 sizeof(RollMultipleRequest),
                                 alignof(RollMultipleRequest));
  }
}
constexpr auto RollMultipleRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RollMultipleRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RollMultipleRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RollMultipleRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RollMultipleRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RollMultipleRequest>(), &RollMultipleRequest::ByteSizeLong,
              &RollMultipleRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RollMultipleRequest, _impl_._cached_size_),
          false,
      },
      &RollMultipleRequest::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RollMultipleRequest_class_data_ =
        RollMultipleRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RollMultipleRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RollMultipleRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RollMultipleRequest_class_data_.tc_table);
  return RollMultipleRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2>
RollMultipleRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RollMultipleRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RollMultipleRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::RollMultipleRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .api.v1alpha1.TableRollConfig table_rolls = 1 [json_name = "tableRolls"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RollMultipleRequest, _impl_.table_rolls_)}},
    // .api.v1alpha1.RollOptions global_options = 2 [json_name = "globalOptions"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(RollMultipleRequest, _impl_.global_options_)}},
    // bool correlate_results = 3 [json_name = "correlateResults"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RollMultipleRequest, _impl_.correlate_results_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(RollMultipleRequest, _impl_.correlate_results_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .api.v1alpha1.TableRollConfig table_rolls = 1 [json_name = "tableRolls"];
    {PROTOBUF_FIELD_OFFSET(RollMultipleRequest, _impl_.table_rolls_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.RollOptions global_options = 2 [json_name = "globalOptions"];
    {PROTOBUF_FIELD_OFFSET(RollMultipleRequest, _impl_.global_options_), _Internal::kHasBitsOffset + 0, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool correlate_results = 3 [json_name = "correlateResults"];
    {PROTOBUF_FIELD_OFFSET(RollMultipleRequest, _impl_.correlate_results_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::TableRollConfig>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RollOptions>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void RollMultipleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.RollMultipleRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.table_rolls_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.global_options_ != nullptr);
    _impl_.global_options_->Clear();
  }
  _impl_.correlate_results_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RollMultipleRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RollMultipleRequest& this_ = static_cast<const RollMultipleRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RollMultipleRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RollMultipleRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.RollMultipleRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .api.v1alpha1.TableRollConfig table_rolls = 1 [json_name = "tableRolls"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_table_rolls_size());
       i < n; i++) {
    const auto& repfield = this_._internal_table_rolls().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.RollOptions global_options = 2 [json_name = "globalOptions"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.global_options_, this_._impl_.global_options_->GetCachedSize(), target,
        stream);
  }

  // bool correlate_results = 3 [json_name = "correlateResults"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    if (this_._internal_correlate_results() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_correlate_results(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.RollMultipleRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RollMultipleRequest::ByteSizeLong(const MessageLite& base) {
  const RollMultipleRequest& this_ = static_cast<const RollMultipleRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RollMultipleRequest::ByteSizeLong() const {
  const RollMultipleRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.RollMultipleRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.TableRollConfig table_rolls = 1 [json_name = "tableRolls"];
    {
      total_size += 1UL * this_._internal_table_rolls_size();
      for (const auto& msg : this_._internal_table_rolls()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // .api.v1alpha1.RollOptions global_options = 2 [json_name = "globalOptions"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.global_options_);
    }
    // bool correlate_results = 3 [json_name = "correlateResults"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_correlate_results() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RollMultipleRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RollMultipleRequest*>(&to_msg);
  auto& from = static_cast<const RollMultipleRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.RollMultipleRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_table_rolls()->MergeFrom(
      from._internal_table_rolls());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.global_options_ != nullptr);
      if (_this->_impl_.global_options_ == nullptr) {
        _this->_impl_.global_options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.global_options_);
      } else {
        _this->_impl_.global_options_->MergeFrom(*from._impl_.global_options_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_correlate_results() != 0) {
        _this->_impl_.correlate_results_ = from._impl_.correlate_results_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RollMultipleRequest::CopyFrom(const RollMultipleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.RollMultipleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RollMultipleRequest::InternalSwap(RollMultipleRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.table_rolls_.InternalSwap(&other->_impl_.table_rolls_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RollMultipleRequest, _impl_.correlate_results_)
      + sizeof(RollMultipleRequest::_impl_.correlate_results_)
      - PROTOBUF_FIELD_OFFSET(RollMultipleRequest, _impl_.global_options_)>(
          reinterpret_cast<char*>(&_impl_.global_options_),
          reinterpret_cast<char*>(&other->_impl_.global_options_));
}

::google::protobuf::Metadata RollMultipleRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
TableRollConfig_ParametersEntry_DoNotUse::TableRollConfig_ParametersEntry_DoNotUse()
    : SuperType(TableRollConfig_ParametersEntry_DoNotUse_class_data_.base()) {}
TableRollConfig_ParametersEntry_DoNotUse::TableRollConfig_ParametersEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, TableRollConfig_ParametersEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
TableRollConfig_ParametersEntry_DoNotUse::TableRollConfig_ParametersEntry_DoNotUse() : SuperType() {}
TableRollConfig_ParametersEntry_DoNotUse::TableRollConfig_ParametersEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL TableRollConfig_ParametersEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TableRollConfig_ParametersEntry_DoNotUse(arena);
}
constexpr auto TableRollConfig_ParametersEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TableRollConfig_ParametersEntry_DoNotUse),
                                            alignof(TableRollConfig_ParametersEntry_DoNotUse));
}
constexpr auto TableRollConfig_ParametersEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TableRollConfig_ParametersEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TableRollConfig_ParametersEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TableRollConfig_ParametersEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TableRollConfig_ParametersEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&TableRollConfig_ParametersEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TableRollConfig_ParametersEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &TableRollConfig_ParametersEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TableRollConfig_ParametersEntry_DoNotUse_class_data_ =
        TableRollConfig_ParametersEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TableRollConfig_ParametersEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TableRollConfig_ParametersEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TableRollConfig_ParametersEntry_DoNotUse_class_data_.tc_table);
  return TableRollConfig_ParametersEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 61, 2>
TableRollConfig_ParametersEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TableRollConfig_ParametersEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TableRollConfig_ParametersEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::TableRollConfig_ParametersEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(TableRollConfig_ParametersEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TableRollConfig_ParametersEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(TableRollConfig_ParametersEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(TableRollConfig_ParametersEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\54\3\5\0\0\0\0\0"
    "api.v1alpha1.TableRollConfig.ParametersEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class TableRollConfig::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TableRollConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TableRollConfig, _impl_._has_bits_);
};

TableRollConfig::TableRollConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TableRollConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.TableRollConfig)
}
PROTOBUF_NDEBUG_INLINE TableRollConfig::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::TableRollConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        parameters_{visibility, arena, from.parameters_},
        modifiers_{visibility, arena, from.modifiers_},
        table_id_(arena, from.table_id_) {}

TableRollConfig::TableRollConfig(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TableRollConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TableRollConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TableRollConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.roll_count_ = from._impl_.roll_count_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.TableRollConfig)
}
PROTOBUF_NDEBUG_INLINE TableRollConfig::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        parameters_{visibility, arena},
        modifiers_{visibility, arena},
        table_id_(arena) {}

inline void TableRollConfig::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.roll_count_ = {};
}
TableRollConfig::~TableRollConfig() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.TableRollConfig)
  SharedDtor(*this);
}
inline void TableRollConfig::SharedDtor(MessageLite& self) {
  TableRollConfig& this_ = static_cast<TableRollConfig&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.table_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TableRollConfig::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TableRollConfig(arena);
}
constexpr auto TableRollConfig::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TableRollConfig, _impl_.parameters_) +
          decltype(TableRollConfig::_impl_.parameters_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TableRollConfig, _impl_.parameters_) +
          decltype(TableRollConfig::_impl_.parameters_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TableRollConfig, _impl_.modifiers_) +
          decltype(TableRollConfig::_impl_.modifiers_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(TableRollConfig), alignof(TableRollConfig), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TableRollConfig::PlacementNew_,
                                 sizeof(TableRollConfig),
                                 alignof(TableRollConfig));
  }
}
constexpr auto TableRollConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TableRollConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TableRollConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TableRollConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TableRollConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TableRollConfig>(), &TableRollConfig::ByteSizeLong,
              &TableRollConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TableRollConfig, _impl_._cached_size_),
          false,
      },
      &TableRollConfig::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TableRollConfig_class_data_ =
        TableRollConfig::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TableRollConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TableRollConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TableRollConfig_class_data_.tc_table);
  return TableRollConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 55, 2>
TableRollConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TableRollConfig, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TableRollConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::TableRollConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .api.v1alpha1.RollModifier modifiers = 4 [json_name = "modifiers"];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(TableRollConfig, _impl_.modifiers_)}},
    // string table_id = 1 [json_name = "tableId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TableRollConfig, _impl_.table_id_)}},
    // int32 roll_count = 2 [json_name = "rollCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TableRollConfig, _impl_.roll_count_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TableRollConfig, _impl_.roll_count_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string table_id = 1 [json_name = "tableId"];
    {PROTOBUF_FIELD_OFFSET(TableRollConfig, _impl_.table_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 roll_count = 2 [json_name = "rollCount"];
    {PROTOBUF_FIELD_OFFSET(TableRollConfig, _impl_.roll_count_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // map<string, string> parameters = 3 [json_name = "parameters"];
    {PROTOBUF_FIELD_OFFSET(TableRollConfig, _impl_.parameters_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // repeated .api.v1alpha1.RollModifier modifiers = 4 [json_name = "modifiers"];
    {PROTOBUF_FIELD_OFFSET(TableRollConfig, _impl_.modifiers_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RollModifier>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\34\10\0\12\0\0\0\0"
    "api.v1alpha1.TableRollConfig"
    "table_id"
    "parameters"
  }},
};
PROTOBUF_NOINLINE void TableRollConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.TableRollConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parameters_.Clear();
  _impl_.modifiers_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.table_id_.ClearNonDefaultToEmpty();
  }
  _impl_.roll_count_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TableRollConfig::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TableRollConfig& this_ = static_cast<const TableRollConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TableRollConfig::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TableRollConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.TableRollConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string table_id = 1 [json_name = "tableId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_table_id().empty()) {
      const ::std::string& _s = this_._internal_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TableRollConfig.table_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // int32 roll_count = 2 [json_name = "rollCount"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_roll_count() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_roll_count(), target);
    }
  }

  // map<string, string> parameters = 3 [json_name = "parameters"];
  if (!this_._internal_parameters().empty()) {
    using MapType = ::google::protobuf::Map<::std::string, ::std::string>;
    using WireHelper = _pbi::MapEntryFuncs<::std::string, ::std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_parameters();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TableRollConfig.parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TableRollConfig.parameters");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TableRollConfig.parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TableRollConfig.parameters");
      }
    }
  }

  // repeated .api.v1alpha1.RollModifier modifiers = 4 [json_name = "modifiers"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_modifiers_size());
       i < n; i++) {
    const auto& repfield = this_._internal_modifiers().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.TableRollConfig)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TableRollConfig::ByteSizeLong(const MessageLite& base) {
  const TableRollConfig& this_ = static_cast<const TableRollConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TableRollConfig::ByteSizeLong() const {
  const TableRollConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.TableRollConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, string> parameters = 3 [json_name = "parameters"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_parameters_size());
      for (const auto& entry : this_._internal_parameters()) {
        total_size += _pbi::MapEntryFuncs<::std::string, ::std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
    // repeated .api.v1alpha1.RollModifier modifiers = 4 [json_name = "modifiers"];
    {
      total_size += 1UL * this_._internal_modifiers_size();
      for (const auto& msg : this_._internal_modifiers()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string table_id = 1 [json_name = "tableId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_table_id());
      }
    }
    // int32 roll_count = 2 [json_name = "rollCount"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_roll_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_roll_count());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TableRollConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TableRollConfig*>(&to_msg);
  auto& from = static_cast<const TableRollConfig&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.TableRollConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  _this->_internal_mutable_modifiers()->MergeFrom(
      from._internal_modifiers());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_table_id().empty()) {
        _this->_internal_set_table_id(from._internal_table_id());
      } else {
        if (_this->_impl_.table_id_.IsDefault()) {
          _this->_internal_set_table_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_roll_count() != 0) {
        _this->_impl_.roll_count_ = from._impl_.roll_count_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TableRollConfig::CopyFrom(const TableRollConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.TableRollConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TableRollConfig::InternalSwap(TableRollConfig* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.parameters_.InternalSwap(&other->_impl_.parameters_);
  _impl_.modifiers_.InternalSwap(&other->_impl_.modifiers_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.table_id_, &other->_impl_.table_id_, arena);
  swap(_impl_.roll_count_, other->_impl_.roll_count_);
}

::google::protobuf::Metadata TableRollConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
RollMultipleResponse_ResultsByTableEntry_DoNotUse::RollMultipleResponse_ResultsByTableEntry_DoNotUse()
    : SuperType(RollMultipleResponse_ResultsByTableEntry_DoNotUse_class_data_.base()) {}
RollMultipleResponse_ResultsByTableEntry_DoNotUse::RollMultipleResponse_ResultsByTableEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, RollMultipleResponse_ResultsByTableEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
RollMultipleResponse_ResultsByTableEntry_DoNotUse::RollMultipleResponse_ResultsByTableEntry_DoNotUse() : SuperType() {}
RollMultipleResponse_ResultsByTableEntry_DoNotUse::RollMultipleResponse_ResultsByTableEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL RollMultipleResponse_ResultsByTableEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RollMultipleResponse_ResultsByTableEntry_DoNotUse(arena);
}
constexpr auto RollMultipleResponse_ResultsByTableEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RollMultipleResponse_ResultsByTableEntry_DoNotUse),
                                            alignof(RollMultipleResponse_ResultsByTableEntry_DoNotUse));
}
constexpr auto RollMultipleResponse_ResultsByTableEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RollMultipleResponse_ResultsByTableEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RollMultipleResponse_ResultsByTableEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RollMultipleResponse_ResultsByTableEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RollMultipleResponse_ResultsByTableEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&RollMultipleResponse_ResultsByTableEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RollMultipleResponse_ResultsByTableEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &RollMultipleResponse_ResultsByTableEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RollMultipleResponse_ResultsByTableEntry_DoNotUse_class_data_ =
        RollMultipleResponse_ResultsByTableEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RollMultipleResponse_ResultsByTableEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RollMultipleResponse_ResultsByTableEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RollMultipleResponse_ResultsByTableEntry_DoNotUse_class_data_.tc_table);
  return RollMultipleResponse_ResultsByTableEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 65, 2>
RollMultipleResponse_ResultsByTableEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RollMultipleResponse_ResultsByTableEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RollMultipleResponse_ResultsByTableEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::RollMultipleResponse_ResultsByTableEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .api.v1alpha1.TableRollResults value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(RollMultipleResponse_ResultsByTableEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RollMultipleResponse_ResultsByTableEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(RollMultipleResponse_ResultsByTableEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.TableRollResults value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(RollMultipleResponse_ResultsByTableEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::TableRollResults>()},
  }},
  {{
    "\65\3\0\0\0\0\0\0"
    "api.v1alpha1.RollMultipleResponse.ResultsByTableEntry"
    "key"
  }},
};
// ===================================================================

class RollMultipleResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RollMultipleResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RollMultipleResponse, _impl_._has_bits_);
};

RollMultipleResponse::RollMultipleResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RollMultipleResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.RollMultipleResponse)
}
PROTOBUF_NDEBUG_INLINE RollMultipleResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::RollMultipleResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        results_by_table_{visibility, arena, from.results_by_table_},
        combined_results_{visibility, arena, from.combined_results_} {}

RollMultipleResponse::RollMultipleResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RollMultipleResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RollMultipleResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RollMultipleResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.multi_roll_stats_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.multi_roll_stats_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.RollMultipleResponse)
}
PROTOBUF_NDEBUG_INLINE RollMultipleResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        results_by_table_{visibility, arena},
        combined_results_{visibility, arena} {}

inline void RollMultipleResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.multi_roll_stats_ = {};
}
RollMultipleResponse::~RollMultipleResponse() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.RollMultipleResponse)
  SharedDtor(*this);
}
inline void RollMultipleResponse::SharedDtor(MessageLite& self) {
  RollMultipleResponse& this_ = static_cast<RollMultipleResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.multi_roll_stats_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RollMultipleResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RollMultipleResponse(arena);
}
constexpr auto RollMultipleResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RollMultipleResponse, _impl_.results_by_table_) +
          decltype(RollMultipleResponse::_impl_.results_by_table_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RollMultipleResponse, _impl_.results_by_table_) +
          decltype(RollMultipleResponse::_impl_.results_by_table_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RollMultipleResponse, _impl_.combined_results_) +
          decltype(RollMultipleResponse::_impl_.combined_results_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RollMultipleResponse), alignof(RollMultipleResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RollMultipleResponse::PlacementNew_,
                                 sizeof(RollMultipleResponse),
                                 alignof(RollMultipleResponse));
  }
}
constexpr auto RollMultipleResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RollMultipleResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RollMultipleResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RollMultipleResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RollMultipleResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RollMultipleResponse>(), &RollMultipleResponse::ByteSizeLong,
              &RollMultipleResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RollMultipleResponse, _impl_._cached_size_),
          false,
      },
      &RollMultipleResponse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RollMultipleResponse_class_data_ =
        RollMultipleResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RollMultipleResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RollMultipleResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RollMultipleResponse_class_data_.tc_table);
  return RollMultipleResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 3, 4, 58, 2>
RollMultipleResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RollMultipleResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RollMultipleResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::RollMultipleResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .api.v1alpha1.CombinedResult combined_results = 2 [json_name = "combinedResults"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RollMultipleResponse, _impl_.combined_results_)}},
    // .api.v1alpha1.MultiRollStats multi_roll_stats = 3 [json_name = "multiRollStats"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 1, PROTOBUF_FIELD_OFFSET(RollMultipleResponse, _impl_.multi_roll_stats_)}},
  }}, {{
    65535, 65535
  }}, {{
    // map<string, .api.v1alpha1.TableRollResults> results_by_table = 1 [json_name = "resultsByTable"];
    {PROTOBUF_FIELD_OFFSET(RollMultipleResponse, _impl_.results_by_table_), -1, 2, (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // repeated .api.v1alpha1.CombinedResult combined_results = 2 [json_name = "combinedResults"];
    {PROTOBUF_FIELD_OFFSET(RollMultipleResponse, _impl_.combined_results_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.MultiRollStats multi_roll_stats = 3 [json_name = "multiRollStats"];
    {PROTOBUF_FIELD_OFFSET(RollMultipleResponse, _impl_.multi_roll_stats_), _Internal::kHasBitsOffset + 0, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::CombinedResult>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::MultiRollStats>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 11,
                                       0)},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::TableRollResults>()},
  }},
  {{
    "\41\20\0\0\0\0\0\0"
    "api.v1alpha1.RollMultipleResponse"
    "results_by_table"
  }},
};
PROTOBUF_NOINLINE void RollMultipleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.RollMultipleResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.results_by_table_.Clear();
  _impl_.combined_results_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.multi_roll_stats_ != nullptr);
    _impl_.multi_roll_stats_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RollMultipleResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RollMultipleResponse& this_ = static_cast<const RollMultipleResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RollMultipleResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RollMultipleResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.RollMultipleResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // map<string, .api.v1alpha1.TableRollResults> results_by_table = 1 [json_name = "resultsByTable"];
  if (!this_._internal_results_by_table().empty()) {
    using MapType = ::google::protobuf::Map<::std::string, ::api::v1alpha1::TableRollResults>;
    using WireHelper = _pbi::MapEntryFuncs<::std::string, ::api::v1alpha1::TableRollResults,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>;
    const auto& field = this_._internal_results_by_table();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RollMultipleResponse.results_by_table");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RollMultipleResponse.results_by_table");
      }
    }
  }

  // repeated .api.v1alpha1.CombinedResult combined_results = 2 [json_name = "combinedResults"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_combined_results_size());
       i < n; i++) {
    const auto& repfield = this_._internal_combined_results().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.MultiRollStats multi_roll_stats = 3 [json_name = "multiRollStats"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.multi_roll_stats_, this_._impl_.multi_roll_stats_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.RollMultipleResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RollMultipleResponse::ByteSizeLong(const MessageLite& base) {
  const RollMultipleResponse& this_ = static_cast<const RollMultipleResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RollMultipleResponse::ByteSizeLong() const {
  const RollMultipleResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.RollMultipleResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, .api.v1alpha1.TableRollResults> results_by_table = 1 [json_name = "resultsByTable"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_results_by_table_size());
      for (const auto& entry : this_._internal_results_by_table()) {
        total_size += _pbi::MapEntryFuncs<::std::string, ::api::v1alpha1::TableRollResults,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
      }
    }
    // repeated .api.v1alpha1.CombinedResult combined_results = 2 [json_name = "combinedResults"];
    {
      total_size += 1UL * this_._internal_combined_results_size();
      for (const auto& msg : this_._internal_combined_results()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // .api.v1alpha1.MultiRollStats multi_roll_stats = 3 [json_name = "multiRollStats"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.multi_roll_stats_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RollMultipleResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RollMultipleResponse*>(&to_msg);
  auto& from = static_cast<const RollMultipleResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.RollMultipleResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.results_by_table_.MergeFrom(from._impl_.results_by_table_);
  _this->_internal_mutable_combined_results()->MergeFrom(
      from._internal_combined_results());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(from._impl_.multi_roll_stats_ != nullptr);
    if (_this->_impl_.multi_roll_stats_ == nullptr) {
      _this->_impl_.multi_roll_stats_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.multi_roll_stats_);
    } else {
      _this->_impl_.multi_roll_stats_->MergeFrom(*from._impl_.multi_roll_stats_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RollMultipleResponse::CopyFrom(const RollMultipleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.RollMultipleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RollMultipleResponse::InternalSwap(RollMultipleResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.results_by_table_.InternalSwap(&other->_impl_.results_by_table_);
  _impl_.combined_results_.InternalSwap(&other->_impl_.combined_results_);
  swap(_impl_.multi_roll_stats_, other->_impl_.multi_roll_stats_);
}

::google::protobuf::Metadata RollMultipleResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TableRollResults::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TableRollResults>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TableRollResults, _impl_._has_bits_);
};

TableRollResults::TableRollResults(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TableRollResults_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.TableRollResults)
}
PROTOBUF_NDEBUG_INLINE TableRollResults::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::TableRollResults& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        results_{visibility, arena, from.results_},
        table_id_(arena, from.table_id_) {}

TableRollResults::TableRollResults(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TableRollResults& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TableRollResults_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TableRollResults* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.stats_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.stats_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.TableRollResults)
}
PROTOBUF_NDEBUG_INLINE TableRollResults::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        results_{visibility, arena},
        table_id_(arena) {}

inline void TableRollResults::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.stats_ = {};
}
TableRollResults::~TableRollResults() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.TableRollResults)
  SharedDtor(*this);
}
inline void TableRollResults::SharedDtor(MessageLite& self) {
  TableRollResults& this_ = static_cast<TableRollResults&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.table_id_.Destroy();
  delete this_._impl_.stats_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TableRollResults::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TableRollResults(arena);
}
constexpr auto TableRollResults::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TableRollResults, _impl_.results_) +
          decltype(TableRollResults::_impl_.results_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(TableRollResults), alignof(TableRollResults), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TableRollResults::PlacementNew_,
                                 sizeof(TableRollResults),
                                 alignof(TableRollResults));
  }
}
constexpr auto TableRollResults::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TableRollResults_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TableRollResults::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TableRollResults>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TableRollResults::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TableRollResults>(), &TableRollResults::ByteSizeLong,
              &TableRollResults::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TableRollResults, _impl_._cached_size_),
          false,
      },
      &TableRollResults::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TableRollResults_class_data_ =
        TableRollResults::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TableRollResults::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TableRollResults_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TableRollResults_class_data_.tc_table);
  return TableRollResults_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 46, 2>
TableRollResults::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TableRollResults, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TableRollResults_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::TableRollResults>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string table_id = 1 [json_name = "tableId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TableRollResults, _impl_.table_id_)}},
    // repeated .api.v1alpha1.RollResult results = 2 [json_name = "results"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TableRollResults, _impl_.results_)}},
    // .api.v1alpha1.RollStats stats = 3 [json_name = "stats"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(TableRollResults, _impl_.stats_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string table_id = 1 [json_name = "tableId"];
    {PROTOBUF_FIELD_OFFSET(TableRollResults, _impl_.table_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .api.v1alpha1.RollResult results = 2 [json_name = "results"];
    {PROTOBUF_FIELD_OFFSET(TableRollResults, _impl_.results_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.RollStats stats = 3 [json_name = "stats"];
    {PROTOBUF_FIELD_OFFSET(TableRollResults, _impl_.stats_), _Internal::kHasBitsOffset + 1, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RollResult>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RollStats>()},
  }},
  {{
    "\35\10\0\0\0\0\0\0"
    "api.v1alpha1.TableRollResults"
    "table_id"
  }},
};
PROTOBUF_NOINLINE void TableRollResults::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.TableRollResults)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.results_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.table_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.stats_ != nullptr);
      _impl_.stats_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TableRollResults::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TableRollResults& this_ = static_cast<const TableRollResults&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TableRollResults::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TableRollResults& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.TableRollResults)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string table_id = 1 [json_name = "tableId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_table_id().empty()) {
      const ::std::string& _s = this_._internal_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TableRollResults.table_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // repeated .api.v1alpha1.RollResult results = 2 [json_name = "results"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_results_size());
       i < n; i++) {
    const auto& repfield = this_._internal_results().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.RollStats stats = 3 [json_name = "stats"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.stats_, this_._impl_.stats_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.TableRollResults)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TableRollResults::ByteSizeLong(const MessageLite& base) {
  const TableRollResults& this_ = static_cast<const TableRollResults&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TableRollResults::ByteSizeLong() const {
  const TableRollResults& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.TableRollResults)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.RollResult results = 2 [json_name = "results"];
    {
      total_size += 1UL * this_._internal_results_size();
      for (const auto& msg : this_._internal_results()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string table_id = 1 [json_name = "tableId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_table_id());
      }
    }
    // .api.v1alpha1.RollStats stats = 3 [json_name = "stats"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.stats_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TableRollResults::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TableRollResults*>(&to_msg);
  auto& from = static_cast<const TableRollResults&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.TableRollResults)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_results()->MergeFrom(
      from._internal_results());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_table_id().empty()) {
        _this->_internal_set_table_id(from._internal_table_id());
      } else {
        if (_this->_impl_.table_id_.IsDefault()) {
          _this->_internal_set_table_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.stats_ != nullptr);
      if (_this->_impl_.stats_ == nullptr) {
        _this->_impl_.stats_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.stats_);
      } else {
        _this->_impl_.stats_->MergeFrom(*from._impl_.stats_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TableRollResults::CopyFrom(const TableRollResults& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.TableRollResults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TableRollResults::InternalSwap(TableRollResults* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.results_.InternalSwap(&other->_impl_.results_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.table_id_, &other->_impl_.table_id_, arena);
  swap(_impl_.stats_, other->_impl_.stats_);
}

::google::protobuf::Metadata TableRollResults::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CombinedResult::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CombinedResult>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CombinedResult, _impl_._has_bits_);
};

CombinedResult::CombinedResult(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CombinedResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.CombinedResult)
}
PROTOBUF_NDEBUG_INLINE CombinedResult::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::CombinedResult& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        components_{visibility, arena, from.components_},
        result_id_(arena, from.result_id_),
        description_(arena, from.description_) {}

CombinedResult::CombinedResult(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CombinedResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CombinedResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CombinedResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.total_value_ = from._impl_.total_value_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.CombinedResult)
}
PROTOBUF_NDEBUG_INLINE CombinedResult::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        components_{visibility, arena},
        result_id_(arena),
        description_(arena) {}

inline void CombinedResult::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.total_value_ = {};
}
CombinedResult::~CombinedResult() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.CombinedResult)
  SharedDtor(*this);
}
inline void CombinedResult::SharedDtor(MessageLite& self) {
  CombinedResult& this_ = static_cast<CombinedResult&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.result_id_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CombinedResult::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CombinedResult(arena);
}
constexpr auto CombinedResult::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CombinedResult, _impl_.components_) +
          decltype(CombinedResult::_impl_.components_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CombinedResult), alignof(CombinedResult), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CombinedResult::PlacementNew_,
                                 sizeof(CombinedResult),
                                 alignof(CombinedResult));
  }
}
constexpr auto CombinedResult::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CombinedResult_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CombinedResult::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CombinedResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CombinedResult::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CombinedResult>(), &CombinedResult::ByteSizeLong,
              &CombinedResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CombinedResult, _impl_._cached_size_),
          false,
      },
      &CombinedResult::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CombinedResult_class_data_ =
        CombinedResult::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CombinedResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CombinedResult_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CombinedResult_class_data_.tc_table);
  return CombinedResult_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 56, 2>
CombinedResult::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CombinedResult, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CombinedResult_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::CombinedResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double total_value = 4 [json_name = "totalValue"];
    {::_pbi::TcParser::FastF64S1,
     {33, 2, 0, PROTOBUF_FIELD_OFFSET(CombinedResult, _impl_.total_value_)}},
    // string result_id = 1 [json_name = "resultId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CombinedResult, _impl_.result_id_)}},
    // repeated .api.v1alpha1.ResultComponent components = 2 [json_name = "components"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CombinedResult, _impl_.components_)}},
    // string description = 3 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(CombinedResult, _impl_.description_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string result_id = 1 [json_name = "resultId"];
    {PROTOBUF_FIELD_OFFSET(CombinedResult, _impl_.result_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .api.v1alpha1.ResultComponent components = 2 [json_name = "components"];
    {PROTOBUF_FIELD_OFFSET(CombinedResult, _impl_.components_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string description = 3 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(CombinedResult, _impl_.description_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double total_value = 4 [json_name = "totalValue"];
    {PROTOBUF_FIELD_OFFSET(CombinedResult, _impl_.total_value_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::ResultComponent>()},
  }},
  {{
    "\33\11\0\13\0\0\0\0"
    "api.v1alpha1.CombinedResult"
    "result_id"
    "description"
  }},
};
PROTOBUF_NOINLINE void CombinedResult::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.CombinedResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.components_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.result_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.total_value_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CombinedResult::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CombinedResult& this_ = static_cast<const CombinedResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CombinedResult::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CombinedResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.CombinedResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string result_id = 1 [json_name = "resultId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_result_id().empty()) {
      const ::std::string& _s = this_._internal_result_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.CombinedResult.result_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // repeated .api.v1alpha1.ResultComponent components = 2 [json_name = "components"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_components_size());
       i < n; i++) {
    const auto& repfield = this_._internal_components().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // string description = 3 [json_name = "description"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.CombinedResult.description");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // double total_value = 4 [json_name = "totalValue"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_total_value()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          4, this_._internal_total_value(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.CombinedResult)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CombinedResult::ByteSizeLong(const MessageLite& base) {
  const CombinedResult& this_ = static_cast<const CombinedResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CombinedResult::ByteSizeLong() const {
  const CombinedResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.CombinedResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.ResultComponent components = 2 [json_name = "components"];
    {
      total_size += 1UL * this_._internal_components_size();
      for (const auto& msg : this_._internal_components()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string result_id = 1 [json_name = "resultId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_result_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_result_id());
      }
    }
    // string description = 3 [json_name = "description"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // double total_value = 4 [json_name = "totalValue"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_total_value()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CombinedResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CombinedResult*>(&to_msg);
  auto& from = static_cast<const CombinedResult&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.CombinedResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_components()->MergeFrom(
      from._internal_components());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_result_id().empty()) {
        _this->_internal_set_result_id(from._internal_result_id());
      } else {
        if (_this->_impl_.result_id_.IsDefault()) {
          _this->_internal_set_result_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_total_value()) != 0) {
        _this->_impl_.total_value_ = from._impl_.total_value_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CombinedResult::CopyFrom(const CombinedResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.CombinedResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CombinedResult::InternalSwap(CombinedResult* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.components_.InternalSwap(&other->_impl_.components_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.result_id_, &other->_impl_.result_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  swap(_impl_.total_value_, other->_impl_.total_value_);
}

::google::protobuf::Metadata CombinedResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ResultComponent::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ResultComponent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ResultComponent, _impl_._has_bits_);
};

ResultComponent::ResultComponent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ResultComponent_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.ResultComponent)
}
PROTOBUF_NDEBUG_INLINE ResultComponent::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::ResultComponent& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        table_id_(arena, from.table_id_),
        relationship_(arena, from.relationship_) {}

ResultComponent::ResultComponent(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ResultComponent& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ResultComponent_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ResultComponent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.result_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.result_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.ResultComponent)
}
PROTOBUF_NDEBUG_INLINE ResultComponent::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        table_id_(arena),
        relationship_(arena) {}

inline void ResultComponent::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
ResultComponent::~ResultComponent() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.ResultComponent)
  SharedDtor(*this);
}
inline void ResultComponent::SharedDtor(MessageLite& self) {
  ResultComponent& this_ = static_cast<ResultComponent&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.table_id_.Destroy();
  this_._impl_.relationship_.Destroy();
  delete this_._impl_.result_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ResultComponent::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ResultComponent(arena);
}
constexpr auto ResultComponent::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ResultComponent),
                                            alignof(ResultComponent));
}
constexpr auto ResultComponent::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ResultComponent_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ResultComponent::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ResultComponent>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ResultComponent::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ResultComponent>(), &ResultComponent::ByteSizeLong,
              &ResultComponent::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ResultComponent, _impl_._cached_size_),
          false,
      },
      &ResultComponent::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ResultComponent_class_data_ =
        ResultComponent::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ResultComponent::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ResultComponent_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ResultComponent_class_data_.tc_table);
  return ResultComponent_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 57, 2>
ResultComponent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ResultComponent, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ResultComponent_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::ResultComponent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string table_id = 1 [json_name = "tableId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ResultComponent, _impl_.table_id_)}},
    // .api.v1alpha1.RollResult result = 2 [json_name = "result"];
    {::_pbi::TcParser::FastMtS1,
     {18, 2, 0, PROTOBUF_FIELD_OFFSET(ResultComponent, _impl_.result_)}},
    // string relationship = 3 [json_name = "relationship"];
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(ResultComponent, _impl_.relationship_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string table_id = 1 [json_name = "tableId"];
    {PROTOBUF_FIELD_OFFSET(ResultComponent, _impl_.table_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.RollResult result = 2 [json_name = "result"];
    {PROTOBUF_FIELD_OFFSET(ResultComponent, _impl_.result_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string relationship = 3 [json_name = "relationship"];
    {PROTOBUF_FIELD_OFFSET(ResultComponent, _impl_.relationship_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RollResult>()},
  }},
  {{
    "\34\10\0\14\0\0\0\0"
    "api.v1alpha1.ResultComponent"
    "table_id"
    "relationship"
  }},
};
PROTOBUF_NOINLINE void ResultComponent::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.ResultComponent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.table_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.relationship_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.result_ != nullptr);
      _impl_.result_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ResultComponent::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ResultComponent& this_ = static_cast<const ResultComponent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ResultComponent::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ResultComponent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.ResultComponent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string table_id = 1 [json_name = "tableId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_table_id().empty()) {
      const ::std::string& _s = this_._internal_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.ResultComponent.table_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.RollResult result = 2 [json_name = "result"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.result_, this_._impl_.result_->GetCachedSize(), target,
        stream);
  }

  // string relationship = 3 [json_name = "relationship"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    if (!this_._internal_relationship().empty()) {
      const ::std::string& _s = this_._internal_relationship();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.ResultComponent.relationship");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.ResultComponent)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ResultComponent::ByteSizeLong(const MessageLite& base) {
  const ResultComponent& this_ = static_cast<const ResultComponent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ResultComponent::ByteSizeLong() const {
  const ResultComponent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.ResultComponent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string table_id = 1 [json_name = "tableId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_table_id());
      }
    }
    // string relationship = 3 [json_name = "relationship"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_relationship().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_relationship());
      }
    }
    // .api.v1alpha1.RollResult result = 2 [json_name = "result"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.result_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ResultComponent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ResultComponent*>(&to_msg);
  auto& from = static_cast<const ResultComponent&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.ResultComponent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_table_id().empty()) {
        _this->_internal_set_table_id(from._internal_table_id());
      } else {
        if (_this->_impl_.table_id_.IsDefault()) {
          _this->_internal_set_table_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_relationship().empty()) {
        _this->_internal_set_relationship(from._internal_relationship());
      } else {
        if (_this->_impl_.relationship_.IsDefault()) {
          _this->_internal_set_relationship("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.result_ != nullptr);
      if (_this->_impl_.result_ == nullptr) {
        _this->_impl_.result_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.result_);
      } else {
        _this->_impl_.result_->MergeFrom(*from._impl_.result_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResultComponent::CopyFrom(const ResultComponent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.ResultComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ResultComponent::InternalSwap(ResultComponent* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.table_id_, &other->_impl_.table_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.relationship_, &other->_impl_.relationship_, arena);
  swap(_impl_.result_, other->_impl_.result_);
}

::google::protobuf::Metadata ResultComponent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MultiRollStats::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MultiRollStats>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MultiRollStats, _impl_._has_bits_);
};

MultiRollStats::MultiRollStats(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MultiRollStats_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.MultiRollStats)
}
MultiRollStats::MultiRollStats(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MultiRollStats& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MultiRollStats_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE MultiRollStats::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void MultiRollStats::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_time_ms_),
           0,
           offsetof(Impl_, correlations_found_) -
               offsetof(Impl_, total_time_ms_) +
               sizeof(Impl_::correlations_found_));
}
MultiRollStats::~MultiRollStats() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.MultiRollStats)
  SharedDtor(*this);
}
inline void MultiRollStats::SharedDtor(MessageLite& self) {
  MultiRollStats& this_ = static_cast<MultiRollStats&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MultiRollStats::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MultiRollStats(arena);
}
constexpr auto MultiRollStats::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MultiRollStats),
                                            alignof(MultiRollStats));
}
constexpr auto MultiRollStats::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MultiRollStats_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MultiRollStats::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MultiRollStats>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MultiRollStats::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MultiRollStats>(), &MultiRollStats::ByteSizeLong,
              &MultiRollStats::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MultiRollStats, _impl_._cached_size_),
          false,
      },
      &MultiRollStats::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MultiRollStats_class_data_ =
        MultiRollStats::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MultiRollStats::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MultiRollStats_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MultiRollStats_class_data_.tc_table);
  return MultiRollStats_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2>
MultiRollStats::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MultiRollStats, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    MultiRollStats_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::MultiRollStats>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 total_time_ms = 1 [json_name = "totalTimeMs"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MultiRollStats, _impl_.total_time_ms_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(MultiRollStats, _impl_.total_time_ms_)}},
    // int32 tables_rolled = 2 [json_name = "tablesRolled"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MultiRollStats, _impl_.tables_rolled_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(MultiRollStats, _impl_.tables_rolled_)}},
    // int32 total_results = 3 [json_name = "totalResults"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MultiRollStats, _impl_.total_results_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(MultiRollStats, _impl_.total_results_)}},
    // double average_time_per_table_ms = 4 [json_name = "averageTimePerTableMs"];
    {::_pbi::TcParser::FastF64S1,
     {33, 3, 0, PROTOBUF_FIELD_OFFSET(MultiRollStats, _impl_.average_time_per_table_ms_)}},
    // int32 correlations_found = 5 [json_name = "correlationsFound"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MultiRollStats, _impl_.correlations_found_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(MultiRollStats, _impl_.correlations_found_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 total_time_ms = 1 [json_name = "totalTimeMs"];
    {PROTOBUF_FIELD_OFFSET(MultiRollStats, _impl_.total_time_ms_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int32 tables_rolled = 2 [json_name = "tablesRolled"];
    {PROTOBUF_FIELD_OFFSET(MultiRollStats, _impl_.tables_rolled_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 total_results = 3 [json_name = "totalResults"];
    {PROTOBUF_FIELD_OFFSET(MultiRollStats, _impl_.total_results_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // double average_time_per_table_ms = 4 [json_name = "averageTimePerTableMs"];
    {PROTOBUF_FIELD_OFFSET(MultiRollStats, _impl_.average_time_per_table_ms_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // int32 correlations_found = 5 [json_name = "correlationsFound"];
    {PROTOBUF_FIELD_OFFSET(MultiRollStats, _impl_.correlations_found_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void MultiRollStats::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.MultiRollStats)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    ::memset(&_impl_.total_time_ms_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.correlations_found_) -
        reinterpret_cast<char*>(&_impl_.total_time_ms_)) + sizeof(_impl_.correlations_found_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MultiRollStats::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MultiRollStats& this_ = static_cast<const MultiRollStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MultiRollStats::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MultiRollStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.MultiRollStats)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 total_time_ms = 1 [json_name = "totalTimeMs"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_total_time_ms() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_total_time_ms(), target);
    }
  }

  // int32 tables_rolled = 2 [json_name = "tablesRolled"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_tables_rolled() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_tables_rolled(), target);
    }
  }

  // int32 total_results = 3 [json_name = "totalResults"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_total_results() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_total_results(), target);
    }
  }

  // double average_time_per_table_ms = 4 [json_name = "averageTimePerTableMs"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_average_time_per_table_ms()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          4, this_._internal_average_time_per_table_ms(), target);
    }
  }

  // int32 correlations_found = 5 [json_name = "correlationsFound"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_correlations_found() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
              stream, this_._internal_correlations_found(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.MultiRollStats)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MultiRollStats::ByteSizeLong(const MessageLite& base) {
  const MultiRollStats& this_ = static_cast<const MultiRollStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MultiRollStats::ByteSizeLong() const {
  const MultiRollStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.MultiRollStats)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // int64 total_time_ms = 1 [json_name = "totalTimeMs"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_total_time_ms() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_total_time_ms());
      }
    }
    // int32 tables_rolled = 2 [json_name = "tablesRolled"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_tables_rolled() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_tables_rolled());
      }
    }
    // int32 total_results = 3 [json_name = "totalResults"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_total_results() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_total_results());
      }
    }
    // double average_time_per_table_ms = 4 [json_name = "averageTimePerTableMs"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_average_time_per_table_ms()) != 0) {
        total_size += 9;
      }
    }
    // int32 correlations_found = 5 [json_name = "correlationsFound"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_correlations_found() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_correlations_found());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MultiRollStats::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MultiRollStats*>(&to_msg);
  auto& from = static_cast<const MultiRollStats&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.MultiRollStats)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (from._internal_total_time_ms() != 0) {
        _this->_impl_.total_time_ms_ = from._impl_.total_time_ms_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_tables_rolled() != 0) {
        _this->_impl_.tables_rolled_ = from._impl_.tables_rolled_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_total_results() != 0) {
        _this->_impl_.total_results_ = from._impl_.total_results_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_average_time_per_table_ms()) != 0) {
        _this->_impl_.average_time_per_table_ms_ = from._impl_.average_time_per_table_ms_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_correlations_found() != 0) {
        _this->_impl_.correlations_found_ = from._impl_.correlations_found_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MultiRollStats::CopyFrom(const MultiRollStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.MultiRollStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MultiRollStats::InternalSwap(MultiRollStats* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MultiRollStats, _impl_.correlations_found_)
      + sizeof(MultiRollStats::_impl_.correlations_found_)
      - PROTOBUF_FIELD_OFFSET(MultiRollStats, _impl_.total_time_ms_)>(
          reinterpret_cast<char*>(&_impl_.total_time_ms_),
          reinterpret_cast<char*>(&other->_impl_.total_time_ms_));
}

::google::protobuf::Metadata MultiRollStats::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RollWithModifiersRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RollWithModifiersRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RollWithModifiersRequest, _impl_._has_bits_);
};

RollWithModifiersRequest::RollWithModifiersRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RollWithModifiersRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.RollWithModifiersRequest)
}
PROTOBUF_NDEBUG_INLINE RollWithModifiersRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::RollWithModifiersRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        modifiers_{visibility, arena, from.modifiers_},
        table_id_(arena, from.table_id_) {}

RollWithModifiersRequest::RollWithModifiersRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RollWithModifiersRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RollWithModifiersRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RollWithModifiersRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.options_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_)
                : nullptr;
  _impl_.roll_count_ = from._impl_.roll_count_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.RollWithModifiersRequest)
}
PROTOBUF_NDEBUG_INLINE RollWithModifiersRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        modifiers_{visibility, arena},
        table_id_(arena) {}

inline void RollWithModifiersRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, options_),
           0,
           offsetof(Impl_, roll_count_) -
               offsetof(Impl_, options_) +
               sizeof(Impl_::roll_count_));
}
RollWithModifiersRequest::~RollWithModifiersRequest() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.RollWithModifiersRequest)
  SharedDtor(*this);
}
inline void RollWithModifiersRequest::SharedDtor(MessageLite& self) {
  RollWithModifiersRequest& this_ = static_cast<RollWithModifiersRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.table_id_.Destroy();
  delete this_._impl_.options_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RollWithModifiersRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RollWithModifiersRequest(arena);
}
constexpr auto RollWithModifiersRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RollWithModifiersRequest, _impl_.modifiers_) +
          decltype(RollWithModifiersRequest::_impl_.modifiers_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RollWithModifiersRequest), alignof(RollWithModifiersRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RollWithModifiersRequest::PlacementNew_,
                                 sizeof(RollWithModifiersRequest),
                                 alignof(RollWithModifiersRequest));
  }
}
constexpr auto RollWithModifiersRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RollWithModifiersRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RollWithModifiersRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RollWithModifiersRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RollWithModifiersRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RollWithModifiersRequest>(), &RollWithModifiersRequest::ByteSizeLong,
              &RollWithModifiersRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RollWithModifiersRequest, _impl_._cached_size_),
          false,
      },
      &RollWithModifiersRequest::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RollWithModifiersRequest_class_data_ =
        RollWithModifiersRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RollWithModifiersRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RollWithModifiersRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RollWithModifiersRequest_class_data_.tc_table);
  return RollWithModifiersRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 54, 2>
RollWithModifiersRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RollWithModifiersRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RollWithModifiersRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::RollWithModifiersRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .api.v1alpha1.RollOptions options = 4 [json_name = "options"];
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(RollWithModifiersRequest, _impl_.options_)}},
    // string table_id = 1 [json_name = "tableId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RollWithModifiersRequest, _impl_.table_id_)}},
    // repeated .api.v1alpha1.RollModifier modifiers = 2 [json_name = "modifiers"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RollWithModifiersRequest, _impl_.modifiers_)}},
    // int32 roll_count = 3 [json_name = "rollCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RollWithModifiersRequest, _impl_.roll_count_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(RollWithModifiersRequest, _impl_.roll_count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string table_id = 1 [json_name = "tableId"];
    {PROTOBUF_FIELD_OFFSET(RollWithModifiersRequest, _impl_.table_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .api.v1alpha1.RollModifier modifiers = 2 [json_name = "modifiers"];
    {PROTOBUF_FIELD_OFFSET(RollWithModifiersRequest, _impl_.modifiers_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 roll_count = 3 [json_name = "rollCount"];
    {PROTOBUF_FIELD_OFFSET(RollWithModifiersRequest, _impl_.roll_count_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .api.v1alpha1.RollOptions options = 4 [json_name = "options"];
    {PROTOBUF_FIELD_OFFSET(RollWithModifiersRequest, _impl_.options_), _Internal::kHasBitsOffset + 1, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RollModifier>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RollOptions>()},
  }},
  {{
    "\45\10\0\0\0\0\0\0"
    "api.v1alpha1.RollWithModifiersRequest"
    "table_id"
  }},
};
PROTOBUF_NOINLINE void RollWithModifiersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.RollWithModifiersRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.modifiers_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.table_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.options_ != nullptr);
      _impl_.options_->Clear();
    }
  }
  _impl_.roll_count_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RollWithModifiersRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RollWithModifiersRequest& this_ = static_cast<const RollWithModifiersRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RollWithModifiersRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RollWithModifiersRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.RollWithModifiersRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string table_id = 1 [json_name = "tableId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_table_id().empty()) {
      const ::std::string& _s = this_._internal_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RollWithModifiersRequest.table_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // repeated .api.v1alpha1.RollModifier modifiers = 2 [json_name = "modifiers"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_modifiers_size());
       i < n; i++) {
    const auto& repfield = this_._internal_modifiers().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // int32 roll_count = 3 [json_name = "rollCount"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_roll_count() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_roll_count(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.RollOptions options = 4 [json_name = "options"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.options_, this_._impl_.options_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.RollWithModifiersRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RollWithModifiersRequest::ByteSizeLong(const MessageLite& base) {
  const RollWithModifiersRequest& this_ = static_cast<const RollWithModifiersRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RollWithModifiersRequest::ByteSizeLong() const {
  const RollWithModifiersRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.RollWithModifiersRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.RollModifier modifiers = 2 [json_name = "modifiers"];
    {
      total_size += 1UL * this_._internal_modifiers_size();
      for (const auto& msg : this_._internal_modifiers()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string table_id = 1 [json_name = "tableId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_table_id());
      }
    }
    // .api.v1alpha1.RollOptions options = 4 [json_name = "options"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.options_);
    }
    // int32 roll_count = 3 [json_name = "rollCount"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_roll_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_roll_count());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RollWithModifiersRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RollWithModifiersRequest*>(&to_msg);
  auto& from = static_cast<const RollWithModifiersRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.RollWithModifiersRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_modifiers()->MergeFrom(
      from._internal_modifiers());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_table_id().empty()) {
        _this->_internal_set_table_id(from._internal_table_id());
      } else {
        if (_this->_impl_.table_id_.IsDefault()) {
          _this->_internal_set_table_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.options_ != nullptr);
      if (_this->_impl_.options_ == nullptr) {
        _this->_impl_.options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_);
      } else {
        _this->_impl_.options_->MergeFrom(*from._impl_.options_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_roll_count() != 0) {
        _this->_impl_.roll_count_ = from._impl_.roll_count_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RollWithModifiersRequest::CopyFrom(const RollWithModifiersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.RollWithModifiersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RollWithModifiersRequest::InternalSwap(RollWithModifiersRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.modifiers_.InternalSwap(&other->_impl_.modifiers_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.table_id_, &other->_impl_.table_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RollWithModifiersRequest, _impl_.roll_count_)
      + sizeof(RollWithModifiersRequest::_impl_.roll_count_)
      - PROTOBUF_FIELD_OFFSET(RollWithModifiersRequest, _impl_.options_)>(
          reinterpret_cast<char*>(&_impl_.options_),
          reinterpret_cast<char*>(&other->_impl_.options_));
}

::google::protobuf::Metadata RollWithModifiersRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RollWithModifiersResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RollWithModifiersResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RollWithModifiersResponse, _impl_._has_bits_);
};

RollWithModifiersResponse::RollWithModifiersResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RollWithModifiersResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.RollWithModifiersResponse)
}
PROTOBUF_NDEBUG_INLINE RollWithModifiersResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::RollWithModifiersResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        results_{visibility, arena, from.results_},
        modifier_effects_{visibility, arena, from.modifier_effects_} {}

RollWithModifiersResponse::RollWithModifiersResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RollWithModifiersResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RollWithModifiersResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RollWithModifiersResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.roll_stats_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.roll_stats_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.RollWithModifiersResponse)
}
PROTOBUF_NDEBUG_INLINE RollWithModifiersResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        results_{visibility, arena},
        modifier_effects_{visibility, arena} {}

inline void RollWithModifiersResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.roll_stats_ = {};
}
RollWithModifiersResponse::~RollWithModifiersResponse() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.RollWithModifiersResponse)
  SharedDtor(*this);
}
inline void RollWithModifiersResponse::SharedDtor(MessageLite& self) {
  RollWithModifiersResponse& this_ = static_cast<RollWithModifiersResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.roll_stats_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RollWithModifiersResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RollWithModifiersResponse(arena);
}
constexpr auto RollWithModifiersResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RollWithModifiersResponse, _impl_.results_) +
          decltype(RollWithModifiersResponse::_impl_.results_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RollWithModifiersResponse, _impl_.modifier_effects_) +
          decltype(RollWithModifiersResponse::_impl_.modifier_effects_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(RollWithModifiersResponse), alignof(RollWithModifiersResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RollWithModifiersResponse::PlacementNew_,
                                 sizeof(RollWithModifiersResponse),
                                 alignof(RollWithModifiersResponse));
  }
}
constexpr auto RollWithModifiersResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RollWithModifiersResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RollWithModifiersResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RollWithModifiersResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RollWithModifiersResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RollWithModifiersResponse>(), &RollWithModifiersResponse::ByteSizeLong,
              &RollWithModifiersResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RollWithModifiersResponse, _impl_._cached_size_),
          false,
      },
      &RollWithModifiersResponse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RollWithModifiersResponse_class_data_ =
        RollWithModifiersResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RollWithModifiersResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RollWithModifiersResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RollWithModifiersResponse_class_data_.tc_table);
  return RollWithModifiersResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
RollWithModifiersResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RollWithModifiersResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RollWithModifiersResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::RollWithModifiersResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .api.v1alpha1.RollResult results = 1 [json_name = "results"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RollWithModifiersResponse, _impl_.results_)}},
    // repeated .api.v1alpha1.ModifierEffect modifier_effects = 2 [json_name = "modifierEffects"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(RollWithModifiersResponse, _impl_.modifier_effects_)}},
    // .api.v1alpha1.RollStats roll_stats = 3 [json_name = "rollStats"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 2, PROTOBUF_FIELD_OFFSET(RollWithModifiersResponse, _impl_.roll_stats_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .api.v1alpha1.RollResult results = 1 [json_name = "results"];
    {PROTOBUF_FIELD_OFFSET(RollWithModifiersResponse, _impl_.results_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .api.v1alpha1.ModifierEffect modifier_effects = 2 [json_name = "modifierEffects"];
    {PROTOBUF_FIELD_OFFSET(RollWithModifiersResponse, _impl_.modifier_effects_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.RollStats roll_stats = 3 [json_name = "rollStats"];
    {PROTOBUF_FIELD_OFFSET(RollWithModifiersResponse, _impl_.roll_stats_), _Internal::kHasBitsOffset + 0, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RollResult>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::ModifierEffect>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RollStats>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void RollWithModifiersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.RollWithModifiersResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.results_.Clear();
  _impl_.modifier_effects_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.roll_stats_ != nullptr);
    _impl_.roll_stats_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RollWithModifiersResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RollWithModifiersResponse& this_ = static_cast<const RollWithModifiersResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RollWithModifiersResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RollWithModifiersResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.RollWithModifiersResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .api.v1alpha1.RollResult results = 1 [json_name = "results"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_results_size());
       i < n; i++) {
    const auto& repfield = this_._internal_results().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .api.v1alpha1.ModifierEffect modifier_effects = 2 [json_name = "modifierEffects"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_modifier_effects_size());
       i < n; i++) {
    const auto& repfield = this_._internal_modifier_effects().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.RollStats roll_stats = 3 [json_name = "rollStats"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.roll_stats_, this_._impl_.roll_stats_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.RollWithModifiersResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RollWithModifiersResponse::ByteSizeLong(const MessageLite& base) {
  const RollWithModifiersResponse& this_ = static_cast<const RollWithModifiersResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RollWithModifiersResponse::ByteSizeLong() const {
  const RollWithModifiersResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.RollWithModifiersResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.RollResult results = 1 [json_name = "results"];
    {
      total_size += 1UL * this_._internal_results_size();
      for (const auto& msg : this_._internal_results()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .api.v1alpha1.ModifierEffect modifier_effects = 2 [json_name = "modifierEffects"];
    {
      total_size += 1UL * this_._internal_modifier_effects_size();
      for (const auto& msg : this_._internal_modifier_effects()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // .api.v1alpha1.RollStats roll_stats = 3 [json_name = "rollStats"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.roll_stats_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RollWithModifiersResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RollWithModifiersResponse*>(&to_msg);
  auto& from = static_cast<const RollWithModifiersResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.RollWithModifiersResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_results()->MergeFrom(
      from._internal_results());
  _this->_internal_mutable_modifier_effects()->MergeFrom(
      from._internal_modifier_effects());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(from._impl_.roll_stats_ != nullptr);
    if (_this->_impl_.roll_stats_ == nullptr) {
      _this->_impl_.roll_stats_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.roll_stats_);
    } else {
      _this->_impl_.roll_stats_->MergeFrom(*from._impl_.roll_stats_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RollWithModifiersResponse::CopyFrom(const RollWithModifiersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.RollWithModifiersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RollWithModifiersResponse::InternalSwap(RollWithModifiersResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.results_.InternalSwap(&other->_impl_.results_);
  _impl_.modifier_effects_.InternalSwap(&other->_impl_.modifier_effects_);
  swap(_impl_.roll_stats_, other->_impl_.roll_stats_);
}

::google::protobuf::Metadata RollWithModifiersResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ModifierEffect::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ModifierEffect>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ModifierEffect, _impl_._has_bits_);
};

ModifierEffect::ModifierEffect(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModifierEffect_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.ModifierEffect)
}
PROTOBUF_NDEBUG_INLINE ModifierEffect::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::ModifierEffect& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        effect_description_(arena, from.effect_description_) {}

ModifierEffect::ModifierEffect(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ModifierEffect& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModifierEffect_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ModifierEffect* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.modifier_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.modifier_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, average_change_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, average_change_),
           offsetof(Impl_, rolls_affected_) -
               offsetof(Impl_, average_change_) +
               sizeof(Impl_::rolls_affected_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.ModifierEffect)
}
PROTOBUF_NDEBUG_INLINE ModifierEffect::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        effect_description_(arena) {}

inline void ModifierEffect::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, modifier_),
           0,
           offsetof(Impl_, rolls_affected_) -
               offsetof(Impl_, modifier_) +
               sizeof(Impl_::rolls_affected_));
}
ModifierEffect::~ModifierEffect() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.ModifierEffect)
  SharedDtor(*this);
}
inline void ModifierEffect::SharedDtor(MessageLite& self) {
  ModifierEffect& this_ = static_cast<ModifierEffect&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.effect_description_.Destroy();
  delete this_._impl_.modifier_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ModifierEffect::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ModifierEffect(arena);
}
constexpr auto ModifierEffect::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ModifierEffect),
                                            alignof(ModifierEffect));
}
constexpr auto ModifierEffect::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ModifierEffect_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ModifierEffect::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ModifierEffect>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ModifierEffect::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ModifierEffect>(), &ModifierEffect::ByteSizeLong,
              &ModifierEffect::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ModifierEffect, _impl_._cached_size_),
          false,
      },
      &ModifierEffect::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ModifierEffect_class_data_ =
        ModifierEffect::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ModifierEffect::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ModifierEffect_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ModifierEffect_class_data_.tc_table);
  return ModifierEffect_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 54, 2>
ModifierEffect::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ModifierEffect, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ModifierEffect_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::ModifierEffect>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string effect_description = 4 [json_name = "effectDescription"];
    {::_pbi::TcParser::FastUS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(ModifierEffect, _impl_.effect_description_)}},
    // .api.v1alpha1.RollModifier modifier = 1 [json_name = "modifier"];
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0, PROTOBUF_FIELD_OFFSET(ModifierEffect, _impl_.modifier_)}},
    // int32 rolls_affected = 2 [json_name = "rollsAffected"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModifierEffect, _impl_.rolls_affected_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(ModifierEffect, _impl_.rolls_affected_)}},
    // double average_change = 3 [json_name = "averageChange"];
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(ModifierEffect, _impl_.average_change_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .api.v1alpha1.RollModifier modifier = 1 [json_name = "modifier"];
    {PROTOBUF_FIELD_OFFSET(ModifierEffect, _impl_.modifier_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 rolls_affected = 2 [json_name = "rollsAffected"];
    {PROTOBUF_FIELD_OFFSET(ModifierEffect, _impl_.rolls_affected_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // double average_change = 3 [json_name = "averageChange"];
    {PROTOBUF_FIELD_OFFSET(ModifierEffect, _impl_.average_change_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // string effect_description = 4 [json_name = "effectDescription"];
    {PROTOBUF_FIELD_OFFSET(ModifierEffect, _impl_.effect_description_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RollModifier>()},
  }},
  {{
    "\33\0\0\0\22\0\0\0"
    "api.v1alpha1.ModifierEffect"
    "effect_description"
  }},
};
PROTOBUF_NOINLINE void ModifierEffect::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.ModifierEffect)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.effect_description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.modifier_ != nullptr);
      _impl_.modifier_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000000cU) != 0) {
    ::memset(&_impl_.average_change_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.rolls_affected_) -
        reinterpret_cast<char*>(&_impl_.average_change_)) + sizeof(_impl_.rolls_affected_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ModifierEffect::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ModifierEffect& this_ = static_cast<const ModifierEffect&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ModifierEffect::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ModifierEffect& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.ModifierEffect)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.RollModifier modifier = 1 [json_name = "modifier"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.modifier_, this_._impl_.modifier_->GetCachedSize(), target,
        stream);
  }

  // int32 rolls_affected = 2 [json_name = "rollsAffected"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    if (this_._internal_rolls_affected() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_rolls_affected(), target);
    }
  }

  // double average_change = 3 [json_name = "averageChange"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_average_change()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_average_change(), target);
    }
  }

  // string effect_description = 4 [json_name = "effectDescription"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!this_._internal_effect_description().empty()) {
      const ::std::string& _s = this_._internal_effect_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.ModifierEffect.effect_description");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.ModifierEffect)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ModifierEffect::ByteSizeLong(const MessageLite& base) {
  const ModifierEffect& this_ = static_cast<const ModifierEffect&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ModifierEffect::ByteSizeLong() const {
  const ModifierEffect& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.ModifierEffect)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string effect_description = 4 [json_name = "effectDescription"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_effect_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_effect_description());
      }
    }
    // .api.v1alpha1.RollModifier modifier = 1 [json_name = "modifier"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.modifier_);
    }
    // double average_change = 3 [json_name = "averageChange"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_average_change()) != 0) {
        total_size += 9;
      }
    }
    // int32 rolls_affected = 2 [json_name = "rollsAffected"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_rolls_affected() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_rolls_affected());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ModifierEffect::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ModifierEffect*>(&to_msg);
  auto& from = static_cast<const ModifierEffect&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.ModifierEffect)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_effect_description().empty()) {
        _this->_internal_set_effect_description(from._internal_effect_description());
      } else {
        if (_this->_impl_.effect_description_.IsDefault()) {
          _this->_internal_set_effect_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.modifier_ != nullptr);
      if (_this->_impl_.modifier_ == nullptr) {
        _this->_impl_.modifier_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.modifier_);
      } else {
        _this->_impl_.modifier_->MergeFrom(*from._impl_.modifier_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_average_change()) != 0) {
        _this->_impl_.average_change_ = from._impl_.average_change_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_rolls_affected() != 0) {
        _this->_impl_.rolls_affected_ = from._impl_.rolls_affected_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModifierEffect::CopyFrom(const ModifierEffect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.ModifierEffect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ModifierEffect::InternalSwap(ModifierEffect* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.effect_description_, &other->_impl_.effect_description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModifierEffect, _impl_.rolls_affected_)
      + sizeof(ModifierEffect::_impl_.rolls_affected_)
      - PROTOBUF_FIELD_OFFSET(ModifierEffect, _impl_.modifier_)>(
          reinterpret_cast<char*>(&_impl_.modifier_),
          reinterpret_cast<char*>(&other->_impl_.modifier_));
}

::google::protobuf::Metadata ModifierEffect::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BatchRollTablesRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<BatchRollTablesRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BatchRollTablesRequest, _impl_._has_bits_);
};

BatchRollTablesRequest::BatchRollTablesRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BatchRollTablesRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.BatchRollTablesRequest)
}
PROTOBUF_NDEBUG_INLINE BatchRollTablesRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::BatchRollTablesRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        roll_operations_{visibility, arena, from.roll_operations_} {}

BatchRollTablesRequest::BatchRollTablesRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const BatchRollTablesRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BatchRollTablesRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BatchRollTablesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.batch_options_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.batch_options_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.BatchRollTablesRequest)
}
PROTOBUF_NDEBUG_INLINE BatchRollTablesRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        roll_operations_{visibility, arena} {}

inline void BatchRollTablesRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.batch_options_ = {};
}
BatchRollTablesRequest::~BatchRollTablesRequest() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.BatchRollTablesRequest)
  SharedDtor(*this);
}
inline void BatchRollTablesRequest::SharedDtor(MessageLite& self) {
  BatchRollTablesRequest& this_ = static_cast<BatchRollTablesRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.batch_options_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL BatchRollTablesRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) BatchRollTablesRequest(arena);
}
constexpr auto BatchRollTablesRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(BatchRollTablesRequest, _impl_.roll_operations_) +
          decltype(BatchRollTablesRequest::_impl_.roll_operations_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(BatchRollTablesRequest), alignof(BatchRollTablesRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&BatchRollTablesRequest::PlacementNew_,
                                 sizeof(BatchRollTablesRequest),
                                 alignof(BatchRollTablesRequest));
  }
}
constexpr auto BatchRollTablesRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_BatchRollTablesRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &BatchRollTablesRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<BatchRollTablesRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &BatchRollTablesRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<BatchRollTablesRequest>(), &BatchRollTablesRequest::ByteSizeLong,
              &BatchRollTablesRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(BatchRollTablesRequest, _impl_._cached_size_),
          false,
      },
      &BatchRollTablesRequest::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull BatchRollTablesRequest_class_data_ =
        BatchRollTablesRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
BatchRollTablesRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&BatchRollTablesRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(BatchRollTablesRequest_class_data_.tc_table);
  return BatchRollTablesRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
BatchRollTablesRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BatchRollTablesRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    BatchRollTablesRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::BatchRollTablesRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .api.v1alpha1.BatchRollOptions batch_options = 2 [json_name = "batchOptions"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(BatchRollTablesRequest, _impl_.batch_options_)}},
    // repeated .api.v1alpha1.BatchRollOperation roll_operations = 1 [json_name = "rollOperations"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BatchRollTablesRequest, _impl_.roll_operations_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .api.v1alpha1.BatchRollOperation roll_operations = 1 [json_name = "rollOperations"];
    {PROTOBUF_FIELD_OFFSET(BatchRollTablesRequest, _impl_.roll_operations_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.BatchRollOptions batch_options = 2 [json_name = "batchOptions"];
    {PROTOBUF_FIELD_OFFSET(BatchRollTablesRequest, _impl_.batch_options_), _Internal::kHasBitsOffset + 0, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::BatchRollOperation>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::BatchRollOptions>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void BatchRollTablesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.BatchRollTablesRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.roll_operations_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.batch_options_ != nullptr);
    _impl_.batch_options_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL BatchRollTablesRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const BatchRollTablesRequest& this_ = static_cast<const BatchRollTablesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL BatchRollTablesRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const BatchRollTablesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.BatchRollTablesRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .api.v1alpha1.BatchRollOperation roll_operations = 1 [json_name = "rollOperations"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_roll_operations_size());
       i < n; i++) {
    const auto& repfield = this_._internal_roll_operations().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.BatchRollOptions batch_options = 2 [json_name = "batchOptions"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.batch_options_, this_._impl_.batch_options_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.BatchRollTablesRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t BatchRollTablesRequest::ByteSizeLong(const MessageLite& base) {
  const BatchRollTablesRequest& this_ = static_cast<const BatchRollTablesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t BatchRollTablesRequest::ByteSizeLong() const {
  const BatchRollTablesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.BatchRollTablesRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.BatchRollOperation roll_operations = 1 [json_name = "rollOperations"];
    {
      total_size += 1UL * this_._internal_roll_operations_size();
      for (const auto& msg : this_._internal_roll_operations()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // .api.v1alpha1.BatchRollOptions batch_options = 2 [json_name = "batchOptions"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.batch_options_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void BatchRollTablesRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BatchRollTablesRequest*>(&to_msg);
  auto& from = static_cast<const BatchRollTablesRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.BatchRollTablesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_roll_operations()->MergeFrom(
      from._internal_roll_operations());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(from._impl_.batch_options_ != nullptr);
    if (_this->_impl_.batch_options_ == nullptr) {
      _this->_impl_.batch_options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.batch_options_);
    } else {
      _this->_impl_.batch_options_->MergeFrom(*from._impl_.batch_options_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BatchRollTablesRequest::CopyFrom(const BatchRollTablesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.BatchRollTablesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BatchRollTablesRequest::InternalSwap(BatchRollTablesRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.roll_operations_.InternalSwap(&other->_impl_.roll_operations_);
  swap(_impl_.batch_options_, other->_impl_.batch_options_);
}

::google::protobuf::Metadata BatchRollTablesRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
BatchRollOperation_ParametersEntry_DoNotUse::BatchRollOperation_ParametersEntry_DoNotUse()
    : SuperType(BatchRollOperation_ParametersEntry_DoNotUse_class_data_.base()) {}
BatchRollOperation_ParametersEntry_DoNotUse::BatchRollOperation_ParametersEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, BatchRollOperation_ParametersEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
BatchRollOperation_ParametersEntry_DoNotUse::BatchRollOperation_ParametersEntry_DoNotUse() : SuperType() {}
BatchRollOperation_ParametersEntry_DoNotUse::BatchRollOperation_ParametersEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL BatchRollOperation_ParametersEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) BatchRollOperation_ParametersEntry_DoNotUse(arena);
}
constexpr auto BatchRollOperation_ParametersEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(BatchRollOperation_ParametersEntry_DoNotUse),
                                            alignof(BatchRollOperation_ParametersEntry_DoNotUse));
}
constexpr auto BatchRollOperation_ParametersEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_BatchRollOperation_ParametersEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &BatchRollOperation_ParametersEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<BatchRollOperation_ParametersEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &BatchRollOperation_ParametersEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&BatchRollOperation_ParametersEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(BatchRollOperation_ParametersEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &BatchRollOperation_ParametersEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull BatchRollOperation_ParametersEntry_DoNotUse_class_data_ =
        BatchRollOperation_ParametersEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
BatchRollOperation_ParametersEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&BatchRollOperation_ParametersEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(BatchRollOperation_ParametersEntry_DoNotUse_class_data_.tc_table);
  return BatchRollOperation_ParametersEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 64, 2>
BatchRollOperation_ParametersEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BatchRollOperation_ParametersEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    BatchRollOperation_ParametersEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::BatchRollOperation_ParametersEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(BatchRollOperation_ParametersEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(BatchRollOperation_ParametersEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(BatchRollOperation_ParametersEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(BatchRollOperation_ParametersEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\57\3\5\0\0\0\0\0"
    "api.v1alpha1.BatchRollOperation.ParametersEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class BatchRollOperation::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<BatchRollOperation>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BatchRollOperation, _impl_._has_bits_);
};

BatchRollOperation::BatchRollOperation(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BatchRollOperation_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.BatchRollOperation)
}
PROTOBUF_NDEBUG_INLINE BatchRollOperation::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::BatchRollOperation& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        parameters_{visibility, arena, from.parameters_},
        operation_id_(arena, from.operation_id_),
        table_id_(arena, from.table_id_) {}

BatchRollOperation::BatchRollOperation(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const BatchRollOperation& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BatchRollOperation_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BatchRollOperation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.options_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_)
                : nullptr;
  _impl_.roll_count_ = from._impl_.roll_count_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.BatchRollOperation)
}
PROTOBUF_NDEBUG_INLINE BatchRollOperation::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        parameters_{visibility, arena},
        operation_id_(arena),
        table_id_(arena) {}

inline void BatchRollOperation::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, options_),
           0,
           offsetof(Impl_, roll_count_) -
               offsetof(Impl_, options_) +
               sizeof(Impl_::roll_count_));
}
BatchRollOperation::~BatchRollOperation() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.BatchRollOperation)
  SharedDtor(*this);
}
inline void BatchRollOperation::SharedDtor(MessageLite& self) {
  BatchRollOperation& this_ = static_cast<BatchRollOperation&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.operation_id_.Destroy();
  this_._impl_.table_id_.Destroy();
  delete this_._impl_.options_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL BatchRollOperation::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) BatchRollOperation(arena);
}
constexpr auto BatchRollOperation::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(BatchRollOperation, _impl_.parameters_) +
          decltype(BatchRollOperation::_impl_.parameters_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BatchRollOperation, _impl_.parameters_) +
          decltype(BatchRollOperation::_impl_.parameters_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(BatchRollOperation), alignof(BatchRollOperation), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&BatchRollOperation::PlacementNew_,
                                 sizeof(BatchRollOperation),
                                 alignof(BatchRollOperation));
  }
}
constexpr auto BatchRollOperation::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_BatchRollOperation_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &BatchRollOperation::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<BatchRollOperation>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &BatchRollOperation::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<BatchRollOperation>(), &BatchRollOperation::ByteSizeLong,
              &BatchRollOperation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(BatchRollOperation, _impl_._cached_size_),
          false,
      },
      &BatchRollOperation::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull BatchRollOperation_class_data_ =
        BatchRollOperation::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
BatchRollOperation::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&BatchRollOperation_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(BatchRollOperation_class_data_.tc_table);
  return BatchRollOperation_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 70, 2>
BatchRollOperation::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BatchRollOperation, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    BatchRollOperation_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::BatchRollOperation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string operation_id = 1 [json_name = "operationId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(BatchRollOperation, _impl_.operation_id_)}},
    // string table_id = 2 [json_name = "tableId"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(BatchRollOperation, _impl_.table_id_)}},
    // int32 roll_count = 3 [json_name = "rollCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BatchRollOperation, _impl_.roll_count_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(BatchRollOperation, _impl_.roll_count_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .api.v1alpha1.RollOptions options = 5 [json_name = "options"];
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(BatchRollOperation, _impl_.options_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string operation_id = 1 [json_name = "operationId"];
    {PROTOBUF_FIELD_OFFSET(BatchRollOperation, _impl_.operation_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string table_id = 2 [json_name = "tableId"];
    {PROTOBUF_FIELD_OFFSET(BatchRollOperation, _impl_.table_id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 roll_count = 3 [json_name = "rollCount"];
    {PROTOBUF_FIELD_OFFSET(BatchRollOperation, _impl_.roll_count_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // map<string, string> parameters = 4 [json_name = "parameters"];
    {PROTOBUF_FIELD_OFFSET(BatchRollOperation, _impl_.parameters_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // .api.v1alpha1.RollOptions options = 5 [json_name = "options"];
    {PROTOBUF_FIELD_OFFSET(BatchRollOperation, _impl_.options_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RollOptions>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\37\14\10\0\12\0\0\0"
    "api.v1alpha1.BatchRollOperation"
    "operation_id"
    "table_id"
    "parameters"
  }},
};
PROTOBUF_NOINLINE void BatchRollOperation::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.BatchRollOperation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parameters_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.operation_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.table_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.options_ != nullptr);
      _impl_.options_->Clear();
    }
  }
  _impl_.roll_count_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL BatchRollOperation::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const BatchRollOperation& this_ = static_cast<const BatchRollOperation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL BatchRollOperation::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const BatchRollOperation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.BatchRollOperation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string operation_id = 1 [json_name = "operationId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_operation_id().empty()) {
      const ::std::string& _s = this_._internal_operation_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.BatchRollOperation.operation_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string table_id = 2 [json_name = "tableId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_table_id().empty()) {
      const ::std::string& _s = this_._internal_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.BatchRollOperation.table_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int32 roll_count = 3 [json_name = "rollCount"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_roll_count() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_roll_count(), target);
    }
  }

  // map<string, string> parameters = 4 [json_name = "parameters"];
  if (!this_._internal_parameters().empty()) {
    using MapType = ::google::protobuf::Map<::std::string, ::std::string>;
    using WireHelper = _pbi::MapEntryFuncs<::std::string, ::std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_parameters();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.BatchRollOperation.parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.BatchRollOperation.parameters");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.BatchRollOperation.parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.BatchRollOperation.parameters");
      }
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.RollOptions options = 5 [json_name = "options"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.options_, this_._impl_.options_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.BatchRollOperation)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t BatchRollOperation::ByteSizeLong(const MessageLite& base) {
  const BatchRollOperation& this_ = static_cast<const BatchRollOperation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t BatchRollOperation::ByteSizeLong() const {
  const BatchRollOperation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.BatchRollOperation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, string> parameters = 4 [json_name = "parameters"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_parameters_size());
      for (const auto& entry : this_._internal_parameters()) {
        total_size += _pbi::MapEntryFuncs<::std::string, ::std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string operation_id = 1 [json_name = "operationId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_operation_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_operation_id());
      }
    }
    // string table_id = 2 [json_name = "tableId"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_table_id());
      }
    }
    // .api.v1alpha1.RollOptions options = 5 [json_name = "options"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.options_);
    }
    // int32 roll_count = 3 [json_name = "rollCount"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_roll_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_roll_count());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void BatchRollOperation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BatchRollOperation*>(&to_msg);
  auto& from = static_cast<const BatchRollOperation&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.BatchRollOperation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_operation_id().empty()) {
        _this->_internal_set_operation_id(from._internal_operation_id());
      } else {
        if (_this->_impl_.operation_id_.IsDefault()) {
          _this->_internal_set_operation_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_table_id().empty()) {
        _this->_internal_set_table_id(from._internal_table_id());
      } else {
        if (_this->_impl_.table_id_.IsDefault()) {
          _this->_internal_set_table_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.options_ != nullptr);
      if (_this->_impl_.options_ == nullptr) {
        _this->_impl_.options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_);
      } else {
        _this->_impl_.options_->MergeFrom(*from._impl_.options_);
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_roll_count() != 0) {
        _this->_impl_.roll_count_ = from._impl_.roll_count_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BatchRollOperation::CopyFrom(const BatchRollOperation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.BatchRollOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BatchRollOperation::InternalSwap(BatchRollOperation* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.parameters_.InternalSwap(&other->_impl_.parameters_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.operation_id_, &other->_impl_.operation_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.table_id_, &other->_impl_.table_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BatchRollOperation, _impl_.roll_count_)
      + sizeof(BatchRollOperation::_impl_.roll_count_)
      - PROTOBUF_FIELD_OFFSET(BatchRollOperation, _impl_.options_)>(
          reinterpret_cast<char*>(&_impl_.options_),
          reinterpret_cast<char*>(&other->_impl_.options_));
}

::google::protobuf::Metadata BatchRollOperation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BatchRollOptions::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<BatchRollOptions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BatchRollOptions, _impl_._has_bits_);
};

BatchRollOptions::BatchRollOptions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BatchRollOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.BatchRollOptions)
}
BatchRollOptions::BatchRollOptions(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BatchRollOptions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BatchRollOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE BatchRollOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void BatchRollOptions::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timeout_ms_),
           0,
           offsetof(Impl_, correlate_across_operations_) -
               offsetof(Impl_, timeout_ms_) +
               sizeof(Impl_::correlate_across_operations_));
}
BatchRollOptions::~BatchRollOptions() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.BatchRollOptions)
  SharedDtor(*this);
}
inline void BatchRollOptions::SharedDtor(MessageLite& self) {
  BatchRollOptions& this_ = static_cast<BatchRollOptions&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL BatchRollOptions::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) BatchRollOptions(arena);
}
constexpr auto BatchRollOptions::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BatchRollOptions),
                                            alignof(BatchRollOptions));
}
constexpr auto BatchRollOptions::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_BatchRollOptions_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &BatchRollOptions::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<BatchRollOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &BatchRollOptions::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<BatchRollOptions>(), &BatchRollOptions::ByteSizeLong,
              &BatchRollOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(BatchRollOptions, _impl_._cached_size_),
          false,
      },
      &BatchRollOptions::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull BatchRollOptions_class_data_ =
        BatchRollOptions::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
BatchRollOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&BatchRollOptions_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(BatchRollOptions_class_data_.tc_table);
  return BatchRollOptions_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2>
BatchRollOptions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BatchRollOptions, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    BatchRollOptions_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::BatchRollOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool correlate_across_operations = 4 [json_name = "correlateAcrossOperations"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(BatchRollOptions, _impl_.correlate_across_operations_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(BatchRollOptions, _impl_.correlate_across_operations_)}},
    // bool parallel_execution = 1 [json_name = "parallelExecution"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(BatchRollOptions, _impl_.parallel_execution_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(BatchRollOptions, _impl_.parallel_execution_)}},
    // int32 timeout_ms = 2 [json_name = "timeoutMs"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BatchRollOptions, _impl_.timeout_ms_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(BatchRollOptions, _impl_.timeout_ms_)}},
    // bool all_or_nothing = 3 [json_name = "allOrNothing"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(BatchRollOptions, _impl_.all_or_nothing_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(BatchRollOptions, _impl_.all_or_nothing_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool parallel_execution = 1 [json_name = "parallelExecution"];
    {PROTOBUF_FIELD_OFFSET(BatchRollOptions, _impl_.parallel_execution_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // int32 timeout_ms = 2 [json_name = "timeoutMs"];
    {PROTOBUF_FIELD_OFFSET(BatchRollOptions, _impl_.timeout_ms_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // bool all_or_nothing = 3 [json_name = "allOrNothing"];
    {PROTOBUF_FIELD_OFFSET(BatchRollOptions, _impl_.all_or_nothing_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool correlate_across_operations = 4 [json_name = "correlateAcrossOperations"];
    {PROTOBUF_FIELD_OFFSET(BatchRollOptions, _impl_.correlate_across_operations_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void BatchRollOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.BatchRollOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    ::memset(&_impl_.timeout_ms_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.correlate_across_operations_) -
        reinterpret_cast<char*>(&_impl_.timeout_ms_)) + sizeof(_impl_.correlate_across_operations_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL BatchRollOptions::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const BatchRollOptions& this_ = static_cast<const BatchRollOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL BatchRollOptions::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const BatchRollOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.BatchRollOptions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool parallel_execution = 1 [json_name = "parallelExecution"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_parallel_execution() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_parallel_execution(), target);
    }
  }

  // int32 timeout_ms = 2 [json_name = "timeoutMs"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_timeout_ms() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_timeout_ms(), target);
    }
  }

  // bool all_or_nothing = 3 [json_name = "allOrNothing"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_all_or_nothing() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_all_or_nothing(), target);
    }
  }

  // bool correlate_across_operations = 4 [json_name = "correlateAcrossOperations"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_correlate_across_operations() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_correlate_across_operations(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.BatchRollOptions)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t BatchRollOptions::ByteSizeLong(const MessageLite& base) {
  const BatchRollOptions& this_ = static_cast<const BatchRollOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t BatchRollOptions::ByteSizeLong() const {
  const BatchRollOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.BatchRollOptions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // int32 timeout_ms = 2 [json_name = "timeoutMs"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_timeout_ms() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_timeout_ms());
      }
    }
    // bool parallel_execution = 1 [json_name = "parallelExecution"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_parallel_execution() != 0) {
        total_size += 2;
      }
    }
    // bool all_or_nothing = 3 [json_name = "allOrNothing"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_all_or_nothing() != 0) {
        total_size += 2;
      }
    }
    // bool correlate_across_operations = 4 [json_name = "correlateAcrossOperations"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_correlate_across_operations() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void BatchRollOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BatchRollOptions*>(&to_msg);
  auto& from = static_cast<const BatchRollOptions&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.BatchRollOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (from._internal_timeout_ms() != 0) {
        _this->_impl_.timeout_ms_ = from._impl_.timeout_ms_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_parallel_execution() != 0) {
        _this->_impl_.parallel_execution_ = from._impl_.parallel_execution_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_all_or_nothing() != 0) {
        _this->_impl_.all_or_nothing_ = from._impl_.all_or_nothing_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_correlate_across_operations() != 0) {
        _this->_impl_.correlate_across_operations_ = from._impl_.correlate_across_operations_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BatchRollOptions::CopyFrom(const BatchRollOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.BatchRollOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BatchRollOptions::InternalSwap(BatchRollOptions* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BatchRollOptions, _impl_.correlate_across_operations_)
      + sizeof(BatchRollOptions::_impl_.correlate_across_operations_)
      - PROTOBUF_FIELD_OFFSET(BatchRollOptions, _impl_.timeout_ms_)>(
          reinterpret_cast<char*>(&_impl_.timeout_ms_),
          reinterpret_cast<char*>(&other->_impl_.timeout_ms_));
}

::google::protobuf::Metadata BatchRollOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BatchRollTablesResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<BatchRollTablesResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BatchRollTablesResponse, _impl_._has_bits_);
};

BatchRollTablesResponse::BatchRollTablesResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BatchRollTablesResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.BatchRollTablesResponse)
}
PROTOBUF_NDEBUG_INLINE BatchRollTablesResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::BatchRollTablesResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        successful_operations_{visibility, arena, from.successful_operations_},
        failed_operations_{visibility, arena, from.failed_operations_},
        correlations_{visibility, arena, from.correlations_} {}

BatchRollTablesResponse::BatchRollTablesResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const BatchRollTablesResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BatchRollTablesResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BatchRollTablesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.batch_stats_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.batch_stats_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.BatchRollTablesResponse)
}
PROTOBUF_NDEBUG_INLINE BatchRollTablesResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        successful_operations_{visibility, arena},
        failed_operations_{visibility, arena},
        correlations_{visibility, arena} {}

inline void BatchRollTablesResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.batch_stats_ = {};
}
BatchRollTablesResponse::~BatchRollTablesResponse() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.BatchRollTablesResponse)
  SharedDtor(*this);
}
inline void BatchRollTablesResponse::SharedDtor(MessageLite& self) {
  BatchRollTablesResponse& this_ = static_cast<BatchRollTablesResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.batch_stats_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL BatchRollTablesResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) BatchRollTablesResponse(arena);
}
constexpr auto BatchRollTablesResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(BatchRollTablesResponse, _impl_.successful_operations_) +
          decltype(BatchRollTablesResponse::_impl_.successful_operations_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BatchRollTablesResponse, _impl_.failed_operations_) +
          decltype(BatchRollTablesResponse::_impl_.failed_operations_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BatchRollTablesResponse, _impl_.correlations_) +
          decltype(BatchRollTablesResponse::_impl_.correlations_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(BatchRollTablesResponse), alignof(BatchRollTablesResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&BatchRollTablesResponse::PlacementNew_,
                                 sizeof(BatchRollTablesResponse),
                                 alignof(BatchRollTablesResponse));
  }
}
constexpr auto BatchRollTablesResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_BatchRollTablesResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &BatchRollTablesResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<BatchRollTablesResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &BatchRollTablesResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<BatchRollTablesResponse>(), &BatchRollTablesResponse::ByteSizeLong,
              &BatchRollTablesResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(BatchRollTablesResponse, _impl_._cached_size_),
          false,
      },
      &BatchRollTablesResponse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull BatchRollTablesResponse_class_data_ =
        BatchRollTablesResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
BatchRollTablesResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&BatchRollTablesResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(BatchRollTablesResponse_class_data_.tc_table);
  return BatchRollTablesResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2>
BatchRollTablesResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BatchRollTablesResponse, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    BatchRollTablesResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::BatchRollTablesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .api.v1alpha1.OperationCorrelation correlations = 4 [json_name = "correlations"];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 3, PROTOBUF_FIELD_OFFSET(BatchRollTablesResponse, _impl_.correlations_)}},
    // repeated .api.v1alpha1.BatchRollResult successful_operations = 1 [json_name = "successfulOperations"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BatchRollTablesResponse, _impl_.successful_operations_)}},
    // repeated .api.v1alpha1.BatchRollFailure failed_operations = 2 [json_name = "failedOperations"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(BatchRollTablesResponse, _impl_.failed_operations_)}},
    // .api.v1alpha1.BatchRollStats batch_stats = 3 [json_name = "batchStats"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 2, PROTOBUF_FIELD_OFFSET(BatchRollTablesResponse, _impl_.batch_stats_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .api.v1alpha1.BatchRollResult successful_operations = 1 [json_name = "successfulOperations"];
    {PROTOBUF_FIELD_OFFSET(BatchRollTablesResponse, _impl_.successful_operations_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .api.v1alpha1.BatchRollFailure failed_operations = 2 [json_name = "failedOperations"];
    {PROTOBUF_FIELD_OFFSET(BatchRollTablesResponse, _impl_.failed_operations_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.BatchRollStats batch_stats = 3 [json_name = "batchStats"];
    {PROTOBUF_FIELD_OFFSET(BatchRollTablesResponse, _impl_.batch_stats_), _Internal::kHasBitsOffset + 0, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .api.v1alpha1.OperationCorrelation correlations = 4 [json_name = "correlations"];
    {PROTOBUF_FIELD_OFFSET(BatchRollTablesResponse, _impl_.correlations_), -1, 3, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::BatchRollResult>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::BatchRollFailure>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::BatchRollStats>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::OperationCorrelation>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void BatchRollTablesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.BatchRollTablesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.successful_operations_.Clear();
  _impl_.failed_operations_.Clear();
  _impl_.correlations_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.batch_stats_ != nullptr);
    _impl_.batch_stats_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL BatchRollTablesResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const BatchRollTablesResponse& this_ = static_cast<const BatchRollTablesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL BatchRollTablesResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const BatchRollTablesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.BatchRollTablesResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .api.v1alpha1.BatchRollResult successful_operations = 1 [json_name = "successfulOperations"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_successful_operations_size());
       i < n; i++) {
    const auto& repfield = this_._internal_successful_operations().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .api.v1alpha1.BatchRollFailure failed_operations = 2 [json_name = "failedOperations"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_failed_operations_size());
       i < n; i++) {
    const auto& repfield = this_._internal_failed_operations().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.BatchRollStats batch_stats = 3 [json_name = "batchStats"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.batch_stats_, this_._impl_.batch_stats_->GetCachedSize(), target,
        stream);
  }

  // repeated .api.v1alpha1.OperationCorrelation correlations = 4 [json_name = "correlations"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_correlations_size());
       i < n; i++) {
    const auto& repfield = this_._internal_correlations().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.BatchRollTablesResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t BatchRollTablesResponse::ByteSizeLong(const MessageLite& base) {
  const BatchRollTablesResponse& this_ = static_cast<const BatchRollTablesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t BatchRollTablesResponse::ByteSizeLong() const {
  const BatchRollTablesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.BatchRollTablesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.BatchRollResult successful_operations = 1 [json_name = "successfulOperations"];
    {
      total_size += 1UL * this_._internal_successful_operations_size();
      for (const auto& msg : this_._internal_successful_operations()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .api.v1alpha1.BatchRollFailure failed_operations = 2 [json_name = "failedOperations"];
    {
      total_size += 1UL * this_._internal_failed_operations_size();
      for (const auto& msg : this_._internal_failed_operations()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .api.v1alpha1.OperationCorrelation correlations = 4 [json_name = "correlations"];
    {
      total_size += 1UL * this_._internal_correlations_size();
      for (const auto& msg : this_._internal_correlations()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // .api.v1alpha1.BatchRollStats batch_stats = 3 [json_name = "batchStats"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.batch_stats_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void BatchRollTablesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BatchRollTablesResponse*>(&to_msg);
  auto& from = static_cast<const BatchRollTablesResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.BatchRollTablesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_successful_operations()->MergeFrom(
      from._internal_successful_operations());
  _this->_internal_mutable_failed_operations()->MergeFrom(
      from._internal_failed_operations());
  _this->_internal_mutable_correlations()->MergeFrom(
      from._internal_correlations());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(from._impl_.batch_stats_ != nullptr);
    if (_this->_impl_.batch_stats_ == nullptr) {
      _this->_impl_.batch_stats_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.batch_stats_);
    } else {
      _this->_impl_.batch_stats_->MergeFrom(*from._impl_.batch_stats_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BatchRollTablesResponse::CopyFrom(const BatchRollTablesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.BatchRollTablesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BatchRollTablesResponse::InternalSwap(BatchRollTablesResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.successful_operations_.InternalSwap(&other->_impl_.successful_operations_);
  _impl_.failed_operations_.InternalSwap(&other->_impl_.failed_operations_);
  _impl_.correlations_.InternalSwap(&other->_impl_.correlations_);
  swap(_impl_.batch_stats_, other->_impl_.batch_stats_);
}

::google::protobuf::Metadata BatchRollTablesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BatchRollResult::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<BatchRollResult>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BatchRollResult, _impl_._has_bits_);
};

BatchRollResult::BatchRollResult(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BatchRollResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.BatchRollResult)
}
PROTOBUF_NDEBUG_INLINE BatchRollResult::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::BatchRollResult& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        results_{visibility, arena, from.results_},
        operation_id_(arena, from.operation_id_) {}

BatchRollResult::BatchRollResult(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const BatchRollResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BatchRollResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BatchRollResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.stats_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.stats_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.BatchRollResult)
}
PROTOBUF_NDEBUG_INLINE BatchRollResult::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        results_{visibility, arena},
        operation_id_(arena) {}

inline void BatchRollResult::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.stats_ = {};
}
BatchRollResult::~BatchRollResult() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.BatchRollResult)
  SharedDtor(*this);
}
inline void BatchRollResult::SharedDtor(MessageLite& self) {
  BatchRollResult& this_ = static_cast<BatchRollResult&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.operation_id_.Destroy();
  delete this_._impl_.stats_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL BatchRollResult::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) BatchRollResult(arena);
}
constexpr auto BatchRollResult::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(BatchRollResult, _impl_.results_) +
          decltype(BatchRollResult::_impl_.results_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(BatchRollResult), alignof(BatchRollResult), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&BatchRollResult::PlacementNew_,
                                 sizeof(BatchRollResult),
                                 alignof(BatchRollResult));
  }
}
constexpr auto BatchRollResult::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_BatchRollResult_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &BatchRollResult::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<BatchRollResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &BatchRollResult::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<BatchRollResult>(), &BatchRollResult::ByteSizeLong,
              &BatchRollResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(BatchRollResult, _impl_._cached_size_),
          false,
      },
      &BatchRollResult::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull BatchRollResult_class_data_ =
        BatchRollResult::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
BatchRollResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&BatchRollResult_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(BatchRollResult_class_data_.tc_table);
  return BatchRollResult_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 49, 2>
BatchRollResult::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BatchRollResult, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    BatchRollResult_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::BatchRollResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string operation_id = 1 [json_name = "operationId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(BatchRollResult, _impl_.operation_id_)}},
    // repeated .api.v1alpha1.RollResult results = 2 [json_name = "results"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(BatchRollResult, _impl_.results_)}},
    // .api.v1alpha1.RollStats stats = 3 [json_name = "stats"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(BatchRollResult, _impl_.stats_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string operation_id = 1 [json_name = "operationId"];
    {PROTOBUF_FIELD_OFFSET(BatchRollResult, _impl_.operation_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .api.v1alpha1.RollResult results = 2 [json_name = "results"];
    {PROTOBUF_FIELD_OFFSET(BatchRollResult, _impl_.results_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.RollStats stats = 3 [json_name = "stats"];
    {PROTOBUF_FIELD_OFFSET(BatchRollResult, _impl_.stats_), _Internal::kHasBitsOffset + 1, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RollResult>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RollStats>()},
  }},
  {{
    "\34\14\0\0\0\0\0\0"
    "api.v1alpha1.BatchRollResult"
    "operation_id"
  }},
};
PROTOBUF_NOINLINE void BatchRollResult::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.BatchRollResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.results_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.operation_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.stats_ != nullptr);
      _impl_.stats_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL BatchRollResult::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const BatchRollResult& this_ = static_cast<const BatchRollResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL BatchRollResult::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const BatchRollResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.BatchRollResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string operation_id = 1 [json_name = "operationId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_operation_id().empty()) {
      const ::std::string& _s = this_._internal_operation_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.BatchRollResult.operation_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // repeated .api.v1alpha1.RollResult results = 2 [json_name = "results"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_results_size());
       i < n; i++) {
    const auto& repfield = this_._internal_results().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.RollStats stats = 3 [json_name = "stats"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.stats_, this_._impl_.stats_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.BatchRollResult)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t BatchRollResult::ByteSizeLong(const MessageLite& base) {
  const BatchRollResult& this_ = static_cast<const BatchRollResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t BatchRollResult::ByteSizeLong() const {
  const BatchRollResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.BatchRollResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.RollResult results = 2 [json_name = "results"];
    {
      total_size += 1UL * this_._internal_results_size();
      for (const auto& msg : this_._internal_results()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string operation_id = 1 [json_name = "operationId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_operation_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_operation_id());
      }
    }
    // .api.v1alpha1.RollStats stats = 3 [json_name = "stats"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.stats_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void BatchRollResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BatchRollResult*>(&to_msg);
  auto& from = static_cast<const BatchRollResult&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.BatchRollResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_results()->MergeFrom(
      from._internal_results());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_operation_id().empty()) {
        _this->_internal_set_operation_id(from._internal_operation_id());
      } else {
        if (_this->_impl_.operation_id_.IsDefault()) {
          _this->_internal_set_operation_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.stats_ != nullptr);
      if (_this->_impl_.stats_ == nullptr) {
        _this->_impl_.stats_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.stats_);
      } else {
        _this->_impl_.stats_->MergeFrom(*from._impl_.stats_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BatchRollResult::CopyFrom(const BatchRollResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.BatchRollResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BatchRollResult::InternalSwap(BatchRollResult* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.results_.InternalSwap(&other->_impl_.results_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.operation_id_, &other->_impl_.operation_id_, arena);
  swap(_impl_.stats_, other->_impl_.stats_);
}

::google::protobuf::Metadata BatchRollResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BatchRollFailure::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<BatchRollFailure>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BatchRollFailure, _impl_._has_bits_);
};

void BatchRollFailure::clear_errors() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errors_.Clear();
}
BatchRollFailure::BatchRollFailure(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BatchRollFailure_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.BatchRollFailure)
}
PROTOBUF_NDEBUG_INLINE BatchRollFailure::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::BatchRollFailure& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        errors_{visibility, arena, from.errors_},
        operation_id_(arena, from.operation_id_),
        table_id_(arena, from.table_id_),
        failure_reason_(arena, from.failure_reason_) {}

BatchRollFailure::BatchRollFailure(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const BatchRollFailure& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BatchRollFailure_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BatchRollFailure* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.BatchRollFailure)
}
PROTOBUF_NDEBUG_INLINE BatchRollFailure::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        errors_{visibility, arena},
        operation_id_(arena),
        table_id_(arena),
        failure_reason_(arena) {}

inline void BatchRollFailure::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BatchRollFailure::~BatchRollFailure() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.BatchRollFailure)
  SharedDtor(*this);
}
inline void BatchRollFailure::SharedDtor(MessageLite& self) {
  BatchRollFailure& this_ = static_cast<BatchRollFailure&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.operation_id_.Destroy();
  this_._impl_.table_id_.Destroy();
  this_._impl_.failure_reason_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL BatchRollFailure::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) BatchRollFailure(arena);
}
constexpr auto BatchRollFailure::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(BatchRollFailure, _impl_.errors_) +
          decltype(BatchRollFailure::_impl_.errors_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(BatchRollFailure), alignof(BatchRollFailure), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&BatchRollFailure::PlacementNew_,
                                 sizeof(BatchRollFailure),
                                 alignof(BatchRollFailure));
  }
}
constexpr auto BatchRollFailure::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_BatchRollFailure_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &BatchRollFailure::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<BatchRollFailure>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &BatchRollFailure::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<BatchRollFailure>(), &BatchRollFailure::ByteSizeLong,
              &BatchRollFailure::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(BatchRollFailure, _impl_._cached_size_),
          false,
      },
      &BatchRollFailure::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull BatchRollFailure_class_data_ =
        BatchRollFailure::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
BatchRollFailure::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&BatchRollFailure_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(BatchRollFailure_class_data_.tc_table);
  return BatchRollFailure_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 72, 2>
BatchRollFailure::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BatchRollFailure, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    BatchRollFailure_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::BatchRollFailure>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .api.v1alpha1.RoomError errors = 4 [json_name = "errors"];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(BatchRollFailure, _impl_.errors_)}},
    // string operation_id = 1 [json_name = "operationId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(BatchRollFailure, _impl_.operation_id_)}},
    // string table_id = 2 [json_name = "tableId"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(BatchRollFailure, _impl_.table_id_)}},
    // string failure_reason = 3 [json_name = "failureReason"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(BatchRollFailure, _impl_.failure_reason_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string operation_id = 1 [json_name = "operationId"];
    {PROTOBUF_FIELD_OFFSET(BatchRollFailure, _impl_.operation_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string table_id = 2 [json_name = "tableId"];
    {PROTOBUF_FIELD_OFFSET(BatchRollFailure, _impl_.table_id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string failure_reason = 3 [json_name = "failureReason"];
    {PROTOBUF_FIELD_OFFSET(BatchRollFailure, _impl_.failure_reason_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .api.v1alpha1.RoomError errors = 4 [json_name = "errors"];
    {PROTOBUF_FIELD_OFFSET(BatchRollFailure, _impl_.errors_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RoomError>()},
  }},
  {{
    "\35\14\10\16\0\0\0\0"
    "api.v1alpha1.BatchRollFailure"
    "operation_id"
    "table_id"
    "failure_reason"
  }},
};
PROTOBUF_NOINLINE void BatchRollFailure::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.BatchRollFailure)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.errors_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.operation_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.table_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.failure_reason_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL BatchRollFailure::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const BatchRollFailure& this_ = static_cast<const BatchRollFailure&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL BatchRollFailure::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const BatchRollFailure& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.BatchRollFailure)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string operation_id = 1 [json_name = "operationId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_operation_id().empty()) {
      const ::std::string& _s = this_._internal_operation_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.BatchRollFailure.operation_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string table_id = 2 [json_name = "tableId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_table_id().empty()) {
      const ::std::string& _s = this_._internal_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.BatchRollFailure.table_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string failure_reason = 3 [json_name = "failureReason"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_failure_reason().empty()) {
      const ::std::string& _s = this_._internal_failure_reason();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.BatchRollFailure.failure_reason");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // repeated .api.v1alpha1.RoomError errors = 4 [json_name = "errors"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_errors_size());
       i < n; i++) {
    const auto& repfield = this_._internal_errors().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.BatchRollFailure)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t BatchRollFailure::ByteSizeLong(const MessageLite& base) {
  const BatchRollFailure& this_ = static_cast<const BatchRollFailure&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t BatchRollFailure::ByteSizeLong() const {
  const BatchRollFailure& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.BatchRollFailure)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.RoomError errors = 4 [json_name = "errors"];
    {
      total_size += 1UL * this_._internal_errors_size();
      for (const auto& msg : this_._internal_errors()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string operation_id = 1 [json_name = "operationId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_operation_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_operation_id());
      }
    }
    // string table_id = 2 [json_name = "tableId"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_table_id());
      }
    }
    // string failure_reason = 3 [json_name = "failureReason"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_failure_reason().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_failure_reason());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void BatchRollFailure::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BatchRollFailure*>(&to_msg);
  auto& from = static_cast<const BatchRollFailure&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.BatchRollFailure)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_errors()->MergeFrom(
      from._internal_errors());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_operation_id().empty()) {
        _this->_internal_set_operation_id(from._internal_operation_id());
      } else {
        if (_this->_impl_.operation_id_.IsDefault()) {
          _this->_internal_set_operation_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_table_id().empty()) {
        _this->_internal_set_table_id(from._internal_table_id());
      } else {
        if (_this->_impl_.table_id_.IsDefault()) {
          _this->_internal_set_table_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_failure_reason().empty()) {
        _this->_internal_set_failure_reason(from._internal_failure_reason());
      } else {
        if (_this->_impl_.failure_reason_.IsDefault()) {
          _this->_internal_set_failure_reason("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BatchRollFailure::CopyFrom(const BatchRollFailure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.BatchRollFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BatchRollFailure::InternalSwap(BatchRollFailure* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.errors_.InternalSwap(&other->_impl_.errors_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.operation_id_, &other->_impl_.operation_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.table_id_, &other->_impl_.table_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.failure_reason_, &other->_impl_.failure_reason_, arena);
}

::google::protobuf::Metadata BatchRollFailure::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BatchRollStats::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<BatchRollStats>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BatchRollStats, _impl_._has_bits_);
};

BatchRollStats::BatchRollStats(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BatchRollStats_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.BatchRollStats)
}
BatchRollStats::BatchRollStats(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BatchRollStats& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BatchRollStats_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE BatchRollStats::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void BatchRollStats::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_batch_time_ms_),
           0,
           offsetof(Impl_, used_parallel_execution_) -
               offsetof(Impl_, total_batch_time_ms_) +
               sizeof(Impl_::used_parallel_execution_));
}
BatchRollStats::~BatchRollStats() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.BatchRollStats)
  SharedDtor(*this);
}
inline void BatchRollStats::SharedDtor(MessageLite& self) {
  BatchRollStats& this_ = static_cast<BatchRollStats&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL BatchRollStats::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) BatchRollStats(arena);
}
constexpr auto BatchRollStats::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BatchRollStats),
                                            alignof(BatchRollStats));
}
constexpr auto BatchRollStats::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_BatchRollStats_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &BatchRollStats::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<BatchRollStats>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &BatchRollStats::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<BatchRollStats>(), &BatchRollStats::ByteSizeLong,
              &BatchRollStats::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(BatchRollStats, _impl_._cached_size_),
          false,
      },
      &BatchRollStats::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull BatchRollStats_class_data_ =
        BatchRollStats::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
BatchRollStats::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&BatchRollStats_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(BatchRollStats_class_data_.tc_table);
  return BatchRollStats_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2>
BatchRollStats::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BatchRollStats, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    BatchRollStats_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::BatchRollStats>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 total_batch_time_ms = 1 [json_name = "totalBatchTimeMs"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BatchRollStats, _impl_.total_batch_time_ms_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(BatchRollStats, _impl_.total_batch_time_ms_)}},
    // int32 successful_operations = 2 [json_name = "successfulOperations"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BatchRollStats, _impl_.successful_operations_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(BatchRollStats, _impl_.successful_operations_)}},
    // int32 failed_operations = 3 [json_name = "failedOperations"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BatchRollStats, _impl_.failed_operations_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(BatchRollStats, _impl_.failed_operations_)}},
    // int32 total_results = 4 [json_name = "totalResults"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BatchRollStats, _impl_.total_results_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(BatchRollStats, _impl_.total_results_)}},
    // double average_operation_time_ms = 5 [json_name = "averageOperationTimeMs"];
    {::_pbi::TcParser::FastF64S1,
     {41, 3, 0, PROTOBUF_FIELD_OFFSET(BatchRollStats, _impl_.average_operation_time_ms_)}},
    // bool used_parallel_execution = 6 [json_name = "usedParallelExecution"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(BatchRollStats, _impl_.used_parallel_execution_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(BatchRollStats, _impl_.used_parallel_execution_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 total_batch_time_ms = 1 [json_name = "totalBatchTimeMs"];
    {PROTOBUF_FIELD_OFFSET(BatchRollStats, _impl_.total_batch_time_ms_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int32 successful_operations = 2 [json_name = "successfulOperations"];
    {PROTOBUF_FIELD_OFFSET(BatchRollStats, _impl_.successful_operations_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 failed_operations = 3 [json_name = "failedOperations"];
    {PROTOBUF_FIELD_OFFSET(BatchRollStats, _impl_.failed_operations_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 total_results = 4 [json_name = "totalResults"];
    {PROTOBUF_FIELD_OFFSET(BatchRollStats, _impl_.total_results_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // double average_operation_time_ms = 5 [json_name = "averageOperationTimeMs"];
    {PROTOBUF_FIELD_OFFSET(BatchRollStats, _impl_.average_operation_time_ms_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // bool used_parallel_execution = 6 [json_name = "usedParallelExecution"];
    {PROTOBUF_FIELD_OFFSET(BatchRollStats, _impl_.used_parallel_execution_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void BatchRollStats::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.BatchRollStats)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    ::memset(&_impl_.total_batch_time_ms_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.used_parallel_execution_) -
        reinterpret_cast<char*>(&_impl_.total_batch_time_ms_)) + sizeof(_impl_.used_parallel_execution_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL BatchRollStats::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const BatchRollStats& this_ = static_cast<const BatchRollStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL BatchRollStats::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const BatchRollStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.BatchRollStats)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 total_batch_time_ms = 1 [json_name = "totalBatchTimeMs"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_total_batch_time_ms() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_total_batch_time_ms(), target);
    }
  }

  // int32 successful_operations = 2 [json_name = "successfulOperations"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_successful_operations() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_successful_operations(), target);
    }
  }

  // int32 failed_operations = 3 [json_name = "failedOperations"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_failed_operations() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_failed_operations(), target);
    }
  }

  // int32 total_results = 4 [json_name = "totalResults"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_total_results() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_total_results(), target);
    }
  }

  // double average_operation_time_ms = 5 [json_name = "averageOperationTimeMs"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_average_operation_time_ms()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          5, this_._internal_average_operation_time_ms(), target);
    }
  }

  // bool used_parallel_execution = 6 [json_name = "usedParallelExecution"];
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (this_._internal_used_parallel_execution() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          6, this_._internal_used_parallel_execution(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.BatchRollStats)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t BatchRollStats::ByteSizeLong(const MessageLite& base) {
  const BatchRollStats& this_ = static_cast<const BatchRollStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t BatchRollStats::ByteSizeLong() const {
  const BatchRollStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.BatchRollStats)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    // int64 total_batch_time_ms = 1 [json_name = "totalBatchTimeMs"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_total_batch_time_ms() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_total_batch_time_ms());
      }
    }
    // int32 successful_operations = 2 [json_name = "successfulOperations"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_successful_operations() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_successful_operations());
      }
    }
    // int32 failed_operations = 3 [json_name = "failedOperations"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_failed_operations() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_failed_operations());
      }
    }
    // double average_operation_time_ms = 5 [json_name = "averageOperationTimeMs"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_average_operation_time_ms()) != 0) {
        total_size += 9;
      }
    }
    // int32 total_results = 4 [json_name = "totalResults"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_total_results() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_total_results());
      }
    }
    // bool used_parallel_execution = 6 [json_name = "usedParallelExecution"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_used_parallel_execution() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void BatchRollStats::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BatchRollStats*>(&to_msg);
  auto& from = static_cast<const BatchRollStats&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.BatchRollStats)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (from._internal_total_batch_time_ms() != 0) {
        _this->_impl_.total_batch_time_ms_ = from._impl_.total_batch_time_ms_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_successful_operations() != 0) {
        _this->_impl_.successful_operations_ = from._impl_.successful_operations_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_failed_operations() != 0) {
        _this->_impl_.failed_operations_ = from._impl_.failed_operations_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_average_operation_time_ms()) != 0) {
        _this->_impl_.average_operation_time_ms_ = from._impl_.average_operation_time_ms_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_total_results() != 0) {
        _this->_impl_.total_results_ = from._impl_.total_results_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_used_parallel_execution() != 0) {
        _this->_impl_.used_parallel_execution_ = from._impl_.used_parallel_execution_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BatchRollStats::CopyFrom(const BatchRollStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.BatchRollStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BatchRollStats::InternalSwap(BatchRollStats* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BatchRollStats, _impl_.used_parallel_execution_)
      + sizeof(BatchRollStats::_impl_.used_parallel_execution_)
      - PROTOBUF_FIELD_OFFSET(BatchRollStats, _impl_.total_batch_time_ms_)>(
          reinterpret_cast<char*>(&_impl_.total_batch_time_ms_),
          reinterpret_cast<char*>(&other->_impl_.total_batch_time_ms_));
}

::google::protobuf::Metadata BatchRollStats::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OperationCorrelation::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<OperationCorrelation>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OperationCorrelation, _impl_._has_bits_);
};

OperationCorrelation::OperationCorrelation(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OperationCorrelation_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.OperationCorrelation)
}
PROTOBUF_NDEBUG_INLINE OperationCorrelation::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::OperationCorrelation& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        operation_ids_{visibility, arena, from.operation_ids_},
        correlation_type_(arena, from.correlation_type_),
        description_(arena, from.description_) {}

OperationCorrelation::OperationCorrelation(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const OperationCorrelation& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OperationCorrelation_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OperationCorrelation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.strength_ = from._impl_.strength_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.OperationCorrelation)
}
PROTOBUF_NDEBUG_INLINE OperationCorrelation::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        operation_ids_{visibility, arena},
        correlation_type_(arena),
        description_(arena) {}

inline void OperationCorrelation::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.strength_ = {};
}
OperationCorrelation::~OperationCorrelation() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.OperationCorrelation)
  SharedDtor(*this);
}
inline void OperationCorrelation::SharedDtor(MessageLite& self) {
  OperationCorrelation& this_ = static_cast<OperationCorrelation&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.correlation_type_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL OperationCorrelation::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OperationCorrelation(arena);
}
constexpr auto OperationCorrelation::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(OperationCorrelation, _impl_.operation_ids_) +
          decltype(OperationCorrelation::_impl_.operation_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(OperationCorrelation), alignof(OperationCorrelation), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&OperationCorrelation::PlacementNew_,
                                 sizeof(OperationCorrelation),
                                 alignof(OperationCorrelation));
  }
}
constexpr auto OperationCorrelation::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OperationCorrelation_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OperationCorrelation::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<OperationCorrelation>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OperationCorrelation::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<OperationCorrelation>(), &OperationCorrelation::ByteSizeLong,
              &OperationCorrelation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OperationCorrelation, _impl_._cached_size_),
          false,
      },
      &OperationCorrelation::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull OperationCorrelation_class_data_ =
        OperationCorrelation::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
OperationCorrelation::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OperationCorrelation_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OperationCorrelation_class_data_.tc_table);
  return OperationCorrelation_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 82, 2>
OperationCorrelation::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OperationCorrelation, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    OperationCorrelation_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::OperationCorrelation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string description = 4 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(OperationCorrelation, _impl_.description_)}},
    // repeated string operation_ids = 1 [json_name = "operationIds"];
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OperationCorrelation, _impl_.operation_ids_)}},
    // string correlation_type = 2 [json_name = "correlationType"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(OperationCorrelation, _impl_.correlation_type_)}},
    // double strength = 3 [json_name = "strength"];
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(OperationCorrelation, _impl_.strength_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string operation_ids = 1 [json_name = "operationIds"];
    {PROTOBUF_FIELD_OFFSET(OperationCorrelation, _impl_.operation_ids_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string correlation_type = 2 [json_name = "correlationType"];
    {PROTOBUF_FIELD_OFFSET(OperationCorrelation, _impl_.correlation_type_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double strength = 3 [json_name = "strength"];
    {PROTOBUF_FIELD_OFFSET(OperationCorrelation, _impl_.strength_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // string description = 4 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(OperationCorrelation, _impl_.description_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\41\15\20\0\13\0\0\0"
    "api.v1alpha1.OperationCorrelation"
    "operation_ids"
    "correlation_type"
    "description"
  }},
};
PROTOBUF_NOINLINE void OperationCorrelation::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.OperationCorrelation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.operation_ids_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.correlation_type_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.strength_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL OperationCorrelation::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const OperationCorrelation& this_ = static_cast<const OperationCorrelation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL OperationCorrelation::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const OperationCorrelation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.OperationCorrelation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string operation_ids = 1 [json_name = "operationIds"];
  for (int i = 0, n = this_._internal_operation_ids_size(); i < n; ++i) {
    const auto& s = this_._internal_operation_ids().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.OperationCorrelation.operation_ids");
    target = stream->WriteString(1, s, target);
  }

  // string correlation_type = 2 [json_name = "correlationType"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_correlation_type().empty()) {
      const ::std::string& _s = this_._internal_correlation_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.OperationCorrelation.correlation_type");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // double strength = 3 [json_name = "strength"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_strength()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_strength(), target);
    }
  }

  // string description = 4 [json_name = "description"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.OperationCorrelation.description");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.OperationCorrelation)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t OperationCorrelation::ByteSizeLong(const MessageLite& base) {
  const OperationCorrelation& this_ = static_cast<const OperationCorrelation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t OperationCorrelation::ByteSizeLong() const {
  const OperationCorrelation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.OperationCorrelation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string operation_ids = 1 [json_name = "operationIds"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_operation_ids().size());
      for (int i = 0, n = this_._internal_operation_ids().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_operation_ids().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string correlation_type = 2 [json_name = "correlationType"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_correlation_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_correlation_type());
      }
    }
    // string description = 4 [json_name = "description"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // double strength = 3 [json_name = "strength"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_strength()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void OperationCorrelation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OperationCorrelation*>(&to_msg);
  auto& from = static_cast<const OperationCorrelation&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.OperationCorrelation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_operation_ids()->MergeFrom(from._internal_operation_ids());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_correlation_type().empty()) {
        _this->_internal_set_correlation_type(from._internal_correlation_type());
      } else {
        if (_this->_impl_.correlation_type_.IsDefault()) {
          _this->_internal_set_correlation_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_strength()) != 0) {
        _this->_impl_.strength_ = from._impl_.strength_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OperationCorrelation::CopyFrom(const OperationCorrelation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.OperationCorrelation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OperationCorrelation::InternalSwap(OperationCorrelation* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.operation_ids_.InternalSwap(&other->_impl_.operation_ids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.correlation_type_, &other->_impl_.correlation_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  swap(_impl_.strength_, other->_impl_.strength_);
}

::google::protobuf::Metadata OperationCorrelation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GenerateEncounterRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GenerateEncounterRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GenerateEncounterRequest, _impl_._has_bits_);
};

GenerateEncounterRequest::GenerateEncounterRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GenerateEncounterRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.GenerateEncounterRequest)
}
PROTOBUF_NDEBUG_INLINE GenerateEncounterRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::GenerateEncounterRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        room_id_(arena, from.room_id_) {}

GenerateEncounterRequest::GenerateEncounterRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GenerateEncounterRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GenerateEncounterRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GenerateEncounterRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.encounter_params_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.encounter_params_)
                : nullptr;
  _impl_.encounter_tables_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.encounter_tables_)
                : nullptr;
  _impl_.options_ = ((cached_has_bits & 0x00000008U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.GenerateEncounterRequest)
}
PROTOBUF_NDEBUG_INLINE GenerateEncounterRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        room_id_(arena) {}

inline void GenerateEncounterRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, encounter_params_),
           0,
           offsetof(Impl_, options_) -
               offsetof(Impl_, encounter_params_) +
               sizeof(Impl_::options_));
}
GenerateEncounterRequest::~GenerateEncounterRequest() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.GenerateEncounterRequest)
  SharedDtor(*this);
}
inline void GenerateEncounterRequest::SharedDtor(MessageLite& self) {
  GenerateEncounterRequest& this_ = static_cast<GenerateEncounterRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.room_id_.Destroy();
  delete this_._impl_.encounter_params_;
  delete this_._impl_.encounter_tables_;
  delete this_._impl_.options_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GenerateEncounterRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GenerateEncounterRequest(arena);
}
constexpr auto GenerateEncounterRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GenerateEncounterRequest),
                                            alignof(GenerateEncounterRequest));
}
constexpr auto GenerateEncounterRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GenerateEncounterRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GenerateEncounterRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GenerateEncounterRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GenerateEncounterRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GenerateEncounterRequest>(), &GenerateEncounterRequest::ByteSizeLong,
              &GenerateEncounterRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GenerateEncounterRequest, _impl_._cached_size_),
          false,
      },
      &GenerateEncounterRequest::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GenerateEncounterRequest_class_data_ =
        GenerateEncounterRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GenerateEncounterRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GenerateEncounterRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GenerateEncounterRequest_class_data_.tc_table);
  return GenerateEncounterRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 3, 53, 2>
GenerateEncounterRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GenerateEncounterRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GenerateEncounterRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::GenerateEncounterRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .api.v1alpha1.EncounterGenerationOptions options = 4 [json_name = "options"];
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 2, PROTOBUF_FIELD_OFFSET(GenerateEncounterRequest, _impl_.options_)}},
    // string room_id = 1 [json_name = "roomId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GenerateEncounterRequest, _impl_.room_id_)}},
    // .api.v1alpha1.EncounterParameters encounter_params = 2 [json_name = "encounterParams"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(GenerateEncounterRequest, _impl_.encounter_params_)}},
    // .api.v1alpha1.EncounterTables encounter_tables = 3 [json_name = "encounterTables"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 1, PROTOBUF_FIELD_OFFSET(GenerateEncounterRequest, _impl_.encounter_tables_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string room_id = 1 [json_name = "roomId"];
    {PROTOBUF_FIELD_OFFSET(GenerateEncounterRequest, _impl_.room_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.EncounterParameters encounter_params = 2 [json_name = "encounterParams"];
    {PROTOBUF_FIELD_OFFSET(GenerateEncounterRequest, _impl_.encounter_params_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.EncounterTables encounter_tables = 3 [json_name = "encounterTables"];
    {PROTOBUF_FIELD_OFFSET(GenerateEncounterRequest, _impl_.encounter_tables_), _Internal::kHasBitsOffset + 2, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.EncounterGenerationOptions options = 4 [json_name = "options"];
    {PROTOBUF_FIELD_OFFSET(GenerateEncounterRequest, _impl_.options_), _Internal::kHasBitsOffset + 3, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::EncounterParameters>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::EncounterTables>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::EncounterGenerationOptions>()},
  }},
  {{
    "\45\7\0\0\0\0\0\0"
    "api.v1alpha1.GenerateEncounterRequest"
    "room_id"
  }},
};
PROTOBUF_NOINLINE void GenerateEncounterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.GenerateEncounterRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.room_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.encounter_params_ != nullptr);
      _impl_.encounter_params_->Clear();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.encounter_tables_ != nullptr);
      _impl_.encounter_tables_->Clear();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(_impl_.options_ != nullptr);
      _impl_.options_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GenerateEncounterRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GenerateEncounterRequest& this_ = static_cast<const GenerateEncounterRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GenerateEncounterRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GenerateEncounterRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.GenerateEncounterRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string room_id = 1 [json_name = "roomId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_room_id().empty()) {
      const ::std::string& _s = this_._internal_room_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.GenerateEncounterRequest.room_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.EncounterParameters encounter_params = 2 [json_name = "encounterParams"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.encounter_params_, this_._impl_.encounter_params_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.EncounterTables encounter_tables = 3 [json_name = "encounterTables"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.encounter_tables_, this_._impl_.encounter_tables_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.EncounterGenerationOptions options = 4 [json_name = "options"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.options_, this_._impl_.options_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.GenerateEncounterRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GenerateEncounterRequest::ByteSizeLong(const MessageLite& base) {
  const GenerateEncounterRequest& this_ = static_cast<const GenerateEncounterRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GenerateEncounterRequest::ByteSizeLong() const {
  const GenerateEncounterRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.GenerateEncounterRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string room_id = 1 [json_name = "roomId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_room_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_room_id());
      }
    }
    // .api.v1alpha1.EncounterParameters encounter_params = 2 [json_name = "encounterParams"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.encounter_params_);
    }
    // .api.v1alpha1.EncounterTables encounter_tables = 3 [json_name = "encounterTables"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.encounter_tables_);
    }
    // .api.v1alpha1.EncounterGenerationOptions options = 4 [json_name = "options"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.options_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GenerateEncounterRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GenerateEncounterRequest*>(&to_msg);
  auto& from = static_cast<const GenerateEncounterRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.GenerateEncounterRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_room_id().empty()) {
        _this->_internal_set_room_id(from._internal_room_id());
      } else {
        if (_this->_impl_.room_id_.IsDefault()) {
          _this->_internal_set_room_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.encounter_params_ != nullptr);
      if (_this->_impl_.encounter_params_ == nullptr) {
        _this->_impl_.encounter_params_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.encounter_params_);
      } else {
        _this->_impl_.encounter_params_->MergeFrom(*from._impl_.encounter_params_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.encounter_tables_ != nullptr);
      if (_this->_impl_.encounter_tables_ == nullptr) {
        _this->_impl_.encounter_tables_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.encounter_tables_);
      } else {
        _this->_impl_.encounter_tables_->MergeFrom(*from._impl_.encounter_tables_);
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(from._impl_.options_ != nullptr);
      if (_this->_impl_.options_ == nullptr) {
        _this->_impl_.options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_);
      } else {
        _this->_impl_.options_->MergeFrom(*from._impl_.options_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GenerateEncounterRequest::CopyFrom(const GenerateEncounterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.GenerateEncounterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GenerateEncounterRequest::InternalSwap(GenerateEncounterRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.room_id_, &other->_impl_.room_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GenerateEncounterRequest, _impl_.options_)
      + sizeof(GenerateEncounterRequest::_impl_.options_)
      - PROTOBUF_FIELD_OFFSET(GenerateEncounterRequest, _impl_.encounter_params_)>(
          reinterpret_cast<char*>(&_impl_.encounter_params_),
          reinterpret_cast<char*>(&other->_impl_.encounter_params_));
}

::google::protobuf::Metadata GenerateEncounterRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EncounterParameters::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<EncounterParameters>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EncounterParameters, _impl_._has_bits_);
};

EncounterParameters::EncounterParameters(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EncounterParameters_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.EncounterParameters)
}
PROTOBUF_NDEBUG_INLINE EncounterParameters::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::EncounterParameters& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        requirements_{visibility, arena, from.requirements_},
        difficulty_(arena, from.difficulty_),
        theme_(arena, from.theme_),
        environment_(arena, from.environment_) {}

EncounterParameters::EncounterParameters(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EncounterParameters& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EncounterParameters_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EncounterParameters* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, party_level_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, party_level_),
           offsetof(Impl_, party_size_) -
               offsetof(Impl_, party_level_) +
               sizeof(Impl_::party_size_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.EncounterParameters)
}
PROTOBUF_NDEBUG_INLINE EncounterParameters::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        requirements_{visibility, arena},
        difficulty_(arena),
        theme_(arena),
        environment_(arena) {}

inline void EncounterParameters::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, party_level_),
           0,
           offsetof(Impl_, party_size_) -
               offsetof(Impl_, party_level_) +
               sizeof(Impl_::party_size_));
}
EncounterParameters::~EncounterParameters() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.EncounterParameters)
  SharedDtor(*this);
}
inline void EncounterParameters::SharedDtor(MessageLite& self) {
  EncounterParameters& this_ = static_cast<EncounterParameters&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.difficulty_.Destroy();
  this_._impl_.theme_.Destroy();
  this_._impl_.environment_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EncounterParameters::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EncounterParameters(arena);
}
constexpr auto EncounterParameters::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(EncounterParameters, _impl_.requirements_) +
          decltype(EncounterParameters::_impl_.requirements_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(EncounterParameters), alignof(EncounterParameters), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&EncounterParameters::PlacementNew_,
                                 sizeof(EncounterParameters),
                                 alignof(EncounterParameters));
  }
}
constexpr auto EncounterParameters::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EncounterParameters_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EncounterParameters::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EncounterParameters>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EncounterParameters::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EncounterParameters>(), &EncounterParameters::ByteSizeLong,
              &EncounterParameters::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EncounterParameters, _impl_._cached_size_),
          false,
      },
      &EncounterParameters::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EncounterParameters_class_data_ =
        EncounterParameters::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EncounterParameters::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EncounterParameters_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EncounterParameters_class_data_.tc_table);
  return EncounterParameters_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 79, 2>
EncounterParameters::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EncounterParameters, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    EncounterParameters_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::EncounterParameters>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 party_level = 1 [json_name = "partyLevel"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EncounterParameters, _impl_.party_level_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(EncounterParameters, _impl_.party_level_)}},
    // int32 party_size = 2 [json_name = "partySize"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EncounterParameters, _impl_.party_size_), 4>(),
     {16, 4, 0, PROTOBUF_FIELD_OFFSET(EncounterParameters, _impl_.party_size_)}},
    // string difficulty = 3 [json_name = "difficulty"];
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(EncounterParameters, _impl_.difficulty_)}},
    // string theme = 4 [json_name = "theme"];
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(EncounterParameters, _impl_.theme_)}},
    // string environment = 5 [json_name = "environment"];
    {::_pbi::TcParser::FastUS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(EncounterParameters, _impl_.environment_)}},
    // repeated string requirements = 6 [json_name = "requirements"];
    {::_pbi::TcParser::FastUR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(EncounterParameters, _impl_.requirements_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 party_level = 1 [json_name = "partyLevel"];
    {PROTOBUF_FIELD_OFFSET(EncounterParameters, _impl_.party_level_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 party_size = 2 [json_name = "partySize"];
    {PROTOBUF_FIELD_OFFSET(EncounterParameters, _impl_.party_size_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string difficulty = 3 [json_name = "difficulty"];
    {PROTOBUF_FIELD_OFFSET(EncounterParameters, _impl_.difficulty_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string theme = 4 [json_name = "theme"];
    {PROTOBUF_FIELD_OFFSET(EncounterParameters, _impl_.theme_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string environment = 5 [json_name = "environment"];
    {PROTOBUF_FIELD_OFFSET(EncounterParameters, _impl_.environment_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string requirements = 6 [json_name = "requirements"];
    {PROTOBUF_FIELD_OFFSET(EncounterParameters, _impl_.requirements_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\40\0\0\12\5\13\14\0"
    "api.v1alpha1.EncounterParameters"
    "difficulty"
    "theme"
    "environment"
    "requirements"
  }},
};
PROTOBUF_NOINLINE void EncounterParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.EncounterParameters)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.requirements_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.difficulty_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.theme_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.environment_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x00000018U) != 0) {
    ::memset(&_impl_.party_level_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.party_size_) -
        reinterpret_cast<char*>(&_impl_.party_level_)) + sizeof(_impl_.party_size_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EncounterParameters::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EncounterParameters& this_ = static_cast<const EncounterParameters&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EncounterParameters::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EncounterParameters& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.EncounterParameters)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 party_level = 1 [json_name = "partyLevel"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_party_level() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_party_level(), target);
    }
  }

  // int32 party_size = 2 [json_name = "partySize"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_party_size() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_party_size(), target);
    }
  }

  // string difficulty = 3 [json_name = "difficulty"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_difficulty().empty()) {
      const ::std::string& _s = this_._internal_difficulty();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EncounterParameters.difficulty");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string theme = 4 [json_name = "theme"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_theme().empty()) {
      const ::std::string& _s = this_._internal_theme();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EncounterParameters.theme");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // string environment = 5 [json_name = "environment"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_environment().empty()) {
      const ::std::string& _s = this_._internal_environment();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EncounterParameters.environment");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  // repeated string requirements = 6 [json_name = "requirements"];
  for (int i = 0, n = this_._internal_requirements_size(); i < n; ++i) {
    const auto& s = this_._internal_requirements().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EncounterParameters.requirements");
    target = stream->WriteString(6, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.EncounterParameters)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EncounterParameters::ByteSizeLong(const MessageLite& base) {
  const EncounterParameters& this_ = static_cast<const EncounterParameters&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EncounterParameters::ByteSizeLong() const {
  const EncounterParameters& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.EncounterParameters)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string requirements = 6 [json_name = "requirements"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_requirements().size());
      for (int i = 0, n = this_._internal_requirements().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_requirements().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // string difficulty = 3 [json_name = "difficulty"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_difficulty().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_difficulty());
      }
    }
    // string theme = 4 [json_name = "theme"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_theme().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_theme());
      }
    }
    // string environment = 5 [json_name = "environment"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_environment().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_environment());
      }
    }
    // int32 party_level = 1 [json_name = "partyLevel"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_party_level() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_party_level());
      }
    }
    // int32 party_size = 2 [json_name = "partySize"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_party_size() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_party_size());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EncounterParameters::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EncounterParameters*>(&to_msg);
  auto& from = static_cast<const EncounterParameters&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.EncounterParameters)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_requirements()->MergeFrom(from._internal_requirements());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_difficulty().empty()) {
        _this->_internal_set_difficulty(from._internal_difficulty());
      } else {
        if (_this->_impl_.difficulty_.IsDefault()) {
          _this->_internal_set_difficulty("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_theme().empty()) {
        _this->_internal_set_theme(from._internal_theme());
      } else {
        if (_this->_impl_.theme_.IsDefault()) {
          _this->_internal_set_theme("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_environment().empty()) {
        _this->_internal_set_environment(from._internal_environment());
      } else {
        if (_this->_impl_.environment_.IsDefault()) {
          _this->_internal_set_environment("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_party_level() != 0) {
        _this->_impl_.party_level_ = from._impl_.party_level_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_party_size() != 0) {
        _this->_impl_.party_size_ = from._impl_.party_size_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EncounterParameters::CopyFrom(const EncounterParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.EncounterParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EncounterParameters::InternalSwap(EncounterParameters* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.requirements_.InternalSwap(&other->_impl_.requirements_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.difficulty_, &other->_impl_.difficulty_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.theme_, &other->_impl_.theme_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.environment_, &other->_impl_.environment_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EncounterParameters, _impl_.party_size_)
      + sizeof(EncounterParameters::_impl_.party_size_)
      - PROTOBUF_FIELD_OFFSET(EncounterParameters, _impl_.party_level_)>(
          reinterpret_cast<char*>(&_impl_.party_level_),
          reinterpret_cast<char*>(&other->_impl_.party_level_));
}

::google::protobuf::Metadata EncounterParameters::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EncounterTables::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<EncounterTables>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EncounterTables, _impl_._has_bits_);
};

EncounterTables::EncounterTables(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EncounterTables_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.EncounterTables)
}
PROTOBUF_NDEBUG_INLINE EncounterTables::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::EncounterTables& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        primary_table_id_(arena, from.primary_table_id_),
        creature_table_id_(arena, from.creature_table_id_),
        treasure_table_id_(arena, from.treasure_table_id_),
        environment_table_id_(arena, from.environment_table_id_),
        complication_table_id_(arena, from.complication_table_id_) {}

EncounterTables::EncounterTables(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EncounterTables& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EncounterTables_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EncounterTables* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.EncounterTables)
}
PROTOBUF_NDEBUG_INLINE EncounterTables::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        primary_table_id_(arena),
        creature_table_id_(arena),
        treasure_table_id_(arena),
        environment_table_id_(arena),
        complication_table_id_(arena) {}

inline void EncounterTables::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
EncounterTables::~EncounterTables() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.EncounterTables)
  SharedDtor(*this);
}
inline void EncounterTables::SharedDtor(MessageLite& self) {
  EncounterTables& this_ = static_cast<EncounterTables&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.primary_table_id_.Destroy();
  this_._impl_.creature_table_id_.Destroy();
  this_._impl_.treasure_table_id_.Destroy();
  this_._impl_.environment_table_id_.Destroy();
  this_._impl_.complication_table_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EncounterTables::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EncounterTables(arena);
}
constexpr auto EncounterTables::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EncounterTables),
                                            alignof(EncounterTables));
}
constexpr auto EncounterTables::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EncounterTables_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EncounterTables::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EncounterTables>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EncounterTables::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EncounterTables>(), &EncounterTables::ByteSizeLong,
              &EncounterTables::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EncounterTables, _impl_._cached_size_),
          false,
      },
      &EncounterTables::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EncounterTables_class_data_ =
        EncounterTables::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EncounterTables::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EncounterTables_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EncounterTables_class_data_.tc_table);
  return EncounterTables_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 128, 2>
EncounterTables::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EncounterTables, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    EncounterTables_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::EncounterTables>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string primary_table_id = 1 [json_name = "primaryTableId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EncounterTables, _impl_.primary_table_id_)}},
    // string creature_table_id = 2 [json_name = "creatureTableId"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(EncounterTables, _impl_.creature_table_id_)}},
    // string treasure_table_id = 3 [json_name = "treasureTableId"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(EncounterTables, _impl_.treasure_table_id_)}},
    // string environment_table_id = 4 [json_name = "environmentTableId"];
    {::_pbi::TcParser::FastUS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(EncounterTables, _impl_.environment_table_id_)}},
    // string complication_table_id = 5 [json_name = "complicationTableId"];
    {::_pbi::TcParser::FastUS1,
     {42, 4, 0, PROTOBUF_FIELD_OFFSET(EncounterTables, _impl_.complication_table_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string primary_table_id = 1 [json_name = "primaryTableId"];
    {PROTOBUF_FIELD_OFFSET(EncounterTables, _impl_.primary_table_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string creature_table_id = 2 [json_name = "creatureTableId"];
    {PROTOBUF_FIELD_OFFSET(EncounterTables, _impl_.creature_table_id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string treasure_table_id = 3 [json_name = "treasureTableId"];
    {PROTOBUF_FIELD_OFFSET(EncounterTables, _impl_.treasure_table_id_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string environment_table_id = 4 [json_name = "environmentTableId"];
    {PROTOBUF_FIELD_OFFSET(EncounterTables, _impl_.environment_table_id_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string complication_table_id = 5 [json_name = "complicationTableId"];
    {PROTOBUF_FIELD_OFFSET(EncounterTables, _impl_.complication_table_id_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\20\21\21\24\25\0\0"
    "api.v1alpha1.EncounterTables"
    "primary_table_id"
    "creature_table_id"
    "treasure_table_id"
    "environment_table_id"
    "complication_table_id"
  }},
};
PROTOBUF_NOINLINE void EncounterTables::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.EncounterTables)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.primary_table_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.creature_table_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.treasure_table_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.environment_table_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      _impl_.complication_table_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EncounterTables::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EncounterTables& this_ = static_cast<const EncounterTables&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EncounterTables::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EncounterTables& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.EncounterTables)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string primary_table_id = 1 [json_name = "primaryTableId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_primary_table_id().empty()) {
      const ::std::string& _s = this_._internal_primary_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EncounterTables.primary_table_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string creature_table_id = 2 [json_name = "creatureTableId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_creature_table_id().empty()) {
      const ::std::string& _s = this_._internal_creature_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EncounterTables.creature_table_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string treasure_table_id = 3 [json_name = "treasureTableId"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_treasure_table_id().empty()) {
      const ::std::string& _s = this_._internal_treasure_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EncounterTables.treasure_table_id");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string environment_table_id = 4 [json_name = "environmentTableId"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (!this_._internal_environment_table_id().empty()) {
      const ::std::string& _s = this_._internal_environment_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EncounterTables.environment_table_id");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // string complication_table_id = 5 [json_name = "complicationTableId"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (!this_._internal_complication_table_id().empty()) {
      const ::std::string& _s = this_._internal_complication_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EncounterTables.complication_table_id");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.EncounterTables)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EncounterTables::ByteSizeLong(const MessageLite& base) {
  const EncounterTables& this_ = static_cast<const EncounterTables&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EncounterTables::ByteSizeLong() const {
  const EncounterTables& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.EncounterTables)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // string primary_table_id = 1 [json_name = "primaryTableId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_primary_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_primary_table_id());
      }
    }
    // string creature_table_id = 2 [json_name = "creatureTableId"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_creature_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_creature_table_id());
      }
    }
    // string treasure_table_id = 3 [json_name = "treasureTableId"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_treasure_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_treasure_table_id());
      }
    }
    // string environment_table_id = 4 [json_name = "environmentTableId"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_environment_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_environment_table_id());
      }
    }
    // string complication_table_id = 5 [json_name = "complicationTableId"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (!this_._internal_complication_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_complication_table_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EncounterTables::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EncounterTables*>(&to_msg);
  auto& from = static_cast<const EncounterTables&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.EncounterTables)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_primary_table_id().empty()) {
        _this->_internal_set_primary_table_id(from._internal_primary_table_id());
      } else {
        if (_this->_impl_.primary_table_id_.IsDefault()) {
          _this->_internal_set_primary_table_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_creature_table_id().empty()) {
        _this->_internal_set_creature_table_id(from._internal_creature_table_id());
      } else {
        if (_this->_impl_.creature_table_id_.IsDefault()) {
          _this->_internal_set_creature_table_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_treasure_table_id().empty()) {
        _this->_internal_set_treasure_table_id(from._internal_treasure_table_id());
      } else {
        if (_this->_impl_.treasure_table_id_.IsDefault()) {
          _this->_internal_set_treasure_table_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_environment_table_id().empty()) {
        _this->_internal_set_environment_table_id(from._internal_environment_table_id());
      } else {
        if (_this->_impl_.environment_table_id_.IsDefault()) {
          _this->_internal_set_environment_table_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (!from._internal_complication_table_id().empty()) {
        _this->_internal_set_complication_table_id(from._internal_complication_table_id());
      } else {
        if (_this->_impl_.complication_table_id_.IsDefault()) {
          _this->_internal_set_complication_table_id("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EncounterTables::CopyFrom(const EncounterTables& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.EncounterTables)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EncounterTables::InternalSwap(EncounterTables* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.primary_table_id_, &other->_impl_.primary_table_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.creature_table_id_, &other->_impl_.creature_table_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.treasure_table_id_, &other->_impl_.treasure_table_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.environment_table_id_, &other->_impl_.environment_table_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.complication_table_id_, &other->_impl_.complication_table_id_, arena);
}

::google::protobuf::Metadata EncounterTables::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EncounterGenerationOptions::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<EncounterGenerationOptions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EncounterGenerationOptions, _impl_._has_bits_);
};

EncounterGenerationOptions::EncounterGenerationOptions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EncounterGenerationOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.EncounterGenerationOptions)
}
PROTOBUF_NDEBUG_INLINE EncounterGenerationOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::EncounterGenerationOptions& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        seed_(arena, from.seed_) {}

EncounterGenerationOptions::EncounterGenerationOptions(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EncounterGenerationOptions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EncounterGenerationOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EncounterGenerationOptions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, include_treasure_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, include_treasure_),
           offsetof(Impl_, max_creatures_) -
               offsetof(Impl_, include_treasure_) +
               sizeof(Impl_::max_creatures_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.EncounterGenerationOptions)
}
PROTOBUF_NDEBUG_INLINE EncounterGenerationOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        seed_(arena) {}

inline void EncounterGenerationOptions::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, include_treasure_),
           0,
           offsetof(Impl_, max_creatures_) -
               offsetof(Impl_, include_treasure_) +
               sizeof(Impl_::max_creatures_));
}
EncounterGenerationOptions::~EncounterGenerationOptions() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.EncounterGenerationOptions)
  SharedDtor(*this);
}
inline void EncounterGenerationOptions::SharedDtor(MessageLite& self) {
  EncounterGenerationOptions& this_ = static_cast<EncounterGenerationOptions&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.seed_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EncounterGenerationOptions::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EncounterGenerationOptions(arena);
}
constexpr auto EncounterGenerationOptions::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EncounterGenerationOptions),
                                            alignof(EncounterGenerationOptions));
}
constexpr auto EncounterGenerationOptions::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EncounterGenerationOptions_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EncounterGenerationOptions::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EncounterGenerationOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EncounterGenerationOptions::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EncounterGenerationOptions>(), &EncounterGenerationOptions::ByteSizeLong,
              &EncounterGenerationOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EncounterGenerationOptions, _impl_._cached_size_),
          false,
      },
      &EncounterGenerationOptions::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EncounterGenerationOptions_class_data_ =
        EncounterGenerationOptions::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EncounterGenerationOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EncounterGenerationOptions_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EncounterGenerationOptions_class_data_.tc_table);
  return EncounterGenerationOptions_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 52, 2>
EncounterGenerationOptions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EncounterGenerationOptions, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    EncounterGenerationOptions_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::EncounterGenerationOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string seed = 1 [json_name = "seed"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EncounterGenerationOptions, _impl_.seed_)}},
    // bool include_treasure = 2 [json_name = "includeTreasure"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(EncounterGenerationOptions, _impl_.include_treasure_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(EncounterGenerationOptions, _impl_.include_treasure_)}},
    // bool add_environmental_features = 3 [json_name = "addEnvironmentalFeatures"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(EncounterGenerationOptions, _impl_.add_environmental_features_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(EncounterGenerationOptions, _impl_.add_environmental_features_)}},
    // bool include_complications = 4 [json_name = "includeComplications"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(EncounterGenerationOptions, _impl_.include_complications_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(EncounterGenerationOptions, _impl_.include_complications_)}},
    // int32 max_creatures = 5 [json_name = "maxCreatures"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EncounterGenerationOptions, _impl_.max_creatures_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(EncounterGenerationOptions, _impl_.max_creatures_)}},
    // bool balance_difficulty = 6 [json_name = "balanceDifficulty"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(EncounterGenerationOptions, _impl_.balance_difficulty_), 4>(),
     {48, 4, 0, PROTOBUF_FIELD_OFFSET(EncounterGenerationOptions, _impl_.balance_difficulty_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string seed = 1 [json_name = "seed"];
    {PROTOBUF_FIELD_OFFSET(EncounterGenerationOptions, _impl_.seed_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool include_treasure = 2 [json_name = "includeTreasure"];
    {PROTOBUF_FIELD_OFFSET(EncounterGenerationOptions, _impl_.include_treasure_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool add_environmental_features = 3 [json_name = "addEnvironmentalFeatures"];
    {PROTOBUF_FIELD_OFFSET(EncounterGenerationOptions, _impl_.add_environmental_features_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool include_complications = 4 [json_name = "includeComplications"];
    {PROTOBUF_FIELD_OFFSET(EncounterGenerationOptions, _impl_.include_complications_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // int32 max_creatures = 5 [json_name = "maxCreatures"];
    {PROTOBUF_FIELD_OFFSET(EncounterGenerationOptions, _impl_.max_creatures_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // bool balance_difficulty = 6 [json_name = "balanceDifficulty"];
    {PROTOBUF_FIELD_OFFSET(EncounterGenerationOptions, _impl_.balance_difficulty_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\47\4\0\0\0\0\0\0"
    "api.v1alpha1.EncounterGenerationOptions"
    "seed"
  }},
};
PROTOBUF_NOINLINE void EncounterGenerationOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.EncounterGenerationOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.seed_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x0000003eU) != 0) {
    ::memset(&_impl_.include_treasure_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.max_creatures_) -
        reinterpret_cast<char*>(&_impl_.include_treasure_)) + sizeof(_impl_.max_creatures_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EncounterGenerationOptions::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EncounterGenerationOptions& this_ = static_cast<const EncounterGenerationOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EncounterGenerationOptions::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EncounterGenerationOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.EncounterGenerationOptions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string seed = 1 [json_name = "seed"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_seed().empty()) {
      const ::std::string& _s = this_._internal_seed();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EncounterGenerationOptions.seed");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // bool include_treasure = 2 [json_name = "includeTreasure"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_include_treasure() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_include_treasure(), target);
    }
  }

  // bool add_environmental_features = 3 [json_name = "addEnvironmentalFeatures"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_add_environmental_features() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_add_environmental_features(), target);
    }
  }

  // bool include_complications = 4 [json_name = "includeComplications"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_include_complications() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_include_complications(), target);
    }
  }

  // int32 max_creatures = 5 [json_name = "maxCreatures"];
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (this_._internal_max_creatures() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
              stream, this_._internal_max_creatures(), target);
    }
  }

  // bool balance_difficulty = 6 [json_name = "balanceDifficulty"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_balance_difficulty() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          6, this_._internal_balance_difficulty(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.EncounterGenerationOptions)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EncounterGenerationOptions::ByteSizeLong(const MessageLite& base) {
  const EncounterGenerationOptions& this_ = static_cast<const EncounterGenerationOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EncounterGenerationOptions::ByteSizeLong() const {
  const EncounterGenerationOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.EncounterGenerationOptions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    // string seed = 1 [json_name = "seed"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_seed().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_seed());
      }
    }
    // bool include_treasure = 2 [json_name = "includeTreasure"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_include_treasure() != 0) {
        total_size += 2;
      }
    }
    // bool add_environmental_features = 3 [json_name = "addEnvironmentalFeatures"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_add_environmental_features() != 0) {
        total_size += 2;
      }
    }
    // bool include_complications = 4 [json_name = "includeComplications"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_include_complications() != 0) {
        total_size += 2;
      }
    }
    // bool balance_difficulty = 6 [json_name = "balanceDifficulty"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_balance_difficulty() != 0) {
        total_size += 2;
      }
    }
    // int32 max_creatures = 5 [json_name = "maxCreatures"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_max_creatures() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_max_creatures());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EncounterGenerationOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EncounterGenerationOptions*>(&to_msg);
  auto& from = static_cast<const EncounterGenerationOptions&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.EncounterGenerationOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_seed().empty()) {
        _this->_internal_set_seed(from._internal_seed());
      } else {
        if (_this->_impl_.seed_.IsDefault()) {
          _this->_internal_set_seed("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_include_treasure() != 0) {
        _this->_impl_.include_treasure_ = from._impl_.include_treasure_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_add_environmental_features() != 0) {
        _this->_impl_.add_environmental_features_ = from._impl_.add_environmental_features_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_include_complications() != 0) {
        _this->_impl_.include_complications_ = from._impl_.include_complications_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_balance_difficulty() != 0) {
        _this->_impl_.balance_difficulty_ = from._impl_.balance_difficulty_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_max_creatures() != 0) {
        _this->_impl_.max_creatures_ = from._impl_.max_creatures_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EncounterGenerationOptions::CopyFrom(const EncounterGenerationOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.EncounterGenerationOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EncounterGenerationOptions::InternalSwap(EncounterGenerationOptions* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.seed_, &other->_impl_.seed_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EncounterGenerationOptions, _impl_.max_creatures_)
      + sizeof(EncounterGenerationOptions::_impl_.max_creatures_)
      - PROTOBUF_FIELD_OFFSET(EncounterGenerationOptions, _impl_.include_treasure_)>(
          reinterpret_cast<char*>(&_impl_.include_treasure_),
          reinterpret_cast<char*>(&other->_impl_.include_treasure_));
}

::google::protobuf::Metadata EncounterGenerationOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GenerateEncounterResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GenerateEncounterResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GenerateEncounterResponse, _impl_._has_bits_);
};

GenerateEncounterResponse::GenerateEncounterResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GenerateEncounterResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.GenerateEncounterResponse)
}
PROTOBUF_NDEBUG_INLINE GenerateEncounterResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::GenerateEncounterResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        tables_used_{visibility, arena, from.tables_used_} {}

GenerateEncounterResponse::GenerateEncounterResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GenerateEncounterResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GenerateEncounterResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GenerateEncounterResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.encounter_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.encounter_)
                : nullptr;
  _impl_.generation_stats_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.generation_stats_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.GenerateEncounterResponse)
}
PROTOBUF_NDEBUG_INLINE GenerateEncounterResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        tables_used_{visibility, arena} {}

inline void GenerateEncounterResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, encounter_),
           0,
           offsetof(Impl_, generation_stats_) -
               offsetof(Impl_, encounter_) +
               sizeof(Impl_::generation_stats_));
}
GenerateEncounterResponse::~GenerateEncounterResponse() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.GenerateEncounterResponse)
  SharedDtor(*this);
}
inline void GenerateEncounterResponse::SharedDtor(MessageLite& self) {
  GenerateEncounterResponse& this_ = static_cast<GenerateEncounterResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.encounter_;
  delete this_._impl_.generation_stats_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GenerateEncounterResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GenerateEncounterResponse(arena);
}
constexpr auto GenerateEncounterResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GenerateEncounterResponse, _impl_.tables_used_) +
          decltype(GenerateEncounterResponse::_impl_.tables_used_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GenerateEncounterResponse), alignof(GenerateEncounterResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GenerateEncounterResponse::PlacementNew_,
                                 sizeof(GenerateEncounterResponse),
                                 alignof(GenerateEncounterResponse));
  }
}
constexpr auto GenerateEncounterResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GenerateEncounterResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GenerateEncounterResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GenerateEncounterResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GenerateEncounterResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GenerateEncounterResponse>(), &GenerateEncounterResponse::ByteSizeLong,
              &GenerateEncounterResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GenerateEncounterResponse, _impl_._cached_size_),
          false,
      },
      &GenerateEncounterResponse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GenerateEncounterResponse_class_data_ =
        GenerateEncounterResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GenerateEncounterResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GenerateEncounterResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GenerateEncounterResponse_class_data_.tc_table);
  return GenerateEncounterResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 58, 2>
GenerateEncounterResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GenerateEncounterResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GenerateEncounterResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::GenerateEncounterResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .api.v1alpha1.GeneratedEncounter encounter = 1 [json_name = "encounter"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GenerateEncounterResponse, _impl_.encounter_)}},
    // .api.v1alpha1.EncounterGenerationStats generation_stats = 2 [json_name = "generationStats"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(GenerateEncounterResponse, _impl_.generation_stats_)}},
    // repeated string tables_used = 3 [json_name = "tablesUsed"];
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(GenerateEncounterResponse, _impl_.tables_used_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .api.v1alpha1.GeneratedEncounter encounter = 1 [json_name = "encounter"];
    {PROTOBUF_FIELD_OFFSET(GenerateEncounterResponse, _impl_.encounter_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.EncounterGenerationStats generation_stats = 2 [json_name = "generationStats"];
    {PROTOBUF_FIELD_OFFSET(GenerateEncounterResponse, _impl_.generation_stats_), _Internal::kHasBitsOffset + 1, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string tables_used = 3 [json_name = "tablesUsed"];
    {PROTOBUF_FIELD_OFFSET(GenerateEncounterResponse, _impl_.tables_used_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::GeneratedEncounter>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::EncounterGenerationStats>()},
  }},
  {{
    "\46\0\0\13\0\0\0\0"
    "api.v1alpha1.GenerateEncounterResponse"
    "tables_used"
  }},
};
PROTOBUF_NOINLINE void GenerateEncounterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.GenerateEncounterResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tables_used_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.encounter_ != nullptr);
      _impl_.encounter_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.generation_stats_ != nullptr);
      _impl_.generation_stats_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GenerateEncounterResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GenerateEncounterResponse& this_ = static_cast<const GenerateEncounterResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GenerateEncounterResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GenerateEncounterResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.GenerateEncounterResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.GeneratedEncounter encounter = 1 [json_name = "encounter"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.encounter_, this_._impl_.encounter_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.EncounterGenerationStats generation_stats = 2 [json_name = "generationStats"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.generation_stats_, this_._impl_.generation_stats_->GetCachedSize(), target,
        stream);
  }

  // repeated string tables_used = 3 [json_name = "tablesUsed"];
  for (int i = 0, n = this_._internal_tables_used_size(); i < n; ++i) {
    const auto& s = this_._internal_tables_used().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.GenerateEncounterResponse.tables_used");
    target = stream->WriteString(3, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.GenerateEncounterResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GenerateEncounterResponse::ByteSizeLong(const MessageLite& base) {
  const GenerateEncounterResponse& this_ = static_cast<const GenerateEncounterResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GenerateEncounterResponse::ByteSizeLong() const {
  const GenerateEncounterResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.GenerateEncounterResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string tables_used = 3 [json_name = "tablesUsed"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_tables_used().size());
      for (int i = 0, n = this_._internal_tables_used().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_tables_used().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // .api.v1alpha1.GeneratedEncounter encounter = 1 [json_name = "encounter"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.encounter_);
    }
    // .api.v1alpha1.EncounterGenerationStats generation_stats = 2 [json_name = "generationStats"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.generation_stats_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GenerateEncounterResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GenerateEncounterResponse*>(&to_msg);
  auto& from = static_cast<const GenerateEncounterResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.GenerateEncounterResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tables_used()->MergeFrom(from._internal_tables_used());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.encounter_ != nullptr);
      if (_this->_impl_.encounter_ == nullptr) {
        _this->_impl_.encounter_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.encounter_);
      } else {
        _this->_impl_.encounter_->MergeFrom(*from._impl_.encounter_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.generation_stats_ != nullptr);
      if (_this->_impl_.generation_stats_ == nullptr) {
        _this->_impl_.generation_stats_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.generation_stats_);
      } else {
        _this->_impl_.generation_stats_->MergeFrom(*from._impl_.generation_stats_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GenerateEncounterResponse::CopyFrom(const GenerateEncounterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.GenerateEncounterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GenerateEncounterResponse::InternalSwap(GenerateEncounterResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.tables_used_.InternalSwap(&other->_impl_.tables_used_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GenerateEncounterResponse, _impl_.generation_stats_)
      + sizeof(GenerateEncounterResponse::_impl_.generation_stats_)
      - PROTOBUF_FIELD_OFFSET(GenerateEncounterResponse, _impl_.encounter_)>(
          reinterpret_cast<char*>(&_impl_.encounter_),
          reinterpret_cast<char*>(&other->_impl_.encounter_));
}

::google::protobuf::Metadata GenerateEncounterResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GeneratedEncounter::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GeneratedEncounter>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GeneratedEncounter, _impl_._has_bits_);
};

GeneratedEncounter::GeneratedEncounter(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GeneratedEncounter_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.GeneratedEncounter)
}
PROTOBUF_NDEBUG_INLINE GeneratedEncounter::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::GeneratedEncounter& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        creatures_{visibility, arena, from.creatures_},
        treasure_{visibility, arena, from.treasure_},
        environmental_features_{visibility, arena, from.environmental_features_},
        complications_{visibility, arena, from.complications_},
        encounter_id_(arena, from.encounter_id_),
        name_(arena, from.name_),
        description_(arena, from.description_),
        difficulty_rating_(arena, from.difficulty_rating_) {}

GeneratedEncounter::GeneratedEncounter(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GeneratedEncounter& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GeneratedEncounter_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GeneratedEncounter* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.challenge_rating_ = from._impl_.challenge_rating_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.GeneratedEncounter)
}
PROTOBUF_NDEBUG_INLINE GeneratedEncounter::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        creatures_{visibility, arena},
        treasure_{visibility, arena},
        environmental_features_{visibility, arena},
        complications_{visibility, arena},
        encounter_id_(arena),
        name_(arena),
        description_(arena),
        difficulty_rating_(arena) {}

inline void GeneratedEncounter::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.challenge_rating_ = {};
}
GeneratedEncounter::~GeneratedEncounter() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.GeneratedEncounter)
  SharedDtor(*this);
}
inline void GeneratedEncounter::SharedDtor(MessageLite& self) {
  GeneratedEncounter& this_ = static_cast<GeneratedEncounter&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.encounter_id_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.difficulty_rating_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GeneratedEncounter::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GeneratedEncounter(arena);
}
constexpr auto GeneratedEncounter::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GeneratedEncounter, _impl_.creatures_) +
          decltype(GeneratedEncounter::_impl_.creatures_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GeneratedEncounter, _impl_.treasure_) +
          decltype(GeneratedEncounter::_impl_.treasure_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GeneratedEncounter, _impl_.environmental_features_) +
          decltype(GeneratedEncounter::_impl_.environmental_features_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GeneratedEncounter, _impl_.complications_) +
          decltype(GeneratedEncounter::_impl_.complications_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(GeneratedEncounter), alignof(GeneratedEncounter), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GeneratedEncounter::PlacementNew_,
                                 sizeof(GeneratedEncounter),
                                 alignof(GeneratedEncounter));
  }
}
constexpr auto GeneratedEncounter::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GeneratedEncounter_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GeneratedEncounter::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GeneratedEncounter>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GeneratedEncounter::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GeneratedEncounter>(), &GeneratedEncounter::ByteSizeLong,
              &GeneratedEncounter::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GeneratedEncounter, _impl_._cached_size_),
          false,
      },
      &GeneratedEncounter::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GeneratedEncounter_class_data_ =
        GeneratedEncounter::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GeneratedEncounter::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GeneratedEncounter_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GeneratedEncounter_class_data_.tc_table);
  return GeneratedEncounter_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 4, 92, 2>
GeneratedEncounter::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GeneratedEncounter, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GeneratedEncounter_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::GeneratedEncounter>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string encounter_id = 1 [json_name = "encounterId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GeneratedEncounter, _impl_.encounter_id_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(GeneratedEncounter, _impl_.name_)}},
    // string description = 3 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(GeneratedEncounter, _impl_.description_)}},
    // repeated .api.v1alpha1.EncounterCreature creatures = 4 [json_name = "creatures"];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(GeneratedEncounter, _impl_.creatures_)}},
    // repeated .api.v1alpha1.TreasureItem treasure = 5 [json_name = "treasure"];
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 1, PROTOBUF_FIELD_OFFSET(GeneratedEncounter, _impl_.treasure_)}},
    // repeated .api.v1alpha1.EnvironmentalFeature environmental_features = 6 [json_name = "environmentalFeatures"];
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 2, PROTOBUF_FIELD_OFFSET(GeneratedEncounter, _impl_.environmental_features_)}},
    // repeated .api.v1alpha1.EncounterComplication complications = 7 [json_name = "complications"];
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 3, PROTOBUF_FIELD_OFFSET(GeneratedEncounter, _impl_.complications_)}},
    // string difficulty_rating = 8 [json_name = "difficultyRating"];
    {::_pbi::TcParser::FastUS1,
     {66, 3, 0, PROTOBUF_FIELD_OFFSET(GeneratedEncounter, _impl_.difficulty_rating_)}},
    // double challenge_rating = 9 [json_name = "challengeRating"];
    {::_pbi::TcParser::FastF64S1,
     {73, 4, 0, PROTOBUF_FIELD_OFFSET(GeneratedEncounter, _impl_.challenge_rating_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string encounter_id = 1 [json_name = "encounterId"];
    {PROTOBUF_FIELD_OFFSET(GeneratedEncounter, _impl_.encounter_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(GeneratedEncounter, _impl_.name_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 3 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(GeneratedEncounter, _impl_.description_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .api.v1alpha1.EncounterCreature creatures = 4 [json_name = "creatures"];
    {PROTOBUF_FIELD_OFFSET(GeneratedEncounter, _impl_.creatures_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .api.v1alpha1.TreasureItem treasure = 5 [json_name = "treasure"];
    {PROTOBUF_FIELD_OFFSET(GeneratedEncounter, _impl_.treasure_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .api.v1alpha1.EnvironmentalFeature environmental_features = 6 [json_name = "environmentalFeatures"];
    {PROTOBUF_FIELD_OFFSET(GeneratedEncounter, _impl_.environmental_features_), -1, 2, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .api.v1alpha1.EncounterComplication complications = 7 [json_name = "complications"];
    {PROTOBUF_FIELD_OFFSET(GeneratedEncounter, _impl_.complications_), -1, 3, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string difficulty_rating = 8 [json_name = "difficultyRating"];
    {PROTOBUF_FIELD_OFFSET(GeneratedEncounter, _impl_.difficulty_rating_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double challenge_rating = 9 [json_name = "challengeRating"];
    {PROTOBUF_FIELD_OFFSET(GeneratedEncounter, _impl_.challenge_rating_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::EncounterCreature>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::TreasureItem>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::EnvironmentalFeature>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::EncounterComplication>()},
  }},
  {{
    "\37\14\4\13\0\0\0\0\21\0\0\0\0\0\0\0"
    "api.v1alpha1.GeneratedEncounter"
    "encounter_id"
    "name"
    "description"
    "difficulty_rating"
  }},
};
PROTOBUF_NOINLINE void GeneratedEncounter::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.GeneratedEncounter)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.creatures_.Clear();
  _impl_.treasure_.Clear();
  _impl_.environmental_features_.Clear();
  _impl_.complications_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.encounter_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.difficulty_rating_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.challenge_rating_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GeneratedEncounter::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GeneratedEncounter& this_ = static_cast<const GeneratedEncounter&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GeneratedEncounter::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GeneratedEncounter& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.GeneratedEncounter)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string encounter_id = 1 [json_name = "encounterId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_encounter_id().empty()) {
      const ::std::string& _s = this_._internal_encounter_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.GeneratedEncounter.encounter_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string name = 2 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.GeneratedEncounter.name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string description = 3 [json_name = "description"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.GeneratedEncounter.description");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // repeated .api.v1alpha1.EncounterCreature creatures = 4 [json_name = "creatures"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_creatures_size());
       i < n; i++) {
    const auto& repfield = this_._internal_creatures().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .api.v1alpha1.TreasureItem treasure = 5 [json_name = "treasure"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_treasure_size());
       i < n; i++) {
    const auto& repfield = this_._internal_treasure().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .api.v1alpha1.EnvironmentalFeature environmental_features = 6 [json_name = "environmentalFeatures"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_environmental_features_size());
       i < n; i++) {
    const auto& repfield = this_._internal_environmental_features().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            6, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .api.v1alpha1.EncounterComplication complications = 7 [json_name = "complications"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_complications_size());
       i < n; i++) {
    const auto& repfield = this_._internal_complications().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            7, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // string difficulty_rating = 8 [json_name = "difficultyRating"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (!this_._internal_difficulty_rating().empty()) {
      const ::std::string& _s = this_._internal_difficulty_rating();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.GeneratedEncounter.difficulty_rating");
      target = stream->WriteStringMaybeAliased(8, _s, target);
    }
  }

  // double challenge_rating = 9 [json_name = "challengeRating"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_challenge_rating()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          9, this_._internal_challenge_rating(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.GeneratedEncounter)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GeneratedEncounter::ByteSizeLong(const MessageLite& base) {
  const GeneratedEncounter& this_ = static_cast<const GeneratedEncounter&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GeneratedEncounter::ByteSizeLong() const {
  const GeneratedEncounter& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.GeneratedEncounter)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.EncounterCreature creatures = 4 [json_name = "creatures"];
    {
      total_size += 1UL * this_._internal_creatures_size();
      for (const auto& msg : this_._internal_creatures()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .api.v1alpha1.TreasureItem treasure = 5 [json_name = "treasure"];
    {
      total_size += 1UL * this_._internal_treasure_size();
      for (const auto& msg : this_._internal_treasure()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .api.v1alpha1.EnvironmentalFeature environmental_features = 6 [json_name = "environmentalFeatures"];
    {
      total_size += 1UL * this_._internal_environmental_features_size();
      for (const auto& msg : this_._internal_environmental_features()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .api.v1alpha1.EncounterComplication complications = 7 [json_name = "complications"];
    {
      total_size += 1UL * this_._internal_complications_size();
      for (const auto& msg : this_._internal_complications()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // string encounter_id = 1 [json_name = "encounterId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_encounter_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_encounter_id());
      }
    }
    // string name = 2 [json_name = "name"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string description = 3 [json_name = "description"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // string difficulty_rating = 8 [json_name = "difficultyRating"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_difficulty_rating().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_difficulty_rating());
      }
    }
    // double challenge_rating = 9 [json_name = "challengeRating"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_challenge_rating()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GeneratedEncounter::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GeneratedEncounter*>(&to_msg);
  auto& from = static_cast<const GeneratedEncounter&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.GeneratedEncounter)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_creatures()->MergeFrom(
      from._internal_creatures());
  _this->_internal_mutable_treasure()->MergeFrom(
      from._internal_treasure());
  _this->_internal_mutable_environmental_features()->MergeFrom(
      from._internal_environmental_features());
  _this->_internal_mutable_complications()->MergeFrom(
      from._internal_complications());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_encounter_id().empty()) {
        _this->_internal_set_encounter_id(from._internal_encounter_id());
      } else {
        if (_this->_impl_.encounter_id_.IsDefault()) {
          _this->_internal_set_encounter_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_difficulty_rating().empty()) {
        _this->_internal_set_difficulty_rating(from._internal_difficulty_rating());
      } else {
        if (_this->_impl_.difficulty_rating_.IsDefault()) {
          _this->_internal_set_difficulty_rating("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_challenge_rating()) != 0) {
        _this->_impl_.challenge_rating_ = from._impl_.challenge_rating_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GeneratedEncounter::CopyFrom(const GeneratedEncounter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.GeneratedEncounter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GeneratedEncounter::InternalSwap(GeneratedEncounter* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.creatures_.InternalSwap(&other->_impl_.creatures_);
  _impl_.treasure_.InternalSwap(&other->_impl_.treasure_);
  _impl_.environmental_features_.InternalSwap(&other->_impl_.environmental_features_);
  _impl_.complications_.InternalSwap(&other->_impl_.complications_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.encounter_id_, &other->_impl_.encounter_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.difficulty_rating_, &other->_impl_.difficulty_rating_, arena);
  swap(_impl_.challenge_rating_, other->_impl_.challenge_rating_);
}

::google::protobuf::Metadata GeneratedEncounter::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EncounterCreature::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<EncounterCreature>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EncounterCreature, _impl_._has_bits_);
};

EncounterCreature::EncounterCreature(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EncounterCreature_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.EncounterCreature)
}
PROTOBUF_NDEBUG_INLINE EncounterCreature::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::EncounterCreature& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        creature_id_(arena, from.creature_id_),
        name_(arena, from.name_),
        role_(arena, from.role_),
        special_instructions_(arena, from.special_instructions_) {}

EncounterCreature::EncounterCreature(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EncounterCreature& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EncounterCreature_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EncounterCreature* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.spawn_preferences_ = ((cached_has_bits & 0x00000010U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.spawn_preferences_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, challenge_rating_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, challenge_rating_),
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, challenge_rating_) +
               sizeof(Impl_::quantity_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.EncounterCreature)
}
PROTOBUF_NDEBUG_INLINE EncounterCreature::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        creature_id_(arena),
        name_(arena),
        role_(arena),
        special_instructions_(arena) {}

inline void EncounterCreature::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, spawn_preferences_),
           0,
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, spawn_preferences_) +
               sizeof(Impl_::quantity_));
}
EncounterCreature::~EncounterCreature() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.EncounterCreature)
  SharedDtor(*this);
}
inline void EncounterCreature::SharedDtor(MessageLite& self) {
  EncounterCreature& this_ = static_cast<EncounterCreature&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.creature_id_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.role_.Destroy();
  this_._impl_.special_instructions_.Destroy();
  delete this_._impl_.spawn_preferences_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EncounterCreature::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EncounterCreature(arena);
}
constexpr auto EncounterCreature::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EncounterCreature),
                                            alignof(EncounterCreature));
}
constexpr auto EncounterCreature::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EncounterCreature_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EncounterCreature::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EncounterCreature>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EncounterCreature::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EncounterCreature>(), &EncounterCreature::ByteSizeLong,
              &EncounterCreature::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EncounterCreature, _impl_._cached_size_),
          false,
      },
      &EncounterCreature::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EncounterCreature_class_data_ =
        EncounterCreature::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EncounterCreature::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EncounterCreature_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EncounterCreature_class_data_.tc_table);
  return EncounterCreature_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 78, 2>
EncounterCreature::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EncounterCreature, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    EncounterCreature_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::EncounterCreature>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string creature_id = 1 [json_name = "creatureId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EncounterCreature, _impl_.creature_id_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(EncounterCreature, _impl_.name_)}},
    // int32 quantity = 3 [json_name = "quantity"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EncounterCreature, _impl_.quantity_), 6>(),
     {24, 6, 0, PROTOBUF_FIELD_OFFSET(EncounterCreature, _impl_.quantity_)}},
    // double challenge_rating = 4 [json_name = "challengeRating"];
    {::_pbi::TcParser::FastF64S1,
     {33, 5, 0, PROTOBUF_FIELD_OFFSET(EncounterCreature, _impl_.challenge_rating_)}},
    // string role = 5 [json_name = "role"];
    {::_pbi::TcParser::FastUS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(EncounterCreature, _impl_.role_)}},
    // .api.v1alpha1.EntitySpawnPreferences spawn_preferences = 6 [json_name = "spawnPreferences"];
    {::_pbi::TcParser::FastMtS1,
     {50, 4, 0, PROTOBUF_FIELD_OFFSET(EncounterCreature, _impl_.spawn_preferences_)}},
    // string special_instructions = 7 [json_name = "specialInstructions"];
    {::_pbi::TcParser::FastUS1,
     {58, 3, 0, PROTOBUF_FIELD_OFFSET(EncounterCreature, _impl_.special_instructions_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string creature_id = 1 [json_name = "creatureId"];
    {PROTOBUF_FIELD_OFFSET(EncounterCreature, _impl_.creature_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(EncounterCreature, _impl_.name_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 quantity = 3 [json_name = "quantity"];
    {PROTOBUF_FIELD_OFFSET(EncounterCreature, _impl_.quantity_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // double challenge_rating = 4 [json_name = "challengeRating"];
    {PROTOBUF_FIELD_OFFSET(EncounterCreature, _impl_.challenge_rating_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // string role = 5 [json_name = "role"];
    {PROTOBUF_FIELD_OFFSET(EncounterCreature, _impl_.role_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.EntitySpawnPreferences spawn_preferences = 6 [json_name = "spawnPreferences"];
    {PROTOBUF_FIELD_OFFSET(EncounterCreature, _impl_.spawn_preferences_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string special_instructions = 7 [json_name = "specialInstructions"];
    {PROTOBUF_FIELD_OFFSET(EncounterCreature, _impl_.special_instructions_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::EntitySpawnPreferences>()},
  }},
  {{
    "\36\13\4\0\0\4\0\24"
    "api.v1alpha1.EncounterCreature"
    "creature_id"
    "name"
    "role"
    "special_instructions"
  }},
};
PROTOBUF_NOINLINE void EncounterCreature::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.EncounterCreature)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.creature_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.role_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.special_instructions_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(_impl_.spawn_preferences_ != nullptr);
      _impl_.spawn_preferences_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000060U) != 0) {
    ::memset(&_impl_.challenge_rating_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.quantity_) -
        reinterpret_cast<char*>(&_impl_.challenge_rating_)) + sizeof(_impl_.quantity_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EncounterCreature::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EncounterCreature& this_ = static_cast<const EncounterCreature&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EncounterCreature::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EncounterCreature& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.EncounterCreature)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string creature_id = 1 [json_name = "creatureId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_creature_id().empty()) {
      const ::std::string& _s = this_._internal_creature_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EncounterCreature.creature_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string name = 2 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EncounterCreature.name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int32 quantity = 3 [json_name = "quantity"];
  if ((this_._impl_._has_bits_[0] & 0x00000040U) != 0) {
    if (this_._internal_quantity() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_quantity(), target);
    }
  }

  // double challenge_rating = 4 [json_name = "challengeRating"];
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_challenge_rating()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          4, this_._internal_challenge_rating(), target);
    }
  }

  // string role = 5 [json_name = "role"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_role().empty()) {
      const ::std::string& _s = this_._internal_role();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EncounterCreature.role");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.EntitySpawnPreferences spawn_preferences = 6 [json_name = "spawnPreferences"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.spawn_preferences_, this_._impl_.spawn_preferences_->GetCachedSize(), target,
        stream);
  }

  // string special_instructions = 7 [json_name = "specialInstructions"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    if (!this_._internal_special_instructions().empty()) {
      const ::std::string& _s = this_._internal_special_instructions();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EncounterCreature.special_instructions");
      target = stream->WriteStringMaybeAliased(7, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.EncounterCreature)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EncounterCreature::ByteSizeLong(const MessageLite& base) {
  const EncounterCreature& this_ = static_cast<const EncounterCreature&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EncounterCreature::ByteSizeLong() const {
  const EncounterCreature& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.EncounterCreature)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    // string creature_id = 1 [json_name = "creatureId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_creature_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_creature_id());
      }
    }
    // string name = 2 [json_name = "name"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string role = 5 [json_name = "role"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_role().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_role());
      }
    }
    // string special_instructions = 7 [json_name = "specialInstructions"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_special_instructions().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_special_instructions());
      }
    }
    // .api.v1alpha1.EntitySpawnPreferences spawn_preferences = 6 [json_name = "spawnPreferences"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.spawn_preferences_);
    }
    // double challenge_rating = 4 [json_name = "challengeRating"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_challenge_rating()) != 0) {
        total_size += 9;
      }
    }
    // int32 quantity = 3 [json_name = "quantity"];
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (this_._internal_quantity() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_quantity());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EncounterCreature::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EncounterCreature*>(&to_msg);
  auto& from = static_cast<const EncounterCreature&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.EncounterCreature)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_creature_id().empty()) {
        _this->_internal_set_creature_id(from._internal_creature_id());
      } else {
        if (_this->_impl_.creature_id_.IsDefault()) {
          _this->_internal_set_creature_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_role().empty()) {
        _this->_internal_set_role(from._internal_role());
      } else {
        if (_this->_impl_.role_.IsDefault()) {
          _this->_internal_set_role("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_special_instructions().empty()) {
        _this->_internal_set_special_instructions(from._internal_special_instructions());
      } else {
        if (_this->_impl_.special_instructions_.IsDefault()) {
          _this->_internal_set_special_instructions("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(from._impl_.spawn_preferences_ != nullptr);
      if (_this->_impl_.spawn_preferences_ == nullptr) {
        _this->_impl_.spawn_preferences_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.spawn_preferences_);
      } else {
        _this->_impl_.spawn_preferences_->MergeFrom(*from._impl_.spawn_preferences_);
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_challenge_rating()) != 0) {
        _this->_impl_.challenge_rating_ = from._impl_.challenge_rating_;
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (from._internal_quantity() != 0) {
        _this->_impl_.quantity_ = from._impl_.quantity_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EncounterCreature::CopyFrom(const EncounterCreature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.EncounterCreature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EncounterCreature::InternalSwap(EncounterCreature* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.creature_id_, &other->_impl_.creature_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.role_, &other->_impl_.role_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.special_instructions_, &other->_impl_.special_instructions_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EncounterCreature, _impl_.quantity_)
      + sizeof(EncounterCreature::_impl_.quantity_)
      - PROTOBUF_FIELD_OFFSET(EncounterCreature, _impl_.spawn_preferences_)>(
          reinterpret_cast<char*>(&_impl_.spawn_preferences_),
          reinterpret_cast<char*>(&other->_impl_.spawn_preferences_));
}

::google::protobuf::Metadata EncounterCreature::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TreasureItem::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TreasureItem>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TreasureItem, _impl_._has_bits_);
};

TreasureItem::TreasureItem(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TreasureItem_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.TreasureItem)
}
PROTOBUF_NDEBUG_INLINE TreasureItem::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::TreasureItem& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        item_id_(arena, from.item_id_),
        name_(arena, from.name_),
        rarity_(arena, from.rarity_),
        location_(arena, from.location_) {}

TreasureItem::TreasureItem(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TreasureItem& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TreasureItem_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TreasureItem* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, quantity_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, quantity_),
           offsetof(Impl_, is_magical_) -
               offsetof(Impl_, quantity_) +
               sizeof(Impl_::is_magical_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.TreasureItem)
}
PROTOBUF_NDEBUG_INLINE TreasureItem::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        item_id_(arena),
        name_(arena),
        rarity_(arena),
        location_(arena) {}

inline void TreasureItem::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, quantity_),
           0,
           offsetof(Impl_, is_magical_) -
               offsetof(Impl_, quantity_) +
               sizeof(Impl_::is_magical_));
}
TreasureItem::~TreasureItem() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.TreasureItem)
  SharedDtor(*this);
}
inline void TreasureItem::SharedDtor(MessageLite& self) {
  TreasureItem& this_ = static_cast<TreasureItem&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.item_id_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.rarity_.Destroy();
  this_._impl_.location_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TreasureItem::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TreasureItem(arena);
}
constexpr auto TreasureItem::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TreasureItem),
                                            alignof(TreasureItem));
}
constexpr auto TreasureItem::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TreasureItem_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TreasureItem::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TreasureItem>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TreasureItem::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TreasureItem>(), &TreasureItem::ByteSizeLong,
              &TreasureItem::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TreasureItem, _impl_._cached_size_),
          false,
      },
      &TreasureItem::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TreasureItem_class_data_ =
        TreasureItem::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TreasureItem::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TreasureItem_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TreasureItem_class_data_.tc_table);
  return TreasureItem_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 59, 2>
TreasureItem::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TreasureItem, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TreasureItem_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::TreasureItem>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string item_id = 1 [json_name = "itemId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TreasureItem, _impl_.item_id_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(TreasureItem, _impl_.name_)}},
    // int32 quantity = 3 [json_name = "quantity"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TreasureItem, _impl_.quantity_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(TreasureItem, _impl_.quantity_)}},
    // int32 value_gp = 4 [json_name = "valueGp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TreasureItem, _impl_.value_gp_), 5>(),
     {32, 5, 0, PROTOBUF_FIELD_OFFSET(TreasureItem, _impl_.value_gp_)}},
    // string rarity = 5 [json_name = "rarity"];
    {::_pbi::TcParser::FastUS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(TreasureItem, _impl_.rarity_)}},
    // bool is_magical = 6 [json_name = "isMagical"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TreasureItem, _impl_.is_magical_), 6>(),
     {48, 6, 0, PROTOBUF_FIELD_OFFSET(TreasureItem, _impl_.is_magical_)}},
    // string location = 7 [json_name = "location"];
    {::_pbi::TcParser::FastUS1,
     {58, 3, 0, PROTOBUF_FIELD_OFFSET(TreasureItem, _impl_.location_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string item_id = 1 [json_name = "itemId"];
    {PROTOBUF_FIELD_OFFSET(TreasureItem, _impl_.item_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(TreasureItem, _impl_.name_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 quantity = 3 [json_name = "quantity"];
    {PROTOBUF_FIELD_OFFSET(TreasureItem, _impl_.quantity_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 value_gp = 4 [json_name = "valueGp"];
    {PROTOBUF_FIELD_OFFSET(TreasureItem, _impl_.value_gp_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string rarity = 5 [json_name = "rarity"];
    {PROTOBUF_FIELD_OFFSET(TreasureItem, _impl_.rarity_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool is_magical = 6 [json_name = "isMagical"];
    {PROTOBUF_FIELD_OFFSET(TreasureItem, _impl_.is_magical_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string location = 7 [json_name = "location"];
    {PROTOBUF_FIELD_OFFSET(TreasureItem, _impl_.location_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\7\4\0\0\6\0\10"
    "api.v1alpha1.TreasureItem"
    "item_id"
    "name"
    "rarity"
    "location"
  }},
};
PROTOBUF_NOINLINE void TreasureItem::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.TreasureItem)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.item_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.rarity_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.location_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x00000070U) != 0) {
    ::memset(&_impl_.quantity_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_magical_) -
        reinterpret_cast<char*>(&_impl_.quantity_)) + sizeof(_impl_.is_magical_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TreasureItem::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TreasureItem& this_ = static_cast<const TreasureItem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TreasureItem::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TreasureItem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.TreasureItem)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string item_id = 1 [json_name = "itemId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_item_id().empty()) {
      const ::std::string& _s = this_._internal_item_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TreasureItem.item_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string name = 2 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TreasureItem.name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int32 quantity = 3 [json_name = "quantity"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_quantity() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_quantity(), target);
    }
  }

  // int32 value_gp = 4 [json_name = "valueGp"];
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (this_._internal_value_gp() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_value_gp(), target);
    }
  }

  // string rarity = 5 [json_name = "rarity"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_rarity().empty()) {
      const ::std::string& _s = this_._internal_rarity();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TreasureItem.rarity");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  // bool is_magical = 6 [json_name = "isMagical"];
  if ((this_._impl_._has_bits_[0] & 0x00000040U) != 0) {
    if (this_._internal_is_magical() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          6, this_._internal_is_magical(), target);
    }
  }

  // string location = 7 [json_name = "location"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (!this_._internal_location().empty()) {
      const ::std::string& _s = this_._internal_location();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TreasureItem.location");
      target = stream->WriteStringMaybeAliased(7, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.TreasureItem)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TreasureItem::ByteSizeLong(const MessageLite& base) {
  const TreasureItem& this_ = static_cast<const TreasureItem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TreasureItem::ByteSizeLong() const {
  const TreasureItem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.TreasureItem)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    // string item_id = 1 [json_name = "itemId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_item_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_item_id());
      }
    }
    // string name = 2 [json_name = "name"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string rarity = 5 [json_name = "rarity"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_rarity().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_rarity());
      }
    }
    // string location = 7 [json_name = "location"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_location().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_location());
      }
    }
    // int32 quantity = 3 [json_name = "quantity"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_quantity() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_quantity());
      }
    }
    // int32 value_gp = 4 [json_name = "valueGp"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_value_gp() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_value_gp());
      }
    }
    // bool is_magical = 6 [json_name = "isMagical"];
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (this_._internal_is_magical() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TreasureItem::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TreasureItem*>(&to_msg);
  auto& from = static_cast<const TreasureItem&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.TreasureItem)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_item_id().empty()) {
        _this->_internal_set_item_id(from._internal_item_id());
      } else {
        if (_this->_impl_.item_id_.IsDefault()) {
          _this->_internal_set_item_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_rarity().empty()) {
        _this->_internal_set_rarity(from._internal_rarity());
      } else {
        if (_this->_impl_.rarity_.IsDefault()) {
          _this->_internal_set_rarity("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_location().empty()) {
        _this->_internal_set_location(from._internal_location());
      } else {
        if (_this->_impl_.location_.IsDefault()) {
          _this->_internal_set_location("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_quantity() != 0) {
        _this->_impl_.quantity_ = from._impl_.quantity_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_value_gp() != 0) {
        _this->_impl_.value_gp_ = from._impl_.value_gp_;
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (from._internal_is_magical() != 0) {
        _this->_impl_.is_magical_ = from._impl_.is_magical_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TreasureItem::CopyFrom(const TreasureItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.TreasureItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TreasureItem::InternalSwap(TreasureItem* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.item_id_, &other->_impl_.item_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.rarity_, &other->_impl_.rarity_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.location_, &other->_impl_.location_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TreasureItem, _impl_.is_magical_)
      + sizeof(TreasureItem::_impl_.is_magical_)
      - PROTOBUF_FIELD_OFFSET(TreasureItem, _impl_.quantity_)>(
          reinterpret_cast<char*>(&_impl_.quantity_),
          reinterpret_cast<char*>(&other->_impl_.quantity_));
}

::google::protobuf::Metadata TreasureItem::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EnvironmentalFeature::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<EnvironmentalFeature>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EnvironmentalFeature, _impl_._has_bits_);
};

EnvironmentalFeature::EnvironmentalFeature(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EnvironmentalFeature_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.EnvironmentalFeature)
}
PROTOBUF_NDEBUG_INLINE EnvironmentalFeature::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::EnvironmentalFeature& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        effects_{visibility, arena, from.effects_},
        feature_id_(arena, from.feature_id_),
        name_(arena, from.name_),
        description_(arena, from.description_),
        feature_type_(arena, from.feature_type_),
        preferred_location_(arena, from.preferred_location_) {}

EnvironmentalFeature::EnvironmentalFeature(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EnvironmentalFeature& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EnvironmentalFeature_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EnvironmentalFeature* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.EnvironmentalFeature)
}
PROTOBUF_NDEBUG_INLINE EnvironmentalFeature::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        effects_{visibility, arena},
        feature_id_(arena),
        name_(arena),
        description_(arena),
        feature_type_(arena),
        preferred_location_(arena) {}

inline void EnvironmentalFeature::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
EnvironmentalFeature::~EnvironmentalFeature() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.EnvironmentalFeature)
  SharedDtor(*this);
}
inline void EnvironmentalFeature::SharedDtor(MessageLite& self) {
  EnvironmentalFeature& this_ = static_cast<EnvironmentalFeature&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.feature_id_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.feature_type_.Destroy();
  this_._impl_.preferred_location_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EnvironmentalFeature::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EnvironmentalFeature(arena);
}
constexpr auto EnvironmentalFeature::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(EnvironmentalFeature, _impl_.effects_) +
          decltype(EnvironmentalFeature::_impl_.effects_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(EnvironmentalFeature), alignof(EnvironmentalFeature), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&EnvironmentalFeature::PlacementNew_,
                                 sizeof(EnvironmentalFeature),
                                 alignof(EnvironmentalFeature));
  }
}
constexpr auto EnvironmentalFeature::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EnvironmentalFeature_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EnvironmentalFeature::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EnvironmentalFeature>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EnvironmentalFeature::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EnvironmentalFeature>(), &EnvironmentalFeature::ByteSizeLong,
              &EnvironmentalFeature::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EnvironmentalFeature, _impl_._cached_size_),
          false,
      },
      &EnvironmentalFeature::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EnvironmentalFeature_class_data_ =
        EnvironmentalFeature::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EnvironmentalFeature::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EnvironmentalFeature_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EnvironmentalFeature_class_data_.tc_table);
  return EnvironmentalFeature_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 104, 2>
EnvironmentalFeature::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EnvironmentalFeature, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    EnvironmentalFeature_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::EnvironmentalFeature>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string feature_id = 1 [json_name = "featureId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EnvironmentalFeature, _impl_.feature_id_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(EnvironmentalFeature, _impl_.name_)}},
    // string description = 3 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(EnvironmentalFeature, _impl_.description_)}},
    // string feature_type = 4 [json_name = "featureType"];
    {::_pbi::TcParser::FastUS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(EnvironmentalFeature, _impl_.feature_type_)}},
    // string preferred_location = 5 [json_name = "preferredLocation"];
    {::_pbi::TcParser::FastUS1,
     {42, 4, 0, PROTOBUF_FIELD_OFFSET(EnvironmentalFeature, _impl_.preferred_location_)}},
    // repeated string effects = 6 [json_name = "effects"];
    {::_pbi::TcParser::FastUR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(EnvironmentalFeature, _impl_.effects_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string feature_id = 1 [json_name = "featureId"];
    {PROTOBUF_FIELD_OFFSET(EnvironmentalFeature, _impl_.feature_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(EnvironmentalFeature, _impl_.name_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 3 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(EnvironmentalFeature, _impl_.description_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string feature_type = 4 [json_name = "featureType"];
    {PROTOBUF_FIELD_OFFSET(EnvironmentalFeature, _impl_.feature_type_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string preferred_location = 5 [json_name = "preferredLocation"];
    {PROTOBUF_FIELD_OFFSET(EnvironmentalFeature, _impl_.preferred_location_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string effects = 6 [json_name = "effects"];
    {PROTOBUF_FIELD_OFFSET(EnvironmentalFeature, _impl_.effects_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\41\12\4\13\14\22\7\0"
    "api.v1alpha1.EnvironmentalFeature"
    "feature_id"
    "name"
    "description"
    "feature_type"
    "preferred_location"
    "effects"
  }},
};
PROTOBUF_NOINLINE void EnvironmentalFeature::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.EnvironmentalFeature)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.effects_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.feature_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.feature_type_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      _impl_.preferred_location_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EnvironmentalFeature::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EnvironmentalFeature& this_ = static_cast<const EnvironmentalFeature&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EnvironmentalFeature::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EnvironmentalFeature& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.EnvironmentalFeature)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string feature_id = 1 [json_name = "featureId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_feature_id().empty()) {
      const ::std::string& _s = this_._internal_feature_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EnvironmentalFeature.feature_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string name = 2 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EnvironmentalFeature.name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string description = 3 [json_name = "description"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EnvironmentalFeature.description");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string feature_type = 4 [json_name = "featureType"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (!this_._internal_feature_type().empty()) {
      const ::std::string& _s = this_._internal_feature_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EnvironmentalFeature.feature_type");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // string preferred_location = 5 [json_name = "preferredLocation"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (!this_._internal_preferred_location().empty()) {
      const ::std::string& _s = this_._internal_preferred_location();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EnvironmentalFeature.preferred_location");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  // repeated string effects = 6 [json_name = "effects"];
  for (int i = 0, n = this_._internal_effects_size(); i < n; ++i) {
    const auto& s = this_._internal_effects().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EnvironmentalFeature.effects");
    target = stream->WriteString(6, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.EnvironmentalFeature)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EnvironmentalFeature::ByteSizeLong(const MessageLite& base) {
  const EnvironmentalFeature& this_ = static_cast<const EnvironmentalFeature&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EnvironmentalFeature::ByteSizeLong() const {
  const EnvironmentalFeature& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.EnvironmentalFeature)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string effects = 6 [json_name = "effects"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_effects().size());
      for (int i = 0, n = this_._internal_effects().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_effects().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // string feature_id = 1 [json_name = "featureId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_feature_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_feature_id());
      }
    }
    // string name = 2 [json_name = "name"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string description = 3 [json_name = "description"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // string feature_type = 4 [json_name = "featureType"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_feature_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_feature_type());
      }
    }
    // string preferred_location = 5 [json_name = "preferredLocation"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (!this_._internal_preferred_location().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_preferred_location());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EnvironmentalFeature::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EnvironmentalFeature*>(&to_msg);
  auto& from = static_cast<const EnvironmentalFeature&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.EnvironmentalFeature)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_effects()->MergeFrom(from._internal_effects());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_feature_id().empty()) {
        _this->_internal_set_feature_id(from._internal_feature_id());
      } else {
        if (_this->_impl_.feature_id_.IsDefault()) {
          _this->_internal_set_feature_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_feature_type().empty()) {
        _this->_internal_set_feature_type(from._internal_feature_type());
      } else {
        if (_this->_impl_.feature_type_.IsDefault()) {
          _this->_internal_set_feature_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (!from._internal_preferred_location().empty()) {
        _this->_internal_set_preferred_location(from._internal_preferred_location());
      } else {
        if (_this->_impl_.preferred_location_.IsDefault()) {
          _this->_internal_set_preferred_location("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EnvironmentalFeature::CopyFrom(const EnvironmentalFeature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.EnvironmentalFeature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EnvironmentalFeature::InternalSwap(EnvironmentalFeature* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.effects_.InternalSwap(&other->_impl_.effects_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.feature_id_, &other->_impl_.feature_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.feature_type_, &other->_impl_.feature_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.preferred_location_, &other->_impl_.preferred_location_, arena);
}

::google::protobuf::Metadata EnvironmentalFeature::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EncounterComplication::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<EncounterComplication>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EncounterComplication, _impl_._has_bits_);
};

EncounterComplication::EncounterComplication(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EncounterComplication_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.EncounterComplication)
}
PROTOBUF_NDEBUG_INLINE EncounterComplication::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::EncounterComplication& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        effects_{visibility, arena, from.effects_},
        complication_id_(arena, from.complication_id_),
        name_(arena, from.name_),
        description_(arena, from.description_),
        trigger_(arena, from.trigger_) {}

EncounterComplication::EncounterComplication(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EncounterComplication& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EncounterComplication_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EncounterComplication* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.EncounterComplication)
}
PROTOBUF_NDEBUG_INLINE EncounterComplication::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        effects_{visibility, arena},
        complication_id_(arena),
        name_(arena),
        description_(arena),
        trigger_(arena) {}

inline void EncounterComplication::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
EncounterComplication::~EncounterComplication() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.EncounterComplication)
  SharedDtor(*this);
}
inline void EncounterComplication::SharedDtor(MessageLite& self) {
  EncounterComplication& this_ = static_cast<EncounterComplication&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.complication_id_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.trigger_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EncounterComplication::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EncounterComplication(arena);
}
constexpr auto EncounterComplication::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(EncounterComplication, _impl_.effects_) +
          decltype(EncounterComplication::_impl_.effects_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(EncounterComplication), alignof(EncounterComplication), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&EncounterComplication::PlacementNew_,
                                 sizeof(EncounterComplication),
                                 alignof(EncounterComplication));
  }
}
constexpr auto EncounterComplication::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EncounterComplication_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EncounterComplication::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EncounterComplication>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EncounterComplication::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EncounterComplication>(), &EncounterComplication::ByteSizeLong,
              &EncounterComplication::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EncounterComplication, _impl_._cached_size_),
          false,
      },
      &EncounterComplication::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EncounterComplication_class_data_ =
        EncounterComplication::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EncounterComplication::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EncounterComplication_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EncounterComplication_class_data_.tc_table);
  return EncounterComplication_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 87, 2>
EncounterComplication::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EncounterComplication, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    EncounterComplication_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::EncounterComplication>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string complication_id = 1 [json_name = "complicationId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EncounterComplication, _impl_.complication_id_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(EncounterComplication, _impl_.name_)}},
    // string description = 3 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(EncounterComplication, _impl_.description_)}},
    // string trigger = 4 [json_name = "trigger"];
    {::_pbi::TcParser::FastUS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(EncounterComplication, _impl_.trigger_)}},
    // repeated string effects = 5 [json_name = "effects"];
    {::_pbi::TcParser::FastUR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(EncounterComplication, _impl_.effects_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string complication_id = 1 [json_name = "complicationId"];
    {PROTOBUF_FIELD_OFFSET(EncounterComplication, _impl_.complication_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(EncounterComplication, _impl_.name_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 3 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(EncounterComplication, _impl_.description_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string trigger = 4 [json_name = "trigger"];
    {PROTOBUF_FIELD_OFFSET(EncounterComplication, _impl_.trigger_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string effects = 5 [json_name = "effects"];
    {PROTOBUF_FIELD_OFFSET(EncounterComplication, _impl_.effects_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\42\17\4\13\7\7\0\0"
    "api.v1alpha1.EncounterComplication"
    "complication_id"
    "name"
    "description"
    "trigger"
    "effects"
  }},
};
PROTOBUF_NOINLINE void EncounterComplication::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.EncounterComplication)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.effects_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.complication_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.trigger_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EncounterComplication::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EncounterComplication& this_ = static_cast<const EncounterComplication&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EncounterComplication::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EncounterComplication& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.EncounterComplication)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string complication_id = 1 [json_name = "complicationId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_complication_id().empty()) {
      const ::std::string& _s = this_._internal_complication_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EncounterComplication.complication_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string name = 2 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EncounterComplication.name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string description = 3 [json_name = "description"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EncounterComplication.description");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string trigger = 4 [json_name = "trigger"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (!this_._internal_trigger().empty()) {
      const ::std::string& _s = this_._internal_trigger();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EncounterComplication.trigger");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // repeated string effects = 5 [json_name = "effects"];
  for (int i = 0, n = this_._internal_effects_size(); i < n; ++i) {
    const auto& s = this_._internal_effects().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EncounterComplication.effects");
    target = stream->WriteString(5, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.EncounterComplication)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EncounterComplication::ByteSizeLong(const MessageLite& base) {
  const EncounterComplication& this_ = static_cast<const EncounterComplication&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EncounterComplication::ByteSizeLong() const {
  const EncounterComplication& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.EncounterComplication)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string effects = 5 [json_name = "effects"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_effects().size());
      for (int i = 0, n = this_._internal_effects().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_effects().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string complication_id = 1 [json_name = "complicationId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_complication_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_complication_id());
      }
    }
    // string name = 2 [json_name = "name"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string description = 3 [json_name = "description"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // string trigger = 4 [json_name = "trigger"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_trigger().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_trigger());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EncounterComplication::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EncounterComplication*>(&to_msg);
  auto& from = static_cast<const EncounterComplication&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.EncounterComplication)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_effects()->MergeFrom(from._internal_effects());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_complication_id().empty()) {
        _this->_internal_set_complication_id(from._internal_complication_id());
      } else {
        if (_this->_impl_.complication_id_.IsDefault()) {
          _this->_internal_set_complication_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_trigger().empty()) {
        _this->_internal_set_trigger(from._internal_trigger());
      } else {
        if (_this->_impl_.trigger_.IsDefault()) {
          _this->_internal_set_trigger("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EncounterComplication::CopyFrom(const EncounterComplication& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.EncounterComplication)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EncounterComplication::InternalSwap(EncounterComplication* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.effects_.InternalSwap(&other->_impl_.effects_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.complication_id_, &other->_impl_.complication_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.trigger_, &other->_impl_.trigger_, arena);
}

::google::protobuf::Metadata EncounterComplication::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EncounterGenerationStats::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<EncounterGenerationStats>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EncounterGenerationStats, _impl_._has_bits_);
};

EncounterGenerationStats::EncounterGenerationStats(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EncounterGenerationStats_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.EncounterGenerationStats)
}
PROTOBUF_NDEBUG_INLINE EncounterGenerationStats::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::EncounterGenerationStats& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        actual_difficulty_(arena, from.actual_difficulty_) {}

EncounterGenerationStats::EncounterGenerationStats(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EncounterGenerationStats& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EncounterGenerationStats_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EncounterGenerationStats* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, generation_time_ms_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, generation_time_ms_),
           offsetof(Impl_, treasure_items_generated_) -
               offsetof(Impl_, generation_time_ms_) +
               sizeof(Impl_::treasure_items_generated_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.EncounterGenerationStats)
}
PROTOBUF_NDEBUG_INLINE EncounterGenerationStats::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        actual_difficulty_(arena) {}

inline void EncounterGenerationStats::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, generation_time_ms_),
           0,
           offsetof(Impl_, treasure_items_generated_) -
               offsetof(Impl_, generation_time_ms_) +
               sizeof(Impl_::treasure_items_generated_));
}
EncounterGenerationStats::~EncounterGenerationStats() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.EncounterGenerationStats)
  SharedDtor(*this);
}
inline void EncounterGenerationStats::SharedDtor(MessageLite& self) {
  EncounterGenerationStats& this_ = static_cast<EncounterGenerationStats&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.actual_difficulty_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EncounterGenerationStats::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EncounterGenerationStats(arena);
}
constexpr auto EncounterGenerationStats::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EncounterGenerationStats),
                                            alignof(EncounterGenerationStats));
}
constexpr auto EncounterGenerationStats::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EncounterGenerationStats_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EncounterGenerationStats::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EncounterGenerationStats>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EncounterGenerationStats::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EncounterGenerationStats>(), &EncounterGenerationStats::ByteSizeLong,
              &EncounterGenerationStats::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EncounterGenerationStats, _impl_._cached_size_),
          false,
      },
      &EncounterGenerationStats::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EncounterGenerationStats_class_data_ =
        EncounterGenerationStats::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EncounterGenerationStats::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EncounterGenerationStats_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EncounterGenerationStats_class_data_.tc_table);
  return EncounterGenerationStats_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 63, 2>
EncounterGenerationStats::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EncounterGenerationStats, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    EncounterGenerationStats_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::EncounterGenerationStats>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 generation_time_ms = 1 [json_name = "generationTimeMs"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(EncounterGenerationStats, _impl_.generation_time_ms_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(EncounterGenerationStats, _impl_.generation_time_ms_)}},
    // int32 table_rolls_made = 2 [json_name = "tableRollsMade"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EncounterGenerationStats, _impl_.table_rolls_made_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(EncounterGenerationStats, _impl_.table_rolls_made_)}},
    // int32 creatures_generated = 3 [json_name = "creaturesGenerated"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EncounterGenerationStats, _impl_.creatures_generated_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(EncounterGenerationStats, _impl_.creatures_generated_)}},
    // int32 treasure_items_generated = 4 [json_name = "treasureItemsGenerated"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EncounterGenerationStats, _impl_.treasure_items_generated_), 5>(),
     {32, 5, 0, PROTOBUF_FIELD_OFFSET(EncounterGenerationStats, _impl_.treasure_items_generated_)}},
    // string actual_difficulty = 5 [json_name = "actualDifficulty"];
    {::_pbi::TcParser::FastUS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(EncounterGenerationStats, _impl_.actual_difficulty_)}},
    // double calculated_cr = 6 [json_name = "calculatedCr"];
    {::_pbi::TcParser::FastF64S1,
     {49, 4, 0, PROTOBUF_FIELD_OFFSET(EncounterGenerationStats, _impl_.calculated_cr_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 generation_time_ms = 1 [json_name = "generationTimeMs"];
    {PROTOBUF_FIELD_OFFSET(EncounterGenerationStats, _impl_.generation_time_ms_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int32 table_rolls_made = 2 [json_name = "tableRollsMade"];
    {PROTOBUF_FIELD_OFFSET(EncounterGenerationStats, _impl_.table_rolls_made_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 creatures_generated = 3 [json_name = "creaturesGenerated"];
    {PROTOBUF_FIELD_OFFSET(EncounterGenerationStats, _impl_.creatures_generated_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 treasure_items_generated = 4 [json_name = "treasureItemsGenerated"];
    {PROTOBUF_FIELD_OFFSET(EncounterGenerationStats, _impl_.treasure_items_generated_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string actual_difficulty = 5 [json_name = "actualDifficulty"];
    {PROTOBUF_FIELD_OFFSET(EncounterGenerationStats, _impl_.actual_difficulty_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double calculated_cr = 6 [json_name = "calculatedCr"];
    {PROTOBUF_FIELD_OFFSET(EncounterGenerationStats, _impl_.calculated_cr_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
    "\45\0\0\0\0\21\0\0"
    "api.v1alpha1.EncounterGenerationStats"
    "actual_difficulty"
  }},
};
PROTOBUF_NOINLINE void EncounterGenerationStats::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.EncounterGenerationStats)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.actual_difficulty_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x0000003eU) != 0) {
    ::memset(&_impl_.generation_time_ms_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.treasure_items_generated_) -
        reinterpret_cast<char*>(&_impl_.generation_time_ms_)) + sizeof(_impl_.treasure_items_generated_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EncounterGenerationStats::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EncounterGenerationStats& this_ = static_cast<const EncounterGenerationStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EncounterGenerationStats::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EncounterGenerationStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.EncounterGenerationStats)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 generation_time_ms = 1 [json_name = "generationTimeMs"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_generation_time_ms() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_generation_time_ms(), target);
    }
  }

  // int32 table_rolls_made = 2 [json_name = "tableRollsMade"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_table_rolls_made() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_table_rolls_made(), target);
    }
  }

  // int32 creatures_generated = 3 [json_name = "creaturesGenerated"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_creatures_generated() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_creatures_generated(), target);
    }
  }

  // int32 treasure_items_generated = 4 [json_name = "treasureItemsGenerated"];
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (this_._internal_treasure_items_generated() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_treasure_items_generated(), target);
    }
  }

  // string actual_difficulty = 5 [json_name = "actualDifficulty"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_actual_difficulty().empty()) {
      const ::std::string& _s = this_._internal_actual_difficulty();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EncounterGenerationStats.actual_difficulty");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  // double calculated_cr = 6 [json_name = "calculatedCr"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_calculated_cr()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          6, this_._internal_calculated_cr(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.EncounterGenerationStats)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EncounterGenerationStats::ByteSizeLong(const MessageLite& base) {
  const EncounterGenerationStats& this_ = static_cast<const EncounterGenerationStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EncounterGenerationStats::ByteSizeLong() const {
  const EncounterGenerationStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.EncounterGenerationStats)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    // string actual_difficulty = 5 [json_name = "actualDifficulty"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_actual_difficulty().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_actual_difficulty());
      }
    }
    // int64 generation_time_ms = 1 [json_name = "generationTimeMs"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_generation_time_ms() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_generation_time_ms());
      }
    }
    // int32 table_rolls_made = 2 [json_name = "tableRollsMade"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_table_rolls_made() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_table_rolls_made());
      }
    }
    // int32 creatures_generated = 3 [json_name = "creaturesGenerated"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_creatures_generated() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_creatures_generated());
      }
    }
    // double calculated_cr = 6 [json_name = "calculatedCr"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_calculated_cr()) != 0) {
        total_size += 9;
      }
    }
    // int32 treasure_items_generated = 4 [json_name = "treasureItemsGenerated"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_treasure_items_generated() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_treasure_items_generated());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EncounterGenerationStats::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EncounterGenerationStats*>(&to_msg);
  auto& from = static_cast<const EncounterGenerationStats&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.EncounterGenerationStats)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_actual_difficulty().empty()) {
        _this->_internal_set_actual_difficulty(from._internal_actual_difficulty());
      } else {
        if (_this->_impl_.actual_difficulty_.IsDefault()) {
          _this->_internal_set_actual_difficulty("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_generation_time_ms() != 0) {
        _this->_impl_.generation_time_ms_ = from._impl_.generation_time_ms_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_table_rolls_made() != 0) {
        _this->_impl_.table_rolls_made_ = from._impl_.table_rolls_made_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_creatures_generated() != 0) {
        _this->_impl_.creatures_generated_ = from._impl_.creatures_generated_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_calculated_cr()) != 0) {
        _this->_impl_.calculated_cr_ = from._impl_.calculated_cr_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_treasure_items_generated() != 0) {
        _this->_impl_.treasure_items_generated_ = from._impl_.treasure_items_generated_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EncounterGenerationStats::CopyFrom(const EncounterGenerationStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.EncounterGenerationStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EncounterGenerationStats::InternalSwap(EncounterGenerationStats* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.actual_difficulty_, &other->_impl_.actual_difficulty_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EncounterGenerationStats, _impl_.treasure_items_generated_)
      + sizeof(EncounterGenerationStats::_impl_.treasure_items_generated_)
      - PROTOBUF_FIELD_OFFSET(EncounterGenerationStats, _impl_.generation_time_ms_)>(
          reinterpret_cast<char*>(&_impl_.generation_time_ms_),
          reinterpret_cast<char*>(&other->_impl_.generation_time_ms_));
}

::google::protobuf::Metadata EncounterGenerationStats::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GenerateLootRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GenerateLootRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GenerateLootRequest, _impl_._has_bits_);
};

GenerateLootRequest::GenerateLootRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GenerateLootRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.GenerateLootRequest)
}
PROTOBUF_NDEBUG_INLINE GenerateLootRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::GenerateLootRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GenerateLootRequest::GenerateLootRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GenerateLootRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GenerateLootRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GenerateLootRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.loot_params_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.loot_params_)
                : nullptr;
  _impl_.loot_tables_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.loot_tables_)
                : nullptr;
  _impl_.options_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.GenerateLootRequest)
}
PROTOBUF_NDEBUG_INLINE GenerateLootRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void GenerateLootRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, loot_params_),
           0,
           offsetof(Impl_, options_) -
               offsetof(Impl_, loot_params_) +
               sizeof(Impl_::options_));
}
GenerateLootRequest::~GenerateLootRequest() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.GenerateLootRequest)
  SharedDtor(*this);
}
inline void GenerateLootRequest::SharedDtor(MessageLite& self) {
  GenerateLootRequest& this_ = static_cast<GenerateLootRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.loot_params_;
  delete this_._impl_.loot_tables_;
  delete this_._impl_.options_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GenerateLootRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GenerateLootRequest(arena);
}
constexpr auto GenerateLootRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GenerateLootRequest),
                                            alignof(GenerateLootRequest));
}
constexpr auto GenerateLootRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GenerateLootRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GenerateLootRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GenerateLootRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GenerateLootRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GenerateLootRequest>(), &GenerateLootRequest::ByteSizeLong,
              &GenerateLootRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GenerateLootRequest, _impl_._cached_size_),
          false,
      },
      &GenerateLootRequest::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GenerateLootRequest_class_data_ =
        GenerateLootRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GenerateLootRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GenerateLootRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GenerateLootRequest_class_data_.tc_table);
  return GenerateLootRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
GenerateLootRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GenerateLootRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GenerateLootRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::GenerateLootRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .api.v1alpha1.LootParameters loot_params = 1 [json_name = "lootParams"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GenerateLootRequest, _impl_.loot_params_)}},
    // .api.v1alpha1.LootTables loot_tables = 2 [json_name = "lootTables"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(GenerateLootRequest, _impl_.loot_tables_)}},
    // .api.v1alpha1.LootGenerationOptions options = 3 [json_name = "options"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(GenerateLootRequest, _impl_.options_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .api.v1alpha1.LootParameters loot_params = 1 [json_name = "lootParams"];
    {PROTOBUF_FIELD_OFFSET(GenerateLootRequest, _impl_.loot_params_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.LootTables loot_tables = 2 [json_name = "lootTables"];
    {PROTOBUF_FIELD_OFFSET(GenerateLootRequest, _impl_.loot_tables_), _Internal::kHasBitsOffset + 1, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.LootGenerationOptions options = 3 [json_name = "options"];
    {PROTOBUF_FIELD_OFFSET(GenerateLootRequest, _impl_.options_), _Internal::kHasBitsOffset + 2, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::LootParameters>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::LootTables>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::LootGenerationOptions>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void GenerateLootRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.GenerateLootRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.loot_params_ != nullptr);
      _impl_.loot_params_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.loot_tables_ != nullptr);
      _impl_.loot_tables_->Clear();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.options_ != nullptr);
      _impl_.options_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GenerateLootRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GenerateLootRequest& this_ = static_cast<const GenerateLootRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GenerateLootRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GenerateLootRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.GenerateLootRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.LootParameters loot_params = 1 [json_name = "lootParams"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.loot_params_, this_._impl_.loot_params_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.LootTables loot_tables = 2 [json_name = "lootTables"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.loot_tables_, this_._impl_.loot_tables_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.LootGenerationOptions options = 3 [json_name = "options"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.options_, this_._impl_.options_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.GenerateLootRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GenerateLootRequest::ByteSizeLong(const MessageLite& base) {
  const GenerateLootRequest& this_ = static_cast<const GenerateLootRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GenerateLootRequest::ByteSizeLong() const {
  const GenerateLootRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.GenerateLootRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // .api.v1alpha1.LootParameters loot_params = 1 [json_name = "lootParams"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.loot_params_);
    }
    // .api.v1alpha1.LootTables loot_tables = 2 [json_name = "lootTables"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.loot_tables_);
    }
    // .api.v1alpha1.LootGenerationOptions options = 3 [json_name = "options"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.options_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GenerateLootRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GenerateLootRequest*>(&to_msg);
  auto& from = static_cast<const GenerateLootRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.GenerateLootRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.loot_params_ != nullptr);
      if (_this->_impl_.loot_params_ == nullptr) {
        _this->_impl_.loot_params_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.loot_params_);
      } else {
        _this->_impl_.loot_params_->MergeFrom(*from._impl_.loot_params_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.loot_tables_ != nullptr);
      if (_this->_impl_.loot_tables_ == nullptr) {
        _this->_impl_.loot_tables_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.loot_tables_);
      } else {
        _this->_impl_.loot_tables_->MergeFrom(*from._impl_.loot_tables_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.options_ != nullptr);
      if (_this->_impl_.options_ == nullptr) {
        _this->_impl_.options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_);
      } else {
        _this->_impl_.options_->MergeFrom(*from._impl_.options_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GenerateLootRequest::CopyFrom(const GenerateLootRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.GenerateLootRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GenerateLootRequest::InternalSwap(GenerateLootRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GenerateLootRequest, _impl_.options_)
      + sizeof(GenerateLootRequest::_impl_.options_)
      - PROTOBUF_FIELD_OFFSET(GenerateLootRequest, _impl_.loot_params_)>(
          reinterpret_cast<char*>(&_impl_.loot_params_),
          reinterpret_cast<char*>(&other->_impl_.loot_params_));
}

::google::protobuf::Metadata GenerateLootRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LootParameters::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<LootParameters>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LootParameters, _impl_._has_bits_);
};

LootParameters::LootParameters(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LootParameters_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.LootParameters)
}
PROTOBUF_NDEBUG_INLINE LootParameters::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::LootParameters& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        loot_type_(arena, from.loot_type_),
        rarity_preference_(arena, from.rarity_preference_),
        source_(arena, from.source_) {}

LootParameters::LootParameters(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const LootParameters& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LootParameters_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LootParameters* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, challenge_rating_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, challenge_rating_),
           offsetof(Impl_, value_budget_gp_) -
               offsetof(Impl_, challenge_rating_) +
               sizeof(Impl_::value_budget_gp_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.LootParameters)
}
PROTOBUF_NDEBUG_INLINE LootParameters::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        loot_type_(arena),
        rarity_preference_(arena),
        source_(arena) {}

inline void LootParameters::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, challenge_rating_),
           0,
           offsetof(Impl_, value_budget_gp_) -
               offsetof(Impl_, challenge_rating_) +
               sizeof(Impl_::value_budget_gp_));
}
LootParameters::~LootParameters() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.LootParameters)
  SharedDtor(*this);
}
inline void LootParameters::SharedDtor(MessageLite& self) {
  LootParameters& this_ = static_cast<LootParameters&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.loot_type_.Destroy();
  this_._impl_.rarity_preference_.Destroy();
  this_._impl_.source_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LootParameters::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LootParameters(arena);
}
constexpr auto LootParameters::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(LootParameters),
                                            alignof(LootParameters));
}
constexpr auto LootParameters::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LootParameters_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LootParameters::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LootParameters>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LootParameters::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LootParameters>(), &LootParameters::ByteSizeLong,
              &LootParameters::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LootParameters, _impl_._cached_size_),
          false,
      },
      &LootParameters::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LootParameters_class_data_ =
        LootParameters::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LootParameters::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LootParameters_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LootParameters_class_data_.tc_table);
  return LootParameters_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 68, 2>
LootParameters::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LootParameters, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    LootParameters_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::LootParameters>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double challenge_rating = 1 [json_name = "challengeRating"];
    {::_pbi::TcParser::FastF64S1,
     {9, 3, 0, PROTOBUF_FIELD_OFFSET(LootParameters, _impl_.challenge_rating_)}},
    // int32 party_level = 2 [json_name = "partyLevel"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LootParameters, _impl_.party_level_), 4>(),
     {16, 4, 0, PROTOBUF_FIELD_OFFSET(LootParameters, _impl_.party_level_)}},
    // string loot_type = 3 [json_name = "lootType"];
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(LootParameters, _impl_.loot_type_)}},
    // string rarity_preference = 4 [json_name = "rarityPreference"];
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(LootParameters, _impl_.rarity_preference_)}},
    // int32 value_budget_gp = 5 [json_name = "valueBudgetGp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LootParameters, _impl_.value_budget_gp_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(LootParameters, _impl_.value_budget_gp_)}},
    // string source = 6 [json_name = "source"];
    {::_pbi::TcParser::FastUS1,
     {50, 2, 0, PROTOBUF_FIELD_OFFSET(LootParameters, _impl_.source_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // double challenge_rating = 1 [json_name = "challengeRating"];
    {PROTOBUF_FIELD_OFFSET(LootParameters, _impl_.challenge_rating_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // int32 party_level = 2 [json_name = "partyLevel"];
    {PROTOBUF_FIELD_OFFSET(LootParameters, _impl_.party_level_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string loot_type = 3 [json_name = "lootType"];
    {PROTOBUF_FIELD_OFFSET(LootParameters, _impl_.loot_type_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string rarity_preference = 4 [json_name = "rarityPreference"];
    {PROTOBUF_FIELD_OFFSET(LootParameters, _impl_.rarity_preference_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 value_budget_gp = 5 [json_name = "valueBudgetGp"];
    {PROTOBUF_FIELD_OFFSET(LootParameters, _impl_.value_budget_gp_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string source = 6 [json_name = "source"];
    {PROTOBUF_FIELD_OFFSET(LootParameters, _impl_.source_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\0\0\11\21\0\6\0"
    "api.v1alpha1.LootParameters"
    "loot_type"
    "rarity_preference"
    "source"
  }},
};
PROTOBUF_NOINLINE void LootParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.LootParameters)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.loot_type_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.rarity_preference_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.source_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x00000038U) != 0) {
    ::memset(&_impl_.challenge_rating_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.value_budget_gp_) -
        reinterpret_cast<char*>(&_impl_.challenge_rating_)) + sizeof(_impl_.value_budget_gp_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LootParameters::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LootParameters& this_ = static_cast<const LootParameters&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LootParameters::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LootParameters& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.LootParameters)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double challenge_rating = 1 [json_name = "challengeRating"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_challenge_rating()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          1, this_._internal_challenge_rating(), target);
    }
  }

  // int32 party_level = 2 [json_name = "partyLevel"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_party_level() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_party_level(), target);
    }
  }

  // string loot_type = 3 [json_name = "lootType"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_loot_type().empty()) {
      const ::std::string& _s = this_._internal_loot_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.LootParameters.loot_type");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string rarity_preference = 4 [json_name = "rarityPreference"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_rarity_preference().empty()) {
      const ::std::string& _s = this_._internal_rarity_preference();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.LootParameters.rarity_preference");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // int32 value_budget_gp = 5 [json_name = "valueBudgetGp"];
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (this_._internal_value_budget_gp() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
              stream, this_._internal_value_budget_gp(), target);
    }
  }

  // string source = 6 [json_name = "source"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_source().empty()) {
      const ::std::string& _s = this_._internal_source();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.LootParameters.source");
      target = stream->WriteStringMaybeAliased(6, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.LootParameters)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LootParameters::ByteSizeLong(const MessageLite& base) {
  const LootParameters& this_ = static_cast<const LootParameters&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LootParameters::ByteSizeLong() const {
  const LootParameters& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.LootParameters)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    // string loot_type = 3 [json_name = "lootType"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_loot_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_loot_type());
      }
    }
    // string rarity_preference = 4 [json_name = "rarityPreference"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_rarity_preference().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_rarity_preference());
      }
    }
    // string source = 6 [json_name = "source"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_source().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_source());
      }
    }
    // double challenge_rating = 1 [json_name = "challengeRating"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_challenge_rating()) != 0) {
        total_size += 9;
      }
    }
    // int32 party_level = 2 [json_name = "partyLevel"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_party_level() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_party_level());
      }
    }
    // int32 value_budget_gp = 5 [json_name = "valueBudgetGp"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_value_budget_gp() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_value_budget_gp());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LootParameters::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LootParameters*>(&to_msg);
  auto& from = static_cast<const LootParameters&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.LootParameters)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_loot_type().empty()) {
        _this->_internal_set_loot_type(from._internal_loot_type());
      } else {
        if (_this->_impl_.loot_type_.IsDefault()) {
          _this->_internal_set_loot_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_rarity_preference().empty()) {
        _this->_internal_set_rarity_preference(from._internal_rarity_preference());
      } else {
        if (_this->_impl_.rarity_preference_.IsDefault()) {
          _this->_internal_set_rarity_preference("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_source().empty()) {
        _this->_internal_set_source(from._internal_source());
      } else {
        if (_this->_impl_.source_.IsDefault()) {
          _this->_internal_set_source("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_challenge_rating()) != 0) {
        _this->_impl_.challenge_rating_ = from._impl_.challenge_rating_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_party_level() != 0) {
        _this->_impl_.party_level_ = from._impl_.party_level_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_value_budget_gp() != 0) {
        _this->_impl_.value_budget_gp_ = from._impl_.value_budget_gp_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LootParameters::CopyFrom(const LootParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.LootParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LootParameters::InternalSwap(LootParameters* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.loot_type_, &other->_impl_.loot_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.rarity_preference_, &other->_impl_.rarity_preference_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_, &other->_impl_.source_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LootParameters, _impl_.value_budget_gp_)
      + sizeof(LootParameters::_impl_.value_budget_gp_)
      - PROTOBUF_FIELD_OFFSET(LootParameters, _impl_.challenge_rating_)>(
          reinterpret_cast<char*>(&_impl_.challenge_rating_),
          reinterpret_cast<char*>(&other->_impl_.challenge_rating_));
}

::google::protobuf::Metadata LootParameters::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LootTables::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<LootTables>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LootTables, _impl_._has_bits_);
};

LootTables::LootTables(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LootTables_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.LootTables)
}
PROTOBUF_NDEBUG_INLINE LootTables::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::LootTables& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        primary_table_id_(arena, from.primary_table_id_),
        magic_item_table_id_(arena, from.magic_item_table_id_),
        equipment_table_id_(arena, from.equipment_table_id_),
        consumables_table_id_(arena, from.consumables_table_id_),
        currency_table_id_(arena, from.currency_table_id_) {}

LootTables::LootTables(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const LootTables& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LootTables_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LootTables* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.LootTables)
}
PROTOBUF_NDEBUG_INLINE LootTables::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        primary_table_id_(arena),
        magic_item_table_id_(arena),
        equipment_table_id_(arena),
        consumables_table_id_(arena),
        currency_table_id_(arena) {}

inline void LootTables::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LootTables::~LootTables() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.LootTables)
  SharedDtor(*this);
}
inline void LootTables::SharedDtor(MessageLite& self) {
  LootTables& this_ = static_cast<LootTables&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.primary_table_id_.Destroy();
  this_._impl_.magic_item_table_id_.Destroy();
  this_._impl_.equipment_table_id_.Destroy();
  this_._impl_.consumables_table_id_.Destroy();
  this_._impl_.currency_table_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LootTables::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LootTables(arena);
}
constexpr auto LootTables::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(LootTables),
                                            alignof(LootTables));
}
constexpr auto LootTables::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LootTables_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LootTables::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LootTables>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LootTables::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LootTables>(), &LootTables::ByteSizeLong,
              &LootTables::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LootTables, _impl_._cached_size_),
          false,
      },
      &LootTables::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LootTables_class_data_ =
        LootTables::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LootTables::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LootTables_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LootTables_class_data_.tc_table);
  return LootTables_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 122, 2>
LootTables::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LootTables, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    LootTables_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::LootTables>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string primary_table_id = 1 [json_name = "primaryTableId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LootTables, _impl_.primary_table_id_)}},
    // string magic_item_table_id = 2 [json_name = "magicItemTableId"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(LootTables, _impl_.magic_item_table_id_)}},
    // string equipment_table_id = 3 [json_name = "equipmentTableId"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(LootTables, _impl_.equipment_table_id_)}},
    // string consumables_table_id = 4 [json_name = "consumablesTableId"];
    {::_pbi::TcParser::FastUS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(LootTables, _impl_.consumables_table_id_)}},
    // string currency_table_id = 5 [json_name = "currencyTableId"];
    {::_pbi::TcParser::FastUS1,
     {42, 4, 0, PROTOBUF_FIELD_OFFSET(LootTables, _impl_.currency_table_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string primary_table_id = 1 [json_name = "primaryTableId"];
    {PROTOBUF_FIELD_OFFSET(LootTables, _impl_.primary_table_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string magic_item_table_id = 2 [json_name = "magicItemTableId"];
    {PROTOBUF_FIELD_OFFSET(LootTables, _impl_.magic_item_table_id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string equipment_table_id = 3 [json_name = "equipmentTableId"];
    {PROTOBUF_FIELD_OFFSET(LootTables, _impl_.equipment_table_id_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string consumables_table_id = 4 [json_name = "consumablesTableId"];
    {PROTOBUF_FIELD_OFFSET(LootTables, _impl_.consumables_table_id_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string currency_table_id = 5 [json_name = "currencyTableId"];
    {PROTOBUF_FIELD_OFFSET(LootTables, _impl_.currency_table_id_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\20\23\22\24\21\0\0"
    "api.v1alpha1.LootTables"
    "primary_table_id"
    "magic_item_table_id"
    "equipment_table_id"
    "consumables_table_id"
    "currency_table_id"
  }},
};
PROTOBUF_NOINLINE void LootTables::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.LootTables)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.primary_table_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.magic_item_table_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.equipment_table_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.consumables_table_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      _impl_.currency_table_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LootTables::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LootTables& this_ = static_cast<const LootTables&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LootTables::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LootTables& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.LootTables)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string primary_table_id = 1 [json_name = "primaryTableId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_primary_table_id().empty()) {
      const ::std::string& _s = this_._internal_primary_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.LootTables.primary_table_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string magic_item_table_id = 2 [json_name = "magicItemTableId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_magic_item_table_id().empty()) {
      const ::std::string& _s = this_._internal_magic_item_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.LootTables.magic_item_table_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string equipment_table_id = 3 [json_name = "equipmentTableId"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_equipment_table_id().empty()) {
      const ::std::string& _s = this_._internal_equipment_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.LootTables.equipment_table_id");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string consumables_table_id = 4 [json_name = "consumablesTableId"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (!this_._internal_consumables_table_id().empty()) {
      const ::std::string& _s = this_._internal_consumables_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.LootTables.consumables_table_id");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // string currency_table_id = 5 [json_name = "currencyTableId"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (!this_._internal_currency_table_id().empty()) {
      const ::std::string& _s = this_._internal_currency_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.LootTables.currency_table_id");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.LootTables)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LootTables::ByteSizeLong(const MessageLite& base) {
  const LootTables& this_ = static_cast<const LootTables&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LootTables::ByteSizeLong() const {
  const LootTables& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.LootTables)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // string primary_table_id = 1 [json_name = "primaryTableId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_primary_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_primary_table_id());
      }
    }
    // string magic_item_table_id = 2 [json_name = "magicItemTableId"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_magic_item_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_magic_item_table_id());
      }
    }
    // string equipment_table_id = 3 [json_name = "equipmentTableId"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_equipment_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_equipment_table_id());
      }
    }
    // string consumables_table_id = 4 [json_name = "consumablesTableId"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_consumables_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_consumables_table_id());
      }
    }
    // string currency_table_id = 5 [json_name = "currencyTableId"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (!this_._internal_currency_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_currency_table_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LootTables::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LootTables*>(&to_msg);
  auto& from = static_cast<const LootTables&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.LootTables)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_primary_table_id().empty()) {
        _this->_internal_set_primary_table_id(from._internal_primary_table_id());
      } else {
        if (_this->_impl_.primary_table_id_.IsDefault()) {
          _this->_internal_set_primary_table_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_magic_item_table_id().empty()) {
        _this->_internal_set_magic_item_table_id(from._internal_magic_item_table_id());
      } else {
        if (_this->_impl_.magic_item_table_id_.IsDefault()) {
          _this->_internal_set_magic_item_table_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_equipment_table_id().empty()) {
        _this->_internal_set_equipment_table_id(from._internal_equipment_table_id());
      } else {
        if (_this->_impl_.equipment_table_id_.IsDefault()) {
          _this->_internal_set_equipment_table_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_consumables_table_id().empty()) {
        _this->_internal_set_consumables_table_id(from._internal_consumables_table_id());
      } else {
        if (_this->_impl_.consumables_table_id_.IsDefault()) {
          _this->_internal_set_consumables_table_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (!from._internal_currency_table_id().empty()) {
        _this->_internal_set_currency_table_id(from._internal_currency_table_id());
      } else {
        if (_this->_impl_.currency_table_id_.IsDefault()) {
          _this->_internal_set_currency_table_id("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LootTables::CopyFrom(const LootTables& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.LootTables)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LootTables::InternalSwap(LootTables* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.primary_table_id_, &other->_impl_.primary_table_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.magic_item_table_id_, &other->_impl_.magic_item_table_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.equipment_table_id_, &other->_impl_.equipment_table_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.consumables_table_id_, &other->_impl_.consumables_table_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.currency_table_id_, &other->_impl_.currency_table_id_, arena);
}

::google::protobuf::Metadata LootTables::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LootGenerationOptions::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<LootGenerationOptions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LootGenerationOptions, _impl_._has_bits_);
};

LootGenerationOptions::LootGenerationOptions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LootGenerationOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.LootGenerationOptions)
}
PROTOBUF_NDEBUG_INLINE LootGenerationOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::LootGenerationOptions& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        seed_(arena, from.seed_) {}

LootGenerationOptions::LootGenerationOptions(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const LootGenerationOptions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LootGenerationOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LootGenerationOptions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, max_items_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, max_items_),
           offsetof(Impl_, include_descriptions_) -
               offsetof(Impl_, max_items_) +
               sizeof(Impl_::include_descriptions_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.LootGenerationOptions)
}
PROTOBUF_NDEBUG_INLINE LootGenerationOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        seed_(arena) {}

inline void LootGenerationOptions::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, max_items_),
           0,
           offsetof(Impl_, include_descriptions_) -
               offsetof(Impl_, max_items_) +
               sizeof(Impl_::include_descriptions_));
}
LootGenerationOptions::~LootGenerationOptions() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.LootGenerationOptions)
  SharedDtor(*this);
}
inline void LootGenerationOptions::SharedDtor(MessageLite& self) {
  LootGenerationOptions& this_ = static_cast<LootGenerationOptions&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.seed_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LootGenerationOptions::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LootGenerationOptions(arena);
}
constexpr auto LootGenerationOptions::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(LootGenerationOptions),
                                            alignof(LootGenerationOptions));
}
constexpr auto LootGenerationOptions::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LootGenerationOptions_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LootGenerationOptions::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LootGenerationOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LootGenerationOptions::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LootGenerationOptions>(), &LootGenerationOptions::ByteSizeLong,
              &LootGenerationOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LootGenerationOptions, _impl_._cached_size_),
          false,
      },
      &LootGenerationOptions::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LootGenerationOptions_class_data_ =
        LootGenerationOptions::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LootGenerationOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LootGenerationOptions_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LootGenerationOptions_class_data_.tc_table);
  return LootGenerationOptions_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 47, 2>
LootGenerationOptions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LootGenerationOptions, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    LootGenerationOptions_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::LootGenerationOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string seed = 1 [json_name = "seed"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LootGenerationOptions, _impl_.seed_)}},
    // bool include_cursed_items = 2 [json_name = "includeCursedItems"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(LootGenerationOptions, _impl_.include_cursed_items_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(LootGenerationOptions, _impl_.include_cursed_items_)}},
    // bool vary_item_conditions = 3 [json_name = "varyItemConditions"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(LootGenerationOptions, _impl_.vary_item_conditions_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(LootGenerationOptions, _impl_.vary_item_conditions_)}},
    // int32 max_items = 4 [json_name = "maxItems"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LootGenerationOptions, _impl_.max_items_), 1>(),
     {32, 1, 0, PROTOBUF_FIELD_OFFSET(LootGenerationOptions, _impl_.max_items_)}},
    // bool bundle_similar_items = 5 [json_name = "bundleSimilarItems"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(LootGenerationOptions, _impl_.bundle_similar_items_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(LootGenerationOptions, _impl_.bundle_similar_items_)}},
    // bool include_descriptions = 6 [json_name = "includeDescriptions"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(LootGenerationOptions, _impl_.include_descriptions_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(LootGenerationOptions, _impl_.include_descriptions_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string seed = 1 [json_name = "seed"];
    {PROTOBUF_FIELD_OFFSET(LootGenerationOptions, _impl_.seed_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool include_cursed_items = 2 [json_name = "includeCursedItems"];
    {PROTOBUF_FIELD_OFFSET(LootGenerationOptions, _impl_.include_cursed_items_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool vary_item_conditions = 3 [json_name = "varyItemConditions"];
    {PROTOBUF_FIELD_OFFSET(LootGenerationOptions, _impl_.vary_item_conditions_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // int32 max_items = 4 [json_name = "maxItems"];
    {PROTOBUF_FIELD_OFFSET(LootGenerationOptions, _impl_.max_items_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // bool bundle_similar_items = 5 [json_name = "bundleSimilarItems"];
    {PROTOBUF_FIELD_OFFSET(LootGenerationOptions, _impl_.bundle_similar_items_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool include_descriptions = 6 [json_name = "includeDescriptions"];
    {PROTOBUF_FIELD_OFFSET(LootGenerationOptions, _impl_.include_descriptions_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\42\4\0\0\0\0\0\0"
    "api.v1alpha1.LootGenerationOptions"
    "seed"
  }},
};
PROTOBUF_NOINLINE void LootGenerationOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.LootGenerationOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.seed_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x0000003eU) != 0) {
    ::memset(&_impl_.max_items_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.include_descriptions_) -
        reinterpret_cast<char*>(&_impl_.max_items_)) + sizeof(_impl_.include_descriptions_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LootGenerationOptions::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LootGenerationOptions& this_ = static_cast<const LootGenerationOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LootGenerationOptions::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LootGenerationOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.LootGenerationOptions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string seed = 1 [json_name = "seed"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_seed().empty()) {
      const ::std::string& _s = this_._internal_seed();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.LootGenerationOptions.seed");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // bool include_cursed_items = 2 [json_name = "includeCursedItems"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_include_cursed_items() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_include_cursed_items(), target);
    }
  }

  // bool vary_item_conditions = 3 [json_name = "varyItemConditions"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_vary_item_conditions() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_vary_item_conditions(), target);
    }
  }

  // int32 max_items = 4 [json_name = "maxItems"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_max_items() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_max_items(), target);
    }
  }

  // bool bundle_similar_items = 5 [json_name = "bundleSimilarItems"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_bundle_similar_items() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          5, this_._internal_bundle_similar_items(), target);
    }
  }

  // bool include_descriptions = 6 [json_name = "includeDescriptions"];
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (this_._internal_include_descriptions() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          6, this_._internal_include_descriptions(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.LootGenerationOptions)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LootGenerationOptions::ByteSizeLong(const MessageLite& base) {
  const LootGenerationOptions& this_ = static_cast<const LootGenerationOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LootGenerationOptions::ByteSizeLong() const {
  const LootGenerationOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.LootGenerationOptions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    // string seed = 1 [json_name = "seed"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_seed().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_seed());
      }
    }
    // int32 max_items = 4 [json_name = "maxItems"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_max_items() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_max_items());
      }
    }
    // bool include_cursed_items = 2 [json_name = "includeCursedItems"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_include_cursed_items() != 0) {
        total_size += 2;
      }
    }
    // bool vary_item_conditions = 3 [json_name = "varyItemConditions"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_vary_item_conditions() != 0) {
        total_size += 2;
      }
    }
    // bool bundle_similar_items = 5 [json_name = "bundleSimilarItems"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_bundle_similar_items() != 0) {
        total_size += 2;
      }
    }
    // bool include_descriptions = 6 [json_name = "includeDescriptions"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_include_descriptions() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LootGenerationOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LootGenerationOptions*>(&to_msg);
  auto& from = static_cast<const LootGenerationOptions&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.LootGenerationOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_seed().empty()) {
        _this->_internal_set_seed(from._internal_seed());
      } else {
        if (_this->_impl_.seed_.IsDefault()) {
          _this->_internal_set_seed("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_max_items() != 0) {
        _this->_impl_.max_items_ = from._impl_.max_items_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_include_cursed_items() != 0) {
        _this->_impl_.include_cursed_items_ = from._impl_.include_cursed_items_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_vary_item_conditions() != 0) {
        _this->_impl_.vary_item_conditions_ = from._impl_.vary_item_conditions_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_bundle_similar_items() != 0) {
        _this->_impl_.bundle_similar_items_ = from._impl_.bundle_similar_items_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_include_descriptions() != 0) {
        _this->_impl_.include_descriptions_ = from._impl_.include_descriptions_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LootGenerationOptions::CopyFrom(const LootGenerationOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.LootGenerationOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LootGenerationOptions::InternalSwap(LootGenerationOptions* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.seed_, &other->_impl_.seed_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LootGenerationOptions, _impl_.include_descriptions_)
      + sizeof(LootGenerationOptions::_impl_.include_descriptions_)
      - PROTOBUF_FIELD_OFFSET(LootGenerationOptions, _impl_.max_items_)>(
          reinterpret_cast<char*>(&_impl_.max_items_),
          reinterpret_cast<char*>(&other->_impl_.max_items_));
}

::google::protobuf::Metadata LootGenerationOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GenerateLootResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GenerateLootResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GenerateLootResponse, _impl_._has_bits_);
};

GenerateLootResponse::GenerateLootResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GenerateLootResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.GenerateLootResponse)
}
PROTOBUF_NDEBUG_INLINE GenerateLootResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::GenerateLootResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        tables_used_{visibility, arena, from.tables_used_} {}

GenerateLootResponse::GenerateLootResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GenerateLootResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GenerateLootResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GenerateLootResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.loot_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.loot_)
                : nullptr;
  _impl_.generation_stats_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.generation_stats_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.GenerateLootResponse)
}
PROTOBUF_NDEBUG_INLINE GenerateLootResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        tables_used_{visibility, arena} {}

inline void GenerateLootResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, loot_),
           0,
           offsetof(Impl_, generation_stats_) -
               offsetof(Impl_, loot_) +
               sizeof(Impl_::generation_stats_));
}
GenerateLootResponse::~GenerateLootResponse() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.GenerateLootResponse)
  SharedDtor(*this);
}
inline void GenerateLootResponse::SharedDtor(MessageLite& self) {
  GenerateLootResponse& this_ = static_cast<GenerateLootResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.loot_;
  delete this_._impl_.generation_stats_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GenerateLootResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GenerateLootResponse(arena);
}
constexpr auto GenerateLootResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GenerateLootResponse, _impl_.tables_used_) +
          decltype(GenerateLootResponse::_impl_.tables_used_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GenerateLootResponse), alignof(GenerateLootResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GenerateLootResponse::PlacementNew_,
                                 sizeof(GenerateLootResponse),
                                 alignof(GenerateLootResponse));
  }
}
constexpr auto GenerateLootResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GenerateLootResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GenerateLootResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GenerateLootResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GenerateLootResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GenerateLootResponse>(), &GenerateLootResponse::ByteSizeLong,
              &GenerateLootResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GenerateLootResponse, _impl_._cached_size_),
          false,
      },
      &GenerateLootResponse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GenerateLootResponse_class_data_ =
        GenerateLootResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GenerateLootResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GenerateLootResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GenerateLootResponse_class_data_.tc_table);
  return GenerateLootResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 53, 2>
GenerateLootResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GenerateLootResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GenerateLootResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::GenerateLootResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .api.v1alpha1.GeneratedLoot loot = 1 [json_name = "loot"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GenerateLootResponse, _impl_.loot_)}},
    // .api.v1alpha1.LootGenerationStats generation_stats = 2 [json_name = "generationStats"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(GenerateLootResponse, _impl_.generation_stats_)}},
    // repeated string tables_used = 3 [json_name = "tablesUsed"];
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(GenerateLootResponse, _impl_.tables_used_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .api.v1alpha1.GeneratedLoot loot = 1 [json_name = "loot"];
    {PROTOBUF_FIELD_OFFSET(GenerateLootResponse, _impl_.loot_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.LootGenerationStats generation_stats = 2 [json_name = "generationStats"];
    {PROTOBUF_FIELD_OFFSET(GenerateLootResponse, _impl_.generation_stats_), _Internal::kHasBitsOffset + 1, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string tables_used = 3 [json_name = "tablesUsed"];
    {PROTOBUF_FIELD_OFFSET(GenerateLootResponse, _impl_.tables_used_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::GeneratedLoot>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::LootGenerationStats>()},
  }},
  {{
    "\41\0\0\13\0\0\0\0"
    "api.v1alpha1.GenerateLootResponse"
    "tables_used"
  }},
};
PROTOBUF_NOINLINE void GenerateLootResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.GenerateLootResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tables_used_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.loot_ != nullptr);
      _impl_.loot_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.generation_stats_ != nullptr);
      _impl_.generation_stats_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GenerateLootResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GenerateLootResponse& this_ = static_cast<const GenerateLootResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GenerateLootResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GenerateLootResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.GenerateLootResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.GeneratedLoot loot = 1 [json_name = "loot"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.loot_, this_._impl_.loot_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.LootGenerationStats generation_stats = 2 [json_name = "generationStats"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.generation_stats_, this_._impl_.generation_stats_->GetCachedSize(), target,
        stream);
  }

  // repeated string tables_used = 3 [json_name = "tablesUsed"];
  for (int i = 0, n = this_._internal_tables_used_size(); i < n; ++i) {
    const auto& s = this_._internal_tables_used().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.GenerateLootResponse.tables_used");
    target = stream->WriteString(3, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.GenerateLootResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GenerateLootResponse::ByteSizeLong(const MessageLite& base) {
  const GenerateLootResponse& this_ = static_cast<const GenerateLootResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GenerateLootResponse::ByteSizeLong() const {
  const GenerateLootResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.GenerateLootResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string tables_used = 3 [json_name = "tablesUsed"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_tables_used().size());
      for (int i = 0, n = this_._internal_tables_used().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_tables_used().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // .api.v1alpha1.GeneratedLoot loot = 1 [json_name = "loot"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.loot_);
    }
    // .api.v1alpha1.LootGenerationStats generation_stats = 2 [json_name = "generationStats"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.generation_stats_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GenerateLootResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GenerateLootResponse*>(&to_msg);
  auto& from = static_cast<const GenerateLootResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.GenerateLootResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tables_used()->MergeFrom(from._internal_tables_used());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.loot_ != nullptr);
      if (_this->_impl_.loot_ == nullptr) {
        _this->_impl_.loot_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.loot_);
      } else {
        _this->_impl_.loot_->MergeFrom(*from._impl_.loot_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.generation_stats_ != nullptr);
      if (_this->_impl_.generation_stats_ == nullptr) {
        _this->_impl_.generation_stats_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.generation_stats_);
      } else {
        _this->_impl_.generation_stats_->MergeFrom(*from._impl_.generation_stats_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GenerateLootResponse::CopyFrom(const GenerateLootResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.GenerateLootResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GenerateLootResponse::InternalSwap(GenerateLootResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.tables_used_.InternalSwap(&other->_impl_.tables_used_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GenerateLootResponse, _impl_.generation_stats_)
      + sizeof(GenerateLootResponse::_impl_.generation_stats_)
      - PROTOBUF_FIELD_OFFSET(GenerateLootResponse, _impl_.loot_)>(
          reinterpret_cast<char*>(&_impl_.loot_),
          reinterpret_cast<char*>(&other->_impl_.loot_));
}

::google::protobuf::Metadata GenerateLootResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
GeneratedLoot_RarityDistributionEntry_DoNotUse::GeneratedLoot_RarityDistributionEntry_DoNotUse()
    : SuperType(GeneratedLoot_RarityDistributionEntry_DoNotUse_class_data_.base()) {}
GeneratedLoot_RarityDistributionEntry_DoNotUse::GeneratedLoot_RarityDistributionEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, GeneratedLoot_RarityDistributionEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
GeneratedLoot_RarityDistributionEntry_DoNotUse::GeneratedLoot_RarityDistributionEntry_DoNotUse() : SuperType() {}
GeneratedLoot_RarityDistributionEntry_DoNotUse::GeneratedLoot_RarityDistributionEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL GeneratedLoot_RarityDistributionEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GeneratedLoot_RarityDistributionEntry_DoNotUse(arena);
}
constexpr auto GeneratedLoot_RarityDistributionEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GeneratedLoot_RarityDistributionEntry_DoNotUse),
                                            alignof(GeneratedLoot_RarityDistributionEntry_DoNotUse));
}
constexpr auto GeneratedLoot_RarityDistributionEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GeneratedLoot_RarityDistributionEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GeneratedLoot_RarityDistributionEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GeneratedLoot_RarityDistributionEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GeneratedLoot_RarityDistributionEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&GeneratedLoot_RarityDistributionEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GeneratedLoot_RarityDistributionEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &GeneratedLoot_RarityDistributionEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GeneratedLoot_RarityDistributionEntry_DoNotUse_class_data_ =
        GeneratedLoot_RarityDistributionEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GeneratedLoot_RarityDistributionEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GeneratedLoot_RarityDistributionEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GeneratedLoot_RarityDistributionEntry_DoNotUse_class_data_.tc_table);
  return GeneratedLoot_RarityDistributionEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 62, 2>
GeneratedLoot_RarityDistributionEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GeneratedLoot_RarityDistributionEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GeneratedLoot_RarityDistributionEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::GeneratedLoot_RarityDistributionEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 value = 2 [json_name = "value"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GeneratedLoot_RarityDistributionEntry_DoNotUse, _impl_.value_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(GeneratedLoot_RarityDistributionEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GeneratedLoot_RarityDistributionEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(GeneratedLoot_RarityDistributionEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(GeneratedLoot_RarityDistributionEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\62\3\0\0\0\0\0\0"
    "api.v1alpha1.GeneratedLoot.RarityDistributionEntry"
    "key"
  }},
};
// ===================================================================

class GeneratedLoot::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GeneratedLoot>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GeneratedLoot, _impl_._has_bits_);
};

GeneratedLoot::GeneratedLoot(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GeneratedLoot_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.GeneratedLoot)
}
PROTOBUF_NDEBUG_INLINE GeneratedLoot::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::GeneratedLoot& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        items_{visibility, arena, from.items_},
        rarity_distribution_{visibility, arena, from.rarity_distribution_},
        special_notes_{visibility, arena, from.special_notes_},
        loot_id_(arena, from.loot_id_),
        description_(arena, from.description_) {}

GeneratedLoot::GeneratedLoot(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GeneratedLoot& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GeneratedLoot_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GeneratedLoot* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.total_value_gp_ = from._impl_.total_value_gp_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.GeneratedLoot)
}
PROTOBUF_NDEBUG_INLINE GeneratedLoot::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        items_{visibility, arena},
        rarity_distribution_{visibility, arena},
        special_notes_{visibility, arena},
        loot_id_(arena),
        description_(arena) {}

inline void GeneratedLoot::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.total_value_gp_ = {};
}
GeneratedLoot::~GeneratedLoot() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.GeneratedLoot)
  SharedDtor(*this);
}
inline void GeneratedLoot::SharedDtor(MessageLite& self) {
  GeneratedLoot& this_ = static_cast<GeneratedLoot&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.loot_id_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GeneratedLoot::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GeneratedLoot(arena);
}
constexpr auto GeneratedLoot::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GeneratedLoot, _impl_.items_) +
          decltype(GeneratedLoot::_impl_.items_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GeneratedLoot, _impl_.rarity_distribution_) +
          decltype(GeneratedLoot::_impl_.rarity_distribution_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GeneratedLoot, _impl_.rarity_distribution_) +
          decltype(GeneratedLoot::_impl_.rarity_distribution_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GeneratedLoot, _impl_.special_notes_) +
          decltype(GeneratedLoot::_impl_.special_notes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(GeneratedLoot), alignof(GeneratedLoot), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GeneratedLoot::PlacementNew_,
                                 sizeof(GeneratedLoot),
                                 alignof(GeneratedLoot));
  }
}
constexpr auto GeneratedLoot::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GeneratedLoot_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GeneratedLoot::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GeneratedLoot>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GeneratedLoot::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GeneratedLoot>(), &GeneratedLoot::ByteSizeLong,
              &GeneratedLoot::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GeneratedLoot, _impl_._cached_size_),
          false,
      },
      &GeneratedLoot::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GeneratedLoot_class_data_ =
        GeneratedLoot::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GeneratedLoot::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GeneratedLoot_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GeneratedLoot_class_data_.tc_table);
  return GeneratedLoot_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 85, 2>
GeneratedLoot::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GeneratedLoot, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GeneratedLoot_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::GeneratedLoot>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string loot_id = 1 [json_name = "lootId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GeneratedLoot, _impl_.loot_id_)}},
    // string description = 2 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(GeneratedLoot, _impl_.description_)}},
    // repeated .api.v1alpha1.GeneratedLootItem items = 3 [json_name = "items"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(GeneratedLoot, _impl_.items_)}},
    // int32 total_value_gp = 4 [json_name = "totalValueGp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GeneratedLoot, _impl_.total_value_gp_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(GeneratedLoot, _impl_.total_value_gp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string special_notes = 6 [json_name = "specialNotes"];
    {::_pbi::TcParser::FastUR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(GeneratedLoot, _impl_.special_notes_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string loot_id = 1 [json_name = "lootId"];
    {PROTOBUF_FIELD_OFFSET(GeneratedLoot, _impl_.loot_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 2 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(GeneratedLoot, _impl_.description_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .api.v1alpha1.GeneratedLootItem items = 3 [json_name = "items"];
    {PROTOBUF_FIELD_OFFSET(GeneratedLoot, _impl_.items_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 total_value_gp = 4 [json_name = "totalValueGp"];
    {PROTOBUF_FIELD_OFFSET(GeneratedLoot, _impl_.total_value_gp_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // map<string, int32> rarity_distribution = 5 [json_name = "rarityDistribution"];
    {PROTOBUF_FIELD_OFFSET(GeneratedLoot, _impl_.rarity_distribution_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // repeated string special_notes = 6 [json_name = "specialNotes"];
    {PROTOBUF_FIELD_OFFSET(GeneratedLoot, _impl_.special_notes_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::GeneratedLootItem>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 5,
                                       0)},
  }},
  {{
    "\32\7\13\0\0\23\15\0"
    "api.v1alpha1.GeneratedLoot"
    "loot_id"
    "description"
    "rarity_distribution"
    "special_notes"
  }},
};
PROTOBUF_NOINLINE void GeneratedLoot::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.GeneratedLoot)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _impl_.rarity_distribution_.Clear();
  _impl_.special_notes_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.loot_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.total_value_gp_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GeneratedLoot::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GeneratedLoot& this_ = static_cast<const GeneratedLoot&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GeneratedLoot::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GeneratedLoot& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.GeneratedLoot)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string loot_id = 1 [json_name = "lootId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_loot_id().empty()) {
      const ::std::string& _s = this_._internal_loot_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.GeneratedLoot.loot_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string description = 2 [json_name = "description"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.GeneratedLoot.description");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // repeated .api.v1alpha1.GeneratedLootItem items = 3 [json_name = "items"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_items_size());
       i < n; i++) {
    const auto& repfield = this_._internal_items().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // int32 total_value_gp = 4 [json_name = "totalValueGp"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_total_value_gp() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_total_value_gp(), target);
    }
  }

  // map<string, int32> rarity_distribution = 5 [json_name = "rarityDistribution"];
  if (!this_._internal_rarity_distribution().empty()) {
    using MapType = ::google::protobuf::Map<::std::string, ::int32_t>;
    using WireHelper = _pbi::MapEntryFuncs<::std::string, ::int32_t,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_INT32>;
    const auto& field = this_._internal_rarity_distribution();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.GeneratedLoot.rarity_distribution");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.GeneratedLoot.rarity_distribution");
      }
    }
  }

  // repeated string special_notes = 6 [json_name = "specialNotes"];
  for (int i = 0, n = this_._internal_special_notes_size(); i < n; ++i) {
    const auto& s = this_._internal_special_notes().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.GeneratedLoot.special_notes");
    target = stream->WriteString(6, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.GeneratedLoot)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GeneratedLoot::ByteSizeLong(const MessageLite& base) {
  const GeneratedLoot& this_ = static_cast<const GeneratedLoot&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GeneratedLoot::ByteSizeLong() const {
  const GeneratedLoot& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.GeneratedLoot)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.GeneratedLootItem items = 3 [json_name = "items"];
    {
      total_size += 1UL * this_._internal_items_size();
      for (const auto& msg : this_._internal_items()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // map<string, int32> rarity_distribution = 5 [json_name = "rarityDistribution"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_rarity_distribution_size());
      for (const auto& entry : this_._internal_rarity_distribution()) {
        total_size += _pbi::MapEntryFuncs<::std::string, ::int32_t,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_INT32>::ByteSizeLong(entry.first, entry.second);
      }
    }
    // repeated string special_notes = 6 [json_name = "specialNotes"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_special_notes().size());
      for (int i = 0, n = this_._internal_special_notes().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_special_notes().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string loot_id = 1 [json_name = "lootId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_loot_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_loot_id());
      }
    }
    // string description = 2 [json_name = "description"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // int32 total_value_gp = 4 [json_name = "totalValueGp"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_total_value_gp() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_total_value_gp());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GeneratedLoot::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GeneratedLoot*>(&to_msg);
  auto& from = static_cast<const GeneratedLoot&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.GeneratedLoot)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_items()->MergeFrom(
      from._internal_items());
  _this->_impl_.rarity_distribution_.MergeFrom(from._impl_.rarity_distribution_);
  _this->_internal_mutable_special_notes()->MergeFrom(from._internal_special_notes());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_loot_id().empty()) {
        _this->_internal_set_loot_id(from._internal_loot_id());
      } else {
        if (_this->_impl_.loot_id_.IsDefault()) {
          _this->_internal_set_loot_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_total_value_gp() != 0) {
        _this->_impl_.total_value_gp_ = from._impl_.total_value_gp_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GeneratedLoot::CopyFrom(const GeneratedLoot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.GeneratedLoot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GeneratedLoot::InternalSwap(GeneratedLoot* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  _impl_.rarity_distribution_.InternalSwap(&other->_impl_.rarity_distribution_);
  _impl_.special_notes_.InternalSwap(&other->_impl_.special_notes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.loot_id_, &other->_impl_.loot_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  swap(_impl_.total_value_gp_, other->_impl_.total_value_gp_);
}

::google::protobuf::Metadata GeneratedLoot::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
GeneratedLootItem_PropertiesEntry_DoNotUse::GeneratedLootItem_PropertiesEntry_DoNotUse()
    : SuperType(GeneratedLootItem_PropertiesEntry_DoNotUse_class_data_.base()) {}
GeneratedLootItem_PropertiesEntry_DoNotUse::GeneratedLootItem_PropertiesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, GeneratedLootItem_PropertiesEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
GeneratedLootItem_PropertiesEntry_DoNotUse::GeneratedLootItem_PropertiesEntry_DoNotUse() : SuperType() {}
GeneratedLootItem_PropertiesEntry_DoNotUse::GeneratedLootItem_PropertiesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL GeneratedLootItem_PropertiesEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GeneratedLootItem_PropertiesEntry_DoNotUse(arena);
}
constexpr auto GeneratedLootItem_PropertiesEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GeneratedLootItem_PropertiesEntry_DoNotUse),
                                            alignof(GeneratedLootItem_PropertiesEntry_DoNotUse));
}
constexpr auto GeneratedLootItem_PropertiesEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GeneratedLootItem_PropertiesEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GeneratedLootItem_PropertiesEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GeneratedLootItem_PropertiesEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GeneratedLootItem_PropertiesEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&GeneratedLootItem_PropertiesEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GeneratedLootItem_PropertiesEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &GeneratedLootItem_PropertiesEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GeneratedLootItem_PropertiesEntry_DoNotUse_class_data_ =
        GeneratedLootItem_PropertiesEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GeneratedLootItem_PropertiesEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GeneratedLootItem_PropertiesEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GeneratedLootItem_PropertiesEntry_DoNotUse_class_data_.tc_table);
  return GeneratedLootItem_PropertiesEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 63, 2>
GeneratedLootItem_PropertiesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GeneratedLootItem_PropertiesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GeneratedLootItem_PropertiesEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::GeneratedLootItem_PropertiesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(GeneratedLootItem_PropertiesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GeneratedLootItem_PropertiesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(GeneratedLootItem_PropertiesEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(GeneratedLootItem_PropertiesEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\56\3\5\0\0\0\0\0"
    "api.v1alpha1.GeneratedLootItem.PropertiesEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class GeneratedLootItem::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GeneratedLootItem>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GeneratedLootItem, _impl_._has_bits_);
};

GeneratedLootItem::GeneratedLootItem(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GeneratedLootItem_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.GeneratedLootItem)
}
PROTOBUF_NDEBUG_INLINE GeneratedLootItem::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::GeneratedLootItem& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        properties_{visibility, arena, from.properties_},
        item_id_(arena, from.item_id_),
        name_(arena, from.name_),
        description_(arena, from.description_),
        rarity_(arena, from.rarity_),
        item_type_(arena, from.item_type_),
        condition_(arena, from.condition_) {}

GeneratedLootItem::GeneratedLootItem(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GeneratedLootItem& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GeneratedLootItem_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GeneratedLootItem* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, quantity_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, quantity_),
           offsetof(Impl_, is_cursed_) -
               offsetof(Impl_, quantity_) +
               sizeof(Impl_::is_cursed_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.GeneratedLootItem)
}
PROTOBUF_NDEBUG_INLINE GeneratedLootItem::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        properties_{visibility, arena},
        item_id_(arena),
        name_(arena),
        description_(arena),
        rarity_(arena),
        item_type_(arena),
        condition_(arena) {}

inline void GeneratedLootItem::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, quantity_),
           0,
           offsetof(Impl_, is_cursed_) -
               offsetof(Impl_, quantity_) +
               sizeof(Impl_::is_cursed_));
}
GeneratedLootItem::~GeneratedLootItem() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.GeneratedLootItem)
  SharedDtor(*this);
}
inline void GeneratedLootItem::SharedDtor(MessageLite& self) {
  GeneratedLootItem& this_ = static_cast<GeneratedLootItem&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.item_id_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.rarity_.Destroy();
  this_._impl_.item_type_.Destroy();
  this_._impl_.condition_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GeneratedLootItem::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GeneratedLootItem(arena);
}
constexpr auto GeneratedLootItem::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GeneratedLootItem, _impl_.properties_) +
          decltype(GeneratedLootItem::_impl_.properties_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GeneratedLootItem, _impl_.properties_) +
          decltype(GeneratedLootItem::_impl_.properties_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(GeneratedLootItem), alignof(GeneratedLootItem), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GeneratedLootItem::PlacementNew_,
                                 sizeof(GeneratedLootItem),
                                 alignof(GeneratedLootItem));
  }
}
constexpr auto GeneratedLootItem::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GeneratedLootItem_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GeneratedLootItem::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GeneratedLootItem>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GeneratedLootItem::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GeneratedLootItem>(), &GeneratedLootItem::ByteSizeLong,
              &GeneratedLootItem::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GeneratedLootItem, _impl_._cached_size_),
          false,
      },
      &GeneratedLootItem::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GeneratedLootItem_class_data_ =
        GeneratedLootItem::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GeneratedLootItem::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GeneratedLootItem_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GeneratedLootItem_class_data_.tc_table);
  return GeneratedLootItem_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 1, 103, 2>
GeneratedLootItem::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GeneratedLootItem, _impl_._has_bits_),
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GeneratedLootItem_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::GeneratedLootItem>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string item_id = 1 [json_name = "itemId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GeneratedLootItem, _impl_.item_id_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(GeneratedLootItem, _impl_.name_)}},
    // string description = 3 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(GeneratedLootItem, _impl_.description_)}},
    // int32 quantity = 4 [json_name = "quantity"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GeneratedLootItem, _impl_.quantity_), 6>(),
     {32, 6, 0, PROTOBUF_FIELD_OFFSET(GeneratedLootItem, _impl_.quantity_)}},
    // int32 unit_value_gp = 5 [json_name = "unitValueGp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GeneratedLootItem, _impl_.unit_value_gp_), 7>(),
     {40, 7, 0, PROTOBUF_FIELD_OFFSET(GeneratedLootItem, _impl_.unit_value_gp_)}},
    // int32 total_value_gp = 6 [json_name = "totalValueGp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GeneratedLootItem, _impl_.total_value_gp_), 8>(),
     {48, 8, 0, PROTOBUF_FIELD_OFFSET(GeneratedLootItem, _impl_.total_value_gp_)}},
    // string rarity = 7 [json_name = "rarity"];
    {::_pbi::TcParser::FastUS1,
     {58, 3, 0, PROTOBUF_FIELD_OFFSET(GeneratedLootItem, _impl_.rarity_)}},
    // string item_type = 8 [json_name = "itemType"];
    {::_pbi::TcParser::FastUS1,
     {66, 4, 0, PROTOBUF_FIELD_OFFSET(GeneratedLootItem, _impl_.item_type_)}},
    // string condition = 9 [json_name = "condition"];
    {::_pbi::TcParser::FastUS1,
     {74, 5, 0, PROTOBUF_FIELD_OFFSET(GeneratedLootItem, _impl_.condition_)}},
    // bool is_magical = 10 [json_name = "isMagical"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GeneratedLootItem, _impl_.is_magical_), 9>(),
     {80, 9, 0, PROTOBUF_FIELD_OFFSET(GeneratedLootItem, _impl_.is_magical_)}},
    // bool is_cursed = 11 [json_name = "isCursed"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GeneratedLootItem, _impl_.is_cursed_), 10>(),
     {88, 10, 0, PROTOBUF_FIELD_OFFSET(GeneratedLootItem, _impl_.is_cursed_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string item_id = 1 [json_name = "itemId"];
    {PROTOBUF_FIELD_OFFSET(GeneratedLootItem, _impl_.item_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(GeneratedLootItem, _impl_.name_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 3 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(GeneratedLootItem, _impl_.description_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 quantity = 4 [json_name = "quantity"];
    {PROTOBUF_FIELD_OFFSET(GeneratedLootItem, _impl_.quantity_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 unit_value_gp = 5 [json_name = "unitValueGp"];
    {PROTOBUF_FIELD_OFFSET(GeneratedLootItem, _impl_.unit_value_gp_), _Internal::kHasBitsOffset + 7, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 total_value_gp = 6 [json_name = "totalValueGp"];
    {PROTOBUF_FIELD_OFFSET(GeneratedLootItem, _impl_.total_value_gp_), _Internal::kHasBitsOffset + 8, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string rarity = 7 [json_name = "rarity"];
    {PROTOBUF_FIELD_OFFSET(GeneratedLootItem, _impl_.rarity_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string item_type = 8 [json_name = "itemType"];
    {PROTOBUF_FIELD_OFFSET(GeneratedLootItem, _impl_.item_type_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string condition = 9 [json_name = "condition"];
    {PROTOBUF_FIELD_OFFSET(GeneratedLootItem, _impl_.condition_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool is_magical = 10 [json_name = "isMagical"];
    {PROTOBUF_FIELD_OFFSET(GeneratedLootItem, _impl_.is_magical_), _Internal::kHasBitsOffset + 9, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool is_cursed = 11 [json_name = "isCursed"];
    {PROTOBUF_FIELD_OFFSET(GeneratedLootItem, _impl_.is_cursed_), _Internal::kHasBitsOffset + 10, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // map<string, string> properties = 12 [json_name = "properties"];
    {PROTOBUF_FIELD_OFFSET(GeneratedLootItem, _impl_.properties_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }},
  {{
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\36\7\4\13\0\0\0\6\11\11\0\0\12\0\0\0"
    "api.v1alpha1.GeneratedLootItem"
    "item_id"
    "name"
    "description"
    "rarity"
    "item_type"
    "condition"
    "properties"
  }},
};
PROTOBUF_NOINLINE void GeneratedLootItem::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.GeneratedLootItem)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.properties_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.item_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.rarity_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      _impl_.item_type_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      _impl_.condition_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x000000c0U) != 0) {
    ::memset(&_impl_.quantity_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.unit_value_gp_) -
        reinterpret_cast<char*>(&_impl_.quantity_)) + sizeof(_impl_.unit_value_gp_));
  }
  if ((cached_has_bits & 0x00000700U) != 0) {
    ::memset(&_impl_.total_value_gp_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_cursed_) -
        reinterpret_cast<char*>(&_impl_.total_value_gp_)) + sizeof(_impl_.is_cursed_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GeneratedLootItem::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GeneratedLootItem& this_ = static_cast<const GeneratedLootItem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GeneratedLootItem::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GeneratedLootItem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.GeneratedLootItem)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string item_id = 1 [json_name = "itemId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_item_id().empty()) {
      const ::std::string& _s = this_._internal_item_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.GeneratedLootItem.item_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string name = 2 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.GeneratedLootItem.name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string description = 3 [json_name = "description"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.GeneratedLootItem.description");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // int32 quantity = 4 [json_name = "quantity"];
  if ((this_._impl_._has_bits_[0] & 0x00000040U) != 0) {
    if (this_._internal_quantity() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_quantity(), target);
    }
  }

  // int32 unit_value_gp = 5 [json_name = "unitValueGp"];
  if ((this_._impl_._has_bits_[0] & 0x00000080U) != 0) {
    if (this_._internal_unit_value_gp() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
              stream, this_._internal_unit_value_gp(), target);
    }
  }

  // int32 total_value_gp = 6 [json_name = "totalValueGp"];
  if ((this_._impl_._has_bits_[0] & 0x00000100U) != 0) {
    if (this_._internal_total_value_gp() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<6>(
              stream, this_._internal_total_value_gp(), target);
    }
  }

  // string rarity = 7 [json_name = "rarity"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (!this_._internal_rarity().empty()) {
      const ::std::string& _s = this_._internal_rarity();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.GeneratedLootItem.rarity");
      target = stream->WriteStringMaybeAliased(7, _s, target);
    }
  }

  // string item_type = 8 [json_name = "itemType"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (!this_._internal_item_type().empty()) {
      const ::std::string& _s = this_._internal_item_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.GeneratedLootItem.item_type");
      target = stream->WriteStringMaybeAliased(8, _s, target);
    }
  }

  // string condition = 9 [json_name = "condition"];
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (!this_._internal_condition().empty()) {
      const ::std::string& _s = this_._internal_condition();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.GeneratedLootItem.condition");
      target = stream->WriteStringMaybeAliased(9, _s, target);
    }
  }

  // bool is_magical = 10 [json_name = "isMagical"];
  if ((this_._impl_._has_bits_[0] & 0x00000200U) != 0) {
    if (this_._internal_is_magical() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          10, this_._internal_is_magical(), target);
    }
  }

  // bool is_cursed = 11 [json_name = "isCursed"];
  if ((this_._impl_._has_bits_[0] & 0x00000400U) != 0) {
    if (this_._internal_is_cursed() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          11, this_._internal_is_cursed(), target);
    }
  }

  // map<string, string> properties = 12 [json_name = "properties"];
  if (!this_._internal_properties().empty()) {
    using MapType = ::google::protobuf::Map<::std::string, ::std::string>;
    using WireHelper = _pbi::MapEntryFuncs<::std::string, ::std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_properties();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            12, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.GeneratedLootItem.properties");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.GeneratedLootItem.properties");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            12, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.GeneratedLootItem.properties");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.GeneratedLootItem.properties");
      }
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.GeneratedLootItem)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GeneratedLootItem::ByteSizeLong(const MessageLite& base) {
  const GeneratedLootItem& this_ = static_cast<const GeneratedLootItem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GeneratedLootItem::ByteSizeLong() const {
  const GeneratedLootItem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.GeneratedLootItem)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, string> properties = 12 [json_name = "properties"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_properties_size());
      for (const auto& entry : this_._internal_properties()) {
        total_size += _pbi::MapEntryFuncs<::std::string, ::std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    // string item_id = 1 [json_name = "itemId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_item_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_item_id());
      }
    }
    // string name = 2 [json_name = "name"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string description = 3 [json_name = "description"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // string rarity = 7 [json_name = "rarity"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_rarity().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_rarity());
      }
    }
    // string item_type = 8 [json_name = "itemType"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (!this_._internal_item_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_item_type());
      }
    }
    // string condition = 9 [json_name = "condition"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (!this_._internal_condition().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_condition());
      }
    }
    // int32 quantity = 4 [json_name = "quantity"];
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (this_._internal_quantity() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_quantity());
      }
    }
    // int32 unit_value_gp = 5 [json_name = "unitValueGp"];
    if ((cached_has_bits & 0x00000080U) != 0) {
      if (this_._internal_unit_value_gp() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_unit_value_gp());
      }
    }
  }
  if ((cached_has_bits & 0x00000700U) != 0) {
    // int32 total_value_gp = 6 [json_name = "totalValueGp"];
    if ((cached_has_bits & 0x00000100U) != 0) {
      if (this_._internal_total_value_gp() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_total_value_gp());
      }
    }
    // bool is_magical = 10 [json_name = "isMagical"];
    if ((cached_has_bits & 0x00000200U) != 0) {
      if (this_._internal_is_magical() != 0) {
        total_size += 2;
      }
    }
    // bool is_cursed = 11 [json_name = "isCursed"];
    if ((cached_has_bits & 0x00000400U) != 0) {
      if (this_._internal_is_cursed() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GeneratedLootItem::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GeneratedLootItem*>(&to_msg);
  auto& from = static_cast<const GeneratedLootItem&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.GeneratedLootItem)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.properties_.MergeFrom(from._impl_.properties_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_item_id().empty()) {
        _this->_internal_set_item_id(from._internal_item_id());
      } else {
        if (_this->_impl_.item_id_.IsDefault()) {
          _this->_internal_set_item_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_rarity().empty()) {
        _this->_internal_set_rarity(from._internal_rarity());
      } else {
        if (_this->_impl_.rarity_.IsDefault()) {
          _this->_internal_set_rarity("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (!from._internal_item_type().empty()) {
        _this->_internal_set_item_type(from._internal_item_type());
      } else {
        if (_this->_impl_.item_type_.IsDefault()) {
          _this->_internal_set_item_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (!from._internal_condition().empty()) {
        _this->_internal_set_condition(from._internal_condition());
      } else {
        if (_this->_impl_.condition_.IsDefault()) {
          _this->_internal_set_condition("");
        }
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (from._internal_quantity() != 0) {
        _this->_impl_.quantity_ = from._impl_.quantity_;
      }
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      if (from._internal_unit_value_gp() != 0) {
        _this->_impl_.unit_value_gp_ = from._impl_.unit_value_gp_;
      }
    }
  }
  if ((cached_has_bits & 0x00000700U) != 0) {
    if ((cached_has_bits & 0x00000100U) != 0) {
      if (from._internal_total_value_gp() != 0) {
        _this->_impl_.total_value_gp_ = from._impl_.total_value_gp_;
      }
    }
    if ((cached_has_bits & 0x00000200U) != 0) {
      if (from._internal_is_magical() != 0) {
        _this->_impl_.is_magical_ = from._impl_.is_magical_;
      }
    }
    if ((cached_has_bits & 0x00000400U) != 0) {
      if (from._internal_is_cursed() != 0) {
        _this->_impl_.is_cursed_ = from._impl_.is_cursed_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GeneratedLootItem::CopyFrom(const GeneratedLootItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.GeneratedLootItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GeneratedLootItem::InternalSwap(GeneratedLootItem* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.properties_.InternalSwap(&other->_impl_.properties_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.item_id_, &other->_impl_.item_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.rarity_, &other->_impl_.rarity_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.item_type_, &other->_impl_.item_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.condition_, &other->_impl_.condition_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GeneratedLootItem, _impl_.is_cursed_)
      + sizeof(GeneratedLootItem::_impl_.is_cursed_)
      - PROTOBUF_FIELD_OFFSET(GeneratedLootItem, _impl_.quantity_)>(
          reinterpret_cast<char*>(&_impl_.quantity_),
          reinterpret_cast<char*>(&other->_impl_.quantity_));
}

::google::protobuf::Metadata GeneratedLootItem::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
LootGenerationStats_RarityCountsEntry_DoNotUse::LootGenerationStats_RarityCountsEntry_DoNotUse()
    : SuperType(LootGenerationStats_RarityCountsEntry_DoNotUse_class_data_.base()) {}
LootGenerationStats_RarityCountsEntry_DoNotUse::LootGenerationStats_RarityCountsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, LootGenerationStats_RarityCountsEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
LootGenerationStats_RarityCountsEntry_DoNotUse::LootGenerationStats_RarityCountsEntry_DoNotUse() : SuperType() {}
LootGenerationStats_RarityCountsEntry_DoNotUse::LootGenerationStats_RarityCountsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL LootGenerationStats_RarityCountsEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LootGenerationStats_RarityCountsEntry_DoNotUse(arena);
}
constexpr auto LootGenerationStats_RarityCountsEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(LootGenerationStats_RarityCountsEntry_DoNotUse),
                                            alignof(LootGenerationStats_RarityCountsEntry_DoNotUse));
}
constexpr auto LootGenerationStats_RarityCountsEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LootGenerationStats_RarityCountsEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LootGenerationStats_RarityCountsEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LootGenerationStats_RarityCountsEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LootGenerationStats_RarityCountsEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&LootGenerationStats_RarityCountsEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LootGenerationStats_RarityCountsEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &LootGenerationStats_RarityCountsEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LootGenerationStats_RarityCountsEntry_DoNotUse_class_data_ =
        LootGenerationStats_RarityCountsEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LootGenerationStats_RarityCountsEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LootGenerationStats_RarityCountsEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LootGenerationStats_RarityCountsEntry_DoNotUse_class_data_.tc_table);
  return LootGenerationStats_RarityCountsEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 62, 2>
LootGenerationStats_RarityCountsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LootGenerationStats_RarityCountsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    LootGenerationStats_RarityCountsEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::LootGenerationStats_RarityCountsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 value = 2 [json_name = "value"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LootGenerationStats_RarityCountsEntry_DoNotUse, _impl_.value_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(LootGenerationStats_RarityCountsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LootGenerationStats_RarityCountsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(LootGenerationStats_RarityCountsEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(LootGenerationStats_RarityCountsEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\62\3\0\0\0\0\0\0"
    "api.v1alpha1.LootGenerationStats.RarityCountsEntry"
    "key"
  }},
};
// ===================================================================

class LootGenerationStats::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<LootGenerationStats>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LootGenerationStats, _impl_._has_bits_);
};

LootGenerationStats::LootGenerationStats(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LootGenerationStats_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.LootGenerationStats)
}
PROTOBUF_NDEBUG_INLINE LootGenerationStats::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::LootGenerationStats& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        rarity_counts_{visibility, arena, from.rarity_counts_} {}

LootGenerationStats::LootGenerationStats(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const LootGenerationStats& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LootGenerationStats_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LootGenerationStats* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, generation_time_ms_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, generation_time_ms_),
           offsetof(Impl_, value_budget_gp_) -
               offsetof(Impl_, generation_time_ms_) +
               sizeof(Impl_::value_budget_gp_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.LootGenerationStats)
}
PROTOBUF_NDEBUG_INLINE LootGenerationStats::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        rarity_counts_{visibility, arena} {}

inline void LootGenerationStats::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, generation_time_ms_),
           0,
           offsetof(Impl_, value_budget_gp_) -
               offsetof(Impl_, generation_time_ms_) +
               sizeof(Impl_::value_budget_gp_));
}
LootGenerationStats::~LootGenerationStats() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.LootGenerationStats)
  SharedDtor(*this);
}
inline void LootGenerationStats::SharedDtor(MessageLite& self) {
  LootGenerationStats& this_ = static_cast<LootGenerationStats&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LootGenerationStats::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LootGenerationStats(arena);
}
constexpr auto LootGenerationStats::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(LootGenerationStats, _impl_.rarity_counts_) +
          decltype(LootGenerationStats::_impl_.rarity_counts_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(LootGenerationStats, _impl_.rarity_counts_) +
          decltype(LootGenerationStats::_impl_.rarity_counts_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(LootGenerationStats), alignof(LootGenerationStats), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&LootGenerationStats::PlacementNew_,
                                 sizeof(LootGenerationStats),
                                 alignof(LootGenerationStats));
  }
}
constexpr auto LootGenerationStats::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LootGenerationStats_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LootGenerationStats::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LootGenerationStats>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LootGenerationStats::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LootGenerationStats>(), &LootGenerationStats::ByteSizeLong,
              &LootGenerationStats::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LootGenerationStats, _impl_._cached_size_),
          false,
      },
      &LootGenerationStats::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LootGenerationStats_class_data_ =
        LootGenerationStats::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LootGenerationStats::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LootGenerationStats_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LootGenerationStats_class_data_.tc_table);
  return LootGenerationStats_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 54, 2>
LootGenerationStats::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LootGenerationStats, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    LootGenerationStats_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::LootGenerationStats>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 generation_time_ms = 1 [json_name = "generationTimeMs"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(LootGenerationStats, _impl_.generation_time_ms_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(LootGenerationStats, _impl_.generation_time_ms_)}},
    // int32 table_rolls_made = 2 [json_name = "tableRollsMade"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LootGenerationStats, _impl_.table_rolls_made_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(LootGenerationStats, _impl_.table_rolls_made_)}},
    // int32 items_generated = 3 [json_name = "itemsGenerated"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LootGenerationStats, _impl_.items_generated_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(LootGenerationStats, _impl_.items_generated_)}},
    // int32 value_generated_gp = 4 [json_name = "valueGeneratedGp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LootGenerationStats, _impl_.value_generated_gp_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(LootGenerationStats, _impl_.value_generated_gp_)}},
    // int32 value_budget_gp = 5 [json_name = "valueBudgetGp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LootGenerationStats, _impl_.value_budget_gp_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(LootGenerationStats, _impl_.value_budget_gp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 generation_time_ms = 1 [json_name = "generationTimeMs"];
    {PROTOBUF_FIELD_OFFSET(LootGenerationStats, _impl_.generation_time_ms_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int32 table_rolls_made = 2 [json_name = "tableRollsMade"];
    {PROTOBUF_FIELD_OFFSET(LootGenerationStats, _impl_.table_rolls_made_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 items_generated = 3 [json_name = "itemsGenerated"];
    {PROTOBUF_FIELD_OFFSET(LootGenerationStats, _impl_.items_generated_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 value_generated_gp = 4 [json_name = "valueGeneratedGp"];
    {PROTOBUF_FIELD_OFFSET(LootGenerationStats, _impl_.value_generated_gp_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 value_budget_gp = 5 [json_name = "valueBudgetGp"];
    {PROTOBUF_FIELD_OFFSET(LootGenerationStats, _impl_.value_budget_gp_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // map<string, int32> rarity_counts = 6 [json_name = "rarityCounts"];
    {PROTOBUF_FIELD_OFFSET(LootGenerationStats, _impl_.rarity_counts_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }},
  {{
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 5,
                                       0)},
  }},
  {{
    "\40\0\0\0\0\0\15\0"
    "api.v1alpha1.LootGenerationStats"
    "rarity_counts"
  }},
};
PROTOBUF_NOINLINE void LootGenerationStats::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.LootGenerationStats)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rarity_counts_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    ::memset(&_impl_.generation_time_ms_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.value_budget_gp_) -
        reinterpret_cast<char*>(&_impl_.generation_time_ms_)) + sizeof(_impl_.value_budget_gp_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LootGenerationStats::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LootGenerationStats& this_ = static_cast<const LootGenerationStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LootGenerationStats::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LootGenerationStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.LootGenerationStats)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 generation_time_ms = 1 [json_name = "generationTimeMs"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_generation_time_ms() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_generation_time_ms(), target);
    }
  }

  // int32 table_rolls_made = 2 [json_name = "tableRollsMade"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_table_rolls_made() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_table_rolls_made(), target);
    }
  }

  // int32 items_generated = 3 [json_name = "itemsGenerated"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_items_generated() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_items_generated(), target);
    }
  }

  // int32 value_generated_gp = 4 [json_name = "valueGeneratedGp"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_value_generated_gp() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_value_generated_gp(), target);
    }
  }

  // int32 value_budget_gp = 5 [json_name = "valueBudgetGp"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_value_budget_gp() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
              stream, this_._internal_value_budget_gp(), target);
    }
  }

  // map<string, int32> rarity_counts = 6 [json_name = "rarityCounts"];
  if (!this_._internal_rarity_counts().empty()) {
    using MapType = ::google::protobuf::Map<::std::string, ::int32_t>;
    using WireHelper = _pbi::MapEntryFuncs<::std::string, ::int32_t,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_INT32>;
    const auto& field = this_._internal_rarity_counts();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.LootGenerationStats.rarity_counts");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.LootGenerationStats.rarity_counts");
      }
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.LootGenerationStats)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LootGenerationStats::ByteSizeLong(const MessageLite& base) {
  const LootGenerationStats& this_ = static_cast<const LootGenerationStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LootGenerationStats::ByteSizeLong() const {
  const LootGenerationStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.LootGenerationStats)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, int32> rarity_counts = 6 [json_name = "rarityCounts"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_rarity_counts_size());
      for (const auto& entry : this_._internal_rarity_counts()) {
        total_size += _pbi::MapEntryFuncs<::std::string, ::int32_t,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_INT32>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // int64 generation_time_ms = 1 [json_name = "generationTimeMs"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_generation_time_ms() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_generation_time_ms());
      }
    }
    // int32 table_rolls_made = 2 [json_name = "tableRollsMade"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_table_rolls_made() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_table_rolls_made());
      }
    }
    // int32 items_generated = 3 [json_name = "itemsGenerated"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_items_generated() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_items_generated());
      }
    }
    // int32 value_generated_gp = 4 [json_name = "valueGeneratedGp"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_value_generated_gp() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_value_generated_gp());
      }
    }
    // int32 value_budget_gp = 5 [json_name = "valueBudgetGp"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_value_budget_gp() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_value_budget_gp());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LootGenerationStats::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LootGenerationStats*>(&to_msg);
  auto& from = static_cast<const LootGenerationStats&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.LootGenerationStats)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.rarity_counts_.MergeFrom(from._impl_.rarity_counts_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (from._internal_generation_time_ms() != 0) {
        _this->_impl_.generation_time_ms_ = from._impl_.generation_time_ms_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_table_rolls_made() != 0) {
        _this->_impl_.table_rolls_made_ = from._impl_.table_rolls_made_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_items_generated() != 0) {
        _this->_impl_.items_generated_ = from._impl_.items_generated_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_value_generated_gp() != 0) {
        _this->_impl_.value_generated_gp_ = from._impl_.value_generated_gp_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_value_budget_gp() != 0) {
        _this->_impl_.value_budget_gp_ = from._impl_.value_budget_gp_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LootGenerationStats::CopyFrom(const LootGenerationStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.LootGenerationStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LootGenerationStats::InternalSwap(LootGenerationStats* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.rarity_counts_.InternalSwap(&other->_impl_.rarity_counts_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LootGenerationStats, _impl_.value_budget_gp_)
      + sizeof(LootGenerationStats::_impl_.value_budget_gp_)
      - PROTOBUF_FIELD_OFFSET(LootGenerationStats, _impl_.generation_time_ms_)>(
          reinterpret_cast<char*>(&_impl_.generation_time_ms_),
          reinterpret_cast<char*>(&other->_impl_.generation_time_ms_));
}

::google::protobuf::Metadata LootGenerationStats::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ValidateSelectionTableRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ValidateSelectionTableRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ValidateSelectionTableRequest, _impl_._has_bits_);
};

ValidateSelectionTableRequest::ValidateSelectionTableRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ValidateSelectionTableRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.ValidateSelectionTableRequest)
}
PROTOBUF_NDEBUG_INLINE ValidateSelectionTableRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::ValidateSelectionTableRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ValidateSelectionTableRequest::ValidateSelectionTableRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ValidateSelectionTableRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ValidateSelectionTableRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ValidateSelectionTableRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.table_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.table_)
                : nullptr;
  _impl_.validation_options_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.validation_options_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.ValidateSelectionTableRequest)
}
PROTOBUF_NDEBUG_INLINE ValidateSelectionTableRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ValidateSelectionTableRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, table_),
           0,
           offsetof(Impl_, validation_options_) -
               offsetof(Impl_, table_) +
               sizeof(Impl_::validation_options_));
}
ValidateSelectionTableRequest::~ValidateSelectionTableRequest() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.ValidateSelectionTableRequest)
  SharedDtor(*this);
}
inline void ValidateSelectionTableRequest::SharedDtor(MessageLite& self) {
  ValidateSelectionTableRequest& this_ = static_cast<ValidateSelectionTableRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.table_;
  delete this_._impl_.validation_options_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ValidateSelectionTableRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ValidateSelectionTableRequest(arena);
}
constexpr auto ValidateSelectionTableRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ValidateSelectionTableRequest),
                                            alignof(ValidateSelectionTableRequest));
}
constexpr auto ValidateSelectionTableRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ValidateSelectionTableRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ValidateSelectionTableRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ValidateSelectionTableRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ValidateSelectionTableRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ValidateSelectionTableRequest>(), &ValidateSelectionTableRequest::ByteSizeLong,
              &ValidateSelectionTableRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ValidateSelectionTableRequest, _impl_._cached_size_),
          false,
      },
      &ValidateSelectionTableRequest::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ValidateSelectionTableRequest_class_data_ =
        ValidateSelectionTableRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ValidateSelectionTableRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ValidateSelectionTableRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ValidateSelectionTableRequest_class_data_.tc_table);
  return ValidateSelectionTableRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
ValidateSelectionTableRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ValidateSelectionTableRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ValidateSelectionTableRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::ValidateSelectionTableRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .api.v1alpha1.TableValidationOptions validation_options = 2 [json_name = "validationOptions"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(ValidateSelectionTableRequest, _impl_.validation_options_)}},
    // .api.v1alpha1.SelectionTable table = 1 [json_name = "table"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ValidateSelectionTableRequest, _impl_.table_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .api.v1alpha1.SelectionTable table = 1 [json_name = "table"];
    {PROTOBUF_FIELD_OFFSET(ValidateSelectionTableRequest, _impl_.table_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.TableValidationOptions validation_options = 2 [json_name = "validationOptions"];
    {PROTOBUF_FIELD_OFFSET(ValidateSelectionTableRequest, _impl_.validation_options_), _Internal::kHasBitsOffset + 1, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::SelectionTable>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::TableValidationOptions>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ValidateSelectionTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.ValidateSelectionTableRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.table_ != nullptr);
      _impl_.table_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.validation_options_ != nullptr);
      _impl_.validation_options_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ValidateSelectionTableRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ValidateSelectionTableRequest& this_ = static_cast<const ValidateSelectionTableRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ValidateSelectionTableRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ValidateSelectionTableRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.ValidateSelectionTableRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.SelectionTable table = 1 [json_name = "table"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.table_, this_._impl_.table_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.TableValidationOptions validation_options = 2 [json_name = "validationOptions"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.validation_options_, this_._impl_.validation_options_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.ValidateSelectionTableRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ValidateSelectionTableRequest::ByteSizeLong(const MessageLite& base) {
  const ValidateSelectionTableRequest& this_ = static_cast<const ValidateSelectionTableRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ValidateSelectionTableRequest::ByteSizeLong() const {
  const ValidateSelectionTableRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.ValidateSelectionTableRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // .api.v1alpha1.SelectionTable table = 1 [json_name = "table"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.table_);
    }
    // .api.v1alpha1.TableValidationOptions validation_options = 2 [json_name = "validationOptions"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.validation_options_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ValidateSelectionTableRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ValidateSelectionTableRequest*>(&to_msg);
  auto& from = static_cast<const ValidateSelectionTableRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.ValidateSelectionTableRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.table_ != nullptr);
      if (_this->_impl_.table_ == nullptr) {
        _this->_impl_.table_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.table_);
      } else {
        _this->_impl_.table_->MergeFrom(*from._impl_.table_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.validation_options_ != nullptr);
      if (_this->_impl_.validation_options_ == nullptr) {
        _this->_impl_.validation_options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.validation_options_);
      } else {
        _this->_impl_.validation_options_->MergeFrom(*from._impl_.validation_options_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValidateSelectionTableRequest::CopyFrom(const ValidateSelectionTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.ValidateSelectionTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ValidateSelectionTableRequest::InternalSwap(ValidateSelectionTableRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ValidateSelectionTableRequest, _impl_.validation_options_)
      + sizeof(ValidateSelectionTableRequest::_impl_.validation_options_)
      - PROTOBUF_FIELD_OFFSET(ValidateSelectionTableRequest, _impl_.table_)>(
          reinterpret_cast<char*>(&_impl_.table_),
          reinterpret_cast<char*>(&other->_impl_.table_));
}

::google::protobuf::Metadata ValidateSelectionTableRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ValidateSelectionTableResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ValidateSelectionTableResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ValidateSelectionTableResponse, _impl_._has_bits_);
};

void ValidateSelectionTableResponse::clear_validation_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.validation_result_ != nullptr) _impl_.validation_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
ValidateSelectionTableResponse::ValidateSelectionTableResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ValidateSelectionTableResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.ValidateSelectionTableResponse)
}
PROTOBUF_NDEBUG_INLINE ValidateSelectionTableResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::ValidateSelectionTableResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        validation_checks_{visibility, arena, from.validation_checks_} {}

ValidateSelectionTableResponse::ValidateSelectionTableResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ValidateSelectionTableResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ValidateSelectionTableResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ValidateSelectionTableResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.validation_result_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.validation_result_)
                : nullptr;
  _impl_.validation_stats_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.validation_stats_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.ValidateSelectionTableResponse)
}
PROTOBUF_NDEBUG_INLINE ValidateSelectionTableResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        validation_checks_{visibility, arena} {}

inline void ValidateSelectionTableResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, validation_result_),
           0,
           offsetof(Impl_, validation_stats_) -
               offsetof(Impl_, validation_result_) +
               sizeof(Impl_::validation_stats_));
}
ValidateSelectionTableResponse::~ValidateSelectionTableResponse() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.ValidateSelectionTableResponse)
  SharedDtor(*this);
}
inline void ValidateSelectionTableResponse::SharedDtor(MessageLite& self) {
  ValidateSelectionTableResponse& this_ = static_cast<ValidateSelectionTableResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.validation_result_;
  delete this_._impl_.validation_stats_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ValidateSelectionTableResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ValidateSelectionTableResponse(arena);
}
constexpr auto ValidateSelectionTableResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ValidateSelectionTableResponse, _impl_.validation_checks_) +
          decltype(ValidateSelectionTableResponse::_impl_.validation_checks_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ValidateSelectionTableResponse), alignof(ValidateSelectionTableResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ValidateSelectionTableResponse::PlacementNew_,
                                 sizeof(ValidateSelectionTableResponse),
                                 alignof(ValidateSelectionTableResponse));
  }
}
constexpr auto ValidateSelectionTableResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ValidateSelectionTableResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ValidateSelectionTableResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ValidateSelectionTableResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ValidateSelectionTableResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ValidateSelectionTableResponse>(), &ValidateSelectionTableResponse::ByteSizeLong,
              &ValidateSelectionTableResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ValidateSelectionTableResponse, _impl_._cached_size_),
          false,
      },
      &ValidateSelectionTableResponse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ValidateSelectionTableResponse_class_data_ =
        ValidateSelectionTableResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ValidateSelectionTableResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ValidateSelectionTableResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ValidateSelectionTableResponse_class_data_.tc_table);
  return ValidateSelectionTableResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
ValidateSelectionTableResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ValidateSelectionTableResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ValidateSelectionTableResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::ValidateSelectionTableResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .api.v1alpha1.ValidationResult validation_result = 1 [json_name = "validationResult"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ValidateSelectionTableResponse, _impl_.validation_result_)}},
    // repeated .api.v1alpha1.TableValidationCheck validation_checks = 2 [json_name = "validationChecks"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(ValidateSelectionTableResponse, _impl_.validation_checks_)}},
    // .api.v1alpha1.TableValidationStats validation_stats = 3 [json_name = "validationStats"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 2, PROTOBUF_FIELD_OFFSET(ValidateSelectionTableResponse, _impl_.validation_stats_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .api.v1alpha1.ValidationResult validation_result = 1 [json_name = "validationResult"];
    {PROTOBUF_FIELD_OFFSET(ValidateSelectionTableResponse, _impl_.validation_result_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .api.v1alpha1.TableValidationCheck validation_checks = 2 [json_name = "validationChecks"];
    {PROTOBUF_FIELD_OFFSET(ValidateSelectionTableResponse, _impl_.validation_checks_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.TableValidationStats validation_stats = 3 [json_name = "validationStats"];
    {PROTOBUF_FIELD_OFFSET(ValidateSelectionTableResponse, _impl_.validation_stats_), _Internal::kHasBitsOffset + 1, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::ValidationResult>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::TableValidationCheck>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::TableValidationStats>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ValidateSelectionTableResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.ValidateSelectionTableResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.validation_checks_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.validation_result_ != nullptr);
      _impl_.validation_result_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.validation_stats_ != nullptr);
      _impl_.validation_stats_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ValidateSelectionTableResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ValidateSelectionTableResponse& this_ = static_cast<const ValidateSelectionTableResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ValidateSelectionTableResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ValidateSelectionTableResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.ValidateSelectionTableResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.ValidationResult validation_result = 1 [json_name = "validationResult"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.validation_result_, this_._impl_.validation_result_->GetCachedSize(), target,
        stream);
  }

  // repeated .api.v1alpha1.TableValidationCheck validation_checks = 2 [json_name = "validationChecks"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_validation_checks_size());
       i < n; i++) {
    const auto& repfield = this_._internal_validation_checks().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // .api.v1alpha1.TableValidationStats validation_stats = 3 [json_name = "validationStats"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.validation_stats_, this_._impl_.validation_stats_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.ValidateSelectionTableResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ValidateSelectionTableResponse::ByteSizeLong(const MessageLite& base) {
  const ValidateSelectionTableResponse& this_ = static_cast<const ValidateSelectionTableResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ValidateSelectionTableResponse::ByteSizeLong() const {
  const ValidateSelectionTableResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.ValidateSelectionTableResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.TableValidationCheck validation_checks = 2 [json_name = "validationChecks"];
    {
      total_size += 1UL * this_._internal_validation_checks_size();
      for (const auto& msg : this_._internal_validation_checks()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // .api.v1alpha1.ValidationResult validation_result = 1 [json_name = "validationResult"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.validation_result_);
    }
    // .api.v1alpha1.TableValidationStats validation_stats = 3 [json_name = "validationStats"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.validation_stats_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ValidateSelectionTableResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ValidateSelectionTableResponse*>(&to_msg);
  auto& from = static_cast<const ValidateSelectionTableResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.ValidateSelectionTableResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_validation_checks()->MergeFrom(
      from._internal_validation_checks());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.validation_result_ != nullptr);
      if (_this->_impl_.validation_result_ == nullptr) {
        _this->_impl_.validation_result_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.validation_result_);
      } else {
        _this->_impl_.validation_result_->MergeFrom(*from._impl_.validation_result_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.validation_stats_ != nullptr);
      if (_this->_impl_.validation_stats_ == nullptr) {
        _this->_impl_.validation_stats_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.validation_stats_);
      } else {
        _this->_impl_.validation_stats_->MergeFrom(*from._impl_.validation_stats_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValidateSelectionTableResponse::CopyFrom(const ValidateSelectionTableResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.ValidateSelectionTableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ValidateSelectionTableResponse::InternalSwap(ValidateSelectionTableResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.validation_checks_.InternalSwap(&other->_impl_.validation_checks_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ValidateSelectionTableResponse, _impl_.validation_stats_)
      + sizeof(ValidateSelectionTableResponse::_impl_.validation_stats_)
      - PROTOBUF_FIELD_OFFSET(ValidateSelectionTableResponse, _impl_.validation_result_)>(
          reinterpret_cast<char*>(&_impl_.validation_result_),
          reinterpret_cast<char*>(&other->_impl_.validation_result_));
}

::google::protobuf::Metadata ValidateSelectionTableResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TableValidationCheck::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TableValidationCheck>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TableValidationCheck, _impl_._has_bits_);
};

TableValidationCheck::TableValidationCheck(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TableValidationCheck_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.TableValidationCheck)
}
PROTOBUF_NDEBUG_INLINE TableValidationCheck::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::TableValidationCheck& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        check_name_(arena, from.check_name_),
        message_(arena, from.message_),
        entry_id_(arena, from.entry_id_),
        suggested_fix_(arena, from.suggested_fix_) {}

TableValidationCheck::TableValidationCheck(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TableValidationCheck& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TableValidationCheck_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TableValidationCheck* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, result_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, result_),
           offsetof(Impl_, severity_) -
               offsetof(Impl_, result_) +
               sizeof(Impl_::severity_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.TableValidationCheck)
}
PROTOBUF_NDEBUG_INLINE TableValidationCheck::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        check_name_(arena),
        message_(arena),
        entry_id_(arena),
        suggested_fix_(arena) {}

inline void TableValidationCheck::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, result_),
           0,
           offsetof(Impl_, severity_) -
               offsetof(Impl_, result_) +
               sizeof(Impl_::severity_));
}
TableValidationCheck::~TableValidationCheck() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.TableValidationCheck)
  SharedDtor(*this);
}
inline void TableValidationCheck::SharedDtor(MessageLite& self) {
  TableValidationCheck& this_ = static_cast<TableValidationCheck&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.check_name_.Destroy();
  this_._impl_.message_.Destroy();
  this_._impl_.entry_id_.Destroy();
  this_._impl_.suggested_fix_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TableValidationCheck::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TableValidationCheck(arena);
}
constexpr auto TableValidationCheck::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TableValidationCheck),
                                            alignof(TableValidationCheck));
}
constexpr auto TableValidationCheck::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TableValidationCheck_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TableValidationCheck::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TableValidationCheck>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TableValidationCheck::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TableValidationCheck>(), &TableValidationCheck::ByteSizeLong,
              &TableValidationCheck::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TableValidationCheck, _impl_._cached_size_),
          false,
      },
      &TableValidationCheck::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TableValidationCheck_class_data_ =
        TableValidationCheck::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TableValidationCheck::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TableValidationCheck_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TableValidationCheck_class_data_.tc_table);
  return TableValidationCheck_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 80, 2>
TableValidationCheck::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TableValidationCheck, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TableValidationCheck_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::TableValidationCheck>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string check_name = 1 [json_name = "checkName"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TableValidationCheck, _impl_.check_name_)}},
    // .api.v1alpha1.TableValidationCheckResult result = 2 [json_name = "result"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TableValidationCheck, _impl_.result_), 4>(),
     {16, 4, 0, PROTOBUF_FIELD_OFFSET(TableValidationCheck, _impl_.result_)}},
    // string message = 3 [json_name = "message"];
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(TableValidationCheck, _impl_.message_)}},
    // .api.v1alpha1.TableValidationSeverity severity = 4 [json_name = "severity"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TableValidationCheck, _impl_.severity_), 5>(),
     {32, 5, 0, PROTOBUF_FIELD_OFFSET(TableValidationCheck, _impl_.severity_)}},
    // string entry_id = 5 [json_name = "entryId"];
    {::_pbi::TcParser::FastUS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(TableValidationCheck, _impl_.entry_id_)}},
    // string suggested_fix = 6 [json_name = "suggestedFix"];
    {::_pbi::TcParser::FastUS1,
     {50, 3, 0, PROTOBUF_FIELD_OFFSET(TableValidationCheck, _impl_.suggested_fix_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string check_name = 1 [json_name = "checkName"];
    {PROTOBUF_FIELD_OFFSET(TableValidationCheck, _impl_.check_name_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.TableValidationCheckResult result = 2 [json_name = "result"];
    {PROTOBUF_FIELD_OFFSET(TableValidationCheck, _impl_.result_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string message = 3 [json_name = "message"];
    {PROTOBUF_FIELD_OFFSET(TableValidationCheck, _impl_.message_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.TableValidationSeverity severity = 4 [json_name = "severity"];
    {PROTOBUF_FIELD_OFFSET(TableValidationCheck, _impl_.severity_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string entry_id = 5 [json_name = "entryId"];
    {PROTOBUF_FIELD_OFFSET(TableValidationCheck, _impl_.entry_id_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string suggested_fix = 6 [json_name = "suggestedFix"];
    {PROTOBUF_FIELD_OFFSET(TableValidationCheck, _impl_.suggested_fix_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\41\12\0\7\0\10\15\0"
    "api.v1alpha1.TableValidationCheck"
    "check_name"
    "message"
    "entry_id"
    "suggested_fix"
  }},
};
PROTOBUF_NOINLINE void TableValidationCheck::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.TableValidationCheck)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.check_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.message_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.entry_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.suggested_fix_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x00000030U) != 0) {
    ::memset(&_impl_.result_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.severity_) -
        reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.severity_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TableValidationCheck::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TableValidationCheck& this_ = static_cast<const TableValidationCheck&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TableValidationCheck::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TableValidationCheck& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.TableValidationCheck)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string check_name = 1 [json_name = "checkName"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_check_name().empty()) {
      const ::std::string& _s = this_._internal_check_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TableValidationCheck.check_name");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // .api.v1alpha1.TableValidationCheckResult result = 2 [json_name = "result"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_result() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_result(), target);
    }
  }

  // string message = 3 [json_name = "message"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_message().empty()) {
      const ::std::string& _s = this_._internal_message();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TableValidationCheck.message");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // .api.v1alpha1.TableValidationSeverity severity = 4 [json_name = "severity"];
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (this_._internal_severity() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          4, this_._internal_severity(), target);
    }
  }

  // string entry_id = 5 [json_name = "entryId"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_entry_id().empty()) {
      const ::std::string& _s = this_._internal_entry_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TableValidationCheck.entry_id");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  // string suggested_fix = 6 [json_name = "suggestedFix"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (!this_._internal_suggested_fix().empty()) {
      const ::std::string& _s = this_._internal_suggested_fix();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TableValidationCheck.suggested_fix");
      target = stream->WriteStringMaybeAliased(6, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.TableValidationCheck)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TableValidationCheck::ByteSizeLong(const MessageLite& base) {
  const TableValidationCheck& this_ = static_cast<const TableValidationCheck&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TableValidationCheck::ByteSizeLong() const {
  const TableValidationCheck& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.TableValidationCheck)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    // string check_name = 1 [json_name = "checkName"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_check_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_check_name());
      }
    }
    // string message = 3 [json_name = "message"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_message().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_message());
      }
    }
    // string entry_id = 5 [json_name = "entryId"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_entry_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_entry_id());
      }
    }
    // string suggested_fix = 6 [json_name = "suggestedFix"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_suggested_fix().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_suggested_fix());
      }
    }
    // .api.v1alpha1.TableValidationCheckResult result = 2 [json_name = "result"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_result() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_result());
      }
    }
    // .api.v1alpha1.TableValidationSeverity severity = 4 [json_name = "severity"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_severity() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_severity());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TableValidationCheck::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TableValidationCheck*>(&to_msg);
  auto& from = static_cast<const TableValidationCheck&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.TableValidationCheck)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_check_name().empty()) {
        _this->_internal_set_check_name(from._internal_check_name());
      } else {
        if (_this->_impl_.check_name_.IsDefault()) {
          _this->_internal_set_check_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_message().empty()) {
        _this->_internal_set_message(from._internal_message());
      } else {
        if (_this->_impl_.message_.IsDefault()) {
          _this->_internal_set_message("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_entry_id().empty()) {
        _this->_internal_set_entry_id(from._internal_entry_id());
      } else {
        if (_this->_impl_.entry_id_.IsDefault()) {
          _this->_internal_set_entry_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_suggested_fix().empty()) {
        _this->_internal_set_suggested_fix(from._internal_suggested_fix());
      } else {
        if (_this->_impl_.suggested_fix_.IsDefault()) {
          _this->_internal_set_suggested_fix("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_result() != 0) {
        _this->_impl_.result_ = from._impl_.result_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_severity() != 0) {
        _this->_impl_.severity_ = from._impl_.severity_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TableValidationCheck::CopyFrom(const TableValidationCheck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.TableValidationCheck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TableValidationCheck::InternalSwap(TableValidationCheck* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.check_name_, &other->_impl_.check_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entry_id_, &other->_impl_.entry_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.suggested_fix_, &other->_impl_.suggested_fix_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TableValidationCheck, _impl_.severity_)
      + sizeof(TableValidationCheck::_impl_.severity_)
      - PROTOBUF_FIELD_OFFSET(TableValidationCheck, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::google::protobuf::Metadata TableValidationCheck::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TableValidationStats::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TableValidationStats>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TableValidationStats, _impl_._has_bits_);
};

TableValidationStats::TableValidationStats(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TableValidationStats_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.TableValidationStats)
}
TableValidationStats::TableValidationStats(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TableValidationStats& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TableValidationStats_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE TableValidationStats::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void TableValidationStats::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, validation_time_ms_),
           0,
           offsetof(Impl_, warnings_generated_) -
               offsetof(Impl_, validation_time_ms_) +
               sizeof(Impl_::warnings_generated_));
}
TableValidationStats::~TableValidationStats() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.TableValidationStats)
  SharedDtor(*this);
}
inline void TableValidationStats::SharedDtor(MessageLite& self) {
  TableValidationStats& this_ = static_cast<TableValidationStats&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TableValidationStats::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TableValidationStats(arena);
}
constexpr auto TableValidationStats::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TableValidationStats),
                                            alignof(TableValidationStats));
}
constexpr auto TableValidationStats::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TableValidationStats_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TableValidationStats::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TableValidationStats>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TableValidationStats::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TableValidationStats>(), &TableValidationStats::ByteSizeLong,
              &TableValidationStats::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TableValidationStats, _impl_._cached_size_),
          false,
      },
      &TableValidationStats::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TableValidationStats_class_data_ =
        TableValidationStats::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TableValidationStats::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TableValidationStats_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TableValidationStats_class_data_.tc_table);
  return TableValidationStats_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2>
TableValidationStats::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TableValidationStats, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TableValidationStats_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::TableValidationStats>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 validation_time_ms = 1 [json_name = "validationTimeMs"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TableValidationStats, _impl_.validation_time_ms_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(TableValidationStats, _impl_.validation_time_ms_)}},
    // int32 checks_performed = 2 [json_name = "checksPerformed"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TableValidationStats, _impl_.checks_performed_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TableValidationStats, _impl_.checks_performed_)}},
    // int32 checks_passed = 3 [json_name = "checksPassed"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TableValidationStats, _impl_.checks_passed_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(TableValidationStats, _impl_.checks_passed_)}},
    // int32 checks_failed = 4 [json_name = "checksFailed"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TableValidationStats, _impl_.checks_failed_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(TableValidationStats, _impl_.checks_failed_)}},
    // int32 warnings_generated = 5 [json_name = "warningsGenerated"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TableValidationStats, _impl_.warnings_generated_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(TableValidationStats, _impl_.warnings_generated_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 validation_time_ms = 1 [json_name = "validationTimeMs"];
    {PROTOBUF_FIELD_OFFSET(TableValidationStats, _impl_.validation_time_ms_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int32 checks_performed = 2 [json_name = "checksPerformed"];
    {PROTOBUF_FIELD_OFFSET(TableValidationStats, _impl_.checks_performed_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 checks_passed = 3 [json_name = "checksPassed"];
    {PROTOBUF_FIELD_OFFSET(TableValidationStats, _impl_.checks_passed_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 checks_failed = 4 [json_name = "checksFailed"];
    {PROTOBUF_FIELD_OFFSET(TableValidationStats, _impl_.checks_failed_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 warnings_generated = 5 [json_name = "warningsGenerated"];
    {PROTOBUF_FIELD_OFFSET(TableValidationStats, _impl_.warnings_generated_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void TableValidationStats::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.TableValidationStats)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    ::memset(&_impl_.validation_time_ms_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.warnings_generated_) -
        reinterpret_cast<char*>(&_impl_.validation_time_ms_)) + sizeof(_impl_.warnings_generated_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TableValidationStats::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TableValidationStats& this_ = static_cast<const TableValidationStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TableValidationStats::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TableValidationStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.TableValidationStats)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 validation_time_ms = 1 [json_name = "validationTimeMs"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_validation_time_ms() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_validation_time_ms(), target);
    }
  }

  // int32 checks_performed = 2 [json_name = "checksPerformed"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_checks_performed() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_checks_performed(), target);
    }
  }

  // int32 checks_passed = 3 [json_name = "checksPassed"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_checks_passed() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_checks_passed(), target);
    }
  }

  // int32 checks_failed = 4 [json_name = "checksFailed"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_checks_failed() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_checks_failed(), target);
    }
  }

  // int32 warnings_generated = 5 [json_name = "warningsGenerated"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_warnings_generated() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
              stream, this_._internal_warnings_generated(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.TableValidationStats)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TableValidationStats::ByteSizeLong(const MessageLite& base) {
  const TableValidationStats& this_ = static_cast<const TableValidationStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TableValidationStats::ByteSizeLong() const {
  const TableValidationStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.TableValidationStats)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // int64 validation_time_ms = 1 [json_name = "validationTimeMs"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_validation_time_ms() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_validation_time_ms());
      }
    }
    // int32 checks_performed = 2 [json_name = "checksPerformed"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_checks_performed() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_checks_performed());
      }
    }
    // int32 checks_passed = 3 [json_name = "checksPassed"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_checks_passed() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_checks_passed());
      }
    }
    // int32 checks_failed = 4 [json_name = "checksFailed"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_checks_failed() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_checks_failed());
      }
    }
    // int32 warnings_generated = 5 [json_name = "warningsGenerated"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_warnings_generated() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_warnings_generated());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TableValidationStats::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TableValidationStats*>(&to_msg);
  auto& from = static_cast<const TableValidationStats&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.TableValidationStats)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (from._internal_validation_time_ms() != 0) {
        _this->_impl_.validation_time_ms_ = from._impl_.validation_time_ms_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_checks_performed() != 0) {
        _this->_impl_.checks_performed_ = from._impl_.checks_performed_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_checks_passed() != 0) {
        _this->_impl_.checks_passed_ = from._impl_.checks_passed_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_checks_failed() != 0) {
        _this->_impl_.checks_failed_ = from._impl_.checks_failed_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_warnings_generated() != 0) {
        _this->_impl_.warnings_generated_ = from._impl_.warnings_generated_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TableValidationStats::CopyFrom(const TableValidationStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.TableValidationStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TableValidationStats::InternalSwap(TableValidationStats* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TableValidationStats, _impl_.warnings_generated_)
      + sizeof(TableValidationStats::_impl_.warnings_generated_)
      - PROTOBUF_FIELD_OFFSET(TableValidationStats, _impl_.validation_time_ms_)>(
          reinterpret_cast<char*>(&_impl_.validation_time_ms_),
          reinterpret_cast<char*>(&other->_impl_.validation_time_ms_));
}

::google::protobuf::Metadata TableValidationStats::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetTableStatisticsRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetTableStatisticsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetTableStatisticsRequest, _impl_._has_bits_);
};

GetTableStatisticsRequest::GetTableStatisticsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetTableStatisticsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.GetTableStatisticsRequest)
}
PROTOBUF_NDEBUG_INLINE GetTableStatisticsRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::GetTableStatisticsRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        table_id_(arena, from.table_id_) {}

GetTableStatisticsRequest::GetTableStatisticsRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetTableStatisticsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetTableStatisticsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetTableStatisticsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.time_range_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.time_range_)
                : nullptr;
  _impl_.detail_level_ = from._impl_.detail_level_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.GetTableStatisticsRequest)
}
PROTOBUF_NDEBUG_INLINE GetTableStatisticsRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        table_id_(arena) {}

inline void GetTableStatisticsRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_range_),
           0,
           offsetof(Impl_, detail_level_) -
               offsetof(Impl_, time_range_) +
               sizeof(Impl_::detail_level_));
}
GetTableStatisticsRequest::~GetTableStatisticsRequest() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.GetTableStatisticsRequest)
  SharedDtor(*this);
}
inline void GetTableStatisticsRequest::SharedDtor(MessageLite& self) {
  GetTableStatisticsRequest& this_ = static_cast<GetTableStatisticsRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.table_id_.Destroy();
  delete this_._impl_.time_range_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetTableStatisticsRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetTableStatisticsRequest(arena);
}
constexpr auto GetTableStatisticsRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetTableStatisticsRequest),
                                            alignof(GetTableStatisticsRequest));
}
constexpr auto GetTableStatisticsRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetTableStatisticsRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetTableStatisticsRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetTableStatisticsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetTableStatisticsRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetTableStatisticsRequest>(), &GetTableStatisticsRequest::ByteSizeLong,
              &GetTableStatisticsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetTableStatisticsRequest, _impl_._cached_size_),
          false,
      },
      &GetTableStatisticsRequest::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetTableStatisticsRequest_class_data_ =
        GetTableStatisticsRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetTableStatisticsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetTableStatisticsRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetTableStatisticsRequest_class_data_.tc_table);
  return GetTableStatisticsRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 55, 2>
GetTableStatisticsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetTableStatisticsRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetTableStatisticsRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::GetTableStatisticsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string table_id = 1 [json_name = "tableId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetTableStatisticsRequest, _impl_.table_id_)}},
    // .api.v1alpha1.TableTimeRange time_range = 2 [json_name = "timeRange"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(GetTableStatisticsRequest, _impl_.time_range_)}},
    // .api.v1alpha1.StatisticsDetail detail_level = 3 [json_name = "detailLevel"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetTableStatisticsRequest, _impl_.detail_level_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(GetTableStatisticsRequest, _impl_.detail_level_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string table_id = 1 [json_name = "tableId"];
    {PROTOBUF_FIELD_OFFSET(GetTableStatisticsRequest, _impl_.table_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.TableTimeRange time_range = 2 [json_name = "timeRange"];
    {PROTOBUF_FIELD_OFFSET(GetTableStatisticsRequest, _impl_.time_range_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.StatisticsDetail detail_level = 3 [json_name = "detailLevel"];
    {PROTOBUF_FIELD_OFFSET(GetTableStatisticsRequest, _impl_.detail_level_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::TableTimeRange>()},
  }},
  {{
    "\46\10\0\0\0\0\0\0"
    "api.v1alpha1.GetTableStatisticsRequest"
    "table_id"
  }},
};
PROTOBUF_NOINLINE void GetTableStatisticsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.GetTableStatisticsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.table_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.time_range_ != nullptr);
      _impl_.time_range_->Clear();
    }
  }
  _impl_.detail_level_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetTableStatisticsRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetTableStatisticsRequest& this_ = static_cast<const GetTableStatisticsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetTableStatisticsRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetTableStatisticsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.GetTableStatisticsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string table_id = 1 [json_name = "tableId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_table_id().empty()) {
      const ::std::string& _s = this_._internal_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.GetTableStatisticsRequest.table_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.TableTimeRange time_range = 2 [json_name = "timeRange"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.time_range_, this_._impl_.time_range_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.StatisticsDetail detail_level = 3 [json_name = "detailLevel"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    if (this_._internal_detail_level() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_detail_level(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.GetTableStatisticsRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetTableStatisticsRequest::ByteSizeLong(const MessageLite& base) {
  const GetTableStatisticsRequest& this_ = static_cast<const GetTableStatisticsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetTableStatisticsRequest::ByteSizeLong() const {
  const GetTableStatisticsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.GetTableStatisticsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string table_id = 1 [json_name = "tableId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_table_id());
      }
    }
    // .api.v1alpha1.TableTimeRange time_range = 2 [json_name = "timeRange"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.time_range_);
    }
    // .api.v1alpha1.StatisticsDetail detail_level = 3 [json_name = "detailLevel"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_detail_level() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_detail_level());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetTableStatisticsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetTableStatisticsRequest*>(&to_msg);
  auto& from = static_cast<const GetTableStatisticsRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.GetTableStatisticsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_table_id().empty()) {
        _this->_internal_set_table_id(from._internal_table_id());
      } else {
        if (_this->_impl_.table_id_.IsDefault()) {
          _this->_internal_set_table_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.time_range_ != nullptr);
      if (_this->_impl_.time_range_ == nullptr) {
        _this->_impl_.time_range_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.time_range_);
      } else {
        _this->_impl_.time_range_->MergeFrom(*from._impl_.time_range_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_detail_level() != 0) {
        _this->_impl_.detail_level_ = from._impl_.detail_level_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetTableStatisticsRequest::CopyFrom(const GetTableStatisticsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.GetTableStatisticsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetTableStatisticsRequest::InternalSwap(GetTableStatisticsRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.table_id_, &other->_impl_.table_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetTableStatisticsRequest, _impl_.detail_level_)
      + sizeof(GetTableStatisticsRequest::_impl_.detail_level_)
      - PROTOBUF_FIELD_OFFSET(GetTableStatisticsRequest, _impl_.time_range_)>(
          reinterpret_cast<char*>(&_impl_.time_range_),
          reinterpret_cast<char*>(&other->_impl_.time_range_));
}

::google::protobuf::Metadata GetTableStatisticsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TableTimeRange::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TableTimeRange>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TableTimeRange, _impl_._has_bits_);
};

TableTimeRange::TableTimeRange(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TableTimeRange_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.TableTimeRange)
}
TableTimeRange::TableTimeRange(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TableTimeRange& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TableTimeRange_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE TableTimeRange::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void TableTimeRange::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, start_time_),
           0,
           offsetof(Impl_, end_time_) -
               offsetof(Impl_, start_time_) +
               sizeof(Impl_::end_time_));
}
TableTimeRange::~TableTimeRange() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.TableTimeRange)
  SharedDtor(*this);
}
inline void TableTimeRange::SharedDtor(MessageLite& self) {
  TableTimeRange& this_ = static_cast<TableTimeRange&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TableTimeRange::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TableTimeRange(arena);
}
constexpr auto TableTimeRange::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TableTimeRange),
                                            alignof(TableTimeRange));
}
constexpr auto TableTimeRange::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TableTimeRange_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TableTimeRange::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TableTimeRange>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TableTimeRange::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TableTimeRange>(), &TableTimeRange::ByteSizeLong,
              &TableTimeRange::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TableTimeRange, _impl_._cached_size_),
          false,
      },
      &TableTimeRange::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TableTimeRange_class_data_ =
        TableTimeRange::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TableTimeRange::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TableTimeRange_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TableTimeRange_class_data_.tc_table);
  return TableTimeRange_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
TableTimeRange::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TableTimeRange, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TableTimeRange_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::TableTimeRange>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 end_time = 2 [json_name = "endTime"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TableTimeRange, _impl_.end_time_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TableTimeRange, _impl_.end_time_)}},
    // int64 start_time = 1 [json_name = "startTime"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TableTimeRange, _impl_.start_time_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(TableTimeRange, _impl_.start_time_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 start_time = 1 [json_name = "startTime"];
    {PROTOBUF_FIELD_OFFSET(TableTimeRange, _impl_.start_time_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 end_time = 2 [json_name = "endTime"];
    {PROTOBUF_FIELD_OFFSET(TableTimeRange, _impl_.end_time_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void TableTimeRange::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.TableTimeRange)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    ::memset(&_impl_.start_time_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.end_time_) -
        reinterpret_cast<char*>(&_impl_.start_time_)) + sizeof(_impl_.end_time_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TableTimeRange::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TableTimeRange& this_ = static_cast<const TableTimeRange&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TableTimeRange::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TableTimeRange& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.TableTimeRange)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 start_time = 1 [json_name = "startTime"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_start_time() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_start_time(), target);
    }
  }

  // int64 end_time = 2 [json_name = "endTime"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_end_time() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
              stream, this_._internal_end_time(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.TableTimeRange)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TableTimeRange::ByteSizeLong(const MessageLite& base) {
  const TableTimeRange& this_ = static_cast<const TableTimeRange&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TableTimeRange::ByteSizeLong() const {
  const TableTimeRange& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.TableTimeRange)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // int64 start_time = 1 [json_name = "startTime"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_start_time() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_start_time());
      }
    }
    // int64 end_time = 2 [json_name = "endTime"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_end_time() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_end_time());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TableTimeRange::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TableTimeRange*>(&to_msg);
  auto& from = static_cast<const TableTimeRange&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.TableTimeRange)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (from._internal_start_time() != 0) {
        _this->_impl_.start_time_ = from._impl_.start_time_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_end_time() != 0) {
        _this->_impl_.end_time_ = from._impl_.end_time_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TableTimeRange::CopyFrom(const TableTimeRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.TableTimeRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TableTimeRange::InternalSwap(TableTimeRange* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TableTimeRange, _impl_.end_time_)
      + sizeof(TableTimeRange::_impl_.end_time_)
      - PROTOBUF_FIELD_OFFSET(TableTimeRange, _impl_.start_time_)>(
          reinterpret_cast<char*>(&_impl_.start_time_),
          reinterpret_cast<char*>(&other->_impl_.start_time_));
}

::google::protobuf::Metadata TableTimeRange::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetTableStatisticsResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetTableStatisticsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetTableStatisticsResponse, _impl_._has_bits_);
};

GetTableStatisticsResponse::GetTableStatisticsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetTableStatisticsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.GetTableStatisticsResponse)
}
PROTOBUF_NDEBUG_INLINE GetTableStatisticsResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::GetTableStatisticsResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetTableStatisticsResponse::GetTableStatisticsResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetTableStatisticsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetTableStatisticsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetTableStatisticsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.statistics_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.statistics_)
                : nullptr;
  _impl_.analysis_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.analysis_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.GetTableStatisticsResponse)
}
PROTOBUF_NDEBUG_INLINE GetTableStatisticsResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void GetTableStatisticsResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, statistics_),
           0,
           offsetof(Impl_, analysis_) -
               offsetof(Impl_, statistics_) +
               sizeof(Impl_::analysis_));
}
GetTableStatisticsResponse::~GetTableStatisticsResponse() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.GetTableStatisticsResponse)
  SharedDtor(*this);
}
inline void GetTableStatisticsResponse::SharedDtor(MessageLite& self) {
  GetTableStatisticsResponse& this_ = static_cast<GetTableStatisticsResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.statistics_;
  delete this_._impl_.analysis_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetTableStatisticsResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetTableStatisticsResponse(arena);
}
constexpr auto GetTableStatisticsResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetTableStatisticsResponse),
                                            alignof(GetTableStatisticsResponse));
}
constexpr auto GetTableStatisticsResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetTableStatisticsResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetTableStatisticsResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetTableStatisticsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetTableStatisticsResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetTableStatisticsResponse>(), &GetTableStatisticsResponse::ByteSizeLong,
              &GetTableStatisticsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetTableStatisticsResponse, _impl_._cached_size_),
          false,
      },
      &GetTableStatisticsResponse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetTableStatisticsResponse_class_data_ =
        GetTableStatisticsResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetTableStatisticsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetTableStatisticsResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetTableStatisticsResponse_class_data_.tc_table);
  return GetTableStatisticsResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
GetTableStatisticsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetTableStatisticsResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetTableStatisticsResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::GetTableStatisticsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .api.v1alpha1.StatisticalAnalysis analysis = 2 [json_name = "analysis"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(GetTableStatisticsResponse, _impl_.analysis_)}},
    // .api.v1alpha1.TableStatistics statistics = 1 [json_name = "statistics"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetTableStatisticsResponse, _impl_.statistics_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .api.v1alpha1.TableStatistics statistics = 1 [json_name = "statistics"];
    {PROTOBUF_FIELD_OFFSET(GetTableStatisticsResponse, _impl_.statistics_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.StatisticalAnalysis analysis = 2 [json_name = "analysis"];
    {PROTOBUF_FIELD_OFFSET(GetTableStatisticsResponse, _impl_.analysis_), _Internal::kHasBitsOffset + 1, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::TableStatistics>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::StatisticalAnalysis>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void GetTableStatisticsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.GetTableStatisticsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.statistics_ != nullptr);
      _impl_.statistics_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.analysis_ != nullptr);
      _impl_.analysis_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetTableStatisticsResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetTableStatisticsResponse& this_ = static_cast<const GetTableStatisticsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetTableStatisticsResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetTableStatisticsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.GetTableStatisticsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.TableStatistics statistics = 1 [json_name = "statistics"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.statistics_, this_._impl_.statistics_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.StatisticalAnalysis analysis = 2 [json_name = "analysis"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.analysis_, this_._impl_.analysis_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.GetTableStatisticsResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetTableStatisticsResponse::ByteSizeLong(const MessageLite& base) {
  const GetTableStatisticsResponse& this_ = static_cast<const GetTableStatisticsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetTableStatisticsResponse::ByteSizeLong() const {
  const GetTableStatisticsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.GetTableStatisticsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // .api.v1alpha1.TableStatistics statistics = 1 [json_name = "statistics"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.statistics_);
    }
    // .api.v1alpha1.StatisticalAnalysis analysis = 2 [json_name = "analysis"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.analysis_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetTableStatisticsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetTableStatisticsResponse*>(&to_msg);
  auto& from = static_cast<const GetTableStatisticsResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.GetTableStatisticsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.statistics_ != nullptr);
      if (_this->_impl_.statistics_ == nullptr) {
        _this->_impl_.statistics_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.statistics_);
      } else {
        _this->_impl_.statistics_->MergeFrom(*from._impl_.statistics_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.analysis_ != nullptr);
      if (_this->_impl_.analysis_ == nullptr) {
        _this->_impl_.analysis_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.analysis_);
      } else {
        _this->_impl_.analysis_->MergeFrom(*from._impl_.analysis_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetTableStatisticsResponse::CopyFrom(const GetTableStatisticsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.GetTableStatisticsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetTableStatisticsResponse::InternalSwap(GetTableStatisticsResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetTableStatisticsResponse, _impl_.analysis_)
      + sizeof(GetTableStatisticsResponse::_impl_.analysis_)
      - PROTOBUF_FIELD_OFFSET(GetTableStatisticsResponse, _impl_.statistics_)>(
          reinterpret_cast<char*>(&_impl_.statistics_),
          reinterpret_cast<char*>(&other->_impl_.statistics_));
}

::google::protobuf::Metadata GetTableStatisticsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StatisticalAnalysis::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<StatisticalAnalysis>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StatisticalAnalysis, _impl_._has_bits_);
};

StatisticalAnalysis::StatisticalAnalysis(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, StatisticalAnalysis_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.StatisticalAnalysis)
}
PROTOBUF_NDEBUG_INLINE StatisticalAnalysis::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::StatisticalAnalysis& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        trends_{visibility, arena, from.trends_} {}

StatisticalAnalysis::StatisticalAnalysis(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const StatisticalAnalysis& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, StatisticalAnalysis_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StatisticalAnalysis* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.roll_distribution_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.roll_distribution_)
                : nullptr;
  _impl_.entry_selection_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.entry_selection_)
                : nullptr;
  _impl_.performance_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.performance_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.StatisticalAnalysis)
}
PROTOBUF_NDEBUG_INLINE StatisticalAnalysis::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        trends_{visibility, arena} {}

inline void StatisticalAnalysis::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, roll_distribution_),
           0,
           offsetof(Impl_, performance_) -
               offsetof(Impl_, roll_distribution_) +
               sizeof(Impl_::performance_));
}
StatisticalAnalysis::~StatisticalAnalysis() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.StatisticalAnalysis)
  SharedDtor(*this);
}
inline void StatisticalAnalysis::SharedDtor(MessageLite& self) {
  StatisticalAnalysis& this_ = static_cast<StatisticalAnalysis&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.roll_distribution_;
  delete this_._impl_.entry_selection_;
  delete this_._impl_.performance_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL StatisticalAnalysis::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) StatisticalAnalysis(arena);
}
constexpr auto StatisticalAnalysis::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(StatisticalAnalysis, _impl_.trends_) +
          decltype(StatisticalAnalysis::_impl_.trends_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(StatisticalAnalysis), alignof(StatisticalAnalysis), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&StatisticalAnalysis::PlacementNew_,
                                 sizeof(StatisticalAnalysis),
                                 alignof(StatisticalAnalysis));
  }
}
constexpr auto StatisticalAnalysis::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_StatisticalAnalysis_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &StatisticalAnalysis::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<StatisticalAnalysis>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &StatisticalAnalysis::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<StatisticalAnalysis>(), &StatisticalAnalysis::ByteSizeLong,
              &StatisticalAnalysis::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(StatisticalAnalysis, _impl_._cached_size_),
          false,
      },
      &StatisticalAnalysis::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull StatisticalAnalysis_class_data_ =
        StatisticalAnalysis::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
StatisticalAnalysis::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&StatisticalAnalysis_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(StatisticalAnalysis_class_data_.tc_table);
  return StatisticalAnalysis_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2>
StatisticalAnalysis::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StatisticalAnalysis, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    StatisticalAnalysis_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::StatisticalAnalysis>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .api.v1alpha1.TrendData trends = 4 [json_name = "trends"];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 3, PROTOBUF_FIELD_OFFSET(StatisticalAnalysis, _impl_.trends_)}},
    // .api.v1alpha1.RollDistributionAnalysis roll_distribution = 1 [json_name = "rollDistribution"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StatisticalAnalysis, _impl_.roll_distribution_)}},
    // .api.v1alpha1.EntrySelectionAnalysis entry_selection = 2 [json_name = "entrySelection"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(StatisticalAnalysis, _impl_.entry_selection_)}},
    // .api.v1alpha1.PerformanceAnalysis performance = 3 [json_name = "performance"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(StatisticalAnalysis, _impl_.performance_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .api.v1alpha1.RollDistributionAnalysis roll_distribution = 1 [json_name = "rollDistribution"];
    {PROTOBUF_FIELD_OFFSET(StatisticalAnalysis, _impl_.roll_distribution_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.EntrySelectionAnalysis entry_selection = 2 [json_name = "entrySelection"];
    {PROTOBUF_FIELD_OFFSET(StatisticalAnalysis, _impl_.entry_selection_), _Internal::kHasBitsOffset + 1, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.PerformanceAnalysis performance = 3 [json_name = "performance"];
    {PROTOBUF_FIELD_OFFSET(StatisticalAnalysis, _impl_.performance_), _Internal::kHasBitsOffset + 2, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .api.v1alpha1.TrendData trends = 4 [json_name = "trends"];
    {PROTOBUF_FIELD_OFFSET(StatisticalAnalysis, _impl_.trends_), -1, 3, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RollDistributionAnalysis>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::EntrySelectionAnalysis>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::PerformanceAnalysis>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::TrendData>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void StatisticalAnalysis::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.StatisticalAnalysis)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trends_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.roll_distribution_ != nullptr);
      _impl_.roll_distribution_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.entry_selection_ != nullptr);
      _impl_.entry_selection_->Clear();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.performance_ != nullptr);
      _impl_.performance_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL StatisticalAnalysis::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const StatisticalAnalysis& this_ = static_cast<const StatisticalAnalysis&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL StatisticalAnalysis::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const StatisticalAnalysis& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.StatisticalAnalysis)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.RollDistributionAnalysis roll_distribution = 1 [json_name = "rollDistribution"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.roll_distribution_, this_._impl_.roll_distribution_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.EntrySelectionAnalysis entry_selection = 2 [json_name = "entrySelection"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.entry_selection_, this_._impl_.entry_selection_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.PerformanceAnalysis performance = 3 [json_name = "performance"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.performance_, this_._impl_.performance_->GetCachedSize(), target,
        stream);
  }

  // repeated .api.v1alpha1.TrendData trends = 4 [json_name = "trends"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_trends_size());
       i < n; i++) {
    const auto& repfield = this_._internal_trends().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.StatisticalAnalysis)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t StatisticalAnalysis::ByteSizeLong(const MessageLite& base) {
  const StatisticalAnalysis& this_ = static_cast<const StatisticalAnalysis&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t StatisticalAnalysis::ByteSizeLong() const {
  const StatisticalAnalysis& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.StatisticalAnalysis)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.TrendData trends = 4 [json_name = "trends"];
    {
      total_size += 1UL * this_._internal_trends_size();
      for (const auto& msg : this_._internal_trends()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // .api.v1alpha1.RollDistributionAnalysis roll_distribution = 1 [json_name = "rollDistribution"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.roll_distribution_);
    }
    // .api.v1alpha1.EntrySelectionAnalysis entry_selection = 2 [json_name = "entrySelection"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.entry_selection_);
    }
    // .api.v1alpha1.PerformanceAnalysis performance = 3 [json_name = "performance"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.performance_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void StatisticalAnalysis::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StatisticalAnalysis*>(&to_msg);
  auto& from = static_cast<const StatisticalAnalysis&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.StatisticalAnalysis)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_trends()->MergeFrom(
      from._internal_trends());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.roll_distribution_ != nullptr);
      if (_this->_impl_.roll_distribution_ == nullptr) {
        _this->_impl_.roll_distribution_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.roll_distribution_);
      } else {
        _this->_impl_.roll_distribution_->MergeFrom(*from._impl_.roll_distribution_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.entry_selection_ != nullptr);
      if (_this->_impl_.entry_selection_ == nullptr) {
        _this->_impl_.entry_selection_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.entry_selection_);
      } else {
        _this->_impl_.entry_selection_->MergeFrom(*from._impl_.entry_selection_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.performance_ != nullptr);
      if (_this->_impl_.performance_ == nullptr) {
        _this->_impl_.performance_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.performance_);
      } else {
        _this->_impl_.performance_->MergeFrom(*from._impl_.performance_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StatisticalAnalysis::CopyFrom(const StatisticalAnalysis& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.StatisticalAnalysis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StatisticalAnalysis::InternalSwap(StatisticalAnalysis* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.trends_.InternalSwap(&other->_impl_.trends_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StatisticalAnalysis, _impl_.performance_)
      + sizeof(StatisticalAnalysis::_impl_.performance_)
      - PROTOBUF_FIELD_OFFSET(StatisticalAnalysis, _impl_.roll_distribution_)>(
          reinterpret_cast<char*>(&_impl_.roll_distribution_),
          reinterpret_cast<char*>(&other->_impl_.roll_distribution_));
}

::google::protobuf::Metadata StatisticalAnalysis::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse::RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse()
    : SuperType(RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse_class_data_.base()) {}
RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse::RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse::RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse() : SuperType() {}
RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse::RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse(arena);
}
constexpr auto RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse),
                                            alignof(RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse));
}
constexpr auto RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse_class_data_ =
        RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse_class_data_.tc_table);
  return RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastF64S1,
     {17, 0, 0, PROTOBUF_FIELD_OFFSET(RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse, _impl_.value_)}},
    // int32 key = 1 [json_name = "key"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse, _impl_.key_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // double value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(RollDistributionAnalysis_ExpectedFrequencyEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse::RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse()
    : SuperType(RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse_class_data_.base()) {}
RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse::RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse::RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse() : SuperType() {}
RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse::RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse(arena);
}
constexpr auto RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse),
                                            alignof(RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse));
}
constexpr auto RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse_class_data_ =
        RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse_class_data_.tc_table);
  return RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastF64S1,
     {17, 0, 0, PROTOBUF_FIELD_OFFSET(RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse, _impl_.value_)}},
    // int32 key = 1 [json_name = "key"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse, _impl_.key_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // double value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(RollDistributionAnalysis_ActualFrequencyEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};
// ===================================================================

class RollDistributionAnalysis::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RollDistributionAnalysis>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RollDistributionAnalysis, _impl_._has_bits_);
};

RollDistributionAnalysis::RollDistributionAnalysis(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RollDistributionAnalysis_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.RollDistributionAnalysis)
}
PROTOBUF_NDEBUG_INLINE RollDistributionAnalysis::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::RollDistributionAnalysis& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        expected_frequency_{visibility, arena, from.expected_frequency_},
        actual_frequency_{visibility, arena, from.actual_frequency_},
        outlier_rolls_{visibility, arena, from.outlier_rolls_},
        _outlier_rolls_cached_byte_size_{0} {}

RollDistributionAnalysis::RollDistributionAnalysis(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RollDistributionAnalysis& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RollDistributionAnalysis_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RollDistributionAnalysis* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, chi_square_statistic_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, chi_square_statistic_),
           offsetof(Impl_, uniformity_score_) -
               offsetof(Impl_, chi_square_statistic_) +
               sizeof(Impl_::uniformity_score_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.RollDistributionAnalysis)
}
PROTOBUF_NDEBUG_INLINE RollDistributionAnalysis::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        expected_frequency_{visibility, arena},
        actual_frequency_{visibility, arena},
        outlier_rolls_{visibility, arena},
        _outlier_rolls_cached_byte_size_{0} {}

inline void RollDistributionAnalysis::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, chi_square_statistic_),
           0,
           offsetof(Impl_, uniformity_score_) -
               offsetof(Impl_, chi_square_statistic_) +
               sizeof(Impl_::uniformity_score_));
}
RollDistributionAnalysis::~RollDistributionAnalysis() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.RollDistributionAnalysis)
  SharedDtor(*this);
}
inline void RollDistributionAnalysis::SharedDtor(MessageLite& self) {
  RollDistributionAnalysis& this_ = static_cast<RollDistributionAnalysis&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RollDistributionAnalysis::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RollDistributionAnalysis(arena);
}
constexpr auto RollDistributionAnalysis::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RollDistributionAnalysis, _impl_.expected_frequency_) +
          decltype(RollDistributionAnalysis::_impl_.expected_frequency_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RollDistributionAnalysis, _impl_.expected_frequency_) +
          decltype(RollDistributionAnalysis::_impl_.expected_frequency_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RollDistributionAnalysis, _impl_.actual_frequency_) +
          decltype(RollDistributionAnalysis::_impl_.actual_frequency_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RollDistributionAnalysis, _impl_.actual_frequency_) +
          decltype(RollDistributionAnalysis::_impl_.actual_frequency_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RollDistributionAnalysis, _impl_.outlier_rolls_) +
          decltype(RollDistributionAnalysis::_impl_.outlier_rolls_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RollDistributionAnalysis), alignof(RollDistributionAnalysis), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RollDistributionAnalysis::PlacementNew_,
                                 sizeof(RollDistributionAnalysis),
                                 alignof(RollDistributionAnalysis));
  }
}
constexpr auto RollDistributionAnalysis::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RollDistributionAnalysis_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RollDistributionAnalysis::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RollDistributionAnalysis>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RollDistributionAnalysis::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RollDistributionAnalysis>(), &RollDistributionAnalysis::ByteSizeLong,
              &RollDistributionAnalysis::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RollDistributionAnalysis, _impl_._cached_size_),
          false,
      },
      &RollDistributionAnalysis::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RollDistributionAnalysis_class_data_ =
        RollDistributionAnalysis::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RollDistributionAnalysis::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RollDistributionAnalysis_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RollDistributionAnalysis_class_data_.tc_table);
  return RollDistributionAnalysis_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 6, 2, 0, 2>
RollDistributionAnalysis::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RollDistributionAnalysis, _impl_._has_bits_),
    0, // no _extensions_
    6, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RollDistributionAnalysis_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::RollDistributionAnalysis>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double p_value = 4 [json_name = "pValue"];
    {::_pbi::TcParser::FastF64S1,
     {33, 1, 0, PROTOBUF_FIELD_OFFSET(RollDistributionAnalysis, _impl_.p_value_)}},
    // double uniformity_score = 5 [json_name = "uniformityScore"];
    {::_pbi::TcParser::FastF64S1,
     {41, 2, 0, PROTOBUF_FIELD_OFFSET(RollDistributionAnalysis, _impl_.uniformity_score_)}},
    // repeated int32 outlier_rolls = 6 [json_name = "outlierRolls"];
    {::_pbi::TcParser::FastV32P1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(RollDistributionAnalysis, _impl_.outlier_rolls_)}},
    // double chi_square_statistic = 3 [json_name = "chiSquareStatistic"];
    {::_pbi::TcParser::FastF64S1,
     {25, 0, 0, PROTOBUF_FIELD_OFFSET(RollDistributionAnalysis, _impl_.chi_square_statistic_)}},
  }}, {{
    65535, 65535
  }}, {{
    // map<int32, double> expected_frequency = 1 [json_name = "expectedFrequency"];
    {PROTOBUF_FIELD_OFFSET(RollDistributionAnalysis, _impl_.expected_frequency_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<int32, double> actual_frequency = 2 [json_name = "actualFrequency"];
    {PROTOBUF_FIELD_OFFSET(RollDistributionAnalysis, _impl_.actual_frequency_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // double chi_square_statistic = 3 [json_name = "chiSquareStatistic"];
    {PROTOBUF_FIELD_OFFSET(RollDistributionAnalysis, _impl_.chi_square_statistic_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double p_value = 4 [json_name = "pValue"];
    {PROTOBUF_FIELD_OFFSET(RollDistributionAnalysis, _impl_.p_value_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double uniformity_score = 5 [json_name = "uniformityScore"];
    {PROTOBUF_FIELD_OFFSET(RollDistributionAnalysis, _impl_.uniformity_score_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // repeated int32 outlier_rolls = 6 [json_name = "outlierRolls"];
    {PROTOBUF_FIELD_OFFSET(RollDistributionAnalysis, _impl_.outlier_rolls_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
  }},
  {{
      {::_pbi::TcParser::GetMapAuxInfo(0, 0, 0,
                                       5, 1,
                                       0)},
      {::_pbi::TcParser::GetMapAuxInfo(0, 0, 0,
                                       5, 1,
                                       0)},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void RollDistributionAnalysis::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.RollDistributionAnalysis)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.expected_frequency_.Clear();
  _impl_.actual_frequency_.Clear();
  _impl_.outlier_rolls_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    ::memset(&_impl_.chi_square_statistic_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.uniformity_score_) -
        reinterpret_cast<char*>(&_impl_.chi_square_statistic_)) + sizeof(_impl_.uniformity_score_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RollDistributionAnalysis::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RollDistributionAnalysis& this_ = static_cast<const RollDistributionAnalysis&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RollDistributionAnalysis::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RollDistributionAnalysis& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.RollDistributionAnalysis)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // map<int32, double> expected_frequency = 1 [json_name = "expectedFrequency"];
  if (!this_._internal_expected_frequency().empty()) {
    using MapType = ::google::protobuf::Map<::int32_t, double>;
    using WireHelper = _pbi::MapEntryFuncs<::int32_t, double,
                                   _pbi::WireFormatLite::TYPE_INT32,
                                   _pbi::WireFormatLite::TYPE_DOUBLE>;
    const auto& field = this_._internal_expected_frequency();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
      }
    }
  }

  // map<int32, double> actual_frequency = 2 [json_name = "actualFrequency"];
  if (!this_._internal_actual_frequency().empty()) {
    using MapType = ::google::protobuf::Map<::int32_t, double>;
    using WireHelper = _pbi::MapEntryFuncs<::int32_t, double,
                                   _pbi::WireFormatLite::TYPE_INT32,
                                   _pbi::WireFormatLite::TYPE_DOUBLE>;
    const auto& field = this_._internal_actual_frequency();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
      }
    }
  }

  // double chi_square_statistic = 3 [json_name = "chiSquareStatistic"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_chi_square_statistic()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_chi_square_statistic(), target);
    }
  }

  // double p_value = 4 [json_name = "pValue"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_p_value()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          4, this_._internal_p_value(), target);
    }
  }

  // double uniformity_score = 5 [json_name = "uniformityScore"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_uniformity_score()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          5, this_._internal_uniformity_score(), target);
    }
  }

  // repeated int32 outlier_rolls = 6 [json_name = "outlierRolls"];
  {
    int byte_size = this_._impl_._outlier_rolls_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          6, this_._internal_outlier_rolls(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.RollDistributionAnalysis)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RollDistributionAnalysis::ByteSizeLong(const MessageLite& base) {
  const RollDistributionAnalysis& this_ = static_cast<const RollDistributionAnalysis&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RollDistributionAnalysis::ByteSizeLong() const {
  const RollDistributionAnalysis& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.RollDistributionAnalysis)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<int32, double> expected_frequency = 1 [json_name = "expectedFrequency"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_expected_frequency_size());
      for (const auto& entry : this_._internal_expected_frequency()) {
        total_size += _pbi::MapEntryFuncs<::int32_t, double,
                                       _pbi::WireFormatLite::TYPE_INT32,
                                       _pbi::WireFormatLite::TYPE_DOUBLE>::ByteSizeLong(entry.first, entry.second);
      }
    }
    // map<int32, double> actual_frequency = 2 [json_name = "actualFrequency"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_actual_frequency_size());
      for (const auto& entry : this_._internal_actual_frequency()) {
        total_size += _pbi::MapEntryFuncs<::int32_t, double,
                                       _pbi::WireFormatLite::TYPE_INT32,
                                       _pbi::WireFormatLite::TYPE_DOUBLE>::ByteSizeLong(entry.first, entry.second);
      }
    }
    // repeated int32 outlier_rolls = 6 [json_name = "outlierRolls"];
    {
      total_size +=
          ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
              this_._internal_outlier_rolls(), 1,
              this_._impl_._outlier_rolls_cached_byte_size_);
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // double chi_square_statistic = 3 [json_name = "chiSquareStatistic"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_chi_square_statistic()) != 0) {
        total_size += 9;
      }
    }
    // double p_value = 4 [json_name = "pValue"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_p_value()) != 0) {
        total_size += 9;
      }
    }
    // double uniformity_score = 5 [json_name = "uniformityScore"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_uniformity_score()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RollDistributionAnalysis::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RollDistributionAnalysis*>(&to_msg);
  auto& from = static_cast<const RollDistributionAnalysis&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.RollDistributionAnalysis)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.expected_frequency_.MergeFrom(from._impl_.expected_frequency_);
  _this->_impl_.actual_frequency_.MergeFrom(from._impl_.actual_frequency_);
  _this->_internal_mutable_outlier_rolls()->MergeFrom(from._internal_outlier_rolls());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_chi_square_statistic()) != 0) {
        _this->_impl_.chi_square_statistic_ = from._impl_.chi_square_statistic_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_p_value()) != 0) {
        _this->_impl_.p_value_ = from._impl_.p_value_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_uniformity_score()) != 0) {
        _this->_impl_.uniformity_score_ = from._impl_.uniformity_score_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RollDistributionAnalysis::CopyFrom(const RollDistributionAnalysis& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.RollDistributionAnalysis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RollDistributionAnalysis::InternalSwap(RollDistributionAnalysis* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.expected_frequency_.InternalSwap(&other->_impl_.expected_frequency_);
  _impl_.actual_frequency_.InternalSwap(&other->_impl_.actual_frequency_);
  _impl_.outlier_rolls_.InternalSwap(&other->_impl_.outlier_rolls_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RollDistributionAnalysis, _impl_.uniformity_score_)
      + sizeof(RollDistributionAnalysis::_impl_.uniformity_score_)
      - PROTOBUF_FIELD_OFFSET(RollDistributionAnalysis, _impl_.chi_square_statistic_)>(
          reinterpret_cast<char*>(&_impl_.chi_square_statistic_),
          reinterpret_cast<char*>(&other->_impl_.chi_square_statistic_));
}

::google::protobuf::Metadata RollDistributionAnalysis::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EntrySelectionAnalysis::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<EntrySelectionAnalysis>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EntrySelectionAnalysis, _impl_._has_bits_);
};

EntrySelectionAnalysis::EntrySelectionAnalysis(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EntrySelectionAnalysis_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.EntrySelectionAnalysis)
}
PROTOBUF_NDEBUG_INLINE EntrySelectionAnalysis::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::EntrySelectionAnalysis& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        clusters_{visibility, arena, from.clusters_},
        most_selected_entry_(arena, from.most_selected_entry_),
        least_selected_entry_(arena, from.least_selected_entry_) {}

EntrySelectionAnalysis::EntrySelectionAnalysis(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EntrySelectionAnalysis& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EntrySelectionAnalysis_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EntrySelectionAnalysis* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, selection_bias_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, selection_bias_),
           offsetof(Impl_, selection_entropy_) -
               offsetof(Impl_, selection_bias_) +
               sizeof(Impl_::selection_entropy_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.EntrySelectionAnalysis)
}
PROTOBUF_NDEBUG_INLINE EntrySelectionAnalysis::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        clusters_{visibility, arena},
        most_selected_entry_(arena),
        least_selected_entry_(arena) {}

inline void EntrySelectionAnalysis::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, selection_bias_),
           0,
           offsetof(Impl_, selection_entropy_) -
               offsetof(Impl_, selection_bias_) +
               sizeof(Impl_::selection_entropy_));
}
EntrySelectionAnalysis::~EntrySelectionAnalysis() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.EntrySelectionAnalysis)
  SharedDtor(*this);
}
inline void EntrySelectionAnalysis::SharedDtor(MessageLite& self) {
  EntrySelectionAnalysis& this_ = static_cast<EntrySelectionAnalysis&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.most_selected_entry_.Destroy();
  this_._impl_.least_selected_entry_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EntrySelectionAnalysis::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EntrySelectionAnalysis(arena);
}
constexpr auto EntrySelectionAnalysis::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(EntrySelectionAnalysis, _impl_.clusters_) +
          decltype(EntrySelectionAnalysis::_impl_.clusters_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(EntrySelectionAnalysis), alignof(EntrySelectionAnalysis), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&EntrySelectionAnalysis::PlacementNew_,
                                 sizeof(EntrySelectionAnalysis),
                                 alignof(EntrySelectionAnalysis));
  }
}
constexpr auto EntrySelectionAnalysis::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EntrySelectionAnalysis_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EntrySelectionAnalysis::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EntrySelectionAnalysis>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EntrySelectionAnalysis::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EntrySelectionAnalysis>(), &EntrySelectionAnalysis::ByteSizeLong,
              &EntrySelectionAnalysis::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EntrySelectionAnalysis, _impl_._cached_size_),
          false,
      },
      &EntrySelectionAnalysis::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EntrySelectionAnalysis_class_data_ =
        EntrySelectionAnalysis::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EntrySelectionAnalysis::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EntrySelectionAnalysis_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EntrySelectionAnalysis_class_data_.tc_table);
  return EntrySelectionAnalysis_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 83, 2>
EntrySelectionAnalysis::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EntrySelectionAnalysis, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    EntrySelectionAnalysis_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::EntrySelectionAnalysis>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string most_selected_entry = 1 [json_name = "mostSelectedEntry"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EntrySelectionAnalysis, _impl_.most_selected_entry_)}},
    // string least_selected_entry = 2 [json_name = "leastSelectedEntry"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(EntrySelectionAnalysis, _impl_.least_selected_entry_)}},
    // double selection_bias = 3 [json_name = "selectionBias"];
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(EntrySelectionAnalysis, _impl_.selection_bias_)}},
    // double selection_entropy = 4 [json_name = "selectionEntropy"];
    {::_pbi::TcParser::FastF64S1,
     {33, 3, 0, PROTOBUF_FIELD_OFFSET(EntrySelectionAnalysis, _impl_.selection_entropy_)}},
    // repeated .api.v1alpha1.SelectionCluster clusters = 5 [json_name = "clusters"];
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(EntrySelectionAnalysis, _impl_.clusters_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string most_selected_entry = 1 [json_name = "mostSelectedEntry"];
    {PROTOBUF_FIELD_OFFSET(EntrySelectionAnalysis, _impl_.most_selected_entry_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string least_selected_entry = 2 [json_name = "leastSelectedEntry"];
    {PROTOBUF_FIELD_OFFSET(EntrySelectionAnalysis, _impl_.least_selected_entry_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double selection_bias = 3 [json_name = "selectionBias"];
    {PROTOBUF_FIELD_OFFSET(EntrySelectionAnalysis, _impl_.selection_bias_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double selection_entropy = 4 [json_name = "selectionEntropy"];
    {PROTOBUF_FIELD_OFFSET(EntrySelectionAnalysis, _impl_.selection_entropy_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // repeated .api.v1alpha1.SelectionCluster clusters = 5 [json_name = "clusters"];
    {PROTOBUF_FIELD_OFFSET(EntrySelectionAnalysis, _impl_.clusters_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::SelectionCluster>()},
  }},
  {{
    "\43\23\24\0\0\0\0\0"
    "api.v1alpha1.EntrySelectionAnalysis"
    "most_selected_entry"
    "least_selected_entry"
  }},
};
PROTOBUF_NOINLINE void EntrySelectionAnalysis::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.EntrySelectionAnalysis)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.clusters_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.most_selected_entry_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.least_selected_entry_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000000cU) != 0) {
    ::memset(&_impl_.selection_bias_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.selection_entropy_) -
        reinterpret_cast<char*>(&_impl_.selection_bias_)) + sizeof(_impl_.selection_entropy_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EntrySelectionAnalysis::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EntrySelectionAnalysis& this_ = static_cast<const EntrySelectionAnalysis&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EntrySelectionAnalysis::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EntrySelectionAnalysis& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.EntrySelectionAnalysis)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string most_selected_entry = 1 [json_name = "mostSelectedEntry"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_most_selected_entry().empty()) {
      const ::std::string& _s = this_._internal_most_selected_entry();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EntrySelectionAnalysis.most_selected_entry");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string least_selected_entry = 2 [json_name = "leastSelectedEntry"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_least_selected_entry().empty()) {
      const ::std::string& _s = this_._internal_least_selected_entry();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EntrySelectionAnalysis.least_selected_entry");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // double selection_bias = 3 [json_name = "selectionBias"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_selection_bias()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_selection_bias(), target);
    }
  }

  // double selection_entropy = 4 [json_name = "selectionEntropy"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_selection_entropy()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          4, this_._internal_selection_entropy(), target);
    }
  }

  // repeated .api.v1alpha1.SelectionCluster clusters = 5 [json_name = "clusters"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_clusters_size());
       i < n; i++) {
    const auto& repfield = this_._internal_clusters().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.EntrySelectionAnalysis)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EntrySelectionAnalysis::ByteSizeLong(const MessageLite& base) {
  const EntrySelectionAnalysis& this_ = static_cast<const EntrySelectionAnalysis&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EntrySelectionAnalysis::ByteSizeLong() const {
  const EntrySelectionAnalysis& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.EntrySelectionAnalysis)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.SelectionCluster clusters = 5 [json_name = "clusters"];
    {
      total_size += 1UL * this_._internal_clusters_size();
      for (const auto& msg : this_._internal_clusters()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string most_selected_entry = 1 [json_name = "mostSelectedEntry"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_most_selected_entry().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_most_selected_entry());
      }
    }
    // string least_selected_entry = 2 [json_name = "leastSelectedEntry"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_least_selected_entry().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_least_selected_entry());
      }
    }
    // double selection_bias = 3 [json_name = "selectionBias"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_selection_bias()) != 0) {
        total_size += 9;
      }
    }
    // double selection_entropy = 4 [json_name = "selectionEntropy"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_selection_entropy()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EntrySelectionAnalysis::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EntrySelectionAnalysis*>(&to_msg);
  auto& from = static_cast<const EntrySelectionAnalysis&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.EntrySelectionAnalysis)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_clusters()->MergeFrom(
      from._internal_clusters());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_most_selected_entry().empty()) {
        _this->_internal_set_most_selected_entry(from._internal_most_selected_entry());
      } else {
        if (_this->_impl_.most_selected_entry_.IsDefault()) {
          _this->_internal_set_most_selected_entry("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_least_selected_entry().empty()) {
        _this->_internal_set_least_selected_entry(from._internal_least_selected_entry());
      } else {
        if (_this->_impl_.least_selected_entry_.IsDefault()) {
          _this->_internal_set_least_selected_entry("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_selection_bias()) != 0) {
        _this->_impl_.selection_bias_ = from._impl_.selection_bias_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_selection_entropy()) != 0) {
        _this->_impl_.selection_entropy_ = from._impl_.selection_entropy_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EntrySelectionAnalysis::CopyFrom(const EntrySelectionAnalysis& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.EntrySelectionAnalysis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EntrySelectionAnalysis::InternalSwap(EntrySelectionAnalysis* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.clusters_.InternalSwap(&other->_impl_.clusters_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.most_selected_entry_, &other->_impl_.most_selected_entry_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.least_selected_entry_, &other->_impl_.least_selected_entry_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EntrySelectionAnalysis, _impl_.selection_entropy_)
      + sizeof(EntrySelectionAnalysis::_impl_.selection_entropy_)
      - PROTOBUF_FIELD_OFFSET(EntrySelectionAnalysis, _impl_.selection_bias_)>(
          reinterpret_cast<char*>(&_impl_.selection_bias_),
          reinterpret_cast<char*>(&other->_impl_.selection_bias_));
}

::google::protobuf::Metadata EntrySelectionAnalysis::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SelectionCluster::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SelectionCluster>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SelectionCluster, _impl_._has_bits_);
};

SelectionCluster::SelectionCluster(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SelectionCluster_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.SelectionCluster)
}
PROTOBUF_NDEBUG_INLINE SelectionCluster::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::SelectionCluster& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        entry_ids_{visibility, arena, from.entry_ids_},
        cluster_id_(arena, from.cluster_id_),
        characteristics_(arena, from.characteristics_) {}

SelectionCluster::SelectionCluster(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SelectionCluster& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SelectionCluster_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SelectionCluster* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.frequency_ = from._impl_.frequency_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.SelectionCluster)
}
PROTOBUF_NDEBUG_INLINE SelectionCluster::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        entry_ids_{visibility, arena},
        cluster_id_(arena),
        characteristics_(arena) {}

inline void SelectionCluster::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.frequency_ = {};
}
SelectionCluster::~SelectionCluster() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.SelectionCluster)
  SharedDtor(*this);
}
inline void SelectionCluster::SharedDtor(MessageLite& self) {
  SelectionCluster& this_ = static_cast<SelectionCluster&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.cluster_id_.Destroy();
  this_._impl_.characteristics_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SelectionCluster::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SelectionCluster(arena);
}
constexpr auto SelectionCluster::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SelectionCluster, _impl_.entry_ids_) +
          decltype(SelectionCluster::_impl_.entry_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SelectionCluster), alignof(SelectionCluster), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SelectionCluster::PlacementNew_,
                                 sizeof(SelectionCluster),
                                 alignof(SelectionCluster));
  }
}
constexpr auto SelectionCluster::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SelectionCluster_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SelectionCluster::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SelectionCluster>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SelectionCluster::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SelectionCluster>(), &SelectionCluster::ByteSizeLong,
              &SelectionCluster::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SelectionCluster, _impl_._cached_size_),
          false,
      },
      &SelectionCluster::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SelectionCluster_class_data_ =
        SelectionCluster::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SelectionCluster::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SelectionCluster_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SelectionCluster_class_data_.tc_table);
  return SelectionCluster_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 72, 2>
SelectionCluster::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SelectionCluster, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SelectionCluster_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::SelectionCluster>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string characteristics = 4 [json_name = "characteristics"];
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(SelectionCluster, _impl_.characteristics_)}},
    // string cluster_id = 1 [json_name = "clusterId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SelectionCluster, _impl_.cluster_id_)}},
    // repeated string entry_ids = 2 [json_name = "entryIds"];
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SelectionCluster, _impl_.entry_ids_)}},
    // double frequency = 3 [json_name = "frequency"];
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(SelectionCluster, _impl_.frequency_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string cluster_id = 1 [json_name = "clusterId"];
    {PROTOBUF_FIELD_OFFSET(SelectionCluster, _impl_.cluster_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string entry_ids = 2 [json_name = "entryIds"];
    {PROTOBUF_FIELD_OFFSET(SelectionCluster, _impl_.entry_ids_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // double frequency = 3 [json_name = "frequency"];
    {PROTOBUF_FIELD_OFFSET(SelectionCluster, _impl_.frequency_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // string characteristics = 4 [json_name = "characteristics"];
    {PROTOBUF_FIELD_OFFSET(SelectionCluster, _impl_.characteristics_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\12\11\0\17\0\0\0"
    "api.v1alpha1.SelectionCluster"
    "cluster_id"
    "entry_ids"
    "characteristics"
  }},
};
PROTOBUF_NOINLINE void SelectionCluster::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.SelectionCluster)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entry_ids_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.cluster_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.characteristics_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.frequency_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SelectionCluster::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SelectionCluster& this_ = static_cast<const SelectionCluster&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SelectionCluster::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SelectionCluster& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.SelectionCluster)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string cluster_id = 1 [json_name = "clusterId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_cluster_id().empty()) {
      const ::std::string& _s = this_._internal_cluster_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.SelectionCluster.cluster_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // repeated string entry_ids = 2 [json_name = "entryIds"];
  for (int i = 0, n = this_._internal_entry_ids_size(); i < n; ++i) {
    const auto& s = this_._internal_entry_ids().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.SelectionCluster.entry_ids");
    target = stream->WriteString(2, s, target);
  }

  // double frequency = 3 [json_name = "frequency"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_frequency()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_frequency(), target);
    }
  }

  // string characteristics = 4 [json_name = "characteristics"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_characteristics().empty()) {
      const ::std::string& _s = this_._internal_characteristics();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.SelectionCluster.characteristics");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.SelectionCluster)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SelectionCluster::ByteSizeLong(const MessageLite& base) {
  const SelectionCluster& this_ = static_cast<const SelectionCluster&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SelectionCluster::ByteSizeLong() const {
  const SelectionCluster& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.SelectionCluster)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string entry_ids = 2 [json_name = "entryIds"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_entry_ids().size());
      for (int i = 0, n = this_._internal_entry_ids().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_entry_ids().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string cluster_id = 1 [json_name = "clusterId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_cluster_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_cluster_id());
      }
    }
    // string characteristics = 4 [json_name = "characteristics"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_characteristics().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_characteristics());
      }
    }
    // double frequency = 3 [json_name = "frequency"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_frequency()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SelectionCluster::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SelectionCluster*>(&to_msg);
  auto& from = static_cast<const SelectionCluster&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.SelectionCluster)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entry_ids()->MergeFrom(from._internal_entry_ids());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_cluster_id().empty()) {
        _this->_internal_set_cluster_id(from._internal_cluster_id());
      } else {
        if (_this->_impl_.cluster_id_.IsDefault()) {
          _this->_internal_set_cluster_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_characteristics().empty()) {
        _this->_internal_set_characteristics(from._internal_characteristics());
      } else {
        if (_this->_impl_.characteristics_.IsDefault()) {
          _this->_internal_set_characteristics("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_frequency()) != 0) {
        _this->_impl_.frequency_ = from._impl_.frequency_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SelectionCluster::CopyFrom(const SelectionCluster& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.SelectionCluster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SelectionCluster::InternalSwap(SelectionCluster* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.entry_ids_.InternalSwap(&other->_impl_.entry_ids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cluster_id_, &other->_impl_.cluster_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.characteristics_, &other->_impl_.characteristics_, arena);
  swap(_impl_.frequency_, other->_impl_.frequency_);
}

::google::protobuf::Metadata SelectionCluster::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PerformanceAnalysis::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<PerformanceAnalysis>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PerformanceAnalysis, _impl_._has_bits_);
};

PerformanceAnalysis::PerformanceAnalysis(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PerformanceAnalysis_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.PerformanceAnalysis)
}
PROTOBUF_NDEBUG_INLINE PerformanceAnalysis::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::PerformanceAnalysis& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        bottlenecks_{visibility, arena, from.bottlenecks_},
        recommendations_{visibility, arena, from.recommendations_},
        performance_trend_(arena, from.performance_trend_) {}

PerformanceAnalysis::PerformanceAnalysis(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const PerformanceAnalysis& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PerformanceAnalysis_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PerformanceAnalysis* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.resource_usage_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.resource_usage_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.PerformanceAnalysis)
}
PROTOBUF_NDEBUG_INLINE PerformanceAnalysis::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        bottlenecks_{visibility, arena},
        recommendations_{visibility, arena},
        performance_trend_(arena) {}

inline void PerformanceAnalysis::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.resource_usage_ = {};
}
PerformanceAnalysis::~PerformanceAnalysis() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.PerformanceAnalysis)
  SharedDtor(*this);
}
inline void PerformanceAnalysis::SharedDtor(MessageLite& self) {
  PerformanceAnalysis& this_ = static_cast<PerformanceAnalysis&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.performance_trend_.Destroy();
  delete this_._impl_.resource_usage_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PerformanceAnalysis::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PerformanceAnalysis(arena);
}
constexpr auto PerformanceAnalysis::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PerformanceAnalysis, _impl_.bottlenecks_) +
          decltype(PerformanceAnalysis::_impl_.bottlenecks_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PerformanceAnalysis, _impl_.recommendations_) +
          decltype(PerformanceAnalysis::_impl_.recommendations_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(PerformanceAnalysis), alignof(PerformanceAnalysis), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PerformanceAnalysis::PlacementNew_,
                                 sizeof(PerformanceAnalysis),
                                 alignof(PerformanceAnalysis));
  }
}
constexpr auto PerformanceAnalysis::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PerformanceAnalysis_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PerformanceAnalysis::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PerformanceAnalysis>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PerformanceAnalysis::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PerformanceAnalysis>(), &PerformanceAnalysis::ByteSizeLong,
              &PerformanceAnalysis::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PerformanceAnalysis, _impl_._cached_size_),
          false,
      },
      &PerformanceAnalysis::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PerformanceAnalysis_class_data_ =
        PerformanceAnalysis::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PerformanceAnalysis::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PerformanceAnalysis_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PerformanceAnalysis_class_data_.tc_table);
  return PerformanceAnalysis_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 84, 2>
PerformanceAnalysis::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PerformanceAnalysis, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    PerformanceAnalysis_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::PerformanceAnalysis>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .api.v1alpha1.ResourceUsagePattern resource_usage = 4 [json_name = "resourceUsage"];
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(PerformanceAnalysis, _impl_.resource_usage_)}},
    // string performance_trend = 1 [json_name = "performanceTrend"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PerformanceAnalysis, _impl_.performance_trend_)}},
    // repeated string bottlenecks = 2 [json_name = "bottlenecks"];
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PerformanceAnalysis, _impl_.bottlenecks_)}},
    // repeated string recommendations = 3 [json_name = "recommendations"];
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PerformanceAnalysis, _impl_.recommendations_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string performance_trend = 1 [json_name = "performanceTrend"];
    {PROTOBUF_FIELD_OFFSET(PerformanceAnalysis, _impl_.performance_trend_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string bottlenecks = 2 [json_name = "bottlenecks"];
    {PROTOBUF_FIELD_OFFSET(PerformanceAnalysis, _impl_.bottlenecks_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string recommendations = 3 [json_name = "recommendations"];
    {PROTOBUF_FIELD_OFFSET(PerformanceAnalysis, _impl_.recommendations_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .api.v1alpha1.ResourceUsagePattern resource_usage = 4 [json_name = "resourceUsage"];
    {PROTOBUF_FIELD_OFFSET(PerformanceAnalysis, _impl_.resource_usage_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::ResourceUsagePattern>()},
  }},
  {{
    "\40\21\13\17\0\0\0\0"
    "api.v1alpha1.PerformanceAnalysis"
    "performance_trend"
    "bottlenecks"
    "recommendations"
  }},
};
PROTOBUF_NOINLINE void PerformanceAnalysis::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.PerformanceAnalysis)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bottlenecks_.Clear();
  _impl_.recommendations_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.performance_trend_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.resource_usage_ != nullptr);
      _impl_.resource_usage_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PerformanceAnalysis::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PerformanceAnalysis& this_ = static_cast<const PerformanceAnalysis&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PerformanceAnalysis::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PerformanceAnalysis& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.PerformanceAnalysis)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string performance_trend = 1 [json_name = "performanceTrend"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_performance_trend().empty()) {
      const ::std::string& _s = this_._internal_performance_trend();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.PerformanceAnalysis.performance_trend");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // repeated string bottlenecks = 2 [json_name = "bottlenecks"];
  for (int i = 0, n = this_._internal_bottlenecks_size(); i < n; ++i) {
    const auto& s = this_._internal_bottlenecks().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.PerformanceAnalysis.bottlenecks");
    target = stream->WriteString(2, s, target);
  }

  // repeated string recommendations = 3 [json_name = "recommendations"];
  for (int i = 0, n = this_._internal_recommendations_size(); i < n; ++i) {
    const auto& s = this_._internal_recommendations().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.PerformanceAnalysis.recommendations");
    target = stream->WriteString(3, s, target);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.ResourceUsagePattern resource_usage = 4 [json_name = "resourceUsage"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.resource_usage_, this_._impl_.resource_usage_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.PerformanceAnalysis)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PerformanceAnalysis::ByteSizeLong(const MessageLite& base) {
  const PerformanceAnalysis& this_ = static_cast<const PerformanceAnalysis&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PerformanceAnalysis::ByteSizeLong() const {
  const PerformanceAnalysis& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.PerformanceAnalysis)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string bottlenecks = 2 [json_name = "bottlenecks"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_bottlenecks().size());
      for (int i = 0, n = this_._internal_bottlenecks().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_bottlenecks().Get(i));
      }
    }
    // repeated string recommendations = 3 [json_name = "recommendations"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_recommendations().size());
      for (int i = 0, n = this_._internal_recommendations().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_recommendations().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string performance_trend = 1 [json_name = "performanceTrend"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_performance_trend().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_performance_trend());
      }
    }
    // .api.v1alpha1.ResourceUsagePattern resource_usage = 4 [json_name = "resourceUsage"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.resource_usage_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PerformanceAnalysis::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PerformanceAnalysis*>(&to_msg);
  auto& from = static_cast<const PerformanceAnalysis&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.PerformanceAnalysis)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_bottlenecks()->MergeFrom(from._internal_bottlenecks());
  _this->_internal_mutable_recommendations()->MergeFrom(from._internal_recommendations());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_performance_trend().empty()) {
        _this->_internal_set_performance_trend(from._internal_performance_trend());
      } else {
        if (_this->_impl_.performance_trend_.IsDefault()) {
          _this->_internal_set_performance_trend("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.resource_usage_ != nullptr);
      if (_this->_impl_.resource_usage_ == nullptr) {
        _this->_impl_.resource_usage_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.resource_usage_);
      } else {
        _this->_impl_.resource_usage_->MergeFrom(*from._impl_.resource_usage_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PerformanceAnalysis::CopyFrom(const PerformanceAnalysis& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.PerformanceAnalysis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PerformanceAnalysis::InternalSwap(PerformanceAnalysis* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.bottlenecks_.InternalSwap(&other->_impl_.bottlenecks_);
  _impl_.recommendations_.InternalSwap(&other->_impl_.recommendations_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.performance_trend_, &other->_impl_.performance_trend_, arena);
  swap(_impl_.resource_usage_, other->_impl_.resource_usage_);
}

::google::protobuf::Metadata PerformanceAnalysis::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ResourceUsagePattern::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ResourceUsagePattern>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ResourceUsagePattern, _impl_._has_bits_);
};

ResourceUsagePattern::ResourceUsagePattern(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ResourceUsagePattern_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.ResourceUsagePattern)
}
PROTOBUF_NDEBUG_INLINE ResourceUsagePattern::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::ResourceUsagePattern& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        peak_usage_times_{visibility, arena, from.peak_usage_times_},
        _peak_usage_times_cached_byte_size_{0},
        memory_trend_(arena, from.memory_trend_),
        cpu_pattern_(arena, from.cpu_pattern_) {}

ResourceUsagePattern::ResourceUsagePattern(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ResourceUsagePattern& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ResourceUsagePattern_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ResourceUsagePattern* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.cache_effectiveness_ = from._impl_.cache_effectiveness_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.ResourceUsagePattern)
}
PROTOBUF_NDEBUG_INLINE ResourceUsagePattern::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        peak_usage_times_{visibility, arena},
        _peak_usage_times_cached_byte_size_{0},
        memory_trend_(arena),
        cpu_pattern_(arena) {}

inline void ResourceUsagePattern::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.cache_effectiveness_ = {};
}
ResourceUsagePattern::~ResourceUsagePattern() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.ResourceUsagePattern)
  SharedDtor(*this);
}
inline void ResourceUsagePattern::SharedDtor(MessageLite& self) {
  ResourceUsagePattern& this_ = static_cast<ResourceUsagePattern&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.memory_trend_.Destroy();
  this_._impl_.cpu_pattern_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ResourceUsagePattern::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ResourceUsagePattern(arena);
}
constexpr auto ResourceUsagePattern::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ResourceUsagePattern, _impl_.peak_usage_times_) +
          decltype(ResourceUsagePattern::_impl_.peak_usage_times_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ResourceUsagePattern), alignof(ResourceUsagePattern), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ResourceUsagePattern::PlacementNew_,
                                 sizeof(ResourceUsagePattern),
                                 alignof(ResourceUsagePattern));
  }
}
constexpr auto ResourceUsagePattern::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ResourceUsagePattern_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ResourceUsagePattern::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ResourceUsagePattern>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ResourceUsagePattern::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ResourceUsagePattern>(), &ResourceUsagePattern::ByteSizeLong,
              &ResourceUsagePattern::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ResourceUsagePattern, _impl_._cached_size_),
          false,
      },
      &ResourceUsagePattern::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ResourceUsagePattern_class_data_ =
        ResourceUsagePattern::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ResourceUsagePattern::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ResourceUsagePattern_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ResourceUsagePattern_class_data_.tc_table);
  return ResourceUsagePattern_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 65, 2>
ResourceUsagePattern::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ResourceUsagePattern, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ResourceUsagePattern_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::ResourceUsagePattern>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated int64 peak_usage_times = 4 [json_name = "peakUsageTimes"];
    {::_pbi::TcParser::FastV64P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ResourceUsagePattern, _impl_.peak_usage_times_)}},
    // string memory_trend = 1 [json_name = "memoryTrend"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ResourceUsagePattern, _impl_.memory_trend_)}},
    // string cpu_pattern = 2 [json_name = "cpuPattern"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(ResourceUsagePattern, _impl_.cpu_pattern_)}},
    // double cache_effectiveness = 3 [json_name = "cacheEffectiveness"];
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(ResourceUsagePattern, _impl_.cache_effectiveness_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string memory_trend = 1 [json_name = "memoryTrend"];
    {PROTOBUF_FIELD_OFFSET(ResourceUsagePattern, _impl_.memory_trend_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string cpu_pattern = 2 [json_name = "cpuPattern"];
    {PROTOBUF_FIELD_OFFSET(ResourceUsagePattern, _impl_.cpu_pattern_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double cache_effectiveness = 3 [json_name = "cacheEffectiveness"];
    {PROTOBUF_FIELD_OFFSET(ResourceUsagePattern, _impl_.cache_effectiveness_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // repeated int64 peak_usage_times = 4 [json_name = "peakUsageTimes"];
    {PROTOBUF_FIELD_OFFSET(ResourceUsagePattern, _impl_.peak_usage_times_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
  }},
  // no aux_entries
  {{
    "\41\14\13\0\0\0\0\0"
    "api.v1alpha1.ResourceUsagePattern"
    "memory_trend"
    "cpu_pattern"
  }},
};
PROTOBUF_NOINLINE void ResourceUsagePattern::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.ResourceUsagePattern)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.peak_usage_times_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.memory_trend_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.cpu_pattern_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.cache_effectiveness_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ResourceUsagePattern::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ResourceUsagePattern& this_ = static_cast<const ResourceUsagePattern&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ResourceUsagePattern::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ResourceUsagePattern& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.ResourceUsagePattern)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string memory_trend = 1 [json_name = "memoryTrend"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_memory_trend().empty()) {
      const ::std::string& _s = this_._internal_memory_trend();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.ResourceUsagePattern.memory_trend");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string cpu_pattern = 2 [json_name = "cpuPattern"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_cpu_pattern().empty()) {
      const ::std::string& _s = this_._internal_cpu_pattern();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.ResourceUsagePattern.cpu_pattern");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // double cache_effectiveness = 3 [json_name = "cacheEffectiveness"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_cache_effectiveness()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_cache_effectiveness(), target);
    }
  }

  // repeated int64 peak_usage_times = 4 [json_name = "peakUsageTimes"];
  {
    int byte_size = this_._impl_._peak_usage_times_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          4, this_._internal_peak_usage_times(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.ResourceUsagePattern)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ResourceUsagePattern::ByteSizeLong(const MessageLite& base) {
  const ResourceUsagePattern& this_ = static_cast<const ResourceUsagePattern&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ResourceUsagePattern::ByteSizeLong() const {
  const ResourceUsagePattern& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.ResourceUsagePattern)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated int64 peak_usage_times = 4 [json_name = "peakUsageTimes"];
    {
      total_size +=
          ::_pbi::WireFormatLite::Int64SizeWithPackedTagSize(
              this_._internal_peak_usage_times(), 1,
              this_._impl_._peak_usage_times_cached_byte_size_);
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string memory_trend = 1 [json_name = "memoryTrend"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_memory_trend().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_memory_trend());
      }
    }
    // string cpu_pattern = 2 [json_name = "cpuPattern"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_cpu_pattern().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_cpu_pattern());
      }
    }
    // double cache_effectiveness = 3 [json_name = "cacheEffectiveness"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_cache_effectiveness()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ResourceUsagePattern::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ResourceUsagePattern*>(&to_msg);
  auto& from = static_cast<const ResourceUsagePattern&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.ResourceUsagePattern)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_peak_usage_times()->MergeFrom(from._internal_peak_usage_times());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_memory_trend().empty()) {
        _this->_internal_set_memory_trend(from._internal_memory_trend());
      } else {
        if (_this->_impl_.memory_trend_.IsDefault()) {
          _this->_internal_set_memory_trend("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_cpu_pattern().empty()) {
        _this->_internal_set_cpu_pattern(from._internal_cpu_pattern());
      } else {
        if (_this->_impl_.cpu_pattern_.IsDefault()) {
          _this->_internal_set_cpu_pattern("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_cache_effectiveness()) != 0) {
        _this->_impl_.cache_effectiveness_ = from._impl_.cache_effectiveness_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResourceUsagePattern::CopyFrom(const ResourceUsagePattern& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.ResourceUsagePattern)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ResourceUsagePattern::InternalSwap(ResourceUsagePattern* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.peak_usage_times_.InternalSwap(&other->_impl_.peak_usage_times_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.memory_trend_, &other->_impl_.memory_trend_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cpu_pattern_, &other->_impl_.cpu_pattern_, arena);
  swap(_impl_.cache_effectiveness_, other->_impl_.cache_effectiveness_);
}

::google::protobuf::Metadata ResourceUsagePattern::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TrendData::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TrendData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TrendData, _impl_._has_bits_);
};

TrendData::TrendData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TrendData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.TrendData)
}
PROTOBUF_NDEBUG_INLINE TrendData::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::TrendData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        data_points_{visibility, arena, from.data_points_},
        trend_name_(arena, from.trend_name_),
        direction_(arena, from.direction_) {}

TrendData::TrendData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TrendData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TrendData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TrendData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.time_period_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.time_period_)
                : nullptr;
  _impl_.strength_ = from._impl_.strength_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.TrendData)
}
PROTOBUF_NDEBUG_INLINE TrendData::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        data_points_{visibility, arena},
        trend_name_(arena),
        direction_(arena) {}

inline void TrendData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_period_),
           0,
           offsetof(Impl_, strength_) -
               offsetof(Impl_, time_period_) +
               sizeof(Impl_::strength_));
}
TrendData::~TrendData() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.TrendData)
  SharedDtor(*this);
}
inline void TrendData::SharedDtor(MessageLite& self) {
  TrendData& this_ = static_cast<TrendData&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.trend_name_.Destroy();
  this_._impl_.direction_.Destroy();
  delete this_._impl_.time_period_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TrendData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TrendData(arena);
}
constexpr auto TrendData::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TrendData, _impl_.data_points_) +
          decltype(TrendData::_impl_.data_points_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(TrendData), alignof(TrendData), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TrendData::PlacementNew_,
                                 sizeof(TrendData),
                                 alignof(TrendData));
  }
}
constexpr auto TrendData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TrendData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TrendData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TrendData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TrendData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TrendData>(), &TrendData::ByteSizeLong,
              &TrendData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TrendData, _impl_._cached_size_),
          false,
      },
      &TrendData::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TrendData_class_data_ =
        TrendData::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TrendData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TrendData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TrendData_class_data_.tc_table);
  return TrendData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 50, 2>
TrendData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TrendData, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TrendData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::TrendData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string trend_name = 1 [json_name = "trendName"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TrendData, _impl_.trend_name_)}},
    // .api.v1alpha1.TableTimeRange time_period = 2 [json_name = "timePeriod"];
    {::_pbi::TcParser::FastMtS1,
     {18, 2, 0, PROTOBUF_FIELD_OFFSET(TrendData, _impl_.time_period_)}},
    // string direction = 3 [json_name = "direction"];
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(TrendData, _impl_.direction_)}},
    // double strength = 4 [json_name = "strength"];
    {::_pbi::TcParser::FastF64S1,
     {33, 3, 0, PROTOBUF_FIELD_OFFSET(TrendData, _impl_.strength_)}},
    // repeated .api.v1alpha1.TrendPoint data_points = 5 [json_name = "dataPoints"];
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 1, PROTOBUF_FIELD_OFFSET(TrendData, _impl_.data_points_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string trend_name = 1 [json_name = "trendName"];
    {PROTOBUF_FIELD_OFFSET(TrendData, _impl_.trend_name_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.TableTimeRange time_period = 2 [json_name = "timePeriod"];
    {PROTOBUF_FIELD_OFFSET(TrendData, _impl_.time_period_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string direction = 3 [json_name = "direction"];
    {PROTOBUF_FIELD_OFFSET(TrendData, _impl_.direction_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double strength = 4 [json_name = "strength"];
    {PROTOBUF_FIELD_OFFSET(TrendData, _impl_.strength_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // repeated .api.v1alpha1.TrendPoint data_points = 5 [json_name = "dataPoints"];
    {PROTOBUF_FIELD_OFFSET(TrendData, _impl_.data_points_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::TableTimeRange>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::TrendPoint>()},
  }},
  {{
    "\26\12\0\11\0\0\0\0"
    "api.v1alpha1.TrendData"
    "trend_name"
    "direction"
  }},
};
PROTOBUF_NOINLINE void TrendData::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.TrendData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_points_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.trend_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.direction_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.time_period_ != nullptr);
      _impl_.time_period_->Clear();
    }
  }
  _impl_.strength_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TrendData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TrendData& this_ = static_cast<const TrendData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TrendData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TrendData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.TrendData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string trend_name = 1 [json_name = "trendName"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_trend_name().empty()) {
      const ::std::string& _s = this_._internal_trend_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TrendData.trend_name");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.TableTimeRange time_period = 2 [json_name = "timePeriod"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.time_period_, this_._impl_.time_period_->GetCachedSize(), target,
        stream);
  }

  // string direction = 3 [json_name = "direction"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    if (!this_._internal_direction().empty()) {
      const ::std::string& _s = this_._internal_direction();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TrendData.direction");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // double strength = 4 [json_name = "strength"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_strength()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          4, this_._internal_strength(), target);
    }
  }

  // repeated .api.v1alpha1.TrendPoint data_points = 5 [json_name = "dataPoints"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_data_points_size());
       i < n; i++) {
    const auto& repfield = this_._internal_data_points().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.TrendData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TrendData::ByteSizeLong(const MessageLite& base) {
  const TrendData& this_ = static_cast<const TrendData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TrendData::ByteSizeLong() const {
  const TrendData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.TrendData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.TrendPoint data_points = 5 [json_name = "dataPoints"];
    {
      total_size += 1UL * this_._internal_data_points_size();
      for (const auto& msg : this_._internal_data_points()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string trend_name = 1 [json_name = "trendName"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_trend_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_trend_name());
      }
    }
    // string direction = 3 [json_name = "direction"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_direction().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_direction());
      }
    }
    // .api.v1alpha1.TableTimeRange time_period = 2 [json_name = "timePeriod"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.time_period_);
    }
    // double strength = 4 [json_name = "strength"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_strength()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TrendData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TrendData*>(&to_msg);
  auto& from = static_cast<const TrendData&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.TrendData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_data_points()->MergeFrom(
      from._internal_data_points());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_trend_name().empty()) {
        _this->_internal_set_trend_name(from._internal_trend_name());
      } else {
        if (_this->_impl_.trend_name_.IsDefault()) {
          _this->_internal_set_trend_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_direction().empty()) {
        _this->_internal_set_direction(from._internal_direction());
      } else {
        if (_this->_impl_.direction_.IsDefault()) {
          _this->_internal_set_direction("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.time_period_ != nullptr);
      if (_this->_impl_.time_period_ == nullptr) {
        _this->_impl_.time_period_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.time_period_);
      } else {
        _this->_impl_.time_period_->MergeFrom(*from._impl_.time_period_);
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_strength()) != 0) {
        _this->_impl_.strength_ = from._impl_.strength_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TrendData::CopyFrom(const TrendData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.TrendData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TrendData::InternalSwap(TrendData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.data_points_.InternalSwap(&other->_impl_.data_points_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.trend_name_, &other->_impl_.trend_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.direction_, &other->_impl_.direction_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TrendData, _impl_.strength_)
      + sizeof(TrendData::_impl_.strength_)
      - PROTOBUF_FIELD_OFFSET(TrendData, _impl_.time_period_)>(
          reinterpret_cast<char*>(&_impl_.time_period_),
          reinterpret_cast<char*>(&other->_impl_.time_period_));
}

::google::protobuf::Metadata TrendData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TrendPoint::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TrendPoint>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TrendPoint, _impl_._has_bits_);
};

TrendPoint::TrendPoint(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TrendPoint_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.TrendPoint)
}
PROTOBUF_NDEBUG_INLINE TrendPoint::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::TrendPoint& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        context_(arena, from.context_) {}

TrendPoint::TrendPoint(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TrendPoint& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TrendPoint_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TrendPoint* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, value_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::value_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.TrendPoint)
}
PROTOBUF_NDEBUG_INLINE TrendPoint::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        context_(arena) {}

inline void TrendPoint::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, value_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::value_));
}
TrendPoint::~TrendPoint() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.TrendPoint)
  SharedDtor(*this);
}
inline void TrendPoint::SharedDtor(MessageLite& self) {
  TrendPoint& this_ = static_cast<TrendPoint&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.context_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TrendPoint::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TrendPoint(arena);
}
constexpr auto TrendPoint::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TrendPoint),
                                            alignof(TrendPoint));
}
constexpr auto TrendPoint::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TrendPoint_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TrendPoint::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TrendPoint>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TrendPoint::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TrendPoint>(), &TrendPoint::ByteSizeLong,
              &TrendPoint::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TrendPoint, _impl_._cached_size_),
          false,
      },
      &TrendPoint::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TrendPoint_class_data_ =
        TrendPoint::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TrendPoint::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TrendPoint_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TrendPoint_class_data_.tc_table);
  return TrendPoint_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 39, 2>
TrendPoint::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TrendPoint, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TrendPoint_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::TrendPoint>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 timestamp = 1 [json_name = "timestamp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TrendPoint, _impl_.timestamp_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(TrendPoint, _impl_.timestamp_)}},
    // double value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastF64S1,
     {17, 2, 0, PROTOBUF_FIELD_OFFSET(TrendPoint, _impl_.value_)}},
    // string context = 3 [json_name = "context"];
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(TrendPoint, _impl_.context_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 timestamp = 1 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(TrendPoint, _impl_.timestamp_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // double value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(TrendPoint, _impl_.value_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // string context = 3 [json_name = "context"];
    {PROTOBUF_FIELD_OFFSET(TrendPoint, _impl_.context_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\0\0\7\0\0\0\0"
    "api.v1alpha1.TrendPoint"
    "context"
  }},
};
PROTOBUF_NOINLINE void TrendPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.TrendPoint)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.context_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x00000006U) != 0) {
    ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.value_) -
        reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.value_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TrendPoint::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TrendPoint& this_ = static_cast<const TrendPoint&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TrendPoint::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TrendPoint& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.TrendPoint)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 timestamp = 1 [json_name = "timestamp"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_timestamp() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_timestamp(), target);
    }
  }

  // double value = 2 [json_name = "value"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_value()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_value(), target);
    }
  }

  // string context = 3 [json_name = "context"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_context().empty()) {
      const ::std::string& _s = this_._internal_context();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TrendPoint.context");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.TrendPoint)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TrendPoint::ByteSizeLong(const MessageLite& base) {
  const TrendPoint& this_ = static_cast<const TrendPoint&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TrendPoint::ByteSizeLong() const {
  const TrendPoint& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.TrendPoint)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string context = 3 [json_name = "context"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_context().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_context());
      }
    }
    // int64 timestamp = 1 [json_name = "timestamp"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_timestamp() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_timestamp());
      }
    }
    // double value = 2 [json_name = "value"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_value()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TrendPoint::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TrendPoint*>(&to_msg);
  auto& from = static_cast<const TrendPoint&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.TrendPoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_context().empty()) {
        _this->_internal_set_context(from._internal_context());
      } else {
        if (_this->_impl_.context_.IsDefault()) {
          _this->_internal_set_context("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_timestamp() != 0) {
        _this->_impl_.timestamp_ = from._impl_.timestamp_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_value()) != 0) {
        _this->_impl_.value_ = from._impl_.value_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TrendPoint::CopyFrom(const TrendPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.TrendPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TrendPoint::InternalSwap(TrendPoint* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.context_, &other->_impl_.context_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TrendPoint, _impl_.value_)
      + sizeof(TrendPoint::_impl_.value_)
      - PROTOBUF_FIELD_OFFSET(TrendPoint, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata TrendPoint::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ExportSelectionTableRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ExportSelectionTableRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ExportSelectionTableRequest, _impl_._has_bits_);
};

ExportSelectionTableRequest::ExportSelectionTableRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ExportSelectionTableRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.ExportSelectionTableRequest)
}
PROTOBUF_NDEBUG_INLINE ExportSelectionTableRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::ExportSelectionTableRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        table_id_(arena, from.table_id_) {}

ExportSelectionTableRequest::ExportSelectionTableRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ExportSelectionTableRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ExportSelectionTableRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ExportSelectionTableRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.export_options_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.export_options_)
                : nullptr;
  _impl_.format_ = from._impl_.format_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.ExportSelectionTableRequest)
}
PROTOBUF_NDEBUG_INLINE ExportSelectionTableRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        table_id_(arena) {}

inline void ExportSelectionTableRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, export_options_),
           0,
           offsetof(Impl_, format_) -
               offsetof(Impl_, export_options_) +
               sizeof(Impl_::format_));
}
ExportSelectionTableRequest::~ExportSelectionTableRequest() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.ExportSelectionTableRequest)
  SharedDtor(*this);
}
inline void ExportSelectionTableRequest::SharedDtor(MessageLite& self) {
  ExportSelectionTableRequest& this_ = static_cast<ExportSelectionTableRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.table_id_.Destroy();
  delete this_._impl_.export_options_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ExportSelectionTableRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ExportSelectionTableRequest(arena);
}
constexpr auto ExportSelectionTableRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ExportSelectionTableRequest),
                                            alignof(ExportSelectionTableRequest));
}
constexpr auto ExportSelectionTableRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ExportSelectionTableRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ExportSelectionTableRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ExportSelectionTableRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ExportSelectionTableRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ExportSelectionTableRequest>(), &ExportSelectionTableRequest::ByteSizeLong,
              &ExportSelectionTableRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ExportSelectionTableRequest, _impl_._cached_size_),
          false,
      },
      &ExportSelectionTableRequest::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ExportSelectionTableRequest_class_data_ =
        ExportSelectionTableRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ExportSelectionTableRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ExportSelectionTableRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ExportSelectionTableRequest_class_data_.tc_table);
  return ExportSelectionTableRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 57, 2>
ExportSelectionTableRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ExportSelectionTableRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ExportSelectionTableRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::ExportSelectionTableRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string table_id = 1 [json_name = "tableId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ExportSelectionTableRequest, _impl_.table_id_)}},
    // .api.v1alpha1.ExportFormat format = 2 [json_name = "format"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ExportSelectionTableRequest, _impl_.format_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(ExportSelectionTableRequest, _impl_.format_)}},
    // .api.v1alpha1.ExportOptions export_options = 3 [json_name = "exportOptions"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(ExportSelectionTableRequest, _impl_.export_options_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string table_id = 1 [json_name = "tableId"];
    {PROTOBUF_FIELD_OFFSET(ExportSelectionTableRequest, _impl_.table_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.ExportFormat format = 2 [json_name = "format"];
    {PROTOBUF_FIELD_OFFSET(ExportSelectionTableRequest, _impl_.format_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .api.v1alpha1.ExportOptions export_options = 3 [json_name = "exportOptions"];
    {PROTOBUF_FIELD_OFFSET(ExportSelectionTableRequest, _impl_.export_options_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::ExportOptions>()},
  }},
  {{
    "\50\10\0\0\0\0\0\0"
    "api.v1alpha1.ExportSelectionTableRequest"
    "table_id"
  }},
};
PROTOBUF_NOINLINE void ExportSelectionTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.ExportSelectionTableRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.table_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.export_options_ != nullptr);
      _impl_.export_options_->Clear();
    }
  }
  _impl_.format_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ExportSelectionTableRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ExportSelectionTableRequest& this_ = static_cast<const ExportSelectionTableRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ExportSelectionTableRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ExportSelectionTableRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.ExportSelectionTableRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string table_id = 1 [json_name = "tableId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_table_id().empty()) {
      const ::std::string& _s = this_._internal_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.ExportSelectionTableRequest.table_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // .api.v1alpha1.ExportFormat format = 2 [json_name = "format"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_format() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_format(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.ExportOptions export_options = 3 [json_name = "exportOptions"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.export_options_, this_._impl_.export_options_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.ExportSelectionTableRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ExportSelectionTableRequest::ByteSizeLong(const MessageLite& base) {
  const ExportSelectionTableRequest& this_ = static_cast<const ExportSelectionTableRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ExportSelectionTableRequest::ByteSizeLong() const {
  const ExportSelectionTableRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.ExportSelectionTableRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string table_id = 1 [json_name = "tableId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_table_id());
      }
    }
    // .api.v1alpha1.ExportOptions export_options = 3 [json_name = "exportOptions"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.export_options_);
    }
    // .api.v1alpha1.ExportFormat format = 2 [json_name = "format"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_format() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_format());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ExportSelectionTableRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExportSelectionTableRequest*>(&to_msg);
  auto& from = static_cast<const ExportSelectionTableRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.ExportSelectionTableRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_table_id().empty()) {
        _this->_internal_set_table_id(from._internal_table_id());
      } else {
        if (_this->_impl_.table_id_.IsDefault()) {
          _this->_internal_set_table_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.export_options_ != nullptr);
      if (_this->_impl_.export_options_ == nullptr) {
        _this->_impl_.export_options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.export_options_);
      } else {
        _this->_impl_.export_options_->MergeFrom(*from._impl_.export_options_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_format() != 0) {
        _this->_impl_.format_ = from._impl_.format_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExportSelectionTableRequest::CopyFrom(const ExportSelectionTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.ExportSelectionTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExportSelectionTableRequest::InternalSwap(ExportSelectionTableRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.table_id_, &other->_impl_.table_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ExportSelectionTableRequest, _impl_.format_)
      + sizeof(ExportSelectionTableRequest::_impl_.format_)
      - PROTOBUF_FIELD_OFFSET(ExportSelectionTableRequest, _impl_.export_options_)>(
          reinterpret_cast<char*>(&_impl_.export_options_),
          reinterpret_cast<char*>(&other->_impl_.export_options_));
}

::google::protobuf::Metadata ExportSelectionTableRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ExportOptions::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ExportOptions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ExportOptions, _impl_._has_bits_);
};

ExportOptions::ExportOptions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ExportOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.ExportOptions)
}
PROTOBUF_NDEBUG_INLINE ExportOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::ExportOptions& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        compression_(arena, from.compression_),
        encoding_(arena, from.encoding_) {}

ExportOptions::ExportOptions(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ExportOptions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ExportOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ExportOptions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, include_metadata_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, include_metadata_),
           offsetof(Impl_, include_usage_history_) -
               offsetof(Impl_, include_metadata_) +
               sizeof(Impl_::include_usage_history_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.ExportOptions)
}
PROTOBUF_NDEBUG_INLINE ExportOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        compression_(arena),
        encoding_(arena) {}

inline void ExportOptions::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, include_metadata_),
           0,
           offsetof(Impl_, include_usage_history_) -
               offsetof(Impl_, include_metadata_) +
               sizeof(Impl_::include_usage_history_));
}
ExportOptions::~ExportOptions() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.ExportOptions)
  SharedDtor(*this);
}
inline void ExportOptions::SharedDtor(MessageLite& self) {
  ExportOptions& this_ = static_cast<ExportOptions&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.compression_.Destroy();
  this_._impl_.encoding_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ExportOptions::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ExportOptions(arena);
}
constexpr auto ExportOptions::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ExportOptions),
                                            alignof(ExportOptions));
}
constexpr auto ExportOptions::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ExportOptions_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ExportOptions::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ExportOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ExportOptions::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ExportOptions>(), &ExportOptions::ByteSizeLong,
              &ExportOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ExportOptions, _impl_._cached_size_),
          false,
      },
      &ExportOptions::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ExportOptions_class_data_ =
        ExportOptions::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ExportOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ExportOptions_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ExportOptions_class_data_.tc_table);
  return ExportOptions_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 54, 2>
ExportOptions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ExportOptions, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ExportOptions_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::ExportOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool include_metadata = 1 [json_name = "includeMetadata"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ExportOptions, _impl_.include_metadata_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(ExportOptions, _impl_.include_metadata_)}},
    // bool include_statistics = 2 [json_name = "includeStatistics"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ExportOptions, _impl_.include_statistics_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(ExportOptions, _impl_.include_statistics_)}},
    // bool include_usage_history = 3 [json_name = "includeUsageHistory"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ExportOptions, _impl_.include_usage_history_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(ExportOptions, _impl_.include_usage_history_)}},
    // string compression = 4 [json_name = "compression"];
    {::_pbi::TcParser::FastUS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(ExportOptions, _impl_.compression_)}},
    // string encoding = 5 [json_name = "encoding"];
    {::_pbi::TcParser::FastUS1,
     {42, 1, 0, PROTOBUF_FIELD_OFFSET(ExportOptions, _impl_.encoding_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bool include_metadata = 1 [json_name = "includeMetadata"];
    {PROTOBUF_FIELD_OFFSET(ExportOptions, _impl_.include_metadata_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool include_statistics = 2 [json_name = "includeStatistics"];
    {PROTOBUF_FIELD_OFFSET(ExportOptions, _impl_.include_statistics_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool include_usage_history = 3 [json_name = "includeUsageHistory"];
    {PROTOBUF_FIELD_OFFSET(ExportOptions, _impl_.include_usage_history_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string compression = 4 [json_name = "compression"];
    {PROTOBUF_FIELD_OFFSET(ExportOptions, _impl_.compression_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string encoding = 5 [json_name = "encoding"];
    {PROTOBUF_FIELD_OFFSET(ExportOptions, _impl_.encoding_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\0\0\0\13\10\0\0"
    "api.v1alpha1.ExportOptions"
    "compression"
    "encoding"
  }},
};
PROTOBUF_NOINLINE void ExportOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.ExportOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.compression_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.encoding_.ClearNonDefaultToEmpty();
    }
  }
  ::memset(&_impl_.include_metadata_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.include_usage_history_) -
      reinterpret_cast<char*>(&_impl_.include_metadata_)) + sizeof(_impl_.include_usage_history_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ExportOptions::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ExportOptions& this_ = static_cast<const ExportOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ExportOptions::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ExportOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.ExportOptions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool include_metadata = 1 [json_name = "includeMetadata"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_include_metadata() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_include_metadata(), target);
    }
  }

  // bool include_statistics = 2 [json_name = "includeStatistics"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_include_statistics() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_include_statistics(), target);
    }
  }

  // bool include_usage_history = 3 [json_name = "includeUsageHistory"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_include_usage_history() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_include_usage_history(), target);
    }
  }

  // string compression = 4 [json_name = "compression"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_compression().empty()) {
      const ::std::string& _s = this_._internal_compression();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.ExportOptions.compression");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // string encoding = 5 [json_name = "encoding"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_encoding().empty()) {
      const ::std::string& _s = this_._internal_encoding();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.ExportOptions.encoding");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.ExportOptions)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ExportOptions::ByteSizeLong(const MessageLite& base) {
  const ExportOptions& this_ = static_cast<const ExportOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ExportOptions::ByteSizeLong() const {
  const ExportOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.ExportOptions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // string compression = 4 [json_name = "compression"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_compression().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_compression());
      }
    }
    // string encoding = 5 [json_name = "encoding"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_encoding().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_encoding());
      }
    }
    // bool include_metadata = 1 [json_name = "includeMetadata"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_include_metadata() != 0) {
        total_size += 2;
      }
    }
    // bool include_statistics = 2 [json_name = "includeStatistics"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_include_statistics() != 0) {
        total_size += 2;
      }
    }
    // bool include_usage_history = 3 [json_name = "includeUsageHistory"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_include_usage_history() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ExportOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExportOptions*>(&to_msg);
  auto& from = static_cast<const ExportOptions&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.ExportOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_compression().empty()) {
        _this->_internal_set_compression(from._internal_compression());
      } else {
        if (_this->_impl_.compression_.IsDefault()) {
          _this->_internal_set_compression("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_encoding().empty()) {
        _this->_internal_set_encoding(from._internal_encoding());
      } else {
        if (_this->_impl_.encoding_.IsDefault()) {
          _this->_internal_set_encoding("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_include_metadata() != 0) {
        _this->_impl_.include_metadata_ = from._impl_.include_metadata_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_include_statistics() != 0) {
        _this->_impl_.include_statistics_ = from._impl_.include_statistics_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_include_usage_history() != 0) {
        _this->_impl_.include_usage_history_ = from._impl_.include_usage_history_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExportOptions::CopyFrom(const ExportOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.ExportOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExportOptions::InternalSwap(ExportOptions* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.compression_, &other->_impl_.compression_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.encoding_, &other->_impl_.encoding_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ExportOptions, _impl_.include_usage_history_)
      + sizeof(ExportOptions::_impl_.include_usage_history_)
      - PROTOBUF_FIELD_OFFSET(ExportOptions, _impl_.include_metadata_)>(
          reinterpret_cast<char*>(&_impl_.include_metadata_),
          reinterpret_cast<char*>(&other->_impl_.include_metadata_));
}

::google::protobuf::Metadata ExportOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ExportSelectionTableResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ExportSelectionTableResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ExportSelectionTableResponse, _impl_._has_bits_);
};

ExportSelectionTableResponse::ExportSelectionTableResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ExportSelectionTableResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.ExportSelectionTableResponse)
}
PROTOBUF_NDEBUG_INLINE ExportSelectionTableResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::ExportSelectionTableResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        exported_data_(arena, from.exported_data_) {}

ExportSelectionTableResponse::ExportSelectionTableResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ExportSelectionTableResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ExportSelectionTableResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ExportSelectionTableResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.export_metadata_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.export_metadata_)
                : nullptr;
  _impl_.format_ = from._impl_.format_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.ExportSelectionTableResponse)
}
PROTOBUF_NDEBUG_INLINE ExportSelectionTableResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        exported_data_(arena) {}

inline void ExportSelectionTableResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, export_metadata_),
           0,
           offsetof(Impl_, format_) -
               offsetof(Impl_, export_metadata_) +
               sizeof(Impl_::format_));
}
ExportSelectionTableResponse::~ExportSelectionTableResponse() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.ExportSelectionTableResponse)
  SharedDtor(*this);
}
inline void ExportSelectionTableResponse::SharedDtor(MessageLite& self) {
  ExportSelectionTableResponse& this_ = static_cast<ExportSelectionTableResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.exported_data_.Destroy();
  delete this_._impl_.export_metadata_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ExportSelectionTableResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ExportSelectionTableResponse(arena);
}
constexpr auto ExportSelectionTableResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ExportSelectionTableResponse),
                                            alignof(ExportSelectionTableResponse));
}
constexpr auto ExportSelectionTableResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ExportSelectionTableResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ExportSelectionTableResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ExportSelectionTableResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ExportSelectionTableResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ExportSelectionTableResponse>(), &ExportSelectionTableResponse::ByteSizeLong,
              &ExportSelectionTableResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ExportSelectionTableResponse, _impl_._cached_size_),
          false,
      },
      &ExportSelectionTableResponse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ExportSelectionTableResponse_class_data_ =
        ExportSelectionTableResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ExportSelectionTableResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ExportSelectionTableResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ExportSelectionTableResponse_class_data_.tc_table);
  return ExportSelectionTableResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2>
ExportSelectionTableResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ExportSelectionTableResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ExportSelectionTableResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::ExportSelectionTableResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes exported_data = 1 [json_name = "exportedData"];
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ExportSelectionTableResponse, _impl_.exported_data_)}},
    // .api.v1alpha1.ExportFormat format = 2 [json_name = "format"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ExportSelectionTableResponse, _impl_.format_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(ExportSelectionTableResponse, _impl_.format_)}},
    // .api.v1alpha1.ExportMetadata export_metadata = 3 [json_name = "exportMetadata"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(ExportSelectionTableResponse, _impl_.export_metadata_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes exported_data = 1 [json_name = "exportedData"];
    {PROTOBUF_FIELD_OFFSET(ExportSelectionTableResponse, _impl_.exported_data_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // .api.v1alpha1.ExportFormat format = 2 [json_name = "format"];
    {PROTOBUF_FIELD_OFFSET(ExportSelectionTableResponse, _impl_.format_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .api.v1alpha1.ExportMetadata export_metadata = 3 [json_name = "exportMetadata"];
    {PROTOBUF_FIELD_OFFSET(ExportSelectionTableResponse, _impl_.export_metadata_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::ExportMetadata>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ExportSelectionTableResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.ExportSelectionTableResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.exported_data_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.export_metadata_ != nullptr);
      _impl_.export_metadata_->Clear();
    }
  }
  _impl_.format_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ExportSelectionTableResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ExportSelectionTableResponse& this_ = static_cast<const ExportSelectionTableResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ExportSelectionTableResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ExportSelectionTableResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.ExportSelectionTableResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes exported_data = 1 [json_name = "exportedData"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_exported_data().empty()) {
      const ::std::string& _s = this_._internal_exported_data();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
    }
  }

  // .api.v1alpha1.ExportFormat format = 2 [json_name = "format"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_format() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_format(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.ExportMetadata export_metadata = 3 [json_name = "exportMetadata"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.export_metadata_, this_._impl_.export_metadata_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.ExportSelectionTableResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ExportSelectionTableResponse::ByteSizeLong(const MessageLite& base) {
  const ExportSelectionTableResponse& this_ = static_cast<const ExportSelectionTableResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ExportSelectionTableResponse::ByteSizeLong() const {
  const ExportSelectionTableResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.ExportSelectionTableResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // bytes exported_data = 1 [json_name = "exportedData"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_exported_data().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_exported_data());
      }
    }
    // .api.v1alpha1.ExportMetadata export_metadata = 3 [json_name = "exportMetadata"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.export_metadata_);
    }
    // .api.v1alpha1.ExportFormat format = 2 [json_name = "format"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_format() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_format());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ExportSelectionTableResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExportSelectionTableResponse*>(&to_msg);
  auto& from = static_cast<const ExportSelectionTableResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.ExportSelectionTableResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_exported_data().empty()) {
        _this->_internal_set_exported_data(from._internal_exported_data());
      } else {
        if (_this->_impl_.exported_data_.IsDefault()) {
          _this->_internal_set_exported_data("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.export_metadata_ != nullptr);
      if (_this->_impl_.export_metadata_ == nullptr) {
        _this->_impl_.export_metadata_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.export_metadata_);
      } else {
        _this->_impl_.export_metadata_->MergeFrom(*from._impl_.export_metadata_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_format() != 0) {
        _this->_impl_.format_ = from._impl_.format_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExportSelectionTableResponse::CopyFrom(const ExportSelectionTableResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.ExportSelectionTableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExportSelectionTableResponse::InternalSwap(ExportSelectionTableResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.exported_data_, &other->_impl_.exported_data_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ExportSelectionTableResponse, _impl_.format_)
      + sizeof(ExportSelectionTableResponse::_impl_.format_)
      - PROTOBUF_FIELD_OFFSET(ExportSelectionTableResponse, _impl_.export_metadata_)>(
          reinterpret_cast<char*>(&_impl_.export_metadata_),
          reinterpret_cast<char*>(&other->_impl_.export_metadata_));
}

::google::protobuf::Metadata ExportSelectionTableResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ExportMetadata::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ExportMetadata>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ExportMetadata, _impl_._has_bits_);
};

ExportMetadata::ExportMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ExportMetadata_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.ExportMetadata)
}
PROTOBUF_NDEBUG_INLINE ExportMetadata::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::ExportMetadata& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        checksum_(arena, from.checksum_),
        export_version_(arena, from.export_version_) {}

ExportMetadata::ExportMetadata(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ExportMetadata& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ExportMetadata_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ExportMetadata* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, exported_at_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, exported_at_),
           offsetof(Impl_, compression_ratio_) -
               offsetof(Impl_, exported_at_) +
               sizeof(Impl_::compression_ratio_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.ExportMetadata)
}
PROTOBUF_NDEBUG_INLINE ExportMetadata::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        checksum_(arena),
        export_version_(arena) {}

inline void ExportMetadata::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, exported_at_),
           0,
           offsetof(Impl_, compression_ratio_) -
               offsetof(Impl_, exported_at_) +
               sizeof(Impl_::compression_ratio_));
}
ExportMetadata::~ExportMetadata() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.ExportMetadata)
  SharedDtor(*this);
}
inline void ExportMetadata::SharedDtor(MessageLite& self) {
  ExportMetadata& this_ = static_cast<ExportMetadata&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.checksum_.Destroy();
  this_._impl_.export_version_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ExportMetadata::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ExportMetadata(arena);
}
constexpr auto ExportMetadata::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ExportMetadata),
                                            alignof(ExportMetadata));
}
constexpr auto ExportMetadata::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ExportMetadata_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ExportMetadata::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ExportMetadata>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ExportMetadata::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ExportMetadata>(), &ExportMetadata::ByteSizeLong,
              &ExportMetadata::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ExportMetadata, _impl_._cached_size_),
          false,
      },
      &ExportMetadata::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ExportMetadata_class_data_ =
        ExportMetadata::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ExportMetadata::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ExportMetadata_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ExportMetadata_class_data_.tc_table);
  return ExportMetadata_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 58, 2>
ExportMetadata::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ExportMetadata, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ExportMetadata_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::ExportMetadata>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 exported_at = 1 [json_name = "exportedAt"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ExportMetadata, _impl_.exported_at_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(ExportMetadata, _impl_.exported_at_)}},
    // int64 size_bytes = 2 [json_name = "sizeBytes"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ExportMetadata, _impl_.size_bytes_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(ExportMetadata, _impl_.size_bytes_)}},
    // double compression_ratio = 3 [json_name = "compressionRatio"];
    {::_pbi::TcParser::FastF64S1,
     {25, 4, 0, PROTOBUF_FIELD_OFFSET(ExportMetadata, _impl_.compression_ratio_)}},
    // string checksum = 4 [json_name = "checksum"];
    {::_pbi::TcParser::FastUS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(ExportMetadata, _impl_.checksum_)}},
    // string export_version = 5 [json_name = "exportVersion"];
    {::_pbi::TcParser::FastUS1,
     {42, 1, 0, PROTOBUF_FIELD_OFFSET(ExportMetadata, _impl_.export_version_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 exported_at = 1 [json_name = "exportedAt"];
    {PROTOBUF_FIELD_OFFSET(ExportMetadata, _impl_.exported_at_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 size_bytes = 2 [json_name = "sizeBytes"];
    {PROTOBUF_FIELD_OFFSET(ExportMetadata, _impl_.size_bytes_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // double compression_ratio = 3 [json_name = "compressionRatio"];
    {PROTOBUF_FIELD_OFFSET(ExportMetadata, _impl_.compression_ratio_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // string checksum = 4 [json_name = "checksum"];
    {PROTOBUF_FIELD_OFFSET(ExportMetadata, _impl_.checksum_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string export_version = 5 [json_name = "exportVersion"];
    {PROTOBUF_FIELD_OFFSET(ExportMetadata, _impl_.export_version_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\0\0\0\10\16\0\0"
    "api.v1alpha1.ExportMetadata"
    "checksum"
    "export_version"
  }},
};
PROTOBUF_NOINLINE void ExportMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.ExportMetadata)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.checksum_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.export_version_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000001cU) != 0) {
    ::memset(&_impl_.exported_at_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.compression_ratio_) -
        reinterpret_cast<char*>(&_impl_.exported_at_)) + sizeof(_impl_.compression_ratio_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ExportMetadata::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ExportMetadata& this_ = static_cast<const ExportMetadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ExportMetadata::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ExportMetadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.ExportMetadata)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 exported_at = 1 [json_name = "exportedAt"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_exported_at() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_exported_at(), target);
    }
  }

  // int64 size_bytes = 2 [json_name = "sizeBytes"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_size_bytes() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
              stream, this_._internal_size_bytes(), target);
    }
  }

  // double compression_ratio = 3 [json_name = "compressionRatio"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_compression_ratio()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_compression_ratio(), target);
    }
  }

  // string checksum = 4 [json_name = "checksum"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_checksum().empty()) {
      const ::std::string& _s = this_._internal_checksum();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.ExportMetadata.checksum");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // string export_version = 5 [json_name = "exportVersion"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_export_version().empty()) {
      const ::std::string& _s = this_._internal_export_version();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.ExportMetadata.export_version");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.ExportMetadata)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ExportMetadata::ByteSizeLong(const MessageLite& base) {
  const ExportMetadata& this_ = static_cast<const ExportMetadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ExportMetadata::ByteSizeLong() const {
  const ExportMetadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.ExportMetadata)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // string checksum = 4 [json_name = "checksum"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_checksum().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_checksum());
      }
    }
    // string export_version = 5 [json_name = "exportVersion"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_export_version().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_export_version());
      }
    }
    // int64 exported_at = 1 [json_name = "exportedAt"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_exported_at() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_exported_at());
      }
    }
    // int64 size_bytes = 2 [json_name = "sizeBytes"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_size_bytes() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_size_bytes());
      }
    }
    // double compression_ratio = 3 [json_name = "compressionRatio"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_compression_ratio()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ExportMetadata::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExportMetadata*>(&to_msg);
  auto& from = static_cast<const ExportMetadata&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.ExportMetadata)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_checksum().empty()) {
        _this->_internal_set_checksum(from._internal_checksum());
      } else {
        if (_this->_impl_.checksum_.IsDefault()) {
          _this->_internal_set_checksum("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_export_version().empty()) {
        _this->_internal_set_export_version(from._internal_export_version());
      } else {
        if (_this->_impl_.export_version_.IsDefault()) {
          _this->_internal_set_export_version("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_exported_at() != 0) {
        _this->_impl_.exported_at_ = from._impl_.exported_at_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_size_bytes() != 0) {
        _this->_impl_.size_bytes_ = from._impl_.size_bytes_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_compression_ratio()) != 0) {
        _this->_impl_.compression_ratio_ = from._impl_.compression_ratio_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExportMetadata::CopyFrom(const ExportMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.ExportMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExportMetadata::InternalSwap(ExportMetadata* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.checksum_, &other->_impl_.checksum_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.export_version_, &other->_impl_.export_version_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ExportMetadata, _impl_.compression_ratio_)
      + sizeof(ExportMetadata::_impl_.compression_ratio_)
      - PROTOBUF_FIELD_OFFSET(ExportMetadata, _impl_.exported_at_)>(
          reinterpret_cast<char*>(&_impl_.exported_at_),
          reinterpret_cast<char*>(&other->_impl_.exported_at_));
}

::google::protobuf::Metadata ExportMetadata::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ImportSelectionTableRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ImportSelectionTableRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ImportSelectionTableRequest, _impl_._has_bits_);
};

ImportSelectionTableRequest::ImportSelectionTableRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ImportSelectionTableRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.ImportSelectionTableRequest)
}
PROTOBUF_NDEBUG_INLINE ImportSelectionTableRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::ImportSelectionTableRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        import_data_(arena, from.import_data_) {}

ImportSelectionTableRequest::ImportSelectionTableRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ImportSelectionTableRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ImportSelectionTableRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ImportSelectionTableRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.import_options_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.import_options_)
                : nullptr;
  _impl_.format_ = from._impl_.format_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.ImportSelectionTableRequest)
}
PROTOBUF_NDEBUG_INLINE ImportSelectionTableRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        import_data_(arena) {}

inline void ImportSelectionTableRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, import_options_),
           0,
           offsetof(Impl_, format_) -
               offsetof(Impl_, import_options_) +
               sizeof(Impl_::format_));
}
ImportSelectionTableRequest::~ImportSelectionTableRequest() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.ImportSelectionTableRequest)
  SharedDtor(*this);
}
inline void ImportSelectionTableRequest::SharedDtor(MessageLite& self) {
  ImportSelectionTableRequest& this_ = static_cast<ImportSelectionTableRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.import_data_.Destroy();
  delete this_._impl_.import_options_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ImportSelectionTableRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ImportSelectionTableRequest(arena);
}
constexpr auto ImportSelectionTableRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ImportSelectionTableRequest),
                                            alignof(ImportSelectionTableRequest));
}
constexpr auto ImportSelectionTableRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ImportSelectionTableRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ImportSelectionTableRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ImportSelectionTableRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ImportSelectionTableRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ImportSelectionTableRequest>(), &ImportSelectionTableRequest::ByteSizeLong,
              &ImportSelectionTableRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ImportSelectionTableRequest, _impl_._cached_size_),
          false,
      },
      &ImportSelectionTableRequest::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ImportSelectionTableRequest_class_data_ =
        ImportSelectionTableRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ImportSelectionTableRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ImportSelectionTableRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ImportSelectionTableRequest_class_data_.tc_table);
  return ImportSelectionTableRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2>
ImportSelectionTableRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ImportSelectionTableRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ImportSelectionTableRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::ImportSelectionTableRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes import_data = 1 [json_name = "importData"];
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ImportSelectionTableRequest, _impl_.import_data_)}},
    // .api.v1alpha1.ExportFormat format = 2 [json_name = "format"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ImportSelectionTableRequest, _impl_.format_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(ImportSelectionTableRequest, _impl_.format_)}},
    // .api.v1alpha1.ImportOptions import_options = 3 [json_name = "importOptions"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(ImportSelectionTableRequest, _impl_.import_options_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes import_data = 1 [json_name = "importData"];
    {PROTOBUF_FIELD_OFFSET(ImportSelectionTableRequest, _impl_.import_data_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // .api.v1alpha1.ExportFormat format = 2 [json_name = "format"];
    {PROTOBUF_FIELD_OFFSET(ImportSelectionTableRequest, _impl_.format_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .api.v1alpha1.ImportOptions import_options = 3 [json_name = "importOptions"];
    {PROTOBUF_FIELD_OFFSET(ImportSelectionTableRequest, _impl_.import_options_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::ImportOptions>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ImportSelectionTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.ImportSelectionTableRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.import_data_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.import_options_ != nullptr);
      _impl_.import_options_->Clear();
    }
  }
  _impl_.format_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ImportSelectionTableRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ImportSelectionTableRequest& this_ = static_cast<const ImportSelectionTableRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ImportSelectionTableRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ImportSelectionTableRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.ImportSelectionTableRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes import_data = 1 [json_name = "importData"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_import_data().empty()) {
      const ::std::string& _s = this_._internal_import_data();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
    }
  }

  // .api.v1alpha1.ExportFormat format = 2 [json_name = "format"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_format() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_format(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.ImportOptions import_options = 3 [json_name = "importOptions"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.import_options_, this_._impl_.import_options_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.ImportSelectionTableRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ImportSelectionTableRequest::ByteSizeLong(const MessageLite& base) {
  const ImportSelectionTableRequest& this_ = static_cast<const ImportSelectionTableRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ImportSelectionTableRequest::ByteSizeLong() const {
  const ImportSelectionTableRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.ImportSelectionTableRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // bytes import_data = 1 [json_name = "importData"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_import_data().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_import_data());
      }
    }
    // .api.v1alpha1.ImportOptions import_options = 3 [json_name = "importOptions"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.import_options_);
    }
    // .api.v1alpha1.ExportFormat format = 2 [json_name = "format"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_format() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_format());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ImportSelectionTableRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ImportSelectionTableRequest*>(&to_msg);
  auto& from = static_cast<const ImportSelectionTableRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.ImportSelectionTableRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_import_data().empty()) {
        _this->_internal_set_import_data(from._internal_import_data());
      } else {
        if (_this->_impl_.import_data_.IsDefault()) {
          _this->_internal_set_import_data("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.import_options_ != nullptr);
      if (_this->_impl_.import_options_ == nullptr) {
        _this->_impl_.import_options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.import_options_);
      } else {
        _this->_impl_.import_options_->MergeFrom(*from._impl_.import_options_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_format() != 0) {
        _this->_impl_.format_ = from._impl_.format_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ImportSelectionTableRequest::CopyFrom(const ImportSelectionTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.ImportSelectionTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ImportSelectionTableRequest::InternalSwap(ImportSelectionTableRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.import_data_, &other->_impl_.import_data_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImportSelectionTableRequest, _impl_.format_)
      + sizeof(ImportSelectionTableRequest::_impl_.format_)
      - PROTOBUF_FIELD_OFFSET(ImportSelectionTableRequest, _impl_.import_options_)>(
          reinterpret_cast<char*>(&_impl_.import_options_),
          reinterpret_cast<char*>(&other->_impl_.import_options_));
}

::google::protobuf::Metadata ImportSelectionTableRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ImportOptions::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ImportOptions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ImportOptions, _impl_._has_bits_);
};

ImportOptions::ImportOptions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ImportOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.ImportOptions)
}
PROTOBUF_NDEBUG_INLINE ImportOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::ImportOptions& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        source_description_(arena, from.source_description_) {}

ImportOptions::ImportOptions(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ImportOptions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ImportOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ImportOptions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, validate_during_import_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, validate_during_import_),
           offsetof(Impl_, update_metadata_) -
               offsetof(Impl_, validate_during_import_) +
               sizeof(Impl_::update_metadata_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.ImportOptions)
}
PROTOBUF_NDEBUG_INLINE ImportOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        source_description_(arena) {}

inline void ImportOptions::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, validate_during_import_),
           0,
           offsetof(Impl_, update_metadata_) -
               offsetof(Impl_, validate_during_import_) +
               sizeof(Impl_::update_metadata_));
}
ImportOptions::~ImportOptions() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.ImportOptions)
  SharedDtor(*this);
}
inline void ImportOptions::SharedDtor(MessageLite& self) {
  ImportOptions& this_ = static_cast<ImportOptions&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.source_description_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ImportOptions::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ImportOptions(arena);
}
constexpr auto ImportOptions::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ImportOptions),
                                            alignof(ImportOptions));
}
constexpr auto ImportOptions::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ImportOptions_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ImportOptions::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ImportOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ImportOptions::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ImportOptions>(), &ImportOptions::ByteSizeLong,
              &ImportOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ImportOptions, _impl_._cached_size_),
          false,
      },
      &ImportOptions::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ImportOptions_class_data_ =
        ImportOptions::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ImportOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ImportOptions_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ImportOptions_class_data_.tc_table);
  return ImportOptions_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 53, 2>
ImportOptions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ImportOptions, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ImportOptions_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::ImportOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool validate_during_import = 1 [json_name = "validateDuringImport"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ImportOptions, _impl_.validate_during_import_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(ImportOptions, _impl_.validate_during_import_)}},
    // bool overwrite_existing = 2 [json_name = "overwriteExisting"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ImportOptions, _impl_.overwrite_existing_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(ImportOptions, _impl_.overwrite_existing_)}},
    // bool preserve_ids = 3 [json_name = "preserveIds"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ImportOptions, _impl_.preserve_ids_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(ImportOptions, _impl_.preserve_ids_)}},
    // bool update_metadata = 4 [json_name = "updateMetadata"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ImportOptions, _impl_.update_metadata_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(ImportOptions, _impl_.update_metadata_)}},
    // string source_description = 5 [json_name = "sourceDescription"];
    {::_pbi::TcParser::FastUS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(ImportOptions, _impl_.source_description_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bool validate_during_import = 1 [json_name = "validateDuringImport"];
    {PROTOBUF_FIELD_OFFSET(ImportOptions, _impl_.validate_during_import_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool overwrite_existing = 2 [json_name = "overwriteExisting"];
    {PROTOBUF_FIELD_OFFSET(ImportOptions, _impl_.overwrite_existing_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool preserve_ids = 3 [json_name = "preserveIds"];
    {PROTOBUF_FIELD_OFFSET(ImportOptions, _impl_.preserve_ids_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool update_metadata = 4 [json_name = "updateMetadata"];
    {PROTOBUF_FIELD_OFFSET(ImportOptions, _impl_.update_metadata_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string source_description = 5 [json_name = "sourceDescription"];
    {PROTOBUF_FIELD_OFFSET(ImportOptions, _impl_.source_description_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\0\0\0\0\22\0\0"
    "api.v1alpha1.ImportOptions"
    "source_description"
  }},
};
PROTOBUF_NOINLINE void ImportOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.ImportOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.source_description_.ClearNonDefaultToEmpty();
  }
  ::memset(&_impl_.validate_during_import_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.update_metadata_) -
      reinterpret_cast<char*>(&_impl_.validate_during_import_)) + sizeof(_impl_.update_metadata_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ImportOptions::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ImportOptions& this_ = static_cast<const ImportOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ImportOptions::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ImportOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.ImportOptions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool validate_during_import = 1 [json_name = "validateDuringImport"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_validate_during_import() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_validate_during_import(), target);
    }
  }

  // bool overwrite_existing = 2 [json_name = "overwriteExisting"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_overwrite_existing() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_overwrite_existing(), target);
    }
  }

  // bool preserve_ids = 3 [json_name = "preserveIds"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_preserve_ids() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_preserve_ids(), target);
    }
  }

  // bool update_metadata = 4 [json_name = "updateMetadata"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_update_metadata() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_update_metadata(), target);
    }
  }

  // string source_description = 5 [json_name = "sourceDescription"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_source_description().empty()) {
      const ::std::string& _s = this_._internal_source_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.ImportOptions.source_description");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.ImportOptions)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ImportOptions::ByteSizeLong(const MessageLite& base) {
  const ImportOptions& this_ = static_cast<const ImportOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ImportOptions::ByteSizeLong() const {
  const ImportOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.ImportOptions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // string source_description = 5 [json_name = "sourceDescription"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_source_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_source_description());
      }
    }
    // bool validate_during_import = 1 [json_name = "validateDuringImport"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_validate_during_import() != 0) {
        total_size += 2;
      }
    }
    // bool overwrite_existing = 2 [json_name = "overwriteExisting"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_overwrite_existing() != 0) {
        total_size += 2;
      }
    }
    // bool preserve_ids = 3 [json_name = "preserveIds"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_preserve_ids() != 0) {
        total_size += 2;
      }
    }
    // bool update_metadata = 4 [json_name = "updateMetadata"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_update_metadata() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ImportOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ImportOptions*>(&to_msg);
  auto& from = static_cast<const ImportOptions&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.ImportOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_source_description().empty()) {
        _this->_internal_set_source_description(from._internal_source_description());
      } else {
        if (_this->_impl_.source_description_.IsDefault()) {
          _this->_internal_set_source_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_validate_during_import() != 0) {
        _this->_impl_.validate_during_import_ = from._impl_.validate_during_import_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_overwrite_existing() != 0) {
        _this->_impl_.overwrite_existing_ = from._impl_.overwrite_existing_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_preserve_ids() != 0) {
        _this->_impl_.preserve_ids_ = from._impl_.preserve_ids_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_update_metadata() != 0) {
        _this->_impl_.update_metadata_ = from._impl_.update_metadata_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ImportOptions::CopyFrom(const ImportOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.ImportOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ImportOptions::InternalSwap(ImportOptions* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_description_, &other->_impl_.source_description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImportOptions, _impl_.update_metadata_)
      + sizeof(ImportOptions::_impl_.update_metadata_)
      - PROTOBUF_FIELD_OFFSET(ImportOptions, _impl_.validate_during_import_)>(
          reinterpret_cast<char*>(&_impl_.validate_during_import_),
          reinterpret_cast<char*>(&other->_impl_.validate_during_import_));
}

::google::protobuf::Metadata ImportOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ImportSelectionTableResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ImportSelectionTableResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ImportSelectionTableResponse, _impl_._has_bits_);
};

ImportSelectionTableResponse::ImportSelectionTableResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ImportSelectionTableResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.ImportSelectionTableResponse)
}
PROTOBUF_NDEBUG_INLINE ImportSelectionTableResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::ImportSelectionTableResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ImportSelectionTableResponse::ImportSelectionTableResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ImportSelectionTableResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ImportSelectionTableResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ImportSelectionTableResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.imported_table_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.imported_table_)
                : nullptr;
  _impl_.import_result_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.import_result_)
                : nullptr;
  _impl_.import_stats_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.import_stats_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.ImportSelectionTableResponse)
}
PROTOBUF_NDEBUG_INLINE ImportSelectionTableResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ImportSelectionTableResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, imported_table_),
           0,
           offsetof(Impl_, import_stats_) -
               offsetof(Impl_, imported_table_) +
               sizeof(Impl_::import_stats_));
}
ImportSelectionTableResponse::~ImportSelectionTableResponse() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.ImportSelectionTableResponse)
  SharedDtor(*this);
}
inline void ImportSelectionTableResponse::SharedDtor(MessageLite& self) {
  ImportSelectionTableResponse& this_ = static_cast<ImportSelectionTableResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.imported_table_;
  delete this_._impl_.import_result_;
  delete this_._impl_.import_stats_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ImportSelectionTableResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ImportSelectionTableResponse(arena);
}
constexpr auto ImportSelectionTableResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ImportSelectionTableResponse),
                                            alignof(ImportSelectionTableResponse));
}
constexpr auto ImportSelectionTableResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ImportSelectionTableResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ImportSelectionTableResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ImportSelectionTableResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ImportSelectionTableResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ImportSelectionTableResponse>(), &ImportSelectionTableResponse::ByteSizeLong,
              &ImportSelectionTableResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ImportSelectionTableResponse, _impl_._cached_size_),
          false,
      },
      &ImportSelectionTableResponse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ImportSelectionTableResponse_class_data_ =
        ImportSelectionTableResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ImportSelectionTableResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ImportSelectionTableResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ImportSelectionTableResponse_class_data_.tc_table);
  return ImportSelectionTableResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
ImportSelectionTableResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ImportSelectionTableResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ImportSelectionTableResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::ImportSelectionTableResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .api.v1alpha1.SelectionTable imported_table = 1 [json_name = "importedTable"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ImportSelectionTableResponse, _impl_.imported_table_)}},
    // .api.v1alpha1.ImportResult import_result = 2 [json_name = "importResult"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(ImportSelectionTableResponse, _impl_.import_result_)}},
    // .api.v1alpha1.ImportStats import_stats = 3 [json_name = "importStats"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(ImportSelectionTableResponse, _impl_.import_stats_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .api.v1alpha1.SelectionTable imported_table = 1 [json_name = "importedTable"];
    {PROTOBUF_FIELD_OFFSET(ImportSelectionTableResponse, _impl_.imported_table_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.ImportResult import_result = 2 [json_name = "importResult"];
    {PROTOBUF_FIELD_OFFSET(ImportSelectionTableResponse, _impl_.import_result_), _Internal::kHasBitsOffset + 1, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.ImportStats import_stats = 3 [json_name = "importStats"];
    {PROTOBUF_FIELD_OFFSET(ImportSelectionTableResponse, _impl_.import_stats_), _Internal::kHasBitsOffset + 2, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::SelectionTable>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::ImportResult>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::ImportStats>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ImportSelectionTableResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.ImportSelectionTableResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.imported_table_ != nullptr);
      _impl_.imported_table_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.import_result_ != nullptr);
      _impl_.import_result_->Clear();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.import_stats_ != nullptr);
      _impl_.import_stats_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ImportSelectionTableResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ImportSelectionTableResponse& this_ = static_cast<const ImportSelectionTableResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ImportSelectionTableResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ImportSelectionTableResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.ImportSelectionTableResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.SelectionTable imported_table = 1 [json_name = "importedTable"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.imported_table_, this_._impl_.imported_table_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.ImportResult import_result = 2 [json_name = "importResult"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.import_result_, this_._impl_.import_result_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.ImportStats import_stats = 3 [json_name = "importStats"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.import_stats_, this_._impl_.import_stats_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.ImportSelectionTableResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ImportSelectionTableResponse::ByteSizeLong(const MessageLite& base) {
  const ImportSelectionTableResponse& this_ = static_cast<const ImportSelectionTableResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ImportSelectionTableResponse::ByteSizeLong() const {
  const ImportSelectionTableResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.ImportSelectionTableResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // .api.v1alpha1.SelectionTable imported_table = 1 [json_name = "importedTable"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.imported_table_);
    }
    // .api.v1alpha1.ImportResult import_result = 2 [json_name = "importResult"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.import_result_);
    }
    // .api.v1alpha1.ImportStats import_stats = 3 [json_name = "importStats"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.import_stats_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ImportSelectionTableResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ImportSelectionTableResponse*>(&to_msg);
  auto& from = static_cast<const ImportSelectionTableResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.ImportSelectionTableResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.imported_table_ != nullptr);
      if (_this->_impl_.imported_table_ == nullptr) {
        _this->_impl_.imported_table_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.imported_table_);
      } else {
        _this->_impl_.imported_table_->MergeFrom(*from._impl_.imported_table_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.import_result_ != nullptr);
      if (_this->_impl_.import_result_ == nullptr) {
        _this->_impl_.import_result_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.import_result_);
      } else {
        _this->_impl_.import_result_->MergeFrom(*from._impl_.import_result_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.import_stats_ != nullptr);
      if (_this->_impl_.import_stats_ == nullptr) {
        _this->_impl_.import_stats_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.import_stats_);
      } else {
        _this->_impl_.import_stats_->MergeFrom(*from._impl_.import_stats_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ImportSelectionTableResponse::CopyFrom(const ImportSelectionTableResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.ImportSelectionTableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ImportSelectionTableResponse::InternalSwap(ImportSelectionTableResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImportSelectionTableResponse, _impl_.import_stats_)
      + sizeof(ImportSelectionTableResponse::_impl_.import_stats_)
      - PROTOBUF_FIELD_OFFSET(ImportSelectionTableResponse, _impl_.imported_table_)>(
          reinterpret_cast<char*>(&_impl_.imported_table_),
          reinterpret_cast<char*>(&other->_impl_.imported_table_));
}

::google::protobuf::Metadata ImportSelectionTableResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ImportResult::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ImportResult>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ImportResult, _impl_._has_bits_);
};

void ImportResult::clear_warnings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.warnings_.Clear();
}
void ImportResult::clear_errors() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errors_.Clear();
}
ImportResult::ImportResult(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ImportResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.ImportResult)
}
PROTOBUF_NDEBUG_INLINE ImportResult::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::ImportResult& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        warnings_{visibility, arena, from.warnings_},
        errors_{visibility, arena, from.errors_} {}

ImportResult::ImportResult(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ImportResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ImportResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ImportResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, success_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, success_),
           offsetof(Impl_, items_skipped_) -
               offsetof(Impl_, success_) +
               sizeof(Impl_::items_skipped_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.ImportResult)
}
PROTOBUF_NDEBUG_INLINE ImportResult::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        warnings_{visibility, arena},
        errors_{visibility, arena} {}

inline void ImportResult::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, success_),
           0,
           offsetof(Impl_, items_skipped_) -
               offsetof(Impl_, success_) +
               sizeof(Impl_::items_skipped_));
}
ImportResult::~ImportResult() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.ImportResult)
  SharedDtor(*this);
}
inline void ImportResult::SharedDtor(MessageLite& self) {
  ImportResult& this_ = static_cast<ImportResult&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ImportResult::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ImportResult(arena);
}
constexpr auto ImportResult::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ImportResult, _impl_.warnings_) +
          decltype(ImportResult::_impl_.warnings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ImportResult, _impl_.errors_) +
          decltype(ImportResult::_impl_.errors_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ImportResult), alignof(ImportResult), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ImportResult::PlacementNew_,
                                 sizeof(ImportResult),
                                 alignof(ImportResult));
  }
}
constexpr auto ImportResult::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ImportResult_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ImportResult::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ImportResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ImportResult::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ImportResult>(), &ImportResult::ByteSizeLong,
              &ImportResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ImportResult, _impl_._cached_size_),
          false,
      },
      &ImportResult::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ImportResult_class_data_ =
        ImportResult::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ImportResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ImportResult_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ImportResult_class_data_.tc_table);
  return ImportResult_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 0, 2>
ImportResult::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ImportResult, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ImportResult_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::ImportResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool success = 1 [json_name = "success"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ImportResult, _impl_.success_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ImportResult, _impl_.success_)}},
    // repeated .api.v1alpha1.RoomError warnings = 2 [json_name = "warnings"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ImportResult, _impl_.warnings_)}},
    // repeated .api.v1alpha1.RoomError errors = 3 [json_name = "errors"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(ImportResult, _impl_.errors_)}},
    // int32 items_imported = 4 [json_name = "itemsImported"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ImportResult, _impl_.items_imported_), 1>(),
     {32, 1, 0, PROTOBUF_FIELD_OFFSET(ImportResult, _impl_.items_imported_)}},
    // int32 items_skipped = 5 [json_name = "itemsSkipped"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ImportResult, _impl_.items_skipped_), 2>(),
     {40, 2, 0, PROTOBUF_FIELD_OFFSET(ImportResult, _impl_.items_skipped_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1 [json_name = "success"];
    {PROTOBUF_FIELD_OFFSET(ImportResult, _impl_.success_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated .api.v1alpha1.RoomError warnings = 2 [json_name = "warnings"];
    {PROTOBUF_FIELD_OFFSET(ImportResult, _impl_.warnings_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .api.v1alpha1.RoomError errors = 3 [json_name = "errors"];
    {PROTOBUF_FIELD_OFFSET(ImportResult, _impl_.errors_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 items_imported = 4 [json_name = "itemsImported"];
    {PROTOBUF_FIELD_OFFSET(ImportResult, _impl_.items_imported_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 items_skipped = 5 [json_name = "itemsSkipped"];
    {PROTOBUF_FIELD_OFFSET(ImportResult, _impl_.items_skipped_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RoomError>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RoomError>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ImportResult::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.ImportResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.warnings_.Clear();
  _impl_.errors_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    ::memset(&_impl_.success_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.items_skipped_) -
        reinterpret_cast<char*>(&_impl_.success_)) + sizeof(_impl_.items_skipped_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ImportResult::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ImportResult& this_ = static_cast<const ImportResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ImportResult::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ImportResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.ImportResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool success = 1 [json_name = "success"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_success() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_success(), target);
    }
  }

  // repeated .api.v1alpha1.RoomError warnings = 2 [json_name = "warnings"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_warnings_size());
       i < n; i++) {
    const auto& repfield = this_._internal_warnings().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .api.v1alpha1.RoomError errors = 3 [json_name = "errors"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_errors_size());
       i < n; i++) {
    const auto& repfield = this_._internal_errors().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // int32 items_imported = 4 [json_name = "itemsImported"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_items_imported() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_items_imported(), target);
    }
  }

  // int32 items_skipped = 5 [json_name = "itemsSkipped"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_items_skipped() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
              stream, this_._internal_items_skipped(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.ImportResult)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ImportResult::ByteSizeLong(const MessageLite& base) {
  const ImportResult& this_ = static_cast<const ImportResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ImportResult::ByteSizeLong() const {
  const ImportResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.ImportResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.RoomError warnings = 2 [json_name = "warnings"];
    {
      total_size += 1UL * this_._internal_warnings_size();
      for (const auto& msg : this_._internal_warnings()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .api.v1alpha1.RoomError errors = 3 [json_name = "errors"];
    {
      total_size += 1UL * this_._internal_errors_size();
      for (const auto& msg : this_._internal_errors()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // bool success = 1 [json_name = "success"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_success() != 0) {
        total_size += 2;
      }
    }
    // int32 items_imported = 4 [json_name = "itemsImported"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_items_imported() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_items_imported());
      }
    }
    // int32 items_skipped = 5 [json_name = "itemsSkipped"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_items_skipped() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_items_skipped());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ImportResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ImportResult*>(&to_msg);
  auto& from = static_cast<const ImportResult&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.ImportResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_warnings()->MergeFrom(
      from._internal_warnings());
  _this->_internal_mutable_errors()->MergeFrom(
      from._internal_errors());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (from._internal_success() != 0) {
        _this->_impl_.success_ = from._impl_.success_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_items_imported() != 0) {
        _this->_impl_.items_imported_ = from._impl_.items_imported_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_items_skipped() != 0) {
        _this->_impl_.items_skipped_ = from._impl_.items_skipped_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ImportResult::CopyFrom(const ImportResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.ImportResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ImportResult::InternalSwap(ImportResult* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.warnings_.InternalSwap(&other->_impl_.warnings_);
  _impl_.errors_.InternalSwap(&other->_impl_.errors_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImportResult, _impl_.items_skipped_)
      + sizeof(ImportResult::_impl_.items_skipped_)
      - PROTOBUF_FIELD_OFFSET(ImportResult, _impl_.success_)>(
          reinterpret_cast<char*>(&_impl_.success_),
          reinterpret_cast<char*>(&other->_impl_.success_));
}

::google::protobuf::Metadata ImportResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ImportStats::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ImportStats>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ImportStats, _impl_._has_bits_);
};

ImportStats::ImportStats(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ImportStats_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.ImportStats)
}
ImportStats::ImportStats(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ImportStats& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ImportStats_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE ImportStats::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ImportStats::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, import_time_ms_),
           0,
           offsetof(Impl_, processing_rate_mbps_) -
               offsetof(Impl_, import_time_ms_) +
               sizeof(Impl_::processing_rate_mbps_));
}
ImportStats::~ImportStats() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.ImportStats)
  SharedDtor(*this);
}
inline void ImportStats::SharedDtor(MessageLite& self) {
  ImportStats& this_ = static_cast<ImportStats&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ImportStats::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ImportStats(arena);
}
constexpr auto ImportStats::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ImportStats),
                                            alignof(ImportStats));
}
constexpr auto ImportStats::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ImportStats_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ImportStats::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ImportStats>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ImportStats::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ImportStats>(), &ImportStats::ByteSizeLong,
              &ImportStats::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ImportStats, _impl_._cached_size_),
          false,
      },
      &ImportStats::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ImportStats_class_data_ =
        ImportStats::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ImportStats::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ImportStats_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ImportStats_class_data_.tc_table);
  return ImportStats_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2>
ImportStats::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ImportStats, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ImportStats_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::ImportStats>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double processing_rate_mbps = 4 [json_name = "processingRateMbps"];
    {::_pbi::TcParser::FastF64S1,
     {33, 3, 0, PROTOBUF_FIELD_OFFSET(ImportStats, _impl_.processing_rate_mbps_)}},
    // int64 import_time_ms = 1 [json_name = "importTimeMs"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ImportStats, _impl_.import_time_ms_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ImportStats, _impl_.import_time_ms_)}},
    // int64 data_processed_bytes = 2 [json_name = "dataProcessedBytes"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ImportStats, _impl_.data_processed_bytes_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ImportStats, _impl_.data_processed_bytes_)}},
    // int64 validation_time_ms = 3 [json_name = "validationTimeMs"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ImportStats, _impl_.validation_time_ms_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(ImportStats, _impl_.validation_time_ms_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 import_time_ms = 1 [json_name = "importTimeMs"];
    {PROTOBUF_FIELD_OFFSET(ImportStats, _impl_.import_time_ms_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 data_processed_bytes = 2 [json_name = "dataProcessedBytes"];
    {PROTOBUF_FIELD_OFFSET(ImportStats, _impl_.data_processed_bytes_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 validation_time_ms = 3 [json_name = "validationTimeMs"];
    {PROTOBUF_FIELD_OFFSET(ImportStats, _impl_.validation_time_ms_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // double processing_rate_mbps = 4 [json_name = "processingRateMbps"];
    {PROTOBUF_FIELD_OFFSET(ImportStats, _impl_.processing_rate_mbps_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void ImportStats::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.ImportStats)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    ::memset(&_impl_.import_time_ms_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.processing_rate_mbps_) -
        reinterpret_cast<char*>(&_impl_.import_time_ms_)) + sizeof(_impl_.processing_rate_mbps_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ImportStats::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ImportStats& this_ = static_cast<const ImportStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ImportStats::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ImportStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.ImportStats)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 import_time_ms = 1 [json_name = "importTimeMs"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_import_time_ms() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_import_time_ms(), target);
    }
  }

  // int64 data_processed_bytes = 2 [json_name = "dataProcessedBytes"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_data_processed_bytes() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
              stream, this_._internal_data_processed_bytes(), target);
    }
  }

  // int64 validation_time_ms = 3 [json_name = "validationTimeMs"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_validation_time_ms() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<3>(
              stream, this_._internal_validation_time_ms(), target);
    }
  }

  // double processing_rate_mbps = 4 [json_name = "processingRateMbps"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_processing_rate_mbps()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          4, this_._internal_processing_rate_mbps(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.ImportStats)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ImportStats::ByteSizeLong(const MessageLite& base) {
  const ImportStats& this_ = static_cast<const ImportStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ImportStats::ByteSizeLong() const {
  const ImportStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.ImportStats)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // int64 import_time_ms = 1 [json_name = "importTimeMs"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_import_time_ms() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_import_time_ms());
      }
    }
    // int64 data_processed_bytes = 2 [json_name = "dataProcessedBytes"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_data_processed_bytes() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_data_processed_bytes());
      }
    }
    // int64 validation_time_ms = 3 [json_name = "validationTimeMs"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_validation_time_ms() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_validation_time_ms());
      }
    }
    // double processing_rate_mbps = 4 [json_name = "processingRateMbps"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_processing_rate_mbps()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ImportStats::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ImportStats*>(&to_msg);
  auto& from = static_cast<const ImportStats&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.ImportStats)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (from._internal_import_time_ms() != 0) {
        _this->_impl_.import_time_ms_ = from._impl_.import_time_ms_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_data_processed_bytes() != 0) {
        _this->_impl_.data_processed_bytes_ = from._impl_.data_processed_bytes_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_validation_time_ms() != 0) {
        _this->_impl_.validation_time_ms_ = from._impl_.validation_time_ms_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_processing_rate_mbps()) != 0) {
        _this->_impl_.processing_rate_mbps_ = from._impl_.processing_rate_mbps_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ImportStats::CopyFrom(const ImportStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.ImportStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ImportStats::InternalSwap(ImportStats* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImportStats, _impl_.processing_rate_mbps_)
      + sizeof(ImportStats::_impl_.processing_rate_mbps_)
      - PROTOBUF_FIELD_OFFSET(ImportStats, _impl_.import_time_ms_)>(
          reinterpret_cast<char*>(&_impl_.import_time_ms_),
          reinterpret_cast<char*>(&other->_impl_.import_time_ms_));
}

::google::protobuf::Metadata ImportStats::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace api
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_api_2fv1alpha1_2froom_5fselectables_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
