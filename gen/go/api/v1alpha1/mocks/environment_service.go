// Code generated by MockGen. DO NOT EDIT.
// Source: gen/go/api/v1alpha1/room_environments_grpc.pb.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	v1alpha1 "github.com/KirkDiggler/rpg-api-protos/gen/go/api/v1alpha1"
	gomock "github.com/golang/mock/gomock"
	grpc "google.golang.org/grpc"
)

// MockEnvironmentServiceClient is a mock of EnvironmentServiceClient interface.
type MockEnvironmentServiceClient struct {
	ctrl     *gomock.Controller
	recorder *MockEnvironmentServiceClientMockRecorder
}

// MockEnvironmentServiceClientMockRecorder is the mock recorder for MockEnvironmentServiceClient.
type MockEnvironmentServiceClientMockRecorder struct {
	mock *MockEnvironmentServiceClient
}

// NewMockEnvironmentServiceClient creates a new mock instance.
func NewMockEnvironmentServiceClient(ctrl *gomock.Controller) *MockEnvironmentServiceClient {
	mock := &MockEnvironmentServiceClient{ctrl: ctrl}
	mock.recorder = &MockEnvironmentServiceClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEnvironmentServiceClient) EXPECT() *MockEnvironmentServiceClientMockRecorder {
	return m.recorder
}

// CreateRoomTemplate mocks base method.
func (m *MockEnvironmentServiceClient) CreateRoomTemplate(ctx context.Context, in *v1alpha1.CreateRoomTemplateRequest, opts ...grpc.CallOption) (*v1alpha1.CreateRoomTemplateResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateRoomTemplate", varargs...)
	ret0, _ := ret[0].(*v1alpha1.CreateRoomTemplateResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateRoomTemplate indicates an expected call of CreateRoomTemplate.
func (mr *MockEnvironmentServiceClientMockRecorder) CreateRoomTemplate(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateRoomTemplate", reflect.TypeOf((*MockEnvironmentServiceClient)(nil).CreateRoomTemplate), varargs...)
}

// DeleteRoom mocks base method.
func (m *MockEnvironmentServiceClient) DeleteRoom(ctx context.Context, in *v1alpha1.DeleteRoomRequest, opts ...grpc.CallOption) (*v1alpha1.DeleteRoomResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteRoom", varargs...)
	ret0, _ := ret[0].(*v1alpha1.DeleteRoomResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteRoom indicates an expected call of DeleteRoom.
func (mr *MockEnvironmentServiceClientMockRecorder) DeleteRoom(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteRoom", reflect.TypeOf((*MockEnvironmentServiceClient)(nil).DeleteRoom), varargs...)
}

// GenerateRoom mocks base method.
func (m *MockEnvironmentServiceClient) GenerateRoom(ctx context.Context, in *v1alpha1.GenerateRoomRequest, opts ...grpc.CallOption) (*v1alpha1.GenerateRoomResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GenerateRoom", varargs...)
	ret0, _ := ret[0].(*v1alpha1.GenerateRoomResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateRoom indicates an expected call of GenerateRoom.
func (mr *MockEnvironmentServiceClientMockRecorder) GenerateRoom(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateRoom", reflect.TypeOf((*MockEnvironmentServiceClient)(nil).GenerateRoom), varargs...)
}

// GetRoomDetails mocks base method.
func (m *MockEnvironmentServiceClient) GetRoomDetails(ctx context.Context, in *v1alpha1.GetRoomDetailsRequest, opts ...grpc.CallOption) (*v1alpha1.GetRoomDetailsResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetRoomDetails", varargs...)
	ret0, _ := ret[0].(*v1alpha1.GetRoomDetailsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRoomDetails indicates an expected call of GetRoomDetails.
func (mr *MockEnvironmentServiceClientMockRecorder) GetRoomDetails(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRoomDetails", reflect.TypeOf((*MockEnvironmentServiceClient)(nil).GetRoomDetails), varargs...)
}

// ListRoomTemplates mocks base method.
func (m *MockEnvironmentServiceClient) ListRoomTemplates(ctx context.Context, in *v1alpha1.ListRoomTemplatesRequest, opts ...grpc.CallOption) (*v1alpha1.ListRoomTemplatesResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListRoomTemplates", varargs...)
	ret0, _ := ret[0].(*v1alpha1.ListRoomTemplatesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListRoomTemplates indicates an expected call of ListRoomTemplates.
func (mr *MockEnvironmentServiceClientMockRecorder) ListRoomTemplates(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRoomTemplates", reflect.TypeOf((*MockEnvironmentServiceClient)(nil).ListRoomTemplates), varargs...)
}

// ListRooms mocks base method.
func (m *MockEnvironmentServiceClient) ListRooms(ctx context.Context, in *v1alpha1.ListRoomsRequest, opts ...grpc.CallOption) (*v1alpha1.ListRoomsResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListRooms", varargs...)
	ret0, _ := ret[0].(*v1alpha1.ListRoomsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListRooms indicates an expected call of ListRooms.
func (mr *MockEnvironmentServiceClientMockRecorder) ListRooms(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRooms", reflect.TypeOf((*MockEnvironmentServiceClient)(nil).ListRooms), varargs...)
}

// UpdateRoom mocks base method.
func (m *MockEnvironmentServiceClient) UpdateRoom(ctx context.Context, in *v1alpha1.UpdateRoomRequest, opts ...grpc.CallOption) (*v1alpha1.UpdateRoomResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UpdateRoom", varargs...)
	ret0, _ := ret[0].(*v1alpha1.UpdateRoomResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateRoom indicates an expected call of UpdateRoom.
func (mr *MockEnvironmentServiceClientMockRecorder) UpdateRoom(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateRoom", reflect.TypeOf((*MockEnvironmentServiceClient)(nil).UpdateRoom), varargs...)
}

// ValidateRoomConfig mocks base method.
func (m *MockEnvironmentServiceClient) ValidateRoomConfig(ctx context.Context, in *v1alpha1.ValidateRoomConfigRequest, opts ...grpc.CallOption) (*v1alpha1.ValidateRoomConfigResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ValidateRoomConfig", varargs...)
	ret0, _ := ret[0].(*v1alpha1.ValidateRoomConfigResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateRoomConfig indicates an expected call of ValidateRoomConfig.
func (mr *MockEnvironmentServiceClientMockRecorder) ValidateRoomConfig(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateRoomConfig", reflect.TypeOf((*MockEnvironmentServiceClient)(nil).ValidateRoomConfig), varargs...)
}

// MockEnvironmentServiceServer is a mock of EnvironmentServiceServer interface.
type MockEnvironmentServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockEnvironmentServiceServerMockRecorder
}

// MockEnvironmentServiceServerMockRecorder is the mock recorder for MockEnvironmentServiceServer.
type MockEnvironmentServiceServerMockRecorder struct {
	mock *MockEnvironmentServiceServer
}

// NewMockEnvironmentServiceServer creates a new mock instance.
func NewMockEnvironmentServiceServer(ctrl *gomock.Controller) *MockEnvironmentServiceServer {
	mock := &MockEnvironmentServiceServer{ctrl: ctrl}
	mock.recorder = &MockEnvironmentServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEnvironmentServiceServer) EXPECT() *MockEnvironmentServiceServerMockRecorder {
	return m.recorder
}

// CreateRoomTemplate mocks base method.
func (m *MockEnvironmentServiceServer) CreateRoomTemplate(arg0 context.Context, arg1 *v1alpha1.CreateRoomTemplateRequest) (*v1alpha1.CreateRoomTemplateResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateRoomTemplate", arg0, arg1)
	ret0, _ := ret[0].(*v1alpha1.CreateRoomTemplateResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateRoomTemplate indicates an expected call of CreateRoomTemplate.
func (mr *MockEnvironmentServiceServerMockRecorder) CreateRoomTemplate(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateRoomTemplate", reflect.TypeOf((*MockEnvironmentServiceServer)(nil).CreateRoomTemplate), arg0, arg1)
}

// DeleteRoom mocks base method.
func (m *MockEnvironmentServiceServer) DeleteRoom(arg0 context.Context, arg1 *v1alpha1.DeleteRoomRequest) (*v1alpha1.DeleteRoomResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteRoom", arg0, arg1)
	ret0, _ := ret[0].(*v1alpha1.DeleteRoomResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteRoom indicates an expected call of DeleteRoom.
func (mr *MockEnvironmentServiceServerMockRecorder) DeleteRoom(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteRoom", reflect.TypeOf((*MockEnvironmentServiceServer)(nil).DeleteRoom), arg0, arg1)
}

// GenerateRoom mocks base method.
func (m *MockEnvironmentServiceServer) GenerateRoom(arg0 context.Context, arg1 *v1alpha1.GenerateRoomRequest) (*v1alpha1.GenerateRoomResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateRoom", arg0, arg1)
	ret0, _ := ret[0].(*v1alpha1.GenerateRoomResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateRoom indicates an expected call of GenerateRoom.
func (mr *MockEnvironmentServiceServerMockRecorder) GenerateRoom(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateRoom", reflect.TypeOf((*MockEnvironmentServiceServer)(nil).GenerateRoom), arg0, arg1)
}

// GetRoomDetails mocks base method.
func (m *MockEnvironmentServiceServer) GetRoomDetails(arg0 context.Context, arg1 *v1alpha1.GetRoomDetailsRequest) (*v1alpha1.GetRoomDetailsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRoomDetails", arg0, arg1)
	ret0, _ := ret[0].(*v1alpha1.GetRoomDetailsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRoomDetails indicates an expected call of GetRoomDetails.
func (mr *MockEnvironmentServiceServerMockRecorder) GetRoomDetails(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRoomDetails", reflect.TypeOf((*MockEnvironmentServiceServer)(nil).GetRoomDetails), arg0, arg1)
}

// ListRoomTemplates mocks base method.
func (m *MockEnvironmentServiceServer) ListRoomTemplates(arg0 context.Context, arg1 *v1alpha1.ListRoomTemplatesRequest) (*v1alpha1.ListRoomTemplatesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListRoomTemplates", arg0, arg1)
	ret0, _ := ret[0].(*v1alpha1.ListRoomTemplatesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListRoomTemplates indicates an expected call of ListRoomTemplates.
func (mr *MockEnvironmentServiceServerMockRecorder) ListRoomTemplates(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRoomTemplates", reflect.TypeOf((*MockEnvironmentServiceServer)(nil).ListRoomTemplates), arg0, arg1)
}

// ListRooms mocks base method.
func (m *MockEnvironmentServiceServer) ListRooms(arg0 context.Context, arg1 *v1alpha1.ListRoomsRequest) (*v1alpha1.ListRoomsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListRooms", arg0, arg1)
	ret0, _ := ret[0].(*v1alpha1.ListRoomsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListRooms indicates an expected call of ListRooms.
func (mr *MockEnvironmentServiceServerMockRecorder) ListRooms(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRooms", reflect.TypeOf((*MockEnvironmentServiceServer)(nil).ListRooms), arg0, arg1)
}

// UpdateRoom mocks base method.
func (m *MockEnvironmentServiceServer) UpdateRoom(arg0 context.Context, arg1 *v1alpha1.UpdateRoomRequest) (*v1alpha1.UpdateRoomResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateRoom", arg0, arg1)
	ret0, _ := ret[0].(*v1alpha1.UpdateRoomResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateRoom indicates an expected call of UpdateRoom.
func (mr *MockEnvironmentServiceServerMockRecorder) UpdateRoom(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateRoom", reflect.TypeOf((*MockEnvironmentServiceServer)(nil).UpdateRoom), arg0, arg1)
}

// ValidateRoomConfig mocks base method.
func (m *MockEnvironmentServiceServer) ValidateRoomConfig(arg0 context.Context, arg1 *v1alpha1.ValidateRoomConfigRequest) (*v1alpha1.ValidateRoomConfigResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateRoomConfig", arg0, arg1)
	ret0, _ := ret[0].(*v1alpha1.ValidateRoomConfigResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateRoomConfig indicates an expected call of ValidateRoomConfig.
func (mr *MockEnvironmentServiceServerMockRecorder) ValidateRoomConfig(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateRoomConfig", reflect.TypeOf((*MockEnvironmentServiceServer)(nil).ValidateRoomConfig), arg0, arg1)
}

// MockUnsafeEnvironmentServiceServer is a mock of UnsafeEnvironmentServiceServer interface.
type MockUnsafeEnvironmentServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockUnsafeEnvironmentServiceServerMockRecorder
}

// MockUnsafeEnvironmentServiceServerMockRecorder is the mock recorder for MockUnsafeEnvironmentServiceServer.
type MockUnsafeEnvironmentServiceServerMockRecorder struct {
	mock *MockUnsafeEnvironmentServiceServer
}

// NewMockUnsafeEnvironmentServiceServer creates a new mock instance.
func NewMockUnsafeEnvironmentServiceServer(ctrl *gomock.Controller) *MockUnsafeEnvironmentServiceServer {
	mock := &MockUnsafeEnvironmentServiceServer{ctrl: ctrl}
	mock.recorder = &MockUnsafeEnvironmentServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUnsafeEnvironmentServiceServer) EXPECT() *MockUnsafeEnvironmentServiceServerMockRecorder {
	return m.recorder
}

// mustEmbedUnimplementedEnvironmentServiceServer mocks base method.
func (m *MockUnsafeEnvironmentServiceServer) mustEmbedUnimplementedEnvironmentServiceServer() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "mustEmbedUnimplementedEnvironmentServiceServer")
}

// mustEmbedUnimplementedEnvironmentServiceServer indicates an expected call of mustEmbedUnimplementedEnvironmentServiceServer.
func (mr *MockUnsafeEnvironmentServiceServerMockRecorder) mustEmbedUnimplementedEnvironmentServiceServer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mustEmbedUnimplementedEnvironmentServiceServer", reflect.TypeOf((*MockUnsafeEnvironmentServiceServer)(nil).mustEmbedUnimplementedEnvironmentServiceServer))
}
