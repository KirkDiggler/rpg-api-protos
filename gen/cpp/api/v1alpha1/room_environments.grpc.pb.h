// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: api/v1alpha1/room_environments.proto
#ifndef GRPC_api_2fv1alpha1_2froom_5fenvironments_2eproto__INCLUDED
#define GRPC_api_2fv1alpha1_2froom_5fenvironments_2eproto__INCLUDED

#include "api/v1alpha1/room_environments.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>
#include <grpcpp/ports_def.inc>

namespace api {
namespace v1alpha1 {

// Environment generation service for room layout and structure
// Handles room creation, configuration, and basic CRUD operations
class EnvironmentService final {
 public:
  static constexpr char const* service_full_name() {
    return "api.v1alpha1.EnvironmentService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Generate a new room environment
    virtual ::grpc::Status GenerateRoom(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateRoomRequest& request, ::api::v1alpha1::GenerateRoomResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GenerateRoomResponse>> AsyncGenerateRoom(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GenerateRoomResponse>>(AsyncGenerateRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GenerateRoomResponse>> PrepareAsyncGenerateRoom(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GenerateRoomResponse>>(PrepareAsyncGenerateRoomRaw(context, request, cq));
    }
    // Get details of an existing room
    virtual ::grpc::Status GetRoomDetails(::grpc::ClientContext* context, const ::api::v1alpha1::GetRoomDetailsRequest& request, ::api::v1alpha1::GetRoomDetailsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GetRoomDetailsResponse>> AsyncGetRoomDetails(::grpc::ClientContext* context, const ::api::v1alpha1::GetRoomDetailsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GetRoomDetailsResponse>>(AsyncGetRoomDetailsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GetRoomDetailsResponse>> PrepareAsyncGetRoomDetails(::grpc::ClientContext* context, const ::api::v1alpha1::GetRoomDetailsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GetRoomDetailsResponse>>(PrepareAsyncGetRoomDetailsRaw(context, request, cq));
    }
    // List rooms with filtering and pagination
    virtual ::grpc::Status ListRooms(::grpc::ClientContext* context, const ::api::v1alpha1::ListRoomsRequest& request, ::api::v1alpha1::ListRoomsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ListRoomsResponse>> AsyncListRooms(::grpc::ClientContext* context, const ::api::v1alpha1::ListRoomsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ListRoomsResponse>>(AsyncListRoomsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ListRoomsResponse>> PrepareAsyncListRooms(::grpc::ClientContext* context, const ::api::v1alpha1::ListRoomsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ListRoomsResponse>>(PrepareAsyncListRoomsRaw(context, request, cq));
    }
    // Update room configuration (regenerates structure)
    virtual ::grpc::Status UpdateRoom(::grpc::ClientContext* context, const ::api::v1alpha1::UpdateRoomRequest& request, ::api::v1alpha1::UpdateRoomResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::UpdateRoomResponse>> AsyncUpdateRoom(::grpc::ClientContext* context, const ::api::v1alpha1::UpdateRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::UpdateRoomResponse>>(AsyncUpdateRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::UpdateRoomResponse>> PrepareAsyncUpdateRoom(::grpc::ClientContext* context, const ::api::v1alpha1::UpdateRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::UpdateRoomResponse>>(PrepareAsyncUpdateRoomRaw(context, request, cq));
    }
    // Delete a room
    virtual ::grpc::Status DeleteRoom(::grpc::ClientContext* context, const ::api::v1alpha1::DeleteRoomRequest& request, ::api::v1alpha1::DeleteRoomResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::DeleteRoomResponse>> AsyncDeleteRoom(::grpc::ClientContext* context, const ::api::v1alpha1::DeleteRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::DeleteRoomResponse>>(AsyncDeleteRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::DeleteRoomResponse>> PrepareAsyncDeleteRoom(::grpc::ClientContext* context, const ::api::v1alpha1::DeleteRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::DeleteRoomResponse>>(PrepareAsyncDeleteRoomRaw(context, request, cq));
    }
    // Validate room configuration before generation
    virtual ::grpc::Status ValidateRoomConfig(::grpc::ClientContext* context, const ::api::v1alpha1::ValidateRoomConfigRequest& request, ::api::v1alpha1::ValidateRoomConfigResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ValidateRoomConfigResponse>> AsyncValidateRoomConfig(::grpc::ClientContext* context, const ::api::v1alpha1::ValidateRoomConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ValidateRoomConfigResponse>>(AsyncValidateRoomConfigRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ValidateRoomConfigResponse>> PrepareAsyncValidateRoomConfig(::grpc::ClientContext* context, const ::api::v1alpha1::ValidateRoomConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ValidateRoomConfigResponse>>(PrepareAsyncValidateRoomConfigRaw(context, request, cq));
    }
    // Get room generation templates
    virtual ::grpc::Status ListRoomTemplates(::grpc::ClientContext* context, const ::api::v1alpha1::ListRoomTemplatesRequest& request, ::api::v1alpha1::ListRoomTemplatesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ListRoomTemplatesResponse>> AsyncListRoomTemplates(::grpc::ClientContext* context, const ::api::v1alpha1::ListRoomTemplatesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ListRoomTemplatesResponse>>(AsyncListRoomTemplatesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ListRoomTemplatesResponse>> PrepareAsyncListRoomTemplates(::grpc::ClientContext* context, const ::api::v1alpha1::ListRoomTemplatesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ListRoomTemplatesResponse>>(PrepareAsyncListRoomTemplatesRaw(context, request, cq));
    }
    // Create custom room template
    virtual ::grpc::Status CreateRoomTemplate(::grpc::ClientContext* context, const ::api::v1alpha1::CreateRoomTemplateRequest& request, ::api::v1alpha1::CreateRoomTemplateResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::CreateRoomTemplateResponse>> AsyncCreateRoomTemplate(::grpc::ClientContext* context, const ::api::v1alpha1::CreateRoomTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::CreateRoomTemplateResponse>>(AsyncCreateRoomTemplateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::CreateRoomTemplateResponse>> PrepareAsyncCreateRoomTemplate(::grpc::ClientContext* context, const ::api::v1alpha1::CreateRoomTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::CreateRoomTemplateResponse>>(PrepareAsyncCreateRoomTemplateRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Generate a new room environment
      virtual void GenerateRoom(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateRoomRequest* request, ::api::v1alpha1::GenerateRoomResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GenerateRoom(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateRoomRequest* request, ::api::v1alpha1::GenerateRoomResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Get details of an existing room
      virtual void GetRoomDetails(::grpc::ClientContext* context, const ::api::v1alpha1::GetRoomDetailsRequest* request, ::api::v1alpha1::GetRoomDetailsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetRoomDetails(::grpc::ClientContext* context, const ::api::v1alpha1::GetRoomDetailsRequest* request, ::api::v1alpha1::GetRoomDetailsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // List rooms with filtering and pagination
      virtual void ListRooms(::grpc::ClientContext* context, const ::api::v1alpha1::ListRoomsRequest* request, ::api::v1alpha1::ListRoomsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListRooms(::grpc::ClientContext* context, const ::api::v1alpha1::ListRoomsRequest* request, ::api::v1alpha1::ListRoomsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Update room configuration (regenerates structure)
      virtual void UpdateRoom(::grpc::ClientContext* context, const ::api::v1alpha1::UpdateRoomRequest* request, ::api::v1alpha1::UpdateRoomResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateRoom(::grpc::ClientContext* context, const ::api::v1alpha1::UpdateRoomRequest* request, ::api::v1alpha1::UpdateRoomResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Delete a room
      virtual void DeleteRoom(::grpc::ClientContext* context, const ::api::v1alpha1::DeleteRoomRequest* request, ::api::v1alpha1::DeleteRoomResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteRoom(::grpc::ClientContext* context, const ::api::v1alpha1::DeleteRoomRequest* request, ::api::v1alpha1::DeleteRoomResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Validate room configuration before generation
      virtual void ValidateRoomConfig(::grpc::ClientContext* context, const ::api::v1alpha1::ValidateRoomConfigRequest* request, ::api::v1alpha1::ValidateRoomConfigResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ValidateRoomConfig(::grpc::ClientContext* context, const ::api::v1alpha1::ValidateRoomConfigRequest* request, ::api::v1alpha1::ValidateRoomConfigResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Get room generation templates
      virtual void ListRoomTemplates(::grpc::ClientContext* context, const ::api::v1alpha1::ListRoomTemplatesRequest* request, ::api::v1alpha1::ListRoomTemplatesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListRoomTemplates(::grpc::ClientContext* context, const ::api::v1alpha1::ListRoomTemplatesRequest* request, ::api::v1alpha1::ListRoomTemplatesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Create custom room template
      virtual void CreateRoomTemplate(::grpc::ClientContext* context, const ::api::v1alpha1::CreateRoomTemplateRequest* request, ::api::v1alpha1::CreateRoomTemplateResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateRoomTemplate(::grpc::ClientContext* context, const ::api::v1alpha1::CreateRoomTemplateRequest* request, ::api::v1alpha1::CreateRoomTemplateResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GenerateRoomResponse>* AsyncGenerateRoomRaw(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateRoomRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GenerateRoomResponse>* PrepareAsyncGenerateRoomRaw(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateRoomRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GetRoomDetailsResponse>* AsyncGetRoomDetailsRaw(::grpc::ClientContext* context, const ::api::v1alpha1::GetRoomDetailsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GetRoomDetailsResponse>* PrepareAsyncGetRoomDetailsRaw(::grpc::ClientContext* context, const ::api::v1alpha1::GetRoomDetailsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ListRoomsResponse>* AsyncListRoomsRaw(::grpc::ClientContext* context, const ::api::v1alpha1::ListRoomsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ListRoomsResponse>* PrepareAsyncListRoomsRaw(::grpc::ClientContext* context, const ::api::v1alpha1::ListRoomsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::UpdateRoomResponse>* AsyncUpdateRoomRaw(::grpc::ClientContext* context, const ::api::v1alpha1::UpdateRoomRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::UpdateRoomResponse>* PrepareAsyncUpdateRoomRaw(::grpc::ClientContext* context, const ::api::v1alpha1::UpdateRoomRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::DeleteRoomResponse>* AsyncDeleteRoomRaw(::grpc::ClientContext* context, const ::api::v1alpha1::DeleteRoomRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::DeleteRoomResponse>* PrepareAsyncDeleteRoomRaw(::grpc::ClientContext* context, const ::api::v1alpha1::DeleteRoomRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ValidateRoomConfigResponse>* AsyncValidateRoomConfigRaw(::grpc::ClientContext* context, const ::api::v1alpha1::ValidateRoomConfigRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ValidateRoomConfigResponse>* PrepareAsyncValidateRoomConfigRaw(::grpc::ClientContext* context, const ::api::v1alpha1::ValidateRoomConfigRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ListRoomTemplatesResponse>* AsyncListRoomTemplatesRaw(::grpc::ClientContext* context, const ::api::v1alpha1::ListRoomTemplatesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ListRoomTemplatesResponse>* PrepareAsyncListRoomTemplatesRaw(::grpc::ClientContext* context, const ::api::v1alpha1::ListRoomTemplatesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::CreateRoomTemplateResponse>* AsyncCreateRoomTemplateRaw(::grpc::ClientContext* context, const ::api::v1alpha1::CreateRoomTemplateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::CreateRoomTemplateResponse>* PrepareAsyncCreateRoomTemplateRaw(::grpc::ClientContext* context, const ::api::v1alpha1::CreateRoomTemplateRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status GenerateRoom(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateRoomRequest& request, ::api::v1alpha1::GenerateRoomResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GenerateRoomResponse>> AsyncGenerateRoom(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GenerateRoomResponse>>(AsyncGenerateRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GenerateRoomResponse>> PrepareAsyncGenerateRoom(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GenerateRoomResponse>>(PrepareAsyncGenerateRoomRaw(context, request, cq));
    }
    ::grpc::Status GetRoomDetails(::grpc::ClientContext* context, const ::api::v1alpha1::GetRoomDetailsRequest& request, ::api::v1alpha1::GetRoomDetailsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GetRoomDetailsResponse>> AsyncGetRoomDetails(::grpc::ClientContext* context, const ::api::v1alpha1::GetRoomDetailsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GetRoomDetailsResponse>>(AsyncGetRoomDetailsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GetRoomDetailsResponse>> PrepareAsyncGetRoomDetails(::grpc::ClientContext* context, const ::api::v1alpha1::GetRoomDetailsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GetRoomDetailsResponse>>(PrepareAsyncGetRoomDetailsRaw(context, request, cq));
    }
    ::grpc::Status ListRooms(::grpc::ClientContext* context, const ::api::v1alpha1::ListRoomsRequest& request, ::api::v1alpha1::ListRoomsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ListRoomsResponse>> AsyncListRooms(::grpc::ClientContext* context, const ::api::v1alpha1::ListRoomsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ListRoomsResponse>>(AsyncListRoomsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ListRoomsResponse>> PrepareAsyncListRooms(::grpc::ClientContext* context, const ::api::v1alpha1::ListRoomsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ListRoomsResponse>>(PrepareAsyncListRoomsRaw(context, request, cq));
    }
    ::grpc::Status UpdateRoom(::grpc::ClientContext* context, const ::api::v1alpha1::UpdateRoomRequest& request, ::api::v1alpha1::UpdateRoomResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::UpdateRoomResponse>> AsyncUpdateRoom(::grpc::ClientContext* context, const ::api::v1alpha1::UpdateRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::UpdateRoomResponse>>(AsyncUpdateRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::UpdateRoomResponse>> PrepareAsyncUpdateRoom(::grpc::ClientContext* context, const ::api::v1alpha1::UpdateRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::UpdateRoomResponse>>(PrepareAsyncUpdateRoomRaw(context, request, cq));
    }
    ::grpc::Status DeleteRoom(::grpc::ClientContext* context, const ::api::v1alpha1::DeleteRoomRequest& request, ::api::v1alpha1::DeleteRoomResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::DeleteRoomResponse>> AsyncDeleteRoom(::grpc::ClientContext* context, const ::api::v1alpha1::DeleteRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::DeleteRoomResponse>>(AsyncDeleteRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::DeleteRoomResponse>> PrepareAsyncDeleteRoom(::grpc::ClientContext* context, const ::api::v1alpha1::DeleteRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::DeleteRoomResponse>>(PrepareAsyncDeleteRoomRaw(context, request, cq));
    }
    ::grpc::Status ValidateRoomConfig(::grpc::ClientContext* context, const ::api::v1alpha1::ValidateRoomConfigRequest& request, ::api::v1alpha1::ValidateRoomConfigResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ValidateRoomConfigResponse>> AsyncValidateRoomConfig(::grpc::ClientContext* context, const ::api::v1alpha1::ValidateRoomConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ValidateRoomConfigResponse>>(AsyncValidateRoomConfigRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ValidateRoomConfigResponse>> PrepareAsyncValidateRoomConfig(::grpc::ClientContext* context, const ::api::v1alpha1::ValidateRoomConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ValidateRoomConfigResponse>>(PrepareAsyncValidateRoomConfigRaw(context, request, cq));
    }
    ::grpc::Status ListRoomTemplates(::grpc::ClientContext* context, const ::api::v1alpha1::ListRoomTemplatesRequest& request, ::api::v1alpha1::ListRoomTemplatesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ListRoomTemplatesResponse>> AsyncListRoomTemplates(::grpc::ClientContext* context, const ::api::v1alpha1::ListRoomTemplatesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ListRoomTemplatesResponse>>(AsyncListRoomTemplatesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ListRoomTemplatesResponse>> PrepareAsyncListRoomTemplates(::grpc::ClientContext* context, const ::api::v1alpha1::ListRoomTemplatesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ListRoomTemplatesResponse>>(PrepareAsyncListRoomTemplatesRaw(context, request, cq));
    }
    ::grpc::Status CreateRoomTemplate(::grpc::ClientContext* context, const ::api::v1alpha1::CreateRoomTemplateRequest& request, ::api::v1alpha1::CreateRoomTemplateResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::CreateRoomTemplateResponse>> AsyncCreateRoomTemplate(::grpc::ClientContext* context, const ::api::v1alpha1::CreateRoomTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::CreateRoomTemplateResponse>>(AsyncCreateRoomTemplateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::CreateRoomTemplateResponse>> PrepareAsyncCreateRoomTemplate(::grpc::ClientContext* context, const ::api::v1alpha1::CreateRoomTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::CreateRoomTemplateResponse>>(PrepareAsyncCreateRoomTemplateRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void GenerateRoom(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateRoomRequest* request, ::api::v1alpha1::GenerateRoomResponse* response, std::function<void(::grpc::Status)>) override;
      void GenerateRoom(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateRoomRequest* request, ::api::v1alpha1::GenerateRoomResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetRoomDetails(::grpc::ClientContext* context, const ::api::v1alpha1::GetRoomDetailsRequest* request, ::api::v1alpha1::GetRoomDetailsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetRoomDetails(::grpc::ClientContext* context, const ::api::v1alpha1::GetRoomDetailsRequest* request, ::api::v1alpha1::GetRoomDetailsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListRooms(::grpc::ClientContext* context, const ::api::v1alpha1::ListRoomsRequest* request, ::api::v1alpha1::ListRoomsResponse* response, std::function<void(::grpc::Status)>) override;
      void ListRooms(::grpc::ClientContext* context, const ::api::v1alpha1::ListRoomsRequest* request, ::api::v1alpha1::ListRoomsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateRoom(::grpc::ClientContext* context, const ::api::v1alpha1::UpdateRoomRequest* request, ::api::v1alpha1::UpdateRoomResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateRoom(::grpc::ClientContext* context, const ::api::v1alpha1::UpdateRoomRequest* request, ::api::v1alpha1::UpdateRoomResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteRoom(::grpc::ClientContext* context, const ::api::v1alpha1::DeleteRoomRequest* request, ::api::v1alpha1::DeleteRoomResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteRoom(::grpc::ClientContext* context, const ::api::v1alpha1::DeleteRoomRequest* request, ::api::v1alpha1::DeleteRoomResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ValidateRoomConfig(::grpc::ClientContext* context, const ::api::v1alpha1::ValidateRoomConfigRequest* request, ::api::v1alpha1::ValidateRoomConfigResponse* response, std::function<void(::grpc::Status)>) override;
      void ValidateRoomConfig(::grpc::ClientContext* context, const ::api::v1alpha1::ValidateRoomConfigRequest* request, ::api::v1alpha1::ValidateRoomConfigResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListRoomTemplates(::grpc::ClientContext* context, const ::api::v1alpha1::ListRoomTemplatesRequest* request, ::api::v1alpha1::ListRoomTemplatesResponse* response, std::function<void(::grpc::Status)>) override;
      void ListRoomTemplates(::grpc::ClientContext* context, const ::api::v1alpha1::ListRoomTemplatesRequest* request, ::api::v1alpha1::ListRoomTemplatesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateRoomTemplate(::grpc::ClientContext* context, const ::api::v1alpha1::CreateRoomTemplateRequest* request, ::api::v1alpha1::CreateRoomTemplateResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateRoomTemplate(::grpc::ClientContext* context, const ::api::v1alpha1::CreateRoomTemplateRequest* request, ::api::v1alpha1::CreateRoomTemplateResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GenerateRoomResponse>* AsyncGenerateRoomRaw(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateRoomRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GenerateRoomResponse>* PrepareAsyncGenerateRoomRaw(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateRoomRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GetRoomDetailsResponse>* AsyncGetRoomDetailsRaw(::grpc::ClientContext* context, const ::api::v1alpha1::GetRoomDetailsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GetRoomDetailsResponse>* PrepareAsyncGetRoomDetailsRaw(::grpc::ClientContext* context, const ::api::v1alpha1::GetRoomDetailsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ListRoomsResponse>* AsyncListRoomsRaw(::grpc::ClientContext* context, const ::api::v1alpha1::ListRoomsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ListRoomsResponse>* PrepareAsyncListRoomsRaw(::grpc::ClientContext* context, const ::api::v1alpha1::ListRoomsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::UpdateRoomResponse>* AsyncUpdateRoomRaw(::grpc::ClientContext* context, const ::api::v1alpha1::UpdateRoomRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::UpdateRoomResponse>* PrepareAsyncUpdateRoomRaw(::grpc::ClientContext* context, const ::api::v1alpha1::UpdateRoomRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::DeleteRoomResponse>* AsyncDeleteRoomRaw(::grpc::ClientContext* context, const ::api::v1alpha1::DeleteRoomRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::DeleteRoomResponse>* PrepareAsyncDeleteRoomRaw(::grpc::ClientContext* context, const ::api::v1alpha1::DeleteRoomRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ValidateRoomConfigResponse>* AsyncValidateRoomConfigRaw(::grpc::ClientContext* context, const ::api::v1alpha1::ValidateRoomConfigRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ValidateRoomConfigResponse>* PrepareAsyncValidateRoomConfigRaw(::grpc::ClientContext* context, const ::api::v1alpha1::ValidateRoomConfigRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ListRoomTemplatesResponse>* AsyncListRoomTemplatesRaw(::grpc::ClientContext* context, const ::api::v1alpha1::ListRoomTemplatesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ListRoomTemplatesResponse>* PrepareAsyncListRoomTemplatesRaw(::grpc::ClientContext* context, const ::api::v1alpha1::ListRoomTemplatesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::CreateRoomTemplateResponse>* AsyncCreateRoomTemplateRaw(::grpc::ClientContext* context, const ::api::v1alpha1::CreateRoomTemplateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::CreateRoomTemplateResponse>* PrepareAsyncCreateRoomTemplateRaw(::grpc::ClientContext* context, const ::api::v1alpha1::CreateRoomTemplateRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_GenerateRoom_;
    const ::grpc::internal::RpcMethod rpcmethod_GetRoomDetails_;
    const ::grpc::internal::RpcMethod rpcmethod_ListRooms_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateRoom_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteRoom_;
    const ::grpc::internal::RpcMethod rpcmethod_ValidateRoomConfig_;
    const ::grpc::internal::RpcMethod rpcmethod_ListRoomTemplates_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateRoomTemplate_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Generate a new room environment
    virtual ::grpc::Status GenerateRoom(::grpc::ServerContext* context, const ::api::v1alpha1::GenerateRoomRequest* request, ::api::v1alpha1::GenerateRoomResponse* response);
    // Get details of an existing room
    virtual ::grpc::Status GetRoomDetails(::grpc::ServerContext* context, const ::api::v1alpha1::GetRoomDetailsRequest* request, ::api::v1alpha1::GetRoomDetailsResponse* response);
    // List rooms with filtering and pagination
    virtual ::grpc::Status ListRooms(::grpc::ServerContext* context, const ::api::v1alpha1::ListRoomsRequest* request, ::api::v1alpha1::ListRoomsResponse* response);
    // Update room configuration (regenerates structure)
    virtual ::grpc::Status UpdateRoom(::grpc::ServerContext* context, const ::api::v1alpha1::UpdateRoomRequest* request, ::api::v1alpha1::UpdateRoomResponse* response);
    // Delete a room
    virtual ::grpc::Status DeleteRoom(::grpc::ServerContext* context, const ::api::v1alpha1::DeleteRoomRequest* request, ::api::v1alpha1::DeleteRoomResponse* response);
    // Validate room configuration before generation
    virtual ::grpc::Status ValidateRoomConfig(::grpc::ServerContext* context, const ::api::v1alpha1::ValidateRoomConfigRequest* request, ::api::v1alpha1::ValidateRoomConfigResponse* response);
    // Get room generation templates
    virtual ::grpc::Status ListRoomTemplates(::grpc::ServerContext* context, const ::api::v1alpha1::ListRoomTemplatesRequest* request, ::api::v1alpha1::ListRoomTemplatesResponse* response);
    // Create custom room template
    virtual ::grpc::Status CreateRoomTemplate(::grpc::ServerContext* context, const ::api::v1alpha1::CreateRoomTemplateRequest* request, ::api::v1alpha1::CreateRoomTemplateResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_GenerateRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GenerateRoom() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_GenerateRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GenerateRoom(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GenerateRoomRequest* /*request*/, ::api::v1alpha1::GenerateRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGenerateRoom(::grpc::ServerContext* context, ::api::v1alpha1::GenerateRoomRequest* request, ::grpc::ServerAsyncResponseWriter< ::api::v1alpha1::GenerateRoomResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRoomDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetRoomDetails() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetRoomDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRoomDetails(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GetRoomDetailsRequest* /*request*/, ::api::v1alpha1::GetRoomDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRoomDetails(::grpc::ServerContext* context, ::api::v1alpha1::GetRoomDetailsRequest* request, ::grpc::ServerAsyncResponseWriter< ::api::v1alpha1::GetRoomDetailsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListRooms : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListRooms() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_ListRooms() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRooms(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ListRoomsRequest* /*request*/, ::api::v1alpha1::ListRoomsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListRooms(::grpc::ServerContext* context, ::api::v1alpha1::ListRoomsRequest* request, ::grpc::ServerAsyncResponseWriter< ::api::v1alpha1::ListRoomsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateRoom() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_UpdateRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateRoom(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::UpdateRoomRequest* /*request*/, ::api::v1alpha1::UpdateRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateRoom(::grpc::ServerContext* context, ::api::v1alpha1::UpdateRoomRequest* request, ::grpc::ServerAsyncResponseWriter< ::api::v1alpha1::UpdateRoomResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteRoom() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_DeleteRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRoom(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::DeleteRoomRequest* /*request*/, ::api::v1alpha1::DeleteRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteRoom(::grpc::ServerContext* context, ::api::v1alpha1::DeleteRoomRequest* request, ::grpc::ServerAsyncResponseWriter< ::api::v1alpha1::DeleteRoomResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ValidateRoomConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ValidateRoomConfig() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_ValidateRoomConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateRoomConfig(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ValidateRoomConfigRequest* /*request*/, ::api::v1alpha1::ValidateRoomConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestValidateRoomConfig(::grpc::ServerContext* context, ::api::v1alpha1::ValidateRoomConfigRequest* request, ::grpc::ServerAsyncResponseWriter< ::api::v1alpha1::ValidateRoomConfigResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListRoomTemplates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListRoomTemplates() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_ListRoomTemplates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRoomTemplates(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ListRoomTemplatesRequest* /*request*/, ::api::v1alpha1::ListRoomTemplatesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListRoomTemplates(::grpc::ServerContext* context, ::api::v1alpha1::ListRoomTemplatesRequest* request, ::grpc::ServerAsyncResponseWriter< ::api::v1alpha1::ListRoomTemplatesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateRoomTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateRoomTemplate() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_CreateRoomTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRoomTemplate(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::CreateRoomTemplateRequest* /*request*/, ::api::v1alpha1::CreateRoomTemplateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateRoomTemplate(::grpc::ServerContext* context, ::api::v1alpha1::CreateRoomTemplateRequest* request, ::grpc::ServerAsyncResponseWriter< ::api::v1alpha1::CreateRoomTemplateResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_GenerateRoom<WithAsyncMethod_GetRoomDetails<WithAsyncMethod_ListRooms<WithAsyncMethod_UpdateRoom<WithAsyncMethod_DeleteRoom<WithAsyncMethod_ValidateRoomConfig<WithAsyncMethod_ListRoomTemplates<WithAsyncMethod_CreateRoomTemplate<Service > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_GenerateRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GenerateRoom() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::GenerateRoomRequest, ::api::v1alpha1::GenerateRoomResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::api::v1alpha1::GenerateRoomRequest* request, ::api::v1alpha1::GenerateRoomResponse* response) { return this->GenerateRoom(context, request, response); }));}
    void SetMessageAllocatorFor_GenerateRoom(
        ::grpc::MessageAllocator< ::api::v1alpha1::GenerateRoomRequest, ::api::v1alpha1::GenerateRoomResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::GenerateRoomRequest, ::api::v1alpha1::GenerateRoomResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GenerateRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GenerateRoom(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GenerateRoomRequest* /*request*/, ::api::v1alpha1::GenerateRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GenerateRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::api::v1alpha1::GenerateRoomRequest* /*request*/, ::api::v1alpha1::GenerateRoomResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetRoomDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetRoomDetails() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::GetRoomDetailsRequest, ::api::v1alpha1::GetRoomDetailsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::api::v1alpha1::GetRoomDetailsRequest* request, ::api::v1alpha1::GetRoomDetailsResponse* response) { return this->GetRoomDetails(context, request, response); }));}
    void SetMessageAllocatorFor_GetRoomDetails(
        ::grpc::MessageAllocator< ::api::v1alpha1::GetRoomDetailsRequest, ::api::v1alpha1::GetRoomDetailsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::GetRoomDetailsRequest, ::api::v1alpha1::GetRoomDetailsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetRoomDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRoomDetails(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GetRoomDetailsRequest* /*request*/, ::api::v1alpha1::GetRoomDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRoomDetails(
      ::grpc::CallbackServerContext* /*context*/, const ::api::v1alpha1::GetRoomDetailsRequest* /*request*/, ::api::v1alpha1::GetRoomDetailsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListRooms : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListRooms() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::ListRoomsRequest, ::api::v1alpha1::ListRoomsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::api::v1alpha1::ListRoomsRequest* request, ::api::v1alpha1::ListRoomsResponse* response) { return this->ListRooms(context, request, response); }));}
    void SetMessageAllocatorFor_ListRooms(
        ::grpc::MessageAllocator< ::api::v1alpha1::ListRoomsRequest, ::api::v1alpha1::ListRoomsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::ListRoomsRequest, ::api::v1alpha1::ListRoomsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListRooms() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRooms(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ListRoomsRequest* /*request*/, ::api::v1alpha1::ListRoomsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListRooms(
      ::grpc::CallbackServerContext* /*context*/, const ::api::v1alpha1::ListRoomsRequest* /*request*/, ::api::v1alpha1::ListRoomsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateRoom() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::UpdateRoomRequest, ::api::v1alpha1::UpdateRoomResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::api::v1alpha1::UpdateRoomRequest* request, ::api::v1alpha1::UpdateRoomResponse* response) { return this->UpdateRoom(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateRoom(
        ::grpc::MessageAllocator< ::api::v1alpha1::UpdateRoomRequest, ::api::v1alpha1::UpdateRoomResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::UpdateRoomRequest, ::api::v1alpha1::UpdateRoomResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateRoom(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::UpdateRoomRequest* /*request*/, ::api::v1alpha1::UpdateRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::api::v1alpha1::UpdateRoomRequest* /*request*/, ::api::v1alpha1::UpdateRoomResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteRoom() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::DeleteRoomRequest, ::api::v1alpha1::DeleteRoomResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::api::v1alpha1::DeleteRoomRequest* request, ::api::v1alpha1::DeleteRoomResponse* response) { return this->DeleteRoom(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteRoom(
        ::grpc::MessageAllocator< ::api::v1alpha1::DeleteRoomRequest, ::api::v1alpha1::DeleteRoomResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::DeleteRoomRequest, ::api::v1alpha1::DeleteRoomResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRoom(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::DeleteRoomRequest* /*request*/, ::api::v1alpha1::DeleteRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::api::v1alpha1::DeleteRoomRequest* /*request*/, ::api::v1alpha1::DeleteRoomResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ValidateRoomConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ValidateRoomConfig() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::ValidateRoomConfigRequest, ::api::v1alpha1::ValidateRoomConfigResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::api::v1alpha1::ValidateRoomConfigRequest* request, ::api::v1alpha1::ValidateRoomConfigResponse* response) { return this->ValidateRoomConfig(context, request, response); }));}
    void SetMessageAllocatorFor_ValidateRoomConfig(
        ::grpc::MessageAllocator< ::api::v1alpha1::ValidateRoomConfigRequest, ::api::v1alpha1::ValidateRoomConfigResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::ValidateRoomConfigRequest, ::api::v1alpha1::ValidateRoomConfigResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ValidateRoomConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateRoomConfig(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ValidateRoomConfigRequest* /*request*/, ::api::v1alpha1::ValidateRoomConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ValidateRoomConfig(
      ::grpc::CallbackServerContext* /*context*/, const ::api::v1alpha1::ValidateRoomConfigRequest* /*request*/, ::api::v1alpha1::ValidateRoomConfigResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListRoomTemplates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListRoomTemplates() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::ListRoomTemplatesRequest, ::api::v1alpha1::ListRoomTemplatesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::api::v1alpha1::ListRoomTemplatesRequest* request, ::api::v1alpha1::ListRoomTemplatesResponse* response) { return this->ListRoomTemplates(context, request, response); }));}
    void SetMessageAllocatorFor_ListRoomTemplates(
        ::grpc::MessageAllocator< ::api::v1alpha1::ListRoomTemplatesRequest, ::api::v1alpha1::ListRoomTemplatesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::ListRoomTemplatesRequest, ::api::v1alpha1::ListRoomTemplatesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListRoomTemplates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRoomTemplates(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ListRoomTemplatesRequest* /*request*/, ::api::v1alpha1::ListRoomTemplatesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListRoomTemplates(
      ::grpc::CallbackServerContext* /*context*/, const ::api::v1alpha1::ListRoomTemplatesRequest* /*request*/, ::api::v1alpha1::ListRoomTemplatesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateRoomTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateRoomTemplate() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::CreateRoomTemplateRequest, ::api::v1alpha1::CreateRoomTemplateResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::api::v1alpha1::CreateRoomTemplateRequest* request, ::api::v1alpha1::CreateRoomTemplateResponse* response) { return this->CreateRoomTemplate(context, request, response); }));}
    void SetMessageAllocatorFor_CreateRoomTemplate(
        ::grpc::MessageAllocator< ::api::v1alpha1::CreateRoomTemplateRequest, ::api::v1alpha1::CreateRoomTemplateResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::CreateRoomTemplateRequest, ::api::v1alpha1::CreateRoomTemplateResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateRoomTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRoomTemplate(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::CreateRoomTemplateRequest* /*request*/, ::api::v1alpha1::CreateRoomTemplateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateRoomTemplate(
      ::grpc::CallbackServerContext* /*context*/, const ::api::v1alpha1::CreateRoomTemplateRequest* /*request*/, ::api::v1alpha1::CreateRoomTemplateResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_GenerateRoom<WithCallbackMethod_GetRoomDetails<WithCallbackMethod_ListRooms<WithCallbackMethod_UpdateRoom<WithCallbackMethod_DeleteRoom<WithCallbackMethod_ValidateRoomConfig<WithCallbackMethod_ListRoomTemplates<WithCallbackMethod_CreateRoomTemplate<Service > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_GenerateRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GenerateRoom() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_GenerateRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GenerateRoom(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GenerateRoomRequest* /*request*/, ::api::v1alpha1::GenerateRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRoomDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetRoomDetails() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetRoomDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRoomDetails(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GetRoomDetailsRequest* /*request*/, ::api::v1alpha1::GetRoomDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListRooms : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListRooms() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_ListRooms() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRooms(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ListRoomsRequest* /*request*/, ::api::v1alpha1::ListRoomsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateRoom() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_UpdateRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateRoom(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::UpdateRoomRequest* /*request*/, ::api::v1alpha1::UpdateRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteRoom() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_DeleteRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRoom(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::DeleteRoomRequest* /*request*/, ::api::v1alpha1::DeleteRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ValidateRoomConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ValidateRoomConfig() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_ValidateRoomConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateRoomConfig(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ValidateRoomConfigRequest* /*request*/, ::api::v1alpha1::ValidateRoomConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListRoomTemplates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListRoomTemplates() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_ListRoomTemplates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRoomTemplates(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ListRoomTemplatesRequest* /*request*/, ::api::v1alpha1::ListRoomTemplatesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateRoomTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateRoomTemplate() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_CreateRoomTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRoomTemplate(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::CreateRoomTemplateRequest* /*request*/, ::api::v1alpha1::CreateRoomTemplateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_GenerateRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GenerateRoom() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_GenerateRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GenerateRoom(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GenerateRoomRequest* /*request*/, ::api::v1alpha1::GenerateRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGenerateRoom(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetRoomDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetRoomDetails() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_GetRoomDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRoomDetails(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GetRoomDetailsRequest* /*request*/, ::api::v1alpha1::GetRoomDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRoomDetails(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListRooms : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListRooms() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_ListRooms() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRooms(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ListRoomsRequest* /*request*/, ::api::v1alpha1::ListRoomsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListRooms(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateRoom() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_UpdateRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateRoom(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::UpdateRoomRequest* /*request*/, ::api::v1alpha1::UpdateRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateRoom(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteRoom() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_DeleteRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRoom(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::DeleteRoomRequest* /*request*/, ::api::v1alpha1::DeleteRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteRoom(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ValidateRoomConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ValidateRoomConfig() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_ValidateRoomConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateRoomConfig(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ValidateRoomConfigRequest* /*request*/, ::api::v1alpha1::ValidateRoomConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestValidateRoomConfig(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListRoomTemplates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListRoomTemplates() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_ListRoomTemplates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRoomTemplates(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ListRoomTemplatesRequest* /*request*/, ::api::v1alpha1::ListRoomTemplatesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListRoomTemplates(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateRoomTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateRoomTemplate() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_CreateRoomTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRoomTemplate(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::CreateRoomTemplateRequest* /*request*/, ::api::v1alpha1::CreateRoomTemplateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateRoomTemplate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GenerateRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GenerateRoom() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GenerateRoom(context, request, response); }));
    }
    ~WithRawCallbackMethod_GenerateRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GenerateRoom(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GenerateRoomRequest* /*request*/, ::api::v1alpha1::GenerateRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GenerateRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetRoomDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetRoomDetails() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetRoomDetails(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetRoomDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRoomDetails(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GetRoomDetailsRequest* /*request*/, ::api::v1alpha1::GetRoomDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRoomDetails(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListRooms : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListRooms() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListRooms(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListRooms() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRooms(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ListRoomsRequest* /*request*/, ::api::v1alpha1::ListRoomsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListRooms(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateRoom() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateRoom(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateRoom(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::UpdateRoomRequest* /*request*/, ::api::v1alpha1::UpdateRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteRoom() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteRoom(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRoom(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::DeleteRoomRequest* /*request*/, ::api::v1alpha1::DeleteRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ValidateRoomConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ValidateRoomConfig() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ValidateRoomConfig(context, request, response); }));
    }
    ~WithRawCallbackMethod_ValidateRoomConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateRoomConfig(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ValidateRoomConfigRequest* /*request*/, ::api::v1alpha1::ValidateRoomConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ValidateRoomConfig(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListRoomTemplates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListRoomTemplates() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListRoomTemplates(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListRoomTemplates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRoomTemplates(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ListRoomTemplatesRequest* /*request*/, ::api::v1alpha1::ListRoomTemplatesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListRoomTemplates(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateRoomTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateRoomTemplate() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateRoomTemplate(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateRoomTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRoomTemplate(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::CreateRoomTemplateRequest* /*request*/, ::api::v1alpha1::CreateRoomTemplateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateRoomTemplate(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GenerateRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GenerateRoom() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::v1alpha1::GenerateRoomRequest, ::api::v1alpha1::GenerateRoomResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::api::v1alpha1::GenerateRoomRequest, ::api::v1alpha1::GenerateRoomResponse>* streamer) {
                       return this->StreamedGenerateRoom(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GenerateRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GenerateRoom(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GenerateRoomRequest* /*request*/, ::api::v1alpha1::GenerateRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGenerateRoom(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::v1alpha1::GenerateRoomRequest,::api::v1alpha1::GenerateRoomResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRoomDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetRoomDetails() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::v1alpha1::GetRoomDetailsRequest, ::api::v1alpha1::GetRoomDetailsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::api::v1alpha1::GetRoomDetailsRequest, ::api::v1alpha1::GetRoomDetailsResponse>* streamer) {
                       return this->StreamedGetRoomDetails(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetRoomDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRoomDetails(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GetRoomDetailsRequest* /*request*/, ::api::v1alpha1::GetRoomDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRoomDetails(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::v1alpha1::GetRoomDetailsRequest,::api::v1alpha1::GetRoomDetailsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListRooms : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListRooms() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::v1alpha1::ListRoomsRequest, ::api::v1alpha1::ListRoomsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::api::v1alpha1::ListRoomsRequest, ::api::v1alpha1::ListRoomsResponse>* streamer) {
                       return this->StreamedListRooms(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListRooms() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListRooms(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ListRoomsRequest* /*request*/, ::api::v1alpha1::ListRoomsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListRooms(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::v1alpha1::ListRoomsRequest,::api::v1alpha1::ListRoomsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateRoom() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::v1alpha1::UpdateRoomRequest, ::api::v1alpha1::UpdateRoomResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::api::v1alpha1::UpdateRoomRequest, ::api::v1alpha1::UpdateRoomResponse>* streamer) {
                       return this->StreamedUpdateRoom(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateRoom(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::UpdateRoomRequest* /*request*/, ::api::v1alpha1::UpdateRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateRoom(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::v1alpha1::UpdateRoomRequest,::api::v1alpha1::UpdateRoomResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteRoom() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::v1alpha1::DeleteRoomRequest, ::api::v1alpha1::DeleteRoomResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::api::v1alpha1::DeleteRoomRequest, ::api::v1alpha1::DeleteRoomResponse>* streamer) {
                       return this->StreamedDeleteRoom(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteRoom(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::DeleteRoomRequest* /*request*/, ::api::v1alpha1::DeleteRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteRoom(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::v1alpha1::DeleteRoomRequest,::api::v1alpha1::DeleteRoomResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ValidateRoomConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ValidateRoomConfig() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::v1alpha1::ValidateRoomConfigRequest, ::api::v1alpha1::ValidateRoomConfigResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::api::v1alpha1::ValidateRoomConfigRequest, ::api::v1alpha1::ValidateRoomConfigResponse>* streamer) {
                       return this->StreamedValidateRoomConfig(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ValidateRoomConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ValidateRoomConfig(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ValidateRoomConfigRequest* /*request*/, ::api::v1alpha1::ValidateRoomConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedValidateRoomConfig(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::v1alpha1::ValidateRoomConfigRequest,::api::v1alpha1::ValidateRoomConfigResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListRoomTemplates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListRoomTemplates() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::v1alpha1::ListRoomTemplatesRequest, ::api::v1alpha1::ListRoomTemplatesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::api::v1alpha1::ListRoomTemplatesRequest, ::api::v1alpha1::ListRoomTemplatesResponse>* streamer) {
                       return this->StreamedListRoomTemplates(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListRoomTemplates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListRoomTemplates(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ListRoomTemplatesRequest* /*request*/, ::api::v1alpha1::ListRoomTemplatesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListRoomTemplates(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::v1alpha1::ListRoomTemplatesRequest,::api::v1alpha1::ListRoomTemplatesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateRoomTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateRoomTemplate() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::v1alpha1::CreateRoomTemplateRequest, ::api::v1alpha1::CreateRoomTemplateResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::api::v1alpha1::CreateRoomTemplateRequest, ::api::v1alpha1::CreateRoomTemplateResponse>* streamer) {
                       return this->StreamedCreateRoomTemplate(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateRoomTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateRoomTemplate(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::CreateRoomTemplateRequest* /*request*/, ::api::v1alpha1::CreateRoomTemplateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateRoomTemplate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::v1alpha1::CreateRoomTemplateRequest,::api::v1alpha1::CreateRoomTemplateResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_GenerateRoom<WithStreamedUnaryMethod_GetRoomDetails<WithStreamedUnaryMethod_ListRooms<WithStreamedUnaryMethod_UpdateRoom<WithStreamedUnaryMethod_DeleteRoom<WithStreamedUnaryMethod_ValidateRoomConfig<WithStreamedUnaryMethod_ListRoomTemplates<WithStreamedUnaryMethod_CreateRoomTemplate<Service > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_GenerateRoom<WithStreamedUnaryMethod_GetRoomDetails<WithStreamedUnaryMethod_ListRooms<WithStreamedUnaryMethod_UpdateRoom<WithStreamedUnaryMethod_DeleteRoom<WithStreamedUnaryMethod_ValidateRoomConfig<WithStreamedUnaryMethod_ListRoomTemplates<WithStreamedUnaryMethod_CreateRoomTemplate<Service > > > > > > > > StreamedService;
};

}  // namespace v1alpha1
}  // namespace api


#include <grpcpp/ports_undef.inc>
#endif  // GRPC_api_2fv1alpha1_2froom_5fenvironments_2eproto__INCLUDED
