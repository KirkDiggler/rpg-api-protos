// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: api/v1alpha1/room_selectables.proto
#ifndef GRPC_api_2fv1alpha1_2froom_5fselectables_2eproto__INCLUDED
#define GRPC_api_2fv1alpha1_2froom_5fselectables_2eproto__INCLUDED

#include "api/v1alpha1/room_selectables.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>
#include <grpcpp/ports_def.inc>

namespace api {
namespace v1alpha1 {

// Selection table service for random generation and content selection
// Handles loot tables, encounter tables, and other random selection systems
class SelectionTableService final {
 public:
  static constexpr char const* service_full_name() {
    return "api.v1alpha1.SelectionTableService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Selection table operations
    virtual ::grpc::Status CreateSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::CreateSelectionTableRequest& request, ::api::v1alpha1::CreateSelectionTableResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::CreateSelectionTableResponse>> AsyncCreateSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::CreateSelectionTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::CreateSelectionTableResponse>>(AsyncCreateSelectionTableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::CreateSelectionTableResponse>> PrepareAsyncCreateSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::CreateSelectionTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::CreateSelectionTableResponse>>(PrepareAsyncCreateSelectionTableRaw(context, request, cq));
    }
    virtual ::grpc::Status GetSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::GetSelectionTableRequest& request, ::api::v1alpha1::GetSelectionTableResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GetSelectionTableResponse>> AsyncGetSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::GetSelectionTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GetSelectionTableResponse>>(AsyncGetSelectionTableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GetSelectionTableResponse>> PrepareAsyncGetSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::GetSelectionTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GetSelectionTableResponse>>(PrepareAsyncGetSelectionTableRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::UpdateSelectionTableRequest& request, ::api::v1alpha1::UpdateSelectionTableResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::UpdateSelectionTableResponse>> AsyncUpdateSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::UpdateSelectionTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::UpdateSelectionTableResponse>>(AsyncUpdateSelectionTableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::UpdateSelectionTableResponse>> PrepareAsyncUpdateSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::UpdateSelectionTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::UpdateSelectionTableResponse>>(PrepareAsyncUpdateSelectionTableRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::DeleteSelectionTableRequest& request, ::api::v1alpha1::DeleteSelectionTableResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::DeleteSelectionTableResponse>> AsyncDeleteSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::DeleteSelectionTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::DeleteSelectionTableResponse>>(AsyncDeleteSelectionTableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::DeleteSelectionTableResponse>> PrepareAsyncDeleteSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::DeleteSelectionTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::DeleteSelectionTableResponse>>(PrepareAsyncDeleteSelectionTableRaw(context, request, cq));
    }
    virtual ::grpc::Status ListSelectionTables(::grpc::ClientContext* context, const ::api::v1alpha1::ListSelectionTablesRequest& request, ::api::v1alpha1::ListSelectionTablesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ListSelectionTablesResponse>> AsyncListSelectionTables(::grpc::ClientContext* context, const ::api::v1alpha1::ListSelectionTablesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ListSelectionTablesResponse>>(AsyncListSelectionTablesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ListSelectionTablesResponse>> PrepareAsyncListSelectionTables(::grpc::ClientContext* context, const ::api::v1alpha1::ListSelectionTablesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ListSelectionTablesResponse>>(PrepareAsyncListSelectionTablesRaw(context, request, cq));
    }
    // Selection operations
    virtual ::grpc::Status RollOnTable(::grpc::ClientContext* context, const ::api::v1alpha1::RollOnTableRequest& request, ::api::v1alpha1::RollOnTableResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::RollOnTableResponse>> AsyncRollOnTable(::grpc::ClientContext* context, const ::api::v1alpha1::RollOnTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::RollOnTableResponse>>(AsyncRollOnTableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::RollOnTableResponse>> PrepareAsyncRollOnTable(::grpc::ClientContext* context, const ::api::v1alpha1::RollOnTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::RollOnTableResponse>>(PrepareAsyncRollOnTableRaw(context, request, cq));
    }
    virtual ::grpc::Status RollMultiple(::grpc::ClientContext* context, const ::api::v1alpha1::RollMultipleRequest& request, ::api::v1alpha1::RollMultipleResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::RollMultipleResponse>> AsyncRollMultiple(::grpc::ClientContext* context, const ::api::v1alpha1::RollMultipleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::RollMultipleResponse>>(AsyncRollMultipleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::RollMultipleResponse>> PrepareAsyncRollMultiple(::grpc::ClientContext* context, const ::api::v1alpha1::RollMultipleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::RollMultipleResponse>>(PrepareAsyncRollMultipleRaw(context, request, cq));
    }
    virtual ::grpc::Status RollWithModifiers(::grpc::ClientContext* context, const ::api::v1alpha1::RollWithModifiersRequest& request, ::api::v1alpha1::RollWithModifiersResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::RollWithModifiersResponse>> AsyncRollWithModifiers(::grpc::ClientContext* context, const ::api::v1alpha1::RollWithModifiersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::RollWithModifiersResponse>>(AsyncRollWithModifiersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::RollWithModifiersResponse>> PrepareAsyncRollWithModifiers(::grpc::ClientContext* context, const ::api::v1alpha1::RollWithModifiersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::RollWithModifiersResponse>>(PrepareAsyncRollWithModifiersRaw(context, request, cq));
    }
    // Batch operations
    virtual ::grpc::Status BatchRollTables(::grpc::ClientContext* context, const ::api::v1alpha1::BatchRollTablesRequest& request, ::api::v1alpha1::BatchRollTablesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::BatchRollTablesResponse>> AsyncBatchRollTables(::grpc::ClientContext* context, const ::api::v1alpha1::BatchRollTablesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::BatchRollTablesResponse>>(AsyncBatchRollTablesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::BatchRollTablesResponse>> PrepareAsyncBatchRollTables(::grpc::ClientContext* context, const ::api::v1alpha1::BatchRollTablesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::BatchRollTablesResponse>>(PrepareAsyncBatchRollTablesRaw(context, request, cq));
    }
    virtual ::grpc::Status GenerateEncounter(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateEncounterRequest& request, ::api::v1alpha1::GenerateEncounterResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GenerateEncounterResponse>> AsyncGenerateEncounter(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateEncounterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GenerateEncounterResponse>>(AsyncGenerateEncounterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GenerateEncounterResponse>> PrepareAsyncGenerateEncounter(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateEncounterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GenerateEncounterResponse>>(PrepareAsyncGenerateEncounterRaw(context, request, cq));
    }
    virtual ::grpc::Status GenerateLoot(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateLootRequest& request, ::api::v1alpha1::GenerateLootResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GenerateLootResponse>> AsyncGenerateLoot(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateLootRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GenerateLootResponse>>(AsyncGenerateLootRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GenerateLootResponse>> PrepareAsyncGenerateLoot(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateLootRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GenerateLootResponse>>(PrepareAsyncGenerateLootRaw(context, request, cq));
    }
    // Table management
    virtual ::grpc::Status ValidateSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::ValidateSelectionTableRequest& request, ::api::v1alpha1::ValidateSelectionTableResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ValidateSelectionTableResponse>> AsyncValidateSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::ValidateSelectionTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ValidateSelectionTableResponse>>(AsyncValidateSelectionTableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ValidateSelectionTableResponse>> PrepareAsyncValidateSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::ValidateSelectionTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ValidateSelectionTableResponse>>(PrepareAsyncValidateSelectionTableRaw(context, request, cq));
    }
    virtual ::grpc::Status GetTableStatistics(::grpc::ClientContext* context, const ::api::v1alpha1::GetTableStatisticsRequest& request, ::api::v1alpha1::GetTableStatisticsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GetTableStatisticsResponse>> AsyncGetTableStatistics(::grpc::ClientContext* context, const ::api::v1alpha1::GetTableStatisticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GetTableStatisticsResponse>>(AsyncGetTableStatisticsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GetTableStatisticsResponse>> PrepareAsyncGetTableStatistics(::grpc::ClientContext* context, const ::api::v1alpha1::GetTableStatisticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GetTableStatisticsResponse>>(PrepareAsyncGetTableStatisticsRaw(context, request, cq));
    }
    virtual ::grpc::Status ExportSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::ExportSelectionTableRequest& request, ::api::v1alpha1::ExportSelectionTableResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ExportSelectionTableResponse>> AsyncExportSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::ExportSelectionTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ExportSelectionTableResponse>>(AsyncExportSelectionTableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ExportSelectionTableResponse>> PrepareAsyncExportSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::ExportSelectionTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ExportSelectionTableResponse>>(PrepareAsyncExportSelectionTableRaw(context, request, cq));
    }
    virtual ::grpc::Status ImportSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::ImportSelectionTableRequest& request, ::api::v1alpha1::ImportSelectionTableResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ImportSelectionTableResponse>> AsyncImportSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::ImportSelectionTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ImportSelectionTableResponse>>(AsyncImportSelectionTableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ImportSelectionTableResponse>> PrepareAsyncImportSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::ImportSelectionTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ImportSelectionTableResponse>>(PrepareAsyncImportSelectionTableRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Selection table operations
      virtual void CreateSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::CreateSelectionTableRequest* request, ::api::v1alpha1::CreateSelectionTableResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::CreateSelectionTableRequest* request, ::api::v1alpha1::CreateSelectionTableResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::GetSelectionTableRequest* request, ::api::v1alpha1::GetSelectionTableResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::GetSelectionTableRequest* request, ::api::v1alpha1::GetSelectionTableResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::UpdateSelectionTableRequest* request, ::api::v1alpha1::UpdateSelectionTableResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::UpdateSelectionTableRequest* request, ::api::v1alpha1::UpdateSelectionTableResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::DeleteSelectionTableRequest* request, ::api::v1alpha1::DeleteSelectionTableResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::DeleteSelectionTableRequest* request, ::api::v1alpha1::DeleteSelectionTableResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListSelectionTables(::grpc::ClientContext* context, const ::api::v1alpha1::ListSelectionTablesRequest* request, ::api::v1alpha1::ListSelectionTablesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListSelectionTables(::grpc::ClientContext* context, const ::api::v1alpha1::ListSelectionTablesRequest* request, ::api::v1alpha1::ListSelectionTablesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Selection operations
      virtual void RollOnTable(::grpc::ClientContext* context, const ::api::v1alpha1::RollOnTableRequest* request, ::api::v1alpha1::RollOnTableResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RollOnTable(::grpc::ClientContext* context, const ::api::v1alpha1::RollOnTableRequest* request, ::api::v1alpha1::RollOnTableResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void RollMultiple(::grpc::ClientContext* context, const ::api::v1alpha1::RollMultipleRequest* request, ::api::v1alpha1::RollMultipleResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RollMultiple(::grpc::ClientContext* context, const ::api::v1alpha1::RollMultipleRequest* request, ::api::v1alpha1::RollMultipleResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void RollWithModifiers(::grpc::ClientContext* context, const ::api::v1alpha1::RollWithModifiersRequest* request, ::api::v1alpha1::RollWithModifiersResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RollWithModifiers(::grpc::ClientContext* context, const ::api::v1alpha1::RollWithModifiersRequest* request, ::api::v1alpha1::RollWithModifiersResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Batch operations
      virtual void BatchRollTables(::grpc::ClientContext* context, const ::api::v1alpha1::BatchRollTablesRequest* request, ::api::v1alpha1::BatchRollTablesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void BatchRollTables(::grpc::ClientContext* context, const ::api::v1alpha1::BatchRollTablesRequest* request, ::api::v1alpha1::BatchRollTablesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GenerateEncounter(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateEncounterRequest* request, ::api::v1alpha1::GenerateEncounterResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GenerateEncounter(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateEncounterRequest* request, ::api::v1alpha1::GenerateEncounterResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GenerateLoot(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateLootRequest* request, ::api::v1alpha1::GenerateLootResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GenerateLoot(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateLootRequest* request, ::api::v1alpha1::GenerateLootResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Table management
      virtual void ValidateSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::ValidateSelectionTableRequest* request, ::api::v1alpha1::ValidateSelectionTableResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ValidateSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::ValidateSelectionTableRequest* request, ::api::v1alpha1::ValidateSelectionTableResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetTableStatistics(::grpc::ClientContext* context, const ::api::v1alpha1::GetTableStatisticsRequest* request, ::api::v1alpha1::GetTableStatisticsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetTableStatistics(::grpc::ClientContext* context, const ::api::v1alpha1::GetTableStatisticsRequest* request, ::api::v1alpha1::GetTableStatisticsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ExportSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::ExportSelectionTableRequest* request, ::api::v1alpha1::ExportSelectionTableResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExportSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::ExportSelectionTableRequest* request, ::api::v1alpha1::ExportSelectionTableResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ImportSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::ImportSelectionTableRequest* request, ::api::v1alpha1::ImportSelectionTableResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ImportSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::ImportSelectionTableRequest* request, ::api::v1alpha1::ImportSelectionTableResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::CreateSelectionTableResponse>* AsyncCreateSelectionTableRaw(::grpc::ClientContext* context, const ::api::v1alpha1::CreateSelectionTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::CreateSelectionTableResponse>* PrepareAsyncCreateSelectionTableRaw(::grpc::ClientContext* context, const ::api::v1alpha1::CreateSelectionTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GetSelectionTableResponse>* AsyncGetSelectionTableRaw(::grpc::ClientContext* context, const ::api::v1alpha1::GetSelectionTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GetSelectionTableResponse>* PrepareAsyncGetSelectionTableRaw(::grpc::ClientContext* context, const ::api::v1alpha1::GetSelectionTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::UpdateSelectionTableResponse>* AsyncUpdateSelectionTableRaw(::grpc::ClientContext* context, const ::api::v1alpha1::UpdateSelectionTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::UpdateSelectionTableResponse>* PrepareAsyncUpdateSelectionTableRaw(::grpc::ClientContext* context, const ::api::v1alpha1::UpdateSelectionTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::DeleteSelectionTableResponse>* AsyncDeleteSelectionTableRaw(::grpc::ClientContext* context, const ::api::v1alpha1::DeleteSelectionTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::DeleteSelectionTableResponse>* PrepareAsyncDeleteSelectionTableRaw(::grpc::ClientContext* context, const ::api::v1alpha1::DeleteSelectionTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ListSelectionTablesResponse>* AsyncListSelectionTablesRaw(::grpc::ClientContext* context, const ::api::v1alpha1::ListSelectionTablesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ListSelectionTablesResponse>* PrepareAsyncListSelectionTablesRaw(::grpc::ClientContext* context, const ::api::v1alpha1::ListSelectionTablesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::RollOnTableResponse>* AsyncRollOnTableRaw(::grpc::ClientContext* context, const ::api::v1alpha1::RollOnTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::RollOnTableResponse>* PrepareAsyncRollOnTableRaw(::grpc::ClientContext* context, const ::api::v1alpha1::RollOnTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::RollMultipleResponse>* AsyncRollMultipleRaw(::grpc::ClientContext* context, const ::api::v1alpha1::RollMultipleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::RollMultipleResponse>* PrepareAsyncRollMultipleRaw(::grpc::ClientContext* context, const ::api::v1alpha1::RollMultipleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::RollWithModifiersResponse>* AsyncRollWithModifiersRaw(::grpc::ClientContext* context, const ::api::v1alpha1::RollWithModifiersRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::RollWithModifiersResponse>* PrepareAsyncRollWithModifiersRaw(::grpc::ClientContext* context, const ::api::v1alpha1::RollWithModifiersRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::BatchRollTablesResponse>* AsyncBatchRollTablesRaw(::grpc::ClientContext* context, const ::api::v1alpha1::BatchRollTablesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::BatchRollTablesResponse>* PrepareAsyncBatchRollTablesRaw(::grpc::ClientContext* context, const ::api::v1alpha1::BatchRollTablesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GenerateEncounterResponse>* AsyncGenerateEncounterRaw(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateEncounterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GenerateEncounterResponse>* PrepareAsyncGenerateEncounterRaw(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateEncounterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GenerateLootResponse>* AsyncGenerateLootRaw(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateLootRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GenerateLootResponse>* PrepareAsyncGenerateLootRaw(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateLootRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ValidateSelectionTableResponse>* AsyncValidateSelectionTableRaw(::grpc::ClientContext* context, const ::api::v1alpha1::ValidateSelectionTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ValidateSelectionTableResponse>* PrepareAsyncValidateSelectionTableRaw(::grpc::ClientContext* context, const ::api::v1alpha1::ValidateSelectionTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GetTableStatisticsResponse>* AsyncGetTableStatisticsRaw(::grpc::ClientContext* context, const ::api::v1alpha1::GetTableStatisticsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::GetTableStatisticsResponse>* PrepareAsyncGetTableStatisticsRaw(::grpc::ClientContext* context, const ::api::v1alpha1::GetTableStatisticsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ExportSelectionTableResponse>* AsyncExportSelectionTableRaw(::grpc::ClientContext* context, const ::api::v1alpha1::ExportSelectionTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ExportSelectionTableResponse>* PrepareAsyncExportSelectionTableRaw(::grpc::ClientContext* context, const ::api::v1alpha1::ExportSelectionTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ImportSelectionTableResponse>* AsyncImportSelectionTableRaw(::grpc::ClientContext* context, const ::api::v1alpha1::ImportSelectionTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::api::v1alpha1::ImportSelectionTableResponse>* PrepareAsyncImportSelectionTableRaw(::grpc::ClientContext* context, const ::api::v1alpha1::ImportSelectionTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status CreateSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::CreateSelectionTableRequest& request, ::api::v1alpha1::CreateSelectionTableResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::CreateSelectionTableResponse>> AsyncCreateSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::CreateSelectionTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::CreateSelectionTableResponse>>(AsyncCreateSelectionTableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::CreateSelectionTableResponse>> PrepareAsyncCreateSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::CreateSelectionTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::CreateSelectionTableResponse>>(PrepareAsyncCreateSelectionTableRaw(context, request, cq));
    }
    ::grpc::Status GetSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::GetSelectionTableRequest& request, ::api::v1alpha1::GetSelectionTableResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GetSelectionTableResponse>> AsyncGetSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::GetSelectionTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GetSelectionTableResponse>>(AsyncGetSelectionTableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GetSelectionTableResponse>> PrepareAsyncGetSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::GetSelectionTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GetSelectionTableResponse>>(PrepareAsyncGetSelectionTableRaw(context, request, cq));
    }
    ::grpc::Status UpdateSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::UpdateSelectionTableRequest& request, ::api::v1alpha1::UpdateSelectionTableResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::UpdateSelectionTableResponse>> AsyncUpdateSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::UpdateSelectionTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::UpdateSelectionTableResponse>>(AsyncUpdateSelectionTableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::UpdateSelectionTableResponse>> PrepareAsyncUpdateSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::UpdateSelectionTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::UpdateSelectionTableResponse>>(PrepareAsyncUpdateSelectionTableRaw(context, request, cq));
    }
    ::grpc::Status DeleteSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::DeleteSelectionTableRequest& request, ::api::v1alpha1::DeleteSelectionTableResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::DeleteSelectionTableResponse>> AsyncDeleteSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::DeleteSelectionTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::DeleteSelectionTableResponse>>(AsyncDeleteSelectionTableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::DeleteSelectionTableResponse>> PrepareAsyncDeleteSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::DeleteSelectionTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::DeleteSelectionTableResponse>>(PrepareAsyncDeleteSelectionTableRaw(context, request, cq));
    }
    ::grpc::Status ListSelectionTables(::grpc::ClientContext* context, const ::api::v1alpha1::ListSelectionTablesRequest& request, ::api::v1alpha1::ListSelectionTablesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ListSelectionTablesResponse>> AsyncListSelectionTables(::grpc::ClientContext* context, const ::api::v1alpha1::ListSelectionTablesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ListSelectionTablesResponse>>(AsyncListSelectionTablesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ListSelectionTablesResponse>> PrepareAsyncListSelectionTables(::grpc::ClientContext* context, const ::api::v1alpha1::ListSelectionTablesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ListSelectionTablesResponse>>(PrepareAsyncListSelectionTablesRaw(context, request, cq));
    }
    ::grpc::Status RollOnTable(::grpc::ClientContext* context, const ::api::v1alpha1::RollOnTableRequest& request, ::api::v1alpha1::RollOnTableResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::RollOnTableResponse>> AsyncRollOnTable(::grpc::ClientContext* context, const ::api::v1alpha1::RollOnTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::RollOnTableResponse>>(AsyncRollOnTableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::RollOnTableResponse>> PrepareAsyncRollOnTable(::grpc::ClientContext* context, const ::api::v1alpha1::RollOnTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::RollOnTableResponse>>(PrepareAsyncRollOnTableRaw(context, request, cq));
    }
    ::grpc::Status RollMultiple(::grpc::ClientContext* context, const ::api::v1alpha1::RollMultipleRequest& request, ::api::v1alpha1::RollMultipleResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::RollMultipleResponse>> AsyncRollMultiple(::grpc::ClientContext* context, const ::api::v1alpha1::RollMultipleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::RollMultipleResponse>>(AsyncRollMultipleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::RollMultipleResponse>> PrepareAsyncRollMultiple(::grpc::ClientContext* context, const ::api::v1alpha1::RollMultipleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::RollMultipleResponse>>(PrepareAsyncRollMultipleRaw(context, request, cq));
    }
    ::grpc::Status RollWithModifiers(::grpc::ClientContext* context, const ::api::v1alpha1::RollWithModifiersRequest& request, ::api::v1alpha1::RollWithModifiersResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::RollWithModifiersResponse>> AsyncRollWithModifiers(::grpc::ClientContext* context, const ::api::v1alpha1::RollWithModifiersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::RollWithModifiersResponse>>(AsyncRollWithModifiersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::RollWithModifiersResponse>> PrepareAsyncRollWithModifiers(::grpc::ClientContext* context, const ::api::v1alpha1::RollWithModifiersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::RollWithModifiersResponse>>(PrepareAsyncRollWithModifiersRaw(context, request, cq));
    }
    ::grpc::Status BatchRollTables(::grpc::ClientContext* context, const ::api::v1alpha1::BatchRollTablesRequest& request, ::api::v1alpha1::BatchRollTablesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::BatchRollTablesResponse>> AsyncBatchRollTables(::grpc::ClientContext* context, const ::api::v1alpha1::BatchRollTablesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::BatchRollTablesResponse>>(AsyncBatchRollTablesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::BatchRollTablesResponse>> PrepareAsyncBatchRollTables(::grpc::ClientContext* context, const ::api::v1alpha1::BatchRollTablesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::BatchRollTablesResponse>>(PrepareAsyncBatchRollTablesRaw(context, request, cq));
    }
    ::grpc::Status GenerateEncounter(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateEncounterRequest& request, ::api::v1alpha1::GenerateEncounterResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GenerateEncounterResponse>> AsyncGenerateEncounter(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateEncounterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GenerateEncounterResponse>>(AsyncGenerateEncounterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GenerateEncounterResponse>> PrepareAsyncGenerateEncounter(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateEncounterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GenerateEncounterResponse>>(PrepareAsyncGenerateEncounterRaw(context, request, cq));
    }
    ::grpc::Status GenerateLoot(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateLootRequest& request, ::api::v1alpha1::GenerateLootResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GenerateLootResponse>> AsyncGenerateLoot(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateLootRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GenerateLootResponse>>(AsyncGenerateLootRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GenerateLootResponse>> PrepareAsyncGenerateLoot(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateLootRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GenerateLootResponse>>(PrepareAsyncGenerateLootRaw(context, request, cq));
    }
    ::grpc::Status ValidateSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::ValidateSelectionTableRequest& request, ::api::v1alpha1::ValidateSelectionTableResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ValidateSelectionTableResponse>> AsyncValidateSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::ValidateSelectionTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ValidateSelectionTableResponse>>(AsyncValidateSelectionTableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ValidateSelectionTableResponse>> PrepareAsyncValidateSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::ValidateSelectionTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ValidateSelectionTableResponse>>(PrepareAsyncValidateSelectionTableRaw(context, request, cq));
    }
    ::grpc::Status GetTableStatistics(::grpc::ClientContext* context, const ::api::v1alpha1::GetTableStatisticsRequest& request, ::api::v1alpha1::GetTableStatisticsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GetTableStatisticsResponse>> AsyncGetTableStatistics(::grpc::ClientContext* context, const ::api::v1alpha1::GetTableStatisticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GetTableStatisticsResponse>>(AsyncGetTableStatisticsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GetTableStatisticsResponse>> PrepareAsyncGetTableStatistics(::grpc::ClientContext* context, const ::api::v1alpha1::GetTableStatisticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GetTableStatisticsResponse>>(PrepareAsyncGetTableStatisticsRaw(context, request, cq));
    }
    ::grpc::Status ExportSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::ExportSelectionTableRequest& request, ::api::v1alpha1::ExportSelectionTableResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ExportSelectionTableResponse>> AsyncExportSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::ExportSelectionTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ExportSelectionTableResponse>>(AsyncExportSelectionTableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ExportSelectionTableResponse>> PrepareAsyncExportSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::ExportSelectionTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ExportSelectionTableResponse>>(PrepareAsyncExportSelectionTableRaw(context, request, cq));
    }
    ::grpc::Status ImportSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::ImportSelectionTableRequest& request, ::api::v1alpha1::ImportSelectionTableResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ImportSelectionTableResponse>> AsyncImportSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::ImportSelectionTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ImportSelectionTableResponse>>(AsyncImportSelectionTableRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ImportSelectionTableResponse>> PrepareAsyncImportSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::ImportSelectionTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ImportSelectionTableResponse>>(PrepareAsyncImportSelectionTableRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void CreateSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::CreateSelectionTableRequest* request, ::api::v1alpha1::CreateSelectionTableResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::CreateSelectionTableRequest* request, ::api::v1alpha1::CreateSelectionTableResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::GetSelectionTableRequest* request, ::api::v1alpha1::GetSelectionTableResponse* response, std::function<void(::grpc::Status)>) override;
      void GetSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::GetSelectionTableRequest* request, ::api::v1alpha1::GetSelectionTableResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::UpdateSelectionTableRequest* request, ::api::v1alpha1::UpdateSelectionTableResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::UpdateSelectionTableRequest* request, ::api::v1alpha1::UpdateSelectionTableResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::DeleteSelectionTableRequest* request, ::api::v1alpha1::DeleteSelectionTableResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::DeleteSelectionTableRequest* request, ::api::v1alpha1::DeleteSelectionTableResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListSelectionTables(::grpc::ClientContext* context, const ::api::v1alpha1::ListSelectionTablesRequest* request, ::api::v1alpha1::ListSelectionTablesResponse* response, std::function<void(::grpc::Status)>) override;
      void ListSelectionTables(::grpc::ClientContext* context, const ::api::v1alpha1::ListSelectionTablesRequest* request, ::api::v1alpha1::ListSelectionTablesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RollOnTable(::grpc::ClientContext* context, const ::api::v1alpha1::RollOnTableRequest* request, ::api::v1alpha1::RollOnTableResponse* response, std::function<void(::grpc::Status)>) override;
      void RollOnTable(::grpc::ClientContext* context, const ::api::v1alpha1::RollOnTableRequest* request, ::api::v1alpha1::RollOnTableResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RollMultiple(::grpc::ClientContext* context, const ::api::v1alpha1::RollMultipleRequest* request, ::api::v1alpha1::RollMultipleResponse* response, std::function<void(::grpc::Status)>) override;
      void RollMultiple(::grpc::ClientContext* context, const ::api::v1alpha1::RollMultipleRequest* request, ::api::v1alpha1::RollMultipleResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RollWithModifiers(::grpc::ClientContext* context, const ::api::v1alpha1::RollWithModifiersRequest* request, ::api::v1alpha1::RollWithModifiersResponse* response, std::function<void(::grpc::Status)>) override;
      void RollWithModifiers(::grpc::ClientContext* context, const ::api::v1alpha1::RollWithModifiersRequest* request, ::api::v1alpha1::RollWithModifiersResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void BatchRollTables(::grpc::ClientContext* context, const ::api::v1alpha1::BatchRollTablesRequest* request, ::api::v1alpha1::BatchRollTablesResponse* response, std::function<void(::grpc::Status)>) override;
      void BatchRollTables(::grpc::ClientContext* context, const ::api::v1alpha1::BatchRollTablesRequest* request, ::api::v1alpha1::BatchRollTablesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GenerateEncounter(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateEncounterRequest* request, ::api::v1alpha1::GenerateEncounterResponse* response, std::function<void(::grpc::Status)>) override;
      void GenerateEncounter(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateEncounterRequest* request, ::api::v1alpha1::GenerateEncounterResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GenerateLoot(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateLootRequest* request, ::api::v1alpha1::GenerateLootResponse* response, std::function<void(::grpc::Status)>) override;
      void GenerateLoot(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateLootRequest* request, ::api::v1alpha1::GenerateLootResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ValidateSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::ValidateSelectionTableRequest* request, ::api::v1alpha1::ValidateSelectionTableResponse* response, std::function<void(::grpc::Status)>) override;
      void ValidateSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::ValidateSelectionTableRequest* request, ::api::v1alpha1::ValidateSelectionTableResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetTableStatistics(::grpc::ClientContext* context, const ::api::v1alpha1::GetTableStatisticsRequest* request, ::api::v1alpha1::GetTableStatisticsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetTableStatistics(::grpc::ClientContext* context, const ::api::v1alpha1::GetTableStatisticsRequest* request, ::api::v1alpha1::GetTableStatisticsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ExportSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::ExportSelectionTableRequest* request, ::api::v1alpha1::ExportSelectionTableResponse* response, std::function<void(::grpc::Status)>) override;
      void ExportSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::ExportSelectionTableRequest* request, ::api::v1alpha1::ExportSelectionTableResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ImportSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::ImportSelectionTableRequest* request, ::api::v1alpha1::ImportSelectionTableResponse* response, std::function<void(::grpc::Status)>) override;
      void ImportSelectionTable(::grpc::ClientContext* context, const ::api::v1alpha1::ImportSelectionTableRequest* request, ::api::v1alpha1::ImportSelectionTableResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::CreateSelectionTableResponse>* AsyncCreateSelectionTableRaw(::grpc::ClientContext* context, const ::api::v1alpha1::CreateSelectionTableRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::CreateSelectionTableResponse>* PrepareAsyncCreateSelectionTableRaw(::grpc::ClientContext* context, const ::api::v1alpha1::CreateSelectionTableRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GetSelectionTableResponse>* AsyncGetSelectionTableRaw(::grpc::ClientContext* context, const ::api::v1alpha1::GetSelectionTableRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GetSelectionTableResponse>* PrepareAsyncGetSelectionTableRaw(::grpc::ClientContext* context, const ::api::v1alpha1::GetSelectionTableRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::UpdateSelectionTableResponse>* AsyncUpdateSelectionTableRaw(::grpc::ClientContext* context, const ::api::v1alpha1::UpdateSelectionTableRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::UpdateSelectionTableResponse>* PrepareAsyncUpdateSelectionTableRaw(::grpc::ClientContext* context, const ::api::v1alpha1::UpdateSelectionTableRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::DeleteSelectionTableResponse>* AsyncDeleteSelectionTableRaw(::grpc::ClientContext* context, const ::api::v1alpha1::DeleteSelectionTableRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::DeleteSelectionTableResponse>* PrepareAsyncDeleteSelectionTableRaw(::grpc::ClientContext* context, const ::api::v1alpha1::DeleteSelectionTableRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ListSelectionTablesResponse>* AsyncListSelectionTablesRaw(::grpc::ClientContext* context, const ::api::v1alpha1::ListSelectionTablesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ListSelectionTablesResponse>* PrepareAsyncListSelectionTablesRaw(::grpc::ClientContext* context, const ::api::v1alpha1::ListSelectionTablesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::RollOnTableResponse>* AsyncRollOnTableRaw(::grpc::ClientContext* context, const ::api::v1alpha1::RollOnTableRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::RollOnTableResponse>* PrepareAsyncRollOnTableRaw(::grpc::ClientContext* context, const ::api::v1alpha1::RollOnTableRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::RollMultipleResponse>* AsyncRollMultipleRaw(::grpc::ClientContext* context, const ::api::v1alpha1::RollMultipleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::RollMultipleResponse>* PrepareAsyncRollMultipleRaw(::grpc::ClientContext* context, const ::api::v1alpha1::RollMultipleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::RollWithModifiersResponse>* AsyncRollWithModifiersRaw(::grpc::ClientContext* context, const ::api::v1alpha1::RollWithModifiersRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::RollWithModifiersResponse>* PrepareAsyncRollWithModifiersRaw(::grpc::ClientContext* context, const ::api::v1alpha1::RollWithModifiersRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::BatchRollTablesResponse>* AsyncBatchRollTablesRaw(::grpc::ClientContext* context, const ::api::v1alpha1::BatchRollTablesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::BatchRollTablesResponse>* PrepareAsyncBatchRollTablesRaw(::grpc::ClientContext* context, const ::api::v1alpha1::BatchRollTablesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GenerateEncounterResponse>* AsyncGenerateEncounterRaw(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateEncounterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GenerateEncounterResponse>* PrepareAsyncGenerateEncounterRaw(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateEncounterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GenerateLootResponse>* AsyncGenerateLootRaw(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateLootRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GenerateLootResponse>* PrepareAsyncGenerateLootRaw(::grpc::ClientContext* context, const ::api::v1alpha1::GenerateLootRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ValidateSelectionTableResponse>* AsyncValidateSelectionTableRaw(::grpc::ClientContext* context, const ::api::v1alpha1::ValidateSelectionTableRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ValidateSelectionTableResponse>* PrepareAsyncValidateSelectionTableRaw(::grpc::ClientContext* context, const ::api::v1alpha1::ValidateSelectionTableRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GetTableStatisticsResponse>* AsyncGetTableStatisticsRaw(::grpc::ClientContext* context, const ::api::v1alpha1::GetTableStatisticsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::GetTableStatisticsResponse>* PrepareAsyncGetTableStatisticsRaw(::grpc::ClientContext* context, const ::api::v1alpha1::GetTableStatisticsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ExportSelectionTableResponse>* AsyncExportSelectionTableRaw(::grpc::ClientContext* context, const ::api::v1alpha1::ExportSelectionTableRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ExportSelectionTableResponse>* PrepareAsyncExportSelectionTableRaw(::grpc::ClientContext* context, const ::api::v1alpha1::ExportSelectionTableRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ImportSelectionTableResponse>* AsyncImportSelectionTableRaw(::grpc::ClientContext* context, const ::api::v1alpha1::ImportSelectionTableRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::api::v1alpha1::ImportSelectionTableResponse>* PrepareAsyncImportSelectionTableRaw(::grpc::ClientContext* context, const ::api::v1alpha1::ImportSelectionTableRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateSelectionTable_;
    const ::grpc::internal::RpcMethod rpcmethod_GetSelectionTable_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateSelectionTable_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteSelectionTable_;
    const ::grpc::internal::RpcMethod rpcmethod_ListSelectionTables_;
    const ::grpc::internal::RpcMethod rpcmethod_RollOnTable_;
    const ::grpc::internal::RpcMethod rpcmethod_RollMultiple_;
    const ::grpc::internal::RpcMethod rpcmethod_RollWithModifiers_;
    const ::grpc::internal::RpcMethod rpcmethod_BatchRollTables_;
    const ::grpc::internal::RpcMethod rpcmethod_GenerateEncounter_;
    const ::grpc::internal::RpcMethod rpcmethod_GenerateLoot_;
    const ::grpc::internal::RpcMethod rpcmethod_ValidateSelectionTable_;
    const ::grpc::internal::RpcMethod rpcmethod_GetTableStatistics_;
    const ::grpc::internal::RpcMethod rpcmethod_ExportSelectionTable_;
    const ::grpc::internal::RpcMethod rpcmethod_ImportSelectionTable_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Selection table operations
    virtual ::grpc::Status CreateSelectionTable(::grpc::ServerContext* context, const ::api::v1alpha1::CreateSelectionTableRequest* request, ::api::v1alpha1::CreateSelectionTableResponse* response);
    virtual ::grpc::Status GetSelectionTable(::grpc::ServerContext* context, const ::api::v1alpha1::GetSelectionTableRequest* request, ::api::v1alpha1::GetSelectionTableResponse* response);
    virtual ::grpc::Status UpdateSelectionTable(::grpc::ServerContext* context, const ::api::v1alpha1::UpdateSelectionTableRequest* request, ::api::v1alpha1::UpdateSelectionTableResponse* response);
    virtual ::grpc::Status DeleteSelectionTable(::grpc::ServerContext* context, const ::api::v1alpha1::DeleteSelectionTableRequest* request, ::api::v1alpha1::DeleteSelectionTableResponse* response);
    virtual ::grpc::Status ListSelectionTables(::grpc::ServerContext* context, const ::api::v1alpha1::ListSelectionTablesRequest* request, ::api::v1alpha1::ListSelectionTablesResponse* response);
    // Selection operations
    virtual ::grpc::Status RollOnTable(::grpc::ServerContext* context, const ::api::v1alpha1::RollOnTableRequest* request, ::api::v1alpha1::RollOnTableResponse* response);
    virtual ::grpc::Status RollMultiple(::grpc::ServerContext* context, const ::api::v1alpha1::RollMultipleRequest* request, ::api::v1alpha1::RollMultipleResponse* response);
    virtual ::grpc::Status RollWithModifiers(::grpc::ServerContext* context, const ::api::v1alpha1::RollWithModifiersRequest* request, ::api::v1alpha1::RollWithModifiersResponse* response);
    // Batch operations
    virtual ::grpc::Status BatchRollTables(::grpc::ServerContext* context, const ::api::v1alpha1::BatchRollTablesRequest* request, ::api::v1alpha1::BatchRollTablesResponse* response);
    virtual ::grpc::Status GenerateEncounter(::grpc::ServerContext* context, const ::api::v1alpha1::GenerateEncounterRequest* request, ::api::v1alpha1::GenerateEncounterResponse* response);
    virtual ::grpc::Status GenerateLoot(::grpc::ServerContext* context, const ::api::v1alpha1::GenerateLootRequest* request, ::api::v1alpha1::GenerateLootResponse* response);
    // Table management
    virtual ::grpc::Status ValidateSelectionTable(::grpc::ServerContext* context, const ::api::v1alpha1::ValidateSelectionTableRequest* request, ::api::v1alpha1::ValidateSelectionTableResponse* response);
    virtual ::grpc::Status GetTableStatistics(::grpc::ServerContext* context, const ::api::v1alpha1::GetTableStatisticsRequest* request, ::api::v1alpha1::GetTableStatisticsResponse* response);
    virtual ::grpc::Status ExportSelectionTable(::grpc::ServerContext* context, const ::api::v1alpha1::ExportSelectionTableRequest* request, ::api::v1alpha1::ExportSelectionTableResponse* response);
    virtual ::grpc::Status ImportSelectionTable(::grpc::ServerContext* context, const ::api::v1alpha1::ImportSelectionTableRequest* request, ::api::v1alpha1::ImportSelectionTableResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateSelectionTable() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::CreateSelectionTableRequest* /*request*/, ::api::v1alpha1::CreateSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateSelectionTable(::grpc::ServerContext* context, ::api::v1alpha1::CreateSelectionTableRequest* request, ::grpc::ServerAsyncResponseWriter< ::api::v1alpha1::CreateSelectionTableResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetSelectionTable() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GetSelectionTableRequest* /*request*/, ::api::v1alpha1::GetSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSelectionTable(::grpc::ServerContext* context, ::api::v1alpha1::GetSelectionTableRequest* request, ::grpc::ServerAsyncResponseWriter< ::api::v1alpha1::GetSelectionTableResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateSelectionTable() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_UpdateSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::UpdateSelectionTableRequest* /*request*/, ::api::v1alpha1::UpdateSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateSelectionTable(::grpc::ServerContext* context, ::api::v1alpha1::UpdateSelectionTableRequest* request, ::grpc::ServerAsyncResponseWriter< ::api::v1alpha1::UpdateSelectionTableResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteSelectionTable() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_DeleteSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::DeleteSelectionTableRequest* /*request*/, ::api::v1alpha1::DeleteSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteSelectionTable(::grpc::ServerContext* context, ::api::v1alpha1::DeleteSelectionTableRequest* request, ::grpc::ServerAsyncResponseWriter< ::api::v1alpha1::DeleteSelectionTableResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListSelectionTables : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListSelectionTables() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_ListSelectionTables() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListSelectionTables(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ListSelectionTablesRequest* /*request*/, ::api::v1alpha1::ListSelectionTablesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListSelectionTables(::grpc::ServerContext* context, ::api::v1alpha1::ListSelectionTablesRequest* request, ::grpc::ServerAsyncResponseWriter< ::api::v1alpha1::ListSelectionTablesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RollOnTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RollOnTable() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_RollOnTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RollOnTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::RollOnTableRequest* /*request*/, ::api::v1alpha1::RollOnTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRollOnTable(::grpc::ServerContext* context, ::api::v1alpha1::RollOnTableRequest* request, ::grpc::ServerAsyncResponseWriter< ::api::v1alpha1::RollOnTableResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RollMultiple : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RollMultiple() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_RollMultiple() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RollMultiple(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::RollMultipleRequest* /*request*/, ::api::v1alpha1::RollMultipleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRollMultiple(::grpc::ServerContext* context, ::api::v1alpha1::RollMultipleRequest* request, ::grpc::ServerAsyncResponseWriter< ::api::v1alpha1::RollMultipleResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RollWithModifiers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RollWithModifiers() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_RollWithModifiers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RollWithModifiers(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::RollWithModifiersRequest* /*request*/, ::api::v1alpha1::RollWithModifiersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRollWithModifiers(::grpc::ServerContext* context, ::api::v1alpha1::RollWithModifiersRequest* request, ::grpc::ServerAsyncResponseWriter< ::api::v1alpha1::RollWithModifiersResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_BatchRollTables : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_BatchRollTables() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_BatchRollTables() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchRollTables(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::BatchRollTablesRequest* /*request*/, ::api::v1alpha1::BatchRollTablesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBatchRollTables(::grpc::ServerContext* context, ::api::v1alpha1::BatchRollTablesRequest* request, ::grpc::ServerAsyncResponseWriter< ::api::v1alpha1::BatchRollTablesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GenerateEncounter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GenerateEncounter() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_GenerateEncounter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GenerateEncounter(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GenerateEncounterRequest* /*request*/, ::api::v1alpha1::GenerateEncounterResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGenerateEncounter(::grpc::ServerContext* context, ::api::v1alpha1::GenerateEncounterRequest* request, ::grpc::ServerAsyncResponseWriter< ::api::v1alpha1::GenerateEncounterResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GenerateLoot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GenerateLoot() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_GenerateLoot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GenerateLoot(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GenerateLootRequest* /*request*/, ::api::v1alpha1::GenerateLootResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGenerateLoot(::grpc::ServerContext* context, ::api::v1alpha1::GenerateLootRequest* request, ::grpc::ServerAsyncResponseWriter< ::api::v1alpha1::GenerateLootResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ValidateSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ValidateSelectionTable() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_ValidateSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ValidateSelectionTableRequest* /*request*/, ::api::v1alpha1::ValidateSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestValidateSelectionTable(::grpc::ServerContext* context, ::api::v1alpha1::ValidateSelectionTableRequest* request, ::grpc::ServerAsyncResponseWriter< ::api::v1alpha1::ValidateSelectionTableResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetTableStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetTableStatistics() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_GetTableStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTableStatistics(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GetTableStatisticsRequest* /*request*/, ::api::v1alpha1::GetTableStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTableStatistics(::grpc::ServerContext* context, ::api::v1alpha1::GetTableStatisticsRequest* request, ::grpc::ServerAsyncResponseWriter< ::api::v1alpha1::GetTableStatisticsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExportSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExportSelectionTable() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_ExportSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExportSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ExportSelectionTableRequest* /*request*/, ::api::v1alpha1::ExportSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExportSelectionTable(::grpc::ServerContext* context, ::api::v1alpha1::ExportSelectionTableRequest* request, ::grpc::ServerAsyncResponseWriter< ::api::v1alpha1::ExportSelectionTableResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ImportSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ImportSelectionTable() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_ImportSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ImportSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ImportSelectionTableRequest* /*request*/, ::api::v1alpha1::ImportSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestImportSelectionTable(::grpc::ServerContext* context, ::api::v1alpha1::ImportSelectionTableRequest* request, ::grpc::ServerAsyncResponseWriter< ::api::v1alpha1::ImportSelectionTableResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateSelectionTable<WithAsyncMethod_GetSelectionTable<WithAsyncMethod_UpdateSelectionTable<WithAsyncMethod_DeleteSelectionTable<WithAsyncMethod_ListSelectionTables<WithAsyncMethod_RollOnTable<WithAsyncMethod_RollMultiple<WithAsyncMethod_RollWithModifiers<WithAsyncMethod_BatchRollTables<WithAsyncMethod_GenerateEncounter<WithAsyncMethod_GenerateLoot<WithAsyncMethod_ValidateSelectionTable<WithAsyncMethod_GetTableStatistics<WithAsyncMethod_ExportSelectionTable<WithAsyncMethod_ImportSelectionTable<Service > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_CreateSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateSelectionTable() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::CreateSelectionTableRequest, ::api::v1alpha1::CreateSelectionTableResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::api::v1alpha1::CreateSelectionTableRequest* request, ::api::v1alpha1::CreateSelectionTableResponse* response) { return this->CreateSelectionTable(context, request, response); }));}
    void SetMessageAllocatorFor_CreateSelectionTable(
        ::grpc::MessageAllocator< ::api::v1alpha1::CreateSelectionTableRequest, ::api::v1alpha1::CreateSelectionTableResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::CreateSelectionTableRequest, ::api::v1alpha1::CreateSelectionTableResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::CreateSelectionTableRequest* /*request*/, ::api::v1alpha1::CreateSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateSelectionTable(
      ::grpc::CallbackServerContext* /*context*/, const ::api::v1alpha1::CreateSelectionTableRequest* /*request*/, ::api::v1alpha1::CreateSelectionTableResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetSelectionTable() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::GetSelectionTableRequest, ::api::v1alpha1::GetSelectionTableResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::api::v1alpha1::GetSelectionTableRequest* request, ::api::v1alpha1::GetSelectionTableResponse* response) { return this->GetSelectionTable(context, request, response); }));}
    void SetMessageAllocatorFor_GetSelectionTable(
        ::grpc::MessageAllocator< ::api::v1alpha1::GetSelectionTableRequest, ::api::v1alpha1::GetSelectionTableResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::GetSelectionTableRequest, ::api::v1alpha1::GetSelectionTableResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GetSelectionTableRequest* /*request*/, ::api::v1alpha1::GetSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSelectionTable(
      ::grpc::CallbackServerContext* /*context*/, const ::api::v1alpha1::GetSelectionTableRequest* /*request*/, ::api::v1alpha1::GetSelectionTableResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateSelectionTable() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::UpdateSelectionTableRequest, ::api::v1alpha1::UpdateSelectionTableResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::api::v1alpha1::UpdateSelectionTableRequest* request, ::api::v1alpha1::UpdateSelectionTableResponse* response) { return this->UpdateSelectionTable(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateSelectionTable(
        ::grpc::MessageAllocator< ::api::v1alpha1::UpdateSelectionTableRequest, ::api::v1alpha1::UpdateSelectionTableResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::UpdateSelectionTableRequest, ::api::v1alpha1::UpdateSelectionTableResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::UpdateSelectionTableRequest* /*request*/, ::api::v1alpha1::UpdateSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateSelectionTable(
      ::grpc::CallbackServerContext* /*context*/, const ::api::v1alpha1::UpdateSelectionTableRequest* /*request*/, ::api::v1alpha1::UpdateSelectionTableResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteSelectionTable() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::DeleteSelectionTableRequest, ::api::v1alpha1::DeleteSelectionTableResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::api::v1alpha1::DeleteSelectionTableRequest* request, ::api::v1alpha1::DeleteSelectionTableResponse* response) { return this->DeleteSelectionTable(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteSelectionTable(
        ::grpc::MessageAllocator< ::api::v1alpha1::DeleteSelectionTableRequest, ::api::v1alpha1::DeleteSelectionTableResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::DeleteSelectionTableRequest, ::api::v1alpha1::DeleteSelectionTableResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::DeleteSelectionTableRequest* /*request*/, ::api::v1alpha1::DeleteSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteSelectionTable(
      ::grpc::CallbackServerContext* /*context*/, const ::api::v1alpha1::DeleteSelectionTableRequest* /*request*/, ::api::v1alpha1::DeleteSelectionTableResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListSelectionTables : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListSelectionTables() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::ListSelectionTablesRequest, ::api::v1alpha1::ListSelectionTablesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::api::v1alpha1::ListSelectionTablesRequest* request, ::api::v1alpha1::ListSelectionTablesResponse* response) { return this->ListSelectionTables(context, request, response); }));}
    void SetMessageAllocatorFor_ListSelectionTables(
        ::grpc::MessageAllocator< ::api::v1alpha1::ListSelectionTablesRequest, ::api::v1alpha1::ListSelectionTablesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::ListSelectionTablesRequest, ::api::v1alpha1::ListSelectionTablesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListSelectionTables() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListSelectionTables(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ListSelectionTablesRequest* /*request*/, ::api::v1alpha1::ListSelectionTablesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListSelectionTables(
      ::grpc::CallbackServerContext* /*context*/, const ::api::v1alpha1::ListSelectionTablesRequest* /*request*/, ::api::v1alpha1::ListSelectionTablesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RollOnTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RollOnTable() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::RollOnTableRequest, ::api::v1alpha1::RollOnTableResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::api::v1alpha1::RollOnTableRequest* request, ::api::v1alpha1::RollOnTableResponse* response) { return this->RollOnTable(context, request, response); }));}
    void SetMessageAllocatorFor_RollOnTable(
        ::grpc::MessageAllocator< ::api::v1alpha1::RollOnTableRequest, ::api::v1alpha1::RollOnTableResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::RollOnTableRequest, ::api::v1alpha1::RollOnTableResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RollOnTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RollOnTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::RollOnTableRequest* /*request*/, ::api::v1alpha1::RollOnTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RollOnTable(
      ::grpc::CallbackServerContext* /*context*/, const ::api::v1alpha1::RollOnTableRequest* /*request*/, ::api::v1alpha1::RollOnTableResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RollMultiple : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RollMultiple() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::RollMultipleRequest, ::api::v1alpha1::RollMultipleResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::api::v1alpha1::RollMultipleRequest* request, ::api::v1alpha1::RollMultipleResponse* response) { return this->RollMultiple(context, request, response); }));}
    void SetMessageAllocatorFor_RollMultiple(
        ::grpc::MessageAllocator< ::api::v1alpha1::RollMultipleRequest, ::api::v1alpha1::RollMultipleResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::RollMultipleRequest, ::api::v1alpha1::RollMultipleResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RollMultiple() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RollMultiple(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::RollMultipleRequest* /*request*/, ::api::v1alpha1::RollMultipleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RollMultiple(
      ::grpc::CallbackServerContext* /*context*/, const ::api::v1alpha1::RollMultipleRequest* /*request*/, ::api::v1alpha1::RollMultipleResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RollWithModifiers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RollWithModifiers() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::RollWithModifiersRequest, ::api::v1alpha1::RollWithModifiersResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::api::v1alpha1::RollWithModifiersRequest* request, ::api::v1alpha1::RollWithModifiersResponse* response) { return this->RollWithModifiers(context, request, response); }));}
    void SetMessageAllocatorFor_RollWithModifiers(
        ::grpc::MessageAllocator< ::api::v1alpha1::RollWithModifiersRequest, ::api::v1alpha1::RollWithModifiersResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::RollWithModifiersRequest, ::api::v1alpha1::RollWithModifiersResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RollWithModifiers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RollWithModifiers(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::RollWithModifiersRequest* /*request*/, ::api::v1alpha1::RollWithModifiersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RollWithModifiers(
      ::grpc::CallbackServerContext* /*context*/, const ::api::v1alpha1::RollWithModifiersRequest* /*request*/, ::api::v1alpha1::RollWithModifiersResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_BatchRollTables : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_BatchRollTables() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::BatchRollTablesRequest, ::api::v1alpha1::BatchRollTablesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::api::v1alpha1::BatchRollTablesRequest* request, ::api::v1alpha1::BatchRollTablesResponse* response) { return this->BatchRollTables(context, request, response); }));}
    void SetMessageAllocatorFor_BatchRollTables(
        ::grpc::MessageAllocator< ::api::v1alpha1::BatchRollTablesRequest, ::api::v1alpha1::BatchRollTablesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::BatchRollTablesRequest, ::api::v1alpha1::BatchRollTablesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_BatchRollTables() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchRollTables(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::BatchRollTablesRequest* /*request*/, ::api::v1alpha1::BatchRollTablesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* BatchRollTables(
      ::grpc::CallbackServerContext* /*context*/, const ::api::v1alpha1::BatchRollTablesRequest* /*request*/, ::api::v1alpha1::BatchRollTablesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GenerateEncounter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GenerateEncounter() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::GenerateEncounterRequest, ::api::v1alpha1::GenerateEncounterResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::api::v1alpha1::GenerateEncounterRequest* request, ::api::v1alpha1::GenerateEncounterResponse* response) { return this->GenerateEncounter(context, request, response); }));}
    void SetMessageAllocatorFor_GenerateEncounter(
        ::grpc::MessageAllocator< ::api::v1alpha1::GenerateEncounterRequest, ::api::v1alpha1::GenerateEncounterResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::GenerateEncounterRequest, ::api::v1alpha1::GenerateEncounterResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GenerateEncounter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GenerateEncounter(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GenerateEncounterRequest* /*request*/, ::api::v1alpha1::GenerateEncounterResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GenerateEncounter(
      ::grpc::CallbackServerContext* /*context*/, const ::api::v1alpha1::GenerateEncounterRequest* /*request*/, ::api::v1alpha1::GenerateEncounterResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GenerateLoot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GenerateLoot() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::GenerateLootRequest, ::api::v1alpha1::GenerateLootResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::api::v1alpha1::GenerateLootRequest* request, ::api::v1alpha1::GenerateLootResponse* response) { return this->GenerateLoot(context, request, response); }));}
    void SetMessageAllocatorFor_GenerateLoot(
        ::grpc::MessageAllocator< ::api::v1alpha1::GenerateLootRequest, ::api::v1alpha1::GenerateLootResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::GenerateLootRequest, ::api::v1alpha1::GenerateLootResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GenerateLoot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GenerateLoot(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GenerateLootRequest* /*request*/, ::api::v1alpha1::GenerateLootResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GenerateLoot(
      ::grpc::CallbackServerContext* /*context*/, const ::api::v1alpha1::GenerateLootRequest* /*request*/, ::api::v1alpha1::GenerateLootResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ValidateSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ValidateSelectionTable() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::ValidateSelectionTableRequest, ::api::v1alpha1::ValidateSelectionTableResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::api::v1alpha1::ValidateSelectionTableRequest* request, ::api::v1alpha1::ValidateSelectionTableResponse* response) { return this->ValidateSelectionTable(context, request, response); }));}
    void SetMessageAllocatorFor_ValidateSelectionTable(
        ::grpc::MessageAllocator< ::api::v1alpha1::ValidateSelectionTableRequest, ::api::v1alpha1::ValidateSelectionTableResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::ValidateSelectionTableRequest, ::api::v1alpha1::ValidateSelectionTableResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ValidateSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ValidateSelectionTableRequest* /*request*/, ::api::v1alpha1::ValidateSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ValidateSelectionTable(
      ::grpc::CallbackServerContext* /*context*/, const ::api::v1alpha1::ValidateSelectionTableRequest* /*request*/, ::api::v1alpha1::ValidateSelectionTableResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetTableStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetTableStatistics() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::GetTableStatisticsRequest, ::api::v1alpha1::GetTableStatisticsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::api::v1alpha1::GetTableStatisticsRequest* request, ::api::v1alpha1::GetTableStatisticsResponse* response) { return this->GetTableStatistics(context, request, response); }));}
    void SetMessageAllocatorFor_GetTableStatistics(
        ::grpc::MessageAllocator< ::api::v1alpha1::GetTableStatisticsRequest, ::api::v1alpha1::GetTableStatisticsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::GetTableStatisticsRequest, ::api::v1alpha1::GetTableStatisticsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetTableStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTableStatistics(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GetTableStatisticsRequest* /*request*/, ::api::v1alpha1::GetTableStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetTableStatistics(
      ::grpc::CallbackServerContext* /*context*/, const ::api::v1alpha1::GetTableStatisticsRequest* /*request*/, ::api::v1alpha1::GetTableStatisticsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ExportSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ExportSelectionTable() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::ExportSelectionTableRequest, ::api::v1alpha1::ExportSelectionTableResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::api::v1alpha1::ExportSelectionTableRequest* request, ::api::v1alpha1::ExportSelectionTableResponse* response) { return this->ExportSelectionTable(context, request, response); }));}
    void SetMessageAllocatorFor_ExportSelectionTable(
        ::grpc::MessageAllocator< ::api::v1alpha1::ExportSelectionTableRequest, ::api::v1alpha1::ExportSelectionTableResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::ExportSelectionTableRequest, ::api::v1alpha1::ExportSelectionTableResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ExportSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExportSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ExportSelectionTableRequest* /*request*/, ::api::v1alpha1::ExportSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExportSelectionTable(
      ::grpc::CallbackServerContext* /*context*/, const ::api::v1alpha1::ExportSelectionTableRequest* /*request*/, ::api::v1alpha1::ExportSelectionTableResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ImportSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ImportSelectionTable() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::ImportSelectionTableRequest, ::api::v1alpha1::ImportSelectionTableResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::api::v1alpha1::ImportSelectionTableRequest* request, ::api::v1alpha1::ImportSelectionTableResponse* response) { return this->ImportSelectionTable(context, request, response); }));}
    void SetMessageAllocatorFor_ImportSelectionTable(
        ::grpc::MessageAllocator< ::api::v1alpha1::ImportSelectionTableRequest, ::api::v1alpha1::ImportSelectionTableResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::api::v1alpha1::ImportSelectionTableRequest, ::api::v1alpha1::ImportSelectionTableResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ImportSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ImportSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ImportSelectionTableRequest* /*request*/, ::api::v1alpha1::ImportSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ImportSelectionTable(
      ::grpc::CallbackServerContext* /*context*/, const ::api::v1alpha1::ImportSelectionTableRequest* /*request*/, ::api::v1alpha1::ImportSelectionTableResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_CreateSelectionTable<WithCallbackMethod_GetSelectionTable<WithCallbackMethod_UpdateSelectionTable<WithCallbackMethod_DeleteSelectionTable<WithCallbackMethod_ListSelectionTables<WithCallbackMethod_RollOnTable<WithCallbackMethod_RollMultiple<WithCallbackMethod_RollWithModifiers<WithCallbackMethod_BatchRollTables<WithCallbackMethod_GenerateEncounter<WithCallbackMethod_GenerateLoot<WithCallbackMethod_ValidateSelectionTable<WithCallbackMethod_GetTableStatistics<WithCallbackMethod_ExportSelectionTable<WithCallbackMethod_ImportSelectionTable<Service > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_CreateSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateSelectionTable() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::CreateSelectionTableRequest* /*request*/, ::api::v1alpha1::CreateSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetSelectionTable() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GetSelectionTableRequest* /*request*/, ::api::v1alpha1::GetSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateSelectionTable() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_UpdateSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::UpdateSelectionTableRequest* /*request*/, ::api::v1alpha1::UpdateSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteSelectionTable() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_DeleteSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::DeleteSelectionTableRequest* /*request*/, ::api::v1alpha1::DeleteSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListSelectionTables : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListSelectionTables() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_ListSelectionTables() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListSelectionTables(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ListSelectionTablesRequest* /*request*/, ::api::v1alpha1::ListSelectionTablesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RollOnTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RollOnTable() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_RollOnTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RollOnTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::RollOnTableRequest* /*request*/, ::api::v1alpha1::RollOnTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RollMultiple : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RollMultiple() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_RollMultiple() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RollMultiple(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::RollMultipleRequest* /*request*/, ::api::v1alpha1::RollMultipleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RollWithModifiers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RollWithModifiers() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_RollWithModifiers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RollWithModifiers(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::RollWithModifiersRequest* /*request*/, ::api::v1alpha1::RollWithModifiersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_BatchRollTables : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_BatchRollTables() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_BatchRollTables() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchRollTables(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::BatchRollTablesRequest* /*request*/, ::api::v1alpha1::BatchRollTablesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GenerateEncounter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GenerateEncounter() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_GenerateEncounter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GenerateEncounter(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GenerateEncounterRequest* /*request*/, ::api::v1alpha1::GenerateEncounterResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GenerateLoot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GenerateLoot() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_GenerateLoot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GenerateLoot(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GenerateLootRequest* /*request*/, ::api::v1alpha1::GenerateLootResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ValidateSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ValidateSelectionTable() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_ValidateSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ValidateSelectionTableRequest* /*request*/, ::api::v1alpha1::ValidateSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetTableStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetTableStatistics() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_GetTableStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTableStatistics(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GetTableStatisticsRequest* /*request*/, ::api::v1alpha1::GetTableStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExportSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExportSelectionTable() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_ExportSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExportSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ExportSelectionTableRequest* /*request*/, ::api::v1alpha1::ExportSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ImportSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ImportSelectionTable() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_ImportSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ImportSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ImportSelectionTableRequest* /*request*/, ::api::v1alpha1::ImportSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateSelectionTable() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_CreateSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::CreateSelectionTableRequest* /*request*/, ::api::v1alpha1::CreateSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateSelectionTable(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetSelectionTable() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_GetSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GetSelectionTableRequest* /*request*/, ::api::v1alpha1::GetSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSelectionTable(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateSelectionTable() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_UpdateSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::UpdateSelectionTableRequest* /*request*/, ::api::v1alpha1::UpdateSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateSelectionTable(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteSelectionTable() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_DeleteSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::DeleteSelectionTableRequest* /*request*/, ::api::v1alpha1::DeleteSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteSelectionTable(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListSelectionTables : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListSelectionTables() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_ListSelectionTables() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListSelectionTables(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ListSelectionTablesRequest* /*request*/, ::api::v1alpha1::ListSelectionTablesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListSelectionTables(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RollOnTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RollOnTable() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_RollOnTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RollOnTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::RollOnTableRequest* /*request*/, ::api::v1alpha1::RollOnTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRollOnTable(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RollMultiple : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RollMultiple() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_RollMultiple() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RollMultiple(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::RollMultipleRequest* /*request*/, ::api::v1alpha1::RollMultipleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRollMultiple(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RollWithModifiers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RollWithModifiers() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_RollWithModifiers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RollWithModifiers(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::RollWithModifiersRequest* /*request*/, ::api::v1alpha1::RollWithModifiersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRollWithModifiers(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_BatchRollTables : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_BatchRollTables() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_BatchRollTables() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchRollTables(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::BatchRollTablesRequest* /*request*/, ::api::v1alpha1::BatchRollTablesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBatchRollTables(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GenerateEncounter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GenerateEncounter() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_GenerateEncounter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GenerateEncounter(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GenerateEncounterRequest* /*request*/, ::api::v1alpha1::GenerateEncounterResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGenerateEncounter(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GenerateLoot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GenerateLoot() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_GenerateLoot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GenerateLoot(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GenerateLootRequest* /*request*/, ::api::v1alpha1::GenerateLootResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGenerateLoot(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ValidateSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ValidateSelectionTable() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_ValidateSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ValidateSelectionTableRequest* /*request*/, ::api::v1alpha1::ValidateSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestValidateSelectionTable(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetTableStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetTableStatistics() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_GetTableStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTableStatistics(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GetTableStatisticsRequest* /*request*/, ::api::v1alpha1::GetTableStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTableStatistics(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExportSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExportSelectionTable() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_ExportSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExportSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ExportSelectionTableRequest* /*request*/, ::api::v1alpha1::ExportSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExportSelectionTable(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ImportSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ImportSelectionTable() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_ImportSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ImportSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ImportSelectionTableRequest* /*request*/, ::api::v1alpha1::ImportSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestImportSelectionTable(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateSelectionTable() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateSelectionTable(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::CreateSelectionTableRequest* /*request*/, ::api::v1alpha1::CreateSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateSelectionTable(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetSelectionTable() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetSelectionTable(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GetSelectionTableRequest* /*request*/, ::api::v1alpha1::GetSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSelectionTable(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateSelectionTable() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateSelectionTable(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::UpdateSelectionTableRequest* /*request*/, ::api::v1alpha1::UpdateSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateSelectionTable(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteSelectionTable() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteSelectionTable(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::DeleteSelectionTableRequest* /*request*/, ::api::v1alpha1::DeleteSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteSelectionTable(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListSelectionTables : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListSelectionTables() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListSelectionTables(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListSelectionTables() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListSelectionTables(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ListSelectionTablesRequest* /*request*/, ::api::v1alpha1::ListSelectionTablesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListSelectionTables(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RollOnTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RollOnTable() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RollOnTable(context, request, response); }));
    }
    ~WithRawCallbackMethod_RollOnTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RollOnTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::RollOnTableRequest* /*request*/, ::api::v1alpha1::RollOnTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RollOnTable(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RollMultiple : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RollMultiple() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RollMultiple(context, request, response); }));
    }
    ~WithRawCallbackMethod_RollMultiple() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RollMultiple(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::RollMultipleRequest* /*request*/, ::api::v1alpha1::RollMultipleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RollMultiple(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RollWithModifiers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RollWithModifiers() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RollWithModifiers(context, request, response); }));
    }
    ~WithRawCallbackMethod_RollWithModifiers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RollWithModifiers(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::RollWithModifiersRequest* /*request*/, ::api::v1alpha1::RollWithModifiersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RollWithModifiers(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_BatchRollTables : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_BatchRollTables() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->BatchRollTables(context, request, response); }));
    }
    ~WithRawCallbackMethod_BatchRollTables() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BatchRollTables(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::BatchRollTablesRequest* /*request*/, ::api::v1alpha1::BatchRollTablesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* BatchRollTables(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GenerateEncounter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GenerateEncounter() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GenerateEncounter(context, request, response); }));
    }
    ~WithRawCallbackMethod_GenerateEncounter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GenerateEncounter(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GenerateEncounterRequest* /*request*/, ::api::v1alpha1::GenerateEncounterResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GenerateEncounter(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GenerateLoot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GenerateLoot() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GenerateLoot(context, request, response); }));
    }
    ~WithRawCallbackMethod_GenerateLoot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GenerateLoot(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GenerateLootRequest* /*request*/, ::api::v1alpha1::GenerateLootResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GenerateLoot(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ValidateSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ValidateSelectionTable() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ValidateSelectionTable(context, request, response); }));
    }
    ~WithRawCallbackMethod_ValidateSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ValidateSelectionTableRequest* /*request*/, ::api::v1alpha1::ValidateSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ValidateSelectionTable(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetTableStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetTableStatistics() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetTableStatistics(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetTableStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTableStatistics(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GetTableStatisticsRequest* /*request*/, ::api::v1alpha1::GetTableStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetTableStatistics(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ExportSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ExportSelectionTable() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExportSelectionTable(context, request, response); }));
    }
    ~WithRawCallbackMethod_ExportSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExportSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ExportSelectionTableRequest* /*request*/, ::api::v1alpha1::ExportSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ExportSelectionTable(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ImportSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ImportSelectionTable() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ImportSelectionTable(context, request, response); }));
    }
    ~WithRawCallbackMethod_ImportSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ImportSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ImportSelectionTableRequest* /*request*/, ::api::v1alpha1::ImportSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ImportSelectionTable(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateSelectionTable() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::v1alpha1::CreateSelectionTableRequest, ::api::v1alpha1::CreateSelectionTableResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::api::v1alpha1::CreateSelectionTableRequest, ::api::v1alpha1::CreateSelectionTableResponse>* streamer) {
                       return this->StreamedCreateSelectionTable(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::CreateSelectionTableRequest* /*request*/, ::api::v1alpha1::CreateSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateSelectionTable(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::v1alpha1::CreateSelectionTableRequest,::api::v1alpha1::CreateSelectionTableResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetSelectionTable() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::v1alpha1::GetSelectionTableRequest, ::api::v1alpha1::GetSelectionTableResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::api::v1alpha1::GetSelectionTableRequest, ::api::v1alpha1::GetSelectionTableResponse>* streamer) {
                       return this->StreamedGetSelectionTable(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GetSelectionTableRequest* /*request*/, ::api::v1alpha1::GetSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetSelectionTable(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::v1alpha1::GetSelectionTableRequest,::api::v1alpha1::GetSelectionTableResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateSelectionTable() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::v1alpha1::UpdateSelectionTableRequest, ::api::v1alpha1::UpdateSelectionTableResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::api::v1alpha1::UpdateSelectionTableRequest, ::api::v1alpha1::UpdateSelectionTableResponse>* streamer) {
                       return this->StreamedUpdateSelectionTable(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::UpdateSelectionTableRequest* /*request*/, ::api::v1alpha1::UpdateSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateSelectionTable(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::v1alpha1::UpdateSelectionTableRequest,::api::v1alpha1::UpdateSelectionTableResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteSelectionTable() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::v1alpha1::DeleteSelectionTableRequest, ::api::v1alpha1::DeleteSelectionTableResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::api::v1alpha1::DeleteSelectionTableRequest, ::api::v1alpha1::DeleteSelectionTableResponse>* streamer) {
                       return this->StreamedDeleteSelectionTable(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::DeleteSelectionTableRequest* /*request*/, ::api::v1alpha1::DeleteSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteSelectionTable(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::v1alpha1::DeleteSelectionTableRequest,::api::v1alpha1::DeleteSelectionTableResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListSelectionTables : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListSelectionTables() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::v1alpha1::ListSelectionTablesRequest, ::api::v1alpha1::ListSelectionTablesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::api::v1alpha1::ListSelectionTablesRequest, ::api::v1alpha1::ListSelectionTablesResponse>* streamer) {
                       return this->StreamedListSelectionTables(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListSelectionTables() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListSelectionTables(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ListSelectionTablesRequest* /*request*/, ::api::v1alpha1::ListSelectionTablesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListSelectionTables(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::v1alpha1::ListSelectionTablesRequest,::api::v1alpha1::ListSelectionTablesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RollOnTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RollOnTable() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::v1alpha1::RollOnTableRequest, ::api::v1alpha1::RollOnTableResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::api::v1alpha1::RollOnTableRequest, ::api::v1alpha1::RollOnTableResponse>* streamer) {
                       return this->StreamedRollOnTable(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RollOnTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RollOnTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::RollOnTableRequest* /*request*/, ::api::v1alpha1::RollOnTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRollOnTable(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::v1alpha1::RollOnTableRequest,::api::v1alpha1::RollOnTableResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RollMultiple : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RollMultiple() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::v1alpha1::RollMultipleRequest, ::api::v1alpha1::RollMultipleResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::api::v1alpha1::RollMultipleRequest, ::api::v1alpha1::RollMultipleResponse>* streamer) {
                       return this->StreamedRollMultiple(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RollMultiple() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RollMultiple(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::RollMultipleRequest* /*request*/, ::api::v1alpha1::RollMultipleResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRollMultiple(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::v1alpha1::RollMultipleRequest,::api::v1alpha1::RollMultipleResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RollWithModifiers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RollWithModifiers() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::v1alpha1::RollWithModifiersRequest, ::api::v1alpha1::RollWithModifiersResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::api::v1alpha1::RollWithModifiersRequest, ::api::v1alpha1::RollWithModifiersResponse>* streamer) {
                       return this->StreamedRollWithModifiers(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RollWithModifiers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RollWithModifiers(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::RollWithModifiersRequest* /*request*/, ::api::v1alpha1::RollWithModifiersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRollWithModifiers(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::v1alpha1::RollWithModifiersRequest,::api::v1alpha1::RollWithModifiersResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_BatchRollTables : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_BatchRollTables() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::v1alpha1::BatchRollTablesRequest, ::api::v1alpha1::BatchRollTablesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::api::v1alpha1::BatchRollTablesRequest, ::api::v1alpha1::BatchRollTablesResponse>* streamer) {
                       return this->StreamedBatchRollTables(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_BatchRollTables() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status BatchRollTables(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::BatchRollTablesRequest* /*request*/, ::api::v1alpha1::BatchRollTablesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedBatchRollTables(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::v1alpha1::BatchRollTablesRequest,::api::v1alpha1::BatchRollTablesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GenerateEncounter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GenerateEncounter() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::v1alpha1::GenerateEncounterRequest, ::api::v1alpha1::GenerateEncounterResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::api::v1alpha1::GenerateEncounterRequest, ::api::v1alpha1::GenerateEncounterResponse>* streamer) {
                       return this->StreamedGenerateEncounter(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GenerateEncounter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GenerateEncounter(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GenerateEncounterRequest* /*request*/, ::api::v1alpha1::GenerateEncounterResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGenerateEncounter(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::v1alpha1::GenerateEncounterRequest,::api::v1alpha1::GenerateEncounterResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GenerateLoot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GenerateLoot() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::v1alpha1::GenerateLootRequest, ::api::v1alpha1::GenerateLootResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::api::v1alpha1::GenerateLootRequest, ::api::v1alpha1::GenerateLootResponse>* streamer) {
                       return this->StreamedGenerateLoot(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GenerateLoot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GenerateLoot(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GenerateLootRequest* /*request*/, ::api::v1alpha1::GenerateLootResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGenerateLoot(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::v1alpha1::GenerateLootRequest,::api::v1alpha1::GenerateLootResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ValidateSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ValidateSelectionTable() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::v1alpha1::ValidateSelectionTableRequest, ::api::v1alpha1::ValidateSelectionTableResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::api::v1alpha1::ValidateSelectionTableRequest, ::api::v1alpha1::ValidateSelectionTableResponse>* streamer) {
                       return this->StreamedValidateSelectionTable(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ValidateSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ValidateSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ValidateSelectionTableRequest* /*request*/, ::api::v1alpha1::ValidateSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedValidateSelectionTable(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::v1alpha1::ValidateSelectionTableRequest,::api::v1alpha1::ValidateSelectionTableResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetTableStatistics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetTableStatistics() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::v1alpha1::GetTableStatisticsRequest, ::api::v1alpha1::GetTableStatisticsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::api::v1alpha1::GetTableStatisticsRequest, ::api::v1alpha1::GetTableStatisticsResponse>* streamer) {
                       return this->StreamedGetTableStatistics(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetTableStatistics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetTableStatistics(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::GetTableStatisticsRequest* /*request*/, ::api::v1alpha1::GetTableStatisticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetTableStatistics(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::v1alpha1::GetTableStatisticsRequest,::api::v1alpha1::GetTableStatisticsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExportSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExportSelectionTable() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::v1alpha1::ExportSelectionTableRequest, ::api::v1alpha1::ExportSelectionTableResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::api::v1alpha1::ExportSelectionTableRequest, ::api::v1alpha1::ExportSelectionTableResponse>* streamer) {
                       return this->StreamedExportSelectionTable(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ExportSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExportSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ExportSelectionTableRequest* /*request*/, ::api::v1alpha1::ExportSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExportSelectionTable(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::v1alpha1::ExportSelectionTableRequest,::api::v1alpha1::ExportSelectionTableResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ImportSelectionTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ImportSelectionTable() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::api::v1alpha1::ImportSelectionTableRequest, ::api::v1alpha1::ImportSelectionTableResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::api::v1alpha1::ImportSelectionTableRequest, ::api::v1alpha1::ImportSelectionTableResponse>* streamer) {
                       return this->StreamedImportSelectionTable(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ImportSelectionTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ImportSelectionTable(::grpc::ServerContext* /*context*/, const ::api::v1alpha1::ImportSelectionTableRequest* /*request*/, ::api::v1alpha1::ImportSelectionTableResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedImportSelectionTable(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::api::v1alpha1::ImportSelectionTableRequest,::api::v1alpha1::ImportSelectionTableResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateSelectionTable<WithStreamedUnaryMethod_GetSelectionTable<WithStreamedUnaryMethod_UpdateSelectionTable<WithStreamedUnaryMethod_DeleteSelectionTable<WithStreamedUnaryMethod_ListSelectionTables<WithStreamedUnaryMethod_RollOnTable<WithStreamedUnaryMethod_RollMultiple<WithStreamedUnaryMethod_RollWithModifiers<WithStreamedUnaryMethod_BatchRollTables<WithStreamedUnaryMethod_GenerateEncounter<WithStreamedUnaryMethod_GenerateLoot<WithStreamedUnaryMethod_ValidateSelectionTable<WithStreamedUnaryMethod_GetTableStatistics<WithStreamedUnaryMethod_ExportSelectionTable<WithStreamedUnaryMethod_ImportSelectionTable<Service > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateSelectionTable<WithStreamedUnaryMethod_GetSelectionTable<WithStreamedUnaryMethod_UpdateSelectionTable<WithStreamedUnaryMethod_DeleteSelectionTable<WithStreamedUnaryMethod_ListSelectionTables<WithStreamedUnaryMethod_RollOnTable<WithStreamedUnaryMethod_RollMultiple<WithStreamedUnaryMethod_RollWithModifiers<WithStreamedUnaryMethod_BatchRollTables<WithStreamedUnaryMethod_GenerateEncounter<WithStreamedUnaryMethod_GenerateLoot<WithStreamedUnaryMethod_ValidateSelectionTable<WithStreamedUnaryMethod_GetTableStatistics<WithStreamedUnaryMethod_ExportSelectionTable<WithStreamedUnaryMethod_ImportSelectionTable<Service > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace v1alpha1
}  // namespace api


#include <grpcpp/ports_undef.inc>
#endif  // GRPC_api_2fv1alpha1_2froom_5fselectables_2eproto__INCLUDED
