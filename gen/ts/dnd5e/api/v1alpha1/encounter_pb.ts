// @generated by protoc-gen-es v2.6.1 with parameter "target=ts"
// @generated from file dnd5e/api/v1alpha1/encounter.proto (package dnd5e.api.v1alpha1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { GridType, Position } from "../../../api/v1alpha1/room_common_pb";
import { file_api_v1alpha1_room_common } from "../../../api/v1alpha1/room_common_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file dnd5e/api/v1alpha1/encounter.proto.
 */
export const file_dnd5e_api_v1alpha1_encounter: GenFile = /*@__PURE__*/
  fileDesc("CiJkbmQ1ZS9hcGkvdjFhbHBoYTEvZW5jb3VudGVyLnByb3RvEhJkbmQ1ZS5hcGkudjFhbHBoYTEiYwoPRW50aXR5UGxhY2VtZW50EhEKCWVudGl0eV9pZBgBIAEoCRITCgtlbnRpdHlfdHlwZRgCIAEoCRIoCghwb3NpdGlvbhgDIAEoCzIWLmFwaS52MWFscGhhMS5Qb3NpdGlvbiKMAgoEUm9vbRIKCgJpZBgBIAEoCRIMCgR0eXBlGAIgASgJEg0KBXdpZHRoGAMgASgFEg4KBmhlaWdodBgEIAEoBRIpCglncmlkX3R5cGUYBSABKA4yFi5hcGkudjFhbHBoYTEuR3JpZFR5cGUSNQoIZW50aXRpZXMYBiADKAsyIy5kbmQ1ZS5hcGkudjFhbHBoYTEuRW50aXR5UGxhY2VtZW50EjgKCG1ldGFkYXRhGAcgAygLMiYuZG5kNWUuYXBpLnYxYWxwaGExLlJvb20uTWV0YWRhdGFFbnRyeRovCg1NZXRhZGF0YUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiLAoTRHVuZ2VvblN0YXJ0UmVxdWVzdBIVCg1jaGFyYWN0ZXJfaWRzGAEgAygJIlQKFER1bmdlb25TdGFydFJlc3BvbnNlEhQKDGVuY291bnRlcl9pZBgBIAEoCRImCgRyb29tGAIgASgLMhguZG5kNWUuYXBpLnYxYWxwaGExLlJvb20ydQoQRW5jb3VudGVyU2VydmljZRJhCgxEdW5nZW9uU3RhcnQSJy5kbmQ1ZS5hcGkudjFhbHBoYTEuRHVuZ2VvblN0YXJ0UmVxdWVzdBooLmRuZDVlLmFwaS52MWFscGhhMS5EdW5nZW9uU3RhcnRSZXNwb25zZULfAQoWY29tLmRuZDVlLmFwaS52MWFscGhhMUIORW5jb3VudGVyUHJvdG9QAVpLZ2l0aHViLmNvbS9LaXJrRGlnZ2xlci9ycGctYXBpLXByb3Rvcy9nZW4vZ28vZG5kNWUvYXBpL3YxYWxwaGExO2FwaXYxYWxwaGExogIDREFYqgISRG5kNWUuQXBpLlYxYWxwaGExygISRG5kNWVcQXBpXFYxYWxwaGEx4gIeRG5kNWVcQXBpXFYxYWxwaGExXEdQQk1ldGFkYXRh6gIURG5kNWU6OkFwaTo6VjFhbHBoYTFiBnByb3RvMw", [file_api_v1alpha1_room_common]);

/**
 * EntityPlacement represents where an entity is positioned
 *
 * @generated from message dnd5e.api.v1alpha1.EntityPlacement
 */
export type EntityPlacement = Message<"dnd5e.api.v1alpha1.EntityPlacement"> & {
  /**
   * Unique identifier for the entity
   *
   * @generated from field: string entity_id = 1;
   */
  entityId: string;

  /**
   * Type of entity (e.g., "character", "monster", "object")
   *
   * @generated from field: string entity_type = 2;
   */
  entityType: string;

  /**
   * Position in the room
   *
   * @generated from field: api.v1alpha1.Position position = 3;
   */
  position?: Position;
};

/**
 * Describes the message dnd5e.api.v1alpha1.EntityPlacement.
 * Use `create(EntityPlacementSchema)` to create a new message.
 */
export const EntityPlacementSchema: GenMessage<EntityPlacement> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_encounter, 0);

/**
 * Room represents a spatial area where encounters take place
 *
 * @generated from message dnd5e.api.v1alpha1.Room
 */
export type Room = Message<"dnd5e.api.v1alpha1.Room"> & {
  /**
   * Unique identifier for the room
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Type of room (e.g., "dungeon", "tavern", "outdoor")
   *
   * @generated from field: string type = 2;
   */
  type: string;

  /**
   * Width of the room in grid units
   *
   * @generated from field: int32 width = 3;
   */
  width: number;

  /**
   * Height of the room in grid units
   *
   * @generated from field: int32 height = 4;
   */
  height: number;

  /**
   * Grid system used in this room
   *
   * @generated from field: api.v1alpha1.GridType grid_type = 5;
   */
  gridType: GridType;

  /**
   * Entities placed in the room
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.EntityPlacement entities = 6;
   */
  entities: EntityPlacement[];

  /**
   * Custom metadata for the room
   *
   * @generated from field: map<string, string> metadata = 7;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message dnd5e.api.v1alpha1.Room.
 * Use `create(RoomSchema)` to create a new message.
 */
export const RoomSchema: GenMessage<Room> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_encounter, 1);

/**
 * DungeonStartRequest initiates a simple dungeon encounter
 *
 * @generated from message dnd5e.api.v1alpha1.DungeonStartRequest
 */
export type DungeonStartRequest = Message<"dnd5e.api.v1alpha1.DungeonStartRequest"> & {
  /**
   * IDs of the characters entering the dungeon
   *
   * @generated from field: repeated string character_ids = 1;
   */
  characterIds: string[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.DungeonStartRequest.
 * Use `create(DungeonStartRequestSchema)` to create a new message.
 */
export const DungeonStartRequestSchema: GenMessage<DungeonStartRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_encounter, 2);

/**
 * DungeonStartResponse contains the generated encounter
 *
 * @generated from message dnd5e.api.v1alpha1.DungeonStartResponse
 */
export type DungeonStartResponse = Message<"dnd5e.api.v1alpha1.DungeonStartResponse"> & {
  /**
   * Unique identifier for this encounter
   *
   * @generated from field: string encounter_id = 1;
   */
  encounterId: string;

  /**
   * The generated room with all entities placed (including characters)
   *
   * @generated from field: dnd5e.api.v1alpha1.Room room = 2;
   */
  room?: Room;
};

/**
 * Describes the message dnd5e.api.v1alpha1.DungeonStartResponse.
 * Use `create(DungeonStartResponseSchema)` to create a new message.
 */
export const DungeonStartResponseSchema: GenMessage<DungeonStartResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_encounter, 3);

/**
 * EncounterService manages D&D 5e encounters
 *
 * @generated from service dnd5e.api.v1alpha1.EncounterService
 */
export const EncounterService: GenService<{
  /**
   * DungeonStart generates a simple starting room for testing
   *
   * @generated from rpc dnd5e.api.v1alpha1.EncounterService.DungeonStart
   */
  dungeonStart: {
    methodKind: "unary";
    input: typeof DungeonStartRequestSchema;
    output: typeof DungeonStartResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_dnd5e_api_v1alpha1_encounter, 0);

