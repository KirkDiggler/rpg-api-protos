// @generated by protoc-gen-es v2.8.0 with parameter "target=ts"
// @generated from file dnd5e/api/v1alpha1/character.proto (package dnd5e.api.v1alpha1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { ValidationError, ValidationResult, ValidationWarning } from "./common_pb";
import { file_dnd5e_api_v1alpha1_common } from "./common_pb";
import type { Ability, Alignment, Ammunition, Armor, ArmorCategory, Background, Class, DamageType, EquipmentCategory, EquipmentType, FightingStyle, GearCategory, Language, Pack, Race, Skill, Spell, Subclass, Subrace, Tool, Trait, Weapon, WeaponCategory } from "./enums_pb";
import { file_dnd5e_api_v1alpha1_enums } from "./enums_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file dnd5e/api/v1alpha1/character.proto.
 */
export const file_dnd5e_api_v1alpha1_character: GenFile = /*@__PURE__*/
  fileDesc("", [file_dnd5e_api_v1alpha1_common, file_dnd5e_api_v1alpha1_enums]);

/**
 * Character feature (class features, racial traits, etc)
 *
 * @generated from message dnd5e.api.v1alpha1.CharacterFeature
 */
export type CharacterFeature = Message<"dnd5e.api.v1alpha1.CharacterFeature"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * "class", "race", "background", etc
   *
   * @generated from field: string source = 4;
   */
  source: string;

  /**
   * Level when gained (0 for racial/background)
   *
   * @generated from field: int32 level = 5;
   */
  level: number;
};

/**
 * Describes the message dnd5e.api.v1alpha1.CharacterFeature.
 * Use `create(CharacterFeatureSchema)` to create a new message.
 */
export const CharacterFeatureSchema: GenMessage<CharacterFeature> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 0);

/**
 * Class resource (rage uses, ki points, etc)
 *
 * @generated from message dnd5e.api.v1alpha1.ClassResource
 */
export type ClassResource = Message<"dnd5e.api.v1alpha1.ClassResource"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.ClassResourceType type = 1;
   */
  type: ClassResourceType;

  /**
   * Display name
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: int32 current = 3;
   */
  current: number;

  /**
   * @generated from field: int32 maximum = 4;
   */
  maximum: number;

  /**
   * @generated from field: dnd5e.api.v1alpha1.RechargeType recharge = 5;
   */
  recharge: RechargeType;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ClassResource.
 * Use `create(ClassResourceSchema)` to create a new message.
 */
export const ClassResourceSchema: GenMessage<ClassResource> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 1);

/**
 * Spell slots by level
 *
 * @generated from message dnd5e.api.v1alpha1.SpellSlots
 */
export type SpellSlots = Message<"dnd5e.api.v1alpha1.SpellSlots"> & {
  /**
   * @generated from field: int32 level_1 = 1;
   */
  level1: number;

  /**
   * @generated from field: int32 level_2 = 2;
   */
  level2: number;

  /**
   * @generated from field: int32 level_3 = 3;
   */
  level3: number;

  /**
   * @generated from field: int32 level_4 = 4;
   */
  level4: number;

  /**
   * @generated from field: int32 level_5 = 5;
   */
  level5: number;

  /**
   * @generated from field: int32 level_6 = 6;
   */
  level6: number;

  /**
   * @generated from field: int32 level_7 = 7;
   */
  level7: number;

  /**
   * @generated from field: int32 level_8 = 8;
   */
  level8: number;

  /**
   * @generated from field: int32 level_9 = 9;
   */
  level9: number;
};

/**
 * Describes the message dnd5e.api.v1alpha1.SpellSlots.
 * Use `create(SpellSlotsSchema)` to create a new message.
 */
export const SpellSlotsSchema: GenMessage<SpellSlots> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 2);

/**
 * Ability scores for a character
 *
 * @generated from message dnd5e.api.v1alpha1.AbilityScores
 */
export type AbilityScores = Message<"dnd5e.api.v1alpha1.AbilityScores"> & {
  /**
   * Strength score (3-18 before racial modifiers)
   *
   * @generated from field: int32 strength = 1;
   */
  strength: number;

  /**
   * Dexterity score (3-18 before racial modifiers)
   *
   * @generated from field: int32 dexterity = 2;
   */
  dexterity: number;

  /**
   * Constitution score (3-18 before racial modifiers)
   *
   * @generated from field: int32 constitution = 3;
   */
  constitution: number;

  /**
   * Intelligence score (3-18 before racial modifiers)
   *
   * @generated from field: int32 intelligence = 4;
   */
  intelligence: number;

  /**
   * Wisdom score (3-18 before racial modifiers)
   *
   * @generated from field: int32 wisdom = 5;
   */
  wisdom: number;

  /**
   * Charisma score (3-18 before racial modifiers)
   *
   * @generated from field: int32 charisma = 6;
   */
  charisma: number;
};

/**
 * Describes the message dnd5e.api.v1alpha1.AbilityScores.
 * Use `create(AbilityScoresSchema)` to create a new message.
 */
export const AbilityScoresSchema: GenMessage<AbilityScores> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 3);

/**
 * A complete D&D 5e character
 *
 * @generated from message dnd5e.api.v1alpha1.Character
 */
export type Character = Message<"dnd5e.api.v1alpha1.Character"> & {
  /**
   * Unique identifier
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Character name
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Character level (starts at 1)
   *
   * @generated from field: int32 level = 3;
   */
  level: number;

  /**
   * Experience points
   *
   * @generated from field: int32 experience_points = 4;
   */
  experiencePoints: number;

  /**
   * Character race
   *
   * @generated from field: dnd5e.api.v1alpha1.Race race = 5;
   */
  race: Race;

  /**
   * Character subrace if applicable
   *
   * @generated from field: dnd5e.api.v1alpha1.Subrace subrace = 6;
   */
  subrace: Subrace;

  /**
   * Character class
   *
   * @generated from field: dnd5e.api.v1alpha1.Class class = 7;
   */
  class: Class;

  /**
   * Character background
   *
   * @generated from field: dnd5e.api.v1alpha1.Background background = 8;
   */
  background: Background;

  /**
   * Character alignment
   *
   * @generated from field: dnd5e.api.v1alpha1.Alignment alignment = 9;
   */
  alignment: Alignment;

  /**
   * Final ability scores (with racial modifiers applied)
   *
   * @generated from field: dnd5e.api.v1alpha1.AbilityScores ability_scores = 10;
   */
  abilityScores?: AbilityScores;

  /**
   * Ability modifiers (calculated from scores)
   *
   * @generated from field: dnd5e.api.v1alpha1.AbilityModifiers ability_modifiers = 11;
   */
  abilityModifiers?: AbilityModifiers;

  /**
   * Calculated combat values
   *
   * @generated from field: dnd5e.api.v1alpha1.CombatStats combat_stats = 12;
   */
  combatStats?: CombatStats;

  /**
   * Proficiencies
   *
   * @generated from field: dnd5e.api.v1alpha1.Proficiencies proficiencies = 13;
   */
  proficiencies?: Proficiencies;

  /**
   * Known languages
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.Language languages = 14;
   */
  languages: Language[];

  /**
   * Current hit points
   *
   * @generated from field: int32 current_hit_points = 15;
   */
  currentHitPoints: number;

  /**
   * Temporary hit points
   *
   * @generated from field: int32 temporary_hit_points = 16;
   */
  temporaryHitPoints: number;

  /**
   * Session association if any
   *
   * @generated from field: string session_id = 17;
   */
  sessionId: string;

  /**
   * Metadata
   *
   * @generated from field: dnd5e.api.v1alpha1.CharacterMetadata metadata = 18;
   */
  metadata?: CharacterMetadata;

  /**
   * Equipment slots (weapons, armor, etc.)
   *
   * @generated from field: dnd5e.api.v1alpha1.EquipmentSlots equipment_slots = 19;
   */
  equipmentSlots?: EquipmentSlots;

  /**
   * Inventory (unequipped items)
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.InventoryItem inventory = 20;
   */
  inventory: InventoryItem[];

  /**
   * Carrying capacity and encumbrance
   *
   * @generated from field: dnd5e.api.v1alpha1.EncumbranceInfo encumbrance = 21;
   */
  encumbrance?: EncumbranceInfo;

  /**
   * Class features and choices
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.CharacterFeature features = 22;
   */
  features: CharacterFeature[];

  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.FightingStyle fighting_styles = 23;
   */
  fightingStyles: FightingStyle[];

  /**
   * Racial traits
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.CharacterFeature racial_traits = 24;
   */
  racialTraits: CharacterFeature[];

  /**
   * Background feature
   *
   * @generated from field: dnd5e.api.v1alpha1.CharacterFeature background_feature = 25;
   */
  backgroundFeature?: CharacterFeature;

  /**
   * Class resources (rage uses, ki points, etc)
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.ClassResource class_resources = 26;
   */
  classResources: ClassResource[];

  /**
   * Spell slots for casters
   *
   * @generated from field: dnd5e.api.v1alpha1.SpellSlots spell_slots = 27;
   */
  spellSlots?: SpellSlots;
};

/**
 * Describes the message dnd5e.api.v1alpha1.Character.
 * Use `create(CharacterSchema)` to create a new message.
 */
export const CharacterSchema: GenMessage<Character> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 4);

/**
 * Ability modifiers calculated from scores
 *
 * @generated from message dnd5e.api.v1alpha1.AbilityModifiers
 */
export type AbilityModifiers = Message<"dnd5e.api.v1alpha1.AbilityModifiers"> & {
  /**
   * @generated from field: int32 strength = 1;
   */
  strength: number;

  /**
   * @generated from field: int32 dexterity = 2;
   */
  dexterity: number;

  /**
   * @generated from field: int32 constitution = 3;
   */
  constitution: number;

  /**
   * @generated from field: int32 intelligence = 4;
   */
  intelligence: number;

  /**
   * @generated from field: int32 wisdom = 5;
   */
  wisdom: number;

  /**
   * @generated from field: int32 charisma = 6;
   */
  charisma: number;
};

/**
 * Describes the message dnd5e.api.v1alpha1.AbilityModifiers.
 * Use `create(AbilityModifiersSchema)` to create a new message.
 */
export const AbilityModifiersSchema: GenMessage<AbilityModifiers> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 5);

/**
 * Combat-related statistics
 *
 * @generated from message dnd5e.api.v1alpha1.CombatStats
 */
export type CombatStats = Message<"dnd5e.api.v1alpha1.CombatStats"> & {
  /**
   * Maximum hit points
   *
   * @generated from field: int32 hit_point_maximum = 1;
   */
  hitPointMaximum: number;

  /**
   * Armor class
   *
   * @generated from field: int32 armor_class = 2;
   */
  armorClass: number;

  /**
   * Initiative modifier
   *
   * @generated from field: int32 initiative = 3;
   */
  initiative: number;

  /**
   * Base movement speed in feet
   *
   * @generated from field: int32 speed = 4;
   */
  speed: number;

  /**
   * Proficiency bonus
   *
   * @generated from field: int32 proficiency_bonus = 5;
   */
  proficiencyBonus: number;

  /**
   * Hit dice (e.g., 1d10 for fighter)
   *
   * @generated from field: string hit_dice = 6;
   */
  hitDice: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.CombatStats.
 * Use `create(CombatStatsSchema)` to create a new message.
 */
export const CombatStatsSchema: GenMessage<CombatStats> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 6);

/**
 * Proficiency grants structure to match toolkit approach
 *
 * @generated from message dnd5e.api.v1alpha1.ProficiencyGrants
 */
export type ProficiencyGrants = Message<"dnd5e.api.v1alpha1.ProficiencyGrants"> & {
  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.Armor armor = 1;
   */
  armor: Armor[];

  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.Weapon weapons = 2;
   */
  weapons: Weapon[];

  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.Tool tools = 3;
   */
  tools: Tool[];

  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.Skill skills = 4;
   */
  skills: Skill[];

  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.Language languages = 5;
   */
  languages: Language[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.ProficiencyGrants.
 * Use `create(ProficiencyGrantsSchema)` to create a new message.
 */
export const ProficiencyGrantsSchema: GenMessage<ProficiencyGrants> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 7);

/**
 * Character proficiencies
 *
 * @generated from message dnd5e.api.v1alpha1.Proficiencies
 */
export type Proficiencies = Message<"dnd5e.api.v1alpha1.Proficiencies"> & {
  /**
   * Skill proficiencies
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.Skill skills = 1;
   */
  skills: Skill[];

  /**
   * Saving throw proficiencies
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.Ability saving_throws = 2;
   */
  savingThrows: Ability[];

  /**
   * Armor proficiencies - now using typed enums to match toolkit
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.Armor armor = 3;
   */
  armor: Armor[];

  /**
   * Weapon proficiencies - now using typed enums to match toolkit
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.Weapon weapons = 4;
   */
  weapons: Weapon[];

  /**
   * Tool proficiencies - now using typed enums to match toolkit
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.Tool tools = 5;
   */
  tools: Tool[];

  /**
   * DEPRECATED: Use armor field instead - kept for backward compatibility
   *
   * @generated from field: repeated string armor_strings = 6 [deprecated = true];
   * @deprecated
   */
  armorStrings: string[];

  /**
   * DEPRECATED: Use weapons field instead - kept for backward compatibility
   *
   * @generated from field: repeated string weapon_strings = 7 [deprecated = true];
   * @deprecated
   */
  weaponStrings: string[];

  /**
   * DEPRECATED: Use tools field instead - kept for backward compatibility
   *
   * @generated from field: repeated string tool_strings = 8 [deprecated = true];
   * @deprecated
   */
  toolStrings: string[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.Proficiencies.
 * Use `create(ProficienciesSchema)` to create a new message.
 */
export const ProficienciesSchema: GenMessage<Proficiencies> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 8);

/**
 * Character metadata
 *
 * @generated from message dnd5e.api.v1alpha1.CharacterMetadata
 */
export type CharacterMetadata = Message<"dnd5e.api.v1alpha1.CharacterMetadata"> & {
  /**
   * When the character was created
   *
   * @generated from field: int64 created_at = 1;
   */
  createdAt: bigint;

  /**
   * When the character was last updated
   *
   * @generated from field: int64 updated_at = 2;
   */
  updatedAt: bigint;

  /**
   * Player/user who owns this character
   *
   * @generated from field: string player_id = 3;
   */
  playerId: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.CharacterMetadata.
 * Use `create(CharacterMetadataSchema)` to create a new message.
 */
export const CharacterMetadataSchema: GenMessage<CharacterMetadata> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 9);

/**
 * Request to get a character
 *
 * @generated from message dnd5e.api.v1alpha1.GetCharacterRequest
 */
export type GetCharacterRequest = Message<"dnd5e.api.v1alpha1.GetCharacterRequest"> & {
  /**
   * The character ID to retrieve
   *
   * @generated from field: string character_id = 1;
   */
  characterId: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.GetCharacterRequest.
 * Use `create(GetCharacterRequestSchema)` to create a new message.
 */
export const GetCharacterRequestSchema: GenMessage<GetCharacterRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 10);

/**
 * Response containing a character
 *
 * @generated from message dnd5e.api.v1alpha1.GetCharacterResponse
 */
export type GetCharacterResponse = Message<"dnd5e.api.v1alpha1.GetCharacterResponse"> & {
  /**
   * The requested character
   *
   * @generated from field: dnd5e.api.v1alpha1.Character character = 1;
   */
  character?: Character;
};

/**
 * Describes the message dnd5e.api.v1alpha1.GetCharacterResponse.
 * Use `create(GetCharacterResponseSchema)` to create a new message.
 */
export const GetCharacterResponseSchema: GenMessage<GetCharacterResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 11);

/**
 * Request to list characters
 *
 * @generated from message dnd5e.api.v1alpha1.ListCharactersRequest
 */
export type ListCharactersRequest = Message<"dnd5e.api.v1alpha1.ListCharactersRequest"> & {
  /**
   * Maximum number of characters to return (1-100, default 20)
   *
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * Page token from previous response
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  /**
   * Filter by session ID
   *
   * @generated from field: string session_id = 3;
   */
  sessionId: string;

  /**
   * Filter by player ID
   *
   * @generated from field: string player_id = 4;
   */
  playerId: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ListCharactersRequest.
 * Use `create(ListCharactersRequestSchema)` to create a new message.
 */
export const ListCharactersRequestSchema: GenMessage<ListCharactersRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 12);

/**
 * Response containing a list of characters
 *
 * @generated from message dnd5e.api.v1alpha1.ListCharactersResponse
 */
export type ListCharactersResponse = Message<"dnd5e.api.v1alpha1.ListCharactersResponse"> & {
  /**
   * The list of characters
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.Character characters = 1;
   */
  characters: Character[];

  /**
   * Token for next page if available
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Total number of characters matching filters
   *
   * @generated from field: int32 total_size = 3;
   */
  totalSize: number;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ListCharactersResponse.
 * Use `create(ListCharactersResponseSchema)` to create a new message.
 */
export const ListCharactersResponseSchema: GenMessage<ListCharactersResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 13);

/**
 * Request to update a character
 *
 * @generated from message dnd5e.api.v1alpha1.UpdateCharacterRequest
 */
export type UpdateCharacterRequest = Message<"dnd5e.api.v1alpha1.UpdateCharacterRequest"> & {
  /**
   * The character to update (ID required)
   *
   * @generated from field: dnd5e.api.v1alpha1.Character character = 1;
   */
  character?: Character;

  /**
   * Field mask to specify which fields to update
   * For now, we'll allow updating specific fields
   *
   * @generated from field: repeated string update_mask = 2;
   */
  updateMask: string[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.UpdateCharacterRequest.
 * Use `create(UpdateCharacterRequestSchema)` to create a new message.
 */
export const UpdateCharacterRequestSchema: GenMessage<UpdateCharacterRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 14);

/**
 * Response from character update
 *
 * @generated from message dnd5e.api.v1alpha1.UpdateCharacterResponse
 */
export type UpdateCharacterResponse = Message<"dnd5e.api.v1alpha1.UpdateCharacterResponse"> & {
  /**
   * The updated character
   *
   * @generated from field: dnd5e.api.v1alpha1.Character character = 1;
   */
  character?: Character;
};

/**
 * Describes the message dnd5e.api.v1alpha1.UpdateCharacterResponse.
 * Use `create(UpdateCharacterResponseSchema)` to create a new message.
 */
export const UpdateCharacterResponseSchema: GenMessage<UpdateCharacterResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 15);

/**
 * Request to delete a character
 *
 * @generated from message dnd5e.api.v1alpha1.DeleteCharacterRequest
 */
export type DeleteCharacterRequest = Message<"dnd5e.api.v1alpha1.DeleteCharacterRequest"> & {
  /**
   * The character ID to delete
   *
   * @generated from field: string character_id = 1;
   */
  characterId: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.DeleteCharacterRequest.
 * Use `create(DeleteCharacterRequestSchema)` to create a new message.
 */
export const DeleteCharacterRequestSchema: GenMessage<DeleteCharacterRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 16);

/**
 * Response from character deletion
 *
 * @generated from message dnd5e.api.v1alpha1.DeleteCharacterResponse
 */
export type DeleteCharacterResponse = Message<"dnd5e.api.v1alpha1.DeleteCharacterResponse"> & {
  /**
   * Confirmation message
   *
   * @generated from field: string message = 1;
   */
  message: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.DeleteCharacterResponse.
 * Use `create(DeleteCharacterResponseSchema)` to create a new message.
 */
export const DeleteCharacterResponseSchema: GenMessage<DeleteCharacterResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 17);

/**
 * Character draft data for storage - matches toolkit's DraftData structure
 *
 * @generated from message dnd5e.api.v1alpha1.CharacterDraftData
 */
export type CharacterDraftData = Message<"dnd5e.api.v1alpha1.CharacterDraftData"> & {
  /**
   * Unique identifier
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Player creating this character
   *
   * @generated from field: string player_id = 2;
   */
  playerId: string;

  /**
   * Session if part of one (optional)
   *
   * @generated from field: string session_id = 3;
   */
  sessionId: string;

  /**
   * Identity fields - stored as enums
   *
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: dnd5e.api.v1alpha1.Race race = 5;
   */
  race: Race;

  /**
   * @generated from field: dnd5e.api.v1alpha1.Subrace subrace = 6;
   */
  subrace: Subrace;

  /**
   * @generated from field: dnd5e.api.v1alpha1.Class class = 7;
   */
  class: Class;

  /**
   * @generated from field: dnd5e.api.v1alpha1.Subclass subclass = 8;
   */
  subclass: Subclass;

  /**
   * @generated from field: dnd5e.api.v1alpha1.Background background = 9;
   */
  background: Background;

  /**
   * Base ability scores (before racial modifiers)
   *
   * @generated from field: dnd5e.api.v1alpha1.AbilityScores base_ability_scores = 10;
   */
  baseAbilityScores?: AbilityScores;

  /**
   * Store player choices instead of computed state
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.ChoiceData choices = 11;
   */
  choices: ChoiceData[];

  /**
   * Track what steps are complete
   *
   * @generated from field: dnd5e.api.v1alpha1.CreationProgress progress = 12;
   */
  progress?: CreationProgress;
};

/**
 * Describes the message dnd5e.api.v1alpha1.CharacterDraftData.
 * Use `create(CharacterDraftDataSchema)` to create a new message.
 */
export const CharacterDraftDataSchema: GenMessage<CharacterDraftData> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 18);

/**
 * Tracks which parts of character creation are complete
 *
 * @generated from message dnd5e.api.v1alpha1.CreationProgress
 */
export type CreationProgress = Message<"dnd5e.api.v1alpha1.CreationProgress"> & {
  /**
   * Core progress flags - these match the toolkit's 5-step Progress type
   *
   * @generated from field: bool has_name = 1;
   */
  hasName: boolean;

  /**
   * @generated from field: bool has_race = 2;
   */
  hasRace: boolean;

  /**
   * @generated from field: bool has_class = 3;
   */
  hasClass: boolean;

  /**
   * @generated from field: bool has_background = 4;
   */
  hasBackground: boolean;

  /**
   * @generated from field: bool has_ability_scores = 5;
   */
  hasAbilityScores: boolean;

  /**
   * DEPRECATED: Skills are part of class/background choices, not a separate step
   *
   * @generated from field: bool has_skills = 6 [deprecated = true];
   * @deprecated
   */
  hasSkills: boolean;

  /**
   * DEPRECATED: Languages are part of race/background choices, not a separate step
   *
   * @generated from field: bool has_languages = 7 [deprecated = true];
   * @deprecated
   */
  hasLanguages: boolean;

  /**
   * Overall completion percentage (0-100)
   *
   * @generated from field: int32 completion_percentage = 8;
   */
  completionPercentage: number;

  /**
   * DEPRECATED: Character creation is non-linear, players can complete steps in any order
   *
   * @generated from field: dnd5e.api.v1alpha1.CreationStep current_step = 9 [deprecated = true];
   * @deprecated
   */
  currentStep: CreationStep;
};

/**
 * Describes the message dnd5e.api.v1alpha1.CreationProgress.
 * Use `create(CreationProgressSchema)` to create a new message.
 */
export const CreationProgressSchema: GenMessage<CreationProgress> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 19);

/**
 * Draft metadata
 *
 * @generated from message dnd5e.api.v1alpha1.DraftMetadata
 */
export type DraftMetadata = Message<"dnd5e.api.v1alpha1.DraftMetadata"> & {
  /**
   * @generated from field: int64 created_at = 1;
   */
  createdAt: bigint;

  /**
   * @generated from field: int64 updated_at = 2;
   */
  updatedAt: bigint;

  /**
   * @generated from field: string discord_channel_id = 3;
   */
  discordChannelId: string;

  /**
   * @generated from field: string discord_message_id = 4;
   */
  discordMessageId: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.DraftMetadata.
 * Use `create(DraftMetadataSchema)` to create a new message.
 */
export const DraftMetadataSchema: GenMessage<DraftMetadata> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 20);

/**
 * Character draft with full details for responses
 *
 * @generated from message dnd5e.api.v1alpha1.CharacterDraft
 */
export type CharacterDraft = Message<"dnd5e.api.v1alpha1.CharacterDraft"> & {
  /**
   * Unique identifier
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Player creating this character
   *
   * @generated from field: string player_id = 2;
   */
  playerId: string;

  /**
   * Session if part of one
   *
   * @generated from field: string session_id = 3;
   */
  sessionId: string;

  /**
   * Core identity fields - stored as enums matching the toolkit
   *
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: dnd5e.api.v1alpha1.Race race = 5;
   */
  race: Race;

  /**
   * @generated from field: dnd5e.api.v1alpha1.Subrace subrace = 6;
   */
  subrace: Subrace;

  /**
   * @generated from field: dnd5e.api.v1alpha1.Class class = 7;
   */
  class: Class;

  /**
   * @generated from field: dnd5e.api.v1alpha1.Subclass subclass = 8;
   */
  subclass: Subclass;

  /**
   * @generated from field: dnd5e.api.v1alpha1.Background background = 9;
   */
  background: Background;

  /**
   * Base ability scores (before racial modifiers)
   *
   * @generated from field: dnd5e.api.v1alpha1.AbilityScores base_ability_scores = 10;
   */
  baseAbilityScores?: AbilityScores;

  /**
   * Player choices stored for validation
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.ChoiceData choices = 11;
   */
  choices: ChoiceData[];

  /**
   * Track what steps are complete
   *
   * @generated from field: dnd5e.api.v1alpha1.CreationProgress progress = 12;
   */
  progress?: CreationProgress;

  /**
   * Current validation state (calculated on-demand)
   *
   * @generated from field: dnd5e.api.v1alpha1.ValidationResult validation = 13;
   */
  validation?: ValidationResult;

  /**
   * Optional expanded info for UI display
   * These can be populated when needed for richer UI experience
   *
   * @generated from field: dnd5e.api.v1alpha1.RaceInfo race_info = 14;
   */
  raceInfo?: RaceInfo;

  /**
   * @generated from field: dnd5e.api.v1alpha1.SubraceInfo subrace_info = 15;
   */
  subraceInfo?: SubraceInfo;

  /**
   * @generated from field: dnd5e.api.v1alpha1.ClassInfo class_info = 16;
   */
  classInfo?: ClassInfo;

  /**
   * @generated from field: dnd5e.api.v1alpha1.BackgroundInfo background_info = 17;
   */
  backgroundInfo?: BackgroundInfo;
};

/**
 * Describes the message dnd5e.api.v1alpha1.CharacterDraft.
 * Use `create(CharacterDraftSchema)` to create a new message.
 */
export const CharacterDraftSchema: GenMessage<CharacterDraft> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 21);

/**
 * Request to create a draft
 *
 * @generated from message dnd5e.api.v1alpha1.CreateDraftRequest
 */
export type CreateDraftRequest = Message<"dnd5e.api.v1alpha1.CreateDraftRequest"> & {
  /**
   * @generated from field: string player_id = 1;
   */
  playerId: string;

  /**
   * Optional
   *
   * @generated from field: string session_id = 2;
   */
  sessionId: string;

  /**
   * Can optionally provide initial data
   *
   * @generated from field: dnd5e.api.v1alpha1.CharacterDraftData initial_data = 3;
   */
  initialData?: CharacterDraftData;
};

/**
 * Describes the message dnd5e.api.v1alpha1.CreateDraftRequest.
 * Use `create(CreateDraftRequestSchema)` to create a new message.
 */
export const CreateDraftRequestSchema: GenMessage<CreateDraftRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 22);

/**
 * @generated from message dnd5e.api.v1alpha1.CreateDraftResponse
 */
export type CreateDraftResponse = Message<"dnd5e.api.v1alpha1.CreateDraftResponse"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.CharacterDraft draft = 1;
   */
  draft?: CharacterDraft;
};

/**
 * Describes the message dnd5e.api.v1alpha1.CreateDraftResponse.
 * Use `create(CreateDraftResponseSchema)` to create a new message.
 */
export const CreateDraftResponseSchema: GenMessage<CreateDraftResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 23);

/**
 * Request to get a draft
 *
 * @generated from message dnd5e.api.v1alpha1.GetDraftRequest
 */
export type GetDraftRequest = Message<"dnd5e.api.v1alpha1.GetDraftRequest"> & {
  /**
   * @generated from field: string draft_id = 1;
   */
  draftId: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.GetDraftRequest.
 * Use `create(GetDraftRequestSchema)` to create a new message.
 */
export const GetDraftRequestSchema: GenMessage<GetDraftRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 24);

/**
 * @generated from message dnd5e.api.v1alpha1.GetDraftResponse
 */
export type GetDraftResponse = Message<"dnd5e.api.v1alpha1.GetDraftResponse"> & {
  /**
   * Validation is now on draft.validation
   *
   * @generated from field: dnd5e.api.v1alpha1.CharacterDraft draft = 1;
   */
  draft?: CharacterDraft;
};

/**
 * Describes the message dnd5e.api.v1alpha1.GetDraftResponse.
 * Use `create(GetDraftResponseSchema)` to create a new message.
 */
export const GetDraftResponseSchema: GenMessage<GetDraftResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 25);

/**
 * Request to update a draft
 *
 * @generated from message dnd5e.api.v1alpha1.UpdateDraftRequest
 */
export type UpdateDraftRequest = Message<"dnd5e.api.v1alpha1.UpdateDraftRequest"> & {
  /**
   * @generated from field: string draft_id = 1;
   */
  draftId: string;

  /**
   * Only provided fields will be updated
   *
   * @generated from field: dnd5e.api.v1alpha1.CharacterDraftData updates = 2;
   */
  updates?: CharacterDraftData;

  /**
   * Which fields to update (field mask pattern)
   *
   * @generated from field: repeated string update_mask = 3;
   */
  updateMask: string[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.UpdateDraftRequest.
 * Use `create(UpdateDraftRequestSchema)` to create a new message.
 */
export const UpdateDraftRequestSchema: GenMessage<UpdateDraftRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 26);

/**
 * @generated from message dnd5e.api.v1alpha1.UpdateDraftResponse
 */
export type UpdateDraftResponse = Message<"dnd5e.api.v1alpha1.UpdateDraftResponse"> & {
  /**
   * Validation is now on draft.validation
   *
   * @generated from field: dnd5e.api.v1alpha1.CharacterDraft draft = 1;
   */
  draft?: CharacterDraft;

  /**
   * Deprecated: Use draft.validation instead
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [deprecated = true];
   * @deprecated
   */
  warnings: ValidationWarning[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.UpdateDraftResponse.
 * Use `create(UpdateDraftResponseSchema)` to create a new message.
 */
export const UpdateDraftResponseSchema: GenMessage<UpdateDraftResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 27);

/**
 * Section-based update requests
 *
 * @generated from message dnd5e.api.v1alpha1.UpdateNameRequest
 */
export type UpdateNameRequest = Message<"dnd5e.api.v1alpha1.UpdateNameRequest"> & {
  /**
   * @generated from field: string draft_id = 1;
   */
  draftId: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.UpdateNameRequest.
 * Use `create(UpdateNameRequestSchema)` to create a new message.
 */
export const UpdateNameRequestSchema: GenMessage<UpdateNameRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 28);

/**
 * @generated from message dnd5e.api.v1alpha1.UpdateRaceRequest
 */
export type UpdateRaceRequest = Message<"dnd5e.api.v1alpha1.UpdateRaceRequest"> & {
  /**
   * @generated from field: string draft_id = 1;
   */
  draftId: string;

  /**
   * @generated from field: dnd5e.api.v1alpha1.Race race = 2;
   */
  race: Race;

  /**
   * Optional, required for some races
   *
   * @generated from field: dnd5e.api.v1alpha1.Subrace subrace = 3;
   */
  subrace: Subrace;

  /**
   * Choices made for this race
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.ChoiceData race_choices = 4;
   */
  raceChoices: ChoiceData[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.UpdateRaceRequest.
 * Use `create(UpdateRaceRequestSchema)` to create a new message.
 */
export const UpdateRaceRequestSchema: GenMessage<UpdateRaceRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 29);

/**
 * @generated from message dnd5e.api.v1alpha1.UpdateClassRequest
 */
export type UpdateClassRequest = Message<"dnd5e.api.v1alpha1.UpdateClassRequest"> & {
  /**
   * @generated from field: string draft_id = 1;
   */
  draftId: string;

  /**
   * @generated from field: dnd5e.api.v1alpha1.Class class = 2;
   */
  class: Class;

  /**
   * Choices made for this class
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.ChoiceData class_choices = 3;
   */
  classChoices: ChoiceData[];

  /**
   * @generated from field: dnd5e.api.v1alpha1.Subclass subclass = 4;
   */
  subclass: Subclass;
};

/**
 * Describes the message dnd5e.api.v1alpha1.UpdateClassRequest.
 * Use `create(UpdateClassRequestSchema)` to create a new message.
 */
export const UpdateClassRequestSchema: GenMessage<UpdateClassRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 30);

/**
 * @generated from message dnd5e.api.v1alpha1.UpdateBackgroundRequest
 */
export type UpdateBackgroundRequest = Message<"dnd5e.api.v1alpha1.UpdateBackgroundRequest"> & {
  /**
   * @generated from field: string draft_id = 1;
   */
  draftId: string;

  /**
   * @generated from field: dnd5e.api.v1alpha1.Background background = 2;
   */
  background: Background;

  /**
   * Choices made for this background
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.ChoiceData background_choices = 3;
   */
  backgroundChoices: ChoiceData[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.UpdateBackgroundRequest.
 * Use `create(UpdateBackgroundRequestSchema)` to create a new message.
 */
export const UpdateBackgroundRequestSchema: GenMessage<UpdateBackgroundRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 31);

/**
 * @generated from message dnd5e.api.v1alpha1.UpdateAbilityScoresRequest
 */
export type UpdateAbilityScoresRequest = Message<"dnd5e.api.v1alpha1.UpdateAbilityScoresRequest"> & {
  /**
   * @generated from field: string draft_id = 1;
   */
  draftId: string;

  /**
   * Choose how to set ability scores
   *
   * @generated from oneof dnd5e.api.v1alpha1.UpdateAbilityScoresRequest.scores_input
   */
  scoresInput: {
    /**
     * Manually set ability scores
     *
     * @generated from field: dnd5e.api.v1alpha1.AbilityScores ability_scores = 2;
     */
    value: AbilityScores;
    case: "abilityScores";
  } | {
    /**
     * Assign rolled dice to abilities
     *
     * @generated from field: dnd5e.api.v1alpha1.RollAssignments roll_assignments = 3;
     */
    value: RollAssignments;
    case: "rollAssignments";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message dnd5e.api.v1alpha1.UpdateAbilityScoresRequest.
 * Use `create(UpdateAbilityScoresRequestSchema)` to create a new message.
 */
export const UpdateAbilityScoresRequestSchema: GenMessage<UpdateAbilityScoresRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 32);

/**
 * @generated from message dnd5e.api.v1alpha1.UpdateSkillsRequest
 */
export type UpdateSkillsRequest = Message<"dnd5e.api.v1alpha1.UpdateSkillsRequest"> & {
  /**
   * @generated from field: string draft_id = 1;
   */
  draftId: string;

  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.Skill skills = 2;
   */
  skills: Skill[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.UpdateSkillsRequest.
 * Use `create(UpdateSkillsRequestSchema)` to create a new message.
 */
export const UpdateSkillsRequestSchema: GenMessage<UpdateSkillsRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 33);

/**
 * Section-based update responses
 *
 * @generated from message dnd5e.api.v1alpha1.UpdateNameResponse
 */
export type UpdateNameResponse = Message<"dnd5e.api.v1alpha1.UpdateNameResponse"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.CharacterDraft draft = 1;
   */
  draft?: CharacterDraft;

  /**
   * Validation is now on draft.validation
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [deprecated = true];
   * @deprecated
   */
  warnings: ValidationWarning[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.UpdateNameResponse.
 * Use `create(UpdateNameResponseSchema)` to create a new message.
 */
export const UpdateNameResponseSchema: GenMessage<UpdateNameResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 34);

/**
 * @generated from message dnd5e.api.v1alpha1.UpdateRaceResponse
 */
export type UpdateRaceResponse = Message<"dnd5e.api.v1alpha1.UpdateRaceResponse"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.CharacterDraft draft = 1;
   */
  draft?: CharacterDraft;

  /**
   * Validation is now on draft.validation
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [deprecated = true];
   * @deprecated
   */
  warnings: ValidationWarning[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.UpdateRaceResponse.
 * Use `create(UpdateRaceResponseSchema)` to create a new message.
 */
export const UpdateRaceResponseSchema: GenMessage<UpdateRaceResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 35);

/**
 * @generated from message dnd5e.api.v1alpha1.UpdateClassResponse
 */
export type UpdateClassResponse = Message<"dnd5e.api.v1alpha1.UpdateClassResponse"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.CharacterDraft draft = 1;
   */
  draft?: CharacterDraft;

  /**
   * Validation is now on draft.validation
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [deprecated = true];
   * @deprecated
   */
  warnings: ValidationWarning[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.UpdateClassResponse.
 * Use `create(UpdateClassResponseSchema)` to create a new message.
 */
export const UpdateClassResponseSchema: GenMessage<UpdateClassResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 36);

/**
 * @generated from message dnd5e.api.v1alpha1.UpdateBackgroundResponse
 */
export type UpdateBackgroundResponse = Message<"dnd5e.api.v1alpha1.UpdateBackgroundResponse"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.CharacterDraft draft = 1;
   */
  draft?: CharacterDraft;

  /**
   * Validation is now on draft.validation
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [deprecated = true];
   * @deprecated
   */
  warnings: ValidationWarning[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.UpdateBackgroundResponse.
 * Use `create(UpdateBackgroundResponseSchema)` to create a new message.
 */
export const UpdateBackgroundResponseSchema: GenMessage<UpdateBackgroundResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 37);

/**
 * @generated from message dnd5e.api.v1alpha1.UpdateAbilityScoresResponse
 */
export type UpdateAbilityScoresResponse = Message<"dnd5e.api.v1alpha1.UpdateAbilityScoresResponse"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.CharacterDraft draft = 1;
   */
  draft?: CharacterDraft;

  /**
   * Validation is now on draft.validation
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [deprecated = true];
   * @deprecated
   */
  warnings: ValidationWarning[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.UpdateAbilityScoresResponse.
 * Use `create(UpdateAbilityScoresResponseSchema)` to create a new message.
 */
export const UpdateAbilityScoresResponseSchema: GenMessage<UpdateAbilityScoresResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 38);

/**
 * @generated from message dnd5e.api.v1alpha1.UpdateSkillsResponse
 */
export type UpdateSkillsResponse = Message<"dnd5e.api.v1alpha1.UpdateSkillsResponse"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.CharacterDraft draft = 1;
   */
  draft?: CharacterDraft;

  /**
   * Validation is now on draft.validation
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [deprecated = true];
   * @deprecated
   */
  warnings: ValidationWarning[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.UpdateSkillsResponse.
 * Use `create(UpdateSkillsResponseSchema)` to create a new message.
 */
export const UpdateSkillsResponseSchema: GenMessage<UpdateSkillsResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 39);

/**
 * Request to list drafts
 *
 * @generated from message dnd5e.api.v1alpha1.ListDraftsRequest
 */
export type ListDraftsRequest = Message<"dnd5e.api.v1alpha1.ListDraftsRequest"> & {
  /**
   * @generated from field: string player_id = 1;
   */
  playerId: string;

  /**
   * Optional filter
   *
   * @generated from field: string session_id = 2;
   */
  sessionId: string;

  /**
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * @generated from field: string page_token = 4;
   */
  pageToken: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ListDraftsRequest.
 * Use `create(ListDraftsRequestSchema)` to create a new message.
 */
export const ListDraftsRequestSchema: GenMessage<ListDraftsRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 40);

/**
 * @generated from message dnd5e.api.v1alpha1.ListDraftsResponse
 */
export type ListDraftsResponse = Message<"dnd5e.api.v1alpha1.ListDraftsResponse"> & {
  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.CharacterDraft drafts = 1;
   */
  drafts: CharacterDraft[];

  /**
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ListDraftsResponse.
 * Use `create(ListDraftsResponseSchema)` to create a new message.
 */
export const ListDraftsResponseSchema: GenMessage<ListDraftsResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 41);

/**
 * Request to validate draft
 *
 * @generated from message dnd5e.api.v1alpha1.ValidateDraftRequest
 */
export type ValidateDraftRequest = Message<"dnd5e.api.v1alpha1.ValidateDraftRequest"> & {
  /**
   * @generated from field: string draft_id = 1;
   */
  draftId: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ValidateDraftRequest.
 * Use `create(ValidateDraftRequestSchema)` to create a new message.
 */
export const ValidateDraftRequestSchema: GenMessage<ValidateDraftRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 42);

/**
 * @generated from message dnd5e.api.v1alpha1.ValidateDraftResponse
 */
export type ValidateDraftResponse = Message<"dnd5e.api.v1alpha1.ValidateDraftResponse"> & {
  /**
   * Full validation result with 3-tier system
   *
   * @generated from field: dnd5e.api.v1alpha1.ValidationResult validation = 1;
   */
  validation?: ValidationResult;

  /**
   * Quick access fields for compatibility
   *
   * @generated from field: bool is_complete = 2;
   */
  isComplete: boolean;

  /**
   * @generated from field: bool is_valid = 3;
   */
  isValid: boolean;

  /**
   * What's still needed
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.CreationStep missing_steps = 4;
   */
  missingSteps: CreationStep[];

  /**
   * Deprecated: Use validation field instead
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.ValidationError errors = 5 [deprecated = true];
   * @deprecated
   */
  errors: ValidationError[];

  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.ValidationWarning warnings = 6 [deprecated = true];
   * @deprecated
   */
  warnings: ValidationWarning[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.ValidateDraftResponse.
 * Use `create(ValidateDraftResponseSchema)` to create a new message.
 */
export const ValidateDraftResponseSchema: GenMessage<ValidateDraftResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 43);

/**
 * Request to get a preview of the character
 *
 * @generated from message dnd5e.api.v1alpha1.GetDraftPreviewRequest
 */
export type GetDraftPreviewRequest = Message<"dnd5e.api.v1alpha1.GetDraftPreviewRequest"> & {
  /**
   * @generated from field: string draft_id = 1;
   */
  draftId: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.GetDraftPreviewRequest.
 * Use `create(GetDraftPreviewRequestSchema)` to create a new message.
 */
export const GetDraftPreviewRequestSchema: GenMessage<GetDraftPreviewRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 44);

/**
 * @generated from message dnd5e.api.v1alpha1.GetDraftPreviewResponse
 */
export type GetDraftPreviewResponse = Message<"dnd5e.api.v1alpha1.GetDraftPreviewResponse"> & {
  /**
   * The draft with choices (includes validation)
   *
   * @generated from field: dnd5e.api.v1alpha1.CharacterDraft draft = 1;
   */
  draft?: CharacterDraft;

  /**
   * Computed character state
   *
   * @generated from field: dnd5e.api.v1alpha1.Character preview = 2;
   */
  preview?: Character;

  /**
   * Deprecated: Use draft.validation instead
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.ValidationWarning warnings = 3 [deprecated = true];
   * @deprecated
   */
  warnings: ValidationWarning[];

  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.ValidationError errors = 4 [deprecated = true];
   * @deprecated
   */
  errors: ValidationError[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.GetDraftPreviewResponse.
 * Use `create(GetDraftPreviewResponseSchema)` to create a new message.
 */
export const GetDraftPreviewResponseSchema: GenMessage<GetDraftPreviewResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 45);

/**
 * Request to finalize draft
 *
 * @generated from message dnd5e.api.v1alpha1.FinalizeDraftRequest
 */
export type FinalizeDraftRequest = Message<"dnd5e.api.v1alpha1.FinalizeDraftRequest"> & {
  /**
   * @generated from field: string draft_id = 1;
   */
  draftId: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.FinalizeDraftRequest.
 * Use `create(FinalizeDraftRequestSchema)` to create a new message.
 */
export const FinalizeDraftRequestSchema: GenMessage<FinalizeDraftRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 46);

/**
 * @generated from message dnd5e.api.v1alpha1.FinalizeDraftResponse
 */
export type FinalizeDraftResponse = Message<"dnd5e.api.v1alpha1.FinalizeDraftResponse"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.Character character = 1;
   */
  character?: Character;

  /**
   * Draft is automatically deleted after finalization
   *
   * @generated from field: bool draft_deleted = 2;
   */
  draftDeleted: boolean;

  /**
   * Final validation result (should have no errors for successful finalization)
   * Optional since character is already created successfully
   *
   * @generated from field: dnd5e.api.v1alpha1.ValidationResult final_validation = 3;
   */
  finalValidation?: ValidationResult;
};

/**
 * Describes the message dnd5e.api.v1alpha1.FinalizeDraftResponse.
 * Use `create(FinalizeDraftResponseSchema)` to create a new message.
 */
export const FinalizeDraftResponseSchema: GenMessage<FinalizeDraftResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 47);

/**
 * Request to delete draft
 *
 * @generated from message dnd5e.api.v1alpha1.DeleteDraftRequest
 */
export type DeleteDraftRequest = Message<"dnd5e.api.v1alpha1.DeleteDraftRequest"> & {
  /**
   * @generated from field: string draft_id = 1;
   */
  draftId: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.DeleteDraftRequest.
 * Use `create(DeleteDraftRequestSchema)` to create a new message.
 */
export const DeleteDraftRequestSchema: GenMessage<DeleteDraftRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 48);

/**
 * @generated from message dnd5e.api.v1alpha1.DeleteDraftResponse
 */
export type DeleteDraftResponse = Message<"dnd5e.api.v1alpha1.DeleteDraftResponse"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.DeleteDraftResponse.
 * Use `create(DeleteDraftResponseSchema)` to create a new message.
 */
export const DeleteDraftResponseSchema: GenMessage<DeleteDraftResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 49);

/**
 * Detailed race information for selection UI
 *
 * @generated from message dnd5e.api.v1alpha1.RaceInfo
 */
export type RaceInfo = Message<"dnd5e.api.v1alpha1.RaceInfo"> & {
  /**
   * The race enum value
   *
   * @generated from field: dnd5e.api.v1alpha1.Race race_id = 1;
   */
  raceId: Race;

  /**
   * Basic identification
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Mechanical information
   *
   * @generated from field: int32 speed = 4;
   */
  speed: number;

  /**
   * @generated from field: dnd5e.api.v1alpha1.Size size = 5;
   */
  size: Size;

  /**
   * Ability score increases - map key is ability name ("strength", "dexterity", etc.)
   *
   * @generated from field: map<string, int32> ability_bonuses = 6;
   */
  abilityBonuses: { [key: string]: number };

  /**
   * Racial traits
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.RacialTrait traits = 7;
   */
  traits: RacialTrait[];

  /**
   * Available subraces
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.SubraceInfo subraces = 8;
   */
  subraces: SubraceInfo[];

  /**
   * Starting proficiencies - structured to match toolkit types
   *
   * @generated from field: dnd5e.api.v1alpha1.ProficiencyGrants proficiency_grants = 9;
   */
  proficiencyGrants?: ProficiencyGrants;

  /**
   * Starting languages
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.Language languages = 10;
   */
  languages: Language[];

  /**
   * All choices (languages, proficiencies, etc.)
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.Choice choices = 11;
   */
  choices: Choice[];

  /**
   * DEPRECATED: Optional flavor text fields - not provided by toolkit
   * Can be populated from external sources (D&D 5e API, custom content, etc.)
   *
   * e.g., "Elves can live to be 750 years old"
   *
   * @generated from field: string age_description = 12 [deprecated = true];
   * @deprecated
   */
  ageDescription: string;

  /**
   * e.g., "Most dwarves are lawful"
   *
   * @generated from field: string alignment_description = 13 [deprecated = true];
   * @deprecated
   */
  alignmentDescription: string;

  /**
   * e.g., "4-5 feet tall, 150 pounds"
   *
   * @generated from field: string size_description = 14 [deprecated = true];
   * @deprecated
   */
  sizeDescription: string;

  /**
   * DEPRECATED: Use proficiency_grants instead
   *
   * @generated from field: repeated string proficiencies = 15 [deprecated = true];
   * @deprecated
   */
  proficiencies: string[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.RaceInfo.
 * Use `create(RaceInfoSchema)` to create a new message.
 */
export const RaceInfoSchema: GenMessage<RaceInfo> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 50);

/**
 * Subrace information
 *
 * @generated from message dnd5e.api.v1alpha1.SubraceInfo
 */
export type SubraceInfo = Message<"dnd5e.api.v1alpha1.SubraceInfo"> & {
  /**
   * The subrace enum value
   *
   * @generated from field: dnd5e.api.v1alpha1.Subrace subrace_id = 1;
   */
  subraceId: Subrace;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Additional ability bonuses from subrace - map key is ability name
   *
   * @generated from field: map<string, int32> ability_bonuses = 4;
   */
  abilityBonuses: { [key: string]: number };

  /**
   * Additional traits from subrace
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.RacialTrait traits = 5;
   */
  traits: RacialTrait[];

  /**
   * Additional languages from subrace
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.Language languages = 6;
   */
  languages: Language[];

  /**
   * Additional proficiencies from subrace - structured to match toolkit types
   *
   * @generated from field: dnd5e.api.v1alpha1.ProficiencyGrants proficiency_grants = 7;
   */
  proficiencyGrants?: ProficiencyGrants;

  /**
   * DEPRECATED: Use proficiency_grants instead
   *
   * @generated from field: repeated string proficiencies = 8 [deprecated = true];
   * @deprecated
   */
  proficiencies: string[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.SubraceInfo.
 * Use `create(SubraceInfoSchema)` to create a new message.
 */
export const SubraceInfoSchema: GenMessage<SubraceInfo> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 51);

/**
 * Racial trait description
 *
 * @generated from message dnd5e.api.v1alpha1.RacialTrait
 */
export type RacialTrait = Message<"dnd5e.api.v1alpha1.RacialTrait"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * Whether this is a choice or automatic
   *
   * @generated from field: bool is_choice = 3;
   */
  isChoice: boolean;

  /**
   * Options if this is a choice
   *
   * @generated from field: repeated string options = 4;
   */
  options: string[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.RacialTrait.
 * Use `create(RacialTraitSchema)` to create a new message.
 */
export const RacialTraitSchema: GenMessage<RacialTrait> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 52);

/**
 * Unified choice for all types - equipment, proficiencies, languages, etc.
 *
 * @generated from message dnd5e.api.v1alpha1.Choice
 */
export type Choice = Message<"dnd5e.api.v1alpha1.Choice"> & {
  /**
   * Unique identifier for tracking
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Human-readable description
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * How many options to choose
   *
   * @generated from field: int32 choose_count = 3;
   */
  chooseCount: number;

  /**
   * What kind of choice this is
   *
   * @generated from field: dnd5e.api.v1alpha1.ChoiceCategory choice_type = 4;
   */
  choiceType: ChoiceCategory;

  /**
   * @generated from oneof dnd5e.api.v1alpha1.Choice.option_set
   */
  optionSet: {
    /**
     * List of specific options
     *
     * @generated from field: dnd5e.api.v1alpha1.ExplicitOptions explicit_options = 5;
     */
    value: ExplicitOptions;
    case: "explicitOptions";
  } | {
    /**
     * Reference to expandable category
     *
     * @generated from field: dnd5e.api.v1alpha1.CategoryReference category_reference = 6;
     */
    value: CategoryReference;
    case: "categoryReference";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message dnd5e.api.v1alpha1.Choice.
 * Use `create(ChoiceSchema)` to create a new message.
 */
export const ChoiceSchema: GenMessage<Choice> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 53);

/**
 * Explicit list of options to choose from
 *
 * @generated from message dnd5e.api.v1alpha1.ExplicitOptions
 */
export type ExplicitOptions = Message<"dnd5e.api.v1alpha1.ExplicitOptions"> & {
  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.ChoiceOption options = 1;
   */
  options: ChoiceOption[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.ExplicitOptions.
 * Use `create(ExplicitOptionsSchema)` to create a new message.
 */
export const ExplicitOptionsSchema: GenMessage<ExplicitOptions> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 54);

/**
 * Reference to a category that needs to be resolved/expanded
 *
 * @generated from message dnd5e.api.v1alpha1.CategoryReference
 */
export type CategoryReference = Message<"dnd5e.api.v1alpha1.CategoryReference"> & {
  /**
   * e.g., "martial-weapons", "artisan-tools"
   *
   * @generated from field: string category_id = 1;
   */
  categoryId: string;

  /**
   * Optional exclusions
   *
   * @generated from field: repeated string exclude_ids = 2;
   */
  excludeIds: string[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.CategoryReference.
 * Use `create(CategoryReferenceSchema)` to create a new message.
 */
export const CategoryReferenceSchema: GenMessage<CategoryReference> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 55);

/**
 * Individual option within a choice
 *
 * @generated from message dnd5e.api.v1alpha1.ChoiceOption
 */
export type ChoiceOption = Message<"dnd5e.api.v1alpha1.ChoiceOption"> & {
  /**
   * @generated from oneof dnd5e.api.v1alpha1.ChoiceOption.option_type
   */
  optionType: {
    /**
     * Single item reference
     *
     * @generated from field: dnd5e.api.v1alpha1.ItemReference item = 1;
     */
    value: ItemReference;
    case: "item";
  } | {
    /**
     * Item with quantity
     *
     * @generated from field: dnd5e.api.v1alpha1.CountedItemReference counted_item = 2;
     */
    value: CountedItemReference;
    case: "countedItem";
  } | {
    /**
     * Multiple items as one option
     *
     * @generated from field: dnd5e.api.v1alpha1.ItemBundle bundle = 3;
     */
    value: ItemBundle;
    case: "bundle";
  } | {
    /**
     * For complex nested choices
     *
     * @generated from field: dnd5e.api.v1alpha1.NestedChoice nested_choice = 4;
     */
    value: NestedChoice;
    case: "nestedChoice";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message dnd5e.api.v1alpha1.ChoiceOption.
 * Use `create(ChoiceOptionSchema)` to create a new message.
 */
export const ChoiceOptionSchema: GenMessage<ChoiceOption> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 56);

/**
 * @generated from message dnd5e.api.v1alpha1.ItemReference
 */
export type ItemReference = Message<"dnd5e.api.v1alpha1.ItemReference"> & {
  /**
   * ID to query with
   *
   * @generated from field: string item_id = 1;
   */
  itemId: string;

  /**
   * Display name
   *
   * @generated from field: string name = 2;
   */
  name: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ItemReference.
 * Use `create(ItemReferenceSchema)` to create a new message.
 */
export const ItemReferenceSchema: GenMessage<ItemReference> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 57);

/**
 * @generated from message dnd5e.api.v1alpha1.CountedItemReference
 */
export type CountedItemReference = Message<"dnd5e.api.v1alpha1.CountedItemReference"> & {
  /**
   * @generated from field: string item_id = 1;
   */
  itemId: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * e.g., 20 arrows
   *
   * @generated from field: int32 quantity = 3;
   */
  quantity: number;
};

/**
 * Describes the message dnd5e.api.v1alpha1.CountedItemReference.
 * Use `create(CountedItemReferenceSchema)` to create a new message.
 */
export const CountedItemReferenceSchema: GenMessage<CountedItemReference> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 58);

/**
 * @generated from message dnd5e.api.v1alpha1.ItemBundle
 */
export type ItemBundle = Message<"dnd5e.api.v1alpha1.ItemBundle"> & {
  /**
   * Items in the bundle (can be concrete or choices)
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.BundleItem items = 1;
   */
  items: BundleItem[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.ItemBundle.
 * Use `create(ItemBundleSchema)` to create a new message.
 */
export const ItemBundleSchema: GenMessage<ItemBundle> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 59);

/**
 * Represents a single item in a bundle, which can be either a concrete item or a choice
 *
 * @generated from message dnd5e.api.v1alpha1.BundleItem
 */
export type BundleItem = Message<"dnd5e.api.v1alpha1.BundleItem"> & {
  /**
   * @generated from oneof dnd5e.api.v1alpha1.BundleItem.item_type
   */
  itemType: {
    /**
     * Concrete item like "leather armor"
     *
     * @generated from field: dnd5e.api.v1alpha1.CountedItemReference concrete_item = 1;
     */
    value: CountedItemReference;
    case: "concreteItem";
  } | {
    /**
     * Choice like "a martial weapon"
     *
     * @generated from field: dnd5e.api.v1alpha1.NestedChoice choice_item = 2;
     */
    value: NestedChoice;
    case: "choiceItem";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message dnd5e.api.v1alpha1.BundleItem.
 * Use `create(BundleItemSchema)` to create a new message.
 */
export const BundleItemSchema: GenMessage<BundleItem> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 60);

/**
 * @generated from message dnd5e.api.v1alpha1.NestedChoice
 */
export type NestedChoice = Message<"dnd5e.api.v1alpha1.NestedChoice"> & {
  /**
   * Allows arbitrarily complex choices
   *
   * @generated from field: dnd5e.api.v1alpha1.Choice choice = 1;
   */
  choice?: Choice;
};

/**
 * Describes the message dnd5e.api.v1alpha1.NestedChoice.
 * Use `create(NestedChoiceSchema)` to create a new message.
 */
export const NestedChoiceSchema: GenMessage<NestedChoice> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 61);

/**
 * Detailed class information for selection UI
 *
 * @generated from message dnd5e.api.v1alpha1.ClassInfo
 */
export type ClassInfo = Message<"dnd5e.api.v1alpha1.ClassInfo"> & {
  /**
   * The class enum value
   *
   * @generated from field: dnd5e.api.v1alpha1.Class class_id = 1;
   */
  classId: Class;

  /**
   * Basic identification
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Mechanical information
   *
   * e.g., 10 for d10
   *
   * @generated from field: int32 hit_die = 4;
   */
  hitDie: number;

  /**
   * Primary ability for the class
   *
   * @generated from field: dnd5e.api.v1alpha1.Ability primary_ability = 5;
   */
  primaryAbility: Ability;

  /**
   * Proficiencies - structured to match toolkit types
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.Armor armor_proficiencies = 6;
   */
  armorProficiencies: Armor[];

  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.Weapon weapon_proficiencies = 7;
   */
  weaponProficiencies: Weapon[];

  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.Tool tool_proficiencies = 8;
   */
  toolProficiencies: Tool[];

  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.Ability saving_throw_proficiencies = 9;
   */
  savingThrowProficiencies: Ability[];

  /**
   * DEPRECATED: Use typed proficiency fields instead
   *
   * @generated from field: repeated string proficiencies = 27 [deprecated = true];
   * @deprecated
   */
  proficiencies: string[];

  /**
   * Skill choices
   *
   * @generated from field: int32 skill_choices_count = 10;
   */
  skillChoicesCount: number;

  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.Skill available_skills = 11;
   */
  availableSkills: Skill[];

  /**
   * Starting equipment choices
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.Choice equipment_choices = 12;
   */
  equipmentChoices: Choice[];

  /**
   * Class features at level 1
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.FeatureInfo level_1_features = 13;
   */
  level1Features: FeatureInfo[];

  /**
   * Spellcasting information (if applicable)
   *
   * @generated from field: dnd5e.api.v1alpha1.SpellcastingInfo spellcasting = 14;
   */
  spellcasting?: SpellcastingInfo;

  /**
   * All choices (skills, equipment, etc.)
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.Choice choices = 15;
   */
  choices: Choice[];

  /**
   * Subclass options for this class (only populated for base classes like Cleric, not for subclasses)
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.SubclassInfo subclasses = 16;
   */
  subclasses: SubclassInfo[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.ClassInfo.
 * Use `create(ClassInfoSchema)` to create a new message.
 */
export const ClassInfoSchema: GenMessage<ClassInfo> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 62);

/**
 * Information about a subclass option
 *
 * @generated from message dnd5e.api.v1alpha1.SubclassInfo
 */
export type SubclassInfo = Message<"dnd5e.api.v1alpha1.SubclassInfo"> & {
  /**
   * The subclass enum value
   *
   * @generated from field: dnd5e.api.v1alpha1.Subclass subclass_id = 1;
   */
  subclassId: Subclass;

  /**
   * Basic identification
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Level when this subclass becomes available
   *
   * @generated from field: int32 level = 4;
   */
  level: number;

  /**
   * Additional proficiencies granted by this subclass - structured to match toolkit types
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.Armor armor_proficiencies = 5;
   */
  armorProficiencies: Armor[];

  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.Weapon weapon_proficiencies = 6;
   */
  weaponProficiencies: Weapon[];

  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.Tool tool_proficiencies = 7;
   */
  toolProficiencies: Tool[];

  /**
   * Additional choices required by this subclass
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.Choice additional_choices = 8;
   */
  additionalChoices: Choice[];

  /**
   * Features specific to this subclass
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.FeatureInfo features = 9;
   */
  features: FeatureInfo[];

  /**
   * DEPRECATED: Use typed proficiency fields instead
   *
   * @generated from field: repeated string armor_proficiency_strings = 10 [deprecated = true];
   * @deprecated
   */
  armorProficiencyStrings: string[];

  /**
   * @generated from field: repeated string weapon_proficiency_strings = 11 [deprecated = true];
   * @deprecated
   */
  weaponProficiencyStrings: string[];

  /**
   * @generated from field: repeated string tool_proficiency_strings = 12 [deprecated = true];
   * @deprecated
   */
  toolProficiencyStrings: string[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.SubclassInfo.
 * Use `create(SubclassInfoSchema)` to create a new message.
 */
export const SubclassInfoSchema: GenMessage<SubclassInfo> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 63);

/**
 * Spellcasting information
 *
 * @generated from message dnd5e.api.v1alpha1.SpellcastingInfo
 */
export type SpellcastingInfo = Message<"dnd5e.api.v1alpha1.SpellcastingInfo"> & {
  /**
   * @generated from field: string spellcasting_ability = 1;
   */
  spellcastingAbility: string;

  /**
   * @generated from field: bool ritual_casting = 2;
   */
  ritualCasting: boolean;

  /**
   * @generated from field: string spellcasting_focus = 3;
   */
  spellcastingFocus: string;

  /**
   * @generated from field: int32 cantrips_known = 4;
   */
  cantripsKnown: number;

  /**
   * @generated from field: int32 spells_known = 5;
   */
  spellsKnown: number;

  /**
   * @generated from field: int32 spell_slots_level_1 = 6;
   */
  spellSlotsLevel1: number;
};

/**
 * Describes the message dnd5e.api.v1alpha1.SpellcastingInfo.
 * Use `create(SpellcastingInfoSchema)` to create a new message.
 */
export const SpellcastingInfoSchema: GenMessage<SpellcastingInfo> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 64);

/**
 * Detailed background information for selection UI
 *
 * @generated from message dnd5e.api.v1alpha1.BackgroundInfo
 */
export type BackgroundInfo = Message<"dnd5e.api.v1alpha1.BackgroundInfo"> & {
  /**
   * The background enum value
   *
   * @generated from field: dnd5e.api.v1alpha1.Background background_id = 1;
   */
  backgroundId: Background;

  /**
   * Basic identification
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Mechanical benefits - structured to match toolkit types
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.Skill skill_proficiencies = 4;
   */
  skillProficiencies: Skill[];

  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.Tool tool_proficiencies = 5;
   */
  toolProficiencies: Tool[];

  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.Language languages = 6;
   */
  languages: Language[];

  /**
   * @generated from field: int32 additional_languages = 7;
   */
  additionalLanguages: number;

  /**
   * Starting equipment
   *
   * @generated from field: repeated string starting_equipment = 8;
   */
  startingEquipment: string[];

  /**
   * @generated from field: int32 starting_gold = 9;
   */
  startingGold: number;

  /**
   * Background feature
   *
   * @generated from field: string feature_name = 10;
   */
  featureName: string;

  /**
   * @generated from field: string feature_description = 11;
   */
  featureDescription: string;

  /**
   * Suggested characteristics
   *
   * @generated from field: repeated string personality_traits = 12;
   */
  personalityTraits: string[];

  /**
   * @generated from field: repeated string ideals = 13;
   */
  ideals: string[];

  /**
   * @generated from field: repeated string bonds = 14;
   */
  bonds: string[];

  /**
   * @generated from field: repeated string flaws = 15;
   */
  flaws: string[];

  /**
   * DEPRECATED: Use typed proficiency fields instead
   *
   * @generated from field: repeated string skill_proficiency_strings = 16 [deprecated = true];
   * @deprecated
   */
  skillProficiencyStrings: string[];

  /**
   * @generated from field: repeated string tool_proficiency_strings = 17 [deprecated = true];
   * @deprecated
   */
  toolProficiencyStrings: string[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.BackgroundInfo.
 * Use `create(BackgroundInfoSchema)` to create a new message.
 */
export const BackgroundInfoSchema: GenMessage<BackgroundInfo> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 65);

/**
 * Detailed feature information for class features, racial traits, etc.
 *
 * @generated from message dnd5e.api.v1alpha1.FeatureInfo
 */
export type FeatureInfo = Message<"dnd5e.api.v1alpha1.FeatureInfo"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: int32 level = 4;
   */
  level: number;

  /**
   * @generated from field: string class_name = 5;
   */
  className: string;

  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.Choice choices = 6;
   */
  choices: Choice[];

  /**
   * @generated from field: bool has_choices = 7;
   */
  hasChoices: boolean;

  /**
   * Contains spell selection requirements for features that involve spell selection.
   * This field is only populated for features that allow or require selecting spells.
   *
   * @generated from field: dnd5e.api.v1alpha1.SpellSelectionInfo spell_selection = 8;
   */
  spellSelection?: SpellSelectionInfo;
};

/**
 * Describes the message dnd5e.api.v1alpha1.FeatureInfo.
 * Use `create(FeatureInfoSchema)` to create a new message.
 */
export const FeatureInfoSchema: GenMessage<FeatureInfo> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 66);

/**
 * Programmatic spell selection requirements
 *
 * @generated from message dnd5e.api.v1alpha1.SpellSelectionInfo
 */
export type SpellSelectionInfo = Message<"dnd5e.api.v1alpha1.SpellSelectionInfo"> & {
  /**
   * Number of spells to select
   *
   * @generated from field: int32 spells_to_select = 1;
   */
  spellsToSelect: number;

  /**
   * Allowed spell levels (0 for cantrips)
   *
   * @generated from field: repeated int32 spell_levels = 2;
   */
  spellLevels: number[];

  /**
   * Allowed spell lists (e.g., "wizard", "cleric")
   *
   * @generated from field: repeated string spell_lists = 3;
   */
  spellLists: string[];

  /**
   * Type of spell selection system
   *
   * @generated from field: dnd5e.api.v1alpha1.SpellSelectionType selection_type = 4;
   */
  selectionType: SpellSelectionType;

  /**
   * Whether spells can be replaced on level up
   *
   * @generated from field: bool requires_replace = 5;
   */
  requiresReplace: boolean;
};

/**
 * Describes the message dnd5e.api.v1alpha1.SpellSelectionInfo.
 * Use `create(SpellSelectionInfoSchema)` to create a new message.
 */
export const SpellSelectionInfoSchema: GenMessage<SpellSelectionInfo> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 67);

/**
 * Request to list races
 *
 * @generated from message dnd5e.api.v1alpha1.ListRacesRequest
 */
export type ListRacesRequest = Message<"dnd5e.api.v1alpha1.ListRacesRequest"> & {
  /**
   * Pagination
   *
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  /**
   * Optional filters
   *
   * @generated from field: bool include_subraces = 3;
   */
  includeSubraces: boolean;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ListRacesRequest.
 * Use `create(ListRacesRequestSchema)` to create a new message.
 */
export const ListRacesRequestSchema: GenMessage<ListRacesRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 68);

/**
 * Response with race list
 *
 * @generated from message dnd5e.api.v1alpha1.ListRacesResponse
 */
export type ListRacesResponse = Message<"dnd5e.api.v1alpha1.ListRacesResponse"> & {
  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.RaceInfo races = 1;
   */
  races: RaceInfo[];

  /**
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * @generated from field: int32 total_size = 3;
   */
  totalSize: number;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ListRacesResponse.
 * Use `create(ListRacesResponseSchema)` to create a new message.
 */
export const ListRacesResponseSchema: GenMessage<ListRacesResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 69);

/**
 * Request to list classes
 *
 * @generated from message dnd5e.api.v1alpha1.ListClassesRequest
 */
export type ListClassesRequest = Message<"dnd5e.api.v1alpha1.ListClassesRequest"> & {
  /**
   * Pagination
   *
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  /**
   * Optional filters
   *
   * @generated from field: bool include_spellcasters_only = 3;
   */
  includeSpellcastersOnly: boolean;

  /**
   * @generated from field: bool include_features = 4;
   */
  includeFeatures: boolean;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ListClassesRequest.
 * Use `create(ListClassesRequestSchema)` to create a new message.
 */
export const ListClassesRequestSchema: GenMessage<ListClassesRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 70);

/**
 * Response with class list
 *
 * @generated from message dnd5e.api.v1alpha1.ListClassesResponse
 */
export type ListClassesResponse = Message<"dnd5e.api.v1alpha1.ListClassesResponse"> & {
  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.ClassInfo classes = 1;
   */
  classes: ClassInfo[];

  /**
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * @generated from field: int32 total_size = 3;
   */
  totalSize: number;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ListClassesResponse.
 * Use `create(ListClassesResponseSchema)` to create a new message.
 */
export const ListClassesResponseSchema: GenMessage<ListClassesResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 71);

/**
 * Request to list backgrounds
 *
 * @generated from message dnd5e.api.v1alpha1.ListBackgroundsRequest
 */
export type ListBackgroundsRequest = Message<"dnd5e.api.v1alpha1.ListBackgroundsRequest"> & {
  /**
   * Pagination
   *
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * @generated from field: string page_token = 2;
   */
  pageToken: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ListBackgroundsRequest.
 * Use `create(ListBackgroundsRequestSchema)` to create a new message.
 */
export const ListBackgroundsRequestSchema: GenMessage<ListBackgroundsRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 72);

/**
 * Response with background list
 *
 * @generated from message dnd5e.api.v1alpha1.ListBackgroundsResponse
 */
export type ListBackgroundsResponse = Message<"dnd5e.api.v1alpha1.ListBackgroundsResponse"> & {
  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.BackgroundInfo backgrounds = 1;
   */
  backgrounds: BackgroundInfo[];

  /**
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * @generated from field: int32 total_size = 3;
   */
  totalSize: number;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ListBackgroundsResponse.
 * Use `create(ListBackgroundsResponseSchema)` to create a new message.
 */
export const ListBackgroundsResponseSchema: GenMessage<ListBackgroundsResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 73);

/**
 * Request to get detailed race information
 *
 * @generated from message dnd5e.api.v1alpha1.GetRaceDetailsRequest
 */
export type GetRaceDetailsRequest = Message<"dnd5e.api.v1alpha1.GetRaceDetailsRequest"> & {
  /**
   * @generated from field: string race_id = 1;
   */
  raceId: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.GetRaceDetailsRequest.
 * Use `create(GetRaceDetailsRequestSchema)` to create a new message.
 */
export const GetRaceDetailsRequestSchema: GenMessage<GetRaceDetailsRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 74);

/**
 * Response with detailed race information
 *
 * @generated from message dnd5e.api.v1alpha1.GetRaceDetailsResponse
 */
export type GetRaceDetailsResponse = Message<"dnd5e.api.v1alpha1.GetRaceDetailsResponse"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.RaceInfo race = 1;
   */
  race?: RaceInfo;
};

/**
 * Describes the message dnd5e.api.v1alpha1.GetRaceDetailsResponse.
 * Use `create(GetRaceDetailsResponseSchema)` to create a new message.
 */
export const GetRaceDetailsResponseSchema: GenMessage<GetRaceDetailsResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 75);

/**
 * Request to get detailed class information
 *
 * @generated from message dnd5e.api.v1alpha1.GetClassDetailsRequest
 */
export type GetClassDetailsRequest = Message<"dnd5e.api.v1alpha1.GetClassDetailsRequest"> & {
  /**
   * @generated from field: string class_id = 1;
   */
  classId: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.GetClassDetailsRequest.
 * Use `create(GetClassDetailsRequestSchema)` to create a new message.
 */
export const GetClassDetailsRequestSchema: GenMessage<GetClassDetailsRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 76);

/**
 * Response with detailed class information
 *
 * @generated from message dnd5e.api.v1alpha1.GetClassDetailsResponse
 */
export type GetClassDetailsResponse = Message<"dnd5e.api.v1alpha1.GetClassDetailsResponse"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.ClassInfo class = 1;
   */
  class?: ClassInfo;
};

/**
 * Describes the message dnd5e.api.v1alpha1.GetClassDetailsResponse.
 * Use `create(GetClassDetailsResponseSchema)` to create a new message.
 */
export const GetClassDetailsResponseSchema: GenMessage<GetClassDetailsResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 77);

/**
 * Request to get detailed background information
 *
 * @generated from message dnd5e.api.v1alpha1.GetBackgroundDetailsRequest
 */
export type GetBackgroundDetailsRequest = Message<"dnd5e.api.v1alpha1.GetBackgroundDetailsRequest"> & {
  /**
   * @generated from field: string background_id = 1;
   */
  backgroundId: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.GetBackgroundDetailsRequest.
 * Use `create(GetBackgroundDetailsRequestSchema)` to create a new message.
 */
export const GetBackgroundDetailsRequestSchema: GenMessage<GetBackgroundDetailsRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 78);

/**
 * Response with detailed background information
 *
 * @generated from message dnd5e.api.v1alpha1.GetBackgroundDetailsResponse
 */
export type GetBackgroundDetailsResponse = Message<"dnd5e.api.v1alpha1.GetBackgroundDetailsResponse"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.BackgroundInfo background = 1;
   */
  background?: BackgroundInfo;
};

/**
 * Describes the message dnd5e.api.v1alpha1.GetBackgroundDetailsResponse.
 * Use `create(GetBackgroundDetailsResponseSchema)` to create a new message.
 */
export const GetBackgroundDetailsResponseSchema: GenMessage<GetBackgroundDetailsResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 79);

/**
 * Request for a specific feature by its ID
 *
 * @generated from message dnd5e.api.v1alpha1.GetFeatureRequest
 */
export type GetFeatureRequest = Message<"dnd5e.api.v1alpha1.GetFeatureRequest"> & {
  /**
   * @generated from field: string feature_id = 1;
   */
  featureId: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.GetFeatureRequest.
 * Use `create(GetFeatureRequestSchema)` to create a new message.
 */
export const GetFeatureRequestSchema: GenMessage<GetFeatureRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 80);

/**
 * Response with detailed feature information
 *
 * @generated from message dnd5e.api.v1alpha1.GetFeatureResponse
 */
export type GetFeatureResponse = Message<"dnd5e.api.v1alpha1.GetFeatureResponse"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.FeatureInfo feature = 1;
   */
  feature?: FeatureInfo;
};

/**
 * Describes the message dnd5e.api.v1alpha1.GetFeatureResponse.
 * Use `create(GetFeatureResponseSchema)` to create a new message.
 */
export const GetFeatureResponseSchema: GenMessage<GetFeatureResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 81);

/**
 * Request to roll ability scores for a character draft
 *
 * @generated from message dnd5e.api.v1alpha1.RollAbilityScoresRequest
 */
export type RollAbilityScoresRequest = Message<"dnd5e.api.v1alpha1.RollAbilityScoresRequest"> & {
  /**
   * @generated from field: string draft_id = 1;
   */
  draftId: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.RollAbilityScoresRequest.
 * Use `create(RollAbilityScoresRequestSchema)` to create a new message.
 */
export const RollAbilityScoresRequestSchema: GenMessage<RollAbilityScoresRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 82);

/**
 * A single ability score roll (4d6 drop lowest)
 *
 * @generated from message dnd5e.api.v1alpha1.AbilityScoreRoll
 */
export type AbilityScoreRoll = Message<"dnd5e.api.v1alpha1.AbilityScoreRoll"> & {
  /**
   * Unique identifier for this roll (roll_1, roll_2, etc.)
   *
   * @generated from field: string roll_id = 1;
   */
  rollId: string;

  /**
   * The individual dice that were rolled (4 dice)
   *
   * @generated from field: repeated int32 dice = 2;
   */
  dice: number[];

  /**
   * The sum of the highest 3 dice (final ability score value)
   *
   * @generated from field: int32 total = 3;
   */
  total: number;

  /**
   * The dice value that was dropped (lowest)
   *
   * @generated from field: int32 dropped = 4;
   */
  dropped: number;

  /**
   * Human readable notation (e.g., "4d6 drop lowest: [6,5,4,1] = 15")
   *
   * @generated from field: string notation = 5;
   */
  notation: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.AbilityScoreRoll.
 * Use `create(AbilityScoreRollSchema)` to create a new message.
 */
export const AbilityScoreRollSchema: GenMessage<AbilityScoreRoll> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 83);

/**
 * Response containing 6 ability score rolls
 *
 * @generated from message dnd5e.api.v1alpha1.RollAbilityScoresResponse
 */
export type RollAbilityScoresResponse = Message<"dnd5e.api.v1alpha1.RollAbilityScoresResponse"> & {
  /**
   * Array of 6 rolls that can be assigned to abilities
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.AbilityScoreRoll rolls = 1;
   */
  rolls: AbilityScoreRoll[];

  /**
   * Unix timestamp when these rolls expire (15 minutes from creation)
   *
   * @generated from field: int64 expires_at = 2;
   */
  expiresAt: bigint;
};

/**
 * Describes the message dnd5e.api.v1alpha1.RollAbilityScoresResponse.
 * Use `create(RollAbilityScoresResponseSchema)` to create a new message.
 */
export const RollAbilityScoresResponseSchema: GenMessage<RollAbilityScoresResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 84);

/**
 * Request to get character creation requirements
 *
 * @generated from message dnd5e.api.v1alpha1.GetRequirementsRequest
 */
export type GetRequirementsRequest = Message<"dnd5e.api.v1alpha1.GetRequirementsRequest"> & {
  /**
   * @generated from field: string draft_id = 1;
   */
  draftId: string;

  /**
   * Optional: get requirements for a specific class
   *
   * @generated from field: dnd5e.api.v1alpha1.Class class = 2;
   */
  class: Class;

  /**
   * Optional: get requirements for a specific race
   *
   * @generated from field: dnd5e.api.v1alpha1.Race race = 3;
   */
  race: Race;
};

/**
 * Describes the message dnd5e.api.v1alpha1.GetRequirementsRequest.
 * Use `create(GetRequirementsRequestSchema)` to create a new message.
 */
export const GetRequirementsRequestSchema: GenMessage<GetRequirementsRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 85);

/**
 * Response with character creation requirements
 *
 * @generated from message dnd5e.api.v1alpha1.GetRequirementsResponse
 */
export type GetRequirementsResponse = Message<"dnd5e.api.v1alpha1.GetRequirementsResponse"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.CharacterRequirements requirements = 1;
   */
  requirements?: CharacterRequirements;
};

/**
 * Describes the message dnd5e.api.v1alpha1.GetRequirementsResponse.
 * Use `create(GetRequirementsResponseSchema)` to create a new message.
 */
export const GetRequirementsResponseSchema: GenMessage<GetRequirementsResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 86);

/**
 * Request to submit character creation choices
 *
 * @generated from message dnd5e.api.v1alpha1.SubmitChoicesRequest
 */
export type SubmitChoicesRequest = Message<"dnd5e.api.v1alpha1.SubmitChoicesRequest"> & {
  /**
   * @generated from field: string draft_id = 1;
   */
  draftId: string;

  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.ChoiceSubmission submissions = 2;
   */
  submissions: ChoiceSubmission[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.SubmitChoicesRequest.
 * Use `create(SubmitChoicesRequestSchema)` to create a new message.
 */
export const SubmitChoicesRequestSchema: GenMessage<SubmitChoicesRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 87);

/**
 * Response from submitting choices
 *
 * @generated from message dnd5e.api.v1alpha1.SubmitChoicesResponse
 */
export type SubmitChoicesResponse = Message<"dnd5e.api.v1alpha1.SubmitChoicesResponse"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.CharacterDraft draft = 1;
   */
  draft?: CharacterDraft;

  /**
   * @generated from field: dnd5e.api.v1alpha1.ValidationResult validation = 2;
   */
  validation?: ValidationResult;

  /**
   * @generated from field: dnd5e.api.v1alpha1.CharacterRequirements remaining_requirements = 3;
   */
  remainingRequirements?: CharacterRequirements;
};

/**
 * Describes the message dnd5e.api.v1alpha1.SubmitChoicesResponse.
 * Use `create(SubmitChoicesResponseSchema)` to create a new message.
 */
export const SubmitChoicesResponseSchema: GenMessage<SubmitChoicesResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 88);

/**
 * Roll assignment mapping for ability scores
 *
 * @generated from message dnd5e.api.v1alpha1.RollAssignments
 */
export type RollAssignments = Message<"dnd5e.api.v1alpha1.RollAssignments"> & {
  /**
   * @generated from field: string strength_roll_id = 1;
   */
  strengthRollId: string;

  /**
   * @generated from field: string dexterity_roll_id = 2;
   */
  dexterityRollId: string;

  /**
   * @generated from field: string constitution_roll_id = 3;
   */
  constitutionRollId: string;

  /**
   * @generated from field: string intelligence_roll_id = 4;
   */
  intelligenceRollId: string;

  /**
   * @generated from field: string wisdom_roll_id = 5;
   */
  wisdomRollId: string;

  /**
   * @generated from field: string charisma_roll_id = 6;
   */
  charismaRollId: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.RollAssignments.
 * Use `create(RollAssignmentsSchema)` to create a new message.
 */
export const RollAssignmentsSchema: GenMessage<RollAssignments> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 89);

/**
 * Cost information for equipment
 *
 * @generated from message dnd5e.api.v1alpha1.Cost
 */
export type Cost = Message<"dnd5e.api.v1alpha1.Cost"> & {
  /**
   * @generated from field: int32 quantity = 1;
   */
  quantity: number;

  /**
   * "gp", "sp", "cp", etc.
   *
   * @generated from field: string unit = 2;
   */
  unit: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.Cost.
 * Use `create(CostSchema)` to create a new message.
 */
export const CostSchema: GenMessage<Cost> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 90);

/**
 * Weight information for equipment
 *
 * @generated from message dnd5e.api.v1alpha1.Weight
 */
export type Weight = Message<"dnd5e.api.v1alpha1.Weight"> & {
  /**
   * Weight value in fixed-point representation (e.g., grams or ounces)
   *
   * @generated from field: int32 quantity = 1;
   */
  quantity: number;

  /**
   * Unit of measurement (e.g., "g", "oz", "lbs")
   *
   * @generated from field: string unit = 2;
   */
  unit: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.Weight.
 * Use `create(WeightSchema)` to create a new message.
 */
export const WeightSchema: GenMessage<Weight> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 91);

/**
 * Equipment item
 *
 * @generated from message dnd5e.api.v1alpha1.Equipment
 */
export type Equipment = Message<"dnd5e.api.v1alpha1.Equipment"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: dnd5e.api.v1alpha1.EquipmentCategory category = 3;
   */
  category: EquipmentCategory;

  /**
   * @generated from field: dnd5e.api.v1alpha1.Cost cost = 4;
   */
  cost?: Cost;

  /**
   * @generated from field: dnd5e.api.v1alpha1.Weight weight = 5;
   */
  weight?: Weight;

  /**
   * @generated from field: string description = 6;
   */
  description: string;

  /**
   * Equipment type-specific data
   *
   * @generated from oneof dnd5e.api.v1alpha1.Equipment.equipment_data
   */
  equipmentData: {
    /**
     * @generated from field: dnd5e.api.v1alpha1.WeaponData weapon_data = 7;
     */
    value: WeaponData;
    case: "weaponData";
  } | {
    /**
     * @generated from field: dnd5e.api.v1alpha1.ArmorData armor_data = 8;
     */
    value: ArmorData;
    case: "armorData";
  } | {
    /**
     * @generated from field: dnd5e.api.v1alpha1.GearData gear_data = 9;
     */
    value: GearData;
    case: "gearData";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message dnd5e.api.v1alpha1.Equipment.
 * Use `create(EquipmentSchema)` to create a new message.
 */
export const EquipmentSchema: GenMessage<Equipment> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 92);

/**
 * Weapon-specific data
 *
 * @generated from message dnd5e.api.v1alpha1.WeaponData
 */
export type WeaponData = Message<"dnd5e.api.v1alpha1.WeaponData"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.WeaponCategory weapon_category = 1;
   */
  weaponCategory: WeaponCategory;

  /**
   * "1d6", "1d8", etc.
   *
   * @generated from field: string damage_dice = 2;
   */
  damageDice: string;

  /**
   * @generated from field: dnd5e.api.v1alpha1.DamageType damage_type = 3;
   */
  damageType: DamageType;

  /**
   * "light", "finesse", etc.
   *
   * @generated from field: repeated string properties = 4;
   */
  properties: string[];

  /**
   * "melee", "ranged"
   *
   * @generated from field: string range = 5;
   */
  range: string;

  /**
   * range in feet for ranged weapons
   *
   * @generated from field: int32 normal_range = 6;
   */
  normalRange: number;

  /**
   * long range in feet for ranged weapons
   *
   * @generated from field: int32 long_range = 7;
   */
  longRange: number;
};

/**
 * Describes the message dnd5e.api.v1alpha1.WeaponData.
 * Use `create(WeaponDataSchema)` to create a new message.
 */
export const WeaponDataSchema: GenMessage<WeaponData> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 93);

/**
 * Armor-specific data
 *
 * @generated from message dnd5e.api.v1alpha1.ArmorData
 */
export type ArmorData = Message<"dnd5e.api.v1alpha1.ArmorData"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.ArmorCategory armor_category = 1;
   */
  armorCategory: ArmorCategory;

  /**
   * @generated from field: int32 base_ac = 2;
   */
  baseAc: number;

  /**
   * @generated from field: bool dex_bonus = 3;
   */
  dexBonus: boolean;

  /**
   * Indicates if max_dex_bonus is applicable
   *
   * @generated from field: bool has_dex_limit = 4;
   */
  hasDexLimit: boolean;

  /**
   * Maximum Dexterity bonus to AC, valid only if has_dex_limit is true
   *
   * @generated from field: int32 max_dex_bonus = 5;
   */
  maxDexBonus: number;

  /**
   * @generated from field: int32 str_minimum = 6;
   */
  strMinimum: number;

  /**
   * @generated from field: bool stealth_disadvantage = 7;
   */
  stealthDisadvantage: boolean;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ArmorData.
 * Use `create(ArmorDataSchema)` to create a new message.
 */
export const ArmorDataSchema: GenMessage<ArmorData> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 94);

/**
 * General gear data
 *
 * @generated from message dnd5e.api.v1alpha1.GearData
 */
export type GearData = Message<"dnd5e.api.v1alpha1.GearData"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.GearCategory gear_category = 1;
   */
  gearCategory: GearCategory;

  /**
   * @generated from field: repeated string properties = 2;
   */
  properties: string[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.GearData.
 * Use `create(GearDataSchema)` to create a new message.
 */
export const GearDataSchema: GenMessage<GearData> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 95);

/**
 * Equipment slots for a character
 *
 * @generated from message dnd5e.api.v1alpha1.EquipmentSlots
 */
export type EquipmentSlots = Message<"dnd5e.api.v1alpha1.EquipmentSlots"> & {
  /**
   * Combat equipment
   *
   * @generated from field: dnd5e.api.v1alpha1.InventoryItem main_hand = 1;
   */
  mainHand?: InventoryItem;

  /**
   * @generated from field: dnd5e.api.v1alpha1.InventoryItem off_hand = 2;
   */
  offHand?: InventoryItem;

  /**
   * Armor slots
   *
   * @generated from field: dnd5e.api.v1alpha1.InventoryItem armor = 3;
   */
  armor?: InventoryItem;

  /**
   * @generated from field: dnd5e.api.v1alpha1.InventoryItem helmet = 4;
   */
  helmet?: InventoryItem;

  /**
   * @generated from field: dnd5e.api.v1alpha1.InventoryItem boots = 5;
   */
  boots?: InventoryItem;

  /**
   * @generated from field: dnd5e.api.v1alpha1.InventoryItem gloves = 6;
   */
  gloves?: InventoryItem;

  /**
   * @generated from field: dnd5e.api.v1alpha1.InventoryItem cloak = 7;
   */
  cloak?: InventoryItem;

  /**
   * Accessory slots
   *
   * @generated from field: dnd5e.api.v1alpha1.InventoryItem amulet = 8;
   */
  amulet?: InventoryItem;

  /**
   * @generated from field: dnd5e.api.v1alpha1.InventoryItem ring_1 = 9;
   */
  ring1?: InventoryItem;

  /**
   * @generated from field: dnd5e.api.v1alpha1.InventoryItem ring_2 = 10;
   */
  ring2?: InventoryItem;

  /**
   * @generated from field: dnd5e.api.v1alpha1.InventoryItem belt = 11;
   */
  belt?: InventoryItem;
};

/**
 * Describes the message dnd5e.api.v1alpha1.EquipmentSlots.
 * Use `create(EquipmentSlotsSchema)` to create a new message.
 */
export const EquipmentSlotsSchema: GenMessage<EquipmentSlots> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 96);

/**
 * An item in inventory (equipped or not)
 *
 * @generated from message dnd5e.api.v1alpha1.InventoryItem
 */
export type InventoryItem = Message<"dnd5e.api.v1alpha1.InventoryItem"> & {
  /**
   * Reference to Equipment.id
   *
   * @generated from field: string item_id = 1;
   */
  itemId: string;

  /**
   * For stackable items
   *
   * @generated from field: int32 quantity = 2;
   */
  quantity: number;

  /**
   * For magic items requiring attunement
   *
   * @generated from field: bool is_attuned = 3;
   */
  isAttuned: boolean;

  /**
   * Optional custom name (e.g., "My Lucky Sword")
   *
   * @generated from field: string custom_name = 4;
   */
  customName: string;

  /**
   * Denormalized equipment data for quick access
   *
   * @generated from field: dnd5e.api.v1alpha1.Equipment equipment = 5;
   */
  equipment?: Equipment;
};

/**
 * Describes the message dnd5e.api.v1alpha1.InventoryItem.
 * Use `create(InventoryItemSchema)` to create a new message.
 */
export const InventoryItemSchema: GenMessage<InventoryItem> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 97);

/**
 * Encumbrance and carrying capacity
 *
 * @generated from message dnd5e.api.v1alpha1.EncumbranceInfo
 */
export type EncumbranceInfo = Message<"dnd5e.api.v1alpha1.EncumbranceInfo"> & {
  /**
   * Total weight carried (in tenths of pounds for 0.1-pound precision)
   *
   * @generated from field: int32 current_weight = 1;
   */
  currentWeight: number;

  /**
   * Max weight before encumbered (in tenths of pounds for 0.1-pound precision)
   *
   * @generated from field: int32 carrying_capacity = 2;
   */
  carryingCapacity: number;

  /**
   * Max weight before immobilized (in tenths of pounds for 0.1-pound precision)
   *
   * @generated from field: int32 max_capacity = 3;
   */
  maxCapacity: number;

  /**
   * Current encumbrance level
   *
   * @generated from field: dnd5e.api.v1alpha1.EncumbranceLevel level = 4;
   */
  level: EncumbranceLevel;
};

/**
 * Describes the message dnd5e.api.v1alpha1.EncumbranceInfo.
 * Use `create(EncumbranceInfoSchema)` to create a new message.
 */
export const EncumbranceInfoSchema: GenMessage<EncumbranceInfo> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 98);

/**
 * New unified choice data structure for the toolkit refactoring
 *
 * @generated from message dnd5e.api.v1alpha1.ChoiceData
 */
export type ChoiceData = Message<"dnd5e.api.v1alpha1.ChoiceData"> & {
  /**
   * Type of choice (skills, languages, etc.)
   *
   * @generated from field: dnd5e.api.v1alpha1.ChoiceCategory category = 1;
   */
  category: ChoiceCategory;

  /**
   * Where this choice came from
   *
   * @generated from field: dnd5e.api.v1alpha1.ChoiceSource source = 2;
   */
  source: ChoiceSource;

  /**
   * Specific choice identifier
   *
   * @generated from field: string choice_id = 3;
   */
  choiceId: string;

  /**
   * Type-safe selection using oneof pattern (matching toolkit refactoring)
   *
   * @generated from oneof dnd5e.api.v1alpha1.ChoiceData.selection
   */
  selection: {
    /**
     * @generated from field: string name = 4;
     */
    value: string;
    case: "name";
  } | {
    /**
     * @generated from field: dnd5e.api.v1alpha1.SkillList skills = 5;
     */
    value: SkillList;
    case: "skills";
  } | {
    /**
     * @generated from field: dnd5e.api.v1alpha1.LanguageList languages = 6;
     */
    value: LanguageList;
    case: "languages";
  } | {
    /**
     * @generated from field: dnd5e.api.v1alpha1.AbilityScores ability_scores = 7;
     */
    value: AbilityScores;
    case: "abilityScores";
  } | {
    /**
     * @generated from field: dnd5e.api.v1alpha1.FightingStyle fighting_style = 8;
     */
    value: FightingStyle;
    case: "fightingStyle";
  } | {
    /**
     * @generated from field: dnd5e.api.v1alpha1.EquipmentList equipment = 9;
     */
    value: EquipmentList;
    case: "equipment";
  } | {
    /**
     * @generated from field: dnd5e.api.v1alpha1.RaceChoice race = 10;
     */
    value: RaceChoice;
    case: "race";
  } | {
    /**
     * @generated from field: dnd5e.api.v1alpha1.ClassChoice class = 11;
     */
    value: ClassChoice;
    case: "class";
  } | {
    /**
     * @generated from field: dnd5e.api.v1alpha1.Background background = 12;
     */
    value: Background;
    case: "background";
  } | {
    /**
     * @generated from field: dnd5e.api.v1alpha1.SpellList spells = 13;
     */
    value: SpellList;
    case: "spells";
  } | {
    /**
     * @generated from field: dnd5e.api.v1alpha1.CantripList cantrips = 14;
     */
    value: CantripList;
    case: "cantrips";
  } | {
    /**
     * @generated from field: dnd5e.api.v1alpha1.ExpertiseList expertise = 15;
     */
    value: ExpertiseList;
    case: "expertise";
  } | {
    /**
     * @generated from field: dnd5e.api.v1alpha1.TraitList traits = 16;
     */
    value: TraitList;
    case: "traits";
  } | {
    /**
     * @generated from field: dnd5e.api.v1alpha1.ToolProficiencyList tool_proficiencies = 17;
     */
    value: ToolProficiencyList;
    case: "toolProficiencies";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message dnd5e.api.v1alpha1.ChoiceData.
 * Use `create(ChoiceDataSchema)` to create a new message.
 */
export const ChoiceDataSchema: GenMessage<ChoiceData> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 99);

/**
 * Wrapper messages for repeated fields in oneof
 *
 * @generated from message dnd5e.api.v1alpha1.SkillList
 */
export type SkillList = Message<"dnd5e.api.v1alpha1.SkillList"> & {
  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.Skill skills = 1;
   */
  skills: Skill[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.SkillList.
 * Use `create(SkillListSchema)` to create a new message.
 */
export const SkillListSchema: GenMessage<SkillList> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 100);

/**
 * @generated from message dnd5e.api.v1alpha1.LanguageList
 */
export type LanguageList = Message<"dnd5e.api.v1alpha1.LanguageList"> & {
  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.Language languages = 1;
   */
  languages: Language[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.LanguageList.
 * Use `create(LanguageListSchema)` to create a new message.
 */
export const LanguageListSchema: GenMessage<LanguageList> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 101);

/**
 * @generated from message dnd5e.api.v1alpha1.EquipmentList
 */
export type EquipmentList = Message<"dnd5e.api.v1alpha1.EquipmentList"> & {
  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.EquipmentSelection items = 1;
   */
  items: EquipmentSelection[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.EquipmentList.
 * Use `create(EquipmentListSchema)` to create a new message.
 */
export const EquipmentListSchema: GenMessage<EquipmentList> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 102);

/**
 * @generated from message dnd5e.api.v1alpha1.SpellList
 */
export type SpellList = Message<"dnd5e.api.v1alpha1.SpellList"> & {
  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.Spell spells = 1;
   */
  spells: Spell[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.SpellList.
 * Use `create(SpellListSchema)` to create a new message.
 */
export const SpellListSchema: GenMessage<SpellList> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 103);

/**
 * @generated from message dnd5e.api.v1alpha1.CantripList
 */
export type CantripList = Message<"dnd5e.api.v1alpha1.CantripList"> & {
  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.Spell cantrips = 1;
   */
  cantrips: Spell[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.CantripList.
 * Use `create(CantripListSchema)` to create a new message.
 */
export const CantripListSchema: GenMessage<CantripList> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 104);

/**
 * @generated from message dnd5e.api.v1alpha1.ExpertiseList
 */
export type ExpertiseList = Message<"dnd5e.api.v1alpha1.ExpertiseList"> & {
  /**
   * Skills that get expertise (double proficiency)
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.Skill skills = 1;
   */
  skills: Skill[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.ExpertiseList.
 * Use `create(ExpertiseListSchema)` to create a new message.
 */
export const ExpertiseListSchema: GenMessage<ExpertiseList> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 105);

/**
 * @generated from message dnd5e.api.v1alpha1.TraitList
 */
export type TraitList = Message<"dnd5e.api.v1alpha1.TraitList"> & {
  /**
   * Racial or class trait selections
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.Trait traits = 1;
   */
  traits: Trait[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.TraitList.
 * Use `create(TraitListSchema)` to create a new message.
 */
export const TraitListSchema: GenMessage<TraitList> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 106);

/**
 * @generated from message dnd5e.api.v1alpha1.ToolProficiencyList
 */
export type ToolProficiencyList = Message<"dnd5e.api.v1alpha1.ToolProficiencyList"> & {
  /**
   * Tool proficiency selections
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.Tool tools = 1;
   */
  tools: Tool[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.ToolProficiencyList.
 * Use `create(ToolProficiencyListSchema)` to create a new message.
 */
export const ToolProficiencyListSchema: GenMessage<ToolProficiencyList> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 107);

/**
 * @generated from message dnd5e.api.v1alpha1.RaceChoice
 */
export type RaceChoice = Message<"dnd5e.api.v1alpha1.RaceChoice"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.Race race = 1;
   */
  race: Race;

  /**
   * Optional
   *
   * @generated from field: dnd5e.api.v1alpha1.Subrace subrace = 2;
   */
  subrace: Subrace;
};

/**
 * Describes the message dnd5e.api.v1alpha1.RaceChoice.
 * Use `create(RaceChoiceSchema)` to create a new message.
 */
export const RaceChoiceSchema: GenMessage<RaceChoice> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 108);

/**
 * @generated from message dnd5e.api.v1alpha1.ClassChoice
 */
export type ClassChoice = Message<"dnd5e.api.v1alpha1.ClassChoice"> & {
  /**
   * Could add subclass later when implemented
   *
   * @generated from field: dnd5e.api.v1alpha1.Class class = 1;
   */
  class: Class;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ClassChoice.
 * Use `create(ClassChoiceSchema)` to create a new message.
 */
export const ClassChoiceSchema: GenMessage<ClassChoice> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 109);

/**
 * Equipment choice for character creation
 *
 * @generated from message dnd5e.api.v1alpha1.EquipmentChoice
 */
export type EquipmentChoice = Message<"dnd5e.api.v1alpha1.EquipmentChoice"> & {
  /**
   * e.g., "fighter-armor-a"
   *
   * @generated from field: string choice_id = 1;
   */
  choiceId: string;

  /**
   * Human-readable description
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * Options for this choice
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.EquipmentOption options = 3;
   */
  options: EquipmentOption[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.EquipmentChoice.
 * Use `create(EquipmentChoiceSchema)` to create a new message.
 */
export const EquipmentChoiceSchema: GenMessage<EquipmentChoice> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 110);

/**
 * Single equipment option within a choice
 *
 * @generated from message dnd5e.api.v1alpha1.EquipmentOption
 */
export type EquipmentOption = Message<"dnd5e.api.v1alpha1.EquipmentOption"> & {
  /**
   * e.g., "leather-longbow"
   *
   * @generated from field: string option_id = 1;
   */
  optionId: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * Equipment items granted by this option
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.EquipmentSelection items = 3;
   */
  items: EquipmentSelection[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.EquipmentOption.
 * Use `create(EquipmentOptionSchema)` to create a new message.
 */
export const EquipmentOptionSchema: GenMessage<EquipmentOption> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 111);

/**
 * A specific equipment item with quantity
 *
 * @generated from message dnd5e.api.v1alpha1.EquipmentSelection
 */
export type EquipmentSelection = Message<"dnd5e.api.v1alpha1.EquipmentSelection"> & {
  /**
   * @generated from oneof dnd5e.api.v1alpha1.EquipmentSelection.equipment
   */
  equipment: {
    /**
     * @generated from field: dnd5e.api.v1alpha1.Weapon weapon = 1;
     */
    value: Weapon;
    case: "weapon";
  } | {
    /**
     * @generated from field: dnd5e.api.v1alpha1.Armor armor = 2;
     */
    value: Armor;
    case: "armor";
  } | {
    /**
     * @generated from field: dnd5e.api.v1alpha1.Tool tool = 3;
     */
    value: Tool;
    case: "tool";
  } | {
    /**
     * @generated from field: dnd5e.api.v1alpha1.Pack pack = 4;
     */
    value: Pack;
    case: "pack";
  } | {
    /**
     * @generated from field: dnd5e.api.v1alpha1.Ammunition ammunition = 5;
     */
    value: Ammunition;
    case: "ammunition";
  } | {
    /**
     * For items not yet enumerated
     *
     * @generated from field: string other_equipment_id = 6;
     */
    value: string;
    case: "otherEquipmentId";
  } | { case: undefined; value?: undefined };

  /**
   * Default 1
   *
   * @generated from field: int32 quantity = 7;
   */
  quantity: number;
};

/**
 * Describes the message dnd5e.api.v1alpha1.EquipmentSelection.
 * Use `create(EquipmentSelectionSchema)` to create a new message.
 */
export const EquipmentSelectionSchema: GenMessage<EquipmentSelection> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 112);

/**
 * Submission for a choice made by the player
 *
 * @generated from message dnd5e.api.v1alpha1.ChoiceSubmission
 */
export type ChoiceSubmission = Message<"dnd5e.api.v1alpha1.ChoiceSubmission"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.ChoiceCategory category = 1;
   */
  category: ChoiceCategory;

  /**
   * @generated from field: dnd5e.api.v1alpha1.ChoiceSource source = 2;
   */
  source: ChoiceSource;

  /**
   * Which choice this is for
   *
   * @generated from field: string choice_id = 3;
   */
  choiceId: string;

  /**
   * Which option was selected (for equipment)
   *
   * @generated from field: string option_id = 4;
   */
  optionId: string;

  /**
   * Values selected (skills, languages, equipment, etc.)
   *
   * @generated from oneof dnd5e.api.v1alpha1.ChoiceSubmission.values
   */
  values: {
    /**
     * @generated from field: dnd5e.api.v1alpha1.SkillSelection skills = 5;
     */
    value: SkillSelection;
    case: "skills";
  } | {
    /**
     * @generated from field: dnd5e.api.v1alpha1.LanguageSelection languages = 6;
     */
    value: LanguageSelection;
    case: "languages";
  } | {
    /**
     * @generated from field: dnd5e.api.v1alpha1.EquipmentSelection equipment = 7;
     */
    value: EquipmentSelection;
    case: "equipment";
  } | {
    /**
     * @generated from field: dnd5e.api.v1alpha1.FightingStyleSelection fighting_style = 8;
     */
    value: FightingStyleSelection;
    case: "fightingStyle";
  } | {
    /**
     * @generated from field: dnd5e.api.v1alpha1.ToolSelection tools = 9;
     */
    value: ToolSelection;
    case: "tools";
  } | {
    /**
     * @generated from field: dnd5e.api.v1alpha1.WeaponProficiencySelection weapon_proficiencies = 10;
     */
    value: WeaponProficiencySelection;
    case: "weaponProficiencies";
  } | {
    /**
     * @generated from field: dnd5e.api.v1alpha1.ArmorProficiencySelection armor_proficiencies = 11;
     */
    value: ArmorProficiencySelection;
    case: "armorProficiencies";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message dnd5e.api.v1alpha1.ChoiceSubmission.
 * Use `create(ChoiceSubmissionSchema)` to create a new message.
 */
export const ChoiceSubmissionSchema: GenMessage<ChoiceSubmission> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 113);

/**
 * Skill selection
 *
 * @generated from message dnd5e.api.v1alpha1.SkillSelection
 */
export type SkillSelection = Message<"dnd5e.api.v1alpha1.SkillSelection"> & {
  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.Skill skills = 1;
   */
  skills: Skill[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.SkillSelection.
 * Use `create(SkillSelectionSchema)` to create a new message.
 */
export const SkillSelectionSchema: GenMessage<SkillSelection> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 114);

/**
 * Language selection
 *
 * @generated from message dnd5e.api.v1alpha1.LanguageSelection
 */
export type LanguageSelection = Message<"dnd5e.api.v1alpha1.LanguageSelection"> & {
  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.Language languages = 1;
   */
  languages: Language[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.LanguageSelection.
 * Use `create(LanguageSelectionSchema)` to create a new message.
 */
export const LanguageSelectionSchema: GenMessage<LanguageSelection> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 115);

/**
 * Fighting style selection
 *
 * @generated from message dnd5e.api.v1alpha1.FightingStyleSelection
 */
export type FightingStyleSelection = Message<"dnd5e.api.v1alpha1.FightingStyleSelection"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.FightingStyle style = 1;
   */
  style: FightingStyle;
};

/**
 * Describes the message dnd5e.api.v1alpha1.FightingStyleSelection.
 * Use `create(FightingStyleSelectionSchema)` to create a new message.
 */
export const FightingStyleSelectionSchema: GenMessage<FightingStyleSelection> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 116);

/**
 * Tool proficiency selection
 *
 * @generated from message dnd5e.api.v1alpha1.ToolSelection
 */
export type ToolSelection = Message<"dnd5e.api.v1alpha1.ToolSelection"> & {
  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.Tool tools = 1;
   */
  tools: Tool[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.ToolSelection.
 * Use `create(ToolSelectionSchema)` to create a new message.
 */
export const ToolSelectionSchema: GenMessage<ToolSelection> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 117);

/**
 * Weapon proficiency selection
 *
 * @generated from message dnd5e.api.v1alpha1.WeaponProficiencySelection
 */
export type WeaponProficiencySelection = Message<"dnd5e.api.v1alpha1.WeaponProficiencySelection"> & {
  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.Weapon weapons = 1;
   */
  weapons: Weapon[];

  /**
   * For "all martial weapons" etc.
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.EquipmentType categories = 2;
   */
  categories: EquipmentType[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.WeaponProficiencySelection.
 * Use `create(WeaponProficiencySelectionSchema)` to create a new message.
 */
export const WeaponProficiencySelectionSchema: GenMessage<WeaponProficiencySelection> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 118);

/**
 * Armor proficiency selection
 *
 * @generated from message dnd5e.api.v1alpha1.ArmorProficiencySelection
 */
export type ArmorProficiencySelection = Message<"dnd5e.api.v1alpha1.ArmorProficiencySelection"> & {
  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.Armor armors = 1;
   */
  armors: Armor[];

  /**
   * For "all light armor" etc.
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.EquipmentType categories = 2;
   */
  categories: EquipmentType[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.ArmorProficiencySelection.
 * Use `create(ArmorProficiencySelectionSchema)` to create a new message.
 */
export const ArmorProficiencySelectionSchema: GenMessage<ArmorProficiencySelection> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 119);

/**
 * Requirements for character choices
 *
 * @generated from message dnd5e.api.v1alpha1.CharacterRequirements
 */
export type CharacterRequirements = Message<"dnd5e.api.v1alpha1.CharacterRequirements"> & {
  /**
   * All choices that need to be made
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.RequiredChoice choices = 1;
   */
  choices: RequiredChoice[];

  /**
   * Validation state
   *
   * @generated from field: bool all_choices_made = 2;
   */
  allChoicesMade: boolean;

  /**
   * @generated from field: repeated string missing_choices = 3;
   */
  missingChoices: string[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.CharacterRequirements.
 * Use `create(CharacterRequirementsSchema)` to create a new message.
 */
export const CharacterRequirementsSchema: GenMessage<CharacterRequirements> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 120);

/**
 * A single required choice
 *
 * @generated from message dnd5e.api.v1alpha1.RequiredChoice
 */
export type RequiredChoice = Message<"dnd5e.api.v1alpha1.RequiredChoice"> & {
  /**
   * @generated from field: string choice_id = 1;
   */
  choiceId: string;

  /**
   * @generated from field: dnd5e.api.v1alpha1.ChoiceCategory category = 2;
   */
  category: ChoiceCategory;

  /**
   * @generated from field: dnd5e.api.v1alpha1.ChoiceSource source = 3;
   */
  source: ChoiceSource;

  /**
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * How many to choose
   *
   * @generated from field: int32 count = 5;
   */
  count: number;

  /**
   * Available options based on category
   *
   * @generated from oneof dnd5e.api.v1alpha1.RequiredChoice.options
   */
  options: {
    /**
     * @generated from field: dnd5e.api.v1alpha1.SkillOptions skill_options = 6;
     */
    value: SkillOptions;
    case: "skillOptions";
  } | {
    /**
     * @generated from field: dnd5e.api.v1alpha1.LanguageOptions language_options = 7;
     */
    value: LanguageOptions;
    case: "languageOptions";
  } | {
    /**
     * @generated from field: dnd5e.api.v1alpha1.EquipmentChoice equipment_options = 8;
     */
    value: EquipmentChoice;
    case: "equipmentOptions";
  } | {
    /**
     * @generated from field: dnd5e.api.v1alpha1.FightingStyleOptions fighting_style_options = 9;
     */
    value: FightingStyleOptions;
    case: "fightingStyleOptions";
  } | {
    /**
     * @generated from field: dnd5e.api.v1alpha1.ToolOptions tool_options = 10;
     */
    value: ToolOptions;
    case: "toolOptions";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message dnd5e.api.v1alpha1.RequiredChoice.
 * Use `create(RequiredChoiceSchema)` to create a new message.
 */
export const RequiredChoiceSchema: GenMessage<RequiredChoice> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 121);

/**
 * Available skill options
 *
 * @generated from message dnd5e.api.v1alpha1.SkillOptions
 */
export type SkillOptions = Message<"dnd5e.api.v1alpha1.SkillOptions"> & {
  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.Skill available = 1;
   */
  available: Skill[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.SkillOptions.
 * Use `create(SkillOptionsSchema)` to create a new message.
 */
export const SkillOptionsSchema: GenMessage<SkillOptions> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 122);

/**
 * Available language options
 *
 * @generated from message dnd5e.api.v1alpha1.LanguageOptions
 */
export type LanguageOptions = Message<"dnd5e.api.v1alpha1.LanguageOptions"> & {
  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.Language available = 1;
   */
  available: Language[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.LanguageOptions.
 * Use `create(LanguageOptionsSchema)` to create a new message.
 */
export const LanguageOptionsSchema: GenMessage<LanguageOptions> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 123);

/**
 * Available fighting style options
 *
 * @generated from message dnd5e.api.v1alpha1.FightingStyleOptions
 */
export type FightingStyleOptions = Message<"dnd5e.api.v1alpha1.FightingStyleOptions"> & {
  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.FightingStyle available = 1;
   */
  available: FightingStyle[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.FightingStyleOptions.
 * Use `create(FightingStyleOptionsSchema)` to create a new message.
 */
export const FightingStyleOptionsSchema: GenMessage<FightingStyleOptions> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 124);

/**
 * Available tool options
 *
 * @generated from message dnd5e.api.v1alpha1.ToolOptions
 */
export type ToolOptions = Message<"dnd5e.api.v1alpha1.ToolOptions"> & {
  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.Tool available = 1;
   */
  available: Tool[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.ToolOptions.
 * Use `create(ToolOptionsSchema)` to create a new message.
 */
export const ToolOptionsSchema: GenMessage<ToolOptions> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 125);

/**
 * Spell damage information
 *
 * @generated from message dnd5e.api.v1alpha1.SpellDamage
 */
export type SpellDamage = Message<"dnd5e.api.v1alpha1.SpellDamage"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.DamageType damage_type = 1;
   */
  damageType: DamageType;

  /**
   * List of damage dice by slot level
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.DamageAtSlotLevel damage_at_slot_level = 2;
   */
  damageAtSlotLevel: DamageAtSlotLevel[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.SpellDamage.
 * Use `create(SpellDamageSchema)` to create a new message.
 */
export const SpellDamageSchema: GenMessage<SpellDamage> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 126);

/**
 * Damage at a specific slot level
 *
 * @generated from message dnd5e.api.v1alpha1.DamageAtSlotLevel
 */
export type DamageAtSlotLevel = Message<"dnd5e.api.v1alpha1.DamageAtSlotLevel"> & {
  /**
   * Spell slot level (0-9)
   *
   * @generated from field: int32 slot_level = 1;
   */
  slotLevel: number;

  /**
   * Damage dice (e.g., "2d6", "3d8")
   *
   * @generated from field: string damage_dice = 2;
   */
  damageDice: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.DamageAtSlotLevel.
 * Use `create(DamageAtSlotLevelSchema)` to create a new message.
 */
export const DamageAtSlotLevelSchema: GenMessage<DamageAtSlotLevel> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 127);

/**
 * Area of effect information
 *
 * @generated from message dnd5e.api.v1alpha1.AreaOfEffect
 */
export type AreaOfEffect = Message<"dnd5e.api.v1alpha1.AreaOfEffect"> & {
  /**
   * "sphere", "cone", "line", etc.
   *
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * radius, length, etc.
   *
   * @generated from field: int32 size = 2;
   */
  size: number;
};

/**
 * Describes the message dnd5e.api.v1alpha1.AreaOfEffect.
 * Use `create(AreaOfEffectSchema)` to create a new message.
 */
export const AreaOfEffectSchema: GenMessage<AreaOfEffect> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 128);

/**
 * Request to list equipment by type
 *
 * @generated from message dnd5e.api.v1alpha1.ListEquipmentByTypeRequest
 */
export type ListEquipmentByTypeRequest = Message<"dnd5e.api.v1alpha1.ListEquipmentByTypeRequest"> & {
  /**
   * Type of equipment to filter by
   *
   * @generated from field: dnd5e.api.v1alpha1.EquipmentType equipment_type = 1;
   */
  equipmentType: EquipmentType;

  /**
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ListEquipmentByTypeRequest.
 * Use `create(ListEquipmentByTypeRequestSchema)` to create a new message.
 */
export const ListEquipmentByTypeRequestSchema: GenMessage<ListEquipmentByTypeRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 129);

/**
 * Response with equipment list
 *
 * @generated from message dnd5e.api.v1alpha1.ListEquipmentByTypeResponse
 */
export type ListEquipmentByTypeResponse = Message<"dnd5e.api.v1alpha1.ListEquipmentByTypeResponse"> & {
  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.Equipment equipment = 1;
   */
  equipment: Equipment[];

  /**
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * @generated from field: int32 total_size = 3;
   */
  totalSize: number;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ListEquipmentByTypeResponse.
 * Use `create(ListEquipmentByTypeResponseSchema)` to create a new message.
 */
export const ListEquipmentByTypeResponseSchema: GenMessage<ListEquipmentByTypeResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 130);

/**
 * Request to list spells by level
 *
 * @generated from message dnd5e.api.v1alpha1.ListSpellsByLevelRequest
 */
export type ListSpellsByLevelRequest = Message<"dnd5e.api.v1alpha1.ListSpellsByLevelRequest"> & {
  /**
   * 0-9 (0 = cantrips)
   *
   * @generated from field: int32 level = 1;
   */
  level: number;

  /**
   * Optional: filter by class
   *
   * @generated from field: dnd5e.api.v1alpha1.Class class = 2;
   */
  class: Class;

  /**
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * @generated from field: string page_token = 4;
   */
  pageToken: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ListSpellsByLevelRequest.
 * Use `create(ListSpellsByLevelRequestSchema)` to create a new message.
 */
export const ListSpellsByLevelRequestSchema: GenMessage<ListSpellsByLevelRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 131);

/**
 * Response with spell list
 *
 * @generated from message dnd5e.api.v1alpha1.ListSpellsByLevelResponse
 */
export type ListSpellsByLevelResponse = Message<"dnd5e.api.v1alpha1.ListSpellsByLevelResponse"> & {
  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.Spell spells = 1;
   */
  spells: Spell[];

  /**
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * @generated from field: int32 total_size = 3;
   */
  totalSize: number;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ListSpellsByLevelResponse.
 * Use `create(ListSpellsByLevelResponseSchema)` to create a new message.
 */
export const ListSpellsByLevelResponseSchema: GenMessage<ListSpellsByLevelResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 132);

/**
 * Request to get character inventory
 *
 * @generated from message dnd5e.api.v1alpha1.GetCharacterInventoryRequest
 */
export type GetCharacterInventoryRequest = Message<"dnd5e.api.v1alpha1.GetCharacterInventoryRequest"> & {
  /**
   * @generated from field: string character_id = 1;
   */
  characterId: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.GetCharacterInventoryRequest.
 * Use `create(GetCharacterInventoryRequestSchema)` to create a new message.
 */
export const GetCharacterInventoryRequestSchema: GenMessage<GetCharacterInventoryRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 133);

/**
 * Response with character inventory
 *
 * @generated from message dnd5e.api.v1alpha1.GetCharacterInventoryResponse
 */
export type GetCharacterInventoryResponse = Message<"dnd5e.api.v1alpha1.GetCharacterInventoryResponse"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.EquipmentSlots equipment_slots = 1;
   */
  equipmentSlots?: EquipmentSlots;

  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.InventoryItem inventory = 2;
   */
  inventory: InventoryItem[];

  /**
   * @generated from field: dnd5e.api.v1alpha1.EncumbranceInfo encumbrance = 3;
   */
  encumbrance?: EncumbranceInfo;

  /**
   * @generated from field: int32 attunement_slots_used = 4;
   */
  attunementSlotsUsed: number;

  /**
   * Usually 3 for most characters
   *
   * @generated from field: int32 attunement_slots_max = 5;
   */
  attunementSlotsMax: number;
};

/**
 * Describes the message dnd5e.api.v1alpha1.GetCharacterInventoryResponse.
 * Use `create(GetCharacterInventoryResponseSchema)` to create a new message.
 */
export const GetCharacterInventoryResponseSchema: GenMessage<GetCharacterInventoryResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 134);

/**
 * Request to equip an item
 *
 * @generated from message dnd5e.api.v1alpha1.EquipItemRequest
 */
export type EquipItemRequest = Message<"dnd5e.api.v1alpha1.EquipItemRequest"> & {
  /**
   * @generated from field: string character_id = 1;
   */
  characterId: string;

  /**
   * Item from inventory to equip
   *
   * @generated from field: string item_id = 2;
   */
  itemId: string;

  /**
   * Which slot to equip to
   *
   * @generated from field: dnd5e.api.v1alpha1.EquipmentSlot slot = 3;
   */
  slot: EquipmentSlot;
};

/**
 * Describes the message dnd5e.api.v1alpha1.EquipItemRequest.
 * Use `create(EquipItemRequestSchema)` to create a new message.
 */
export const EquipItemRequestSchema: GenMessage<EquipItemRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 135);

/**
 * Response from equipping an item
 *
 * @generated from message dnd5e.api.v1alpha1.EquipItemResponse
 */
export type EquipItemResponse = Message<"dnd5e.api.v1alpha1.EquipItemResponse"> & {
  /**
   * Updated character with new equipment
   *
   * @generated from field: dnd5e.api.v1alpha1.Character character = 1;
   */
  character?: Character;

  /**
   * Item that was displaced from the slot (if any)
   *
   * @generated from field: dnd5e.api.v1alpha1.InventoryItem previously_equipped_item = 2;
   */
  previouslyEquippedItem?: InventoryItem;
};

/**
 * Describes the message dnd5e.api.v1alpha1.EquipItemResponse.
 * Use `create(EquipItemResponseSchema)` to create a new message.
 */
export const EquipItemResponseSchema: GenMessage<EquipItemResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 136);

/**
 * Request to unequip an item
 *
 * @generated from message dnd5e.api.v1alpha1.UnequipItemRequest
 */
export type UnequipItemRequest = Message<"dnd5e.api.v1alpha1.UnequipItemRequest"> & {
  /**
   * @generated from field: string character_id = 1;
   */
  characterId: string;

  /**
   * Which slot to unequip from
   *
   * @generated from field: dnd5e.api.v1alpha1.EquipmentSlot slot = 2;
   */
  slot: EquipmentSlot;
};

/**
 * Describes the message dnd5e.api.v1alpha1.UnequipItemRequest.
 * Use `create(UnequipItemRequestSchema)` to create a new message.
 */
export const UnequipItemRequestSchema: GenMessage<UnequipItemRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 137);

/**
 * Response from unequipping an item
 *
 * @generated from message dnd5e.api.v1alpha1.UnequipItemResponse
 */
export type UnequipItemResponse = Message<"dnd5e.api.v1alpha1.UnequipItemResponse"> & {
  /**
   * Updated character
   *
   * @generated from field: dnd5e.api.v1alpha1.Character character = 1;
   */
  character?: Character;
};

/**
 * Describes the message dnd5e.api.v1alpha1.UnequipItemResponse.
 * Use `create(UnequipItemResponseSchema)` to create a new message.
 */
export const UnequipItemResponseSchema: GenMessage<UnequipItemResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 138);

/**
 * Request to add items to inventory
 *
 * @generated from message dnd5e.api.v1alpha1.AddToInventoryRequest
 */
export type AddToInventoryRequest = Message<"dnd5e.api.v1alpha1.AddToInventoryRequest"> & {
  /**
   * @generated from field: string character_id = 1;
   */
  characterId: string;

  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.InventoryAddition items = 2;
   */
  items: InventoryAddition[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.AddToInventoryRequest.
 * Use `create(AddToInventoryRequestSchema)` to create a new message.
 */
export const AddToInventoryRequestSchema: GenMessage<AddToInventoryRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 139);

/**
 * Item to add to inventory
 *
 * @generated from message dnd5e.api.v1alpha1.InventoryAddition
 */
export type InventoryAddition = Message<"dnd5e.api.v1alpha1.InventoryAddition"> & {
  /**
   * Equipment.id reference
   *
   * @generated from field: string item_id = 1;
   */
  itemId: string;

  /**
   * How many to add
   *
   * @generated from field: int32 quantity = 2;
   */
  quantity: number;
};

/**
 * Describes the message dnd5e.api.v1alpha1.InventoryAddition.
 * Use `create(InventoryAdditionSchema)` to create a new message.
 */
export const InventoryAdditionSchema: GenMessage<InventoryAddition> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 140);

/**
 * Response from adding to inventory
 *
 * @generated from message dnd5e.api.v1alpha1.AddToInventoryResponse
 */
export type AddToInventoryResponse = Message<"dnd5e.api.v1alpha1.AddToInventoryResponse"> & {
  /**
   * Updated character
   *
   * @generated from field: dnd5e.api.v1alpha1.Character character = 1;
   */
  character?: Character;

  /**
   * Any items that couldn't be added
   *
   * @generated from field: repeated string errors = 2;
   */
  errors: string[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.AddToInventoryResponse.
 * Use `create(AddToInventoryResponseSchema)` to create a new message.
 */
export const AddToInventoryResponseSchema: GenMessage<AddToInventoryResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 141);

/**
 * Request to remove items from inventory
 *
 * @generated from message dnd5e.api.v1alpha1.RemoveFromInventoryRequest
 */
export type RemoveFromInventoryRequest = Message<"dnd5e.api.v1alpha1.RemoveFromInventoryRequest"> & {
  /**
   * @generated from field: string character_id = 1;
   */
  characterId: string;

  /**
   * Item to remove
   *
   * @generated from field: string item_id = 2;
   */
  itemId: string;

  /**
   * @generated from oneof dnd5e.api.v1alpha1.RemoveFromInventoryRequest.removal_amount
   */
  removalAmount: {
    /**
     * Specific quantity to remove
     *
     * @generated from field: int32 quantity = 3;
     */
    value: number;
    case: "quantity";
  } | {
    /**
     * Remove all of this item
     *
     * @generated from field: bool remove_all = 4;
     */
    value: boolean;
    case: "removeAll";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message dnd5e.api.v1alpha1.RemoveFromInventoryRequest.
 * Use `create(RemoveFromInventoryRequestSchema)` to create a new message.
 */
export const RemoveFromInventoryRequestSchema: GenMessage<RemoveFromInventoryRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 142);

/**
 * Response from removing from inventory
 *
 * @generated from message dnd5e.api.v1alpha1.RemoveFromInventoryResponse
 */
export type RemoveFromInventoryResponse = Message<"dnd5e.api.v1alpha1.RemoveFromInventoryResponse"> & {
  /**
   * Updated character
   *
   * @generated from field: dnd5e.api.v1alpha1.Character character = 1;
   */
  character?: Character;

  /**
   * Actual quantity removed
   *
   * @generated from field: int32 quantity_removed = 2;
   */
  quantityRemoved: number;
};

/**
 * Describes the message dnd5e.api.v1alpha1.RemoveFromInventoryResponse.
 * Use `create(RemoveFromInventoryResponseSchema)` to create a new message.
 */
export const RemoveFromInventoryResponseSchema: GenMessage<RemoveFromInventoryResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 143);

/**
 * Types of class resources in D&D 5e
 *
 * @generated from enum dnd5e.api.v1alpha1.ClassResourceType
 */
export enum ClassResourceType {
  /**
   * @generated from enum value: CLASS_RESOURCE_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: CLASS_RESOURCE_TYPE_RAGE = 1;
   */
  RAGE = 1,

  /**
   * @generated from enum value: CLASS_RESOURCE_TYPE_BARDIC_INSPIRATION = 2;
   */
  BARDIC_INSPIRATION = 2,

  /**
   * @generated from enum value: CLASS_RESOURCE_TYPE_CHANNEL_DIVINITY = 3;
   */
  CHANNEL_DIVINITY = 3,

  /**
   * @generated from enum value: CLASS_RESOURCE_TYPE_WILD_SHAPE = 4;
   */
  WILD_SHAPE = 4,

  /**
   * @generated from enum value: CLASS_RESOURCE_TYPE_SECOND_WIND = 5;
   */
  SECOND_WIND = 5,

  /**
   * @generated from enum value: CLASS_RESOURCE_TYPE_ACTION_SURGE = 6;
   */
  ACTION_SURGE = 6,

  /**
   * @generated from enum value: CLASS_RESOURCE_TYPE_KI_POINTS = 7;
   */
  KI_POINTS = 7,

  /**
   * @generated from enum value: CLASS_RESOURCE_TYPE_DIVINE_SENSE = 8;
   */
  DIVINE_SENSE = 8,

  /**
   * @generated from enum value: CLASS_RESOURCE_TYPE_LAY_ON_HANDS = 9;
   */
  LAY_ON_HANDS = 9,

  /**
   * @generated from enum value: CLASS_RESOURCE_TYPE_SORCERY_POINTS = 10;
   */
  SORCERY_POINTS = 10,

  /**
   * @generated from enum value: CLASS_RESOURCE_TYPE_ARCANE_RECOVERY = 11;
   */
  ARCANE_RECOVERY = 11,

  /**
   * @generated from enum value: CLASS_RESOURCE_TYPE_INDOMITABLE = 12;
   */
  INDOMITABLE = 12,

  /**
   * @generated from enum value: CLASS_RESOURCE_TYPE_SUPERIORITY_DICE = 13;
   */
  SUPERIORITY_DICE = 13,
}

/**
 * Describes the enum dnd5e.api.v1alpha1.ClassResourceType.
 */
export const ClassResourceTypeSchema: GenEnum<ClassResourceType> = /*@__PURE__*/
  enumDesc(file_dnd5e_api_v1alpha1_character, 0);

/**
 * Recharge timing for resources
 *
 * @generated from enum dnd5e.api.v1alpha1.RechargeType
 */
export enum RechargeType {
  /**
   * @generated from enum value: RECHARGE_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: RECHARGE_TYPE_SHORT_REST = 1;
   */
  SHORT_REST = 1,

  /**
   * @generated from enum value: RECHARGE_TYPE_LONG_REST = 2;
   */
  LONG_REST = 2,

  /**
   * @generated from enum value: RECHARGE_TYPE_DAWN = 3;
   */
  DAWN = 3,

  /**
   * Never recharges (consumable)
   *
   * @generated from enum value: RECHARGE_TYPE_NONE = 4;
   */
  NONE = 4,
}

/**
 * Describes the enum dnd5e.api.v1alpha1.RechargeType.
 */
export const RechargeTypeSchema: GenEnum<RechargeType> = /*@__PURE__*/
  enumDesc(file_dnd5e_api_v1alpha1_character, 1);

/**
 * DEPRECATED: Character creation is non-linear - players can complete steps in any order
 * This enum assumed a wizard-style linear flow which doesn't match the flexible toolkit model
 *
 * @generated from enum dnd5e.api.v1alpha1.CreationStep
 * @deprecated
 */
export enum CreationStep {
  /**
   * @generated from enum value: CREATION_STEP_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: CREATION_STEP_NAME = 1;
   */
  NAME = 1,

  /**
   * @generated from enum value: CREATION_STEP_RACE = 2;
   */
  RACE = 2,

  /**
   * @generated from enum value: CREATION_STEP_CLASS = 3;
   */
  CLASS = 3,

  /**
   * @generated from enum value: CREATION_STEP_BACKGROUND = 4;
   */
  BACKGROUND = 4,

  /**
   * @generated from enum value: CREATION_STEP_ABILITY_SCORES = 5;
   */
  ABILITY_SCORES = 5,

  /**
   * @generated from enum value: CREATION_STEP_SKILLS = 6;
   */
  SKILLS = 6,

  /**
   * @generated from enum value: CREATION_STEP_LANGUAGES = 7;
   */
  LANGUAGES = 7,

  /**
   * @generated from enum value: CREATION_STEP_REVIEW = 8;
   */
  REVIEW = 8,
}

/**
 * Describes the enum dnd5e.api.v1alpha1.CreationStep.
 * @deprecated
 */
export const CreationStepSchema: GenEnum<CreationStep> = /*@__PURE__*/
  enumDesc(file_dnd5e_api_v1alpha1_character, 2);

/**
 * @generated from enum dnd5e.api.v1alpha1.WarningType
 */
export enum WarningType {
  /**
   * @generated from enum value: WARNING_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: WARNING_TYPE_MISSING_REQUIRED = 1;
   */
  MISSING_REQUIRED = 1,

  /**
   * @generated from enum value: WARNING_TYPE_INVALID_COMBINATION = 2;
   */
  INVALID_COMBINATION = 2,

  /**
   * @generated from enum value: WARNING_TYPE_SUBOPTIMAL_CHOICE = 3;
   */
  SUBOPTIMAL_CHOICE = 3,
}

/**
 * Describes the enum dnd5e.api.v1alpha1.WarningType.
 */
export const WarningTypeSchema: GenEnum<WarningType> = /*@__PURE__*/
  enumDesc(file_dnd5e_api_v1alpha1_character, 3);

/**
 * Category of choice being made
 *
 * @generated from enum dnd5e.api.v1alpha1.ChoiceCategory
 */
export enum ChoiceCategory {
  /**
   * @generated from enum value: CHOICE_CATEGORY_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: CHOICE_CATEGORY_EQUIPMENT = 1;
   */
  EQUIPMENT = 1,

  /**
   * Skill proficiencies
   *
   * @generated from enum value: CHOICE_CATEGORY_SKILLS = 2;
   */
  SKILLS = 2,

  /**
   * Tool proficiencies
   *
   * @generated from enum value: CHOICE_CATEGORY_TOOLS = 3;
   */
  TOOLS = 3,

  /**
   * Languages
   *
   * @generated from enum value: CHOICE_CATEGORY_LANGUAGES = 4;
   */
  LANGUAGES = 4,

  /**
   * Weapon proficiencies
   *
   * @generated from enum value: CHOICE_CATEGORY_WEAPON_PROFICIENCIES = 5;
   */
  WEAPON_PROFICIENCIES = 5,

  /**
   * Armor proficiencies
   *
   * @generated from enum value: CHOICE_CATEGORY_ARMOR_PROFICIENCIES = 6;
   */
  ARMOR_PROFICIENCIES = 6,

  /**
   * Spells known/prepared
   *
   * @generated from enum value: CHOICE_CATEGORY_SPELLS = 7;
   */
  SPELLS = 7,

  /**
   * Feats
   *
   * @generated from enum value: CHOICE_CATEGORY_FEATS = 8;
   */
  FEATS = 8,

  /**
   * Ability score improvements
   *
   * @generated from enum value: CHOICE_CATEGORY_ABILITY_SCORES = 9;
   */
  ABILITY_SCORES = 9,

  /**
   * Character name
   *
   * @generated from enum value: CHOICE_CATEGORY_NAME = 10;
   */
  NAME = 10,

  /**
   * Fighting style selection
   *
   * @generated from enum value: CHOICE_CATEGORY_FIGHTING_STYLE = 11;
   */
  FIGHTING_STYLE = 11,

  /**
   * Race selection
   *
   * @generated from enum value: CHOICE_CATEGORY_RACE = 12;
   */
  RACE = 12,

  /**
   * Class selection
   *
   * @generated from enum value: CHOICE_CATEGORY_CLASS = 13;
   */
  CLASS = 13,

  /**
   * Background selection
   *
   * @generated from enum value: CHOICE_CATEGORY_BACKGROUND = 14;
   */
  BACKGROUND = 14,

  /**
   * Cantrips known
   *
   * @generated from enum value: CHOICE_CATEGORY_CANTRIPS = 15;
   */
  CANTRIPS = 15,

  /**
   * Expertise (double proficiency) choices
   *
   * @generated from enum value: CHOICE_CATEGORY_EXPERTISE = 16;
   */
  EXPERTISE = 16,

  /**
   * Subrace selection (e.g., High Elf, Mountain Dwarf)
   *
   * @generated from enum value: CHOICE_CATEGORY_SUBRACE = 17;
   */
  SUBRACE = 17,

  /**
   * Racial or class traits (e.g., Draconic Ancestry)
   *
   * @generated from enum value: CHOICE_CATEGORY_TRAITS = 18;
   */
  TRAITS = 18,
}

/**
 * Describes the enum dnd5e.api.v1alpha1.ChoiceCategory.
 */
export const ChoiceCategorySchema: GenEnum<ChoiceCategory> = /*@__PURE__*/
  enumDesc(file_dnd5e_api_v1alpha1_character, 4);

/**
 * Character size category
 *
 * @generated from enum dnd5e.api.v1alpha1.Size
 */
export enum Size {
  /**
   * @generated from enum value: SIZE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: SIZE_TINY = 1;
   */
  TINY = 1,

  /**
   * @generated from enum value: SIZE_SMALL = 2;
   */
  SMALL = 2,

  /**
   * @generated from enum value: SIZE_MEDIUM = 3;
   */
  MEDIUM = 3,

  /**
   * @generated from enum value: SIZE_LARGE = 4;
   */
  LARGE = 4,

  /**
   * @generated from enum value: SIZE_HUGE = 5;
   */
  HUGE = 5,

  /**
   * @generated from enum value: SIZE_GARGANTUAN = 6;
   */
  GARGANTUAN = 6,
}

/**
 * Describes the enum dnd5e.api.v1alpha1.Size.
 */
export const SizeSchema: GenEnum<Size> = /*@__PURE__*/
  enumDesc(file_dnd5e_api_v1alpha1_character, 5);

/**
 * Types of spell selection systems
 *
 * @generated from enum dnd5e.api.v1alpha1.SpellSelectionType
 */
export enum SpellSelectionType {
  /**
   * @generated from enum value: SPELL_SELECTION_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Wizard spellbook system
   *
   * @generated from enum value: SPELL_SELECTION_TYPE_SPELLBOOK = 1;
   */
  SPELLBOOK = 1,

  /**
   * Fixed known spells (sorcerer, warlock)
   *
   * @generated from enum value: SPELL_SELECTION_TYPE_KNOWN = 2;
   */
  KNOWN = 2,

  /**
   * Prepared spells (cleric, druid)
   *
   * @generated from enum value: SPELL_SELECTION_TYPE_PREPARED = 3;
   */
  PREPARED = 3,
}

/**
 * Describes the enum dnd5e.api.v1alpha1.SpellSelectionType.
 */
export const SpellSelectionTypeSchema: GenEnum<SpellSelectionType> = /*@__PURE__*/
  enumDesc(file_dnd5e_api_v1alpha1_character, 6);

/**
 * Encumbrance levels
 *
 * @generated from enum dnd5e.api.v1alpha1.EncumbranceLevel
 */
export enum EncumbranceLevel {
  /**
   * @generated from enum value: ENCUMBRANCE_LEVEL_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Under carrying capacity
   *
   * @generated from enum value: ENCUMBRANCE_LEVEL_UNENCUMBERED = 1;
   */
  UNENCUMBERED = 1,

  /**
   * Speed reduced by 10 feet
   *
   * @generated from enum value: ENCUMBRANCE_LEVEL_ENCUMBERED = 2;
   */
  ENCUMBERED = 2,

  /**
   * Speed reduced by 20 feet, disadvantage on ability checks
   *
   * @generated from enum value: ENCUMBRANCE_LEVEL_HEAVILY_ENCUMBERED = 3;
   */
  HEAVILY_ENCUMBERED = 3,

  /**
   * Cannot move
   *
   * @generated from enum value: ENCUMBRANCE_LEVEL_IMMOBILIZED = 4;
   */
  IMMOBILIZED = 4,
}

/**
 * Describes the enum dnd5e.api.v1alpha1.EncumbranceLevel.
 */
export const EncumbranceLevelSchema: GenEnum<EncumbranceLevel> = /*@__PURE__*/
  enumDesc(file_dnd5e_api_v1alpha1_character, 7);

/**
 * Source of a choice during character creation
 *
 * @generated from enum dnd5e.api.v1alpha1.ChoiceSource
 */
export enum ChoiceSource {
  /**
   * @generated from enum value: CHOICE_SOURCE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Direct player choice
   *
   * @generated from enum value: CHOICE_SOURCE_PLAYER = 1;
   */
  PLAYER = 1,

  /**
   * @generated from enum value: CHOICE_SOURCE_RACE = 2;
   */
  RACE = 2,

  /**
   * @generated from enum value: CHOICE_SOURCE_SUBRACE = 3;
   */
  SUBRACE = 3,

  /**
   * @generated from enum value: CHOICE_SOURCE_CLASS = 4;
   */
  CLASS = 4,

  /**
   * @generated from enum value: CHOICE_SOURCE_BACKGROUND = 5;
   */
  BACKGROUND = 5,

  /**
   * Choices made during level progression
   *
   * @generated from enum value: CHOICE_SOURCE_LEVEL_UP = 6;
   */
  LEVEL_UP = 6,
}

/**
 * Describes the enum dnd5e.api.v1alpha1.ChoiceSource.
 */
export const ChoiceSourceSchema: GenEnum<ChoiceSource> = /*@__PURE__*/
  enumDesc(file_dnd5e_api_v1alpha1_character, 8);

/**
 * Equipment slot types
 *
 * @generated from enum dnd5e.api.v1alpha1.EquipmentSlot
 */
export enum EquipmentSlot {
  /**
   * @generated from enum value: EQUIPMENT_SLOT_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: EQUIPMENT_SLOT_MAIN_HAND = 1;
   */
  MAIN_HAND = 1,

  /**
   * @generated from enum value: EQUIPMENT_SLOT_OFF_HAND = 2;
   */
  OFF_HAND = 2,

  /**
   * @generated from enum value: EQUIPMENT_SLOT_ARMOR = 3;
   */
  ARMOR = 3,

  /**
   * @generated from enum value: EQUIPMENT_SLOT_HELMET = 4;
   */
  HELMET = 4,

  /**
   * @generated from enum value: EQUIPMENT_SLOT_BOOTS = 5;
   */
  BOOTS = 5,

  /**
   * @generated from enum value: EQUIPMENT_SLOT_GLOVES = 6;
   */
  GLOVES = 6,

  /**
   * @generated from enum value: EQUIPMENT_SLOT_CLOAK = 7;
   */
  CLOAK = 7,

  /**
   * @generated from enum value: EQUIPMENT_SLOT_AMULET = 8;
   */
  AMULET = 8,

  /**
   * @generated from enum value: EQUIPMENT_SLOT_RING_1 = 9;
   */
  RING_1 = 9,

  /**
   * @generated from enum value: EQUIPMENT_SLOT_RING_2 = 10;
   */
  RING_2 = 10,

  /**
   * @generated from enum value: EQUIPMENT_SLOT_BELT = 11;
   */
  BELT = 11,
}

/**
 * Describes the enum dnd5e.api.v1alpha1.EquipmentSlot.
 */
export const EquipmentSlotSchema: GenEnum<EquipmentSlot> = /*@__PURE__*/
  enumDesc(file_dnd5e_api_v1alpha1_character, 9);

/**
 * Service for D&D 5e character creation and management
 * Supports both wizard-style step-by-step creation and free-form editing
 *
 * @generated from service dnd5e.api.v1alpha1.CharacterService
 */
export const CharacterService: GenService<{
  /**
   * Draft lifecycle
   *
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.CreateDraft
   */
  createDraft: {
    methodKind: "unary";
    input: typeof CreateDraftRequestSchema;
    output: typeof CreateDraftResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.GetDraft
   */
  getDraft: {
    methodKind: "unary";
    input: typeof GetDraftRequestSchema;
    output: typeof GetDraftResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.ListDrafts
   */
  listDrafts: {
    methodKind: "unary";
    input: typeof ListDraftsRequestSchema;
    output: typeof ListDraftsResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.DeleteDraft
   */
  deleteDraft: {
    methodKind: "unary";
    input: typeof DeleteDraftRequestSchema;
    output: typeof DeleteDraftResponseSchema;
  },
  /**
   * Section-based updates (supports skip-around editing)
   *
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.UpdateName
   */
  updateName: {
    methodKind: "unary";
    input: typeof UpdateNameRequestSchema;
    output: typeof UpdateNameResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.UpdateRace
   */
  updateRace: {
    methodKind: "unary";
    input: typeof UpdateRaceRequestSchema;
    output: typeof UpdateRaceResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.UpdateClass
   */
  updateClass: {
    methodKind: "unary";
    input: typeof UpdateClassRequestSchema;
    output: typeof UpdateClassResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.UpdateBackground
   */
  updateBackground: {
    methodKind: "unary";
    input: typeof UpdateBackgroundRequestSchema;
    output: typeof UpdateBackgroundResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.UpdateAbilityScores
   */
  updateAbilityScores: {
    methodKind: "unary";
    input: typeof UpdateAbilityScoresRequestSchema;
    output: typeof UpdateAbilityScoresResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.UpdateSkills
   */
  updateSkills: {
    methodKind: "unary";
    input: typeof UpdateSkillsRequestSchema;
    output: typeof UpdateSkillsResponseSchema;
  },
  /**
   * Validation
   *
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.ValidateDraft
   */
  validateDraft: {
    methodKind: "unary";
    input: typeof ValidateDraftRequestSchema;
    output: typeof ValidateDraftResponseSchema;
  },
  /**
   * Get a preview of what the character would look like if finalized
   *
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.GetDraftPreview
   */
  getDraftPreview: {
    methodKind: "unary";
    input: typeof GetDraftPreviewRequestSchema;
    output: typeof GetDraftPreviewResponseSchema;
  },
  /**
   * Character finalization
   *
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.FinalizeDraft
   */
  finalizeDraft: {
    methodKind: "unary";
    input: typeof FinalizeDraftRequestSchema;
    output: typeof FinalizeDraftResponseSchema;
  },
  /**
   * Completed character operations
   *
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.GetCharacter
   */
  getCharacter: {
    methodKind: "unary";
    input: typeof GetCharacterRequestSchema;
    output: typeof GetCharacterResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.ListCharacters
   */
  listCharacters: {
    methodKind: "unary";
    input: typeof ListCharactersRequestSchema;
    output: typeof ListCharactersResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.DeleteCharacter
   */
  deleteCharacter: {
    methodKind: "unary";
    input: typeof DeleteCharacterRequestSchema;
    output: typeof DeleteCharacterResponseSchema;
  },
  /**
   * Data loading for character creation UI
   *
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.ListRaces
   */
  listRaces: {
    methodKind: "unary";
    input: typeof ListRacesRequestSchema;
    output: typeof ListRacesResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.ListClasses
   */
  listClasses: {
    methodKind: "unary";
    input: typeof ListClassesRequestSchema;
    output: typeof ListClassesResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.ListBackgrounds
   */
  listBackgrounds: {
    methodKind: "unary";
    input: typeof ListBackgroundsRequestSchema;
    output: typeof ListBackgroundsResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.GetRaceDetails
   */
  getRaceDetails: {
    methodKind: "unary";
    input: typeof GetRaceDetailsRequestSchema;
    output: typeof GetRaceDetailsResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.GetClassDetails
   */
  getClassDetails: {
    methodKind: "unary";
    input: typeof GetClassDetailsRequestSchema;
    output: typeof GetClassDetailsResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.GetBackgroundDetails
   */
  getBackgroundDetails: {
    methodKind: "unary";
    input: typeof GetBackgroundDetailsRequestSchema;
    output: typeof GetBackgroundDetailsResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.GetFeature
   */
  getFeature: {
    methodKind: "unary";
    input: typeof GetFeatureRequestSchema;
    output: typeof GetFeatureResponseSchema;
  },
  /**
   * Dice rolling for character creation
   *
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.RollAbilityScores
   */
  rollAbilityScores: {
    methodKind: "unary";
    input: typeof RollAbilityScoresRequestSchema;
    output: typeof RollAbilityScoresResponseSchema;
  },
  /**
   * Get requirements for character creation choices
   *
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.GetRequirements
   */
  getRequirements: {
    methodKind: "unary";
    input: typeof GetRequirementsRequestSchema;
    output: typeof GetRequirementsResponseSchema;
  },
  /**
   * Submit character creation choices
   *
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.SubmitChoices
   */
  submitChoices: {
    methodKind: "unary";
    input: typeof SubmitChoicesRequestSchema;
    output: typeof SubmitChoicesResponseSchema;
  },
  /**
   * Equipment listing by type
   *
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.ListEquipmentByType
   */
  listEquipmentByType: {
    methodKind: "unary";
    input: typeof ListEquipmentByTypeRequestSchema;
    output: typeof ListEquipmentByTypeResponseSchema;
  },
  /**
   * Spell listing by level
   *
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.ListSpellsByLevel
   */
  listSpellsByLevel: {
    methodKind: "unary";
    input: typeof ListSpellsByLevelRequestSchema;
    output: typeof ListSpellsByLevelResponseSchema;
  },
  /**
   * Equipment management
   *
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.GetCharacterInventory
   */
  getCharacterInventory: {
    methodKind: "unary";
    input: typeof GetCharacterInventoryRequestSchema;
    output: typeof GetCharacterInventoryResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.EquipItem
   */
  equipItem: {
    methodKind: "unary";
    input: typeof EquipItemRequestSchema;
    output: typeof EquipItemResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.UnequipItem
   */
  unequipItem: {
    methodKind: "unary";
    input: typeof UnequipItemRequestSchema;
    output: typeof UnequipItemResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.AddToInventory
   */
  addToInventory: {
    methodKind: "unary";
    input: typeof AddToInventoryRequestSchema;
    output: typeof AddToInventoryResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.RemoveFromInventory
   */
  removeFromInventory: {
    methodKind: "unary";
    input: typeof RemoveFromInventoryRequestSchema;
    output: typeof RemoveFromInventoryResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_dnd5e_api_v1alpha1_character, 0);

