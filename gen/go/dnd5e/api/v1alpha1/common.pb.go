// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: dnd5e/api/v1alpha1/common.proto

package apiv1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Sources of validation issues (matches toolkit constants)
type ValidationSource int32

const (
	ValidationSource_VALIDATION_SOURCE_UNSPECIFIED    ValidationSource = 0
	ValidationSource_VALIDATION_SOURCE_RACE           ValidationSource = 1
	ValidationSource_VALIDATION_SOURCE_CLASS          ValidationSource = 2
	ValidationSource_VALIDATION_SOURCE_BACKGROUND     ValidationSource = 3
	ValidationSource_VALIDATION_SOURCE_ABILITY_SCORES ValidationSource = 4
	ValidationSource_VALIDATION_SOURCE_NAME           ValidationSource = 5
	ValidationSource_VALIDATION_SOURCE_ALIGNMENT      ValidationSource = 6
	ValidationSource_VALIDATION_SOURCE_LEVEL          ValidationSource = 7
	ValidationSource_VALIDATION_SOURCE_SUBRACE        ValidationSource = 8 // Validation from subrace selection
)

// Enum value maps for ValidationSource.
var (
	ValidationSource_name = map[int32]string{
		0: "VALIDATION_SOURCE_UNSPECIFIED",
		1: "VALIDATION_SOURCE_RACE",
		2: "VALIDATION_SOURCE_CLASS",
		3: "VALIDATION_SOURCE_BACKGROUND",
		4: "VALIDATION_SOURCE_ABILITY_SCORES",
		5: "VALIDATION_SOURCE_NAME",
		6: "VALIDATION_SOURCE_ALIGNMENT",
		7: "VALIDATION_SOURCE_LEVEL",
		8: "VALIDATION_SOURCE_SUBRACE",
	}
	ValidationSource_value = map[string]int32{
		"VALIDATION_SOURCE_UNSPECIFIED":    0,
		"VALIDATION_SOURCE_RACE":           1,
		"VALIDATION_SOURCE_CLASS":          2,
		"VALIDATION_SOURCE_BACKGROUND":     3,
		"VALIDATION_SOURCE_ABILITY_SCORES": 4,
		"VALIDATION_SOURCE_NAME":           5,
		"VALIDATION_SOURCE_ALIGNMENT":      6,
		"VALIDATION_SOURCE_LEVEL":          7,
		"VALIDATION_SOURCE_SUBRACE":        8,
	}
)

func (x ValidationSource) Enum() *ValidationSource {
	p := new(ValidationSource)
	*p = x
	return p
}

func (x ValidationSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ValidationSource) Descriptor() protoreflect.EnumDescriptor {
	return file_dnd5e_api_v1alpha1_common_proto_enumTypes[0].Descriptor()
}

func (ValidationSource) Type() protoreflect.EnumType {
	return &file_dnd5e_api_v1alpha1_common_proto_enumTypes[0]
}

func (x ValidationSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ValidationSource.Descriptor instead.
func (ValidationSource) EnumDescriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_common_proto_rawDescGZIP(), []int{0}
}

// Fields that can have validation issues (matches toolkit constants)
type ValidationField int32

const (
	ValidationField_VALIDATION_FIELD_UNSPECIFIED       ValidationField = 0
	ValidationField_VALIDATION_FIELD_SKILLS            ValidationField = 1
	ValidationField_VALIDATION_FIELD_LANGUAGES         ValidationField = 2
	ValidationField_VALIDATION_FIELD_EQUIPMENT         ValidationField = 3
	ValidationField_VALIDATION_FIELD_SPELLS            ValidationField = 4
	ValidationField_VALIDATION_FIELD_CANTRIPS          ValidationField = 5
	ValidationField_VALIDATION_FIELD_TOOLS             ValidationField = 6
	ValidationField_VALIDATION_FIELD_EXPERTISE         ValidationField = 7
	ValidationField_VALIDATION_FIELD_FIGHTING_STYLE    ValidationField = 8
	ValidationField_VALIDATION_FIELD_ABILITY_SCORES    ValidationField = 9
	ValidationField_VALIDATION_FIELD_NAME              ValidationField = 10
	ValidationField_VALIDATION_FIELD_RACE              ValidationField = 11
	ValidationField_VALIDATION_FIELD_CLASS             ValidationField = 12
	ValidationField_VALIDATION_FIELD_BACKGROUND        ValidationField = 13
	ValidationField_VALIDATION_FIELD_DRACONIC_ANCESTRY ValidationField = 14
	ValidationField_VALIDATION_FIELD_SUBRACE           ValidationField = 15 // Subrace selection
	ValidationField_VALIDATION_FIELD_TRAITS            ValidationField = 16 // Generic racial/class traits
)

// Enum value maps for ValidationField.
var (
	ValidationField_name = map[int32]string{
		0:  "VALIDATION_FIELD_UNSPECIFIED",
		1:  "VALIDATION_FIELD_SKILLS",
		2:  "VALIDATION_FIELD_LANGUAGES",
		3:  "VALIDATION_FIELD_EQUIPMENT",
		4:  "VALIDATION_FIELD_SPELLS",
		5:  "VALIDATION_FIELD_CANTRIPS",
		6:  "VALIDATION_FIELD_TOOLS",
		7:  "VALIDATION_FIELD_EXPERTISE",
		8:  "VALIDATION_FIELD_FIGHTING_STYLE",
		9:  "VALIDATION_FIELD_ABILITY_SCORES",
		10: "VALIDATION_FIELD_NAME",
		11: "VALIDATION_FIELD_RACE",
		12: "VALIDATION_FIELD_CLASS",
		13: "VALIDATION_FIELD_BACKGROUND",
		14: "VALIDATION_FIELD_DRACONIC_ANCESTRY",
		15: "VALIDATION_FIELD_SUBRACE",
		16: "VALIDATION_FIELD_TRAITS",
	}
	ValidationField_value = map[string]int32{
		"VALIDATION_FIELD_UNSPECIFIED":       0,
		"VALIDATION_FIELD_SKILLS":            1,
		"VALIDATION_FIELD_LANGUAGES":         2,
		"VALIDATION_FIELD_EQUIPMENT":         3,
		"VALIDATION_FIELD_SPELLS":            4,
		"VALIDATION_FIELD_CANTRIPS":          5,
		"VALIDATION_FIELD_TOOLS":             6,
		"VALIDATION_FIELD_EXPERTISE":         7,
		"VALIDATION_FIELD_FIGHTING_STYLE":    8,
		"VALIDATION_FIELD_ABILITY_SCORES":    9,
		"VALIDATION_FIELD_NAME":              10,
		"VALIDATION_FIELD_RACE":              11,
		"VALIDATION_FIELD_CLASS":             12,
		"VALIDATION_FIELD_BACKGROUND":        13,
		"VALIDATION_FIELD_DRACONIC_ANCESTRY": 14,
		"VALIDATION_FIELD_SUBRACE":           15,
		"VALIDATION_FIELD_TRAITS":            16,
	}
)

func (x ValidationField) Enum() *ValidationField {
	p := new(ValidationField)
	*p = x
	return p
}

func (x ValidationField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ValidationField) Descriptor() protoreflect.EnumDescriptor {
	return file_dnd5e_api_v1alpha1_common_proto_enumTypes[1].Descriptor()
}

func (ValidationField) Type() protoreflect.EnumType {
	return &file_dnd5e_api_v1alpha1_common_proto_enumTypes[1]
}

func (x ValidationField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ValidationField.Descriptor instead.
func (ValidationField) EnumDescriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_common_proto_rawDescGZIP(), []int{1}
}

// Severity levels for validation issues
type ValidationResult_Severity int32

const (
	ValidationResult_SEVERITY_UNSPECIFIED ValidationResult_Severity = 0
	ValidationResult_SEVERITY_ERROR       ValidationResult_Severity = 1 // Critical issues that prevent character use
	ValidationResult_SEVERITY_INCOMPLETE  ValidationResult_Severity = 2 // Missing required choices (OK for drafts)
	ValidationResult_SEVERITY_WARNING     ValidationResult_Severity = 3 // Non-blocking issues like duplicates
)

// Enum value maps for ValidationResult_Severity.
var (
	ValidationResult_Severity_name = map[int32]string{
		0: "SEVERITY_UNSPECIFIED",
		1: "SEVERITY_ERROR",
		2: "SEVERITY_INCOMPLETE",
		3: "SEVERITY_WARNING",
	}
	ValidationResult_Severity_value = map[string]int32{
		"SEVERITY_UNSPECIFIED": 0,
		"SEVERITY_ERROR":       1,
		"SEVERITY_INCOMPLETE":  2,
		"SEVERITY_WARNING":     3,
	}
)

func (x ValidationResult_Severity) Enum() *ValidationResult_Severity {
	p := new(ValidationResult_Severity)
	*p = x
	return p
}

func (x ValidationResult_Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ValidationResult_Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_dnd5e_api_v1alpha1_common_proto_enumTypes[2].Descriptor()
}

func (ValidationResult_Severity) Type() protoreflect.EnumType {
	return &file_dnd5e_api_v1alpha1_common_proto_enumTypes[2]
}

func (x ValidationResult_Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ValidationResult_Severity.Descriptor instead.
func (ValidationResult_Severity) EnumDescriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_common_proto_rawDescGZIP(), []int{6, 0}
}

// Common error details for D&D 5e validation
type ValidationError struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Field that failed validation
	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	// Human-readable error message
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Error code for programmatic handling
	Code          string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidationError) Reset() {
	*x = ValidationError{}
	mi := &file_dnd5e_api_v1alpha1_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationError) ProtoMessage() {}

func (x *ValidationError) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationError.ProtoReflect.Descriptor instead.
func (*ValidationError) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_common_proto_rawDescGZIP(), []int{0}
}

func (x *ValidationError) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *ValidationError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ValidationError) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// Dice notation for various game mechanics
type DiceRoll struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Number of dice
	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// Die size (4, 6, 8, 10, 12, 20, 100)
	Size int32 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	// Modifier to add/subtract
	Modifier int32 `protobuf:"varint,3,opt,name=modifier,proto3" json:"modifier,omitempty"`
	// String representation (e.g., "1d20+5")
	Notation      string `protobuf:"bytes,4,opt,name=notation,proto3" json:"notation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiceRoll) Reset() {
	*x = DiceRoll{}
	mi := &file_dnd5e_api_v1alpha1_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiceRoll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiceRoll) ProtoMessage() {}

func (x *DiceRoll) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiceRoll.ProtoReflect.Descriptor instead.
func (*DiceRoll) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_common_proto_rawDescGZIP(), []int{1}
}

func (x *DiceRoll) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *DiceRoll) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *DiceRoll) GetModifier() int32 {
	if x != nil {
		return x.Modifier
	}
	return 0
}

func (x *DiceRoll) GetNotation() string {
	if x != nil {
		return x.Notation
	}
	return ""
}

// Modifier with a source for tracking
type Modifier struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ability or skill being modified
	Target string `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	// The modifier value (can be negative)
	Value int32 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	// Source of the modifier (e.g., "racial", "class feature")
	Source string `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	// Type of modifier (e.g., "enhancement", "circumstance")
	Type          string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Modifier) Reset() {
	*x = Modifier{}
	mi := &file_dnd5e_api_v1alpha1_common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Modifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Modifier) ProtoMessage() {}

func (x *Modifier) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Modifier.ProtoReflect.Descriptor instead.
func (*Modifier) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_common_proto_rawDescGZIP(), []int{2}
}

func (x *Modifier) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *Modifier) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Modifier) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Modifier) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// Resource tracking (spell slots, hit dice, etc.)
type Resource struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Resource name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Current value
	Current int32 `protobuf:"varint,2,opt,name=current,proto3" json:"current,omitempty"`
	// Maximum value
	Maximum int32 `protobuf:"varint,3,opt,name=maximum,proto3" json:"maximum,omitempty"`
	// When the resource refreshes ("short rest", "long rest", "daily")
	RefreshOn     string `protobuf:"bytes,4,opt,name=refresh_on,json=refreshOn,proto3" json:"refresh_on,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Resource) Reset() {
	*x = Resource{}
	mi := &file_dnd5e_api_v1alpha1_common_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_common_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_common_proto_rawDescGZIP(), []int{3}
}

func (x *Resource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Resource) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *Resource) GetMaximum() int32 {
	if x != nil {
		return x.Maximum
	}
	return 0
}

func (x *Resource) GetRefreshOn() string {
	if x != nil {
		return x.RefreshOn
	}
	return ""
}

// Status effect or condition
type Condition struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Condition name (e.g., "poisoned", "frightened")
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Source of the condition
	Source string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	// Duration in rounds (-1 for indefinite)
	Duration int32 `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	// Any additional notes
	Notes         string `protobuf:"bytes,4,opt,name=notes,proto3" json:"notes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Condition) Reset() {
	*x = Condition{}
	mi := &file_dnd5e_api_v1alpha1_common_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Condition) ProtoMessage() {}

func (x *Condition) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_common_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Condition.ProtoReflect.Descriptor instead.
func (*Condition) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_common_proto_rawDescGZIP(), []int{4}
}

func (x *Condition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Condition) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Condition) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Condition) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

// Validation warning (non-blocking)
type ValidationWarning struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Field with warning
	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	// Warning message
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Warning severity/type
	Type          string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidationWarning) Reset() {
	*x = ValidationWarning{}
	mi := &file_dnd5e_api_v1alpha1_common_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationWarning) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationWarning) ProtoMessage() {}

func (x *ValidationWarning) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_common_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationWarning.ProtoReflect.Descriptor instead.
func (*ValidationWarning) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_common_proto_rawDescGZIP(), []int{5}
}

func (x *ValidationWarning) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *ValidationWarning) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ValidationWarning) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// Validation result matching toolkit's 3-tier system
type ValidationResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the character/draft is valid for its current state
	IsValid bool `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	// All validation issues found
	Issues []*ValidationResult_Issue `protobuf:"bytes,2,rep,name=issues,proto3" json:"issues,omitempty"`
	// Quick access to counts by severity
	ErrorCount      int32 `protobuf:"varint,3,opt,name=error_count,json=errorCount,proto3" json:"error_count,omitempty"`
	IncompleteCount int32 `protobuf:"varint,4,opt,name=incomplete_count,json=incompleteCount,proto3" json:"incomplete_count,omitempty"`
	WarningCount    int32 `protobuf:"varint,5,opt,name=warning_count,json=warningCount,proto3" json:"warning_count,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ValidationResult) Reset() {
	*x = ValidationResult{}
	mi := &file_dnd5e_api_v1alpha1_common_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationResult) ProtoMessage() {}

func (x *ValidationResult) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_common_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationResult.ProtoReflect.Descriptor instead.
func (*ValidationResult) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_common_proto_rawDescGZIP(), []int{6}
}

func (x *ValidationResult) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *ValidationResult) GetIssues() []*ValidationResult_Issue {
	if x != nil {
		return x.Issues
	}
	return nil
}

func (x *ValidationResult) GetErrorCount() int32 {
	if x != nil {
		return x.ErrorCount
	}
	return 0
}

func (x *ValidationResult) GetIncompleteCount() int32 {
	if x != nil {
		return x.IncompleteCount
	}
	return 0
}

func (x *ValidationResult) GetWarningCount() int32 {
	if x != nil {
		return x.WarningCount
	}
	return 0
}

// Individual validation issue
type ValidationResult_Issue struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Severity      ValidationResult_Severity `protobuf:"varint,1,opt,name=severity,proto3,enum=dnd5e.api.v1alpha1.ValidationResult_Severity" json:"severity,omitempty"`
	Source        ValidationSource          `protobuf:"varint,2,opt,name=source,proto3,enum=dnd5e.api.v1alpha1.ValidationSource" json:"source,omitempty"` // Where the issue originates
	Field         ValidationField           `protobuf:"varint,3,opt,name=field,proto3,enum=dnd5e.api.v1alpha1.ValidationField" json:"field,omitempty"`    // What field has the issue
	Message       string                    `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`                                         // Human-readable description
	Details       []string                  `protobuf:"bytes,5,rep,name=details,proto3" json:"details,omitempty"`                                         // Additional context (e.g., conflicting choices)
	SourceDetail  string                    `protobuf:"bytes,6,opt,name=source_detail,json=sourceDetail,proto3" json:"source_detail,omitempty"`           // Optional: specific source ID (e.g., "fighter", "elf")
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidationResult_Issue) Reset() {
	*x = ValidationResult_Issue{}
	mi := &file_dnd5e_api_v1alpha1_common_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationResult_Issue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationResult_Issue) ProtoMessage() {}

func (x *ValidationResult_Issue) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_common_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationResult_Issue.ProtoReflect.Descriptor instead.
func (*ValidationResult_Issue) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_common_proto_rawDescGZIP(), []int{6, 0}
}

func (x *ValidationResult_Issue) GetSeverity() ValidationResult_Severity {
	if x != nil {
		return x.Severity
	}
	return ValidationResult_SEVERITY_UNSPECIFIED
}

func (x *ValidationResult_Issue) GetSource() ValidationSource {
	if x != nil {
		return x.Source
	}
	return ValidationSource_VALIDATION_SOURCE_UNSPECIFIED
}

func (x *ValidationResult_Issue) GetField() ValidationField {
	if x != nil {
		return x.Field
	}
	return ValidationField_VALIDATION_FIELD_UNSPECIFIED
}

func (x *ValidationResult_Issue) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ValidationResult_Issue) GetDetails() []string {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ValidationResult_Issue) GetSourceDetail() string {
	if x != nil {
		return x.SourceDetail
	}
	return ""
}

var File_dnd5e_api_v1alpha1_common_proto protoreflect.FileDescriptor

const file_dnd5e_api_v1alpha1_common_proto_rawDesc = "" +
	"\n" +
	"\x1fdnd5e/api/v1alpha1/common.proto\x12\x12dnd5e.api.v1alpha1\"U\n" +
	"\x0fValidationError\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x12\n" +
	"\x04code\x18\x03 \x01(\tR\x04code\"l\n" +
	"\bDiceRoll\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x05R\x04size\x12\x1a\n" +
	"\bmodifier\x18\x03 \x01(\x05R\bmodifier\x12\x1a\n" +
	"\bnotation\x18\x04 \x01(\tR\bnotation\"d\n" +
	"\bModifier\x12\x16\n" +
	"\x06target\x18\x01 \x01(\tR\x06target\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value\x12\x16\n" +
	"\x06source\x18\x03 \x01(\tR\x06source\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\"q\n" +
	"\bResource\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\acurrent\x18\x02 \x01(\x05R\acurrent\x12\x18\n" +
	"\amaximum\x18\x03 \x01(\x05R\amaximum\x12\x1d\n" +
	"\n" +
	"refresh_on\x18\x04 \x01(\tR\trefreshOn\"i\n" +
	"\tCondition\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06source\x18\x02 \x01(\tR\x06source\x12\x1a\n" +
	"\bduration\x18\x03 \x01(\x05R\bduration\x12\x14\n" +
	"\x05notes\x18\x04 \x01(\tR\x05notes\"W\n" +
	"\x11ValidationWarning\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\"\xf2\x04\n" +
	"\x10ValidationResult\x12\x19\n" +
	"\bis_valid\x18\x01 \x01(\bR\aisValid\x12B\n" +
	"\x06issues\x18\x02 \x03(\v2*.dnd5e.api.v1alpha1.ValidationResult.IssueR\x06issues\x12\x1f\n" +
	"\verror_count\x18\x03 \x01(\x05R\n" +
	"errorCount\x12)\n" +
	"\x10incomplete_count\x18\x04 \x01(\x05R\x0fincompleteCount\x12#\n" +
	"\rwarning_count\x18\x05 \x01(\x05R\fwarningCount\x1a\xa4\x02\n" +
	"\x05Issue\x12I\n" +
	"\bseverity\x18\x01 \x01(\x0e2-.dnd5e.api.v1alpha1.ValidationResult.SeverityR\bseverity\x12<\n" +
	"\x06source\x18\x02 \x01(\x0e2$.dnd5e.api.v1alpha1.ValidationSourceR\x06source\x129\n" +
	"\x05field\x18\x03 \x01(\x0e2#.dnd5e.api.v1alpha1.ValidationFieldR\x05field\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12\x18\n" +
	"\adetails\x18\x05 \x03(\tR\adetails\x12#\n" +
	"\rsource_detail\x18\x06 \x01(\tR\fsourceDetail\"g\n" +
	"\bSeverity\x12\x18\n" +
	"\x14SEVERITY_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eSEVERITY_ERROR\x10\x01\x12\x17\n" +
	"\x13SEVERITY_INCOMPLETE\x10\x02\x12\x14\n" +
	"\x10SEVERITY_WARNING\x10\x03*\xaf\x02\n" +
	"\x10ValidationSource\x12!\n" +
	"\x1dVALIDATION_SOURCE_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16VALIDATION_SOURCE_RACE\x10\x01\x12\x1b\n" +
	"\x17VALIDATION_SOURCE_CLASS\x10\x02\x12 \n" +
	"\x1cVALIDATION_SOURCE_BACKGROUND\x10\x03\x12$\n" +
	" VALIDATION_SOURCE_ABILITY_SCORES\x10\x04\x12\x1a\n" +
	"\x16VALIDATION_SOURCE_NAME\x10\x05\x12\x1f\n" +
	"\x1bVALIDATION_SOURCE_ALIGNMENT\x10\x06\x12\x1b\n" +
	"\x17VALIDATION_SOURCE_LEVEL\x10\a\x12\x1d\n" +
	"\x19VALIDATION_SOURCE_SUBRACE\x10\b*\xa8\x04\n" +
	"\x0fValidationField\x12 \n" +
	"\x1cVALIDATION_FIELD_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17VALIDATION_FIELD_SKILLS\x10\x01\x12\x1e\n" +
	"\x1aVALIDATION_FIELD_LANGUAGES\x10\x02\x12\x1e\n" +
	"\x1aVALIDATION_FIELD_EQUIPMENT\x10\x03\x12\x1b\n" +
	"\x17VALIDATION_FIELD_SPELLS\x10\x04\x12\x1d\n" +
	"\x19VALIDATION_FIELD_CANTRIPS\x10\x05\x12\x1a\n" +
	"\x16VALIDATION_FIELD_TOOLS\x10\x06\x12\x1e\n" +
	"\x1aVALIDATION_FIELD_EXPERTISE\x10\a\x12#\n" +
	"\x1fVALIDATION_FIELD_FIGHTING_STYLE\x10\b\x12#\n" +
	"\x1fVALIDATION_FIELD_ABILITY_SCORES\x10\t\x12\x19\n" +
	"\x15VALIDATION_FIELD_NAME\x10\n" +
	"\x12\x19\n" +
	"\x15VALIDATION_FIELD_RACE\x10\v\x12\x1a\n" +
	"\x16VALIDATION_FIELD_CLASS\x10\f\x12\x1f\n" +
	"\x1bVALIDATION_FIELD_BACKGROUND\x10\r\x12&\n" +
	"\"VALIDATION_FIELD_DRACONIC_ANCESTRY\x10\x0e\x12\x1c\n" +
	"\x18VALIDATION_FIELD_SUBRACE\x10\x0f\x12\x1b\n" +
	"\x17VALIDATION_FIELD_TRAITS\x10\x10B\xdc\x01\n" +
	"\x16com.dnd5e.api.v1alpha1B\vCommonProtoP\x01ZKgithub.com/KirkDiggler/rpg-api-protos/gen/go/dnd5e/api/v1alpha1;apiv1alpha1\xa2\x02\x03DAX\xaa\x02\x12Dnd5e.Api.V1alpha1\xca\x02\x12Dnd5e\\Api\\V1alpha1\xe2\x02\x1eDnd5e\\Api\\V1alpha1\\GPBMetadata\xea\x02\x14Dnd5e::Api::V1alpha1b\x06proto3"

var (
	file_dnd5e_api_v1alpha1_common_proto_rawDescOnce sync.Once
	file_dnd5e_api_v1alpha1_common_proto_rawDescData []byte
)

func file_dnd5e_api_v1alpha1_common_proto_rawDescGZIP() []byte {
	file_dnd5e_api_v1alpha1_common_proto_rawDescOnce.Do(func() {
		file_dnd5e_api_v1alpha1_common_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dnd5e_api_v1alpha1_common_proto_rawDesc), len(file_dnd5e_api_v1alpha1_common_proto_rawDesc)))
	})
	return file_dnd5e_api_v1alpha1_common_proto_rawDescData
}

var file_dnd5e_api_v1alpha1_common_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_dnd5e_api_v1alpha1_common_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_dnd5e_api_v1alpha1_common_proto_goTypes = []any{
	(ValidationSource)(0),          // 0: dnd5e.api.v1alpha1.ValidationSource
	(ValidationField)(0),           // 1: dnd5e.api.v1alpha1.ValidationField
	(ValidationResult_Severity)(0), // 2: dnd5e.api.v1alpha1.ValidationResult.Severity
	(*ValidationError)(nil),        // 3: dnd5e.api.v1alpha1.ValidationError
	(*DiceRoll)(nil),               // 4: dnd5e.api.v1alpha1.DiceRoll
	(*Modifier)(nil),               // 5: dnd5e.api.v1alpha1.Modifier
	(*Resource)(nil),               // 6: dnd5e.api.v1alpha1.Resource
	(*Condition)(nil),              // 7: dnd5e.api.v1alpha1.Condition
	(*ValidationWarning)(nil),      // 8: dnd5e.api.v1alpha1.ValidationWarning
	(*ValidationResult)(nil),       // 9: dnd5e.api.v1alpha1.ValidationResult
	(*ValidationResult_Issue)(nil), // 10: dnd5e.api.v1alpha1.ValidationResult.Issue
}
var file_dnd5e_api_v1alpha1_common_proto_depIdxs = []int32{
	10, // 0: dnd5e.api.v1alpha1.ValidationResult.issues:type_name -> dnd5e.api.v1alpha1.ValidationResult.Issue
	2,  // 1: dnd5e.api.v1alpha1.ValidationResult.Issue.severity:type_name -> dnd5e.api.v1alpha1.ValidationResult.Severity
	0,  // 2: dnd5e.api.v1alpha1.ValidationResult.Issue.source:type_name -> dnd5e.api.v1alpha1.ValidationSource
	1,  // 3: dnd5e.api.v1alpha1.ValidationResult.Issue.field:type_name -> dnd5e.api.v1alpha1.ValidationField
	4,  // [4:4] is the sub-list for method output_type
	4,  // [4:4] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_dnd5e_api_v1alpha1_common_proto_init() }
func file_dnd5e_api_v1alpha1_common_proto_init() {
	if File_dnd5e_api_v1alpha1_common_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dnd5e_api_v1alpha1_common_proto_rawDesc), len(file_dnd5e_api_v1alpha1_common_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dnd5e_api_v1alpha1_common_proto_goTypes,
		DependencyIndexes: file_dnd5e_api_v1alpha1_common_proto_depIdxs,
		EnumInfos:         file_dnd5e_api_v1alpha1_common_proto_enumTypes,
		MessageInfos:      file_dnd5e_api_v1alpha1_common_proto_msgTypes,
	}.Build()
	File_dnd5e_api_v1alpha1_common_proto = out.File
	file_dnd5e_api_v1alpha1_common_proto_goTypes = nil
	file_dnd5e_api_v1alpha1_common_proto_depIdxs = nil
}
