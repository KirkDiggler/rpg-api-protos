// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: dnd5e/api/v1alpha1/character.proto

package apiv1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Types of class resources in D&D 5e
type ClassResourceType int32

const (
	ClassResourceType_CLASS_RESOURCE_TYPE_UNSPECIFIED        ClassResourceType = 0
	ClassResourceType_CLASS_RESOURCE_TYPE_RAGE               ClassResourceType = 1
	ClassResourceType_CLASS_RESOURCE_TYPE_BARDIC_INSPIRATION ClassResourceType = 2
	ClassResourceType_CLASS_RESOURCE_TYPE_CHANNEL_DIVINITY   ClassResourceType = 3
	ClassResourceType_CLASS_RESOURCE_TYPE_WILD_SHAPE         ClassResourceType = 4
	ClassResourceType_CLASS_RESOURCE_TYPE_SECOND_WIND        ClassResourceType = 5
	ClassResourceType_CLASS_RESOURCE_TYPE_ACTION_SURGE       ClassResourceType = 6
	ClassResourceType_CLASS_RESOURCE_TYPE_KI_POINTS          ClassResourceType = 7
	ClassResourceType_CLASS_RESOURCE_TYPE_DIVINE_SENSE       ClassResourceType = 8
	ClassResourceType_CLASS_RESOURCE_TYPE_LAY_ON_HANDS       ClassResourceType = 9
	ClassResourceType_CLASS_RESOURCE_TYPE_SORCERY_POINTS     ClassResourceType = 10
	ClassResourceType_CLASS_RESOURCE_TYPE_ARCANE_RECOVERY    ClassResourceType = 11
	ClassResourceType_CLASS_RESOURCE_TYPE_INDOMITABLE        ClassResourceType = 12
	ClassResourceType_CLASS_RESOURCE_TYPE_SUPERIORITY_DICE   ClassResourceType = 13
)

// Enum value maps for ClassResourceType.
var (
	ClassResourceType_name = map[int32]string{
		0:  "CLASS_RESOURCE_TYPE_UNSPECIFIED",
		1:  "CLASS_RESOURCE_TYPE_RAGE",
		2:  "CLASS_RESOURCE_TYPE_BARDIC_INSPIRATION",
		3:  "CLASS_RESOURCE_TYPE_CHANNEL_DIVINITY",
		4:  "CLASS_RESOURCE_TYPE_WILD_SHAPE",
		5:  "CLASS_RESOURCE_TYPE_SECOND_WIND",
		6:  "CLASS_RESOURCE_TYPE_ACTION_SURGE",
		7:  "CLASS_RESOURCE_TYPE_KI_POINTS",
		8:  "CLASS_RESOURCE_TYPE_DIVINE_SENSE",
		9:  "CLASS_RESOURCE_TYPE_LAY_ON_HANDS",
		10: "CLASS_RESOURCE_TYPE_SORCERY_POINTS",
		11: "CLASS_RESOURCE_TYPE_ARCANE_RECOVERY",
		12: "CLASS_RESOURCE_TYPE_INDOMITABLE",
		13: "CLASS_RESOURCE_TYPE_SUPERIORITY_DICE",
	}
	ClassResourceType_value = map[string]int32{
		"CLASS_RESOURCE_TYPE_UNSPECIFIED":        0,
		"CLASS_RESOURCE_TYPE_RAGE":               1,
		"CLASS_RESOURCE_TYPE_BARDIC_INSPIRATION": 2,
		"CLASS_RESOURCE_TYPE_CHANNEL_DIVINITY":   3,
		"CLASS_RESOURCE_TYPE_WILD_SHAPE":         4,
		"CLASS_RESOURCE_TYPE_SECOND_WIND":        5,
		"CLASS_RESOURCE_TYPE_ACTION_SURGE":       6,
		"CLASS_RESOURCE_TYPE_KI_POINTS":          7,
		"CLASS_RESOURCE_TYPE_DIVINE_SENSE":       8,
		"CLASS_RESOURCE_TYPE_LAY_ON_HANDS":       9,
		"CLASS_RESOURCE_TYPE_SORCERY_POINTS":     10,
		"CLASS_RESOURCE_TYPE_ARCANE_RECOVERY":    11,
		"CLASS_RESOURCE_TYPE_INDOMITABLE":        12,
		"CLASS_RESOURCE_TYPE_SUPERIORITY_DICE":   13,
	}
)

func (x ClassResourceType) Enum() *ClassResourceType {
	p := new(ClassResourceType)
	*p = x
	return p
}

func (x ClassResourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClassResourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_dnd5e_api_v1alpha1_character_proto_enumTypes[0].Descriptor()
}

func (ClassResourceType) Type() protoreflect.EnumType {
	return &file_dnd5e_api_v1alpha1_character_proto_enumTypes[0]
}

func (x ClassResourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClassResourceType.Descriptor instead.
func (ClassResourceType) EnumDescriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{0}
}

// Recharge timing for resources
type RechargeType int32

const (
	RechargeType_RECHARGE_TYPE_UNSPECIFIED RechargeType = 0
	RechargeType_RECHARGE_TYPE_SHORT_REST  RechargeType = 1
	RechargeType_RECHARGE_TYPE_LONG_REST   RechargeType = 2
	RechargeType_RECHARGE_TYPE_DAWN        RechargeType = 3
	RechargeType_RECHARGE_TYPE_NONE        RechargeType = 4 // Never recharges (consumable)
)

// Enum value maps for RechargeType.
var (
	RechargeType_name = map[int32]string{
		0: "RECHARGE_TYPE_UNSPECIFIED",
		1: "RECHARGE_TYPE_SHORT_REST",
		2: "RECHARGE_TYPE_LONG_REST",
		3: "RECHARGE_TYPE_DAWN",
		4: "RECHARGE_TYPE_NONE",
	}
	RechargeType_value = map[string]int32{
		"RECHARGE_TYPE_UNSPECIFIED": 0,
		"RECHARGE_TYPE_SHORT_REST":  1,
		"RECHARGE_TYPE_LONG_REST":   2,
		"RECHARGE_TYPE_DAWN":        3,
		"RECHARGE_TYPE_NONE":        4,
	}
)

func (x RechargeType) Enum() *RechargeType {
	p := new(RechargeType)
	*p = x
	return p
}

func (x RechargeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RechargeType) Descriptor() protoreflect.EnumDescriptor {
	return file_dnd5e_api_v1alpha1_character_proto_enumTypes[1].Descriptor()
}

func (RechargeType) Type() protoreflect.EnumType {
	return &file_dnd5e_api_v1alpha1_character_proto_enumTypes[1]
}

func (x RechargeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RechargeType.Descriptor instead.
func (RechargeType) EnumDescriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{1}
}

// Steps in character creation
type CreationStep int32

const (
	CreationStep_CREATION_STEP_UNSPECIFIED    CreationStep = 0
	CreationStep_CREATION_STEP_NAME           CreationStep = 1
	CreationStep_CREATION_STEP_RACE           CreationStep = 2
	CreationStep_CREATION_STEP_CLASS          CreationStep = 3
	CreationStep_CREATION_STEP_BACKGROUND     CreationStep = 4
	CreationStep_CREATION_STEP_ABILITY_SCORES CreationStep = 5
	CreationStep_CREATION_STEP_SKILLS         CreationStep = 6
	CreationStep_CREATION_STEP_LANGUAGES      CreationStep = 7
	CreationStep_CREATION_STEP_REVIEW         CreationStep = 8
)

// Enum value maps for CreationStep.
var (
	CreationStep_name = map[int32]string{
		0: "CREATION_STEP_UNSPECIFIED",
		1: "CREATION_STEP_NAME",
		2: "CREATION_STEP_RACE",
		3: "CREATION_STEP_CLASS",
		4: "CREATION_STEP_BACKGROUND",
		5: "CREATION_STEP_ABILITY_SCORES",
		6: "CREATION_STEP_SKILLS",
		7: "CREATION_STEP_LANGUAGES",
		8: "CREATION_STEP_REVIEW",
	}
	CreationStep_value = map[string]int32{
		"CREATION_STEP_UNSPECIFIED":    0,
		"CREATION_STEP_NAME":           1,
		"CREATION_STEP_RACE":           2,
		"CREATION_STEP_CLASS":          3,
		"CREATION_STEP_BACKGROUND":     4,
		"CREATION_STEP_ABILITY_SCORES": 5,
		"CREATION_STEP_SKILLS":         6,
		"CREATION_STEP_LANGUAGES":      7,
		"CREATION_STEP_REVIEW":         8,
	}
)

func (x CreationStep) Enum() *CreationStep {
	p := new(CreationStep)
	*p = x
	return p
}

func (x CreationStep) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreationStep) Descriptor() protoreflect.EnumDescriptor {
	return file_dnd5e_api_v1alpha1_character_proto_enumTypes[2].Descriptor()
}

func (CreationStep) Type() protoreflect.EnumType {
	return &file_dnd5e_api_v1alpha1_character_proto_enumTypes[2]
}

func (x CreationStep) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreationStep.Descriptor instead.
func (CreationStep) EnumDescriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{2}
}

type WarningType int32

const (
	WarningType_WARNING_TYPE_UNSPECIFIED         WarningType = 0
	WarningType_WARNING_TYPE_MISSING_REQUIRED    WarningType = 1
	WarningType_WARNING_TYPE_INVALID_COMBINATION WarningType = 2
	WarningType_WARNING_TYPE_SUBOPTIMAL_CHOICE   WarningType = 3
)

// Enum value maps for WarningType.
var (
	WarningType_name = map[int32]string{
		0: "WARNING_TYPE_UNSPECIFIED",
		1: "WARNING_TYPE_MISSING_REQUIRED",
		2: "WARNING_TYPE_INVALID_COMBINATION",
		3: "WARNING_TYPE_SUBOPTIMAL_CHOICE",
	}
	WarningType_value = map[string]int32{
		"WARNING_TYPE_UNSPECIFIED":         0,
		"WARNING_TYPE_MISSING_REQUIRED":    1,
		"WARNING_TYPE_INVALID_COMBINATION": 2,
		"WARNING_TYPE_SUBOPTIMAL_CHOICE":   3,
	}
)

func (x WarningType) Enum() *WarningType {
	p := new(WarningType)
	*p = x
	return p
}

func (x WarningType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WarningType) Descriptor() protoreflect.EnumDescriptor {
	return file_dnd5e_api_v1alpha1_character_proto_enumTypes[3].Descriptor()
}

func (WarningType) Type() protoreflect.EnumType {
	return &file_dnd5e_api_v1alpha1_character_proto_enumTypes[3]
}

func (x WarningType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WarningType.Descriptor instead.
func (WarningType) EnumDescriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{3}
}

// Category of choice being made
type ChoiceCategory int32

const (
	ChoiceCategory_CHOICE_CATEGORY_UNSPECIFIED          ChoiceCategory = 0
	ChoiceCategory_CHOICE_CATEGORY_EQUIPMENT            ChoiceCategory = 1
	ChoiceCategory_CHOICE_CATEGORY_SKILLS               ChoiceCategory = 2  // Skill proficiencies
	ChoiceCategory_CHOICE_CATEGORY_TOOLS                ChoiceCategory = 3  // Tool proficiencies
	ChoiceCategory_CHOICE_CATEGORY_LANGUAGES            ChoiceCategory = 4  // Languages
	ChoiceCategory_CHOICE_CATEGORY_WEAPON_PROFICIENCIES ChoiceCategory = 5  // Weapon proficiencies
	ChoiceCategory_CHOICE_CATEGORY_ARMOR_PROFICIENCIES  ChoiceCategory = 6  // Armor proficiencies
	ChoiceCategory_CHOICE_CATEGORY_SPELLS               ChoiceCategory = 7  // Spells known/prepared
	ChoiceCategory_CHOICE_CATEGORY_FEATS                ChoiceCategory = 8  // Feats
	ChoiceCategory_CHOICE_CATEGORY_ABILITY_SCORES       ChoiceCategory = 9  // Ability score improvements
	ChoiceCategory_CHOICE_CATEGORY_NAME                 ChoiceCategory = 10 // Character name
	ChoiceCategory_CHOICE_CATEGORY_FIGHTING_STYLE       ChoiceCategory = 11 // Fighting style selection
	ChoiceCategory_CHOICE_CATEGORY_RACE                 ChoiceCategory = 12 // Race selection
	ChoiceCategory_CHOICE_CATEGORY_CLASS                ChoiceCategory = 13 // Class selection
	ChoiceCategory_CHOICE_CATEGORY_BACKGROUND           ChoiceCategory = 14 // Background selection
	ChoiceCategory_CHOICE_CATEGORY_CANTRIPS             ChoiceCategory = 15 // Cantrips known
	ChoiceCategory_CHOICE_CATEGORY_EXPERTISE            ChoiceCategory = 16 // Expertise (double proficiency) choices
	ChoiceCategory_CHOICE_CATEGORY_SUBRACE              ChoiceCategory = 17 // Subrace selection (e.g., High Elf, Mountain Dwarf)
	ChoiceCategory_CHOICE_CATEGORY_TRAITS               ChoiceCategory = 18 // Racial or class traits (e.g., Draconic Ancestry)
)

// Enum value maps for ChoiceCategory.
var (
	ChoiceCategory_name = map[int32]string{
		0:  "CHOICE_CATEGORY_UNSPECIFIED",
		1:  "CHOICE_CATEGORY_EQUIPMENT",
		2:  "CHOICE_CATEGORY_SKILLS",
		3:  "CHOICE_CATEGORY_TOOLS",
		4:  "CHOICE_CATEGORY_LANGUAGES",
		5:  "CHOICE_CATEGORY_WEAPON_PROFICIENCIES",
		6:  "CHOICE_CATEGORY_ARMOR_PROFICIENCIES",
		7:  "CHOICE_CATEGORY_SPELLS",
		8:  "CHOICE_CATEGORY_FEATS",
		9:  "CHOICE_CATEGORY_ABILITY_SCORES",
		10: "CHOICE_CATEGORY_NAME",
		11: "CHOICE_CATEGORY_FIGHTING_STYLE",
		12: "CHOICE_CATEGORY_RACE",
		13: "CHOICE_CATEGORY_CLASS",
		14: "CHOICE_CATEGORY_BACKGROUND",
		15: "CHOICE_CATEGORY_CANTRIPS",
		16: "CHOICE_CATEGORY_EXPERTISE",
		17: "CHOICE_CATEGORY_SUBRACE",
		18: "CHOICE_CATEGORY_TRAITS",
	}
	ChoiceCategory_value = map[string]int32{
		"CHOICE_CATEGORY_UNSPECIFIED":          0,
		"CHOICE_CATEGORY_EQUIPMENT":            1,
		"CHOICE_CATEGORY_SKILLS":               2,
		"CHOICE_CATEGORY_TOOLS":                3,
		"CHOICE_CATEGORY_LANGUAGES":            4,
		"CHOICE_CATEGORY_WEAPON_PROFICIENCIES": 5,
		"CHOICE_CATEGORY_ARMOR_PROFICIENCIES":  6,
		"CHOICE_CATEGORY_SPELLS":               7,
		"CHOICE_CATEGORY_FEATS":                8,
		"CHOICE_CATEGORY_ABILITY_SCORES":       9,
		"CHOICE_CATEGORY_NAME":                 10,
		"CHOICE_CATEGORY_FIGHTING_STYLE":       11,
		"CHOICE_CATEGORY_RACE":                 12,
		"CHOICE_CATEGORY_CLASS":                13,
		"CHOICE_CATEGORY_BACKGROUND":           14,
		"CHOICE_CATEGORY_CANTRIPS":             15,
		"CHOICE_CATEGORY_EXPERTISE":            16,
		"CHOICE_CATEGORY_SUBRACE":              17,
		"CHOICE_CATEGORY_TRAITS":               18,
	}
)

func (x ChoiceCategory) Enum() *ChoiceCategory {
	p := new(ChoiceCategory)
	*p = x
	return p
}

func (x ChoiceCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChoiceCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_dnd5e_api_v1alpha1_character_proto_enumTypes[4].Descriptor()
}

func (ChoiceCategory) Type() protoreflect.EnumType {
	return &file_dnd5e_api_v1alpha1_character_proto_enumTypes[4]
}

func (x ChoiceCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChoiceCategory.Descriptor instead.
func (ChoiceCategory) EnumDescriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{4}
}

// Character size category
type Size int32

const (
	Size_SIZE_UNSPECIFIED Size = 0
	Size_SIZE_TINY        Size = 1
	Size_SIZE_SMALL       Size = 2
	Size_SIZE_MEDIUM      Size = 3
	Size_SIZE_LARGE       Size = 4
	Size_SIZE_HUGE        Size = 5
	Size_SIZE_GARGANTUAN  Size = 6
)

// Enum value maps for Size.
var (
	Size_name = map[int32]string{
		0: "SIZE_UNSPECIFIED",
		1: "SIZE_TINY",
		2: "SIZE_SMALL",
		3: "SIZE_MEDIUM",
		4: "SIZE_LARGE",
		5: "SIZE_HUGE",
		6: "SIZE_GARGANTUAN",
	}
	Size_value = map[string]int32{
		"SIZE_UNSPECIFIED": 0,
		"SIZE_TINY":        1,
		"SIZE_SMALL":       2,
		"SIZE_MEDIUM":      3,
		"SIZE_LARGE":       4,
		"SIZE_HUGE":        5,
		"SIZE_GARGANTUAN":  6,
	}
)

func (x Size) Enum() *Size {
	p := new(Size)
	*p = x
	return p
}

func (x Size) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Size) Descriptor() protoreflect.EnumDescriptor {
	return file_dnd5e_api_v1alpha1_character_proto_enumTypes[5].Descriptor()
}

func (Size) Type() protoreflect.EnumType {
	return &file_dnd5e_api_v1alpha1_character_proto_enumTypes[5]
}

func (x Size) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Size.Descriptor instead.
func (Size) EnumDescriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{5}
}

// Types of spell selection systems
type SpellSelectionType int32

const (
	SpellSelectionType_SPELL_SELECTION_TYPE_UNSPECIFIED SpellSelectionType = 0
	SpellSelectionType_SPELL_SELECTION_TYPE_SPELLBOOK   SpellSelectionType = 1 // Wizard spellbook system
	SpellSelectionType_SPELL_SELECTION_TYPE_KNOWN       SpellSelectionType = 2 // Fixed known spells (sorcerer, warlock)
	SpellSelectionType_SPELL_SELECTION_TYPE_PREPARED    SpellSelectionType = 3 // Prepared spells (cleric, druid)
)

// Enum value maps for SpellSelectionType.
var (
	SpellSelectionType_name = map[int32]string{
		0: "SPELL_SELECTION_TYPE_UNSPECIFIED",
		1: "SPELL_SELECTION_TYPE_SPELLBOOK",
		2: "SPELL_SELECTION_TYPE_KNOWN",
		3: "SPELL_SELECTION_TYPE_PREPARED",
	}
	SpellSelectionType_value = map[string]int32{
		"SPELL_SELECTION_TYPE_UNSPECIFIED": 0,
		"SPELL_SELECTION_TYPE_SPELLBOOK":   1,
		"SPELL_SELECTION_TYPE_KNOWN":       2,
		"SPELL_SELECTION_TYPE_PREPARED":    3,
	}
)

func (x SpellSelectionType) Enum() *SpellSelectionType {
	p := new(SpellSelectionType)
	*p = x
	return p
}

func (x SpellSelectionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SpellSelectionType) Descriptor() protoreflect.EnumDescriptor {
	return file_dnd5e_api_v1alpha1_character_proto_enumTypes[6].Descriptor()
}

func (SpellSelectionType) Type() protoreflect.EnumType {
	return &file_dnd5e_api_v1alpha1_character_proto_enumTypes[6]
}

func (x SpellSelectionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SpellSelectionType.Descriptor instead.
func (SpellSelectionType) EnumDescriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{6}
}

// Encumbrance levels
type EncumbranceLevel int32

const (
	EncumbranceLevel_ENCUMBRANCE_LEVEL_UNSPECIFIED        EncumbranceLevel = 0
	EncumbranceLevel_ENCUMBRANCE_LEVEL_UNENCUMBERED       EncumbranceLevel = 1 // Under carrying capacity
	EncumbranceLevel_ENCUMBRANCE_LEVEL_ENCUMBERED         EncumbranceLevel = 2 // Speed reduced by 10 feet
	EncumbranceLevel_ENCUMBRANCE_LEVEL_HEAVILY_ENCUMBERED EncumbranceLevel = 3 // Speed reduced by 20 feet, disadvantage on ability checks
	EncumbranceLevel_ENCUMBRANCE_LEVEL_IMMOBILIZED        EncumbranceLevel = 4 // Cannot move
)

// Enum value maps for EncumbranceLevel.
var (
	EncumbranceLevel_name = map[int32]string{
		0: "ENCUMBRANCE_LEVEL_UNSPECIFIED",
		1: "ENCUMBRANCE_LEVEL_UNENCUMBERED",
		2: "ENCUMBRANCE_LEVEL_ENCUMBERED",
		3: "ENCUMBRANCE_LEVEL_HEAVILY_ENCUMBERED",
		4: "ENCUMBRANCE_LEVEL_IMMOBILIZED",
	}
	EncumbranceLevel_value = map[string]int32{
		"ENCUMBRANCE_LEVEL_UNSPECIFIED":        0,
		"ENCUMBRANCE_LEVEL_UNENCUMBERED":       1,
		"ENCUMBRANCE_LEVEL_ENCUMBERED":         2,
		"ENCUMBRANCE_LEVEL_HEAVILY_ENCUMBERED": 3,
		"ENCUMBRANCE_LEVEL_IMMOBILIZED":        4,
	}
)

func (x EncumbranceLevel) Enum() *EncumbranceLevel {
	p := new(EncumbranceLevel)
	*p = x
	return p
}

func (x EncumbranceLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EncumbranceLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_dnd5e_api_v1alpha1_character_proto_enumTypes[7].Descriptor()
}

func (EncumbranceLevel) Type() protoreflect.EnumType {
	return &file_dnd5e_api_v1alpha1_character_proto_enumTypes[7]
}

func (x EncumbranceLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EncumbranceLevel.Descriptor instead.
func (EncumbranceLevel) EnumDescriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{7}
}

// Source of a choice during character creation
type ChoiceSource int32

const (
	ChoiceSource_CHOICE_SOURCE_UNSPECIFIED ChoiceSource = 0
	ChoiceSource_CHOICE_SOURCE_PLAYER      ChoiceSource = 1 // Direct player choice
	ChoiceSource_CHOICE_SOURCE_RACE        ChoiceSource = 2
	ChoiceSource_CHOICE_SOURCE_SUBRACE     ChoiceSource = 3
	ChoiceSource_CHOICE_SOURCE_CLASS       ChoiceSource = 4
	ChoiceSource_CHOICE_SOURCE_BACKGROUND  ChoiceSource = 5
	ChoiceSource_CHOICE_SOURCE_LEVEL_UP    ChoiceSource = 6 // Choices made during level progression
)

// Enum value maps for ChoiceSource.
var (
	ChoiceSource_name = map[int32]string{
		0: "CHOICE_SOURCE_UNSPECIFIED",
		1: "CHOICE_SOURCE_PLAYER",
		2: "CHOICE_SOURCE_RACE",
		3: "CHOICE_SOURCE_SUBRACE",
		4: "CHOICE_SOURCE_CLASS",
		5: "CHOICE_SOURCE_BACKGROUND",
		6: "CHOICE_SOURCE_LEVEL_UP",
	}
	ChoiceSource_value = map[string]int32{
		"CHOICE_SOURCE_UNSPECIFIED": 0,
		"CHOICE_SOURCE_PLAYER":      1,
		"CHOICE_SOURCE_RACE":        2,
		"CHOICE_SOURCE_SUBRACE":     3,
		"CHOICE_SOURCE_CLASS":       4,
		"CHOICE_SOURCE_BACKGROUND":  5,
		"CHOICE_SOURCE_LEVEL_UP":    6,
	}
)

func (x ChoiceSource) Enum() *ChoiceSource {
	p := new(ChoiceSource)
	*p = x
	return p
}

func (x ChoiceSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChoiceSource) Descriptor() protoreflect.EnumDescriptor {
	return file_dnd5e_api_v1alpha1_character_proto_enumTypes[8].Descriptor()
}

func (ChoiceSource) Type() protoreflect.EnumType {
	return &file_dnd5e_api_v1alpha1_character_proto_enumTypes[8]
}

func (x ChoiceSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChoiceSource.Descriptor instead.
func (ChoiceSource) EnumDescriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{8}
}

// Equipment slot types
type EquipmentSlot int32

const (
	EquipmentSlot_EQUIPMENT_SLOT_UNSPECIFIED EquipmentSlot = 0
	EquipmentSlot_EQUIPMENT_SLOT_MAIN_HAND   EquipmentSlot = 1
	EquipmentSlot_EQUIPMENT_SLOT_OFF_HAND    EquipmentSlot = 2
	EquipmentSlot_EQUIPMENT_SLOT_ARMOR       EquipmentSlot = 3
	EquipmentSlot_EQUIPMENT_SLOT_HELMET      EquipmentSlot = 4
	EquipmentSlot_EQUIPMENT_SLOT_BOOTS       EquipmentSlot = 5
	EquipmentSlot_EQUIPMENT_SLOT_GLOVES      EquipmentSlot = 6
	EquipmentSlot_EQUIPMENT_SLOT_CLOAK       EquipmentSlot = 7
	EquipmentSlot_EQUIPMENT_SLOT_AMULET      EquipmentSlot = 8
	EquipmentSlot_EQUIPMENT_SLOT_RING_1      EquipmentSlot = 9
	EquipmentSlot_EQUIPMENT_SLOT_RING_2      EquipmentSlot = 10
	EquipmentSlot_EQUIPMENT_SLOT_BELT        EquipmentSlot = 11
)

// Enum value maps for EquipmentSlot.
var (
	EquipmentSlot_name = map[int32]string{
		0:  "EQUIPMENT_SLOT_UNSPECIFIED",
		1:  "EQUIPMENT_SLOT_MAIN_HAND",
		2:  "EQUIPMENT_SLOT_OFF_HAND",
		3:  "EQUIPMENT_SLOT_ARMOR",
		4:  "EQUIPMENT_SLOT_HELMET",
		5:  "EQUIPMENT_SLOT_BOOTS",
		6:  "EQUIPMENT_SLOT_GLOVES",
		7:  "EQUIPMENT_SLOT_CLOAK",
		8:  "EQUIPMENT_SLOT_AMULET",
		9:  "EQUIPMENT_SLOT_RING_1",
		10: "EQUIPMENT_SLOT_RING_2",
		11: "EQUIPMENT_SLOT_BELT",
	}
	EquipmentSlot_value = map[string]int32{
		"EQUIPMENT_SLOT_UNSPECIFIED": 0,
		"EQUIPMENT_SLOT_MAIN_HAND":   1,
		"EQUIPMENT_SLOT_OFF_HAND":    2,
		"EQUIPMENT_SLOT_ARMOR":       3,
		"EQUIPMENT_SLOT_HELMET":      4,
		"EQUIPMENT_SLOT_BOOTS":       5,
		"EQUIPMENT_SLOT_GLOVES":      6,
		"EQUIPMENT_SLOT_CLOAK":       7,
		"EQUIPMENT_SLOT_AMULET":      8,
		"EQUIPMENT_SLOT_RING_1":      9,
		"EQUIPMENT_SLOT_RING_2":      10,
		"EQUIPMENT_SLOT_BELT":        11,
	}
)

func (x EquipmentSlot) Enum() *EquipmentSlot {
	p := new(EquipmentSlot)
	*p = x
	return p
}

func (x EquipmentSlot) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EquipmentSlot) Descriptor() protoreflect.EnumDescriptor {
	return file_dnd5e_api_v1alpha1_character_proto_enumTypes[9].Descriptor()
}

func (EquipmentSlot) Type() protoreflect.EnumType {
	return &file_dnd5e_api_v1alpha1_character_proto_enumTypes[9]
}

func (x EquipmentSlot) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EquipmentSlot.Descriptor instead.
func (EquipmentSlot) EnumDescriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{9}
}

// Character feature (class features, racial traits, etc)
type CharacterFeature struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Source        string                 `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"` // "class", "race", "background", etc
	Level         int32                  `protobuf:"varint,5,opt,name=level,proto3" json:"level,omitempty"`  // Level when gained (0 for racial/background)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CharacterFeature) Reset() {
	*x = CharacterFeature{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CharacterFeature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterFeature) ProtoMessage() {}

func (x *CharacterFeature) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterFeature.ProtoReflect.Descriptor instead.
func (*CharacterFeature) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{0}
}

func (x *CharacterFeature) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CharacterFeature) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CharacterFeature) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CharacterFeature) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *CharacterFeature) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

// Class resource (rage uses, ki points, etc)
type ClassResource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          ClassResourceType      `protobuf:"varint,1,opt,name=type,proto3,enum=dnd5e.api.v1alpha1.ClassResourceType" json:"type,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // Display name
	Current       int32                  `protobuf:"varint,3,opt,name=current,proto3" json:"current,omitempty"`
	Maximum       int32                  `protobuf:"varint,4,opt,name=maximum,proto3" json:"maximum,omitempty"`
	Recharge      RechargeType           `protobuf:"varint,5,opt,name=recharge,proto3,enum=dnd5e.api.v1alpha1.RechargeType" json:"recharge,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClassResource) Reset() {
	*x = ClassResource{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClassResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassResource) ProtoMessage() {}

func (x *ClassResource) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassResource.ProtoReflect.Descriptor instead.
func (*ClassResource) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{1}
}

func (x *ClassResource) GetType() ClassResourceType {
	if x != nil {
		return x.Type
	}
	return ClassResourceType_CLASS_RESOURCE_TYPE_UNSPECIFIED
}

func (x *ClassResource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClassResource) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ClassResource) GetMaximum() int32 {
	if x != nil {
		return x.Maximum
	}
	return 0
}

func (x *ClassResource) GetRecharge() RechargeType {
	if x != nil {
		return x.Recharge
	}
	return RechargeType_RECHARGE_TYPE_UNSPECIFIED
}

// Spell slots by level
type SpellSlots struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Level_1       int32                  `protobuf:"varint,1,opt,name=level_1,json=level1,proto3" json:"level_1,omitempty"`
	Level_2       int32                  `protobuf:"varint,2,opt,name=level_2,json=level2,proto3" json:"level_2,omitempty"`
	Level_3       int32                  `protobuf:"varint,3,opt,name=level_3,json=level3,proto3" json:"level_3,omitempty"`
	Level_4       int32                  `protobuf:"varint,4,opt,name=level_4,json=level4,proto3" json:"level_4,omitempty"`
	Level_5       int32                  `protobuf:"varint,5,opt,name=level_5,json=level5,proto3" json:"level_5,omitempty"`
	Level_6       int32                  `protobuf:"varint,6,opt,name=level_6,json=level6,proto3" json:"level_6,omitempty"`
	Level_7       int32                  `protobuf:"varint,7,opt,name=level_7,json=level7,proto3" json:"level_7,omitempty"`
	Level_8       int32                  `protobuf:"varint,8,opt,name=level_8,json=level8,proto3" json:"level_8,omitempty"`
	Level_9       int32                  `protobuf:"varint,9,opt,name=level_9,json=level9,proto3" json:"level_9,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpellSlots) Reset() {
	*x = SpellSlots{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpellSlots) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpellSlots) ProtoMessage() {}

func (x *SpellSlots) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpellSlots.ProtoReflect.Descriptor instead.
func (*SpellSlots) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{2}
}

func (x *SpellSlots) GetLevel_1() int32 {
	if x != nil {
		return x.Level_1
	}
	return 0
}

func (x *SpellSlots) GetLevel_2() int32 {
	if x != nil {
		return x.Level_2
	}
	return 0
}

func (x *SpellSlots) GetLevel_3() int32 {
	if x != nil {
		return x.Level_3
	}
	return 0
}

func (x *SpellSlots) GetLevel_4() int32 {
	if x != nil {
		return x.Level_4
	}
	return 0
}

func (x *SpellSlots) GetLevel_5() int32 {
	if x != nil {
		return x.Level_5
	}
	return 0
}

func (x *SpellSlots) GetLevel_6() int32 {
	if x != nil {
		return x.Level_6
	}
	return 0
}

func (x *SpellSlots) GetLevel_7() int32 {
	if x != nil {
		return x.Level_7
	}
	return 0
}

func (x *SpellSlots) GetLevel_8() int32 {
	if x != nil {
		return x.Level_8
	}
	return 0
}

func (x *SpellSlots) GetLevel_9() int32 {
	if x != nil {
		return x.Level_9
	}
	return 0
}

// Ability scores for a character
type AbilityScores struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Strength score (3-18 before racial modifiers)
	Strength int32 `protobuf:"varint,1,opt,name=strength,proto3" json:"strength,omitempty"`
	// Dexterity score (3-18 before racial modifiers)
	Dexterity int32 `protobuf:"varint,2,opt,name=dexterity,proto3" json:"dexterity,omitempty"`
	// Constitution score (3-18 before racial modifiers)
	Constitution int32 `protobuf:"varint,3,opt,name=constitution,proto3" json:"constitution,omitempty"`
	// Intelligence score (3-18 before racial modifiers)
	Intelligence int32 `protobuf:"varint,4,opt,name=intelligence,proto3" json:"intelligence,omitempty"`
	// Wisdom score (3-18 before racial modifiers)
	Wisdom int32 `protobuf:"varint,5,opt,name=wisdom,proto3" json:"wisdom,omitempty"`
	// Charisma score (3-18 before racial modifiers)
	Charisma      int32 `protobuf:"varint,6,opt,name=charisma,proto3" json:"charisma,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AbilityScores) Reset() {
	*x = AbilityScores{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AbilityScores) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbilityScores) ProtoMessage() {}

func (x *AbilityScores) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbilityScores.ProtoReflect.Descriptor instead.
func (*AbilityScores) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{3}
}

func (x *AbilityScores) GetStrength() int32 {
	if x != nil {
		return x.Strength
	}
	return 0
}

func (x *AbilityScores) GetDexterity() int32 {
	if x != nil {
		return x.Dexterity
	}
	return 0
}

func (x *AbilityScores) GetConstitution() int32 {
	if x != nil {
		return x.Constitution
	}
	return 0
}

func (x *AbilityScores) GetIntelligence() int32 {
	if x != nil {
		return x.Intelligence
	}
	return 0
}

func (x *AbilityScores) GetWisdom() int32 {
	if x != nil {
		return x.Wisdom
	}
	return 0
}

func (x *AbilityScores) GetCharisma() int32 {
	if x != nil {
		return x.Charisma
	}
	return 0
}

// A complete D&D 5e character
type Character struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Character name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Character level (starts at 1)
	Level int32 `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	// Experience points
	ExperiencePoints int32 `protobuf:"varint,4,opt,name=experience_points,json=experiencePoints,proto3" json:"experience_points,omitempty"`
	// Character race
	Race Race `protobuf:"varint,5,opt,name=race,proto3,enum=dnd5e.api.v1alpha1.Race" json:"race,omitempty"`
	// Character subrace if applicable
	Subrace Subrace `protobuf:"varint,6,opt,name=subrace,proto3,enum=dnd5e.api.v1alpha1.Subrace" json:"subrace,omitempty"`
	// Character class
	Class Class `protobuf:"varint,7,opt,name=class,proto3,enum=dnd5e.api.v1alpha1.Class" json:"class,omitempty"`
	// Character background
	Background Background `protobuf:"varint,8,opt,name=background,proto3,enum=dnd5e.api.v1alpha1.Background" json:"background,omitempty"`
	// Character alignment
	Alignment Alignment `protobuf:"varint,9,opt,name=alignment,proto3,enum=dnd5e.api.v1alpha1.Alignment" json:"alignment,omitempty"`
	// Final ability scores (with racial modifiers applied)
	AbilityScores *AbilityScores `protobuf:"bytes,10,opt,name=ability_scores,json=abilityScores,proto3" json:"ability_scores,omitempty"`
	// Ability modifiers (calculated from scores)
	AbilityModifiers *AbilityModifiers `protobuf:"bytes,11,opt,name=ability_modifiers,json=abilityModifiers,proto3" json:"ability_modifiers,omitempty"`
	// Calculated combat values
	CombatStats *CombatStats `protobuf:"bytes,12,opt,name=combat_stats,json=combatStats,proto3" json:"combat_stats,omitempty"`
	// Proficiencies
	Proficiencies *Proficiencies `protobuf:"bytes,13,opt,name=proficiencies,proto3" json:"proficiencies,omitempty"`
	// Known languages
	Languages []Language `protobuf:"varint,14,rep,packed,name=languages,proto3,enum=dnd5e.api.v1alpha1.Language" json:"languages,omitempty"`
	// Current hit points
	CurrentHitPoints int32 `protobuf:"varint,15,opt,name=current_hit_points,json=currentHitPoints,proto3" json:"current_hit_points,omitempty"`
	// Temporary hit points
	TemporaryHitPoints int32 `protobuf:"varint,16,opt,name=temporary_hit_points,json=temporaryHitPoints,proto3" json:"temporary_hit_points,omitempty"`
	// Session association if any
	SessionId string `protobuf:"bytes,17,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Metadata
	Metadata *CharacterMetadata `protobuf:"bytes,18,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Equipment slots (weapons, armor, etc.)
	EquipmentSlots *EquipmentSlots `protobuf:"bytes,19,opt,name=equipment_slots,json=equipmentSlots,proto3" json:"equipment_slots,omitempty"`
	// Inventory (unequipped items)
	Inventory []*InventoryItem `protobuf:"bytes,20,rep,name=inventory,proto3" json:"inventory,omitempty"`
	// Carrying capacity and encumbrance
	Encumbrance *EncumbranceInfo `protobuf:"bytes,21,opt,name=encumbrance,proto3" json:"encumbrance,omitempty"`
	// Class features and choices
	Features       []*CharacterFeature `protobuf:"bytes,22,rep,name=features,proto3" json:"features,omitempty"`
	FightingStyles []string            `protobuf:"bytes,23,rep,name=fighting_styles,json=fightingStyles,proto3" json:"fighting_styles,omitempty"`
	// Racial traits
	RacialTraits []*CharacterFeature `protobuf:"bytes,24,rep,name=racial_traits,json=racialTraits,proto3" json:"racial_traits,omitempty"`
	// Background feature
	BackgroundFeature *CharacterFeature `protobuf:"bytes,25,opt,name=background_feature,json=backgroundFeature,proto3" json:"background_feature,omitempty"`
	// Class resources (rage uses, ki points, etc)
	ClassResources []*ClassResource `protobuf:"bytes,26,rep,name=class_resources,json=classResources,proto3" json:"class_resources,omitempty"`
	// Spell slots for casters
	SpellSlots    *SpellSlots `protobuf:"bytes,27,opt,name=spell_slots,json=spellSlots,proto3" json:"spell_slots,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Character) Reset() {
	*x = Character{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Character) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Character) ProtoMessage() {}

func (x *Character) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Character.ProtoReflect.Descriptor instead.
func (*Character) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{4}
}

func (x *Character) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Character) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Character) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Character) GetExperiencePoints() int32 {
	if x != nil {
		return x.ExperiencePoints
	}
	return 0
}

func (x *Character) GetRace() Race {
	if x != nil {
		return x.Race
	}
	return Race_RACE_UNSPECIFIED
}

func (x *Character) GetSubrace() Subrace {
	if x != nil {
		return x.Subrace
	}
	return Subrace_SUBRACE_UNSPECIFIED
}

func (x *Character) GetClass() Class {
	if x != nil {
		return x.Class
	}
	return Class_CLASS_UNSPECIFIED
}

func (x *Character) GetBackground() Background {
	if x != nil {
		return x.Background
	}
	return Background_BACKGROUND_UNSPECIFIED
}

func (x *Character) GetAlignment() Alignment {
	if x != nil {
		return x.Alignment
	}
	return Alignment_ALIGNMENT_UNSPECIFIED
}

func (x *Character) GetAbilityScores() *AbilityScores {
	if x != nil {
		return x.AbilityScores
	}
	return nil
}

func (x *Character) GetAbilityModifiers() *AbilityModifiers {
	if x != nil {
		return x.AbilityModifiers
	}
	return nil
}

func (x *Character) GetCombatStats() *CombatStats {
	if x != nil {
		return x.CombatStats
	}
	return nil
}

func (x *Character) GetProficiencies() *Proficiencies {
	if x != nil {
		return x.Proficiencies
	}
	return nil
}

func (x *Character) GetLanguages() []Language {
	if x != nil {
		return x.Languages
	}
	return nil
}

func (x *Character) GetCurrentHitPoints() int32 {
	if x != nil {
		return x.CurrentHitPoints
	}
	return 0
}

func (x *Character) GetTemporaryHitPoints() int32 {
	if x != nil {
		return x.TemporaryHitPoints
	}
	return 0
}

func (x *Character) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *Character) GetMetadata() *CharacterMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Character) GetEquipmentSlots() *EquipmentSlots {
	if x != nil {
		return x.EquipmentSlots
	}
	return nil
}

func (x *Character) GetInventory() []*InventoryItem {
	if x != nil {
		return x.Inventory
	}
	return nil
}

func (x *Character) GetEncumbrance() *EncumbranceInfo {
	if x != nil {
		return x.Encumbrance
	}
	return nil
}

func (x *Character) GetFeatures() []*CharacterFeature {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *Character) GetFightingStyles() []string {
	if x != nil {
		return x.FightingStyles
	}
	return nil
}

func (x *Character) GetRacialTraits() []*CharacterFeature {
	if x != nil {
		return x.RacialTraits
	}
	return nil
}

func (x *Character) GetBackgroundFeature() *CharacterFeature {
	if x != nil {
		return x.BackgroundFeature
	}
	return nil
}

func (x *Character) GetClassResources() []*ClassResource {
	if x != nil {
		return x.ClassResources
	}
	return nil
}

func (x *Character) GetSpellSlots() *SpellSlots {
	if x != nil {
		return x.SpellSlots
	}
	return nil
}

// Ability modifiers calculated from scores
type AbilityModifiers struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Strength      int32                  `protobuf:"varint,1,opt,name=strength,proto3" json:"strength,omitempty"`
	Dexterity     int32                  `protobuf:"varint,2,opt,name=dexterity,proto3" json:"dexterity,omitempty"`
	Constitution  int32                  `protobuf:"varint,3,opt,name=constitution,proto3" json:"constitution,omitempty"`
	Intelligence  int32                  `protobuf:"varint,4,opt,name=intelligence,proto3" json:"intelligence,omitempty"`
	Wisdom        int32                  `protobuf:"varint,5,opt,name=wisdom,proto3" json:"wisdom,omitempty"`
	Charisma      int32                  `protobuf:"varint,6,opt,name=charisma,proto3" json:"charisma,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AbilityModifiers) Reset() {
	*x = AbilityModifiers{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AbilityModifiers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbilityModifiers) ProtoMessage() {}

func (x *AbilityModifiers) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbilityModifiers.ProtoReflect.Descriptor instead.
func (*AbilityModifiers) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{5}
}

func (x *AbilityModifiers) GetStrength() int32 {
	if x != nil {
		return x.Strength
	}
	return 0
}

func (x *AbilityModifiers) GetDexterity() int32 {
	if x != nil {
		return x.Dexterity
	}
	return 0
}

func (x *AbilityModifiers) GetConstitution() int32 {
	if x != nil {
		return x.Constitution
	}
	return 0
}

func (x *AbilityModifiers) GetIntelligence() int32 {
	if x != nil {
		return x.Intelligence
	}
	return 0
}

func (x *AbilityModifiers) GetWisdom() int32 {
	if x != nil {
		return x.Wisdom
	}
	return 0
}

func (x *AbilityModifiers) GetCharisma() int32 {
	if x != nil {
		return x.Charisma
	}
	return 0
}

// Combat-related statistics
type CombatStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Maximum hit points
	HitPointMaximum int32 `protobuf:"varint,1,opt,name=hit_point_maximum,json=hitPointMaximum,proto3" json:"hit_point_maximum,omitempty"`
	// Armor class
	ArmorClass int32 `protobuf:"varint,2,opt,name=armor_class,json=armorClass,proto3" json:"armor_class,omitempty"`
	// Initiative modifier
	Initiative int32 `protobuf:"varint,3,opt,name=initiative,proto3" json:"initiative,omitempty"`
	// Base movement speed in feet
	Speed int32 `protobuf:"varint,4,opt,name=speed,proto3" json:"speed,omitempty"`
	// Proficiency bonus
	ProficiencyBonus int32 `protobuf:"varint,5,opt,name=proficiency_bonus,json=proficiencyBonus,proto3" json:"proficiency_bonus,omitempty"`
	// Hit dice (e.g., 1d10 for fighter)
	HitDice       string `protobuf:"bytes,6,opt,name=hit_dice,json=hitDice,proto3" json:"hit_dice,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CombatStats) Reset() {
	*x = CombatStats{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CombatStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombatStats) ProtoMessage() {}

func (x *CombatStats) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombatStats.ProtoReflect.Descriptor instead.
func (*CombatStats) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{6}
}

func (x *CombatStats) GetHitPointMaximum() int32 {
	if x != nil {
		return x.HitPointMaximum
	}
	return 0
}

func (x *CombatStats) GetArmorClass() int32 {
	if x != nil {
		return x.ArmorClass
	}
	return 0
}

func (x *CombatStats) GetInitiative() int32 {
	if x != nil {
		return x.Initiative
	}
	return 0
}

func (x *CombatStats) GetSpeed() int32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *CombatStats) GetProficiencyBonus() int32 {
	if x != nil {
		return x.ProficiencyBonus
	}
	return 0
}

func (x *CombatStats) GetHitDice() string {
	if x != nil {
		return x.HitDice
	}
	return ""
}

// Character proficiencies
type Proficiencies struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Skill proficiencies
	Skills []Skill `protobuf:"varint,1,rep,packed,name=skills,proto3,enum=dnd5e.api.v1alpha1.Skill" json:"skills,omitempty"`
	// Saving throw proficiencies
	SavingThrows []Ability `protobuf:"varint,2,rep,packed,name=saving_throws,json=savingThrows,proto3,enum=dnd5e.api.v1alpha1.Ability" json:"saving_throws,omitempty"`
	// Armor proficiencies (as strings for now)
	Armor []string `protobuf:"bytes,3,rep,name=armor,proto3" json:"armor,omitempty"`
	// Weapon proficiencies (as strings for now)
	Weapons []string `protobuf:"bytes,4,rep,name=weapons,proto3" json:"weapons,omitempty"`
	// Tool proficiencies (as strings for now)
	Tools         []string `protobuf:"bytes,5,rep,name=tools,proto3" json:"tools,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Proficiencies) Reset() {
	*x = Proficiencies{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Proficiencies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Proficiencies) ProtoMessage() {}

func (x *Proficiencies) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Proficiencies.ProtoReflect.Descriptor instead.
func (*Proficiencies) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{7}
}

func (x *Proficiencies) GetSkills() []Skill {
	if x != nil {
		return x.Skills
	}
	return nil
}

func (x *Proficiencies) GetSavingThrows() []Ability {
	if x != nil {
		return x.SavingThrows
	}
	return nil
}

func (x *Proficiencies) GetArmor() []string {
	if x != nil {
		return x.Armor
	}
	return nil
}

func (x *Proficiencies) GetWeapons() []string {
	if x != nil {
		return x.Weapons
	}
	return nil
}

func (x *Proficiencies) GetTools() []string {
	if x != nil {
		return x.Tools
	}
	return nil
}

// Character metadata
type CharacterMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// When the character was created
	CreatedAt int64 `protobuf:"varint,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// When the character was last updated
	UpdatedAt int64 `protobuf:"varint,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Player/user who owns this character
	PlayerId      string `protobuf:"bytes,3,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CharacterMetadata) Reset() {
	*x = CharacterMetadata{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CharacterMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterMetadata) ProtoMessage() {}

func (x *CharacterMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterMetadata.ProtoReflect.Descriptor instead.
func (*CharacterMetadata) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{8}
}

func (x *CharacterMetadata) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *CharacterMetadata) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *CharacterMetadata) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

// Request to get a character
type GetCharacterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The character ID to retrieve
	CharacterId   string `protobuf:"bytes,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCharacterRequest) Reset() {
	*x = GetCharacterRequest{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCharacterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCharacterRequest) ProtoMessage() {}

func (x *GetCharacterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCharacterRequest.ProtoReflect.Descriptor instead.
func (*GetCharacterRequest) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{9}
}

func (x *GetCharacterRequest) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

// Response containing a character
type GetCharacterResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The requested character
	Character     *Character `protobuf:"bytes,1,opt,name=character,proto3" json:"character,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCharacterResponse) Reset() {
	*x = GetCharacterResponse{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCharacterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCharacterResponse) ProtoMessage() {}

func (x *GetCharacterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCharacterResponse.ProtoReflect.Descriptor instead.
func (*GetCharacterResponse) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{10}
}

func (x *GetCharacterResponse) GetCharacter() *Character {
	if x != nil {
		return x.Character
	}
	return nil
}

// Request to list characters
type ListCharactersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Maximum number of characters to return (1-100, default 20)
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token from previous response
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Filter by session ID
	SessionId string `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Filter by player ID
	PlayerId      string `protobuf:"bytes,4,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCharactersRequest) Reset() {
	*x = ListCharactersRequest{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCharactersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCharactersRequest) ProtoMessage() {}

func (x *ListCharactersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCharactersRequest.ProtoReflect.Descriptor instead.
func (*ListCharactersRequest) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{11}
}

func (x *ListCharactersRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListCharactersRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListCharactersRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ListCharactersRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

// Response containing a list of characters
type ListCharactersResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of characters
	Characters []*Character `protobuf:"bytes,1,rep,name=characters,proto3" json:"characters,omitempty"`
	// Token for next page if available
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// Total number of characters matching filters
	TotalSize     int32 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCharactersResponse) Reset() {
	*x = ListCharactersResponse{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCharactersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCharactersResponse) ProtoMessage() {}

func (x *ListCharactersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCharactersResponse.ProtoReflect.Descriptor instead.
func (*ListCharactersResponse) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{12}
}

func (x *ListCharactersResponse) GetCharacters() []*Character {
	if x != nil {
		return x.Characters
	}
	return nil
}

func (x *ListCharactersResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListCharactersResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

// Request to update a character
type UpdateCharacterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The character to update (ID required)
	Character *Character `protobuf:"bytes,1,opt,name=character,proto3" json:"character,omitempty"`
	// Field mask to specify which fields to update
	// For now, we'll allow updating specific fields
	UpdateMask    []string `protobuf:"bytes,2,rep,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCharacterRequest) Reset() {
	*x = UpdateCharacterRequest{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCharacterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCharacterRequest) ProtoMessage() {}

func (x *UpdateCharacterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCharacterRequest.ProtoReflect.Descriptor instead.
func (*UpdateCharacterRequest) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateCharacterRequest) GetCharacter() *Character {
	if x != nil {
		return x.Character
	}
	return nil
}

func (x *UpdateCharacterRequest) GetUpdateMask() []string {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// Response from character update
type UpdateCharacterResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The updated character
	Character     *Character `protobuf:"bytes,1,opt,name=character,proto3" json:"character,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCharacterResponse) Reset() {
	*x = UpdateCharacterResponse{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCharacterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCharacterResponse) ProtoMessage() {}

func (x *UpdateCharacterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCharacterResponse.ProtoReflect.Descriptor instead.
func (*UpdateCharacterResponse) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateCharacterResponse) GetCharacter() *Character {
	if x != nil {
		return x.Character
	}
	return nil
}

// Request to delete a character
type DeleteCharacterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The character ID to delete
	CharacterId   string `protobuf:"bytes,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCharacterRequest) Reset() {
	*x = DeleteCharacterRequest{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCharacterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCharacterRequest) ProtoMessage() {}

func (x *DeleteCharacterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCharacterRequest.ProtoReflect.Descriptor instead.
func (*DeleteCharacterRequest) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteCharacterRequest) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

// Response from character deletion
type DeleteCharacterResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Confirmation message
	Message       string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCharacterResponse) Reset() {
	*x = DeleteCharacterResponse{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCharacterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCharacterResponse) ProtoMessage() {}

func (x *DeleteCharacterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCharacterResponse.ProtoReflect.Descriptor instead.
func (*DeleteCharacterResponse) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteCharacterResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Character draft data for storage with optional fields
type CharacterDraftData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Player creating this character
	PlayerId string `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	// Session if part of one
	SessionId string `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Identity fields - stored as enums
	Name          string         `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Race          Race           `protobuf:"varint,5,opt,name=race,proto3,enum=dnd5e.api.v1alpha1.Race" json:"race,omitempty"`
	Subrace       Subrace        `protobuf:"varint,6,opt,name=subrace,proto3,enum=dnd5e.api.v1alpha1.Subrace" json:"subrace,omitempty"`
	Class         Class          `protobuf:"varint,7,opt,name=class,proto3,enum=dnd5e.api.v1alpha1.Class" json:"class,omitempty"`
	Background    Background     `protobuf:"varint,8,opt,name=background,proto3,enum=dnd5e.api.v1alpha1.Background" json:"background,omitempty"`
	AbilityScores *AbilityScores `protobuf:"bytes,9,opt,name=ability_scores,json=abilityScores,proto3" json:"ability_scores,omitempty"`
	Alignment     Alignment      `protobuf:"varint,10,opt,name=alignment,proto3,enum=dnd5e.api.v1alpha1.Alignment" json:"alignment,omitempty"`
	// Store player choices instead of computed state
	Choices []*ChoiceData `protobuf:"bytes,11,rep,name=choices,proto3" json:"choices,omitempty"`
	// Track what steps are complete
	Progress *CreationProgress `protobuf:"bytes,12,opt,name=progress,proto3" json:"progress,omitempty"`
	// When this draft expires (e.g., 30 days)
	ExpiresAt int64 `protobuf:"varint,13,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// Timestamps
	CreatedAt int64 `protobuf:"varint,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64 `protobuf:"varint,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Metadata
	Metadata      *DraftMetadata `protobuf:"bytes,16,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Subclass      Subclass       `protobuf:"varint,17,opt,name=subclass,proto3,enum=dnd5e.api.v1alpha1.Subclass" json:"subclass,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CharacterDraftData) Reset() {
	*x = CharacterDraftData{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CharacterDraftData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterDraftData) ProtoMessage() {}

func (x *CharacterDraftData) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterDraftData.ProtoReflect.Descriptor instead.
func (*CharacterDraftData) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{17}
}

func (x *CharacterDraftData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CharacterDraftData) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *CharacterDraftData) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *CharacterDraftData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CharacterDraftData) GetRace() Race {
	if x != nil {
		return x.Race
	}
	return Race_RACE_UNSPECIFIED
}

func (x *CharacterDraftData) GetSubrace() Subrace {
	if x != nil {
		return x.Subrace
	}
	return Subrace_SUBRACE_UNSPECIFIED
}

func (x *CharacterDraftData) GetClass() Class {
	if x != nil {
		return x.Class
	}
	return Class_CLASS_UNSPECIFIED
}

func (x *CharacterDraftData) GetBackground() Background {
	if x != nil {
		return x.Background
	}
	return Background_BACKGROUND_UNSPECIFIED
}

func (x *CharacterDraftData) GetAbilityScores() *AbilityScores {
	if x != nil {
		return x.AbilityScores
	}
	return nil
}

func (x *CharacterDraftData) GetAlignment() Alignment {
	if x != nil {
		return x.Alignment
	}
	return Alignment_ALIGNMENT_UNSPECIFIED
}

func (x *CharacterDraftData) GetChoices() []*ChoiceData {
	if x != nil {
		return x.Choices
	}
	return nil
}

func (x *CharacterDraftData) GetProgress() *CreationProgress {
	if x != nil {
		return x.Progress
	}
	return nil
}

func (x *CharacterDraftData) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *CharacterDraftData) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *CharacterDraftData) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *CharacterDraftData) GetMetadata() *DraftMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CharacterDraftData) GetSubclass() Subclass {
	if x != nil {
		return x.Subclass
	}
	return Subclass_SUBCLASS_UNSPECIFIED
}

// Tracks which parts of character creation are complete
type CreationProgress struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	HasName          bool                   `protobuf:"varint,1,opt,name=has_name,json=hasName,proto3" json:"has_name,omitempty"`
	HasRace          bool                   `protobuf:"varint,2,opt,name=has_race,json=hasRace,proto3" json:"has_race,omitempty"`
	HasClass         bool                   `protobuf:"varint,3,opt,name=has_class,json=hasClass,proto3" json:"has_class,omitempty"`
	HasBackground    bool                   `protobuf:"varint,4,opt,name=has_background,json=hasBackground,proto3" json:"has_background,omitempty"`
	HasAbilityScores bool                   `protobuf:"varint,5,opt,name=has_ability_scores,json=hasAbilityScores,proto3" json:"has_ability_scores,omitempty"`
	HasSkills        bool                   `protobuf:"varint,6,opt,name=has_skills,json=hasSkills,proto3" json:"has_skills,omitempty"`
	HasLanguages     bool                   `protobuf:"varint,7,opt,name=has_languages,json=hasLanguages,proto3" json:"has_languages,omitempty"`
	// Overall completion percentage
	CompletionPercentage int32 `protobuf:"varint,8,opt,name=completion_percentage,json=completionPercentage,proto3" json:"completion_percentage,omitempty"`
	// What step they're currently on
	CurrentStep   CreationStep `protobuf:"varint,9,opt,name=current_step,json=currentStep,proto3,enum=dnd5e.api.v1alpha1.CreationStep" json:"current_step,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreationProgress) Reset() {
	*x = CreationProgress{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreationProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreationProgress) ProtoMessage() {}

func (x *CreationProgress) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreationProgress.ProtoReflect.Descriptor instead.
func (*CreationProgress) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{18}
}

func (x *CreationProgress) GetHasName() bool {
	if x != nil {
		return x.HasName
	}
	return false
}

func (x *CreationProgress) GetHasRace() bool {
	if x != nil {
		return x.HasRace
	}
	return false
}

func (x *CreationProgress) GetHasClass() bool {
	if x != nil {
		return x.HasClass
	}
	return false
}

func (x *CreationProgress) GetHasBackground() bool {
	if x != nil {
		return x.HasBackground
	}
	return false
}

func (x *CreationProgress) GetHasAbilityScores() bool {
	if x != nil {
		return x.HasAbilityScores
	}
	return false
}

func (x *CreationProgress) GetHasSkills() bool {
	if x != nil {
		return x.HasSkills
	}
	return false
}

func (x *CreationProgress) GetHasLanguages() bool {
	if x != nil {
		return x.HasLanguages
	}
	return false
}

func (x *CreationProgress) GetCompletionPercentage() int32 {
	if x != nil {
		return x.CompletionPercentage
	}
	return 0
}

func (x *CreationProgress) GetCurrentStep() CreationStep {
	if x != nil {
		return x.CurrentStep
	}
	return CreationStep_CREATION_STEP_UNSPECIFIED
}

// Draft metadata
type DraftMetadata struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	CreatedAt        int64                  `protobuf:"varint,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        int64                  `protobuf:"varint,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DiscordChannelId string                 `protobuf:"bytes,3,opt,name=discord_channel_id,json=discordChannelId,proto3" json:"discord_channel_id,omitempty"`
	DiscordMessageId string                 `protobuf:"bytes,4,opt,name=discord_message_id,json=discordMessageId,proto3" json:"discord_message_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DraftMetadata) Reset() {
	*x = DraftMetadata{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DraftMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DraftMetadata) ProtoMessage() {}

func (x *DraftMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DraftMetadata.ProtoReflect.Descriptor instead.
func (*DraftMetadata) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{19}
}

func (x *DraftMetadata) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *DraftMetadata) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *DraftMetadata) GetDiscordChannelId() string {
	if x != nil {
		return x.DiscordChannelId
	}
	return ""
}

func (x *DraftMetadata) GetDiscordMessageId() string {
	if x != nil {
		return x.DiscordMessageId
	}
	return ""
}

// Character draft with full details for responses
type CharacterDraft struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Player creating this character
	PlayerId string `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	// Session if part of one
	SessionId string `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Identity fields
	Name          string          `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Race          *RaceInfo       `protobuf:"bytes,5,opt,name=race,proto3" json:"race,omitempty"`
	Subrace       *SubraceInfo    `protobuf:"bytes,6,opt,name=subrace,proto3" json:"subrace,omitempty"`
	Class         *ClassInfo      `protobuf:"bytes,7,opt,name=class,proto3" json:"class,omitempty"`
	Background    *BackgroundInfo `protobuf:"bytes,8,opt,name=background,proto3" json:"background,omitempty"`
	AbilityScores *AbilityScores  `protobuf:"bytes,9,opt,name=ability_scores,json=abilityScores,proto3" json:"ability_scores,omitempty"`
	Alignment     Alignment       `protobuf:"varint,10,opt,name=alignment,proto3,enum=dnd5e.api.v1alpha1.Alignment" json:"alignment,omitempty"`
	// Store player choices
	Choices []*ChoiceData `protobuf:"bytes,11,rep,name=choices,proto3" json:"choices,omitempty"`
	// Track what steps are complete
	Progress *CreationProgress `protobuf:"bytes,12,opt,name=progress,proto3" json:"progress,omitempty"`
	// When this draft expires (e.g., 30 days)
	ExpiresAt int64 `protobuf:"varint,13,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// Timestamps
	CreatedAt int64 `protobuf:"varint,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64 `protobuf:"varint,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Metadata
	Metadata *DraftMetadata `protobuf:"bytes,16,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Enum fields for v1alpha1 - these are the actual values stored
	// The full info objects above can be left empty/null
	RaceId       Race       `protobuf:"varint,17,opt,name=race_id,json=raceId,proto3,enum=dnd5e.api.v1alpha1.Race" json:"race_id,omitempty"`
	SubraceId    Subrace    `protobuf:"varint,18,opt,name=subrace_id,json=subraceId,proto3,enum=dnd5e.api.v1alpha1.Subrace" json:"subrace_id,omitempty"`
	ClassId      Class      `protobuf:"varint,19,opt,name=class_id,json=classId,proto3,enum=dnd5e.api.v1alpha1.Class" json:"class_id,omitempty"`
	BackgroundId Background `protobuf:"varint,20,opt,name=background_id,json=backgroundId,proto3,enum=dnd5e.api.v1alpha1.Background" json:"background_id,omitempty"`
	// Current validation state of the draft
	// This is calculated on-demand, not stored
	Validation    *ValidationResult `protobuf:"bytes,21,opt,name=validation,proto3" json:"validation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CharacterDraft) Reset() {
	*x = CharacterDraft{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CharacterDraft) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterDraft) ProtoMessage() {}

func (x *CharacterDraft) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterDraft.ProtoReflect.Descriptor instead.
func (*CharacterDraft) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{20}
}

func (x *CharacterDraft) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CharacterDraft) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *CharacterDraft) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *CharacterDraft) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CharacterDraft) GetRace() *RaceInfo {
	if x != nil {
		return x.Race
	}
	return nil
}

func (x *CharacterDraft) GetSubrace() *SubraceInfo {
	if x != nil {
		return x.Subrace
	}
	return nil
}

func (x *CharacterDraft) GetClass() *ClassInfo {
	if x != nil {
		return x.Class
	}
	return nil
}

func (x *CharacterDraft) GetBackground() *BackgroundInfo {
	if x != nil {
		return x.Background
	}
	return nil
}

func (x *CharacterDraft) GetAbilityScores() *AbilityScores {
	if x != nil {
		return x.AbilityScores
	}
	return nil
}

func (x *CharacterDraft) GetAlignment() Alignment {
	if x != nil {
		return x.Alignment
	}
	return Alignment_ALIGNMENT_UNSPECIFIED
}

func (x *CharacterDraft) GetChoices() []*ChoiceData {
	if x != nil {
		return x.Choices
	}
	return nil
}

func (x *CharacterDraft) GetProgress() *CreationProgress {
	if x != nil {
		return x.Progress
	}
	return nil
}

func (x *CharacterDraft) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *CharacterDraft) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *CharacterDraft) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *CharacterDraft) GetMetadata() *DraftMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CharacterDraft) GetRaceId() Race {
	if x != nil {
		return x.RaceId
	}
	return Race_RACE_UNSPECIFIED
}

func (x *CharacterDraft) GetSubraceId() Subrace {
	if x != nil {
		return x.SubraceId
	}
	return Subrace_SUBRACE_UNSPECIFIED
}

func (x *CharacterDraft) GetClassId() Class {
	if x != nil {
		return x.ClassId
	}
	return Class_CLASS_UNSPECIFIED
}

func (x *CharacterDraft) GetBackgroundId() Background {
	if x != nil {
		return x.BackgroundId
	}
	return Background_BACKGROUND_UNSPECIFIED
}

func (x *CharacterDraft) GetValidation() *ValidationResult {
	if x != nil {
		return x.Validation
	}
	return nil
}

// Request to create a draft
type CreateDraftRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	PlayerId  string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	SessionId string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` // Optional
	// Can optionally provide initial data
	InitialData   *CharacterDraftData `protobuf:"bytes,3,opt,name=initial_data,json=initialData,proto3" json:"initial_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDraftRequest) Reset() {
	*x = CreateDraftRequest{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDraftRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDraftRequest) ProtoMessage() {}

func (x *CreateDraftRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDraftRequest.ProtoReflect.Descriptor instead.
func (*CreateDraftRequest) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{21}
}

func (x *CreateDraftRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *CreateDraftRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *CreateDraftRequest) GetInitialData() *CharacterDraftData {
	if x != nil {
		return x.InitialData
	}
	return nil
}

type CreateDraftResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Draft         *CharacterDraft        `protobuf:"bytes,1,opt,name=draft,proto3" json:"draft,omitempty"` // Validation is now on draft.validation
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDraftResponse) Reset() {
	*x = CreateDraftResponse{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDraftResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDraftResponse) ProtoMessage() {}

func (x *CreateDraftResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDraftResponse.ProtoReflect.Descriptor instead.
func (*CreateDraftResponse) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{22}
}

func (x *CreateDraftResponse) GetDraft() *CharacterDraft {
	if x != nil {
		return x.Draft
	}
	return nil
}

// Request to get a draft
type GetDraftRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DraftId       string                 `protobuf:"bytes,1,opt,name=draft_id,json=draftId,proto3" json:"draft_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDraftRequest) Reset() {
	*x = GetDraftRequest{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDraftRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDraftRequest) ProtoMessage() {}

func (x *GetDraftRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDraftRequest.ProtoReflect.Descriptor instead.
func (*GetDraftRequest) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{23}
}

func (x *GetDraftRequest) GetDraftId() string {
	if x != nil {
		return x.DraftId
	}
	return ""
}

type GetDraftResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Draft         *CharacterDraft        `protobuf:"bytes,1,opt,name=draft,proto3" json:"draft,omitempty"` // Validation is now on draft.validation
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDraftResponse) Reset() {
	*x = GetDraftResponse{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDraftResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDraftResponse) ProtoMessage() {}

func (x *GetDraftResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDraftResponse.ProtoReflect.Descriptor instead.
func (*GetDraftResponse) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{24}
}

func (x *GetDraftResponse) GetDraft() *CharacterDraft {
	if x != nil {
		return x.Draft
	}
	return nil
}

// Request to update a draft
type UpdateDraftRequest struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	DraftId string                 `protobuf:"bytes,1,opt,name=draft_id,json=draftId,proto3" json:"draft_id,omitempty"`
	// Only provided fields will be updated
	Updates *CharacterDraftData `protobuf:"bytes,2,opt,name=updates,proto3" json:"updates,omitempty"`
	// Which fields to update (field mask pattern)
	UpdateMask    []string `protobuf:"bytes,3,rep,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDraftRequest) Reset() {
	*x = UpdateDraftRequest{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDraftRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDraftRequest) ProtoMessage() {}

func (x *UpdateDraftRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDraftRequest.ProtoReflect.Descriptor instead.
func (*UpdateDraftRequest) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateDraftRequest) GetDraftId() string {
	if x != nil {
		return x.DraftId
	}
	return ""
}

func (x *UpdateDraftRequest) GetUpdates() *CharacterDraftData {
	if x != nil {
		return x.Updates
	}
	return nil
}

func (x *UpdateDraftRequest) GetUpdateMask() []string {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type UpdateDraftResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Draft *CharacterDraft        `protobuf:"bytes,1,opt,name=draft,proto3" json:"draft,omitempty"` // Validation is now on draft.validation
	// Deprecated: Use draft.validation instead
	//
	// Deprecated: Marked as deprecated in dnd5e/api/v1alpha1/character.proto.
	Warnings      []*ValidationWarning `protobuf:"bytes,2,rep,name=warnings,proto3" json:"warnings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDraftResponse) Reset() {
	*x = UpdateDraftResponse{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDraftResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDraftResponse) ProtoMessage() {}

func (x *UpdateDraftResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDraftResponse.ProtoReflect.Descriptor instead.
func (*UpdateDraftResponse) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateDraftResponse) GetDraft() *CharacterDraft {
	if x != nil {
		return x.Draft
	}
	return nil
}

// Deprecated: Marked as deprecated in dnd5e/api/v1alpha1/character.proto.
func (x *UpdateDraftResponse) GetWarnings() []*ValidationWarning {
	if x != nil {
		return x.Warnings
	}
	return nil
}

// Section-based update requests
type UpdateNameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DraftId       string                 `protobuf:"bytes,1,opt,name=draft_id,json=draftId,proto3" json:"draft_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNameRequest) Reset() {
	*x = UpdateNameRequest{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNameRequest) ProtoMessage() {}

func (x *UpdateNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNameRequest.ProtoReflect.Descriptor instead.
func (*UpdateNameRequest) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateNameRequest) GetDraftId() string {
	if x != nil {
		return x.DraftId
	}
	return ""
}

func (x *UpdateNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateRaceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DraftId       string                 `protobuf:"bytes,1,opt,name=draft_id,json=draftId,proto3" json:"draft_id,omitempty"`
	Race          Race                   `protobuf:"varint,2,opt,name=race,proto3,enum=dnd5e.api.v1alpha1.Race" json:"race,omitempty"`
	Subrace       Subrace                `protobuf:"varint,3,opt,name=subrace,proto3,enum=dnd5e.api.v1alpha1.Subrace" json:"subrace,omitempty"` // Optional, required for some races
	RaceChoices   []*ChoiceData          `protobuf:"bytes,4,rep,name=race_choices,json=raceChoices,proto3" json:"race_choices,omitempty"`       // Choices made for this race
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRaceRequest) Reset() {
	*x = UpdateRaceRequest{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRaceRequest) ProtoMessage() {}

func (x *UpdateRaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRaceRequest.ProtoReflect.Descriptor instead.
func (*UpdateRaceRequest) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateRaceRequest) GetDraftId() string {
	if x != nil {
		return x.DraftId
	}
	return ""
}

func (x *UpdateRaceRequest) GetRace() Race {
	if x != nil {
		return x.Race
	}
	return Race_RACE_UNSPECIFIED
}

func (x *UpdateRaceRequest) GetSubrace() Subrace {
	if x != nil {
		return x.Subrace
	}
	return Subrace_SUBRACE_UNSPECIFIED
}

func (x *UpdateRaceRequest) GetRaceChoices() []*ChoiceData {
	if x != nil {
		return x.RaceChoices
	}
	return nil
}

type UpdateClassRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DraftId       string                 `protobuf:"bytes,1,opt,name=draft_id,json=draftId,proto3" json:"draft_id,omitempty"`
	Class         Class                  `protobuf:"varint,2,opt,name=class,proto3,enum=dnd5e.api.v1alpha1.Class" json:"class,omitempty"`
	ClassChoices  []*ChoiceData          `protobuf:"bytes,3,rep,name=class_choices,json=classChoices,proto3" json:"class_choices,omitempty"` // Choices made for this class
	Subclass      Subclass               `protobuf:"varint,4,opt,name=subclass,proto3,enum=dnd5e.api.v1alpha1.Subclass" json:"subclass,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateClassRequest) Reset() {
	*x = UpdateClassRequest{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateClassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClassRequest) ProtoMessage() {}

func (x *UpdateClassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClassRequest.ProtoReflect.Descriptor instead.
func (*UpdateClassRequest) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateClassRequest) GetDraftId() string {
	if x != nil {
		return x.DraftId
	}
	return ""
}

func (x *UpdateClassRequest) GetClass() Class {
	if x != nil {
		return x.Class
	}
	return Class_CLASS_UNSPECIFIED
}

func (x *UpdateClassRequest) GetClassChoices() []*ChoiceData {
	if x != nil {
		return x.ClassChoices
	}
	return nil
}

func (x *UpdateClassRequest) GetSubclass() Subclass {
	if x != nil {
		return x.Subclass
	}
	return Subclass_SUBCLASS_UNSPECIFIED
}

type UpdateBackgroundRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	DraftId           string                 `protobuf:"bytes,1,opt,name=draft_id,json=draftId,proto3" json:"draft_id,omitempty"`
	Background        Background             `protobuf:"varint,2,opt,name=background,proto3,enum=dnd5e.api.v1alpha1.Background" json:"background,omitempty"`
	BackgroundChoices []*ChoiceData          `protobuf:"bytes,3,rep,name=background_choices,json=backgroundChoices,proto3" json:"background_choices,omitempty"` // Choices made for this background
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *UpdateBackgroundRequest) Reset() {
	*x = UpdateBackgroundRequest{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBackgroundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBackgroundRequest) ProtoMessage() {}

func (x *UpdateBackgroundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBackgroundRequest.ProtoReflect.Descriptor instead.
func (*UpdateBackgroundRequest) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateBackgroundRequest) GetDraftId() string {
	if x != nil {
		return x.DraftId
	}
	return ""
}

func (x *UpdateBackgroundRequest) GetBackground() Background {
	if x != nil {
		return x.Background
	}
	return Background_BACKGROUND_UNSPECIFIED
}

func (x *UpdateBackgroundRequest) GetBackgroundChoices() []*ChoiceData {
	if x != nil {
		return x.BackgroundChoices
	}
	return nil
}

type UpdateAbilityScoresRequest struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	DraftId string                 `protobuf:"bytes,1,opt,name=draft_id,json=draftId,proto3" json:"draft_id,omitempty"`
	// Choose how to set ability scores
	//
	// Types that are valid to be assigned to ScoresInput:
	//
	//	*UpdateAbilityScoresRequest_AbilityScores
	//	*UpdateAbilityScoresRequest_RollAssignments
	ScoresInput   isUpdateAbilityScoresRequest_ScoresInput `protobuf_oneof:"scores_input"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAbilityScoresRequest) Reset() {
	*x = UpdateAbilityScoresRequest{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAbilityScoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAbilityScoresRequest) ProtoMessage() {}

func (x *UpdateAbilityScoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAbilityScoresRequest.ProtoReflect.Descriptor instead.
func (*UpdateAbilityScoresRequest) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateAbilityScoresRequest) GetDraftId() string {
	if x != nil {
		return x.DraftId
	}
	return ""
}

func (x *UpdateAbilityScoresRequest) GetScoresInput() isUpdateAbilityScoresRequest_ScoresInput {
	if x != nil {
		return x.ScoresInput
	}
	return nil
}

func (x *UpdateAbilityScoresRequest) GetAbilityScores() *AbilityScores {
	if x != nil {
		if x, ok := x.ScoresInput.(*UpdateAbilityScoresRequest_AbilityScores); ok {
			return x.AbilityScores
		}
	}
	return nil
}

func (x *UpdateAbilityScoresRequest) GetRollAssignments() *RollAssignments {
	if x != nil {
		if x, ok := x.ScoresInput.(*UpdateAbilityScoresRequest_RollAssignments); ok {
			return x.RollAssignments
		}
	}
	return nil
}

type isUpdateAbilityScoresRequest_ScoresInput interface {
	isUpdateAbilityScoresRequest_ScoresInput()
}

type UpdateAbilityScoresRequest_AbilityScores struct {
	// Manually set ability scores
	AbilityScores *AbilityScores `protobuf:"bytes,2,opt,name=ability_scores,json=abilityScores,proto3,oneof"`
}

type UpdateAbilityScoresRequest_RollAssignments struct {
	// Assign rolled dice to abilities
	RollAssignments *RollAssignments `protobuf:"bytes,3,opt,name=roll_assignments,json=rollAssignments,proto3,oneof"`
}

func (*UpdateAbilityScoresRequest_AbilityScores) isUpdateAbilityScoresRequest_ScoresInput() {}

func (*UpdateAbilityScoresRequest_RollAssignments) isUpdateAbilityScoresRequest_ScoresInput() {}

type UpdateSkillsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DraftId       string                 `protobuf:"bytes,1,opt,name=draft_id,json=draftId,proto3" json:"draft_id,omitempty"`
	Skills        []Skill                `protobuf:"varint,2,rep,packed,name=skills,proto3,enum=dnd5e.api.v1alpha1.Skill" json:"skills,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSkillsRequest) Reset() {
	*x = UpdateSkillsRequest{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSkillsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSkillsRequest) ProtoMessage() {}

func (x *UpdateSkillsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSkillsRequest.ProtoReflect.Descriptor instead.
func (*UpdateSkillsRequest) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{32}
}

func (x *UpdateSkillsRequest) GetDraftId() string {
	if x != nil {
		return x.DraftId
	}
	return ""
}

func (x *UpdateSkillsRequest) GetSkills() []Skill {
	if x != nil {
		return x.Skills
	}
	return nil
}

// Section-based update responses
type UpdateNameResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Draft *CharacterDraft        `protobuf:"bytes,1,opt,name=draft,proto3" json:"draft,omitempty"`
	// Validation is now on draft.validation
	//
	// Deprecated: Marked as deprecated in dnd5e/api/v1alpha1/character.proto.
	Warnings      []*ValidationWarning `protobuf:"bytes,2,rep,name=warnings,proto3" json:"warnings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNameResponse) Reset() {
	*x = UpdateNameResponse{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNameResponse) ProtoMessage() {}

func (x *UpdateNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNameResponse.ProtoReflect.Descriptor instead.
func (*UpdateNameResponse) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{33}
}

func (x *UpdateNameResponse) GetDraft() *CharacterDraft {
	if x != nil {
		return x.Draft
	}
	return nil
}

// Deprecated: Marked as deprecated in dnd5e/api/v1alpha1/character.proto.
func (x *UpdateNameResponse) GetWarnings() []*ValidationWarning {
	if x != nil {
		return x.Warnings
	}
	return nil
}

type UpdateRaceResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Draft *CharacterDraft        `protobuf:"bytes,1,opt,name=draft,proto3" json:"draft,omitempty"`
	// Validation is now on draft.validation
	//
	// Deprecated: Marked as deprecated in dnd5e/api/v1alpha1/character.proto.
	Warnings      []*ValidationWarning `protobuf:"bytes,2,rep,name=warnings,proto3" json:"warnings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRaceResponse) Reset() {
	*x = UpdateRaceResponse{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRaceResponse) ProtoMessage() {}

func (x *UpdateRaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRaceResponse.ProtoReflect.Descriptor instead.
func (*UpdateRaceResponse) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{34}
}

func (x *UpdateRaceResponse) GetDraft() *CharacterDraft {
	if x != nil {
		return x.Draft
	}
	return nil
}

// Deprecated: Marked as deprecated in dnd5e/api/v1alpha1/character.proto.
func (x *UpdateRaceResponse) GetWarnings() []*ValidationWarning {
	if x != nil {
		return x.Warnings
	}
	return nil
}

type UpdateClassResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Draft *CharacterDraft        `protobuf:"bytes,1,opt,name=draft,proto3" json:"draft,omitempty"`
	// Validation is now on draft.validation
	//
	// Deprecated: Marked as deprecated in dnd5e/api/v1alpha1/character.proto.
	Warnings      []*ValidationWarning `protobuf:"bytes,2,rep,name=warnings,proto3" json:"warnings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateClassResponse) Reset() {
	*x = UpdateClassResponse{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateClassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClassResponse) ProtoMessage() {}

func (x *UpdateClassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClassResponse.ProtoReflect.Descriptor instead.
func (*UpdateClassResponse) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{35}
}

func (x *UpdateClassResponse) GetDraft() *CharacterDraft {
	if x != nil {
		return x.Draft
	}
	return nil
}

// Deprecated: Marked as deprecated in dnd5e/api/v1alpha1/character.proto.
func (x *UpdateClassResponse) GetWarnings() []*ValidationWarning {
	if x != nil {
		return x.Warnings
	}
	return nil
}

type UpdateBackgroundResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Draft *CharacterDraft        `protobuf:"bytes,1,opt,name=draft,proto3" json:"draft,omitempty"`
	// Validation is now on draft.validation
	//
	// Deprecated: Marked as deprecated in dnd5e/api/v1alpha1/character.proto.
	Warnings      []*ValidationWarning `protobuf:"bytes,2,rep,name=warnings,proto3" json:"warnings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateBackgroundResponse) Reset() {
	*x = UpdateBackgroundResponse{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBackgroundResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBackgroundResponse) ProtoMessage() {}

func (x *UpdateBackgroundResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBackgroundResponse.ProtoReflect.Descriptor instead.
func (*UpdateBackgroundResponse) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{36}
}

func (x *UpdateBackgroundResponse) GetDraft() *CharacterDraft {
	if x != nil {
		return x.Draft
	}
	return nil
}

// Deprecated: Marked as deprecated in dnd5e/api/v1alpha1/character.proto.
func (x *UpdateBackgroundResponse) GetWarnings() []*ValidationWarning {
	if x != nil {
		return x.Warnings
	}
	return nil
}

type UpdateAbilityScoresResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Draft *CharacterDraft        `protobuf:"bytes,1,opt,name=draft,proto3" json:"draft,omitempty"`
	// Validation is now on draft.validation
	//
	// Deprecated: Marked as deprecated in dnd5e/api/v1alpha1/character.proto.
	Warnings      []*ValidationWarning `protobuf:"bytes,2,rep,name=warnings,proto3" json:"warnings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAbilityScoresResponse) Reset() {
	*x = UpdateAbilityScoresResponse{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAbilityScoresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAbilityScoresResponse) ProtoMessage() {}

func (x *UpdateAbilityScoresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAbilityScoresResponse.ProtoReflect.Descriptor instead.
func (*UpdateAbilityScoresResponse) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{37}
}

func (x *UpdateAbilityScoresResponse) GetDraft() *CharacterDraft {
	if x != nil {
		return x.Draft
	}
	return nil
}

// Deprecated: Marked as deprecated in dnd5e/api/v1alpha1/character.proto.
func (x *UpdateAbilityScoresResponse) GetWarnings() []*ValidationWarning {
	if x != nil {
		return x.Warnings
	}
	return nil
}

type UpdateSkillsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Draft *CharacterDraft        `protobuf:"bytes,1,opt,name=draft,proto3" json:"draft,omitempty"`
	// Validation is now on draft.validation
	//
	// Deprecated: Marked as deprecated in dnd5e/api/v1alpha1/character.proto.
	Warnings      []*ValidationWarning `protobuf:"bytes,2,rep,name=warnings,proto3" json:"warnings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSkillsResponse) Reset() {
	*x = UpdateSkillsResponse{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSkillsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSkillsResponse) ProtoMessage() {}

func (x *UpdateSkillsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSkillsResponse.ProtoReflect.Descriptor instead.
func (*UpdateSkillsResponse) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{38}
}

func (x *UpdateSkillsResponse) GetDraft() *CharacterDraft {
	if x != nil {
		return x.Draft
	}
	return nil
}

// Deprecated: Marked as deprecated in dnd5e/api/v1alpha1/character.proto.
func (x *UpdateSkillsResponse) GetWarnings() []*ValidationWarning {
	if x != nil {
		return x.Warnings
	}
	return nil
}

// Request to list drafts
type ListDraftsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` // Optional filter
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDraftsRequest) Reset() {
	*x = ListDraftsRequest{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDraftsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDraftsRequest) ProtoMessage() {}

func (x *ListDraftsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDraftsRequest.ProtoReflect.Descriptor instead.
func (*ListDraftsRequest) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{39}
}

func (x *ListDraftsRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ListDraftsRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ListDraftsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListDraftsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListDraftsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Drafts        []*CharacterDraft      `protobuf:"bytes,1,rep,name=drafts,proto3" json:"drafts,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDraftsResponse) Reset() {
	*x = ListDraftsResponse{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDraftsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDraftsResponse) ProtoMessage() {}

func (x *ListDraftsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDraftsResponse.ProtoReflect.Descriptor instead.
func (*ListDraftsResponse) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{40}
}

func (x *ListDraftsResponse) GetDrafts() []*CharacterDraft {
	if x != nil {
		return x.Drafts
	}
	return nil
}

func (x *ListDraftsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// Request to validate draft
type ValidateDraftRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DraftId       string                 `protobuf:"bytes,1,opt,name=draft_id,json=draftId,proto3" json:"draft_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateDraftRequest) Reset() {
	*x = ValidateDraftRequest{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateDraftRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateDraftRequest) ProtoMessage() {}

func (x *ValidateDraftRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateDraftRequest.ProtoReflect.Descriptor instead.
func (*ValidateDraftRequest) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{41}
}

func (x *ValidateDraftRequest) GetDraftId() string {
	if x != nil {
		return x.DraftId
	}
	return ""
}

type ValidateDraftResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Full validation result with 3-tier system
	Validation *ValidationResult `protobuf:"bytes,1,opt,name=validation,proto3" json:"validation,omitempty"`
	// Quick access fields for compatibility
	IsComplete bool `protobuf:"varint,2,opt,name=is_complete,json=isComplete,proto3" json:"is_complete,omitempty"`
	IsValid    bool `protobuf:"varint,3,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	// What's still needed
	MissingSteps []CreationStep `protobuf:"varint,4,rep,packed,name=missing_steps,json=missingSteps,proto3,enum=dnd5e.api.v1alpha1.CreationStep" json:"missing_steps,omitempty"`
	// Deprecated: Use validation field instead
	//
	// Deprecated: Marked as deprecated in dnd5e/api/v1alpha1/character.proto.
	Errors []*ValidationError `protobuf:"bytes,5,rep,name=errors,proto3" json:"errors,omitempty"`
	// Deprecated: Marked as deprecated in dnd5e/api/v1alpha1/character.proto.
	Warnings      []*ValidationWarning `protobuf:"bytes,6,rep,name=warnings,proto3" json:"warnings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateDraftResponse) Reset() {
	*x = ValidateDraftResponse{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateDraftResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateDraftResponse) ProtoMessage() {}

func (x *ValidateDraftResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateDraftResponse.ProtoReflect.Descriptor instead.
func (*ValidateDraftResponse) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{42}
}

func (x *ValidateDraftResponse) GetValidation() *ValidationResult {
	if x != nil {
		return x.Validation
	}
	return nil
}

func (x *ValidateDraftResponse) GetIsComplete() bool {
	if x != nil {
		return x.IsComplete
	}
	return false
}

func (x *ValidateDraftResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *ValidateDraftResponse) GetMissingSteps() []CreationStep {
	if x != nil {
		return x.MissingSteps
	}
	return nil
}

// Deprecated: Marked as deprecated in dnd5e/api/v1alpha1/character.proto.
func (x *ValidateDraftResponse) GetErrors() []*ValidationError {
	if x != nil {
		return x.Errors
	}
	return nil
}

// Deprecated: Marked as deprecated in dnd5e/api/v1alpha1/character.proto.
func (x *ValidateDraftResponse) GetWarnings() []*ValidationWarning {
	if x != nil {
		return x.Warnings
	}
	return nil
}

// Request to get a preview of the character
type GetDraftPreviewRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DraftId       string                 `protobuf:"bytes,1,opt,name=draft_id,json=draftId,proto3" json:"draft_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDraftPreviewRequest) Reset() {
	*x = GetDraftPreviewRequest{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDraftPreviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDraftPreviewRequest) ProtoMessage() {}

func (x *GetDraftPreviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDraftPreviewRequest.ProtoReflect.Descriptor instead.
func (*GetDraftPreviewRequest) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{43}
}

func (x *GetDraftPreviewRequest) GetDraftId() string {
	if x != nil {
		return x.DraftId
	}
	return ""
}

type GetDraftPreviewResponse struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Draft   *CharacterDraft        `protobuf:"bytes,1,opt,name=draft,proto3" json:"draft,omitempty"`     // The draft with choices (includes validation)
	Preview *Character             `protobuf:"bytes,2,opt,name=preview,proto3" json:"preview,omitempty"` // Computed character state
	// Deprecated: Use draft.validation instead
	//
	// Deprecated: Marked as deprecated in dnd5e/api/v1alpha1/character.proto.
	Warnings []*ValidationWarning `protobuf:"bytes,3,rep,name=warnings,proto3" json:"warnings,omitempty"`
	// Deprecated: Marked as deprecated in dnd5e/api/v1alpha1/character.proto.
	Errors        []*ValidationError `protobuf:"bytes,4,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDraftPreviewResponse) Reset() {
	*x = GetDraftPreviewResponse{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDraftPreviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDraftPreviewResponse) ProtoMessage() {}

func (x *GetDraftPreviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDraftPreviewResponse.ProtoReflect.Descriptor instead.
func (*GetDraftPreviewResponse) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{44}
}

func (x *GetDraftPreviewResponse) GetDraft() *CharacterDraft {
	if x != nil {
		return x.Draft
	}
	return nil
}

func (x *GetDraftPreviewResponse) GetPreview() *Character {
	if x != nil {
		return x.Preview
	}
	return nil
}

// Deprecated: Marked as deprecated in dnd5e/api/v1alpha1/character.proto.
func (x *GetDraftPreviewResponse) GetWarnings() []*ValidationWarning {
	if x != nil {
		return x.Warnings
	}
	return nil
}

// Deprecated: Marked as deprecated in dnd5e/api/v1alpha1/character.proto.
func (x *GetDraftPreviewResponse) GetErrors() []*ValidationError {
	if x != nil {
		return x.Errors
	}
	return nil
}

// Request to finalize draft
type FinalizeDraftRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DraftId       string                 `protobuf:"bytes,1,opt,name=draft_id,json=draftId,proto3" json:"draft_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalizeDraftRequest) Reset() {
	*x = FinalizeDraftRequest{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalizeDraftRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeDraftRequest) ProtoMessage() {}

func (x *FinalizeDraftRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeDraftRequest.ProtoReflect.Descriptor instead.
func (*FinalizeDraftRequest) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{45}
}

func (x *FinalizeDraftRequest) GetDraftId() string {
	if x != nil {
		return x.DraftId
	}
	return ""
}

type FinalizeDraftResponse struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Character *Character             `protobuf:"bytes,1,opt,name=character,proto3" json:"character,omitempty"`
	// Draft is automatically deleted after finalization
	DraftDeleted bool `protobuf:"varint,2,opt,name=draft_deleted,json=draftDeleted,proto3" json:"draft_deleted,omitempty"`
	// Final validation result (should have no errors for successful finalization)
	// Optional since character is already created successfully
	FinalValidation *ValidationResult `protobuf:"bytes,3,opt,name=final_validation,json=finalValidation,proto3" json:"final_validation,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *FinalizeDraftResponse) Reset() {
	*x = FinalizeDraftResponse{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalizeDraftResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeDraftResponse) ProtoMessage() {}

func (x *FinalizeDraftResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeDraftResponse.ProtoReflect.Descriptor instead.
func (*FinalizeDraftResponse) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{46}
}

func (x *FinalizeDraftResponse) GetCharacter() *Character {
	if x != nil {
		return x.Character
	}
	return nil
}

func (x *FinalizeDraftResponse) GetDraftDeleted() bool {
	if x != nil {
		return x.DraftDeleted
	}
	return false
}

func (x *FinalizeDraftResponse) GetFinalValidation() *ValidationResult {
	if x != nil {
		return x.FinalValidation
	}
	return nil
}

// Request to delete draft
type DeleteDraftRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DraftId       string                 `protobuf:"bytes,1,opt,name=draft_id,json=draftId,proto3" json:"draft_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDraftRequest) Reset() {
	*x = DeleteDraftRequest{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDraftRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDraftRequest) ProtoMessage() {}

func (x *DeleteDraftRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDraftRequest.ProtoReflect.Descriptor instead.
func (*DeleteDraftRequest) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{47}
}

func (x *DeleteDraftRequest) GetDraftId() string {
	if x != nil {
		return x.DraftId
	}
	return ""
}

type DeleteDraftResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDraftResponse) Reset() {
	*x = DeleteDraftResponse{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDraftResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDraftResponse) ProtoMessage() {}

func (x *DeleteDraftResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDraftResponse.ProtoReflect.Descriptor instead.
func (*DeleteDraftResponse) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{48}
}

func (x *DeleteDraftResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Detailed race information for selection UI
type RaceInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Basic identification
	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Mechanical information
	Speed int32 `protobuf:"varint,4,opt,name=speed,proto3" json:"speed,omitempty"`
	Size  Size  `protobuf:"varint,5,opt,name=size,proto3,enum=dnd5e.api.v1alpha1.Size" json:"size,omitempty"`
	// Ability score increases
	AbilityBonuses map[string]int32 `protobuf:"bytes,6,rep,name=ability_bonuses,json=abilityBonuses,proto3" json:"ability_bonuses,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	// Racial traits
	Traits []*RacialTrait `protobuf:"bytes,7,rep,name=traits,proto3" json:"traits,omitempty"`
	// Available subraces
	Subraces []*SubraceInfo `protobuf:"bytes,8,rep,name=subraces,proto3" json:"subraces,omitempty"`
	// Starting proficiencies
	Proficiencies []string `protobuf:"bytes,9,rep,name=proficiencies,proto3" json:"proficiencies,omitempty"`
	// Starting languages
	Languages []Language `protobuf:"varint,10,rep,packed,name=languages,proto3,enum=dnd5e.api.v1alpha1.Language" json:"languages,omitempty"`
	// Additional flavor text
	AgeDescription       string `protobuf:"bytes,11,opt,name=age_description,json=ageDescription,proto3" json:"age_description,omitempty"`
	AlignmentDescription string `protobuf:"bytes,12,opt,name=alignment_description,json=alignmentDescription,proto3" json:"alignment_description,omitempty"`
	// Size description
	SizeDescription string `protobuf:"bytes,13,opt,name=size_description,json=sizeDescription,proto3" json:"size_description,omitempty"`
	// All choices (languages, proficiencies, etc.)
	Choices       []*Choice `protobuf:"bytes,14,rep,name=choices,proto3" json:"choices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RaceInfo) Reset() {
	*x = RaceInfo{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RaceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaceInfo) ProtoMessage() {}

func (x *RaceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaceInfo.ProtoReflect.Descriptor instead.
func (*RaceInfo) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{49}
}

func (x *RaceInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RaceInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RaceInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RaceInfo) GetSpeed() int32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *RaceInfo) GetSize() Size {
	if x != nil {
		return x.Size
	}
	return Size_SIZE_UNSPECIFIED
}

func (x *RaceInfo) GetAbilityBonuses() map[string]int32 {
	if x != nil {
		return x.AbilityBonuses
	}
	return nil
}

func (x *RaceInfo) GetTraits() []*RacialTrait {
	if x != nil {
		return x.Traits
	}
	return nil
}

func (x *RaceInfo) GetSubraces() []*SubraceInfo {
	if x != nil {
		return x.Subraces
	}
	return nil
}

func (x *RaceInfo) GetProficiencies() []string {
	if x != nil {
		return x.Proficiencies
	}
	return nil
}

func (x *RaceInfo) GetLanguages() []Language {
	if x != nil {
		return x.Languages
	}
	return nil
}

func (x *RaceInfo) GetAgeDescription() string {
	if x != nil {
		return x.AgeDescription
	}
	return ""
}

func (x *RaceInfo) GetAlignmentDescription() string {
	if x != nil {
		return x.AlignmentDescription
	}
	return ""
}

func (x *RaceInfo) GetSizeDescription() string {
	if x != nil {
		return x.SizeDescription
	}
	return ""
}

func (x *RaceInfo) GetChoices() []*Choice {
	if x != nil {
		return x.Choices
	}
	return nil
}

// Subrace information
type SubraceInfo struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Additional ability bonuses from subrace
	AbilityBonuses map[string]int32 `protobuf:"bytes,4,rep,name=ability_bonuses,json=abilityBonuses,proto3" json:"ability_bonuses,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	// Additional traits from subrace
	Traits []*RacialTrait `protobuf:"bytes,5,rep,name=traits,proto3" json:"traits,omitempty"`
	// Additional languages from subrace
	Languages []Language `protobuf:"varint,6,rep,packed,name=languages,proto3,enum=dnd5e.api.v1alpha1.Language" json:"languages,omitempty"`
	// Additional proficiencies from subrace
	Proficiencies []string `protobuf:"bytes,7,rep,name=proficiencies,proto3" json:"proficiencies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubraceInfo) Reset() {
	*x = SubraceInfo{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubraceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubraceInfo) ProtoMessage() {}

func (x *SubraceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubraceInfo.ProtoReflect.Descriptor instead.
func (*SubraceInfo) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{50}
}

func (x *SubraceInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SubraceInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SubraceInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SubraceInfo) GetAbilityBonuses() map[string]int32 {
	if x != nil {
		return x.AbilityBonuses
	}
	return nil
}

func (x *SubraceInfo) GetTraits() []*RacialTrait {
	if x != nil {
		return x.Traits
	}
	return nil
}

func (x *SubraceInfo) GetLanguages() []Language {
	if x != nil {
		return x.Languages
	}
	return nil
}

func (x *SubraceInfo) GetProficiencies() []string {
	if x != nil {
		return x.Proficiencies
	}
	return nil
}

// Racial trait description
type RacialTrait struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Name        string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Whether this is a choice or automatic
	IsChoice bool `protobuf:"varint,3,opt,name=is_choice,json=isChoice,proto3" json:"is_choice,omitempty"`
	// Options if this is a choice
	Options       []string `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RacialTrait) Reset() {
	*x = RacialTrait{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RacialTrait) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RacialTrait) ProtoMessage() {}

func (x *RacialTrait) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RacialTrait.ProtoReflect.Descriptor instead.
func (*RacialTrait) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{51}
}

func (x *RacialTrait) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RacialTrait) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RacialTrait) GetIsChoice() bool {
	if x != nil {
		return x.IsChoice
	}
	return false
}

func (x *RacialTrait) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

// Unified choice for all types - equipment, proficiencies, languages, etc.
type Choice struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                           // Unique identifier for tracking
	Description string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`                                                         // Human-readable description
	ChooseCount int32                  `protobuf:"varint,3,opt,name=choose_count,json=chooseCount,proto3" json:"choose_count,omitempty"`                                     // How many options to choose
	ChoiceType  ChoiceCategory         `protobuf:"varint,4,opt,name=choice_type,json=choiceType,proto3,enum=dnd5e.api.v1alpha1.ChoiceCategory" json:"choice_type,omitempty"` // What kind of choice this is
	// Types that are valid to be assigned to OptionSet:
	//
	//	*Choice_ExplicitOptions
	//	*Choice_CategoryReference
	OptionSet     isChoice_OptionSet `protobuf_oneof:"option_set"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Choice) Reset() {
	*x = Choice{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Choice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Choice) ProtoMessage() {}

func (x *Choice) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Choice.ProtoReflect.Descriptor instead.
func (*Choice) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{52}
}

func (x *Choice) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Choice) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Choice) GetChooseCount() int32 {
	if x != nil {
		return x.ChooseCount
	}
	return 0
}

func (x *Choice) GetChoiceType() ChoiceCategory {
	if x != nil {
		return x.ChoiceType
	}
	return ChoiceCategory_CHOICE_CATEGORY_UNSPECIFIED
}

func (x *Choice) GetOptionSet() isChoice_OptionSet {
	if x != nil {
		return x.OptionSet
	}
	return nil
}

func (x *Choice) GetExplicitOptions() *ExplicitOptions {
	if x != nil {
		if x, ok := x.OptionSet.(*Choice_ExplicitOptions); ok {
			return x.ExplicitOptions
		}
	}
	return nil
}

func (x *Choice) GetCategoryReference() *CategoryReference {
	if x != nil {
		if x, ok := x.OptionSet.(*Choice_CategoryReference); ok {
			return x.CategoryReference
		}
	}
	return nil
}

type isChoice_OptionSet interface {
	isChoice_OptionSet()
}

type Choice_ExplicitOptions struct {
	ExplicitOptions *ExplicitOptions `protobuf:"bytes,5,opt,name=explicit_options,json=explicitOptions,proto3,oneof"` // List of specific options
}

type Choice_CategoryReference struct {
	CategoryReference *CategoryReference `protobuf:"bytes,6,opt,name=category_reference,json=categoryReference,proto3,oneof"` // Reference to expandable category
}

func (*Choice_ExplicitOptions) isChoice_OptionSet() {}

func (*Choice_CategoryReference) isChoice_OptionSet() {}

// Explicit list of options to choose from
type ExplicitOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Options       []*ChoiceOption        `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExplicitOptions) Reset() {
	*x = ExplicitOptions{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExplicitOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExplicitOptions) ProtoMessage() {}

func (x *ExplicitOptions) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExplicitOptions.ProtoReflect.Descriptor instead.
func (*ExplicitOptions) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{53}
}

func (x *ExplicitOptions) GetOptions() []*ChoiceOption {
	if x != nil {
		return x.Options
	}
	return nil
}

// Reference to a category that needs to be resolved/expanded
type CategoryReference struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CategoryId    string                 `protobuf:"bytes,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"` // e.g., "martial-weapons", "artisan-tools"
	ExcludeIds    []string               `protobuf:"bytes,2,rep,name=exclude_ids,json=excludeIds,proto3" json:"exclude_ids,omitempty"` // Optional exclusions
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CategoryReference) Reset() {
	*x = CategoryReference{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CategoryReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryReference) ProtoMessage() {}

func (x *CategoryReference) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryReference.ProtoReflect.Descriptor instead.
func (*CategoryReference) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{54}
}

func (x *CategoryReference) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *CategoryReference) GetExcludeIds() []string {
	if x != nil {
		return x.ExcludeIds
	}
	return nil
}

// Individual option within a choice
type ChoiceOption struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to OptionType:
	//
	//	*ChoiceOption_Item
	//	*ChoiceOption_CountedItem
	//	*ChoiceOption_Bundle
	//	*ChoiceOption_NestedChoice
	OptionType    isChoiceOption_OptionType `protobuf_oneof:"option_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChoiceOption) Reset() {
	*x = ChoiceOption{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChoiceOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChoiceOption) ProtoMessage() {}

func (x *ChoiceOption) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChoiceOption.ProtoReflect.Descriptor instead.
func (*ChoiceOption) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{55}
}

func (x *ChoiceOption) GetOptionType() isChoiceOption_OptionType {
	if x != nil {
		return x.OptionType
	}
	return nil
}

func (x *ChoiceOption) GetItem() *ItemReference {
	if x != nil {
		if x, ok := x.OptionType.(*ChoiceOption_Item); ok {
			return x.Item
		}
	}
	return nil
}

func (x *ChoiceOption) GetCountedItem() *CountedItemReference {
	if x != nil {
		if x, ok := x.OptionType.(*ChoiceOption_CountedItem); ok {
			return x.CountedItem
		}
	}
	return nil
}

func (x *ChoiceOption) GetBundle() *ItemBundle {
	if x != nil {
		if x, ok := x.OptionType.(*ChoiceOption_Bundle); ok {
			return x.Bundle
		}
	}
	return nil
}

func (x *ChoiceOption) GetNestedChoice() *NestedChoice {
	if x != nil {
		if x, ok := x.OptionType.(*ChoiceOption_NestedChoice); ok {
			return x.NestedChoice
		}
	}
	return nil
}

type isChoiceOption_OptionType interface {
	isChoiceOption_OptionType()
}

type ChoiceOption_Item struct {
	Item *ItemReference `protobuf:"bytes,1,opt,name=item,proto3,oneof"` // Single item reference
}

type ChoiceOption_CountedItem struct {
	CountedItem *CountedItemReference `protobuf:"bytes,2,opt,name=counted_item,json=countedItem,proto3,oneof"` // Item with quantity
}

type ChoiceOption_Bundle struct {
	Bundle *ItemBundle `protobuf:"bytes,3,opt,name=bundle,proto3,oneof"` // Multiple items as one option
}

type ChoiceOption_NestedChoice struct {
	NestedChoice *NestedChoice `protobuf:"bytes,4,opt,name=nested_choice,json=nestedChoice,proto3,oneof"` // For complex nested choices
}

func (*ChoiceOption_Item) isChoiceOption_OptionType() {}

func (*ChoiceOption_CountedItem) isChoiceOption_OptionType() {}

func (*ChoiceOption_Bundle) isChoiceOption_OptionType() {}

func (*ChoiceOption_NestedChoice) isChoiceOption_OptionType() {}

type ItemReference struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ItemId        string                 `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"` // ID to query with
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                   // Display name
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ItemReference) Reset() {
	*x = ItemReference{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ItemReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemReference) ProtoMessage() {}

func (x *ItemReference) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemReference.ProtoReflect.Descriptor instead.
func (*ItemReference) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{56}
}

func (x *ItemReference) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *ItemReference) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CountedItemReference struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ItemId        string                 `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Quantity      int32                  `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"` // e.g., 20 arrows
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountedItemReference) Reset() {
	*x = CountedItemReference{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountedItemReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountedItemReference) ProtoMessage() {}

func (x *CountedItemReference) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountedItemReference.ProtoReflect.Descriptor instead.
func (*CountedItemReference) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{57}
}

func (x *CountedItemReference) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *CountedItemReference) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CountedItemReference) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type ItemBundle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*BundleItem          `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"` // Items in the bundle (can be concrete or choices)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ItemBundle) Reset() {
	*x = ItemBundle{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ItemBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemBundle) ProtoMessage() {}

func (x *ItemBundle) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemBundle.ProtoReflect.Descriptor instead.
func (*ItemBundle) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{58}
}

func (x *ItemBundle) GetItems() []*BundleItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// Represents a single item in a bundle, which can be either a concrete item or a choice
type BundleItem struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to ItemType:
	//
	//	*BundleItem_ConcreteItem
	//	*BundleItem_ChoiceItem
	ItemType      isBundleItem_ItemType `protobuf_oneof:"item_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BundleItem) Reset() {
	*x = BundleItem{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BundleItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BundleItem) ProtoMessage() {}

func (x *BundleItem) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BundleItem.ProtoReflect.Descriptor instead.
func (*BundleItem) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{59}
}

func (x *BundleItem) GetItemType() isBundleItem_ItemType {
	if x != nil {
		return x.ItemType
	}
	return nil
}

func (x *BundleItem) GetConcreteItem() *CountedItemReference {
	if x != nil {
		if x, ok := x.ItemType.(*BundleItem_ConcreteItem); ok {
			return x.ConcreteItem
		}
	}
	return nil
}

func (x *BundleItem) GetChoiceItem() *NestedChoice {
	if x != nil {
		if x, ok := x.ItemType.(*BundleItem_ChoiceItem); ok {
			return x.ChoiceItem
		}
	}
	return nil
}

type isBundleItem_ItemType interface {
	isBundleItem_ItemType()
}

type BundleItem_ConcreteItem struct {
	ConcreteItem *CountedItemReference `protobuf:"bytes,1,opt,name=concrete_item,json=concreteItem,proto3,oneof"` // Concrete item like "leather armor"
}

type BundleItem_ChoiceItem struct {
	ChoiceItem *NestedChoice `protobuf:"bytes,2,opt,name=choice_item,json=choiceItem,proto3,oneof"` // Choice like "a martial weapon"
}

func (*BundleItem_ConcreteItem) isBundleItem_ItemType() {}

func (*BundleItem_ChoiceItem) isBundleItem_ItemType() {}

type NestedChoice struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Choice        *Choice                `protobuf:"bytes,1,opt,name=choice,proto3" json:"choice,omitempty"` // Allows arbitrarily complex choices
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NestedChoice) Reset() {
	*x = NestedChoice{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NestedChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NestedChoice) ProtoMessage() {}

func (x *NestedChoice) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NestedChoice.ProtoReflect.Descriptor instead.
func (*NestedChoice) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{60}
}

func (x *NestedChoice) GetChoice() *Choice {
	if x != nil {
		return x.Choice
	}
	return nil
}

// Detailed class information for selection UI
type ClassInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Basic identification
	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Mechanical information
	HitDie           string   `protobuf:"bytes,4,opt,name=hit_die,json=hitDie,proto3" json:"hit_die,omitempty"`
	PrimaryAbilities []string `protobuf:"bytes,5,rep,name=primary_abilities,json=primaryAbilities,proto3" json:"primary_abilities,omitempty"`
	// Proficiencies
	ArmorProficiencies       []string `protobuf:"bytes,6,rep,name=armor_proficiencies,json=armorProficiencies,proto3" json:"armor_proficiencies,omitempty"`
	WeaponProficiencies      []string `protobuf:"bytes,7,rep,name=weapon_proficiencies,json=weaponProficiencies,proto3" json:"weapon_proficiencies,omitempty"`
	ToolProficiencies        []string `protobuf:"bytes,8,rep,name=tool_proficiencies,json=toolProficiencies,proto3" json:"tool_proficiencies,omitempty"`
	SavingThrowProficiencies []string `protobuf:"bytes,9,rep,name=saving_throw_proficiencies,json=savingThrowProficiencies,proto3" json:"saving_throw_proficiencies,omitempty"`
	// Skill choices
	SkillChoicesCount int32    `protobuf:"varint,10,opt,name=skill_choices_count,json=skillChoicesCount,proto3" json:"skill_choices_count,omitempty"`
	AvailableSkills   []string `protobuf:"bytes,11,rep,name=available_skills,json=availableSkills,proto3" json:"available_skills,omitempty"`
	// Starting equipment
	StartingEquipment []string `protobuf:"bytes,12,rep,name=starting_equipment,json=startingEquipment,proto3" json:"starting_equipment,omitempty"`
	// Class features at level 1
	Level_1Features []*FeatureInfo `protobuf:"bytes,13,rep,name=level_1_features,json=level1Features,proto3" json:"level_1_features,omitempty"`
	// Spellcasting information (if applicable)
	Spellcasting *SpellcastingInfo `protobuf:"bytes,14,opt,name=spellcasting,proto3" json:"spellcasting,omitempty"`
	// All choices (equipment, proficiencies, etc.)
	Choices []*Choice `protobuf:"bytes,15,rep,name=choices,proto3" json:"choices,omitempty"`
	// Deprecated: Use subclasses field instead - group was used to group subclasses under base class
	//
	// Deprecated: Marked as deprecated in dnd5e/api/v1alpha1/character.proto.
	Group Class `protobuf:"varint,16,opt,name=group,proto3,enum=dnd5e.api.v1alpha1.Class" json:"group,omitempty"`
	// Subclass options for this class (only populated for base classes like Cleric, not for subclasses)
	Subclasses []*SubclassInfo `protobuf:"bytes,17,rep,name=subclasses,proto3" json:"subclasses,omitempty"`
	// What type of subclass this class has (e.g., "Divine Domain", "Sorcerous Origin")
	//
	// Deprecated: Marked as deprecated in dnd5e/api/v1alpha1/character.proto.
	SubclassType  string `protobuf:"bytes,18,opt,name=subclass_type,json=subclassType,proto3" json:"subclass_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClassInfo) Reset() {
	*x = ClassInfo{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClassInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassInfo) ProtoMessage() {}

func (x *ClassInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassInfo.ProtoReflect.Descriptor instead.
func (*ClassInfo) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{61}
}

func (x *ClassInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ClassInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClassInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ClassInfo) GetHitDie() string {
	if x != nil {
		return x.HitDie
	}
	return ""
}

func (x *ClassInfo) GetPrimaryAbilities() []string {
	if x != nil {
		return x.PrimaryAbilities
	}
	return nil
}

func (x *ClassInfo) GetArmorProficiencies() []string {
	if x != nil {
		return x.ArmorProficiencies
	}
	return nil
}

func (x *ClassInfo) GetWeaponProficiencies() []string {
	if x != nil {
		return x.WeaponProficiencies
	}
	return nil
}

func (x *ClassInfo) GetToolProficiencies() []string {
	if x != nil {
		return x.ToolProficiencies
	}
	return nil
}

func (x *ClassInfo) GetSavingThrowProficiencies() []string {
	if x != nil {
		return x.SavingThrowProficiencies
	}
	return nil
}

func (x *ClassInfo) GetSkillChoicesCount() int32 {
	if x != nil {
		return x.SkillChoicesCount
	}
	return 0
}

func (x *ClassInfo) GetAvailableSkills() []string {
	if x != nil {
		return x.AvailableSkills
	}
	return nil
}

func (x *ClassInfo) GetStartingEquipment() []string {
	if x != nil {
		return x.StartingEquipment
	}
	return nil
}

func (x *ClassInfo) GetLevel_1Features() []*FeatureInfo {
	if x != nil {
		return x.Level_1Features
	}
	return nil
}

func (x *ClassInfo) GetSpellcasting() *SpellcastingInfo {
	if x != nil {
		return x.Spellcasting
	}
	return nil
}

func (x *ClassInfo) GetChoices() []*Choice {
	if x != nil {
		return x.Choices
	}
	return nil
}

// Deprecated: Marked as deprecated in dnd5e/api/v1alpha1/character.proto.
func (x *ClassInfo) GetGroup() Class {
	if x != nil {
		return x.Group
	}
	return Class_CLASS_UNSPECIFIED
}

func (x *ClassInfo) GetSubclasses() []*SubclassInfo {
	if x != nil {
		return x.Subclasses
	}
	return nil
}

// Deprecated: Marked as deprecated in dnd5e/api/v1alpha1/character.proto.
func (x *ClassInfo) GetSubclassType() string {
	if x != nil {
		return x.SubclassType
	}
	return ""
}

// Information about a subclass option
type SubclassInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Basic identification
	//
	// Deprecated: Marked as deprecated in dnd5e/api/v1alpha1/character.proto.
	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Level when this subclass becomes available
	Level int32 `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	// Additional proficiencies granted by this subclass
	ArmorProficiencies  []string `protobuf:"bytes,5,rep,name=armor_proficiencies,json=armorProficiencies,proto3" json:"armor_proficiencies,omitempty"`
	WeaponProficiencies []string `protobuf:"bytes,6,rep,name=weapon_proficiencies,json=weaponProficiencies,proto3" json:"weapon_proficiencies,omitempty"`
	ToolProficiencies   []string `protobuf:"bytes,7,rep,name=tool_proficiencies,json=toolProficiencies,proto3" json:"tool_proficiencies,omitempty"`
	// Additional choices required by this subclass
	AdditionalChoices []*Choice `protobuf:"bytes,8,rep,name=additional_choices,json=additionalChoices,proto3" json:"additional_choices,omitempty"`
	// Features specific to this subclass
	Features      []*FeatureInfo `protobuf:"bytes,9,rep,name=features,proto3" json:"features,omitempty"`
	Subclass      Subclass       `protobuf:"varint,10,opt,name=subclass,proto3,enum=dnd5e.api.v1alpha1.Subclass" json:"subclass,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubclassInfo) Reset() {
	*x = SubclassInfo{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubclassInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubclassInfo) ProtoMessage() {}

func (x *SubclassInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubclassInfo.ProtoReflect.Descriptor instead.
func (*SubclassInfo) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{62}
}

// Deprecated: Marked as deprecated in dnd5e/api/v1alpha1/character.proto.
func (x *SubclassInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SubclassInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SubclassInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SubclassInfo) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *SubclassInfo) GetArmorProficiencies() []string {
	if x != nil {
		return x.ArmorProficiencies
	}
	return nil
}

func (x *SubclassInfo) GetWeaponProficiencies() []string {
	if x != nil {
		return x.WeaponProficiencies
	}
	return nil
}

func (x *SubclassInfo) GetToolProficiencies() []string {
	if x != nil {
		return x.ToolProficiencies
	}
	return nil
}

func (x *SubclassInfo) GetAdditionalChoices() []*Choice {
	if x != nil {
		return x.AdditionalChoices
	}
	return nil
}

func (x *SubclassInfo) GetFeatures() []*FeatureInfo {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *SubclassInfo) GetSubclass() Subclass {
	if x != nil {
		return x.Subclass
	}
	return Subclass_SUBCLASS_UNSPECIFIED
}

// Spellcasting information
type SpellcastingInfo struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	SpellcastingAbility string                 `protobuf:"bytes,1,opt,name=spellcasting_ability,json=spellcastingAbility,proto3" json:"spellcasting_ability,omitempty"`
	RitualCasting       bool                   `protobuf:"varint,2,opt,name=ritual_casting,json=ritualCasting,proto3" json:"ritual_casting,omitempty"`
	SpellcastingFocus   string                 `protobuf:"bytes,3,opt,name=spellcasting_focus,json=spellcastingFocus,proto3" json:"spellcasting_focus,omitempty"`
	CantripsKnown       int32                  `protobuf:"varint,4,opt,name=cantrips_known,json=cantripsKnown,proto3" json:"cantrips_known,omitempty"`
	SpellsKnown         int32                  `protobuf:"varint,5,opt,name=spells_known,json=spellsKnown,proto3" json:"spells_known,omitempty"`
	SpellSlotsLevel_1   int32                  `protobuf:"varint,6,opt,name=spell_slots_level_1,json=spellSlotsLevel1,proto3" json:"spell_slots_level_1,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SpellcastingInfo) Reset() {
	*x = SpellcastingInfo{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpellcastingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpellcastingInfo) ProtoMessage() {}

func (x *SpellcastingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpellcastingInfo.ProtoReflect.Descriptor instead.
func (*SpellcastingInfo) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{63}
}

func (x *SpellcastingInfo) GetSpellcastingAbility() string {
	if x != nil {
		return x.SpellcastingAbility
	}
	return ""
}

func (x *SpellcastingInfo) GetRitualCasting() bool {
	if x != nil {
		return x.RitualCasting
	}
	return false
}

func (x *SpellcastingInfo) GetSpellcastingFocus() string {
	if x != nil {
		return x.SpellcastingFocus
	}
	return ""
}

func (x *SpellcastingInfo) GetCantripsKnown() int32 {
	if x != nil {
		return x.CantripsKnown
	}
	return 0
}

func (x *SpellcastingInfo) GetSpellsKnown() int32 {
	if x != nil {
		return x.SpellsKnown
	}
	return 0
}

func (x *SpellcastingInfo) GetSpellSlotsLevel_1() int32 {
	if x != nil {
		return x.SpellSlotsLevel_1
	}
	return 0
}

// Detailed background information for selection UI
type BackgroundInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Basic identification
	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Mechanical benefits
	SkillProficiencies  []string   `protobuf:"bytes,4,rep,name=skill_proficiencies,json=skillProficiencies,proto3" json:"skill_proficiencies,omitempty"`
	ToolProficiencies   []string   `protobuf:"bytes,5,rep,name=tool_proficiencies,json=toolProficiencies,proto3" json:"tool_proficiencies,omitempty"`
	Languages           []Language `protobuf:"varint,6,rep,packed,name=languages,proto3,enum=dnd5e.api.v1alpha1.Language" json:"languages,omitempty"`
	AdditionalLanguages int32      `protobuf:"varint,7,opt,name=additional_languages,json=additionalLanguages,proto3" json:"additional_languages,omitempty"`
	// Starting equipment
	StartingEquipment []string `protobuf:"bytes,8,rep,name=starting_equipment,json=startingEquipment,proto3" json:"starting_equipment,omitempty"`
	StartingGold      int32    `protobuf:"varint,9,opt,name=starting_gold,json=startingGold,proto3" json:"starting_gold,omitempty"`
	// Background feature
	FeatureName        string `protobuf:"bytes,10,opt,name=feature_name,json=featureName,proto3" json:"feature_name,omitempty"`
	FeatureDescription string `protobuf:"bytes,11,opt,name=feature_description,json=featureDescription,proto3" json:"feature_description,omitempty"`
	// Suggested characteristics
	PersonalityTraits []string `protobuf:"bytes,12,rep,name=personality_traits,json=personalityTraits,proto3" json:"personality_traits,omitempty"`
	Ideals            []string `protobuf:"bytes,13,rep,name=ideals,proto3" json:"ideals,omitempty"`
	Bonds             []string `protobuf:"bytes,14,rep,name=bonds,proto3" json:"bonds,omitempty"`
	Flaws             []string `protobuf:"bytes,15,rep,name=flaws,proto3" json:"flaws,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *BackgroundInfo) Reset() {
	*x = BackgroundInfo{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackgroundInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackgroundInfo) ProtoMessage() {}

func (x *BackgroundInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackgroundInfo.ProtoReflect.Descriptor instead.
func (*BackgroundInfo) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{64}
}

func (x *BackgroundInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BackgroundInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BackgroundInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *BackgroundInfo) GetSkillProficiencies() []string {
	if x != nil {
		return x.SkillProficiencies
	}
	return nil
}

func (x *BackgroundInfo) GetToolProficiencies() []string {
	if x != nil {
		return x.ToolProficiencies
	}
	return nil
}

func (x *BackgroundInfo) GetLanguages() []Language {
	if x != nil {
		return x.Languages
	}
	return nil
}

func (x *BackgroundInfo) GetAdditionalLanguages() int32 {
	if x != nil {
		return x.AdditionalLanguages
	}
	return 0
}

func (x *BackgroundInfo) GetStartingEquipment() []string {
	if x != nil {
		return x.StartingEquipment
	}
	return nil
}

func (x *BackgroundInfo) GetStartingGold() int32 {
	if x != nil {
		return x.StartingGold
	}
	return 0
}

func (x *BackgroundInfo) GetFeatureName() string {
	if x != nil {
		return x.FeatureName
	}
	return ""
}

func (x *BackgroundInfo) GetFeatureDescription() string {
	if x != nil {
		return x.FeatureDescription
	}
	return ""
}

func (x *BackgroundInfo) GetPersonalityTraits() []string {
	if x != nil {
		return x.PersonalityTraits
	}
	return nil
}

func (x *BackgroundInfo) GetIdeals() []string {
	if x != nil {
		return x.Ideals
	}
	return nil
}

func (x *BackgroundInfo) GetBonds() []string {
	if x != nil {
		return x.Bonds
	}
	return nil
}

func (x *BackgroundInfo) GetFlaws() []string {
	if x != nil {
		return x.Flaws
	}
	return nil
}

// Detailed feature information for class features, racial traits, etc.
type FeatureInfo struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Level       int32                  `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	ClassName   string                 `protobuf:"bytes,5,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Choices     []*Choice              `protobuf:"bytes,6,rep,name=choices,proto3" json:"choices,omitempty"`
	HasChoices  bool                   `protobuf:"varint,7,opt,name=has_choices,json=hasChoices,proto3" json:"has_choices,omitempty"`
	// Contains spell selection requirements for features that involve spell selection.
	// This field is only populated for features that allow or require selecting spells.
	SpellSelection *SpellSelectionInfo `protobuf:"bytes,8,opt,name=spell_selection,json=spellSelection,proto3" json:"spell_selection,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *FeatureInfo) Reset() {
	*x = FeatureInfo{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeatureInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureInfo) ProtoMessage() {}

func (x *FeatureInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureInfo.ProtoReflect.Descriptor instead.
func (*FeatureInfo) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{65}
}

func (x *FeatureInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FeatureInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FeatureInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FeatureInfo) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *FeatureInfo) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *FeatureInfo) GetChoices() []*Choice {
	if x != nil {
		return x.Choices
	}
	return nil
}

func (x *FeatureInfo) GetHasChoices() bool {
	if x != nil {
		return x.HasChoices
	}
	return false
}

func (x *FeatureInfo) GetSpellSelection() *SpellSelectionInfo {
	if x != nil {
		return x.SpellSelection
	}
	return nil
}

// Programmatic spell selection requirements
type SpellSelectionInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SpellsToSelect  int32                  `protobuf:"varint,1,opt,name=spells_to_select,json=spellsToSelect,proto3" json:"spells_to_select,omitempty"`                                       // Number of spells to select
	SpellLevels     []int32                `protobuf:"varint,2,rep,packed,name=spell_levels,json=spellLevels,proto3" json:"spell_levels,omitempty"`                                           // Allowed spell levels (0 for cantrips)
	SpellLists      []string               `protobuf:"bytes,3,rep,name=spell_lists,json=spellLists,proto3" json:"spell_lists,omitempty"`                                                      // Allowed spell lists (e.g., "wizard", "cleric")
	SelectionType   SpellSelectionType     `protobuf:"varint,4,opt,name=selection_type,json=selectionType,proto3,enum=dnd5e.api.v1alpha1.SpellSelectionType" json:"selection_type,omitempty"` // Type of spell selection system
	RequiresReplace bool                   `protobuf:"varint,5,opt,name=requires_replace,json=requiresReplace,proto3" json:"requires_replace,omitempty"`                                      // Whether spells can be replaced on level up
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SpellSelectionInfo) Reset() {
	*x = SpellSelectionInfo{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpellSelectionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpellSelectionInfo) ProtoMessage() {}

func (x *SpellSelectionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpellSelectionInfo.ProtoReflect.Descriptor instead.
func (*SpellSelectionInfo) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{66}
}

func (x *SpellSelectionInfo) GetSpellsToSelect() int32 {
	if x != nil {
		return x.SpellsToSelect
	}
	return 0
}

func (x *SpellSelectionInfo) GetSpellLevels() []int32 {
	if x != nil {
		return x.SpellLevels
	}
	return nil
}

func (x *SpellSelectionInfo) GetSpellLists() []string {
	if x != nil {
		return x.SpellLists
	}
	return nil
}

func (x *SpellSelectionInfo) GetSelectionType() SpellSelectionType {
	if x != nil {
		return x.SelectionType
	}
	return SpellSelectionType_SPELL_SELECTION_TYPE_UNSPECIFIED
}

func (x *SpellSelectionInfo) GetRequiresReplace() bool {
	if x != nil {
		return x.RequiresReplace
	}
	return false
}

// Request to list races
type ListRacesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Pagination
	PageSize  int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Optional filters
	IncludeSubraces bool `protobuf:"varint,3,opt,name=include_subraces,json=includeSubraces,proto3" json:"include_subraces,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListRacesRequest) Reset() {
	*x = ListRacesRequest{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRacesRequest) ProtoMessage() {}

func (x *ListRacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRacesRequest.ProtoReflect.Descriptor instead.
func (*ListRacesRequest) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{67}
}

func (x *ListRacesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListRacesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListRacesRequest) GetIncludeSubraces() bool {
	if x != nil {
		return x.IncludeSubraces
	}
	return false
}

// Response with race list
type ListRacesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Races         []*RaceInfo            `protobuf:"bytes,1,rep,name=races,proto3" json:"races,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalSize     int32                  `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRacesResponse) Reset() {
	*x = ListRacesResponse{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRacesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRacesResponse) ProtoMessage() {}

func (x *ListRacesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRacesResponse.ProtoReflect.Descriptor instead.
func (*ListRacesResponse) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{68}
}

func (x *ListRacesResponse) GetRaces() []*RaceInfo {
	if x != nil {
		return x.Races
	}
	return nil
}

func (x *ListRacesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListRacesResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

// Request to list classes
type ListClassesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Pagination
	PageSize  int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Optional filters
	IncludeSpellcastersOnly bool `protobuf:"varint,3,opt,name=include_spellcasters_only,json=includeSpellcastersOnly,proto3" json:"include_spellcasters_only,omitempty"`
	IncludeFeatures         bool `protobuf:"varint,4,opt,name=include_features,json=includeFeatures,proto3" json:"include_features,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ListClassesRequest) Reset() {
	*x = ListClassesRequest{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClassesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClassesRequest) ProtoMessage() {}

func (x *ListClassesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClassesRequest.ProtoReflect.Descriptor instead.
func (*ListClassesRequest) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{69}
}

func (x *ListClassesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListClassesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListClassesRequest) GetIncludeSpellcastersOnly() bool {
	if x != nil {
		return x.IncludeSpellcastersOnly
	}
	return false
}

func (x *ListClassesRequest) GetIncludeFeatures() bool {
	if x != nil {
		return x.IncludeFeatures
	}
	return false
}

// Response with class list
type ListClassesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Classes       []*ClassInfo           `protobuf:"bytes,1,rep,name=classes,proto3" json:"classes,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalSize     int32                  `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClassesResponse) Reset() {
	*x = ListClassesResponse{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClassesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClassesResponse) ProtoMessage() {}

func (x *ListClassesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClassesResponse.ProtoReflect.Descriptor instead.
func (*ListClassesResponse) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{70}
}

func (x *ListClassesResponse) GetClasses() []*ClassInfo {
	if x != nil {
		return x.Classes
	}
	return nil
}

func (x *ListClassesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListClassesResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

// Request to list backgrounds
type ListBackgroundsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Pagination
	PageSize      int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBackgroundsRequest) Reset() {
	*x = ListBackgroundsRequest{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBackgroundsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBackgroundsRequest) ProtoMessage() {}

func (x *ListBackgroundsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBackgroundsRequest.ProtoReflect.Descriptor instead.
func (*ListBackgroundsRequest) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{71}
}

func (x *ListBackgroundsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListBackgroundsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// Response with background list
type ListBackgroundsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Backgrounds   []*BackgroundInfo      `protobuf:"bytes,1,rep,name=backgrounds,proto3" json:"backgrounds,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalSize     int32                  `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBackgroundsResponse) Reset() {
	*x = ListBackgroundsResponse{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBackgroundsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBackgroundsResponse) ProtoMessage() {}

func (x *ListBackgroundsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBackgroundsResponse.ProtoReflect.Descriptor instead.
func (*ListBackgroundsResponse) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{72}
}

func (x *ListBackgroundsResponse) GetBackgrounds() []*BackgroundInfo {
	if x != nil {
		return x.Backgrounds
	}
	return nil
}

func (x *ListBackgroundsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListBackgroundsResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

// Request to get detailed race information
type GetRaceDetailsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RaceId        string                 `protobuf:"bytes,1,opt,name=race_id,json=raceId,proto3" json:"race_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRaceDetailsRequest) Reset() {
	*x = GetRaceDetailsRequest{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRaceDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRaceDetailsRequest) ProtoMessage() {}

func (x *GetRaceDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRaceDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetRaceDetailsRequest) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{73}
}

func (x *GetRaceDetailsRequest) GetRaceId() string {
	if x != nil {
		return x.RaceId
	}
	return ""
}

// Response with detailed race information
type GetRaceDetailsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Race          *RaceInfo              `protobuf:"bytes,1,opt,name=race,proto3" json:"race,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRaceDetailsResponse) Reset() {
	*x = GetRaceDetailsResponse{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRaceDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRaceDetailsResponse) ProtoMessage() {}

func (x *GetRaceDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRaceDetailsResponse.ProtoReflect.Descriptor instead.
func (*GetRaceDetailsResponse) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{74}
}

func (x *GetRaceDetailsResponse) GetRace() *RaceInfo {
	if x != nil {
		return x.Race
	}
	return nil
}

// Request to get detailed class information
type GetClassDetailsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClassId       string                 `protobuf:"bytes,1,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClassDetailsRequest) Reset() {
	*x = GetClassDetailsRequest{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClassDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClassDetailsRequest) ProtoMessage() {}

func (x *GetClassDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClassDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetClassDetailsRequest) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{75}
}

func (x *GetClassDetailsRequest) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

// Response with detailed class information
type GetClassDetailsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Class         *ClassInfo             `protobuf:"bytes,1,opt,name=class,proto3" json:"class,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClassDetailsResponse) Reset() {
	*x = GetClassDetailsResponse{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClassDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClassDetailsResponse) ProtoMessage() {}

func (x *GetClassDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClassDetailsResponse.ProtoReflect.Descriptor instead.
func (*GetClassDetailsResponse) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{76}
}

func (x *GetClassDetailsResponse) GetClass() *ClassInfo {
	if x != nil {
		return x.Class
	}
	return nil
}

// Request to get detailed background information
type GetBackgroundDetailsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BackgroundId  string                 `protobuf:"bytes,1,opt,name=background_id,json=backgroundId,proto3" json:"background_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBackgroundDetailsRequest) Reset() {
	*x = GetBackgroundDetailsRequest{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBackgroundDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBackgroundDetailsRequest) ProtoMessage() {}

func (x *GetBackgroundDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBackgroundDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetBackgroundDetailsRequest) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{77}
}

func (x *GetBackgroundDetailsRequest) GetBackgroundId() string {
	if x != nil {
		return x.BackgroundId
	}
	return ""
}

// Response with detailed background information
type GetBackgroundDetailsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Background    *BackgroundInfo        `protobuf:"bytes,1,opt,name=background,proto3" json:"background,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBackgroundDetailsResponse) Reset() {
	*x = GetBackgroundDetailsResponse{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBackgroundDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBackgroundDetailsResponse) ProtoMessage() {}

func (x *GetBackgroundDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBackgroundDetailsResponse.ProtoReflect.Descriptor instead.
func (*GetBackgroundDetailsResponse) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{78}
}

func (x *GetBackgroundDetailsResponse) GetBackground() *BackgroundInfo {
	if x != nil {
		return x.Background
	}
	return nil
}

// Request for a specific feature by its ID
type GetFeatureRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FeatureId     string                 `protobuf:"bytes,1,opt,name=feature_id,json=featureId,proto3" json:"feature_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFeatureRequest) Reset() {
	*x = GetFeatureRequest{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFeatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeatureRequest) ProtoMessage() {}

func (x *GetFeatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeatureRequest.ProtoReflect.Descriptor instead.
func (*GetFeatureRequest) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{79}
}

func (x *GetFeatureRequest) GetFeatureId() string {
	if x != nil {
		return x.FeatureId
	}
	return ""
}

// Response with detailed feature information
type GetFeatureResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Feature       *FeatureInfo           `protobuf:"bytes,1,opt,name=feature,proto3" json:"feature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFeatureResponse) Reset() {
	*x = GetFeatureResponse{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFeatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeatureResponse) ProtoMessage() {}

func (x *GetFeatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeatureResponse.ProtoReflect.Descriptor instead.
func (*GetFeatureResponse) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{80}
}

func (x *GetFeatureResponse) GetFeature() *FeatureInfo {
	if x != nil {
		return x.Feature
	}
	return nil
}

// Request to roll ability scores for a character draft
type RollAbilityScoresRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DraftId       string                 `protobuf:"bytes,1,opt,name=draft_id,json=draftId,proto3" json:"draft_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollAbilityScoresRequest) Reset() {
	*x = RollAbilityScoresRequest{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollAbilityScoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollAbilityScoresRequest) ProtoMessage() {}

func (x *RollAbilityScoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollAbilityScoresRequest.ProtoReflect.Descriptor instead.
func (*RollAbilityScoresRequest) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{81}
}

func (x *RollAbilityScoresRequest) GetDraftId() string {
	if x != nil {
		return x.DraftId
	}
	return ""
}

// A single ability score roll (4d6 drop lowest)
type AbilityScoreRoll struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for this roll (roll_1, roll_2, etc.)
	RollId string `protobuf:"bytes,1,opt,name=roll_id,json=rollId,proto3" json:"roll_id,omitempty"`
	// The individual dice that were rolled (4 dice)
	Dice []int32 `protobuf:"varint,2,rep,packed,name=dice,proto3" json:"dice,omitempty"`
	// The sum of the highest 3 dice (final ability score value)
	Total int32 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// The dice value that was dropped (lowest)
	Dropped int32 `protobuf:"varint,4,opt,name=dropped,proto3" json:"dropped,omitempty"`
	// Human readable notation (e.g., "4d6 drop lowest: [6,5,4,1] = 15")
	Notation      string `protobuf:"bytes,5,opt,name=notation,proto3" json:"notation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AbilityScoreRoll) Reset() {
	*x = AbilityScoreRoll{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AbilityScoreRoll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbilityScoreRoll) ProtoMessage() {}

func (x *AbilityScoreRoll) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbilityScoreRoll.ProtoReflect.Descriptor instead.
func (*AbilityScoreRoll) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{82}
}

func (x *AbilityScoreRoll) GetRollId() string {
	if x != nil {
		return x.RollId
	}
	return ""
}

func (x *AbilityScoreRoll) GetDice() []int32 {
	if x != nil {
		return x.Dice
	}
	return nil
}

func (x *AbilityScoreRoll) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *AbilityScoreRoll) GetDropped() int32 {
	if x != nil {
		return x.Dropped
	}
	return 0
}

func (x *AbilityScoreRoll) GetNotation() string {
	if x != nil {
		return x.Notation
	}
	return ""
}

// Response containing 6 ability score rolls
type RollAbilityScoresResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Array of 6 rolls that can be assigned to abilities
	Rolls []*AbilityScoreRoll `protobuf:"bytes,1,rep,name=rolls,proto3" json:"rolls,omitempty"`
	// Unix timestamp when these rolls expire (15 minutes from creation)
	ExpiresAt     int64 `protobuf:"varint,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollAbilityScoresResponse) Reset() {
	*x = RollAbilityScoresResponse{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollAbilityScoresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollAbilityScoresResponse) ProtoMessage() {}

func (x *RollAbilityScoresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollAbilityScoresResponse.ProtoReflect.Descriptor instead.
func (*RollAbilityScoresResponse) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{83}
}

func (x *RollAbilityScoresResponse) GetRolls() []*AbilityScoreRoll {
	if x != nil {
		return x.Rolls
	}
	return nil
}

func (x *RollAbilityScoresResponse) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

// Roll assignment mapping for ability scores
type RollAssignments struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	StrengthRollId     string                 `protobuf:"bytes,1,opt,name=strength_roll_id,json=strengthRollId,proto3" json:"strength_roll_id,omitempty"`
	DexterityRollId    string                 `protobuf:"bytes,2,opt,name=dexterity_roll_id,json=dexterityRollId,proto3" json:"dexterity_roll_id,omitempty"`
	ConstitutionRollId string                 `protobuf:"bytes,3,opt,name=constitution_roll_id,json=constitutionRollId,proto3" json:"constitution_roll_id,omitempty"`
	IntelligenceRollId string                 `protobuf:"bytes,4,opt,name=intelligence_roll_id,json=intelligenceRollId,proto3" json:"intelligence_roll_id,omitempty"`
	WisdomRollId       string                 `protobuf:"bytes,5,opt,name=wisdom_roll_id,json=wisdomRollId,proto3" json:"wisdom_roll_id,omitempty"`
	CharismaRollId     string                 `protobuf:"bytes,6,opt,name=charisma_roll_id,json=charismaRollId,proto3" json:"charisma_roll_id,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *RollAssignments) Reset() {
	*x = RollAssignments{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollAssignments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollAssignments) ProtoMessage() {}

func (x *RollAssignments) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollAssignments.ProtoReflect.Descriptor instead.
func (*RollAssignments) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{84}
}

func (x *RollAssignments) GetStrengthRollId() string {
	if x != nil {
		return x.StrengthRollId
	}
	return ""
}

func (x *RollAssignments) GetDexterityRollId() string {
	if x != nil {
		return x.DexterityRollId
	}
	return ""
}

func (x *RollAssignments) GetConstitutionRollId() string {
	if x != nil {
		return x.ConstitutionRollId
	}
	return ""
}

func (x *RollAssignments) GetIntelligenceRollId() string {
	if x != nil {
		return x.IntelligenceRollId
	}
	return ""
}

func (x *RollAssignments) GetWisdomRollId() string {
	if x != nil {
		return x.WisdomRollId
	}
	return ""
}

func (x *RollAssignments) GetCharismaRollId() string {
	if x != nil {
		return x.CharismaRollId
	}
	return ""
}

// Cost information for equipment
type Cost struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Quantity      int32                  `protobuf:"varint,1,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Unit          string                 `protobuf:"bytes,2,opt,name=unit,proto3" json:"unit,omitempty"` // "gp", "sp", "cp", etc.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Cost) Reset() {
	*x = Cost{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cost) ProtoMessage() {}

func (x *Cost) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cost.ProtoReflect.Descriptor instead.
func (*Cost) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{85}
}

func (x *Cost) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Cost) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

// Weight information for equipment
type Weight struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Quantity      int32                  `protobuf:"varint,1,opt,name=quantity,proto3" json:"quantity,omitempty"` // Weight value in fixed-point representation (e.g., grams or ounces)
	Unit          string                 `protobuf:"bytes,2,opt,name=unit,proto3" json:"unit,omitempty"`          // Unit of measurement (e.g., "g", "oz", "lbs")
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Weight) Reset() {
	*x = Weight{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Weight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Weight) ProtoMessage() {}

func (x *Weight) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Weight.ProtoReflect.Descriptor instead.
func (*Weight) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{86}
}

func (x *Weight) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Weight) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

// Equipment item
type Equipment struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Category    string                 `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"` // "simple-weapon", "martial-weapon", etc.
	Cost        *Cost                  `protobuf:"bytes,4,opt,name=cost,proto3" json:"cost,omitempty"`
	Weight      *Weight                `protobuf:"bytes,5,opt,name=weight,proto3" json:"weight,omitempty"`
	Description string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	// Equipment type-specific data
	//
	// Types that are valid to be assigned to EquipmentData:
	//
	//	*Equipment_WeaponData
	//	*Equipment_ArmorData
	//	*Equipment_GearData
	EquipmentData isEquipment_EquipmentData `protobuf_oneof:"equipment_data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Equipment) Reset() {
	*x = Equipment{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Equipment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Equipment) ProtoMessage() {}

func (x *Equipment) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Equipment.ProtoReflect.Descriptor instead.
func (*Equipment) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{87}
}

func (x *Equipment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Equipment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Equipment) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Equipment) GetCost() *Cost {
	if x != nil {
		return x.Cost
	}
	return nil
}

func (x *Equipment) GetWeight() *Weight {
	if x != nil {
		return x.Weight
	}
	return nil
}

func (x *Equipment) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Equipment) GetEquipmentData() isEquipment_EquipmentData {
	if x != nil {
		return x.EquipmentData
	}
	return nil
}

func (x *Equipment) GetWeaponData() *WeaponData {
	if x != nil {
		if x, ok := x.EquipmentData.(*Equipment_WeaponData); ok {
			return x.WeaponData
		}
	}
	return nil
}

func (x *Equipment) GetArmorData() *ArmorData {
	if x != nil {
		if x, ok := x.EquipmentData.(*Equipment_ArmorData); ok {
			return x.ArmorData
		}
	}
	return nil
}

func (x *Equipment) GetGearData() *GearData {
	if x != nil {
		if x, ok := x.EquipmentData.(*Equipment_GearData); ok {
			return x.GearData
		}
	}
	return nil
}

type isEquipment_EquipmentData interface {
	isEquipment_EquipmentData()
}

type Equipment_WeaponData struct {
	WeaponData *WeaponData `protobuf:"bytes,7,opt,name=weapon_data,json=weaponData,proto3,oneof"`
}

type Equipment_ArmorData struct {
	ArmorData *ArmorData `protobuf:"bytes,8,opt,name=armor_data,json=armorData,proto3,oneof"`
}

type Equipment_GearData struct {
	GearData *GearData `protobuf:"bytes,9,opt,name=gear_data,json=gearData,proto3,oneof"`
}

func (*Equipment_WeaponData) isEquipment_EquipmentData() {}

func (*Equipment_ArmorData) isEquipment_EquipmentData() {}

func (*Equipment_GearData) isEquipment_EquipmentData() {}

// Weapon-specific data
type WeaponData struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	WeaponCategory string                 `protobuf:"bytes,1,opt,name=weapon_category,json=weaponCategory,proto3" json:"weapon_category,omitempty"` // "simple", "martial"
	DamageDice     string                 `protobuf:"bytes,2,opt,name=damage_dice,json=damageDice,proto3" json:"damage_dice,omitempty"`             // "1d6", "1d8", etc.
	DamageType     string                 `protobuf:"bytes,3,opt,name=damage_type,json=damageType,proto3" json:"damage_type,omitempty"`             // "slashing", "piercing", etc.
	Properties     []string               `protobuf:"bytes,4,rep,name=properties,proto3" json:"properties,omitempty"`                               // "light", "finesse", etc.
	Range          string                 `protobuf:"bytes,5,opt,name=range,proto3" json:"range,omitempty"`                                         // "melee", "ranged"
	NormalRange    int32                  `protobuf:"varint,6,opt,name=normal_range,json=normalRange,proto3" json:"normal_range,omitempty"`         // range in feet for ranged weapons
	LongRange      int32                  `protobuf:"varint,7,opt,name=long_range,json=longRange,proto3" json:"long_range,omitempty"`               // long range in feet for ranged weapons
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *WeaponData) Reset() {
	*x = WeaponData{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WeaponData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeaponData) ProtoMessage() {}

func (x *WeaponData) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeaponData.ProtoReflect.Descriptor instead.
func (*WeaponData) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{88}
}

func (x *WeaponData) GetWeaponCategory() string {
	if x != nil {
		return x.WeaponCategory
	}
	return ""
}

func (x *WeaponData) GetDamageDice() string {
	if x != nil {
		return x.DamageDice
	}
	return ""
}

func (x *WeaponData) GetDamageType() string {
	if x != nil {
		return x.DamageType
	}
	return ""
}

func (x *WeaponData) GetProperties() []string {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *WeaponData) GetRange() string {
	if x != nil {
		return x.Range
	}
	return ""
}

func (x *WeaponData) GetNormalRange() int32 {
	if x != nil {
		return x.NormalRange
	}
	return 0
}

func (x *WeaponData) GetLongRange() int32 {
	if x != nil {
		return x.LongRange
	}
	return 0
}

// Armor-specific data
type ArmorData struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ArmorCategory       string                 `protobuf:"bytes,1,opt,name=armor_category,json=armorCategory,proto3" json:"armor_category,omitempty"` // "light", "medium", "heavy", "shield"
	BaseAc              int32                  `protobuf:"varint,2,opt,name=base_ac,json=baseAc,proto3" json:"base_ac,omitempty"`
	DexBonus            bool                   `protobuf:"varint,3,opt,name=dex_bonus,json=dexBonus,proto3" json:"dex_bonus,omitempty"`
	HasDexLimit         bool                   `protobuf:"varint,4,opt,name=has_dex_limit,json=hasDexLimit,proto3" json:"has_dex_limit,omitempty"` // Indicates if max_dex_bonus is applicable
	MaxDexBonus         int32                  `protobuf:"varint,5,opt,name=max_dex_bonus,json=maxDexBonus,proto3" json:"max_dex_bonus,omitempty"` // Maximum Dexterity bonus to AC, valid only if has_dex_limit is true
	StrMinimum          int32                  `protobuf:"varint,6,opt,name=str_minimum,json=strMinimum,proto3" json:"str_minimum,omitempty"`
	StealthDisadvantage bool                   `protobuf:"varint,7,opt,name=stealth_disadvantage,json=stealthDisadvantage,proto3" json:"stealth_disadvantage,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ArmorData) Reset() {
	*x = ArmorData{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArmorData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArmorData) ProtoMessage() {}

func (x *ArmorData) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArmorData.ProtoReflect.Descriptor instead.
func (*ArmorData) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{89}
}

func (x *ArmorData) GetArmorCategory() string {
	if x != nil {
		return x.ArmorCategory
	}
	return ""
}

func (x *ArmorData) GetBaseAc() int32 {
	if x != nil {
		return x.BaseAc
	}
	return 0
}

func (x *ArmorData) GetDexBonus() bool {
	if x != nil {
		return x.DexBonus
	}
	return false
}

func (x *ArmorData) GetHasDexLimit() bool {
	if x != nil {
		return x.HasDexLimit
	}
	return false
}

func (x *ArmorData) GetMaxDexBonus() int32 {
	if x != nil {
		return x.MaxDexBonus
	}
	return 0
}

func (x *ArmorData) GetStrMinimum() int32 {
	if x != nil {
		return x.StrMinimum
	}
	return 0
}

func (x *ArmorData) GetStealthDisadvantage() bool {
	if x != nil {
		return x.StealthDisadvantage
	}
	return false
}

// General gear data
type GearData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GearCategory  string                 `protobuf:"bytes,1,opt,name=gear_category,json=gearCategory,proto3" json:"gear_category,omitempty"` // "adventuring-gear", "tools", etc.
	Properties    []string               `protobuf:"bytes,2,rep,name=properties,proto3" json:"properties,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GearData) Reset() {
	*x = GearData{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[90]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GearData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GearData) ProtoMessage() {}

func (x *GearData) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[90]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GearData.ProtoReflect.Descriptor instead.
func (*GearData) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{90}
}

func (x *GearData) GetGearCategory() string {
	if x != nil {
		return x.GearCategory
	}
	return ""
}

func (x *GearData) GetProperties() []string {
	if x != nil {
		return x.Properties
	}
	return nil
}

// Equipment slots for a character
type EquipmentSlots struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Combat equipment
	MainHand *InventoryItem `protobuf:"bytes,1,opt,name=main_hand,json=mainHand,proto3" json:"main_hand,omitempty"`
	OffHand  *InventoryItem `protobuf:"bytes,2,opt,name=off_hand,json=offHand,proto3" json:"off_hand,omitempty"`
	// Armor slots
	Armor  *InventoryItem `protobuf:"bytes,3,opt,name=armor,proto3" json:"armor,omitempty"`
	Helmet *InventoryItem `protobuf:"bytes,4,opt,name=helmet,proto3" json:"helmet,omitempty"`
	Boots  *InventoryItem `protobuf:"bytes,5,opt,name=boots,proto3" json:"boots,omitempty"`
	Gloves *InventoryItem `protobuf:"bytes,6,opt,name=gloves,proto3" json:"gloves,omitempty"`
	Cloak  *InventoryItem `protobuf:"bytes,7,opt,name=cloak,proto3" json:"cloak,omitempty"`
	// Accessory slots
	Amulet        *InventoryItem `protobuf:"bytes,8,opt,name=amulet,proto3" json:"amulet,omitempty"`
	Ring_1        *InventoryItem `protobuf:"bytes,9,opt,name=ring_1,json=ring1,proto3" json:"ring_1,omitempty"`
	Ring_2        *InventoryItem `protobuf:"bytes,10,opt,name=ring_2,json=ring2,proto3" json:"ring_2,omitempty"`
	Belt          *InventoryItem `protobuf:"bytes,11,opt,name=belt,proto3" json:"belt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EquipmentSlots) Reset() {
	*x = EquipmentSlots{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[91]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EquipmentSlots) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipmentSlots) ProtoMessage() {}

func (x *EquipmentSlots) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[91]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipmentSlots.ProtoReflect.Descriptor instead.
func (*EquipmentSlots) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{91}
}

func (x *EquipmentSlots) GetMainHand() *InventoryItem {
	if x != nil {
		return x.MainHand
	}
	return nil
}

func (x *EquipmentSlots) GetOffHand() *InventoryItem {
	if x != nil {
		return x.OffHand
	}
	return nil
}

func (x *EquipmentSlots) GetArmor() *InventoryItem {
	if x != nil {
		return x.Armor
	}
	return nil
}

func (x *EquipmentSlots) GetHelmet() *InventoryItem {
	if x != nil {
		return x.Helmet
	}
	return nil
}

func (x *EquipmentSlots) GetBoots() *InventoryItem {
	if x != nil {
		return x.Boots
	}
	return nil
}

func (x *EquipmentSlots) GetGloves() *InventoryItem {
	if x != nil {
		return x.Gloves
	}
	return nil
}

func (x *EquipmentSlots) GetCloak() *InventoryItem {
	if x != nil {
		return x.Cloak
	}
	return nil
}

func (x *EquipmentSlots) GetAmulet() *InventoryItem {
	if x != nil {
		return x.Amulet
	}
	return nil
}

func (x *EquipmentSlots) GetRing_1() *InventoryItem {
	if x != nil {
		return x.Ring_1
	}
	return nil
}

func (x *EquipmentSlots) GetRing_2() *InventoryItem {
	if x != nil {
		return x.Ring_2
	}
	return nil
}

func (x *EquipmentSlots) GetBelt() *InventoryItem {
	if x != nil {
		return x.Belt
	}
	return nil
}

// An item in inventory (equipped or not)
type InventoryItem struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	ItemId     string                 `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`             // Reference to Equipment.id
	Quantity   int32                  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`                      // For stackable items
	IsAttuned  bool                   `protobuf:"varint,3,opt,name=is_attuned,json=isAttuned,proto3" json:"is_attuned,omitempty"`   // For magic items requiring attunement
	CustomName string                 `protobuf:"bytes,4,opt,name=custom_name,json=customName,proto3" json:"custom_name,omitempty"` // Optional custom name (e.g., "My Lucky Sword")
	// Denormalized equipment data for quick access
	Equipment     *Equipment `protobuf:"bytes,5,opt,name=equipment,proto3" json:"equipment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InventoryItem) Reset() {
	*x = InventoryItem{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[92]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InventoryItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryItem) ProtoMessage() {}

func (x *InventoryItem) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[92]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryItem.ProtoReflect.Descriptor instead.
func (*InventoryItem) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{92}
}

func (x *InventoryItem) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *InventoryItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *InventoryItem) GetIsAttuned() bool {
	if x != nil {
		return x.IsAttuned
	}
	return false
}

func (x *InventoryItem) GetCustomName() string {
	if x != nil {
		return x.CustomName
	}
	return ""
}

func (x *InventoryItem) GetEquipment() *Equipment {
	if x != nil {
		return x.Equipment
	}
	return nil
}

// Encumbrance and carrying capacity
type EncumbranceInfo struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	CurrentWeight    int32                  `protobuf:"varint,1,opt,name=current_weight,json=currentWeight,proto3" json:"current_weight,omitempty"`          // Total weight carried (in tenths of pounds for 0.1-pound precision)
	CarryingCapacity int32                  `protobuf:"varint,2,opt,name=carrying_capacity,json=carryingCapacity,proto3" json:"carrying_capacity,omitempty"` // Max weight before encumbered (in tenths of pounds for 0.1-pound precision)
	MaxCapacity      int32                  `protobuf:"varint,3,opt,name=max_capacity,json=maxCapacity,proto3" json:"max_capacity,omitempty"`                // Max weight before immobilized (in tenths of pounds for 0.1-pound precision)
	Level            EncumbranceLevel       `protobuf:"varint,4,opt,name=level,proto3,enum=dnd5e.api.v1alpha1.EncumbranceLevel" json:"level,omitempty"`      // Current encumbrance level
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *EncumbranceInfo) Reset() {
	*x = EncumbranceInfo{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[93]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncumbranceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncumbranceInfo) ProtoMessage() {}

func (x *EncumbranceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[93]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncumbranceInfo.ProtoReflect.Descriptor instead.
func (*EncumbranceInfo) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{93}
}

func (x *EncumbranceInfo) GetCurrentWeight() int32 {
	if x != nil {
		return x.CurrentWeight
	}
	return 0
}

func (x *EncumbranceInfo) GetCarryingCapacity() int32 {
	if x != nil {
		return x.CarryingCapacity
	}
	return 0
}

func (x *EncumbranceInfo) GetMaxCapacity() int32 {
	if x != nil {
		return x.MaxCapacity
	}
	return 0
}

func (x *EncumbranceInfo) GetLevel() EncumbranceLevel {
	if x != nil {
		return x.Level
	}
	return EncumbranceLevel_ENCUMBRANCE_LEVEL_UNSPECIFIED
}

// Spell item
type Spell struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Level         int32                  `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`                               // 0-9 (0 = cantrips)
	School        string                 `protobuf:"bytes,4,opt,name=school,proto3" json:"school,omitempty"`                              // "evocation", "abjuration", etc.
	Classes       []string               `protobuf:"bytes,5,rep,name=classes,proto3" json:"classes,omitempty"`                            // Classes that can cast this spell
	CastingTime   string                 `protobuf:"bytes,6,opt,name=casting_time,json=castingTime,proto3" json:"casting_time,omitempty"` // "1 action", "1 bonus action", etc.
	Range         string                 `protobuf:"bytes,7,opt,name=range,proto3" json:"range,omitempty"`                                // "Touch", "30 feet", etc.
	Duration      string                 `protobuf:"bytes,8,opt,name=duration,proto3" json:"duration,omitempty"`                          // "Instantaneous", "1 minute", etc.
	Ritual        bool                   `protobuf:"varint,9,opt,name=ritual,proto3" json:"ritual,omitempty"`
	Concentration bool                   `protobuf:"varint,10,opt,name=concentration,proto3" json:"concentration,omitempty"`
	Components    string                 `protobuf:"bytes,11,opt,name=components,proto3" json:"components,omitempty"` // "V, S, M", etc.
	Description   string                 `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
	// Spell damage information
	Damage *SpellDamage `protobuf:"bytes,13,opt,name=damage,proto3" json:"damage,omitempty"`
	// Area of effect
	AreaOfEffect  *AreaOfEffect `protobuf:"bytes,14,opt,name=area_of_effect,json=areaOfEffect,proto3" json:"area_of_effect,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Spell) Reset() {
	*x = Spell{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[94]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Spell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Spell) ProtoMessage() {}

func (x *Spell) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[94]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Spell.ProtoReflect.Descriptor instead.
func (*Spell) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{94}
}

func (x *Spell) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Spell) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Spell) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Spell) GetSchool() string {
	if x != nil {
		return x.School
	}
	return ""
}

func (x *Spell) GetClasses() []string {
	if x != nil {
		return x.Classes
	}
	return nil
}

func (x *Spell) GetCastingTime() string {
	if x != nil {
		return x.CastingTime
	}
	return ""
}

func (x *Spell) GetRange() string {
	if x != nil {
		return x.Range
	}
	return ""
}

func (x *Spell) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *Spell) GetRitual() bool {
	if x != nil {
		return x.Ritual
	}
	return false
}

func (x *Spell) GetConcentration() bool {
	if x != nil {
		return x.Concentration
	}
	return false
}

func (x *Spell) GetComponents() string {
	if x != nil {
		return x.Components
	}
	return ""
}

func (x *Spell) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Spell) GetDamage() *SpellDamage {
	if x != nil {
		return x.Damage
	}
	return nil
}

func (x *Spell) GetAreaOfEffect() *AreaOfEffect {
	if x != nil {
		return x.AreaOfEffect
	}
	return nil
}

// New unified choice data structure for the toolkit refactoring
type ChoiceData struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Category ChoiceCategory         `protobuf:"varint,1,opt,name=category,proto3,enum=dnd5e.api.v1alpha1.ChoiceCategory" json:"category,omitempty"` // Type of choice (skills, languages, etc.)
	Source   ChoiceSource           `protobuf:"varint,2,opt,name=source,proto3,enum=dnd5e.api.v1alpha1.ChoiceSource" json:"source,omitempty"`       // Where this choice came from
	ChoiceId string                 `protobuf:"bytes,3,opt,name=choice_id,json=choiceId,proto3" json:"choice_id,omitempty"`                         // Specific choice identifier
	// Type-safe selection using oneof pattern (matching toolkit refactoring)
	//
	// Types that are valid to be assigned to Selection:
	//
	//	*ChoiceData_Name
	//	*ChoiceData_Skills
	//	*ChoiceData_Languages
	//	*ChoiceData_AbilityScores
	//	*ChoiceData_FightingStyle
	//	*ChoiceData_Equipment
	//	*ChoiceData_Race
	//	*ChoiceData_Class
	//	*ChoiceData_Background
	//	*ChoiceData_Spells
	//	*ChoiceData_Cantrips
	//	*ChoiceData_Expertise
	//	*ChoiceData_Traits
	//	*ChoiceData_ToolProficiencies
	Selection     isChoiceData_Selection `protobuf_oneof:"selection"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChoiceData) Reset() {
	*x = ChoiceData{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[95]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChoiceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChoiceData) ProtoMessage() {}

func (x *ChoiceData) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[95]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChoiceData.ProtoReflect.Descriptor instead.
func (*ChoiceData) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{95}
}

func (x *ChoiceData) GetCategory() ChoiceCategory {
	if x != nil {
		return x.Category
	}
	return ChoiceCategory_CHOICE_CATEGORY_UNSPECIFIED
}

func (x *ChoiceData) GetSource() ChoiceSource {
	if x != nil {
		return x.Source
	}
	return ChoiceSource_CHOICE_SOURCE_UNSPECIFIED
}

func (x *ChoiceData) GetChoiceId() string {
	if x != nil {
		return x.ChoiceId
	}
	return ""
}

func (x *ChoiceData) GetSelection() isChoiceData_Selection {
	if x != nil {
		return x.Selection
	}
	return nil
}

func (x *ChoiceData) GetName() string {
	if x != nil {
		if x, ok := x.Selection.(*ChoiceData_Name); ok {
			return x.Name
		}
	}
	return ""
}

func (x *ChoiceData) GetSkills() *SkillList {
	if x != nil {
		if x, ok := x.Selection.(*ChoiceData_Skills); ok {
			return x.Skills
		}
	}
	return nil
}

func (x *ChoiceData) GetLanguages() *LanguageList {
	if x != nil {
		if x, ok := x.Selection.(*ChoiceData_Languages); ok {
			return x.Languages
		}
	}
	return nil
}

func (x *ChoiceData) GetAbilityScores() *AbilityScores {
	if x != nil {
		if x, ok := x.Selection.(*ChoiceData_AbilityScores); ok {
			return x.AbilityScores
		}
	}
	return nil
}

func (x *ChoiceData) GetFightingStyle() string {
	if x != nil {
		if x, ok := x.Selection.(*ChoiceData_FightingStyle); ok {
			return x.FightingStyle
		}
	}
	return ""
}

func (x *ChoiceData) GetEquipment() *EquipmentList {
	if x != nil {
		if x, ok := x.Selection.(*ChoiceData_Equipment); ok {
			return x.Equipment
		}
	}
	return nil
}

func (x *ChoiceData) GetRace() *RaceChoice {
	if x != nil {
		if x, ok := x.Selection.(*ChoiceData_Race); ok {
			return x.Race
		}
	}
	return nil
}

func (x *ChoiceData) GetClass() *ClassChoice {
	if x != nil {
		if x, ok := x.Selection.(*ChoiceData_Class); ok {
			return x.Class
		}
	}
	return nil
}

func (x *ChoiceData) GetBackground() Background {
	if x != nil {
		if x, ok := x.Selection.(*ChoiceData_Background); ok {
			return x.Background
		}
	}
	return Background_BACKGROUND_UNSPECIFIED
}

func (x *ChoiceData) GetSpells() *SpellList {
	if x != nil {
		if x, ok := x.Selection.(*ChoiceData_Spells); ok {
			return x.Spells
		}
	}
	return nil
}

func (x *ChoiceData) GetCantrips() *CantripList {
	if x != nil {
		if x, ok := x.Selection.(*ChoiceData_Cantrips); ok {
			return x.Cantrips
		}
	}
	return nil
}

func (x *ChoiceData) GetExpertise() *ExpertiseList {
	if x != nil {
		if x, ok := x.Selection.(*ChoiceData_Expertise); ok {
			return x.Expertise
		}
	}
	return nil
}

func (x *ChoiceData) GetTraits() *TraitList {
	if x != nil {
		if x, ok := x.Selection.(*ChoiceData_Traits); ok {
			return x.Traits
		}
	}
	return nil
}

func (x *ChoiceData) GetToolProficiencies() *ToolProficiencyList {
	if x != nil {
		if x, ok := x.Selection.(*ChoiceData_ToolProficiencies); ok {
			return x.ToolProficiencies
		}
	}
	return nil
}

type isChoiceData_Selection interface {
	isChoiceData_Selection()
}

type ChoiceData_Name struct {
	Name string `protobuf:"bytes,4,opt,name=name,proto3,oneof"`
}

type ChoiceData_Skills struct {
	Skills *SkillList `protobuf:"bytes,5,opt,name=skills,proto3,oneof"`
}

type ChoiceData_Languages struct {
	Languages *LanguageList `protobuf:"bytes,6,opt,name=languages,proto3,oneof"`
}

type ChoiceData_AbilityScores struct {
	AbilityScores *AbilityScores `protobuf:"bytes,7,opt,name=ability_scores,json=abilityScores,proto3,oneof"`
}

type ChoiceData_FightingStyle struct {
	FightingStyle string `protobuf:"bytes,8,opt,name=fighting_style,json=fightingStyle,proto3,oneof"`
}

type ChoiceData_Equipment struct {
	Equipment *EquipmentList `protobuf:"bytes,9,opt,name=equipment,proto3,oneof"`
}

type ChoiceData_Race struct {
	Race *RaceChoice `protobuf:"bytes,10,opt,name=race,proto3,oneof"`
}

type ChoiceData_Class struct {
	Class *ClassChoice `protobuf:"bytes,11,opt,name=class,proto3,oneof"`
}

type ChoiceData_Background struct {
	Background Background `protobuf:"varint,12,opt,name=background,proto3,enum=dnd5e.api.v1alpha1.Background,oneof"`
}

type ChoiceData_Spells struct {
	Spells *SpellList `protobuf:"bytes,13,opt,name=spells,proto3,oneof"`
}

type ChoiceData_Cantrips struct {
	Cantrips *CantripList `protobuf:"bytes,14,opt,name=cantrips,proto3,oneof"`
}

type ChoiceData_Expertise struct {
	Expertise *ExpertiseList `protobuf:"bytes,15,opt,name=expertise,proto3,oneof"`
}

type ChoiceData_Traits struct {
	Traits *TraitList `protobuf:"bytes,16,opt,name=traits,proto3,oneof"`
}

type ChoiceData_ToolProficiencies struct {
	ToolProficiencies *ToolProficiencyList `protobuf:"bytes,17,opt,name=tool_proficiencies,json=toolProficiencies,proto3,oneof"`
}

func (*ChoiceData_Name) isChoiceData_Selection() {}

func (*ChoiceData_Skills) isChoiceData_Selection() {}

func (*ChoiceData_Languages) isChoiceData_Selection() {}

func (*ChoiceData_AbilityScores) isChoiceData_Selection() {}

func (*ChoiceData_FightingStyle) isChoiceData_Selection() {}

func (*ChoiceData_Equipment) isChoiceData_Selection() {}

func (*ChoiceData_Race) isChoiceData_Selection() {}

func (*ChoiceData_Class) isChoiceData_Selection() {}

func (*ChoiceData_Background) isChoiceData_Selection() {}

func (*ChoiceData_Spells) isChoiceData_Selection() {}

func (*ChoiceData_Cantrips) isChoiceData_Selection() {}

func (*ChoiceData_Expertise) isChoiceData_Selection() {}

func (*ChoiceData_Traits) isChoiceData_Selection() {}

func (*ChoiceData_ToolProficiencies) isChoiceData_Selection() {}

// Wrapper messages for repeated fields in oneof
type SkillList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Skills        []Skill                `protobuf:"varint,1,rep,packed,name=skills,proto3,enum=dnd5e.api.v1alpha1.Skill" json:"skills,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SkillList) Reset() {
	*x = SkillList{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[96]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SkillList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkillList) ProtoMessage() {}

func (x *SkillList) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[96]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkillList.ProtoReflect.Descriptor instead.
func (*SkillList) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{96}
}

func (x *SkillList) GetSkills() []Skill {
	if x != nil {
		return x.Skills
	}
	return nil
}

type LanguageList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Languages     []Language             `protobuf:"varint,1,rep,packed,name=languages,proto3,enum=dnd5e.api.v1alpha1.Language" json:"languages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LanguageList) Reset() {
	*x = LanguageList{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[97]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LanguageList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LanguageList) ProtoMessage() {}

func (x *LanguageList) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[97]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LanguageList.ProtoReflect.Descriptor instead.
func (*LanguageList) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{97}
}

func (x *LanguageList) GetLanguages() []Language {
	if x != nil {
		return x.Languages
	}
	return nil
}

type EquipmentList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []string               `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EquipmentList) Reset() {
	*x = EquipmentList{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[98]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EquipmentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipmentList) ProtoMessage() {}

func (x *EquipmentList) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[98]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipmentList.ProtoReflect.Descriptor instead.
func (*EquipmentList) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{98}
}

func (x *EquipmentList) GetItems() []string {
	if x != nil {
		return x.Items
	}
	return nil
}

type SpellList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Spells        []string               `protobuf:"bytes,1,rep,name=spells,proto3" json:"spells,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpellList) Reset() {
	*x = SpellList{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[99]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpellList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpellList) ProtoMessage() {}

func (x *SpellList) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[99]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpellList.ProtoReflect.Descriptor instead.
func (*SpellList) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{99}
}

func (x *SpellList) GetSpells() []string {
	if x != nil {
		return x.Spells
	}
	return nil
}

type CantripList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cantrips      []string               `protobuf:"bytes,1,rep,name=cantrips,proto3" json:"cantrips,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CantripList) Reset() {
	*x = CantripList{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[100]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CantripList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CantripList) ProtoMessage() {}

func (x *CantripList) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[100]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CantripList.ProtoReflect.Descriptor instead.
func (*CantripList) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{100}
}

func (x *CantripList) GetCantrips() []string {
	if x != nil {
		return x.Cantrips
	}
	return nil
}

type ExpertiseList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Skills        []string               `protobuf:"bytes,1,rep,name=skills,proto3" json:"skills,omitempty"` // Skill names that get expertise (double proficiency)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExpertiseList) Reset() {
	*x = ExpertiseList{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[101]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpertiseList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpertiseList) ProtoMessage() {}

func (x *ExpertiseList) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[101]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpertiseList.ProtoReflect.Descriptor instead.
func (*ExpertiseList) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{101}
}

func (x *ExpertiseList) GetSkills() []string {
	if x != nil {
		return x.Skills
	}
	return nil
}

type TraitList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Traits        []string               `protobuf:"bytes,1,rep,name=traits,proto3" json:"traits,omitempty"` // Racial or class trait selections (e.g., "draconic_ancestry_red", "fighting_style_defense")
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TraitList) Reset() {
	*x = TraitList{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[102]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TraitList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraitList) ProtoMessage() {}

func (x *TraitList) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[102]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraitList.ProtoReflect.Descriptor instead.
func (*TraitList) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{102}
}

func (x *TraitList) GetTraits() []string {
	if x != nil {
		return x.Traits
	}
	return nil
}

type ToolProficiencyList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tools         []string               `protobuf:"bytes,1,rep,name=tools,proto3" json:"tools,omitempty"` // Tool proficiency selections (e.g., "thieves_tools", "smiths_tools")
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToolProficiencyList) Reset() {
	*x = ToolProficiencyList{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[103]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolProficiencyList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolProficiencyList) ProtoMessage() {}

func (x *ToolProficiencyList) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[103]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolProficiencyList.ProtoReflect.Descriptor instead.
func (*ToolProficiencyList) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{103}
}

func (x *ToolProficiencyList) GetTools() []string {
	if x != nil {
		return x.Tools
	}
	return nil
}

type RaceChoice struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Race          Race                   `protobuf:"varint,1,opt,name=race,proto3,enum=dnd5e.api.v1alpha1.Race" json:"race,omitempty"`
	Subrace       Subrace                `protobuf:"varint,2,opt,name=subrace,proto3,enum=dnd5e.api.v1alpha1.Subrace" json:"subrace,omitempty"` // Optional
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RaceChoice) Reset() {
	*x = RaceChoice{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[104]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RaceChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaceChoice) ProtoMessage() {}

func (x *RaceChoice) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[104]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaceChoice.ProtoReflect.Descriptor instead.
func (*RaceChoice) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{104}
}

func (x *RaceChoice) GetRace() Race {
	if x != nil {
		return x.Race
	}
	return Race_RACE_UNSPECIFIED
}

func (x *RaceChoice) GetSubrace() Subrace {
	if x != nil {
		return x.Subrace
	}
	return Subrace_SUBRACE_UNSPECIFIED
}

type ClassChoice struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Class         Class                  `protobuf:"varint,1,opt,name=class,proto3,enum=dnd5e.api.v1alpha1.Class" json:"class,omitempty"` // Could add subclass later when implemented
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClassChoice) Reset() {
	*x = ClassChoice{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[105]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClassChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassChoice) ProtoMessage() {}

func (x *ClassChoice) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[105]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassChoice.ProtoReflect.Descriptor instead.
func (*ClassChoice) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{105}
}

func (x *ClassChoice) GetClass() Class {
	if x != nil {
		return x.Class
	}
	return Class_CLASS_UNSPECIFIED
}

// Spell damage information
type SpellDamage struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	DamageType        string                 `protobuf:"bytes,1,opt,name=damage_type,json=damageType,proto3" json:"damage_type,omitempty"`
	DamageAtSlotLevel []*DamageAtSlotLevel   `protobuf:"bytes,2,rep,name=damage_at_slot_level,json=damageAtSlotLevel,proto3" json:"damage_at_slot_level,omitempty"` // List of damage dice by slot level
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SpellDamage) Reset() {
	*x = SpellDamage{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[106]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpellDamage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpellDamage) ProtoMessage() {}

func (x *SpellDamage) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[106]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpellDamage.ProtoReflect.Descriptor instead.
func (*SpellDamage) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{106}
}

func (x *SpellDamage) GetDamageType() string {
	if x != nil {
		return x.DamageType
	}
	return ""
}

func (x *SpellDamage) GetDamageAtSlotLevel() []*DamageAtSlotLevel {
	if x != nil {
		return x.DamageAtSlotLevel
	}
	return nil
}

// Damage at a specific slot level
type DamageAtSlotLevel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SlotLevel     int32                  `protobuf:"varint,1,opt,name=slot_level,json=slotLevel,proto3" json:"slot_level,omitempty"`   // Spell slot level (0-9)
	DamageDice    string                 `protobuf:"bytes,2,opt,name=damage_dice,json=damageDice,proto3" json:"damage_dice,omitempty"` // Damage dice (e.g., "2d6", "3d8")
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DamageAtSlotLevel) Reset() {
	*x = DamageAtSlotLevel{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[107]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DamageAtSlotLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DamageAtSlotLevel) ProtoMessage() {}

func (x *DamageAtSlotLevel) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[107]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DamageAtSlotLevel.ProtoReflect.Descriptor instead.
func (*DamageAtSlotLevel) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{107}
}

func (x *DamageAtSlotLevel) GetSlotLevel() int32 {
	if x != nil {
		return x.SlotLevel
	}
	return 0
}

func (x *DamageAtSlotLevel) GetDamageDice() string {
	if x != nil {
		return x.DamageDice
	}
	return ""
}

// Area of effect information
type AreaOfEffect struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`  // "sphere", "cone", "line", etc.
	Size          int32                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"` // radius, length, etc.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AreaOfEffect) Reset() {
	*x = AreaOfEffect{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[108]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AreaOfEffect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaOfEffect) ProtoMessage() {}

func (x *AreaOfEffect) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[108]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaOfEffect.ProtoReflect.Descriptor instead.
func (*AreaOfEffect) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{108}
}

func (x *AreaOfEffect) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AreaOfEffect) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

// Request to list equipment by type
type ListEquipmentByTypeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EquipmentType EquipmentType          `protobuf:"varint,1,opt,name=equipment_type,json=equipmentType,proto3,enum=dnd5e.api.v1alpha1.EquipmentType" json:"equipment_type,omitempty"` // Type of equipment to filter by
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEquipmentByTypeRequest) Reset() {
	*x = ListEquipmentByTypeRequest{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[109]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEquipmentByTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEquipmentByTypeRequest) ProtoMessage() {}

func (x *ListEquipmentByTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[109]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEquipmentByTypeRequest.ProtoReflect.Descriptor instead.
func (*ListEquipmentByTypeRequest) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{109}
}

func (x *ListEquipmentByTypeRequest) GetEquipmentType() EquipmentType {
	if x != nil {
		return x.EquipmentType
	}
	return EquipmentType_EQUIPMENT_TYPE_UNSPECIFIED
}

func (x *ListEquipmentByTypeRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListEquipmentByTypeRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// Response with equipment list
type ListEquipmentByTypeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Equipment     []*Equipment           `protobuf:"bytes,1,rep,name=equipment,proto3" json:"equipment,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalSize     int32                  `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEquipmentByTypeResponse) Reset() {
	*x = ListEquipmentByTypeResponse{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[110]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEquipmentByTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEquipmentByTypeResponse) ProtoMessage() {}

func (x *ListEquipmentByTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[110]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEquipmentByTypeResponse.ProtoReflect.Descriptor instead.
func (*ListEquipmentByTypeResponse) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{110}
}

func (x *ListEquipmentByTypeResponse) GetEquipment() []*Equipment {
	if x != nil {
		return x.Equipment
	}
	return nil
}

func (x *ListEquipmentByTypeResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListEquipmentByTypeResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

// Request to list spells by level
type ListSpellsByLevelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Level         int32                  `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`                               // 0-9 (0 = cantrips)
	Class         Class                  `protobuf:"varint,2,opt,name=class,proto3,enum=dnd5e.api.v1alpha1.Class" json:"class,omitempty"` // Optional: filter by class
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSpellsByLevelRequest) Reset() {
	*x = ListSpellsByLevelRequest{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[111]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSpellsByLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSpellsByLevelRequest) ProtoMessage() {}

func (x *ListSpellsByLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[111]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSpellsByLevelRequest.ProtoReflect.Descriptor instead.
func (*ListSpellsByLevelRequest) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{111}
}

func (x *ListSpellsByLevelRequest) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *ListSpellsByLevelRequest) GetClass() Class {
	if x != nil {
		return x.Class
	}
	return Class_CLASS_UNSPECIFIED
}

func (x *ListSpellsByLevelRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListSpellsByLevelRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// Response with spell list
type ListSpellsByLevelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Spells        []*Spell               `protobuf:"bytes,1,rep,name=spells,proto3" json:"spells,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalSize     int32                  `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSpellsByLevelResponse) Reset() {
	*x = ListSpellsByLevelResponse{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[112]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSpellsByLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSpellsByLevelResponse) ProtoMessage() {}

func (x *ListSpellsByLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[112]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSpellsByLevelResponse.ProtoReflect.Descriptor instead.
func (*ListSpellsByLevelResponse) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{112}
}

func (x *ListSpellsByLevelResponse) GetSpells() []*Spell {
	if x != nil {
		return x.Spells
	}
	return nil
}

func (x *ListSpellsByLevelResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListSpellsByLevelResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

// Request to get character inventory
type GetCharacterInventoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CharacterId   string                 `protobuf:"bytes,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCharacterInventoryRequest) Reset() {
	*x = GetCharacterInventoryRequest{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[113]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCharacterInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCharacterInventoryRequest) ProtoMessage() {}

func (x *GetCharacterInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[113]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCharacterInventoryRequest.ProtoReflect.Descriptor instead.
func (*GetCharacterInventoryRequest) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{113}
}

func (x *GetCharacterInventoryRequest) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

// Response with character inventory
type GetCharacterInventoryResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	EquipmentSlots      *EquipmentSlots        `protobuf:"bytes,1,opt,name=equipment_slots,json=equipmentSlots,proto3" json:"equipment_slots,omitempty"`
	Inventory           []*InventoryItem       `protobuf:"bytes,2,rep,name=inventory,proto3" json:"inventory,omitempty"`
	Encumbrance         *EncumbranceInfo       `protobuf:"bytes,3,opt,name=encumbrance,proto3" json:"encumbrance,omitempty"`
	AttunementSlotsUsed int32                  `protobuf:"varint,4,opt,name=attunement_slots_used,json=attunementSlotsUsed,proto3" json:"attunement_slots_used,omitempty"`
	AttunementSlotsMax  int32                  `protobuf:"varint,5,opt,name=attunement_slots_max,json=attunementSlotsMax,proto3" json:"attunement_slots_max,omitempty"` // Usually 3 for most characters
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetCharacterInventoryResponse) Reset() {
	*x = GetCharacterInventoryResponse{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[114]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCharacterInventoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCharacterInventoryResponse) ProtoMessage() {}

func (x *GetCharacterInventoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[114]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCharacterInventoryResponse.ProtoReflect.Descriptor instead.
func (*GetCharacterInventoryResponse) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{114}
}

func (x *GetCharacterInventoryResponse) GetEquipmentSlots() *EquipmentSlots {
	if x != nil {
		return x.EquipmentSlots
	}
	return nil
}

func (x *GetCharacterInventoryResponse) GetInventory() []*InventoryItem {
	if x != nil {
		return x.Inventory
	}
	return nil
}

func (x *GetCharacterInventoryResponse) GetEncumbrance() *EncumbranceInfo {
	if x != nil {
		return x.Encumbrance
	}
	return nil
}

func (x *GetCharacterInventoryResponse) GetAttunementSlotsUsed() int32 {
	if x != nil {
		return x.AttunementSlotsUsed
	}
	return 0
}

func (x *GetCharacterInventoryResponse) GetAttunementSlotsMax() int32 {
	if x != nil {
		return x.AttunementSlotsMax
	}
	return 0
}

// Request to equip an item
type EquipItemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CharacterId   string                 `protobuf:"bytes,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	ItemId        string                 `protobuf:"bytes,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`                      // Item from inventory to equip
	Slot          EquipmentSlot          `protobuf:"varint,3,opt,name=slot,proto3,enum=dnd5e.api.v1alpha1.EquipmentSlot" json:"slot,omitempty"` // Which slot to equip to
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EquipItemRequest) Reset() {
	*x = EquipItemRequest{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[115]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EquipItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipItemRequest) ProtoMessage() {}

func (x *EquipItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[115]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipItemRequest.ProtoReflect.Descriptor instead.
func (*EquipItemRequest) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{115}
}

func (x *EquipItemRequest) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

func (x *EquipItemRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *EquipItemRequest) GetSlot() EquipmentSlot {
	if x != nil {
		return x.Slot
	}
	return EquipmentSlot_EQUIPMENT_SLOT_UNSPECIFIED
}

// Response from equipping an item
type EquipItemResponse struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Character              *Character             `protobuf:"bytes,1,opt,name=character,proto3" json:"character,omitempty"`                                                           // Updated character with new equipment
	PreviouslyEquippedItem *InventoryItem         `protobuf:"bytes,2,opt,name=previously_equipped_item,json=previouslyEquippedItem,proto3" json:"previously_equipped_item,omitempty"` // Item that was displaced from the slot (if any)
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *EquipItemResponse) Reset() {
	*x = EquipItemResponse{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[116]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EquipItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipItemResponse) ProtoMessage() {}

func (x *EquipItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[116]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipItemResponse.ProtoReflect.Descriptor instead.
func (*EquipItemResponse) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{116}
}

func (x *EquipItemResponse) GetCharacter() *Character {
	if x != nil {
		return x.Character
	}
	return nil
}

func (x *EquipItemResponse) GetPreviouslyEquippedItem() *InventoryItem {
	if x != nil {
		return x.PreviouslyEquippedItem
	}
	return nil
}

// Request to unequip an item
type UnequipItemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CharacterId   string                 `protobuf:"bytes,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	Slot          EquipmentSlot          `protobuf:"varint,2,opt,name=slot,proto3,enum=dnd5e.api.v1alpha1.EquipmentSlot" json:"slot,omitempty"` // Which slot to unequip from
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnequipItemRequest) Reset() {
	*x = UnequipItemRequest{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[117]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnequipItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnequipItemRequest) ProtoMessage() {}

func (x *UnequipItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[117]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnequipItemRequest.ProtoReflect.Descriptor instead.
func (*UnequipItemRequest) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{117}
}

func (x *UnequipItemRequest) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

func (x *UnequipItemRequest) GetSlot() EquipmentSlot {
	if x != nil {
		return x.Slot
	}
	return EquipmentSlot_EQUIPMENT_SLOT_UNSPECIFIED
}

// Response from unequipping an item
type UnequipItemResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Character     *Character             `protobuf:"bytes,1,opt,name=character,proto3" json:"character,omitempty"` // Updated character
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnequipItemResponse) Reset() {
	*x = UnequipItemResponse{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[118]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnequipItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnequipItemResponse) ProtoMessage() {}

func (x *UnequipItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[118]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnequipItemResponse.ProtoReflect.Descriptor instead.
func (*UnequipItemResponse) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{118}
}

func (x *UnequipItemResponse) GetCharacter() *Character {
	if x != nil {
		return x.Character
	}
	return nil
}

// Request to add items to inventory
type AddToInventoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CharacterId   string                 `protobuf:"bytes,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	Items         []*InventoryAddition   `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddToInventoryRequest) Reset() {
	*x = AddToInventoryRequest{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[119]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddToInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToInventoryRequest) ProtoMessage() {}

func (x *AddToInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[119]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToInventoryRequest.ProtoReflect.Descriptor instead.
func (*AddToInventoryRequest) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{119}
}

func (x *AddToInventoryRequest) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

func (x *AddToInventoryRequest) GetItems() []*InventoryAddition {
	if x != nil {
		return x.Items
	}
	return nil
}

// Item to add to inventory
type InventoryAddition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ItemId        string                 `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"` // Equipment.id reference
	Quantity      int32                  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`          // How many to add
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InventoryAddition) Reset() {
	*x = InventoryAddition{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[120]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InventoryAddition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryAddition) ProtoMessage() {}

func (x *InventoryAddition) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[120]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryAddition.ProtoReflect.Descriptor instead.
func (*InventoryAddition) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{120}
}

func (x *InventoryAddition) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *InventoryAddition) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

// Response from adding to inventory
type AddToInventoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Character     *Character             `protobuf:"bytes,1,opt,name=character,proto3" json:"character,omitempty"` // Updated character
	Errors        []string               `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`       // Any items that couldn't be added
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddToInventoryResponse) Reset() {
	*x = AddToInventoryResponse{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[121]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddToInventoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToInventoryResponse) ProtoMessage() {}

func (x *AddToInventoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[121]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToInventoryResponse.ProtoReflect.Descriptor instead.
func (*AddToInventoryResponse) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{121}
}

func (x *AddToInventoryResponse) GetCharacter() *Character {
	if x != nil {
		return x.Character
	}
	return nil
}

func (x *AddToInventoryResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

// Request to remove items from inventory
type RemoveFromInventoryRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	CharacterId string                 `protobuf:"bytes,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	ItemId      string                 `protobuf:"bytes,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"` // Item to remove
	// Types that are valid to be assigned to RemovalAmount:
	//
	//	*RemoveFromInventoryRequest_Quantity
	//	*RemoveFromInventoryRequest_RemoveAll
	RemovalAmount isRemoveFromInventoryRequest_RemovalAmount `protobuf_oneof:"removal_amount"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveFromInventoryRequest) Reset() {
	*x = RemoveFromInventoryRequest{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[122]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveFromInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFromInventoryRequest) ProtoMessage() {}

func (x *RemoveFromInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[122]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFromInventoryRequest.ProtoReflect.Descriptor instead.
func (*RemoveFromInventoryRequest) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{122}
}

func (x *RemoveFromInventoryRequest) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

func (x *RemoveFromInventoryRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *RemoveFromInventoryRequest) GetRemovalAmount() isRemoveFromInventoryRequest_RemovalAmount {
	if x != nil {
		return x.RemovalAmount
	}
	return nil
}

func (x *RemoveFromInventoryRequest) GetQuantity() int32 {
	if x != nil {
		if x, ok := x.RemovalAmount.(*RemoveFromInventoryRequest_Quantity); ok {
			return x.Quantity
		}
	}
	return 0
}

func (x *RemoveFromInventoryRequest) GetRemoveAll() bool {
	if x != nil {
		if x, ok := x.RemovalAmount.(*RemoveFromInventoryRequest_RemoveAll); ok {
			return x.RemoveAll
		}
	}
	return false
}

type isRemoveFromInventoryRequest_RemovalAmount interface {
	isRemoveFromInventoryRequest_RemovalAmount()
}

type RemoveFromInventoryRequest_Quantity struct {
	Quantity int32 `protobuf:"varint,3,opt,name=quantity,proto3,oneof"` // Specific quantity to remove
}

type RemoveFromInventoryRequest_RemoveAll struct {
	RemoveAll bool `protobuf:"varint,4,opt,name=remove_all,json=removeAll,proto3,oneof"` // Remove all of this item
}

func (*RemoveFromInventoryRequest_Quantity) isRemoveFromInventoryRequest_RemovalAmount() {}

func (*RemoveFromInventoryRequest_RemoveAll) isRemoveFromInventoryRequest_RemovalAmount() {}

// Response from removing from inventory
type RemoveFromInventoryResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Character       *Character             `protobuf:"bytes,1,opt,name=character,proto3" json:"character,omitempty"`                                     // Updated character
	QuantityRemoved int32                  `protobuf:"varint,2,opt,name=quantity_removed,json=quantityRemoved,proto3" json:"quantity_removed,omitempty"` // Actual quantity removed
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RemoveFromInventoryResponse) Reset() {
	*x = RemoveFromInventoryResponse{}
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[123]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveFromInventoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFromInventoryResponse) ProtoMessage() {}

func (x *RemoveFromInventoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_character_proto_msgTypes[123]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFromInventoryResponse.ProtoReflect.Descriptor instead.
func (*RemoveFromInventoryResponse) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP(), []int{123}
}

func (x *RemoveFromInventoryResponse) GetCharacter() *Character {
	if x != nil {
		return x.Character
	}
	return nil
}

func (x *RemoveFromInventoryResponse) GetQuantityRemoved() int32 {
	if x != nil {
		return x.QuantityRemoved
	}
	return 0
}

var File_dnd5e_api_v1alpha1_character_proto protoreflect.FileDescriptor

const file_dnd5e_api_v1alpha1_character_proto_rawDesc = "" +
	"\n" +
	"\"dnd5e/api/v1alpha1/character.proto\x12\x12dnd5e.api.v1alpha1\x1a\x1fdnd5e/api/v1alpha1/common.proto\x1a\x1ednd5e/api/v1alpha1/enums.proto\"\x86\x01\n" +
	"\x10CharacterFeature\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x16\n" +
	"\x06source\x18\x04 \x01(\tR\x06source\x12\x14\n" +
	"\x05level\x18\x05 \x01(\x05R\x05level\"\xd0\x01\n" +
	"\rClassResource\x129\n" +
	"\x04type\x18\x01 \x01(\x0e2%.dnd5e.api.v1alpha1.ClassResourceTypeR\x04type\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\acurrent\x18\x03 \x01(\x05R\acurrent\x12\x18\n" +
	"\amaximum\x18\x04 \x01(\x05R\amaximum\x12<\n" +
	"\brecharge\x18\x05 \x01(\x0e2 .dnd5e.api.v1alpha1.RechargeTypeR\brecharge\"\xed\x01\n" +
	"\n" +
	"SpellSlots\x12\x17\n" +
	"\alevel_1\x18\x01 \x01(\x05R\x06level1\x12\x17\n" +
	"\alevel_2\x18\x02 \x01(\x05R\x06level2\x12\x17\n" +
	"\alevel_3\x18\x03 \x01(\x05R\x06level3\x12\x17\n" +
	"\alevel_4\x18\x04 \x01(\x05R\x06level4\x12\x17\n" +
	"\alevel_5\x18\x05 \x01(\x05R\x06level5\x12\x17\n" +
	"\alevel_6\x18\x06 \x01(\x05R\x06level6\x12\x17\n" +
	"\alevel_7\x18\a \x01(\x05R\x06level7\x12\x17\n" +
	"\alevel_8\x18\b \x01(\x05R\x06level8\x12\x17\n" +
	"\alevel_9\x18\t \x01(\x05R\x06level9\"\xc5\x01\n" +
	"\rAbilityScores\x12\x1a\n" +
	"\bstrength\x18\x01 \x01(\x05R\bstrength\x12\x1c\n" +
	"\tdexterity\x18\x02 \x01(\x05R\tdexterity\x12\"\n" +
	"\fconstitution\x18\x03 \x01(\x05R\fconstitution\x12\"\n" +
	"\fintelligence\x18\x04 \x01(\x05R\fintelligence\x12\x16\n" +
	"\x06wisdom\x18\x05 \x01(\x05R\x06wisdom\x12\x1a\n" +
	"\bcharisma\x18\x06 \x01(\x05R\bcharisma\"\x9a\f\n" +
	"\tCharacter\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05level\x18\x03 \x01(\x05R\x05level\x12+\n" +
	"\x11experience_points\x18\x04 \x01(\x05R\x10experiencePoints\x12,\n" +
	"\x04race\x18\x05 \x01(\x0e2\x18.dnd5e.api.v1alpha1.RaceR\x04race\x125\n" +
	"\asubrace\x18\x06 \x01(\x0e2\x1b.dnd5e.api.v1alpha1.SubraceR\asubrace\x12/\n" +
	"\x05class\x18\a \x01(\x0e2\x19.dnd5e.api.v1alpha1.ClassR\x05class\x12>\n" +
	"\n" +
	"background\x18\b \x01(\x0e2\x1e.dnd5e.api.v1alpha1.BackgroundR\n" +
	"background\x12;\n" +
	"\talignment\x18\t \x01(\x0e2\x1d.dnd5e.api.v1alpha1.AlignmentR\talignment\x12H\n" +
	"\x0eability_scores\x18\n" +
	" \x01(\v2!.dnd5e.api.v1alpha1.AbilityScoresR\rabilityScores\x12Q\n" +
	"\x11ability_modifiers\x18\v \x01(\v2$.dnd5e.api.v1alpha1.AbilityModifiersR\x10abilityModifiers\x12B\n" +
	"\fcombat_stats\x18\f \x01(\v2\x1f.dnd5e.api.v1alpha1.CombatStatsR\vcombatStats\x12G\n" +
	"\rproficiencies\x18\r \x01(\v2!.dnd5e.api.v1alpha1.ProficienciesR\rproficiencies\x12:\n" +
	"\tlanguages\x18\x0e \x03(\x0e2\x1c.dnd5e.api.v1alpha1.LanguageR\tlanguages\x12,\n" +
	"\x12current_hit_points\x18\x0f \x01(\x05R\x10currentHitPoints\x120\n" +
	"\x14temporary_hit_points\x18\x10 \x01(\x05R\x12temporaryHitPoints\x12\x1d\n" +
	"\n" +
	"session_id\x18\x11 \x01(\tR\tsessionId\x12A\n" +
	"\bmetadata\x18\x12 \x01(\v2%.dnd5e.api.v1alpha1.CharacterMetadataR\bmetadata\x12K\n" +
	"\x0fequipment_slots\x18\x13 \x01(\v2\".dnd5e.api.v1alpha1.EquipmentSlotsR\x0eequipmentSlots\x12?\n" +
	"\tinventory\x18\x14 \x03(\v2!.dnd5e.api.v1alpha1.InventoryItemR\tinventory\x12E\n" +
	"\vencumbrance\x18\x15 \x01(\v2#.dnd5e.api.v1alpha1.EncumbranceInfoR\vencumbrance\x12@\n" +
	"\bfeatures\x18\x16 \x03(\v2$.dnd5e.api.v1alpha1.CharacterFeatureR\bfeatures\x12'\n" +
	"\x0ffighting_styles\x18\x17 \x03(\tR\x0efightingStyles\x12I\n" +
	"\rracial_traits\x18\x18 \x03(\v2$.dnd5e.api.v1alpha1.CharacterFeatureR\fracialTraits\x12S\n" +
	"\x12background_feature\x18\x19 \x01(\v2$.dnd5e.api.v1alpha1.CharacterFeatureR\x11backgroundFeature\x12J\n" +
	"\x0fclass_resources\x18\x1a \x03(\v2!.dnd5e.api.v1alpha1.ClassResourceR\x0eclassResources\x12?\n" +
	"\vspell_slots\x18\x1b \x01(\v2\x1e.dnd5e.api.v1alpha1.SpellSlotsR\n" +
	"spellSlots\"\xc8\x01\n" +
	"\x10AbilityModifiers\x12\x1a\n" +
	"\bstrength\x18\x01 \x01(\x05R\bstrength\x12\x1c\n" +
	"\tdexterity\x18\x02 \x01(\x05R\tdexterity\x12\"\n" +
	"\fconstitution\x18\x03 \x01(\x05R\fconstitution\x12\"\n" +
	"\fintelligence\x18\x04 \x01(\x05R\fintelligence\x12\x16\n" +
	"\x06wisdom\x18\x05 \x01(\x05R\x06wisdom\x12\x1a\n" +
	"\bcharisma\x18\x06 \x01(\x05R\bcharisma\"\xd8\x01\n" +
	"\vCombatStats\x12*\n" +
	"\x11hit_point_maximum\x18\x01 \x01(\x05R\x0fhitPointMaximum\x12\x1f\n" +
	"\varmor_class\x18\x02 \x01(\x05R\n" +
	"armorClass\x12\x1e\n" +
	"\n" +
	"initiative\x18\x03 \x01(\x05R\n" +
	"initiative\x12\x14\n" +
	"\x05speed\x18\x04 \x01(\x05R\x05speed\x12+\n" +
	"\x11proficiency_bonus\x18\x05 \x01(\x05R\x10proficiencyBonus\x12\x19\n" +
	"\bhit_dice\x18\x06 \x01(\tR\ahitDice\"\xca\x01\n" +
	"\rProficiencies\x121\n" +
	"\x06skills\x18\x01 \x03(\x0e2\x19.dnd5e.api.v1alpha1.SkillR\x06skills\x12@\n" +
	"\rsaving_throws\x18\x02 \x03(\x0e2\x1b.dnd5e.api.v1alpha1.AbilityR\fsavingThrows\x12\x14\n" +
	"\x05armor\x18\x03 \x03(\tR\x05armor\x12\x18\n" +
	"\aweapons\x18\x04 \x03(\tR\aweapons\x12\x14\n" +
	"\x05tools\x18\x05 \x03(\tR\x05tools\"n\n" +
	"\x11CharacterMetadata\x12\x1d\n" +
	"\n" +
	"created_at\x18\x01 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x02 \x01(\x03R\tupdatedAt\x12\x1b\n" +
	"\tplayer_id\x18\x03 \x01(\tR\bplayerId\"8\n" +
	"\x13GetCharacterRequest\x12!\n" +
	"\fcharacter_id\x18\x01 \x01(\tR\vcharacterId\"S\n" +
	"\x14GetCharacterResponse\x12;\n" +
	"\tcharacter\x18\x01 \x01(\v2\x1d.dnd5e.api.v1alpha1.CharacterR\tcharacter\"\x8f\x01\n" +
	"\x15ListCharactersRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12\x1d\n" +
	"\n" +
	"session_id\x18\x03 \x01(\tR\tsessionId\x12\x1b\n" +
	"\tplayer_id\x18\x04 \x01(\tR\bplayerId\"\x9e\x01\n" +
	"\x16ListCharactersResponse\x12=\n" +
	"\n" +
	"characters\x18\x01 \x03(\v2\x1d.dnd5e.api.v1alpha1.CharacterR\n" +
	"characters\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1d\n" +
	"\n" +
	"total_size\x18\x03 \x01(\x05R\ttotalSize\"v\n" +
	"\x16UpdateCharacterRequest\x12;\n" +
	"\tcharacter\x18\x01 \x01(\v2\x1d.dnd5e.api.v1alpha1.CharacterR\tcharacter\x12\x1f\n" +
	"\vupdate_mask\x18\x02 \x03(\tR\n" +
	"updateMask\"V\n" +
	"\x17UpdateCharacterResponse\x12;\n" +
	"\tcharacter\x18\x01 \x01(\v2\x1d.dnd5e.api.v1alpha1.CharacterR\tcharacter\";\n" +
	"\x16DeleteCharacterRequest\x12!\n" +
	"\fcharacter_id\x18\x01 \x01(\tR\vcharacterId\"3\n" +
	"\x17DeleteCharacterResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"\xa3\x06\n" +
	"\x12CharacterDraftData\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tplayer_id\x18\x02 \x01(\tR\bplayerId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x03 \x01(\tR\tsessionId\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12,\n" +
	"\x04race\x18\x05 \x01(\x0e2\x18.dnd5e.api.v1alpha1.RaceR\x04race\x125\n" +
	"\asubrace\x18\x06 \x01(\x0e2\x1b.dnd5e.api.v1alpha1.SubraceR\asubrace\x12/\n" +
	"\x05class\x18\a \x01(\x0e2\x19.dnd5e.api.v1alpha1.ClassR\x05class\x12>\n" +
	"\n" +
	"background\x18\b \x01(\x0e2\x1e.dnd5e.api.v1alpha1.BackgroundR\n" +
	"background\x12H\n" +
	"\x0eability_scores\x18\t \x01(\v2!.dnd5e.api.v1alpha1.AbilityScoresR\rabilityScores\x12;\n" +
	"\talignment\x18\n" +
	" \x01(\x0e2\x1d.dnd5e.api.v1alpha1.AlignmentR\talignment\x128\n" +
	"\achoices\x18\v \x03(\v2\x1e.dnd5e.api.v1alpha1.ChoiceDataR\achoices\x12@\n" +
	"\bprogress\x18\f \x01(\v2$.dnd5e.api.v1alpha1.CreationProgressR\bprogress\x12\x1d\n" +
	"\n" +
	"expires_at\x18\r \x01(\x03R\texpiresAt\x12\x1d\n" +
	"\n" +
	"created_at\x18\x0e \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x0f \x01(\x03R\tupdatedAt\x12=\n" +
	"\bmetadata\x18\x10 \x01(\v2!.dnd5e.api.v1alpha1.DraftMetadataR\bmetadata\x128\n" +
	"\bsubclass\x18\x11 \x01(\x0e2\x1c.dnd5e.api.v1alpha1.SubclassR\bsubclass\"\xf8\x02\n" +
	"\x10CreationProgress\x12\x19\n" +
	"\bhas_name\x18\x01 \x01(\bR\ahasName\x12\x19\n" +
	"\bhas_race\x18\x02 \x01(\bR\ahasRace\x12\x1b\n" +
	"\thas_class\x18\x03 \x01(\bR\bhasClass\x12%\n" +
	"\x0ehas_background\x18\x04 \x01(\bR\rhasBackground\x12,\n" +
	"\x12has_ability_scores\x18\x05 \x01(\bR\x10hasAbilityScores\x12\x1d\n" +
	"\n" +
	"has_skills\x18\x06 \x01(\bR\thasSkills\x12#\n" +
	"\rhas_languages\x18\a \x01(\bR\fhasLanguages\x123\n" +
	"\x15completion_percentage\x18\b \x01(\x05R\x14completionPercentage\x12C\n" +
	"\fcurrent_step\x18\t \x01(\x0e2 .dnd5e.api.v1alpha1.CreationStepR\vcurrentStep\"\xa9\x01\n" +
	"\rDraftMetadata\x12\x1d\n" +
	"\n" +
	"created_at\x18\x01 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x02 \x01(\x03R\tupdatedAt\x12,\n" +
	"\x12discord_channel_id\x18\x03 \x01(\tR\x10discordChannelId\x12,\n" +
	"\x12discord_message_id\x18\x04 \x01(\tR\x10discordMessageId\"\xa5\b\n" +
	"\x0eCharacterDraft\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tplayer_id\x18\x02 \x01(\tR\bplayerId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x03 \x01(\tR\tsessionId\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x120\n" +
	"\x04race\x18\x05 \x01(\v2\x1c.dnd5e.api.v1alpha1.RaceInfoR\x04race\x129\n" +
	"\asubrace\x18\x06 \x01(\v2\x1f.dnd5e.api.v1alpha1.SubraceInfoR\asubrace\x123\n" +
	"\x05class\x18\a \x01(\v2\x1d.dnd5e.api.v1alpha1.ClassInfoR\x05class\x12B\n" +
	"\n" +
	"background\x18\b \x01(\v2\".dnd5e.api.v1alpha1.BackgroundInfoR\n" +
	"background\x12H\n" +
	"\x0eability_scores\x18\t \x01(\v2!.dnd5e.api.v1alpha1.AbilityScoresR\rabilityScores\x12;\n" +
	"\talignment\x18\n" +
	" \x01(\x0e2\x1d.dnd5e.api.v1alpha1.AlignmentR\talignment\x128\n" +
	"\achoices\x18\v \x03(\v2\x1e.dnd5e.api.v1alpha1.ChoiceDataR\achoices\x12@\n" +
	"\bprogress\x18\f \x01(\v2$.dnd5e.api.v1alpha1.CreationProgressR\bprogress\x12\x1d\n" +
	"\n" +
	"expires_at\x18\r \x01(\x03R\texpiresAt\x12\x1d\n" +
	"\n" +
	"created_at\x18\x0e \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x0f \x01(\x03R\tupdatedAt\x12=\n" +
	"\bmetadata\x18\x10 \x01(\v2!.dnd5e.api.v1alpha1.DraftMetadataR\bmetadata\x121\n" +
	"\arace_id\x18\x11 \x01(\x0e2\x18.dnd5e.api.v1alpha1.RaceR\x06raceId\x12:\n" +
	"\n" +
	"subrace_id\x18\x12 \x01(\x0e2\x1b.dnd5e.api.v1alpha1.SubraceR\tsubraceId\x124\n" +
	"\bclass_id\x18\x13 \x01(\x0e2\x19.dnd5e.api.v1alpha1.ClassR\aclassId\x12C\n" +
	"\rbackground_id\x18\x14 \x01(\x0e2\x1e.dnd5e.api.v1alpha1.BackgroundR\fbackgroundId\x12D\n" +
	"\n" +
	"validation\x18\x15 \x01(\v2$.dnd5e.api.v1alpha1.ValidationResultR\n" +
	"validation\"\x9b\x01\n" +
	"\x12CreateDraftRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12I\n" +
	"\finitial_data\x18\x03 \x01(\v2&.dnd5e.api.v1alpha1.CharacterDraftDataR\vinitialData\"O\n" +
	"\x13CreateDraftResponse\x128\n" +
	"\x05draft\x18\x01 \x01(\v2\".dnd5e.api.v1alpha1.CharacterDraftR\x05draft\",\n" +
	"\x0fGetDraftRequest\x12\x19\n" +
	"\bdraft_id\x18\x01 \x01(\tR\adraftId\"L\n" +
	"\x10GetDraftResponse\x128\n" +
	"\x05draft\x18\x01 \x01(\v2\".dnd5e.api.v1alpha1.CharacterDraftR\x05draft\"\x92\x01\n" +
	"\x12UpdateDraftRequest\x12\x19\n" +
	"\bdraft_id\x18\x01 \x01(\tR\adraftId\x12@\n" +
	"\aupdates\x18\x02 \x01(\v2&.dnd5e.api.v1alpha1.CharacterDraftDataR\aupdates\x12\x1f\n" +
	"\vupdate_mask\x18\x03 \x03(\tR\n" +
	"updateMask\"\x96\x01\n" +
	"\x13UpdateDraftResponse\x128\n" +
	"\x05draft\x18\x01 \x01(\v2\".dnd5e.api.v1alpha1.CharacterDraftR\x05draft\x12E\n" +
	"\bwarnings\x18\x02 \x03(\v2%.dnd5e.api.v1alpha1.ValidationWarningB\x02\x18\x01R\bwarnings\"B\n" +
	"\x11UpdateNameRequest\x12\x19\n" +
	"\bdraft_id\x18\x01 \x01(\tR\adraftId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"\xd6\x01\n" +
	"\x11UpdateRaceRequest\x12\x19\n" +
	"\bdraft_id\x18\x01 \x01(\tR\adraftId\x12,\n" +
	"\x04race\x18\x02 \x01(\x0e2\x18.dnd5e.api.v1alpha1.RaceR\x04race\x125\n" +
	"\asubrace\x18\x03 \x01(\x0e2\x1b.dnd5e.api.v1alpha1.SubraceR\asubrace\x12A\n" +
	"\frace_choices\x18\x04 \x03(\v2\x1e.dnd5e.api.v1alpha1.ChoiceDataR\vraceChoices\"\xdf\x01\n" +
	"\x12UpdateClassRequest\x12\x19\n" +
	"\bdraft_id\x18\x01 \x01(\tR\adraftId\x12/\n" +
	"\x05class\x18\x02 \x01(\x0e2\x19.dnd5e.api.v1alpha1.ClassR\x05class\x12C\n" +
	"\rclass_choices\x18\x03 \x03(\v2\x1e.dnd5e.api.v1alpha1.ChoiceDataR\fclassChoices\x128\n" +
	"\bsubclass\x18\x04 \x01(\x0e2\x1c.dnd5e.api.v1alpha1.SubclassR\bsubclass\"\xc3\x01\n" +
	"\x17UpdateBackgroundRequest\x12\x19\n" +
	"\bdraft_id\x18\x01 \x01(\tR\adraftId\x12>\n" +
	"\n" +
	"background\x18\x02 \x01(\x0e2\x1e.dnd5e.api.v1alpha1.BackgroundR\n" +
	"background\x12M\n" +
	"\x12background_choices\x18\x03 \x03(\v2\x1e.dnd5e.api.v1alpha1.ChoiceDataR\x11backgroundChoices\"\xe5\x01\n" +
	"\x1aUpdateAbilityScoresRequest\x12\x19\n" +
	"\bdraft_id\x18\x01 \x01(\tR\adraftId\x12J\n" +
	"\x0eability_scores\x18\x02 \x01(\v2!.dnd5e.api.v1alpha1.AbilityScoresH\x00R\rabilityScores\x12P\n" +
	"\x10roll_assignments\x18\x03 \x01(\v2#.dnd5e.api.v1alpha1.RollAssignmentsH\x00R\x0frollAssignmentsB\x0e\n" +
	"\fscores_input\"c\n" +
	"\x13UpdateSkillsRequest\x12\x19\n" +
	"\bdraft_id\x18\x01 \x01(\tR\adraftId\x121\n" +
	"\x06skills\x18\x02 \x03(\x0e2\x19.dnd5e.api.v1alpha1.SkillR\x06skills\"\x95\x01\n" +
	"\x12UpdateNameResponse\x128\n" +
	"\x05draft\x18\x01 \x01(\v2\".dnd5e.api.v1alpha1.CharacterDraftR\x05draft\x12E\n" +
	"\bwarnings\x18\x02 \x03(\v2%.dnd5e.api.v1alpha1.ValidationWarningB\x02\x18\x01R\bwarnings\"\x95\x01\n" +
	"\x12UpdateRaceResponse\x128\n" +
	"\x05draft\x18\x01 \x01(\v2\".dnd5e.api.v1alpha1.CharacterDraftR\x05draft\x12E\n" +
	"\bwarnings\x18\x02 \x03(\v2%.dnd5e.api.v1alpha1.ValidationWarningB\x02\x18\x01R\bwarnings\"\x96\x01\n" +
	"\x13UpdateClassResponse\x128\n" +
	"\x05draft\x18\x01 \x01(\v2\".dnd5e.api.v1alpha1.CharacterDraftR\x05draft\x12E\n" +
	"\bwarnings\x18\x02 \x03(\v2%.dnd5e.api.v1alpha1.ValidationWarningB\x02\x18\x01R\bwarnings\"\x9b\x01\n" +
	"\x18UpdateBackgroundResponse\x128\n" +
	"\x05draft\x18\x01 \x01(\v2\".dnd5e.api.v1alpha1.CharacterDraftR\x05draft\x12E\n" +
	"\bwarnings\x18\x02 \x03(\v2%.dnd5e.api.v1alpha1.ValidationWarningB\x02\x18\x01R\bwarnings\"\x9e\x01\n" +
	"\x1bUpdateAbilityScoresResponse\x128\n" +
	"\x05draft\x18\x01 \x01(\v2\".dnd5e.api.v1alpha1.CharacterDraftR\x05draft\x12E\n" +
	"\bwarnings\x18\x02 \x03(\v2%.dnd5e.api.v1alpha1.ValidationWarningB\x02\x18\x01R\bwarnings\"\x97\x01\n" +
	"\x14UpdateSkillsResponse\x128\n" +
	"\x05draft\x18\x01 \x01(\v2\".dnd5e.api.v1alpha1.CharacterDraftR\x05draft\x12E\n" +
	"\bwarnings\x18\x02 \x03(\v2%.dnd5e.api.v1alpha1.ValidationWarningB\x02\x18\x01R\bwarnings\"\x8b\x01\n" +
	"\x11ListDraftsRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x04 \x01(\tR\tpageToken\"x\n" +
	"\x12ListDraftsResponse\x12:\n" +
	"\x06drafts\x18\x01 \x03(\v2\".dnd5e.api.v1alpha1.CharacterDraftR\x06drafts\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"1\n" +
	"\x14ValidateDraftRequest\x12\x19\n" +
	"\bdraft_id\x18\x01 \x01(\tR\adraftId\"\xe8\x02\n" +
	"\x15ValidateDraftResponse\x12D\n" +
	"\n" +
	"validation\x18\x01 \x01(\v2$.dnd5e.api.v1alpha1.ValidationResultR\n" +
	"validation\x12\x1f\n" +
	"\vis_complete\x18\x02 \x01(\bR\n" +
	"isComplete\x12\x19\n" +
	"\bis_valid\x18\x03 \x01(\bR\aisValid\x12E\n" +
	"\rmissing_steps\x18\x04 \x03(\x0e2 .dnd5e.api.v1alpha1.CreationStepR\fmissingSteps\x12?\n" +
	"\x06errors\x18\x05 \x03(\v2#.dnd5e.api.v1alpha1.ValidationErrorB\x02\x18\x01R\x06errors\x12E\n" +
	"\bwarnings\x18\x06 \x03(\v2%.dnd5e.api.v1alpha1.ValidationWarningB\x02\x18\x01R\bwarnings\"3\n" +
	"\x16GetDraftPreviewRequest\x12\x19\n" +
	"\bdraft_id\x18\x01 \x01(\tR\adraftId\"\x94\x02\n" +
	"\x17GetDraftPreviewResponse\x128\n" +
	"\x05draft\x18\x01 \x01(\v2\".dnd5e.api.v1alpha1.CharacterDraftR\x05draft\x127\n" +
	"\apreview\x18\x02 \x01(\v2\x1d.dnd5e.api.v1alpha1.CharacterR\apreview\x12E\n" +
	"\bwarnings\x18\x03 \x03(\v2%.dnd5e.api.v1alpha1.ValidationWarningB\x02\x18\x01R\bwarnings\x12?\n" +
	"\x06errors\x18\x04 \x03(\v2#.dnd5e.api.v1alpha1.ValidationErrorB\x02\x18\x01R\x06errors\"1\n" +
	"\x14FinalizeDraftRequest\x12\x19\n" +
	"\bdraft_id\x18\x01 \x01(\tR\adraftId\"\xca\x01\n" +
	"\x15FinalizeDraftResponse\x12;\n" +
	"\tcharacter\x18\x01 \x01(\v2\x1d.dnd5e.api.v1alpha1.CharacterR\tcharacter\x12#\n" +
	"\rdraft_deleted\x18\x02 \x01(\bR\fdraftDeleted\x12O\n" +
	"\x10final_validation\x18\x03 \x01(\v2$.dnd5e.api.v1alpha1.ValidationResultR\x0ffinalValidation\"/\n" +
	"\x12DeleteDraftRequest\x12\x19\n" +
	"\bdraft_id\x18\x01 \x01(\tR\adraftId\"/\n" +
	"\x13DeleteDraftResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"\xc9\x05\n" +
	"\bRaceInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x14\n" +
	"\x05speed\x18\x04 \x01(\x05R\x05speed\x12,\n" +
	"\x04size\x18\x05 \x01(\x0e2\x18.dnd5e.api.v1alpha1.SizeR\x04size\x12Y\n" +
	"\x0fability_bonuses\x18\x06 \x03(\v20.dnd5e.api.v1alpha1.RaceInfo.AbilityBonusesEntryR\x0eabilityBonuses\x127\n" +
	"\x06traits\x18\a \x03(\v2\x1f.dnd5e.api.v1alpha1.RacialTraitR\x06traits\x12;\n" +
	"\bsubraces\x18\b \x03(\v2\x1f.dnd5e.api.v1alpha1.SubraceInfoR\bsubraces\x12$\n" +
	"\rproficiencies\x18\t \x03(\tR\rproficiencies\x12:\n" +
	"\tlanguages\x18\n" +
	" \x03(\x0e2\x1c.dnd5e.api.v1alpha1.LanguageR\tlanguages\x12'\n" +
	"\x0fage_description\x18\v \x01(\tR\x0eageDescription\x123\n" +
	"\x15alignment_description\x18\f \x01(\tR\x14alignmentDescription\x12)\n" +
	"\x10size_description\x18\r \x01(\tR\x0fsizeDescription\x124\n" +
	"\achoices\x18\x0e \x03(\v2\x1a.dnd5e.api.v1alpha1.ChoiceR\achoices\x1aA\n" +
	"\x13AbilityBonusesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\x8f\x03\n" +
	"\vSubraceInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\\\n" +
	"\x0fability_bonuses\x18\x04 \x03(\v23.dnd5e.api.v1alpha1.SubraceInfo.AbilityBonusesEntryR\x0eabilityBonuses\x127\n" +
	"\x06traits\x18\x05 \x03(\v2\x1f.dnd5e.api.v1alpha1.RacialTraitR\x06traits\x12:\n" +
	"\tlanguages\x18\x06 \x03(\x0e2\x1c.dnd5e.api.v1alpha1.LanguageR\tlanguages\x12$\n" +
	"\rproficiencies\x18\a \x03(\tR\rproficiencies\x1aA\n" +
	"\x13AbilityBonusesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"z\n" +
	"\vRacialTrait\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x1b\n" +
	"\tis_choice\x18\x03 \x01(\bR\bisChoice\x12\x18\n" +
	"\aoptions\x18\x04 \x03(\tR\aoptions\"\xda\x02\n" +
	"\x06Choice\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12!\n" +
	"\fchoose_count\x18\x03 \x01(\x05R\vchooseCount\x12C\n" +
	"\vchoice_type\x18\x04 \x01(\x0e2\".dnd5e.api.v1alpha1.ChoiceCategoryR\n" +
	"choiceType\x12P\n" +
	"\x10explicit_options\x18\x05 \x01(\v2#.dnd5e.api.v1alpha1.ExplicitOptionsH\x00R\x0fexplicitOptions\x12V\n" +
	"\x12category_reference\x18\x06 \x01(\v2%.dnd5e.api.v1alpha1.CategoryReferenceH\x00R\x11categoryReferenceB\f\n" +
	"\n" +
	"option_set\"M\n" +
	"\x0fExplicitOptions\x12:\n" +
	"\aoptions\x18\x01 \x03(\v2 .dnd5e.api.v1alpha1.ChoiceOptionR\aoptions\"U\n" +
	"\x11CategoryReference\x12\x1f\n" +
	"\vcategory_id\x18\x01 \x01(\tR\n" +
	"categoryId\x12\x1f\n" +
	"\vexclude_ids\x18\x02 \x03(\tR\n" +
	"excludeIds\"\xa8\x02\n" +
	"\fChoiceOption\x127\n" +
	"\x04item\x18\x01 \x01(\v2!.dnd5e.api.v1alpha1.ItemReferenceH\x00R\x04item\x12M\n" +
	"\fcounted_item\x18\x02 \x01(\v2(.dnd5e.api.v1alpha1.CountedItemReferenceH\x00R\vcountedItem\x128\n" +
	"\x06bundle\x18\x03 \x01(\v2\x1e.dnd5e.api.v1alpha1.ItemBundleH\x00R\x06bundle\x12G\n" +
	"\rnested_choice\x18\x04 \x01(\v2 .dnd5e.api.v1alpha1.NestedChoiceH\x00R\fnestedChoiceB\r\n" +
	"\voption_type\"<\n" +
	"\rItemReference\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\tR\x06itemId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"_\n" +
	"\x14CountedItemReference\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\tR\x06itemId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1a\n" +
	"\bquantity\x18\x03 \x01(\x05R\bquantity\"B\n" +
	"\n" +
	"ItemBundle\x124\n" +
	"\x05items\x18\x01 \x03(\v2\x1e.dnd5e.api.v1alpha1.BundleItemR\x05items\"\xaf\x01\n" +
	"\n" +
	"BundleItem\x12O\n" +
	"\rconcrete_item\x18\x01 \x01(\v2(.dnd5e.api.v1alpha1.CountedItemReferenceH\x00R\fconcreteItem\x12C\n" +
	"\vchoice_item\x18\x02 \x01(\v2 .dnd5e.api.v1alpha1.NestedChoiceH\x00R\n" +
	"choiceItemB\v\n" +
	"\titem_type\"B\n" +
	"\fNestedChoice\x122\n" +
	"\x06choice\x18\x01 \x01(\v2\x1a.dnd5e.api.v1alpha1.ChoiceR\x06choice\"\xdd\x06\n" +
	"\tClassInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x17\n" +
	"\ahit_die\x18\x04 \x01(\tR\x06hitDie\x12+\n" +
	"\x11primary_abilities\x18\x05 \x03(\tR\x10primaryAbilities\x12/\n" +
	"\x13armor_proficiencies\x18\x06 \x03(\tR\x12armorProficiencies\x121\n" +
	"\x14weapon_proficiencies\x18\a \x03(\tR\x13weaponProficiencies\x12-\n" +
	"\x12tool_proficiencies\x18\b \x03(\tR\x11toolProficiencies\x12<\n" +
	"\x1asaving_throw_proficiencies\x18\t \x03(\tR\x18savingThrowProficiencies\x12.\n" +
	"\x13skill_choices_count\x18\n" +
	" \x01(\x05R\x11skillChoicesCount\x12)\n" +
	"\x10available_skills\x18\v \x03(\tR\x0favailableSkills\x12-\n" +
	"\x12starting_equipment\x18\f \x03(\tR\x11startingEquipment\x12I\n" +
	"\x10level_1_features\x18\r \x03(\v2\x1f.dnd5e.api.v1alpha1.FeatureInfoR\x0elevel1Features\x12H\n" +
	"\fspellcasting\x18\x0e \x01(\v2$.dnd5e.api.v1alpha1.SpellcastingInfoR\fspellcasting\x124\n" +
	"\achoices\x18\x0f \x03(\v2\x1a.dnd5e.api.v1alpha1.ChoiceR\achoices\x123\n" +
	"\x05group\x18\x10 \x01(\x0e2\x19.dnd5e.api.v1alpha1.ClassB\x02\x18\x01R\x05group\x12@\n" +
	"\n" +
	"subclasses\x18\x11 \x03(\v2 .dnd5e.api.v1alpha1.SubclassInfoR\n" +
	"subclasses\x12'\n" +
	"\rsubclass_type\x18\x12 \x01(\tB\x02\x18\x01R\fsubclassType\"\xc3\x03\n" +
	"\fSubclassInfo\x12\x12\n" +
	"\x02id\x18\x01 \x01(\tB\x02\x18\x01R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x14\n" +
	"\x05level\x18\x04 \x01(\x05R\x05level\x12/\n" +
	"\x13armor_proficiencies\x18\x05 \x03(\tR\x12armorProficiencies\x121\n" +
	"\x14weapon_proficiencies\x18\x06 \x03(\tR\x13weaponProficiencies\x12-\n" +
	"\x12tool_proficiencies\x18\a \x03(\tR\x11toolProficiencies\x12I\n" +
	"\x12additional_choices\x18\b \x03(\v2\x1a.dnd5e.api.v1alpha1.ChoiceR\x11additionalChoices\x12;\n" +
	"\bfeatures\x18\t \x03(\v2\x1f.dnd5e.api.v1alpha1.FeatureInfoR\bfeatures\x128\n" +
	"\bsubclass\x18\n" +
	" \x01(\x0e2\x1c.dnd5e.api.v1alpha1.SubclassR\bsubclass\"\x94\x02\n" +
	"\x10SpellcastingInfo\x121\n" +
	"\x14spellcasting_ability\x18\x01 \x01(\tR\x13spellcastingAbility\x12%\n" +
	"\x0eritual_casting\x18\x02 \x01(\bR\rritualCasting\x12-\n" +
	"\x12spellcasting_focus\x18\x03 \x01(\tR\x11spellcastingFocus\x12%\n" +
	"\x0ecantrips_known\x18\x04 \x01(\x05R\rcantripsKnown\x12!\n" +
	"\fspells_known\x18\x05 \x01(\x05R\vspellsKnown\x12-\n" +
	"\x13spell_slots_level_1\x18\x06 \x01(\x05R\x10spellSlotsLevel1\"\xc0\x04\n" +
	"\x0eBackgroundInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12/\n" +
	"\x13skill_proficiencies\x18\x04 \x03(\tR\x12skillProficiencies\x12-\n" +
	"\x12tool_proficiencies\x18\x05 \x03(\tR\x11toolProficiencies\x12:\n" +
	"\tlanguages\x18\x06 \x03(\x0e2\x1c.dnd5e.api.v1alpha1.LanguageR\tlanguages\x121\n" +
	"\x14additional_languages\x18\a \x01(\x05R\x13additionalLanguages\x12-\n" +
	"\x12starting_equipment\x18\b \x03(\tR\x11startingEquipment\x12#\n" +
	"\rstarting_gold\x18\t \x01(\x05R\fstartingGold\x12!\n" +
	"\ffeature_name\x18\n" +
	" \x01(\tR\vfeatureName\x12/\n" +
	"\x13feature_description\x18\v \x01(\tR\x12featureDescription\x12-\n" +
	"\x12personality_traits\x18\f \x03(\tR\x11personalityTraits\x12\x16\n" +
	"\x06ideals\x18\r \x03(\tR\x06ideals\x12\x14\n" +
	"\x05bonds\x18\x0e \x03(\tR\x05bonds\x12\x14\n" +
	"\x05flaws\x18\x0f \x03(\tR\x05flaws\"\xb0\x02\n" +
	"\vFeatureInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x14\n" +
	"\x05level\x18\x04 \x01(\x05R\x05level\x12\x1d\n" +
	"\n" +
	"class_name\x18\x05 \x01(\tR\tclassName\x124\n" +
	"\achoices\x18\x06 \x03(\v2\x1a.dnd5e.api.v1alpha1.ChoiceR\achoices\x12\x1f\n" +
	"\vhas_choices\x18\a \x01(\bR\n" +
	"hasChoices\x12O\n" +
	"\x0fspell_selection\x18\b \x01(\v2&.dnd5e.api.v1alpha1.SpellSelectionInfoR\x0espellSelection\"\xfc\x01\n" +
	"\x12SpellSelectionInfo\x12(\n" +
	"\x10spells_to_select\x18\x01 \x01(\x05R\x0espellsToSelect\x12!\n" +
	"\fspell_levels\x18\x02 \x03(\x05R\vspellLevels\x12\x1f\n" +
	"\vspell_lists\x18\x03 \x03(\tR\n" +
	"spellLists\x12M\n" +
	"\x0eselection_type\x18\x04 \x01(\x0e2&.dnd5e.api.v1alpha1.SpellSelectionTypeR\rselectionType\x12)\n" +
	"\x10requires_replace\x18\x05 \x01(\bR\x0frequiresReplace\"y\n" +
	"\x10ListRacesRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12)\n" +
	"\x10include_subraces\x18\x03 \x01(\bR\x0fincludeSubraces\"\x8e\x01\n" +
	"\x11ListRacesResponse\x122\n" +
	"\x05races\x18\x01 \x03(\v2\x1c.dnd5e.api.v1alpha1.RaceInfoR\x05races\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1d\n" +
	"\n" +
	"total_size\x18\x03 \x01(\x05R\ttotalSize\"\xb7\x01\n" +
	"\x12ListClassesRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12:\n" +
	"\x19include_spellcasters_only\x18\x03 \x01(\bR\x17includeSpellcastersOnly\x12)\n" +
	"\x10include_features\x18\x04 \x01(\bR\x0fincludeFeatures\"\x95\x01\n" +
	"\x13ListClassesResponse\x127\n" +
	"\aclasses\x18\x01 \x03(\v2\x1d.dnd5e.api.v1alpha1.ClassInfoR\aclasses\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1d\n" +
	"\n" +
	"total_size\x18\x03 \x01(\x05R\ttotalSize\"T\n" +
	"\x16ListBackgroundsRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\"\xa6\x01\n" +
	"\x17ListBackgroundsResponse\x12D\n" +
	"\vbackgrounds\x18\x01 \x03(\v2\".dnd5e.api.v1alpha1.BackgroundInfoR\vbackgrounds\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1d\n" +
	"\n" +
	"total_size\x18\x03 \x01(\x05R\ttotalSize\"0\n" +
	"\x15GetRaceDetailsRequest\x12\x17\n" +
	"\arace_id\x18\x01 \x01(\tR\x06raceId\"J\n" +
	"\x16GetRaceDetailsResponse\x120\n" +
	"\x04race\x18\x01 \x01(\v2\x1c.dnd5e.api.v1alpha1.RaceInfoR\x04race\"3\n" +
	"\x16GetClassDetailsRequest\x12\x19\n" +
	"\bclass_id\x18\x01 \x01(\tR\aclassId\"N\n" +
	"\x17GetClassDetailsResponse\x123\n" +
	"\x05class\x18\x01 \x01(\v2\x1d.dnd5e.api.v1alpha1.ClassInfoR\x05class\"B\n" +
	"\x1bGetBackgroundDetailsRequest\x12#\n" +
	"\rbackground_id\x18\x01 \x01(\tR\fbackgroundId\"b\n" +
	"\x1cGetBackgroundDetailsResponse\x12B\n" +
	"\n" +
	"background\x18\x01 \x01(\v2\".dnd5e.api.v1alpha1.BackgroundInfoR\n" +
	"background\"2\n" +
	"\x11GetFeatureRequest\x12\x1d\n" +
	"\n" +
	"feature_id\x18\x01 \x01(\tR\tfeatureId\"O\n" +
	"\x12GetFeatureResponse\x129\n" +
	"\afeature\x18\x01 \x01(\v2\x1f.dnd5e.api.v1alpha1.FeatureInfoR\afeature\"5\n" +
	"\x18RollAbilityScoresRequest\x12\x19\n" +
	"\bdraft_id\x18\x01 \x01(\tR\adraftId\"\x8b\x01\n" +
	"\x10AbilityScoreRoll\x12\x17\n" +
	"\aroll_id\x18\x01 \x01(\tR\x06rollId\x12\x12\n" +
	"\x04dice\x18\x02 \x03(\x05R\x04dice\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x05R\x05total\x12\x18\n" +
	"\adropped\x18\x04 \x01(\x05R\adropped\x12\x1a\n" +
	"\bnotation\x18\x05 \x01(\tR\bnotation\"v\n" +
	"\x19RollAbilityScoresResponse\x12:\n" +
	"\x05rolls\x18\x01 \x03(\v2$.dnd5e.api.v1alpha1.AbilityScoreRollR\x05rolls\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x02 \x01(\x03R\texpiresAt\"\x9b\x02\n" +
	"\x0fRollAssignments\x12(\n" +
	"\x10strength_roll_id\x18\x01 \x01(\tR\x0estrengthRollId\x12*\n" +
	"\x11dexterity_roll_id\x18\x02 \x01(\tR\x0fdexterityRollId\x120\n" +
	"\x14constitution_roll_id\x18\x03 \x01(\tR\x12constitutionRollId\x120\n" +
	"\x14intelligence_roll_id\x18\x04 \x01(\tR\x12intelligenceRollId\x12$\n" +
	"\x0ewisdom_roll_id\x18\x05 \x01(\tR\fwisdomRollId\x12(\n" +
	"\x10charisma_roll_id\x18\x06 \x01(\tR\x0echarismaRollId\"6\n" +
	"\x04Cost\x12\x1a\n" +
	"\bquantity\x18\x01 \x01(\x05R\bquantity\x12\x12\n" +
	"\x04unit\x18\x02 \x01(\tR\x04unit\"8\n" +
	"\x06Weight\x12\x1a\n" +
	"\bquantity\x18\x01 \x01(\x05R\bquantity\x12\x12\n" +
	"\x04unit\x18\x02 \x01(\tR\x04unit\"\xa1\x03\n" +
	"\tEquipment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1a\n" +
	"\bcategory\x18\x03 \x01(\tR\bcategory\x12,\n" +
	"\x04cost\x18\x04 \x01(\v2\x18.dnd5e.api.v1alpha1.CostR\x04cost\x122\n" +
	"\x06weight\x18\x05 \x01(\v2\x1a.dnd5e.api.v1alpha1.WeightR\x06weight\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\x12A\n" +
	"\vweapon_data\x18\a \x01(\v2\x1e.dnd5e.api.v1alpha1.WeaponDataH\x00R\n" +
	"weaponData\x12>\n" +
	"\n" +
	"armor_data\x18\b \x01(\v2\x1d.dnd5e.api.v1alpha1.ArmorDataH\x00R\tarmorData\x12;\n" +
	"\tgear_data\x18\t \x01(\v2\x1c.dnd5e.api.v1alpha1.GearDataH\x00R\bgearDataB\x10\n" +
	"\x0eequipment_data\"\xef\x01\n" +
	"\n" +
	"WeaponData\x12'\n" +
	"\x0fweapon_category\x18\x01 \x01(\tR\x0eweaponCategory\x12\x1f\n" +
	"\vdamage_dice\x18\x02 \x01(\tR\n" +
	"damageDice\x12\x1f\n" +
	"\vdamage_type\x18\x03 \x01(\tR\n" +
	"damageType\x12\x1e\n" +
	"\n" +
	"properties\x18\x04 \x03(\tR\n" +
	"properties\x12\x14\n" +
	"\x05range\x18\x05 \x01(\tR\x05range\x12!\n" +
	"\fnormal_range\x18\x06 \x01(\x05R\vnormalRange\x12\x1d\n" +
	"\n" +
	"long_range\x18\a \x01(\x05R\tlongRange\"\x84\x02\n" +
	"\tArmorData\x12%\n" +
	"\x0earmor_category\x18\x01 \x01(\tR\rarmorCategory\x12\x17\n" +
	"\abase_ac\x18\x02 \x01(\x05R\x06baseAc\x12\x1b\n" +
	"\tdex_bonus\x18\x03 \x01(\bR\bdexBonus\x12\"\n" +
	"\rhas_dex_limit\x18\x04 \x01(\bR\vhasDexLimit\x12\"\n" +
	"\rmax_dex_bonus\x18\x05 \x01(\x05R\vmaxDexBonus\x12\x1f\n" +
	"\vstr_minimum\x18\x06 \x01(\x05R\n" +
	"strMinimum\x121\n" +
	"\x14stealth_disadvantage\x18\a \x01(\bR\x13stealthDisadvantage\"O\n" +
	"\bGearData\x12#\n" +
	"\rgear_category\x18\x01 \x01(\tR\fgearCategory\x12\x1e\n" +
	"\n" +
	"properties\x18\x02 \x03(\tR\n" +
	"properties\"\x95\x05\n" +
	"\x0eEquipmentSlots\x12>\n" +
	"\tmain_hand\x18\x01 \x01(\v2!.dnd5e.api.v1alpha1.InventoryItemR\bmainHand\x12<\n" +
	"\boff_hand\x18\x02 \x01(\v2!.dnd5e.api.v1alpha1.InventoryItemR\aoffHand\x127\n" +
	"\x05armor\x18\x03 \x01(\v2!.dnd5e.api.v1alpha1.InventoryItemR\x05armor\x129\n" +
	"\x06helmet\x18\x04 \x01(\v2!.dnd5e.api.v1alpha1.InventoryItemR\x06helmet\x127\n" +
	"\x05boots\x18\x05 \x01(\v2!.dnd5e.api.v1alpha1.InventoryItemR\x05boots\x129\n" +
	"\x06gloves\x18\x06 \x01(\v2!.dnd5e.api.v1alpha1.InventoryItemR\x06gloves\x127\n" +
	"\x05cloak\x18\a \x01(\v2!.dnd5e.api.v1alpha1.InventoryItemR\x05cloak\x129\n" +
	"\x06amulet\x18\b \x01(\v2!.dnd5e.api.v1alpha1.InventoryItemR\x06amulet\x128\n" +
	"\x06ring_1\x18\t \x01(\v2!.dnd5e.api.v1alpha1.InventoryItemR\x05ring1\x128\n" +
	"\x06ring_2\x18\n" +
	" \x01(\v2!.dnd5e.api.v1alpha1.InventoryItemR\x05ring2\x125\n" +
	"\x04belt\x18\v \x01(\v2!.dnd5e.api.v1alpha1.InventoryItemR\x04belt\"\xc1\x01\n" +
	"\rInventoryItem\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\tR\x06itemId\x12\x1a\n" +
	"\bquantity\x18\x02 \x01(\x05R\bquantity\x12\x1d\n" +
	"\n" +
	"is_attuned\x18\x03 \x01(\bR\tisAttuned\x12\x1f\n" +
	"\vcustom_name\x18\x04 \x01(\tR\n" +
	"customName\x12;\n" +
	"\tequipment\x18\x05 \x01(\v2\x1d.dnd5e.api.v1alpha1.EquipmentR\tequipment\"\xc4\x01\n" +
	"\x0fEncumbranceInfo\x12%\n" +
	"\x0ecurrent_weight\x18\x01 \x01(\x05R\rcurrentWeight\x12+\n" +
	"\x11carrying_capacity\x18\x02 \x01(\x05R\x10carryingCapacity\x12!\n" +
	"\fmax_capacity\x18\x03 \x01(\x05R\vmaxCapacity\x12:\n" +
	"\x05level\x18\x04 \x01(\x0e2$.dnd5e.api.v1alpha1.EncumbranceLevelR\x05level\"\xc9\x03\n" +
	"\x05Spell\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05level\x18\x03 \x01(\x05R\x05level\x12\x16\n" +
	"\x06school\x18\x04 \x01(\tR\x06school\x12\x18\n" +
	"\aclasses\x18\x05 \x03(\tR\aclasses\x12!\n" +
	"\fcasting_time\x18\x06 \x01(\tR\vcastingTime\x12\x14\n" +
	"\x05range\x18\a \x01(\tR\x05range\x12\x1a\n" +
	"\bduration\x18\b \x01(\tR\bduration\x12\x16\n" +
	"\x06ritual\x18\t \x01(\bR\x06ritual\x12$\n" +
	"\rconcentration\x18\n" +
	" \x01(\bR\rconcentration\x12\x1e\n" +
	"\n" +
	"components\x18\v \x01(\tR\n" +
	"components\x12 \n" +
	"\vdescription\x18\f \x01(\tR\vdescription\x127\n" +
	"\x06damage\x18\r \x01(\v2\x1f.dnd5e.api.v1alpha1.SpellDamageR\x06damage\x12F\n" +
	"\x0earea_of_effect\x18\x0e \x01(\v2 .dnd5e.api.v1alpha1.AreaOfEffectR\fareaOfEffect\"\xf8\a\n" +
	"\n" +
	"ChoiceData\x12>\n" +
	"\bcategory\x18\x01 \x01(\x0e2\".dnd5e.api.v1alpha1.ChoiceCategoryR\bcategory\x128\n" +
	"\x06source\x18\x02 \x01(\x0e2 .dnd5e.api.v1alpha1.ChoiceSourceR\x06source\x12\x1b\n" +
	"\tchoice_id\x18\x03 \x01(\tR\bchoiceId\x12\x14\n" +
	"\x04name\x18\x04 \x01(\tH\x00R\x04name\x127\n" +
	"\x06skills\x18\x05 \x01(\v2\x1d.dnd5e.api.v1alpha1.SkillListH\x00R\x06skills\x12@\n" +
	"\tlanguages\x18\x06 \x01(\v2 .dnd5e.api.v1alpha1.LanguageListH\x00R\tlanguages\x12J\n" +
	"\x0eability_scores\x18\a \x01(\v2!.dnd5e.api.v1alpha1.AbilityScoresH\x00R\rabilityScores\x12'\n" +
	"\x0efighting_style\x18\b \x01(\tH\x00R\rfightingStyle\x12A\n" +
	"\tequipment\x18\t \x01(\v2!.dnd5e.api.v1alpha1.EquipmentListH\x00R\tequipment\x124\n" +
	"\x04race\x18\n" +
	" \x01(\v2\x1e.dnd5e.api.v1alpha1.RaceChoiceH\x00R\x04race\x127\n" +
	"\x05class\x18\v \x01(\v2\x1f.dnd5e.api.v1alpha1.ClassChoiceH\x00R\x05class\x12@\n" +
	"\n" +
	"background\x18\f \x01(\x0e2\x1e.dnd5e.api.v1alpha1.BackgroundH\x00R\n" +
	"background\x127\n" +
	"\x06spells\x18\r \x01(\v2\x1d.dnd5e.api.v1alpha1.SpellListH\x00R\x06spells\x12=\n" +
	"\bcantrips\x18\x0e \x01(\v2\x1f.dnd5e.api.v1alpha1.CantripListH\x00R\bcantrips\x12A\n" +
	"\texpertise\x18\x0f \x01(\v2!.dnd5e.api.v1alpha1.ExpertiseListH\x00R\texpertise\x127\n" +
	"\x06traits\x18\x10 \x01(\v2\x1d.dnd5e.api.v1alpha1.TraitListH\x00R\x06traits\x12X\n" +
	"\x12tool_proficiencies\x18\x11 \x01(\v2'.dnd5e.api.v1alpha1.ToolProficiencyListH\x00R\x11toolProficienciesB\v\n" +
	"\tselection\">\n" +
	"\tSkillList\x121\n" +
	"\x06skills\x18\x01 \x03(\x0e2\x19.dnd5e.api.v1alpha1.SkillR\x06skills\"J\n" +
	"\fLanguageList\x12:\n" +
	"\tlanguages\x18\x01 \x03(\x0e2\x1c.dnd5e.api.v1alpha1.LanguageR\tlanguages\"%\n" +
	"\rEquipmentList\x12\x14\n" +
	"\x05items\x18\x01 \x03(\tR\x05items\"#\n" +
	"\tSpellList\x12\x16\n" +
	"\x06spells\x18\x01 \x03(\tR\x06spells\")\n" +
	"\vCantripList\x12\x1a\n" +
	"\bcantrips\x18\x01 \x03(\tR\bcantrips\"'\n" +
	"\rExpertiseList\x12\x16\n" +
	"\x06skills\x18\x01 \x03(\tR\x06skills\"#\n" +
	"\tTraitList\x12\x16\n" +
	"\x06traits\x18\x01 \x03(\tR\x06traits\"+\n" +
	"\x13ToolProficiencyList\x12\x14\n" +
	"\x05tools\x18\x01 \x03(\tR\x05tools\"q\n" +
	"\n" +
	"RaceChoice\x12,\n" +
	"\x04race\x18\x01 \x01(\x0e2\x18.dnd5e.api.v1alpha1.RaceR\x04race\x125\n" +
	"\asubrace\x18\x02 \x01(\x0e2\x1b.dnd5e.api.v1alpha1.SubraceR\asubrace\">\n" +
	"\vClassChoice\x12/\n" +
	"\x05class\x18\x01 \x01(\x0e2\x19.dnd5e.api.v1alpha1.ClassR\x05class\"\x86\x01\n" +
	"\vSpellDamage\x12\x1f\n" +
	"\vdamage_type\x18\x01 \x01(\tR\n" +
	"damageType\x12V\n" +
	"\x14damage_at_slot_level\x18\x02 \x03(\v2%.dnd5e.api.v1alpha1.DamageAtSlotLevelR\x11damageAtSlotLevel\"S\n" +
	"\x11DamageAtSlotLevel\x12\x1d\n" +
	"\n" +
	"slot_level\x18\x01 \x01(\x05R\tslotLevel\x12\x1f\n" +
	"\vdamage_dice\x18\x02 \x01(\tR\n" +
	"damageDice\"6\n" +
	"\fAreaOfEffect\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x05R\x04size\"\xa2\x01\n" +
	"\x1aListEquipmentByTypeRequest\x12H\n" +
	"\x0eequipment_type\x18\x01 \x01(\x0e2!.dnd5e.api.v1alpha1.EquipmentTypeR\requipmentType\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\"\xa1\x01\n" +
	"\x1bListEquipmentByTypeResponse\x12;\n" +
	"\tequipment\x18\x01 \x03(\v2\x1d.dnd5e.api.v1alpha1.EquipmentR\tequipment\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1d\n" +
	"\n" +
	"total_size\x18\x03 \x01(\x05R\ttotalSize\"\x9d\x01\n" +
	"\x18ListSpellsByLevelRequest\x12\x14\n" +
	"\x05level\x18\x01 \x01(\x05R\x05level\x12/\n" +
	"\x05class\x18\x02 \x01(\x0e2\x19.dnd5e.api.v1alpha1.ClassR\x05class\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x04 \x01(\tR\tpageToken\"\x95\x01\n" +
	"\x19ListSpellsByLevelResponse\x121\n" +
	"\x06spells\x18\x01 \x03(\v2\x19.dnd5e.api.v1alpha1.SpellR\x06spells\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1d\n" +
	"\n" +
	"total_size\x18\x03 \x01(\x05R\ttotalSize\"A\n" +
	"\x1cGetCharacterInventoryRequest\x12!\n" +
	"\fcharacter_id\x18\x01 \x01(\tR\vcharacterId\"\xda\x02\n" +
	"\x1dGetCharacterInventoryResponse\x12K\n" +
	"\x0fequipment_slots\x18\x01 \x01(\v2\".dnd5e.api.v1alpha1.EquipmentSlotsR\x0eequipmentSlots\x12?\n" +
	"\tinventory\x18\x02 \x03(\v2!.dnd5e.api.v1alpha1.InventoryItemR\tinventory\x12E\n" +
	"\vencumbrance\x18\x03 \x01(\v2#.dnd5e.api.v1alpha1.EncumbranceInfoR\vencumbrance\x122\n" +
	"\x15attunement_slots_used\x18\x04 \x01(\x05R\x13attunementSlotsUsed\x120\n" +
	"\x14attunement_slots_max\x18\x05 \x01(\x05R\x12attunementSlotsMax\"\x85\x01\n" +
	"\x10EquipItemRequest\x12!\n" +
	"\fcharacter_id\x18\x01 \x01(\tR\vcharacterId\x12\x17\n" +
	"\aitem_id\x18\x02 \x01(\tR\x06itemId\x125\n" +
	"\x04slot\x18\x03 \x01(\x0e2!.dnd5e.api.v1alpha1.EquipmentSlotR\x04slot\"\xad\x01\n" +
	"\x11EquipItemResponse\x12;\n" +
	"\tcharacter\x18\x01 \x01(\v2\x1d.dnd5e.api.v1alpha1.CharacterR\tcharacter\x12[\n" +
	"\x18previously_equipped_item\x18\x02 \x01(\v2!.dnd5e.api.v1alpha1.InventoryItemR\x16previouslyEquippedItem\"n\n" +
	"\x12UnequipItemRequest\x12!\n" +
	"\fcharacter_id\x18\x01 \x01(\tR\vcharacterId\x125\n" +
	"\x04slot\x18\x02 \x01(\x0e2!.dnd5e.api.v1alpha1.EquipmentSlotR\x04slot\"R\n" +
	"\x13UnequipItemResponse\x12;\n" +
	"\tcharacter\x18\x01 \x01(\v2\x1d.dnd5e.api.v1alpha1.CharacterR\tcharacter\"w\n" +
	"\x15AddToInventoryRequest\x12!\n" +
	"\fcharacter_id\x18\x01 \x01(\tR\vcharacterId\x12;\n" +
	"\x05items\x18\x02 \x03(\v2%.dnd5e.api.v1alpha1.InventoryAdditionR\x05items\"H\n" +
	"\x11InventoryAddition\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\tR\x06itemId\x12\x1a\n" +
	"\bquantity\x18\x02 \x01(\x05R\bquantity\"m\n" +
	"\x16AddToInventoryResponse\x12;\n" +
	"\tcharacter\x18\x01 \x01(\v2\x1d.dnd5e.api.v1alpha1.CharacterR\tcharacter\x12\x16\n" +
	"\x06errors\x18\x02 \x03(\tR\x06errors\"\xa9\x01\n" +
	"\x1aRemoveFromInventoryRequest\x12!\n" +
	"\fcharacter_id\x18\x01 \x01(\tR\vcharacterId\x12\x17\n" +
	"\aitem_id\x18\x02 \x01(\tR\x06itemId\x12\x1c\n" +
	"\bquantity\x18\x03 \x01(\x05H\x00R\bquantity\x12\x1f\n" +
	"\n" +
	"remove_all\x18\x04 \x01(\bH\x00R\tremoveAllB\x10\n" +
	"\x0eremoval_amount\"\x85\x01\n" +
	"\x1bRemoveFromInventoryResponse\x12;\n" +
	"\tcharacter\x18\x01 \x01(\v2\x1d.dnd5e.api.v1alpha1.CharacterR\tcharacter\x12)\n" +
	"\x10quantity_removed\x18\x02 \x01(\x05R\x0fquantityRemoved*\xaa\x04\n" +
	"\x11ClassResourceType\x12#\n" +
	"\x1fCLASS_RESOURCE_TYPE_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18CLASS_RESOURCE_TYPE_RAGE\x10\x01\x12*\n" +
	"&CLASS_RESOURCE_TYPE_BARDIC_INSPIRATION\x10\x02\x12(\n" +
	"$CLASS_RESOURCE_TYPE_CHANNEL_DIVINITY\x10\x03\x12\"\n" +
	"\x1eCLASS_RESOURCE_TYPE_WILD_SHAPE\x10\x04\x12#\n" +
	"\x1fCLASS_RESOURCE_TYPE_SECOND_WIND\x10\x05\x12$\n" +
	" CLASS_RESOURCE_TYPE_ACTION_SURGE\x10\x06\x12!\n" +
	"\x1dCLASS_RESOURCE_TYPE_KI_POINTS\x10\a\x12$\n" +
	" CLASS_RESOURCE_TYPE_DIVINE_SENSE\x10\b\x12$\n" +
	" CLASS_RESOURCE_TYPE_LAY_ON_HANDS\x10\t\x12&\n" +
	"\"CLASS_RESOURCE_TYPE_SORCERY_POINTS\x10\n" +
	"\x12'\n" +
	"#CLASS_RESOURCE_TYPE_ARCANE_RECOVERY\x10\v\x12#\n" +
	"\x1fCLASS_RESOURCE_TYPE_INDOMITABLE\x10\f\x12(\n" +
	"$CLASS_RESOURCE_TYPE_SUPERIORITY_DICE\x10\r*\x98\x01\n" +
	"\fRechargeType\x12\x1d\n" +
	"\x19RECHARGE_TYPE_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18RECHARGE_TYPE_SHORT_REST\x10\x01\x12\x1b\n" +
	"\x17RECHARGE_TYPE_LONG_REST\x10\x02\x12\x16\n" +
	"\x12RECHARGE_TYPE_DAWN\x10\x03\x12\x16\n" +
	"\x12RECHARGE_TYPE_NONE\x10\x04*\x87\x02\n" +
	"\fCreationStep\x12\x1d\n" +
	"\x19CREATION_STEP_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12CREATION_STEP_NAME\x10\x01\x12\x16\n" +
	"\x12CREATION_STEP_RACE\x10\x02\x12\x17\n" +
	"\x13CREATION_STEP_CLASS\x10\x03\x12\x1c\n" +
	"\x18CREATION_STEP_BACKGROUND\x10\x04\x12 \n" +
	"\x1cCREATION_STEP_ABILITY_SCORES\x10\x05\x12\x18\n" +
	"\x14CREATION_STEP_SKILLS\x10\x06\x12\x1b\n" +
	"\x17CREATION_STEP_LANGUAGES\x10\a\x12\x18\n" +
	"\x14CREATION_STEP_REVIEW\x10\b*\x98\x01\n" +
	"\vWarningType\x12\x1c\n" +
	"\x18WARNING_TYPE_UNSPECIFIED\x10\x00\x12!\n" +
	"\x1dWARNING_TYPE_MISSING_REQUIRED\x10\x01\x12$\n" +
	" WARNING_TYPE_INVALID_COMBINATION\x10\x02\x12\"\n" +
	"\x1eWARNING_TYPE_SUBOPTIMAL_CHOICE\x10\x03*\xdd\x04\n" +
	"\x0eChoiceCategory\x12\x1f\n" +
	"\x1bCHOICE_CATEGORY_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19CHOICE_CATEGORY_EQUIPMENT\x10\x01\x12\x1a\n" +
	"\x16CHOICE_CATEGORY_SKILLS\x10\x02\x12\x19\n" +
	"\x15CHOICE_CATEGORY_TOOLS\x10\x03\x12\x1d\n" +
	"\x19CHOICE_CATEGORY_LANGUAGES\x10\x04\x12(\n" +
	"$CHOICE_CATEGORY_WEAPON_PROFICIENCIES\x10\x05\x12'\n" +
	"#CHOICE_CATEGORY_ARMOR_PROFICIENCIES\x10\x06\x12\x1a\n" +
	"\x16CHOICE_CATEGORY_SPELLS\x10\a\x12\x19\n" +
	"\x15CHOICE_CATEGORY_FEATS\x10\b\x12\"\n" +
	"\x1eCHOICE_CATEGORY_ABILITY_SCORES\x10\t\x12\x18\n" +
	"\x14CHOICE_CATEGORY_NAME\x10\n" +
	"\x12\"\n" +
	"\x1eCHOICE_CATEGORY_FIGHTING_STYLE\x10\v\x12\x18\n" +
	"\x14CHOICE_CATEGORY_RACE\x10\f\x12\x19\n" +
	"\x15CHOICE_CATEGORY_CLASS\x10\r\x12\x1e\n" +
	"\x1aCHOICE_CATEGORY_BACKGROUND\x10\x0e\x12\x1c\n" +
	"\x18CHOICE_CATEGORY_CANTRIPS\x10\x0f\x12\x1d\n" +
	"\x19CHOICE_CATEGORY_EXPERTISE\x10\x10\x12\x1b\n" +
	"\x17CHOICE_CATEGORY_SUBRACE\x10\x11\x12\x1a\n" +
	"\x16CHOICE_CATEGORY_TRAITS\x10\x12*\x80\x01\n" +
	"\x04Size\x12\x14\n" +
	"\x10SIZE_UNSPECIFIED\x10\x00\x12\r\n" +
	"\tSIZE_TINY\x10\x01\x12\x0e\n" +
	"\n" +
	"SIZE_SMALL\x10\x02\x12\x0f\n" +
	"\vSIZE_MEDIUM\x10\x03\x12\x0e\n" +
	"\n" +
	"SIZE_LARGE\x10\x04\x12\r\n" +
	"\tSIZE_HUGE\x10\x05\x12\x13\n" +
	"\x0fSIZE_GARGANTUAN\x10\x06*\xa1\x01\n" +
	"\x12SpellSelectionType\x12$\n" +
	" SPELL_SELECTION_TYPE_UNSPECIFIED\x10\x00\x12\"\n" +
	"\x1eSPELL_SELECTION_TYPE_SPELLBOOK\x10\x01\x12\x1e\n" +
	"\x1aSPELL_SELECTION_TYPE_KNOWN\x10\x02\x12!\n" +
	"\x1dSPELL_SELECTION_TYPE_PREPARED\x10\x03*\xc8\x01\n" +
	"\x10EncumbranceLevel\x12!\n" +
	"\x1dENCUMBRANCE_LEVEL_UNSPECIFIED\x10\x00\x12\"\n" +
	"\x1eENCUMBRANCE_LEVEL_UNENCUMBERED\x10\x01\x12 \n" +
	"\x1cENCUMBRANCE_LEVEL_ENCUMBERED\x10\x02\x12(\n" +
	"$ENCUMBRANCE_LEVEL_HEAVILY_ENCUMBERED\x10\x03\x12!\n" +
	"\x1dENCUMBRANCE_LEVEL_IMMOBILIZED\x10\x04*\xcd\x01\n" +
	"\fChoiceSource\x12\x1d\n" +
	"\x19CHOICE_SOURCE_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14CHOICE_SOURCE_PLAYER\x10\x01\x12\x16\n" +
	"\x12CHOICE_SOURCE_RACE\x10\x02\x12\x19\n" +
	"\x15CHOICE_SOURCE_SUBRACE\x10\x03\x12\x17\n" +
	"\x13CHOICE_SOURCE_CLASS\x10\x04\x12\x1c\n" +
	"\x18CHOICE_SOURCE_BACKGROUND\x10\x05\x12\x1a\n" +
	"\x16CHOICE_SOURCE_LEVEL_UP\x10\x06*\xd8\x02\n" +
	"\rEquipmentSlot\x12\x1e\n" +
	"\x1aEQUIPMENT_SLOT_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18EQUIPMENT_SLOT_MAIN_HAND\x10\x01\x12\x1b\n" +
	"\x17EQUIPMENT_SLOT_OFF_HAND\x10\x02\x12\x18\n" +
	"\x14EQUIPMENT_SLOT_ARMOR\x10\x03\x12\x19\n" +
	"\x15EQUIPMENT_SLOT_HELMET\x10\x04\x12\x18\n" +
	"\x14EQUIPMENT_SLOT_BOOTS\x10\x05\x12\x19\n" +
	"\x15EQUIPMENT_SLOT_GLOVES\x10\x06\x12\x18\n" +
	"\x14EQUIPMENT_SLOT_CLOAK\x10\a\x12\x19\n" +
	"\x15EQUIPMENT_SLOT_AMULET\x10\b\x12\x19\n" +
	"\x15EQUIPMENT_SLOT_RING_1\x10\t\x12\x19\n" +
	"\x15EQUIPMENT_SLOT_RING_2\x10\n" +
	"\x12\x17\n" +
	"\x13EQUIPMENT_SLOT_BELT\x10\v2\xa2\x19\n" +
	"\x10CharacterService\x12^\n" +
	"\vCreateDraft\x12&.dnd5e.api.v1alpha1.CreateDraftRequest\x1a'.dnd5e.api.v1alpha1.CreateDraftResponse\x12U\n" +
	"\bGetDraft\x12#.dnd5e.api.v1alpha1.GetDraftRequest\x1a$.dnd5e.api.v1alpha1.GetDraftResponse\x12[\n" +
	"\n" +
	"ListDrafts\x12%.dnd5e.api.v1alpha1.ListDraftsRequest\x1a&.dnd5e.api.v1alpha1.ListDraftsResponse\x12^\n" +
	"\vDeleteDraft\x12&.dnd5e.api.v1alpha1.DeleteDraftRequest\x1a'.dnd5e.api.v1alpha1.DeleteDraftResponse\x12[\n" +
	"\n" +
	"UpdateName\x12%.dnd5e.api.v1alpha1.UpdateNameRequest\x1a&.dnd5e.api.v1alpha1.UpdateNameResponse\x12[\n" +
	"\n" +
	"UpdateRace\x12%.dnd5e.api.v1alpha1.UpdateRaceRequest\x1a&.dnd5e.api.v1alpha1.UpdateRaceResponse\x12^\n" +
	"\vUpdateClass\x12&.dnd5e.api.v1alpha1.UpdateClassRequest\x1a'.dnd5e.api.v1alpha1.UpdateClassResponse\x12m\n" +
	"\x10UpdateBackground\x12+.dnd5e.api.v1alpha1.UpdateBackgroundRequest\x1a,.dnd5e.api.v1alpha1.UpdateBackgroundResponse\x12v\n" +
	"\x13UpdateAbilityScores\x12..dnd5e.api.v1alpha1.UpdateAbilityScoresRequest\x1a/.dnd5e.api.v1alpha1.UpdateAbilityScoresResponse\x12a\n" +
	"\fUpdateSkills\x12'.dnd5e.api.v1alpha1.UpdateSkillsRequest\x1a(.dnd5e.api.v1alpha1.UpdateSkillsResponse\x12d\n" +
	"\rValidateDraft\x12(.dnd5e.api.v1alpha1.ValidateDraftRequest\x1a).dnd5e.api.v1alpha1.ValidateDraftResponse\x12j\n" +
	"\x0fGetDraftPreview\x12*.dnd5e.api.v1alpha1.GetDraftPreviewRequest\x1a+.dnd5e.api.v1alpha1.GetDraftPreviewResponse\x12d\n" +
	"\rFinalizeDraft\x12(.dnd5e.api.v1alpha1.FinalizeDraftRequest\x1a).dnd5e.api.v1alpha1.FinalizeDraftResponse\x12a\n" +
	"\fGetCharacter\x12'.dnd5e.api.v1alpha1.GetCharacterRequest\x1a(.dnd5e.api.v1alpha1.GetCharacterResponse\x12g\n" +
	"\x0eListCharacters\x12).dnd5e.api.v1alpha1.ListCharactersRequest\x1a*.dnd5e.api.v1alpha1.ListCharactersResponse\x12j\n" +
	"\x0fDeleteCharacter\x12*.dnd5e.api.v1alpha1.DeleteCharacterRequest\x1a+.dnd5e.api.v1alpha1.DeleteCharacterResponse\x12X\n" +
	"\tListRaces\x12$.dnd5e.api.v1alpha1.ListRacesRequest\x1a%.dnd5e.api.v1alpha1.ListRacesResponse\x12^\n" +
	"\vListClasses\x12&.dnd5e.api.v1alpha1.ListClassesRequest\x1a'.dnd5e.api.v1alpha1.ListClassesResponse\x12j\n" +
	"\x0fListBackgrounds\x12*.dnd5e.api.v1alpha1.ListBackgroundsRequest\x1a+.dnd5e.api.v1alpha1.ListBackgroundsResponse\x12g\n" +
	"\x0eGetRaceDetails\x12).dnd5e.api.v1alpha1.GetRaceDetailsRequest\x1a*.dnd5e.api.v1alpha1.GetRaceDetailsResponse\x12j\n" +
	"\x0fGetClassDetails\x12*.dnd5e.api.v1alpha1.GetClassDetailsRequest\x1a+.dnd5e.api.v1alpha1.GetClassDetailsResponse\x12y\n" +
	"\x14GetBackgroundDetails\x12/.dnd5e.api.v1alpha1.GetBackgroundDetailsRequest\x1a0.dnd5e.api.v1alpha1.GetBackgroundDetailsResponse\x12[\n" +
	"\n" +
	"GetFeature\x12%.dnd5e.api.v1alpha1.GetFeatureRequest\x1a&.dnd5e.api.v1alpha1.GetFeatureResponse\x12p\n" +
	"\x11RollAbilityScores\x12,.dnd5e.api.v1alpha1.RollAbilityScoresRequest\x1a-.dnd5e.api.v1alpha1.RollAbilityScoresResponse\x12v\n" +
	"\x13ListEquipmentByType\x12..dnd5e.api.v1alpha1.ListEquipmentByTypeRequest\x1a/.dnd5e.api.v1alpha1.ListEquipmentByTypeResponse\x12p\n" +
	"\x11ListSpellsByLevel\x12,.dnd5e.api.v1alpha1.ListSpellsByLevelRequest\x1a-.dnd5e.api.v1alpha1.ListSpellsByLevelResponse\x12|\n" +
	"\x15GetCharacterInventory\x120.dnd5e.api.v1alpha1.GetCharacterInventoryRequest\x1a1.dnd5e.api.v1alpha1.GetCharacterInventoryResponse\x12X\n" +
	"\tEquipItem\x12$.dnd5e.api.v1alpha1.EquipItemRequest\x1a%.dnd5e.api.v1alpha1.EquipItemResponse\x12^\n" +
	"\vUnequipItem\x12&.dnd5e.api.v1alpha1.UnequipItemRequest\x1a'.dnd5e.api.v1alpha1.UnequipItemResponse\x12g\n" +
	"\x0eAddToInventory\x12).dnd5e.api.v1alpha1.AddToInventoryRequest\x1a*.dnd5e.api.v1alpha1.AddToInventoryResponse\x12v\n" +
	"\x13RemoveFromInventory\x12..dnd5e.api.v1alpha1.RemoveFromInventoryRequest\x1a/.dnd5e.api.v1alpha1.RemoveFromInventoryResponseB\xdf\x01\n" +
	"\x16com.dnd5e.api.v1alpha1B\x0eCharacterProtoP\x01ZKgithub.com/KirkDiggler/rpg-api-protos/gen/go/dnd5e/api/v1alpha1;apiv1alpha1\xa2\x02\x03DAX\xaa\x02\x12Dnd5e.Api.V1alpha1\xca\x02\x12Dnd5e\\Api\\V1alpha1\xe2\x02\x1eDnd5e\\Api\\V1alpha1\\GPBMetadata\xea\x02\x14Dnd5e::Api::V1alpha1b\x06proto3"

var (
	file_dnd5e_api_v1alpha1_character_proto_rawDescOnce sync.Once
	file_dnd5e_api_v1alpha1_character_proto_rawDescData []byte
)

func file_dnd5e_api_v1alpha1_character_proto_rawDescGZIP() []byte {
	file_dnd5e_api_v1alpha1_character_proto_rawDescOnce.Do(func() {
		file_dnd5e_api_v1alpha1_character_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dnd5e_api_v1alpha1_character_proto_rawDesc), len(file_dnd5e_api_v1alpha1_character_proto_rawDesc)))
	})
	return file_dnd5e_api_v1alpha1_character_proto_rawDescData
}

var file_dnd5e_api_v1alpha1_character_proto_enumTypes = make([]protoimpl.EnumInfo, 10)
var file_dnd5e_api_v1alpha1_character_proto_msgTypes = make([]protoimpl.MessageInfo, 126)
var file_dnd5e_api_v1alpha1_character_proto_goTypes = []any{
	(ClassResourceType)(0),                // 0: dnd5e.api.v1alpha1.ClassResourceType
	(RechargeType)(0),                     // 1: dnd5e.api.v1alpha1.RechargeType
	(CreationStep)(0),                     // 2: dnd5e.api.v1alpha1.CreationStep
	(WarningType)(0),                      // 3: dnd5e.api.v1alpha1.WarningType
	(ChoiceCategory)(0),                   // 4: dnd5e.api.v1alpha1.ChoiceCategory
	(Size)(0),                             // 5: dnd5e.api.v1alpha1.Size
	(SpellSelectionType)(0),               // 6: dnd5e.api.v1alpha1.SpellSelectionType
	(EncumbranceLevel)(0),                 // 7: dnd5e.api.v1alpha1.EncumbranceLevel
	(ChoiceSource)(0),                     // 8: dnd5e.api.v1alpha1.ChoiceSource
	(EquipmentSlot)(0),                    // 9: dnd5e.api.v1alpha1.EquipmentSlot
	(*CharacterFeature)(nil),              // 10: dnd5e.api.v1alpha1.CharacterFeature
	(*ClassResource)(nil),                 // 11: dnd5e.api.v1alpha1.ClassResource
	(*SpellSlots)(nil),                    // 12: dnd5e.api.v1alpha1.SpellSlots
	(*AbilityScores)(nil),                 // 13: dnd5e.api.v1alpha1.AbilityScores
	(*Character)(nil),                     // 14: dnd5e.api.v1alpha1.Character
	(*AbilityModifiers)(nil),              // 15: dnd5e.api.v1alpha1.AbilityModifiers
	(*CombatStats)(nil),                   // 16: dnd5e.api.v1alpha1.CombatStats
	(*Proficiencies)(nil),                 // 17: dnd5e.api.v1alpha1.Proficiencies
	(*CharacterMetadata)(nil),             // 18: dnd5e.api.v1alpha1.CharacterMetadata
	(*GetCharacterRequest)(nil),           // 19: dnd5e.api.v1alpha1.GetCharacterRequest
	(*GetCharacterResponse)(nil),          // 20: dnd5e.api.v1alpha1.GetCharacterResponse
	(*ListCharactersRequest)(nil),         // 21: dnd5e.api.v1alpha1.ListCharactersRequest
	(*ListCharactersResponse)(nil),        // 22: dnd5e.api.v1alpha1.ListCharactersResponse
	(*UpdateCharacterRequest)(nil),        // 23: dnd5e.api.v1alpha1.UpdateCharacterRequest
	(*UpdateCharacterResponse)(nil),       // 24: dnd5e.api.v1alpha1.UpdateCharacterResponse
	(*DeleteCharacterRequest)(nil),        // 25: dnd5e.api.v1alpha1.DeleteCharacterRequest
	(*DeleteCharacterResponse)(nil),       // 26: dnd5e.api.v1alpha1.DeleteCharacterResponse
	(*CharacterDraftData)(nil),            // 27: dnd5e.api.v1alpha1.CharacterDraftData
	(*CreationProgress)(nil),              // 28: dnd5e.api.v1alpha1.CreationProgress
	(*DraftMetadata)(nil),                 // 29: dnd5e.api.v1alpha1.DraftMetadata
	(*CharacterDraft)(nil),                // 30: dnd5e.api.v1alpha1.CharacterDraft
	(*CreateDraftRequest)(nil),            // 31: dnd5e.api.v1alpha1.CreateDraftRequest
	(*CreateDraftResponse)(nil),           // 32: dnd5e.api.v1alpha1.CreateDraftResponse
	(*GetDraftRequest)(nil),               // 33: dnd5e.api.v1alpha1.GetDraftRequest
	(*GetDraftResponse)(nil),              // 34: dnd5e.api.v1alpha1.GetDraftResponse
	(*UpdateDraftRequest)(nil),            // 35: dnd5e.api.v1alpha1.UpdateDraftRequest
	(*UpdateDraftResponse)(nil),           // 36: dnd5e.api.v1alpha1.UpdateDraftResponse
	(*UpdateNameRequest)(nil),             // 37: dnd5e.api.v1alpha1.UpdateNameRequest
	(*UpdateRaceRequest)(nil),             // 38: dnd5e.api.v1alpha1.UpdateRaceRequest
	(*UpdateClassRequest)(nil),            // 39: dnd5e.api.v1alpha1.UpdateClassRequest
	(*UpdateBackgroundRequest)(nil),       // 40: dnd5e.api.v1alpha1.UpdateBackgroundRequest
	(*UpdateAbilityScoresRequest)(nil),    // 41: dnd5e.api.v1alpha1.UpdateAbilityScoresRequest
	(*UpdateSkillsRequest)(nil),           // 42: dnd5e.api.v1alpha1.UpdateSkillsRequest
	(*UpdateNameResponse)(nil),            // 43: dnd5e.api.v1alpha1.UpdateNameResponse
	(*UpdateRaceResponse)(nil),            // 44: dnd5e.api.v1alpha1.UpdateRaceResponse
	(*UpdateClassResponse)(nil),           // 45: dnd5e.api.v1alpha1.UpdateClassResponse
	(*UpdateBackgroundResponse)(nil),      // 46: dnd5e.api.v1alpha1.UpdateBackgroundResponse
	(*UpdateAbilityScoresResponse)(nil),   // 47: dnd5e.api.v1alpha1.UpdateAbilityScoresResponse
	(*UpdateSkillsResponse)(nil),          // 48: dnd5e.api.v1alpha1.UpdateSkillsResponse
	(*ListDraftsRequest)(nil),             // 49: dnd5e.api.v1alpha1.ListDraftsRequest
	(*ListDraftsResponse)(nil),            // 50: dnd5e.api.v1alpha1.ListDraftsResponse
	(*ValidateDraftRequest)(nil),          // 51: dnd5e.api.v1alpha1.ValidateDraftRequest
	(*ValidateDraftResponse)(nil),         // 52: dnd5e.api.v1alpha1.ValidateDraftResponse
	(*GetDraftPreviewRequest)(nil),        // 53: dnd5e.api.v1alpha1.GetDraftPreviewRequest
	(*GetDraftPreviewResponse)(nil),       // 54: dnd5e.api.v1alpha1.GetDraftPreviewResponse
	(*FinalizeDraftRequest)(nil),          // 55: dnd5e.api.v1alpha1.FinalizeDraftRequest
	(*FinalizeDraftResponse)(nil),         // 56: dnd5e.api.v1alpha1.FinalizeDraftResponse
	(*DeleteDraftRequest)(nil),            // 57: dnd5e.api.v1alpha1.DeleteDraftRequest
	(*DeleteDraftResponse)(nil),           // 58: dnd5e.api.v1alpha1.DeleteDraftResponse
	(*RaceInfo)(nil),                      // 59: dnd5e.api.v1alpha1.RaceInfo
	(*SubraceInfo)(nil),                   // 60: dnd5e.api.v1alpha1.SubraceInfo
	(*RacialTrait)(nil),                   // 61: dnd5e.api.v1alpha1.RacialTrait
	(*Choice)(nil),                        // 62: dnd5e.api.v1alpha1.Choice
	(*ExplicitOptions)(nil),               // 63: dnd5e.api.v1alpha1.ExplicitOptions
	(*CategoryReference)(nil),             // 64: dnd5e.api.v1alpha1.CategoryReference
	(*ChoiceOption)(nil),                  // 65: dnd5e.api.v1alpha1.ChoiceOption
	(*ItemReference)(nil),                 // 66: dnd5e.api.v1alpha1.ItemReference
	(*CountedItemReference)(nil),          // 67: dnd5e.api.v1alpha1.CountedItemReference
	(*ItemBundle)(nil),                    // 68: dnd5e.api.v1alpha1.ItemBundle
	(*BundleItem)(nil),                    // 69: dnd5e.api.v1alpha1.BundleItem
	(*NestedChoice)(nil),                  // 70: dnd5e.api.v1alpha1.NestedChoice
	(*ClassInfo)(nil),                     // 71: dnd5e.api.v1alpha1.ClassInfo
	(*SubclassInfo)(nil),                  // 72: dnd5e.api.v1alpha1.SubclassInfo
	(*SpellcastingInfo)(nil),              // 73: dnd5e.api.v1alpha1.SpellcastingInfo
	(*BackgroundInfo)(nil),                // 74: dnd5e.api.v1alpha1.BackgroundInfo
	(*FeatureInfo)(nil),                   // 75: dnd5e.api.v1alpha1.FeatureInfo
	(*SpellSelectionInfo)(nil),            // 76: dnd5e.api.v1alpha1.SpellSelectionInfo
	(*ListRacesRequest)(nil),              // 77: dnd5e.api.v1alpha1.ListRacesRequest
	(*ListRacesResponse)(nil),             // 78: dnd5e.api.v1alpha1.ListRacesResponse
	(*ListClassesRequest)(nil),            // 79: dnd5e.api.v1alpha1.ListClassesRequest
	(*ListClassesResponse)(nil),           // 80: dnd5e.api.v1alpha1.ListClassesResponse
	(*ListBackgroundsRequest)(nil),        // 81: dnd5e.api.v1alpha1.ListBackgroundsRequest
	(*ListBackgroundsResponse)(nil),       // 82: dnd5e.api.v1alpha1.ListBackgroundsResponse
	(*GetRaceDetailsRequest)(nil),         // 83: dnd5e.api.v1alpha1.GetRaceDetailsRequest
	(*GetRaceDetailsResponse)(nil),        // 84: dnd5e.api.v1alpha1.GetRaceDetailsResponse
	(*GetClassDetailsRequest)(nil),        // 85: dnd5e.api.v1alpha1.GetClassDetailsRequest
	(*GetClassDetailsResponse)(nil),       // 86: dnd5e.api.v1alpha1.GetClassDetailsResponse
	(*GetBackgroundDetailsRequest)(nil),   // 87: dnd5e.api.v1alpha1.GetBackgroundDetailsRequest
	(*GetBackgroundDetailsResponse)(nil),  // 88: dnd5e.api.v1alpha1.GetBackgroundDetailsResponse
	(*GetFeatureRequest)(nil),             // 89: dnd5e.api.v1alpha1.GetFeatureRequest
	(*GetFeatureResponse)(nil),            // 90: dnd5e.api.v1alpha1.GetFeatureResponse
	(*RollAbilityScoresRequest)(nil),      // 91: dnd5e.api.v1alpha1.RollAbilityScoresRequest
	(*AbilityScoreRoll)(nil),              // 92: dnd5e.api.v1alpha1.AbilityScoreRoll
	(*RollAbilityScoresResponse)(nil),     // 93: dnd5e.api.v1alpha1.RollAbilityScoresResponse
	(*RollAssignments)(nil),               // 94: dnd5e.api.v1alpha1.RollAssignments
	(*Cost)(nil),                          // 95: dnd5e.api.v1alpha1.Cost
	(*Weight)(nil),                        // 96: dnd5e.api.v1alpha1.Weight
	(*Equipment)(nil),                     // 97: dnd5e.api.v1alpha1.Equipment
	(*WeaponData)(nil),                    // 98: dnd5e.api.v1alpha1.WeaponData
	(*ArmorData)(nil),                     // 99: dnd5e.api.v1alpha1.ArmorData
	(*GearData)(nil),                      // 100: dnd5e.api.v1alpha1.GearData
	(*EquipmentSlots)(nil),                // 101: dnd5e.api.v1alpha1.EquipmentSlots
	(*InventoryItem)(nil),                 // 102: dnd5e.api.v1alpha1.InventoryItem
	(*EncumbranceInfo)(nil),               // 103: dnd5e.api.v1alpha1.EncumbranceInfo
	(*Spell)(nil),                         // 104: dnd5e.api.v1alpha1.Spell
	(*ChoiceData)(nil),                    // 105: dnd5e.api.v1alpha1.ChoiceData
	(*SkillList)(nil),                     // 106: dnd5e.api.v1alpha1.SkillList
	(*LanguageList)(nil),                  // 107: dnd5e.api.v1alpha1.LanguageList
	(*EquipmentList)(nil),                 // 108: dnd5e.api.v1alpha1.EquipmentList
	(*SpellList)(nil),                     // 109: dnd5e.api.v1alpha1.SpellList
	(*CantripList)(nil),                   // 110: dnd5e.api.v1alpha1.CantripList
	(*ExpertiseList)(nil),                 // 111: dnd5e.api.v1alpha1.ExpertiseList
	(*TraitList)(nil),                     // 112: dnd5e.api.v1alpha1.TraitList
	(*ToolProficiencyList)(nil),           // 113: dnd5e.api.v1alpha1.ToolProficiencyList
	(*RaceChoice)(nil),                    // 114: dnd5e.api.v1alpha1.RaceChoice
	(*ClassChoice)(nil),                   // 115: dnd5e.api.v1alpha1.ClassChoice
	(*SpellDamage)(nil),                   // 116: dnd5e.api.v1alpha1.SpellDamage
	(*DamageAtSlotLevel)(nil),             // 117: dnd5e.api.v1alpha1.DamageAtSlotLevel
	(*AreaOfEffect)(nil),                  // 118: dnd5e.api.v1alpha1.AreaOfEffect
	(*ListEquipmentByTypeRequest)(nil),    // 119: dnd5e.api.v1alpha1.ListEquipmentByTypeRequest
	(*ListEquipmentByTypeResponse)(nil),   // 120: dnd5e.api.v1alpha1.ListEquipmentByTypeResponse
	(*ListSpellsByLevelRequest)(nil),      // 121: dnd5e.api.v1alpha1.ListSpellsByLevelRequest
	(*ListSpellsByLevelResponse)(nil),     // 122: dnd5e.api.v1alpha1.ListSpellsByLevelResponse
	(*GetCharacterInventoryRequest)(nil),  // 123: dnd5e.api.v1alpha1.GetCharacterInventoryRequest
	(*GetCharacterInventoryResponse)(nil), // 124: dnd5e.api.v1alpha1.GetCharacterInventoryResponse
	(*EquipItemRequest)(nil),              // 125: dnd5e.api.v1alpha1.EquipItemRequest
	(*EquipItemResponse)(nil),             // 126: dnd5e.api.v1alpha1.EquipItemResponse
	(*UnequipItemRequest)(nil),            // 127: dnd5e.api.v1alpha1.UnequipItemRequest
	(*UnequipItemResponse)(nil),           // 128: dnd5e.api.v1alpha1.UnequipItemResponse
	(*AddToInventoryRequest)(nil),         // 129: dnd5e.api.v1alpha1.AddToInventoryRequest
	(*InventoryAddition)(nil),             // 130: dnd5e.api.v1alpha1.InventoryAddition
	(*AddToInventoryResponse)(nil),        // 131: dnd5e.api.v1alpha1.AddToInventoryResponse
	(*RemoveFromInventoryRequest)(nil),    // 132: dnd5e.api.v1alpha1.RemoveFromInventoryRequest
	(*RemoveFromInventoryResponse)(nil),   // 133: dnd5e.api.v1alpha1.RemoveFromInventoryResponse
	nil,                                   // 134: dnd5e.api.v1alpha1.RaceInfo.AbilityBonusesEntry
	nil,                                   // 135: dnd5e.api.v1alpha1.SubraceInfo.AbilityBonusesEntry
	(Race)(0),                             // 136: dnd5e.api.v1alpha1.Race
	(Subrace)(0),                          // 137: dnd5e.api.v1alpha1.Subrace
	(Class)(0),                            // 138: dnd5e.api.v1alpha1.Class
	(Background)(0),                       // 139: dnd5e.api.v1alpha1.Background
	(Alignment)(0),                        // 140: dnd5e.api.v1alpha1.Alignment
	(Language)(0),                         // 141: dnd5e.api.v1alpha1.Language
	(Skill)(0),                            // 142: dnd5e.api.v1alpha1.Skill
	(Ability)(0),                          // 143: dnd5e.api.v1alpha1.Ability
	(Subclass)(0),                         // 144: dnd5e.api.v1alpha1.Subclass
	(*ValidationResult)(nil),              // 145: dnd5e.api.v1alpha1.ValidationResult
	(*ValidationWarning)(nil),             // 146: dnd5e.api.v1alpha1.ValidationWarning
	(*ValidationError)(nil),               // 147: dnd5e.api.v1alpha1.ValidationError
	(EquipmentType)(0),                    // 148: dnd5e.api.v1alpha1.EquipmentType
}
var file_dnd5e_api_v1alpha1_character_proto_depIdxs = []int32{
	0,   // 0: dnd5e.api.v1alpha1.ClassResource.type:type_name -> dnd5e.api.v1alpha1.ClassResourceType
	1,   // 1: dnd5e.api.v1alpha1.ClassResource.recharge:type_name -> dnd5e.api.v1alpha1.RechargeType
	136, // 2: dnd5e.api.v1alpha1.Character.race:type_name -> dnd5e.api.v1alpha1.Race
	137, // 3: dnd5e.api.v1alpha1.Character.subrace:type_name -> dnd5e.api.v1alpha1.Subrace
	138, // 4: dnd5e.api.v1alpha1.Character.class:type_name -> dnd5e.api.v1alpha1.Class
	139, // 5: dnd5e.api.v1alpha1.Character.background:type_name -> dnd5e.api.v1alpha1.Background
	140, // 6: dnd5e.api.v1alpha1.Character.alignment:type_name -> dnd5e.api.v1alpha1.Alignment
	13,  // 7: dnd5e.api.v1alpha1.Character.ability_scores:type_name -> dnd5e.api.v1alpha1.AbilityScores
	15,  // 8: dnd5e.api.v1alpha1.Character.ability_modifiers:type_name -> dnd5e.api.v1alpha1.AbilityModifiers
	16,  // 9: dnd5e.api.v1alpha1.Character.combat_stats:type_name -> dnd5e.api.v1alpha1.CombatStats
	17,  // 10: dnd5e.api.v1alpha1.Character.proficiencies:type_name -> dnd5e.api.v1alpha1.Proficiencies
	141, // 11: dnd5e.api.v1alpha1.Character.languages:type_name -> dnd5e.api.v1alpha1.Language
	18,  // 12: dnd5e.api.v1alpha1.Character.metadata:type_name -> dnd5e.api.v1alpha1.CharacterMetadata
	101, // 13: dnd5e.api.v1alpha1.Character.equipment_slots:type_name -> dnd5e.api.v1alpha1.EquipmentSlots
	102, // 14: dnd5e.api.v1alpha1.Character.inventory:type_name -> dnd5e.api.v1alpha1.InventoryItem
	103, // 15: dnd5e.api.v1alpha1.Character.encumbrance:type_name -> dnd5e.api.v1alpha1.EncumbranceInfo
	10,  // 16: dnd5e.api.v1alpha1.Character.features:type_name -> dnd5e.api.v1alpha1.CharacterFeature
	10,  // 17: dnd5e.api.v1alpha1.Character.racial_traits:type_name -> dnd5e.api.v1alpha1.CharacterFeature
	10,  // 18: dnd5e.api.v1alpha1.Character.background_feature:type_name -> dnd5e.api.v1alpha1.CharacterFeature
	11,  // 19: dnd5e.api.v1alpha1.Character.class_resources:type_name -> dnd5e.api.v1alpha1.ClassResource
	12,  // 20: dnd5e.api.v1alpha1.Character.spell_slots:type_name -> dnd5e.api.v1alpha1.SpellSlots
	142, // 21: dnd5e.api.v1alpha1.Proficiencies.skills:type_name -> dnd5e.api.v1alpha1.Skill
	143, // 22: dnd5e.api.v1alpha1.Proficiencies.saving_throws:type_name -> dnd5e.api.v1alpha1.Ability
	14,  // 23: dnd5e.api.v1alpha1.GetCharacterResponse.character:type_name -> dnd5e.api.v1alpha1.Character
	14,  // 24: dnd5e.api.v1alpha1.ListCharactersResponse.characters:type_name -> dnd5e.api.v1alpha1.Character
	14,  // 25: dnd5e.api.v1alpha1.UpdateCharacterRequest.character:type_name -> dnd5e.api.v1alpha1.Character
	14,  // 26: dnd5e.api.v1alpha1.UpdateCharacterResponse.character:type_name -> dnd5e.api.v1alpha1.Character
	136, // 27: dnd5e.api.v1alpha1.CharacterDraftData.race:type_name -> dnd5e.api.v1alpha1.Race
	137, // 28: dnd5e.api.v1alpha1.CharacterDraftData.subrace:type_name -> dnd5e.api.v1alpha1.Subrace
	138, // 29: dnd5e.api.v1alpha1.CharacterDraftData.class:type_name -> dnd5e.api.v1alpha1.Class
	139, // 30: dnd5e.api.v1alpha1.CharacterDraftData.background:type_name -> dnd5e.api.v1alpha1.Background
	13,  // 31: dnd5e.api.v1alpha1.CharacterDraftData.ability_scores:type_name -> dnd5e.api.v1alpha1.AbilityScores
	140, // 32: dnd5e.api.v1alpha1.CharacterDraftData.alignment:type_name -> dnd5e.api.v1alpha1.Alignment
	105, // 33: dnd5e.api.v1alpha1.CharacterDraftData.choices:type_name -> dnd5e.api.v1alpha1.ChoiceData
	28,  // 34: dnd5e.api.v1alpha1.CharacterDraftData.progress:type_name -> dnd5e.api.v1alpha1.CreationProgress
	29,  // 35: dnd5e.api.v1alpha1.CharacterDraftData.metadata:type_name -> dnd5e.api.v1alpha1.DraftMetadata
	144, // 36: dnd5e.api.v1alpha1.CharacterDraftData.subclass:type_name -> dnd5e.api.v1alpha1.Subclass
	2,   // 37: dnd5e.api.v1alpha1.CreationProgress.current_step:type_name -> dnd5e.api.v1alpha1.CreationStep
	59,  // 38: dnd5e.api.v1alpha1.CharacterDraft.race:type_name -> dnd5e.api.v1alpha1.RaceInfo
	60,  // 39: dnd5e.api.v1alpha1.CharacterDraft.subrace:type_name -> dnd5e.api.v1alpha1.SubraceInfo
	71,  // 40: dnd5e.api.v1alpha1.CharacterDraft.class:type_name -> dnd5e.api.v1alpha1.ClassInfo
	74,  // 41: dnd5e.api.v1alpha1.CharacterDraft.background:type_name -> dnd5e.api.v1alpha1.BackgroundInfo
	13,  // 42: dnd5e.api.v1alpha1.CharacterDraft.ability_scores:type_name -> dnd5e.api.v1alpha1.AbilityScores
	140, // 43: dnd5e.api.v1alpha1.CharacterDraft.alignment:type_name -> dnd5e.api.v1alpha1.Alignment
	105, // 44: dnd5e.api.v1alpha1.CharacterDraft.choices:type_name -> dnd5e.api.v1alpha1.ChoiceData
	28,  // 45: dnd5e.api.v1alpha1.CharacterDraft.progress:type_name -> dnd5e.api.v1alpha1.CreationProgress
	29,  // 46: dnd5e.api.v1alpha1.CharacterDraft.metadata:type_name -> dnd5e.api.v1alpha1.DraftMetadata
	136, // 47: dnd5e.api.v1alpha1.CharacterDraft.race_id:type_name -> dnd5e.api.v1alpha1.Race
	137, // 48: dnd5e.api.v1alpha1.CharacterDraft.subrace_id:type_name -> dnd5e.api.v1alpha1.Subrace
	138, // 49: dnd5e.api.v1alpha1.CharacterDraft.class_id:type_name -> dnd5e.api.v1alpha1.Class
	139, // 50: dnd5e.api.v1alpha1.CharacterDraft.background_id:type_name -> dnd5e.api.v1alpha1.Background
	145, // 51: dnd5e.api.v1alpha1.CharacterDraft.validation:type_name -> dnd5e.api.v1alpha1.ValidationResult
	27,  // 52: dnd5e.api.v1alpha1.CreateDraftRequest.initial_data:type_name -> dnd5e.api.v1alpha1.CharacterDraftData
	30,  // 53: dnd5e.api.v1alpha1.CreateDraftResponse.draft:type_name -> dnd5e.api.v1alpha1.CharacterDraft
	30,  // 54: dnd5e.api.v1alpha1.GetDraftResponse.draft:type_name -> dnd5e.api.v1alpha1.CharacterDraft
	27,  // 55: dnd5e.api.v1alpha1.UpdateDraftRequest.updates:type_name -> dnd5e.api.v1alpha1.CharacterDraftData
	30,  // 56: dnd5e.api.v1alpha1.UpdateDraftResponse.draft:type_name -> dnd5e.api.v1alpha1.CharacterDraft
	146, // 57: dnd5e.api.v1alpha1.UpdateDraftResponse.warnings:type_name -> dnd5e.api.v1alpha1.ValidationWarning
	136, // 58: dnd5e.api.v1alpha1.UpdateRaceRequest.race:type_name -> dnd5e.api.v1alpha1.Race
	137, // 59: dnd5e.api.v1alpha1.UpdateRaceRequest.subrace:type_name -> dnd5e.api.v1alpha1.Subrace
	105, // 60: dnd5e.api.v1alpha1.UpdateRaceRequest.race_choices:type_name -> dnd5e.api.v1alpha1.ChoiceData
	138, // 61: dnd5e.api.v1alpha1.UpdateClassRequest.class:type_name -> dnd5e.api.v1alpha1.Class
	105, // 62: dnd5e.api.v1alpha1.UpdateClassRequest.class_choices:type_name -> dnd5e.api.v1alpha1.ChoiceData
	144, // 63: dnd5e.api.v1alpha1.UpdateClassRequest.subclass:type_name -> dnd5e.api.v1alpha1.Subclass
	139, // 64: dnd5e.api.v1alpha1.UpdateBackgroundRequest.background:type_name -> dnd5e.api.v1alpha1.Background
	105, // 65: dnd5e.api.v1alpha1.UpdateBackgroundRequest.background_choices:type_name -> dnd5e.api.v1alpha1.ChoiceData
	13,  // 66: dnd5e.api.v1alpha1.UpdateAbilityScoresRequest.ability_scores:type_name -> dnd5e.api.v1alpha1.AbilityScores
	94,  // 67: dnd5e.api.v1alpha1.UpdateAbilityScoresRequest.roll_assignments:type_name -> dnd5e.api.v1alpha1.RollAssignments
	142, // 68: dnd5e.api.v1alpha1.UpdateSkillsRequest.skills:type_name -> dnd5e.api.v1alpha1.Skill
	30,  // 69: dnd5e.api.v1alpha1.UpdateNameResponse.draft:type_name -> dnd5e.api.v1alpha1.CharacterDraft
	146, // 70: dnd5e.api.v1alpha1.UpdateNameResponse.warnings:type_name -> dnd5e.api.v1alpha1.ValidationWarning
	30,  // 71: dnd5e.api.v1alpha1.UpdateRaceResponse.draft:type_name -> dnd5e.api.v1alpha1.CharacterDraft
	146, // 72: dnd5e.api.v1alpha1.UpdateRaceResponse.warnings:type_name -> dnd5e.api.v1alpha1.ValidationWarning
	30,  // 73: dnd5e.api.v1alpha1.UpdateClassResponse.draft:type_name -> dnd5e.api.v1alpha1.CharacterDraft
	146, // 74: dnd5e.api.v1alpha1.UpdateClassResponse.warnings:type_name -> dnd5e.api.v1alpha1.ValidationWarning
	30,  // 75: dnd5e.api.v1alpha1.UpdateBackgroundResponse.draft:type_name -> dnd5e.api.v1alpha1.CharacterDraft
	146, // 76: dnd5e.api.v1alpha1.UpdateBackgroundResponse.warnings:type_name -> dnd5e.api.v1alpha1.ValidationWarning
	30,  // 77: dnd5e.api.v1alpha1.UpdateAbilityScoresResponse.draft:type_name -> dnd5e.api.v1alpha1.CharacterDraft
	146, // 78: dnd5e.api.v1alpha1.UpdateAbilityScoresResponse.warnings:type_name -> dnd5e.api.v1alpha1.ValidationWarning
	30,  // 79: dnd5e.api.v1alpha1.UpdateSkillsResponse.draft:type_name -> dnd5e.api.v1alpha1.CharacterDraft
	146, // 80: dnd5e.api.v1alpha1.UpdateSkillsResponse.warnings:type_name -> dnd5e.api.v1alpha1.ValidationWarning
	30,  // 81: dnd5e.api.v1alpha1.ListDraftsResponse.drafts:type_name -> dnd5e.api.v1alpha1.CharacterDraft
	145, // 82: dnd5e.api.v1alpha1.ValidateDraftResponse.validation:type_name -> dnd5e.api.v1alpha1.ValidationResult
	2,   // 83: dnd5e.api.v1alpha1.ValidateDraftResponse.missing_steps:type_name -> dnd5e.api.v1alpha1.CreationStep
	147, // 84: dnd5e.api.v1alpha1.ValidateDraftResponse.errors:type_name -> dnd5e.api.v1alpha1.ValidationError
	146, // 85: dnd5e.api.v1alpha1.ValidateDraftResponse.warnings:type_name -> dnd5e.api.v1alpha1.ValidationWarning
	30,  // 86: dnd5e.api.v1alpha1.GetDraftPreviewResponse.draft:type_name -> dnd5e.api.v1alpha1.CharacterDraft
	14,  // 87: dnd5e.api.v1alpha1.GetDraftPreviewResponse.preview:type_name -> dnd5e.api.v1alpha1.Character
	146, // 88: dnd5e.api.v1alpha1.GetDraftPreviewResponse.warnings:type_name -> dnd5e.api.v1alpha1.ValidationWarning
	147, // 89: dnd5e.api.v1alpha1.GetDraftPreviewResponse.errors:type_name -> dnd5e.api.v1alpha1.ValidationError
	14,  // 90: dnd5e.api.v1alpha1.FinalizeDraftResponse.character:type_name -> dnd5e.api.v1alpha1.Character
	145, // 91: dnd5e.api.v1alpha1.FinalizeDraftResponse.final_validation:type_name -> dnd5e.api.v1alpha1.ValidationResult
	5,   // 92: dnd5e.api.v1alpha1.RaceInfo.size:type_name -> dnd5e.api.v1alpha1.Size
	134, // 93: dnd5e.api.v1alpha1.RaceInfo.ability_bonuses:type_name -> dnd5e.api.v1alpha1.RaceInfo.AbilityBonusesEntry
	61,  // 94: dnd5e.api.v1alpha1.RaceInfo.traits:type_name -> dnd5e.api.v1alpha1.RacialTrait
	60,  // 95: dnd5e.api.v1alpha1.RaceInfo.subraces:type_name -> dnd5e.api.v1alpha1.SubraceInfo
	141, // 96: dnd5e.api.v1alpha1.RaceInfo.languages:type_name -> dnd5e.api.v1alpha1.Language
	62,  // 97: dnd5e.api.v1alpha1.RaceInfo.choices:type_name -> dnd5e.api.v1alpha1.Choice
	135, // 98: dnd5e.api.v1alpha1.SubraceInfo.ability_bonuses:type_name -> dnd5e.api.v1alpha1.SubraceInfo.AbilityBonusesEntry
	61,  // 99: dnd5e.api.v1alpha1.SubraceInfo.traits:type_name -> dnd5e.api.v1alpha1.RacialTrait
	141, // 100: dnd5e.api.v1alpha1.SubraceInfo.languages:type_name -> dnd5e.api.v1alpha1.Language
	4,   // 101: dnd5e.api.v1alpha1.Choice.choice_type:type_name -> dnd5e.api.v1alpha1.ChoiceCategory
	63,  // 102: dnd5e.api.v1alpha1.Choice.explicit_options:type_name -> dnd5e.api.v1alpha1.ExplicitOptions
	64,  // 103: dnd5e.api.v1alpha1.Choice.category_reference:type_name -> dnd5e.api.v1alpha1.CategoryReference
	65,  // 104: dnd5e.api.v1alpha1.ExplicitOptions.options:type_name -> dnd5e.api.v1alpha1.ChoiceOption
	66,  // 105: dnd5e.api.v1alpha1.ChoiceOption.item:type_name -> dnd5e.api.v1alpha1.ItemReference
	67,  // 106: dnd5e.api.v1alpha1.ChoiceOption.counted_item:type_name -> dnd5e.api.v1alpha1.CountedItemReference
	68,  // 107: dnd5e.api.v1alpha1.ChoiceOption.bundle:type_name -> dnd5e.api.v1alpha1.ItemBundle
	70,  // 108: dnd5e.api.v1alpha1.ChoiceOption.nested_choice:type_name -> dnd5e.api.v1alpha1.NestedChoice
	69,  // 109: dnd5e.api.v1alpha1.ItemBundle.items:type_name -> dnd5e.api.v1alpha1.BundleItem
	67,  // 110: dnd5e.api.v1alpha1.BundleItem.concrete_item:type_name -> dnd5e.api.v1alpha1.CountedItemReference
	70,  // 111: dnd5e.api.v1alpha1.BundleItem.choice_item:type_name -> dnd5e.api.v1alpha1.NestedChoice
	62,  // 112: dnd5e.api.v1alpha1.NestedChoice.choice:type_name -> dnd5e.api.v1alpha1.Choice
	75,  // 113: dnd5e.api.v1alpha1.ClassInfo.level_1_features:type_name -> dnd5e.api.v1alpha1.FeatureInfo
	73,  // 114: dnd5e.api.v1alpha1.ClassInfo.spellcasting:type_name -> dnd5e.api.v1alpha1.SpellcastingInfo
	62,  // 115: dnd5e.api.v1alpha1.ClassInfo.choices:type_name -> dnd5e.api.v1alpha1.Choice
	138, // 116: dnd5e.api.v1alpha1.ClassInfo.group:type_name -> dnd5e.api.v1alpha1.Class
	72,  // 117: dnd5e.api.v1alpha1.ClassInfo.subclasses:type_name -> dnd5e.api.v1alpha1.SubclassInfo
	62,  // 118: dnd5e.api.v1alpha1.SubclassInfo.additional_choices:type_name -> dnd5e.api.v1alpha1.Choice
	75,  // 119: dnd5e.api.v1alpha1.SubclassInfo.features:type_name -> dnd5e.api.v1alpha1.FeatureInfo
	144, // 120: dnd5e.api.v1alpha1.SubclassInfo.subclass:type_name -> dnd5e.api.v1alpha1.Subclass
	141, // 121: dnd5e.api.v1alpha1.BackgroundInfo.languages:type_name -> dnd5e.api.v1alpha1.Language
	62,  // 122: dnd5e.api.v1alpha1.FeatureInfo.choices:type_name -> dnd5e.api.v1alpha1.Choice
	76,  // 123: dnd5e.api.v1alpha1.FeatureInfo.spell_selection:type_name -> dnd5e.api.v1alpha1.SpellSelectionInfo
	6,   // 124: dnd5e.api.v1alpha1.SpellSelectionInfo.selection_type:type_name -> dnd5e.api.v1alpha1.SpellSelectionType
	59,  // 125: dnd5e.api.v1alpha1.ListRacesResponse.races:type_name -> dnd5e.api.v1alpha1.RaceInfo
	71,  // 126: dnd5e.api.v1alpha1.ListClassesResponse.classes:type_name -> dnd5e.api.v1alpha1.ClassInfo
	74,  // 127: dnd5e.api.v1alpha1.ListBackgroundsResponse.backgrounds:type_name -> dnd5e.api.v1alpha1.BackgroundInfo
	59,  // 128: dnd5e.api.v1alpha1.GetRaceDetailsResponse.race:type_name -> dnd5e.api.v1alpha1.RaceInfo
	71,  // 129: dnd5e.api.v1alpha1.GetClassDetailsResponse.class:type_name -> dnd5e.api.v1alpha1.ClassInfo
	74,  // 130: dnd5e.api.v1alpha1.GetBackgroundDetailsResponse.background:type_name -> dnd5e.api.v1alpha1.BackgroundInfo
	75,  // 131: dnd5e.api.v1alpha1.GetFeatureResponse.feature:type_name -> dnd5e.api.v1alpha1.FeatureInfo
	92,  // 132: dnd5e.api.v1alpha1.RollAbilityScoresResponse.rolls:type_name -> dnd5e.api.v1alpha1.AbilityScoreRoll
	95,  // 133: dnd5e.api.v1alpha1.Equipment.cost:type_name -> dnd5e.api.v1alpha1.Cost
	96,  // 134: dnd5e.api.v1alpha1.Equipment.weight:type_name -> dnd5e.api.v1alpha1.Weight
	98,  // 135: dnd5e.api.v1alpha1.Equipment.weapon_data:type_name -> dnd5e.api.v1alpha1.WeaponData
	99,  // 136: dnd5e.api.v1alpha1.Equipment.armor_data:type_name -> dnd5e.api.v1alpha1.ArmorData
	100, // 137: dnd5e.api.v1alpha1.Equipment.gear_data:type_name -> dnd5e.api.v1alpha1.GearData
	102, // 138: dnd5e.api.v1alpha1.EquipmentSlots.main_hand:type_name -> dnd5e.api.v1alpha1.InventoryItem
	102, // 139: dnd5e.api.v1alpha1.EquipmentSlots.off_hand:type_name -> dnd5e.api.v1alpha1.InventoryItem
	102, // 140: dnd5e.api.v1alpha1.EquipmentSlots.armor:type_name -> dnd5e.api.v1alpha1.InventoryItem
	102, // 141: dnd5e.api.v1alpha1.EquipmentSlots.helmet:type_name -> dnd5e.api.v1alpha1.InventoryItem
	102, // 142: dnd5e.api.v1alpha1.EquipmentSlots.boots:type_name -> dnd5e.api.v1alpha1.InventoryItem
	102, // 143: dnd5e.api.v1alpha1.EquipmentSlots.gloves:type_name -> dnd5e.api.v1alpha1.InventoryItem
	102, // 144: dnd5e.api.v1alpha1.EquipmentSlots.cloak:type_name -> dnd5e.api.v1alpha1.InventoryItem
	102, // 145: dnd5e.api.v1alpha1.EquipmentSlots.amulet:type_name -> dnd5e.api.v1alpha1.InventoryItem
	102, // 146: dnd5e.api.v1alpha1.EquipmentSlots.ring_1:type_name -> dnd5e.api.v1alpha1.InventoryItem
	102, // 147: dnd5e.api.v1alpha1.EquipmentSlots.ring_2:type_name -> dnd5e.api.v1alpha1.InventoryItem
	102, // 148: dnd5e.api.v1alpha1.EquipmentSlots.belt:type_name -> dnd5e.api.v1alpha1.InventoryItem
	97,  // 149: dnd5e.api.v1alpha1.InventoryItem.equipment:type_name -> dnd5e.api.v1alpha1.Equipment
	7,   // 150: dnd5e.api.v1alpha1.EncumbranceInfo.level:type_name -> dnd5e.api.v1alpha1.EncumbranceLevel
	116, // 151: dnd5e.api.v1alpha1.Spell.damage:type_name -> dnd5e.api.v1alpha1.SpellDamage
	118, // 152: dnd5e.api.v1alpha1.Spell.area_of_effect:type_name -> dnd5e.api.v1alpha1.AreaOfEffect
	4,   // 153: dnd5e.api.v1alpha1.ChoiceData.category:type_name -> dnd5e.api.v1alpha1.ChoiceCategory
	8,   // 154: dnd5e.api.v1alpha1.ChoiceData.source:type_name -> dnd5e.api.v1alpha1.ChoiceSource
	106, // 155: dnd5e.api.v1alpha1.ChoiceData.skills:type_name -> dnd5e.api.v1alpha1.SkillList
	107, // 156: dnd5e.api.v1alpha1.ChoiceData.languages:type_name -> dnd5e.api.v1alpha1.LanguageList
	13,  // 157: dnd5e.api.v1alpha1.ChoiceData.ability_scores:type_name -> dnd5e.api.v1alpha1.AbilityScores
	108, // 158: dnd5e.api.v1alpha1.ChoiceData.equipment:type_name -> dnd5e.api.v1alpha1.EquipmentList
	114, // 159: dnd5e.api.v1alpha1.ChoiceData.race:type_name -> dnd5e.api.v1alpha1.RaceChoice
	115, // 160: dnd5e.api.v1alpha1.ChoiceData.class:type_name -> dnd5e.api.v1alpha1.ClassChoice
	139, // 161: dnd5e.api.v1alpha1.ChoiceData.background:type_name -> dnd5e.api.v1alpha1.Background
	109, // 162: dnd5e.api.v1alpha1.ChoiceData.spells:type_name -> dnd5e.api.v1alpha1.SpellList
	110, // 163: dnd5e.api.v1alpha1.ChoiceData.cantrips:type_name -> dnd5e.api.v1alpha1.CantripList
	111, // 164: dnd5e.api.v1alpha1.ChoiceData.expertise:type_name -> dnd5e.api.v1alpha1.ExpertiseList
	112, // 165: dnd5e.api.v1alpha1.ChoiceData.traits:type_name -> dnd5e.api.v1alpha1.TraitList
	113, // 166: dnd5e.api.v1alpha1.ChoiceData.tool_proficiencies:type_name -> dnd5e.api.v1alpha1.ToolProficiencyList
	142, // 167: dnd5e.api.v1alpha1.SkillList.skills:type_name -> dnd5e.api.v1alpha1.Skill
	141, // 168: dnd5e.api.v1alpha1.LanguageList.languages:type_name -> dnd5e.api.v1alpha1.Language
	136, // 169: dnd5e.api.v1alpha1.RaceChoice.race:type_name -> dnd5e.api.v1alpha1.Race
	137, // 170: dnd5e.api.v1alpha1.RaceChoice.subrace:type_name -> dnd5e.api.v1alpha1.Subrace
	138, // 171: dnd5e.api.v1alpha1.ClassChoice.class:type_name -> dnd5e.api.v1alpha1.Class
	117, // 172: dnd5e.api.v1alpha1.SpellDamage.damage_at_slot_level:type_name -> dnd5e.api.v1alpha1.DamageAtSlotLevel
	148, // 173: dnd5e.api.v1alpha1.ListEquipmentByTypeRequest.equipment_type:type_name -> dnd5e.api.v1alpha1.EquipmentType
	97,  // 174: dnd5e.api.v1alpha1.ListEquipmentByTypeResponse.equipment:type_name -> dnd5e.api.v1alpha1.Equipment
	138, // 175: dnd5e.api.v1alpha1.ListSpellsByLevelRequest.class:type_name -> dnd5e.api.v1alpha1.Class
	104, // 176: dnd5e.api.v1alpha1.ListSpellsByLevelResponse.spells:type_name -> dnd5e.api.v1alpha1.Spell
	101, // 177: dnd5e.api.v1alpha1.GetCharacterInventoryResponse.equipment_slots:type_name -> dnd5e.api.v1alpha1.EquipmentSlots
	102, // 178: dnd5e.api.v1alpha1.GetCharacterInventoryResponse.inventory:type_name -> dnd5e.api.v1alpha1.InventoryItem
	103, // 179: dnd5e.api.v1alpha1.GetCharacterInventoryResponse.encumbrance:type_name -> dnd5e.api.v1alpha1.EncumbranceInfo
	9,   // 180: dnd5e.api.v1alpha1.EquipItemRequest.slot:type_name -> dnd5e.api.v1alpha1.EquipmentSlot
	14,  // 181: dnd5e.api.v1alpha1.EquipItemResponse.character:type_name -> dnd5e.api.v1alpha1.Character
	102, // 182: dnd5e.api.v1alpha1.EquipItemResponse.previously_equipped_item:type_name -> dnd5e.api.v1alpha1.InventoryItem
	9,   // 183: dnd5e.api.v1alpha1.UnequipItemRequest.slot:type_name -> dnd5e.api.v1alpha1.EquipmentSlot
	14,  // 184: dnd5e.api.v1alpha1.UnequipItemResponse.character:type_name -> dnd5e.api.v1alpha1.Character
	130, // 185: dnd5e.api.v1alpha1.AddToInventoryRequest.items:type_name -> dnd5e.api.v1alpha1.InventoryAddition
	14,  // 186: dnd5e.api.v1alpha1.AddToInventoryResponse.character:type_name -> dnd5e.api.v1alpha1.Character
	14,  // 187: dnd5e.api.v1alpha1.RemoveFromInventoryResponse.character:type_name -> dnd5e.api.v1alpha1.Character
	31,  // 188: dnd5e.api.v1alpha1.CharacterService.CreateDraft:input_type -> dnd5e.api.v1alpha1.CreateDraftRequest
	33,  // 189: dnd5e.api.v1alpha1.CharacterService.GetDraft:input_type -> dnd5e.api.v1alpha1.GetDraftRequest
	49,  // 190: dnd5e.api.v1alpha1.CharacterService.ListDrafts:input_type -> dnd5e.api.v1alpha1.ListDraftsRequest
	57,  // 191: dnd5e.api.v1alpha1.CharacterService.DeleteDraft:input_type -> dnd5e.api.v1alpha1.DeleteDraftRequest
	37,  // 192: dnd5e.api.v1alpha1.CharacterService.UpdateName:input_type -> dnd5e.api.v1alpha1.UpdateNameRequest
	38,  // 193: dnd5e.api.v1alpha1.CharacterService.UpdateRace:input_type -> dnd5e.api.v1alpha1.UpdateRaceRequest
	39,  // 194: dnd5e.api.v1alpha1.CharacterService.UpdateClass:input_type -> dnd5e.api.v1alpha1.UpdateClassRequest
	40,  // 195: dnd5e.api.v1alpha1.CharacterService.UpdateBackground:input_type -> dnd5e.api.v1alpha1.UpdateBackgroundRequest
	41,  // 196: dnd5e.api.v1alpha1.CharacterService.UpdateAbilityScores:input_type -> dnd5e.api.v1alpha1.UpdateAbilityScoresRequest
	42,  // 197: dnd5e.api.v1alpha1.CharacterService.UpdateSkills:input_type -> dnd5e.api.v1alpha1.UpdateSkillsRequest
	51,  // 198: dnd5e.api.v1alpha1.CharacterService.ValidateDraft:input_type -> dnd5e.api.v1alpha1.ValidateDraftRequest
	53,  // 199: dnd5e.api.v1alpha1.CharacterService.GetDraftPreview:input_type -> dnd5e.api.v1alpha1.GetDraftPreviewRequest
	55,  // 200: dnd5e.api.v1alpha1.CharacterService.FinalizeDraft:input_type -> dnd5e.api.v1alpha1.FinalizeDraftRequest
	19,  // 201: dnd5e.api.v1alpha1.CharacterService.GetCharacter:input_type -> dnd5e.api.v1alpha1.GetCharacterRequest
	21,  // 202: dnd5e.api.v1alpha1.CharacterService.ListCharacters:input_type -> dnd5e.api.v1alpha1.ListCharactersRequest
	25,  // 203: dnd5e.api.v1alpha1.CharacterService.DeleteCharacter:input_type -> dnd5e.api.v1alpha1.DeleteCharacterRequest
	77,  // 204: dnd5e.api.v1alpha1.CharacterService.ListRaces:input_type -> dnd5e.api.v1alpha1.ListRacesRequest
	79,  // 205: dnd5e.api.v1alpha1.CharacterService.ListClasses:input_type -> dnd5e.api.v1alpha1.ListClassesRequest
	81,  // 206: dnd5e.api.v1alpha1.CharacterService.ListBackgrounds:input_type -> dnd5e.api.v1alpha1.ListBackgroundsRequest
	83,  // 207: dnd5e.api.v1alpha1.CharacterService.GetRaceDetails:input_type -> dnd5e.api.v1alpha1.GetRaceDetailsRequest
	85,  // 208: dnd5e.api.v1alpha1.CharacterService.GetClassDetails:input_type -> dnd5e.api.v1alpha1.GetClassDetailsRequest
	87,  // 209: dnd5e.api.v1alpha1.CharacterService.GetBackgroundDetails:input_type -> dnd5e.api.v1alpha1.GetBackgroundDetailsRequest
	89,  // 210: dnd5e.api.v1alpha1.CharacterService.GetFeature:input_type -> dnd5e.api.v1alpha1.GetFeatureRequest
	91,  // 211: dnd5e.api.v1alpha1.CharacterService.RollAbilityScores:input_type -> dnd5e.api.v1alpha1.RollAbilityScoresRequest
	119, // 212: dnd5e.api.v1alpha1.CharacterService.ListEquipmentByType:input_type -> dnd5e.api.v1alpha1.ListEquipmentByTypeRequest
	121, // 213: dnd5e.api.v1alpha1.CharacterService.ListSpellsByLevel:input_type -> dnd5e.api.v1alpha1.ListSpellsByLevelRequest
	123, // 214: dnd5e.api.v1alpha1.CharacterService.GetCharacterInventory:input_type -> dnd5e.api.v1alpha1.GetCharacterInventoryRequest
	125, // 215: dnd5e.api.v1alpha1.CharacterService.EquipItem:input_type -> dnd5e.api.v1alpha1.EquipItemRequest
	127, // 216: dnd5e.api.v1alpha1.CharacterService.UnequipItem:input_type -> dnd5e.api.v1alpha1.UnequipItemRequest
	129, // 217: dnd5e.api.v1alpha1.CharacterService.AddToInventory:input_type -> dnd5e.api.v1alpha1.AddToInventoryRequest
	132, // 218: dnd5e.api.v1alpha1.CharacterService.RemoveFromInventory:input_type -> dnd5e.api.v1alpha1.RemoveFromInventoryRequest
	32,  // 219: dnd5e.api.v1alpha1.CharacterService.CreateDraft:output_type -> dnd5e.api.v1alpha1.CreateDraftResponse
	34,  // 220: dnd5e.api.v1alpha1.CharacterService.GetDraft:output_type -> dnd5e.api.v1alpha1.GetDraftResponse
	50,  // 221: dnd5e.api.v1alpha1.CharacterService.ListDrafts:output_type -> dnd5e.api.v1alpha1.ListDraftsResponse
	58,  // 222: dnd5e.api.v1alpha1.CharacterService.DeleteDraft:output_type -> dnd5e.api.v1alpha1.DeleteDraftResponse
	43,  // 223: dnd5e.api.v1alpha1.CharacterService.UpdateName:output_type -> dnd5e.api.v1alpha1.UpdateNameResponse
	44,  // 224: dnd5e.api.v1alpha1.CharacterService.UpdateRace:output_type -> dnd5e.api.v1alpha1.UpdateRaceResponse
	45,  // 225: dnd5e.api.v1alpha1.CharacterService.UpdateClass:output_type -> dnd5e.api.v1alpha1.UpdateClassResponse
	46,  // 226: dnd5e.api.v1alpha1.CharacterService.UpdateBackground:output_type -> dnd5e.api.v1alpha1.UpdateBackgroundResponse
	47,  // 227: dnd5e.api.v1alpha1.CharacterService.UpdateAbilityScores:output_type -> dnd5e.api.v1alpha1.UpdateAbilityScoresResponse
	48,  // 228: dnd5e.api.v1alpha1.CharacterService.UpdateSkills:output_type -> dnd5e.api.v1alpha1.UpdateSkillsResponse
	52,  // 229: dnd5e.api.v1alpha1.CharacterService.ValidateDraft:output_type -> dnd5e.api.v1alpha1.ValidateDraftResponse
	54,  // 230: dnd5e.api.v1alpha1.CharacterService.GetDraftPreview:output_type -> dnd5e.api.v1alpha1.GetDraftPreviewResponse
	56,  // 231: dnd5e.api.v1alpha1.CharacterService.FinalizeDraft:output_type -> dnd5e.api.v1alpha1.FinalizeDraftResponse
	20,  // 232: dnd5e.api.v1alpha1.CharacterService.GetCharacter:output_type -> dnd5e.api.v1alpha1.GetCharacterResponse
	22,  // 233: dnd5e.api.v1alpha1.CharacterService.ListCharacters:output_type -> dnd5e.api.v1alpha1.ListCharactersResponse
	26,  // 234: dnd5e.api.v1alpha1.CharacterService.DeleteCharacter:output_type -> dnd5e.api.v1alpha1.DeleteCharacterResponse
	78,  // 235: dnd5e.api.v1alpha1.CharacterService.ListRaces:output_type -> dnd5e.api.v1alpha1.ListRacesResponse
	80,  // 236: dnd5e.api.v1alpha1.CharacterService.ListClasses:output_type -> dnd5e.api.v1alpha1.ListClassesResponse
	82,  // 237: dnd5e.api.v1alpha1.CharacterService.ListBackgrounds:output_type -> dnd5e.api.v1alpha1.ListBackgroundsResponse
	84,  // 238: dnd5e.api.v1alpha1.CharacterService.GetRaceDetails:output_type -> dnd5e.api.v1alpha1.GetRaceDetailsResponse
	86,  // 239: dnd5e.api.v1alpha1.CharacterService.GetClassDetails:output_type -> dnd5e.api.v1alpha1.GetClassDetailsResponse
	88,  // 240: dnd5e.api.v1alpha1.CharacterService.GetBackgroundDetails:output_type -> dnd5e.api.v1alpha1.GetBackgroundDetailsResponse
	90,  // 241: dnd5e.api.v1alpha1.CharacterService.GetFeature:output_type -> dnd5e.api.v1alpha1.GetFeatureResponse
	93,  // 242: dnd5e.api.v1alpha1.CharacterService.RollAbilityScores:output_type -> dnd5e.api.v1alpha1.RollAbilityScoresResponse
	120, // 243: dnd5e.api.v1alpha1.CharacterService.ListEquipmentByType:output_type -> dnd5e.api.v1alpha1.ListEquipmentByTypeResponse
	122, // 244: dnd5e.api.v1alpha1.CharacterService.ListSpellsByLevel:output_type -> dnd5e.api.v1alpha1.ListSpellsByLevelResponse
	124, // 245: dnd5e.api.v1alpha1.CharacterService.GetCharacterInventory:output_type -> dnd5e.api.v1alpha1.GetCharacterInventoryResponse
	126, // 246: dnd5e.api.v1alpha1.CharacterService.EquipItem:output_type -> dnd5e.api.v1alpha1.EquipItemResponse
	128, // 247: dnd5e.api.v1alpha1.CharacterService.UnequipItem:output_type -> dnd5e.api.v1alpha1.UnequipItemResponse
	131, // 248: dnd5e.api.v1alpha1.CharacterService.AddToInventory:output_type -> dnd5e.api.v1alpha1.AddToInventoryResponse
	133, // 249: dnd5e.api.v1alpha1.CharacterService.RemoveFromInventory:output_type -> dnd5e.api.v1alpha1.RemoveFromInventoryResponse
	219, // [219:250] is the sub-list for method output_type
	188, // [188:219] is the sub-list for method input_type
	188, // [188:188] is the sub-list for extension type_name
	188, // [188:188] is the sub-list for extension extendee
	0,   // [0:188] is the sub-list for field type_name
}

func init() { file_dnd5e_api_v1alpha1_character_proto_init() }
func file_dnd5e_api_v1alpha1_character_proto_init() {
	if File_dnd5e_api_v1alpha1_character_proto != nil {
		return
	}
	file_dnd5e_api_v1alpha1_common_proto_init()
	file_dnd5e_api_v1alpha1_enums_proto_init()
	file_dnd5e_api_v1alpha1_character_proto_msgTypes[31].OneofWrappers = []any{
		(*UpdateAbilityScoresRequest_AbilityScores)(nil),
		(*UpdateAbilityScoresRequest_RollAssignments)(nil),
	}
	file_dnd5e_api_v1alpha1_character_proto_msgTypes[52].OneofWrappers = []any{
		(*Choice_ExplicitOptions)(nil),
		(*Choice_CategoryReference)(nil),
	}
	file_dnd5e_api_v1alpha1_character_proto_msgTypes[55].OneofWrappers = []any{
		(*ChoiceOption_Item)(nil),
		(*ChoiceOption_CountedItem)(nil),
		(*ChoiceOption_Bundle)(nil),
		(*ChoiceOption_NestedChoice)(nil),
	}
	file_dnd5e_api_v1alpha1_character_proto_msgTypes[59].OneofWrappers = []any{
		(*BundleItem_ConcreteItem)(nil),
		(*BundleItem_ChoiceItem)(nil),
	}
	file_dnd5e_api_v1alpha1_character_proto_msgTypes[87].OneofWrappers = []any{
		(*Equipment_WeaponData)(nil),
		(*Equipment_ArmorData)(nil),
		(*Equipment_GearData)(nil),
	}
	file_dnd5e_api_v1alpha1_character_proto_msgTypes[95].OneofWrappers = []any{
		(*ChoiceData_Name)(nil),
		(*ChoiceData_Skills)(nil),
		(*ChoiceData_Languages)(nil),
		(*ChoiceData_AbilityScores)(nil),
		(*ChoiceData_FightingStyle)(nil),
		(*ChoiceData_Equipment)(nil),
		(*ChoiceData_Race)(nil),
		(*ChoiceData_Class)(nil),
		(*ChoiceData_Background)(nil),
		(*ChoiceData_Spells)(nil),
		(*ChoiceData_Cantrips)(nil),
		(*ChoiceData_Expertise)(nil),
		(*ChoiceData_Traits)(nil),
		(*ChoiceData_ToolProficiencies)(nil),
	}
	file_dnd5e_api_v1alpha1_character_proto_msgTypes[122].OneofWrappers = []any{
		(*RemoveFromInventoryRequest_Quantity)(nil),
		(*RemoveFromInventoryRequest_RemoveAll)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dnd5e_api_v1alpha1_character_proto_rawDesc), len(file_dnd5e_api_v1alpha1_character_proto_rawDesc)),
			NumEnums:      10,
			NumMessages:   126,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dnd5e_api_v1alpha1_character_proto_goTypes,
		DependencyIndexes: file_dnd5e_api_v1alpha1_character_proto_depIdxs,
		EnumInfos:         file_dnd5e_api_v1alpha1_character_proto_enumTypes,
		MessageInfos:      file_dnd5e_api_v1alpha1_character_proto_msgTypes,
	}.Build()
	File_dnd5e_api_v1alpha1_character_proto = out.File
	file_dnd5e_api_v1alpha1_character_proto_goTypes = nil
	file_dnd5e_api_v1alpha1_character_proto_depIdxs = nil
}
