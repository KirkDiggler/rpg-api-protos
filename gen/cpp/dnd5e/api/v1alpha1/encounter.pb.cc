// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: dnd5e/api/v1alpha1/encounter.proto
// Protobuf C++ Version: 6.31.1

#include "dnd5e/api/v1alpha1/encounter.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace dnd5e {
namespace api {
namespace v1alpha1 {
template <typename>
PROTOBUF_CONSTEXPR Room_MetadataEntry_DoNotUse::Room_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Room_MetadataEntry_DoNotUse::MapEntry(Room_MetadataEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Room_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Room_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Room_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Room_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Room_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Room_MetadataEntry_DoNotUseDefaultTypeInternal _Room_MetadataEntry_DoNotUse_default_instance_;

inline constexpr DungeonStartRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : character_ids_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DungeonStartRequest::DungeonStartRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DungeonStartRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DungeonStartRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DungeonStartRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DungeonStartRequestDefaultTypeInternal() {}
  union {
    DungeonStartRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DungeonStartRequestDefaultTypeInternal _DungeonStartRequest_default_instance_;

inline constexpr EntityPlacement::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        entity_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        entity_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        position_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR EntityPlacement::EntityPlacement(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EntityPlacement_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EntityPlacementDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EntityPlacementDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EntityPlacementDefaultTypeInternal() {}
  union {
    EntityPlacement _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EntityPlacementDefaultTypeInternal _EntityPlacement_default_instance_;

inline constexpr Room::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        entities_{},
        metadata_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        width_{0},
        height_{0},
        grid_type_{static_cast< ::api::v1alpha1::GridType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Room::Room(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Room_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RoomDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoomDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoomDefaultTypeInternal() {}
  union {
    Room _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoomDefaultTypeInternal _Room_default_instance_;

inline constexpr DungeonStartResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        encounter_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        room_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DungeonStartResponse::DungeonStartResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DungeonStartResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DungeonStartResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DungeonStartResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DungeonStartResponseDefaultTypeInternal() {}
  union {
    DungeonStartResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DungeonStartResponseDefaultTypeInternal _DungeonStartResponse_default_instance_;
}  // namespace v1alpha1
}  // namespace api
}  // namespace dnd5e
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_dnd5e_2fapi_2fv1alpha1_2fencounter_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_dnd5e_2fapi_2fv1alpha1_2fencounter_2eproto = nullptr;
const ::uint32_t
    TableStruct_dnd5e_2fapi_2fv1alpha1_2fencounter_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EntityPlacement, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EntityPlacement, _impl_.entity_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EntityPlacement, _impl_.entity_type_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EntityPlacement, _impl_.position_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Room_MetadataEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Room_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Room_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Room, _impl_._has_bits_),
        10, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Room, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Room, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Room, _impl_.width_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Room, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Room, _impl_.grid_type_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Room, _impl_.entities_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Room, _impl_.metadata_),
        0,
        1,
        2,
        3,
        4,
        ~0u,
        ~0u,
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::DungeonStartRequest, _impl_.character_ids_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::DungeonStartResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::DungeonStartResponse, _impl_.encounter_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::DungeonStartResponse, _impl_.room_),
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::dnd5e::api::v1alpha1::EntityPlacement)},
        {9, sizeof(::dnd5e::api::v1alpha1::Room_MetadataEntry_DoNotUse)},
        {16, sizeof(::dnd5e::api::v1alpha1::Room)},
        {33, sizeof(::dnd5e::api::v1alpha1::DungeonStartRequest)},
        {35, sizeof(::dnd5e::api::v1alpha1::DungeonStartResponse)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::dnd5e::api::v1alpha1::_EntityPlacement_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_Room_MetadataEntry_DoNotUse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_Room_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_DungeonStartRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_DungeonStartResponse_default_instance_._instance,
};
const char descriptor_table_protodef_dnd5e_2fapi_2fv1alpha1_2fencounter_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\"dnd5e/api/v1alpha1/encounter.proto\022\022dn"
    "d5e.api.v1alpha1\032\036api/v1alpha1/room_comm"
    "on.proto\"\203\001\n\017EntityPlacement\022\033\n\tentity_i"
    "d\030\001 \001(\tR\010entityId\022\037\n\013entity_type\030\002 \001(\tR\n"
    "entityType\0222\n\010position\030\003 \001(\0132\026.api.v1alp"
    "ha1.PositionR\010position\"\317\002\n\004Room\022\016\n\002id\030\001 "
    "\001(\tR\002id\022\022\n\004type\030\002 \001(\tR\004type\022\024\n\005width\030\003 \001"
    "(\005R\005width\022\026\n\006height\030\004 \001(\005R\006height\0223\n\tgri"
    "d_type\030\005 \001(\0162\026.api.v1alpha1.GridTypeR\010gr"
    "idType\022\?\n\010entities\030\006 \003(\0132#.dnd5e.api.v1a"
    "lpha1.EntityPlacementR\010entities\022B\n\010metad"
    "ata\030\007 \003(\0132&.dnd5e.api.v1alpha1.Room.Meta"
    "dataEntryR\010metadata\032;\n\rMetadataEntry\022\020\n\003"
    "key\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001(\tR\005value:\0028\001"
    "\":\n\023DungeonStartRequest\022#\n\rcharacter_ids"
    "\030\001 \003(\tR\014characterIds\"g\n\024DungeonStartResp"
    "onse\022!\n\014encounter_id\030\001 \001(\tR\013encounterId\022"
    ",\n\004room\030\002 \001(\0132\030.dnd5e.api.v1alpha1.RoomR"
    "\004room2u\n\020EncounterService\022a\n\014DungeonStar"
    "t\022\'.dnd5e.api.v1alpha1.DungeonStartReque"
    "st\032(.dnd5e.api.v1alpha1.DungeonStartResp"
    "onseB\337\001\n\026com.dnd5e.api.v1alpha1B\016Encount"
    "erProtoP\001ZKgithub.com/KirkDiggler/rpg-ap"
    "i-protos/gen/go/dnd5e/api/v1alpha1;apiv1"
    "alpha1\242\002\003DAX\252\002\022Dnd5e.Api.V1alpha1\312\002\022Dnd5"
    "e\\Api\\V1alpha1\342\002\036Dnd5e\\Api\\V1alpha1\\GPBM"
    "etadata\352\002\024Dnd5e::Api::V1alpha1b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_dnd5e_2fapi_2fv1alpha1_2fencounter_2eproto_deps[1] = {
        &::descriptor_table_api_2fv1alpha1_2froom_5fcommon_2eproto,
};
static ::absl::once_flag descriptor_table_dnd5e_2fapi_2fv1alpha1_2fencounter_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_dnd5e_2fapi_2fv1alpha1_2fencounter_2eproto = {
    false,
    false,
    1078,
    descriptor_table_protodef_dnd5e_2fapi_2fv1alpha1_2fencounter_2eproto,
    "dnd5e/api/v1alpha1/encounter.proto",
    &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fencounter_2eproto_once,
    descriptor_table_dnd5e_2fapi_2fv1alpha1_2fencounter_2eproto_deps,
    1,
    5,
    schemas,
    file_default_instances,
    TableStruct_dnd5e_2fapi_2fv1alpha1_2fencounter_2eproto::offsets,
    file_level_enum_descriptors_dnd5e_2fapi_2fv1alpha1_2fencounter_2eproto,
    file_level_service_descriptors_dnd5e_2fapi_2fv1alpha1_2fencounter_2eproto,
};
namespace dnd5e {
namespace api {
namespace v1alpha1 {
// ===================================================================

class EntityPlacement::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<EntityPlacement>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EntityPlacement, _impl_._has_bits_);
};

void EntityPlacement::clear_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ != nullptr) _impl_.position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
EntityPlacement::EntityPlacement(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EntityPlacement_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.EntityPlacement)
}
PROTOBUF_NDEBUG_INLINE EntityPlacement::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::dnd5e::api::v1alpha1::EntityPlacement& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        entity_id_(arena, from.entity_id_),
        entity_type_(arena, from.entity_type_) {}

EntityPlacement::EntityPlacement(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EntityPlacement& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EntityPlacement_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EntityPlacement* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.position_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.EntityPlacement)
}
PROTOBUF_NDEBUG_INLINE EntityPlacement::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        entity_id_(arena),
        entity_type_(arena) {}

inline void EntityPlacement::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.position_ = {};
}
EntityPlacement::~EntityPlacement() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.EntityPlacement)
  SharedDtor(*this);
}
inline void EntityPlacement::SharedDtor(MessageLite& self) {
  EntityPlacement& this_ = static_cast<EntityPlacement&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.entity_id_.Destroy();
  this_._impl_.entity_type_.Destroy();
  delete this_._impl_.position_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EntityPlacement::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EntityPlacement(arena);
}
constexpr auto EntityPlacement::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EntityPlacement),
                                            alignof(EntityPlacement));
}
constexpr auto EntityPlacement::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EntityPlacement_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EntityPlacement::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EntityPlacement>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EntityPlacement::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EntityPlacement>(), &EntityPlacement::ByteSizeLong,
              &EntityPlacement::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EntityPlacement, _impl_._cached_size_),
          false,
      },
      &EntityPlacement::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fencounter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EntityPlacement_class_data_ =
        EntityPlacement::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EntityPlacement::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EntityPlacement_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EntityPlacement_class_data_.tc_table);
  return EntityPlacement_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 63, 2>
EntityPlacement::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EntityPlacement, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    EntityPlacement_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::EntityPlacement>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string entity_id = 1 [json_name = "entityId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EntityPlacement, _impl_.entity_id_)}},
    // string entity_type = 2 [json_name = "entityType"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(EntityPlacement, _impl_.entity_type_)}},
    // .api.v1alpha1.Position position = 3 [json_name = "position"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(EntityPlacement, _impl_.position_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string entity_id = 1 [json_name = "entityId"];
    {PROTOBUF_FIELD_OFFSET(EntityPlacement, _impl_.entity_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string entity_type = 2 [json_name = "entityType"];
    {PROTOBUF_FIELD_OFFSET(EntityPlacement, _impl_.entity_type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.Position position = 3 [json_name = "position"];
    {PROTOBUF_FIELD_OFFSET(EntityPlacement, _impl_.position_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
  }},
  {{
    "\42\11\13\0\0\0\0\0"
    "dnd5e.api.v1alpha1.EntityPlacement"
    "entity_id"
    "entity_type"
  }},
};
PROTOBUF_NOINLINE void EntityPlacement::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.EntityPlacement)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.entity_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.entity_type_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EntityPlacement::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EntityPlacement& this_ = static_cast<const EntityPlacement&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EntityPlacement::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EntityPlacement& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.EntityPlacement)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string entity_id = 1 [json_name = "entityId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_entity_id().empty()) {
      const ::std::string& _s = this_._internal_entity_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.EntityPlacement.entity_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string entity_type = 2 [json_name = "entityType"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_entity_type().empty()) {
      const ::std::string& _s = this_._internal_entity_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.EntityPlacement.entity_type");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.Position position = 3 [json_name = "position"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.position_, this_._impl_.position_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.EntityPlacement)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EntityPlacement::ByteSizeLong(const MessageLite& base) {
  const EntityPlacement& this_ = static_cast<const EntityPlacement&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EntityPlacement::ByteSizeLong() const {
  const EntityPlacement& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.EntityPlacement)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string entity_id = 1 [json_name = "entityId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_entity_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_entity_id());
      }
    }
    // string entity_type = 2 [json_name = "entityType"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_entity_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_entity_type());
      }
    }
    // .api.v1alpha1.Position position = 3 [json_name = "position"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.position_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EntityPlacement::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EntityPlacement*>(&to_msg);
  auto& from = static_cast<const EntityPlacement&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.EntityPlacement)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_entity_id().empty()) {
        _this->_internal_set_entity_id(from._internal_entity_id());
      } else {
        if (_this->_impl_.entity_id_.IsDefault()) {
          _this->_internal_set_entity_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_entity_type().empty()) {
        _this->_internal_set_entity_type(from._internal_entity_type());
      } else {
        if (_this->_impl_.entity_type_.IsDefault()) {
          _this->_internal_set_entity_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.position_ != nullptr);
      if (_this->_impl_.position_ == nullptr) {
        _this->_impl_.position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.position_);
      } else {
        _this->_impl_.position_->MergeFrom(*from._impl_.position_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EntityPlacement::CopyFrom(const EntityPlacement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.EntityPlacement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EntityPlacement::InternalSwap(EntityPlacement* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entity_id_, &other->_impl_.entity_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entity_type_, &other->_impl_.entity_type_, arena);
  swap(_impl_.position_, other->_impl_.position_);
}

::google::protobuf::Metadata EntityPlacement::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
Room_MetadataEntry_DoNotUse::Room_MetadataEntry_DoNotUse()
    : SuperType(Room_MetadataEntry_DoNotUse_class_data_.base()) {}
Room_MetadataEntry_DoNotUse::Room_MetadataEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, Room_MetadataEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
Room_MetadataEntry_DoNotUse::Room_MetadataEntry_DoNotUse() : SuperType() {}
Room_MetadataEntry_DoNotUse::Room_MetadataEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL Room_MetadataEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Room_MetadataEntry_DoNotUse(arena);
}
constexpr auto Room_MetadataEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Room_MetadataEntry_DoNotUse),
                                            alignof(Room_MetadataEntry_DoNotUse));
}
constexpr auto Room_MetadataEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Room_MetadataEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Room_MetadataEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Room_MetadataEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Room_MetadataEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&Room_MetadataEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Room_MetadataEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &Room_MetadataEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fencounter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Room_MetadataEntry_DoNotUse_class_data_ =
        Room_MetadataEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Room_MetadataEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Room_MetadataEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Room_MetadataEntry_DoNotUse_class_data_.tc_table);
  return Room_MetadataEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 54, 2>
Room_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Room_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Room_MetadataEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::Room_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Room_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Room_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(Room_MetadataEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(Room_MetadataEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\3\5\0\0\0\0\0"
    "dnd5e.api.v1alpha1.Room.MetadataEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class Room::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Room>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Room, _impl_._has_bits_);
};

Room::Room(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Room_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.Room)
}
PROTOBUF_NDEBUG_INLINE Room::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::dnd5e::api::v1alpha1::Room& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        entities_{visibility, arena, from.entities_},
        metadata_{visibility, arena, from.metadata_},
        id_(arena, from.id_),
        type_(arena, from.type_) {}

Room::Room(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Room& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Room_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Room* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, width_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, width_),
           offsetof(Impl_, grid_type_) -
               offsetof(Impl_, width_) +
               sizeof(Impl_::grid_type_));

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.Room)
}
PROTOBUF_NDEBUG_INLINE Room::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        entities_{visibility, arena},
        metadata_{visibility, arena},
        id_(arena),
        type_(arena) {}

inline void Room::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, width_),
           0,
           offsetof(Impl_, grid_type_) -
               offsetof(Impl_, width_) +
               sizeof(Impl_::grid_type_));
}
Room::~Room() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.Room)
  SharedDtor(*this);
}
inline void Room::SharedDtor(MessageLite& self) {
  Room& this_ = static_cast<Room&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.type_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Room::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Room(arena);
}
constexpr auto Room::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Room, _impl_.entities_) +
          decltype(Room::_impl_.entities_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Room, _impl_.metadata_) +
          decltype(Room::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Room, _impl_.metadata_) +
          decltype(Room::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Room), alignof(Room), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Room::PlacementNew_,
                                 sizeof(Room),
                                 alignof(Room));
  }
}
constexpr auto Room::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Room_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Room::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Room>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Room::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Room>(), &Room::ByteSizeLong,
              &Room::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Room, _impl_._cached_size_),
          false,
      },
      &Room::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fencounter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Room_class_data_ =
        Room::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Room::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Room_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Room_class_data_.tc_table);
  return Room_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 2, 46, 2>
Room::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Room, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Room_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::Room>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Room, _impl_.id_)}},
    // string type = 2 [json_name = "type"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Room, _impl_.type_)}},
    // int32 width = 3 [json_name = "width"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Room, _impl_.width_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(Room, _impl_.width_)}},
    // int32 height = 4 [json_name = "height"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Room, _impl_.height_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(Room, _impl_.height_)}},
    // .api.v1alpha1.GridType grid_type = 5 [json_name = "gridType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Room, _impl_.grid_type_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(Room, _impl_.grid_type_)}},
    // repeated .dnd5e.api.v1alpha1.EntityPlacement entities = 6 [json_name = "entities"];
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Room, _impl_.entities_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string type = 2 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 width = 3 [json_name = "width"];
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.width_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 height = 4 [json_name = "height"];
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.height_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .api.v1alpha1.GridType grid_type = 5 [json_name = "gridType"];
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.grid_type_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // repeated .dnd5e.api.v1alpha1.EntityPlacement entities = 6 [json_name = "entities"];
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.entities_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, string> metadata = 7 [json_name = "metadata"];
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.metadata_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::EntityPlacement>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\27\2\4\0\0\0\0\10"
    "dnd5e.api.v1alpha1.Room"
    "id"
    "type"
    "metadata"
  }},
};
PROTOBUF_NOINLINE void Room::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.Room)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entities_.Clear();
  _impl_.metadata_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.type_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000001cu) != 0) {
    ::memset(&_impl_.width_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.grid_type_) -
        reinterpret_cast<char*>(&_impl_.width_)) + sizeof(_impl_.grid_type_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Room::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Room& this_ = static_cast<const Room&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Room::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Room& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.Room)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1 [json_name = "id"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_id().empty()) {
      const ::std::string& _s = this_._internal_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.Room.id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string type = 2 [json_name = "type"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_type().empty()) {
      const ::std::string& _s = this_._internal_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.Room.type");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int32 width = 3 [json_name = "width"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_width() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_width(), target);
    }
  }

  // int32 height = 4 [json_name = "height"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_height() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_height(), target);
    }
  }

  // .api.v1alpha1.GridType grid_type = 5 [json_name = "gridType"];
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_grid_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          5, this_._internal_grid_type(), target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.EntityPlacement entities = 6 [json_name = "entities"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_entities_size());
       i < n; i++) {
    const auto& repfield = this_._internal_entities().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            6, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // map<string, string> metadata = 7 [json_name = "metadata"];
  if (!this_._internal_metadata().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_metadata();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            7, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.Room.metadata");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.Room.metadata");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            7, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.Room.metadata");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.Room.metadata");
      }
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.Room)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Room::ByteSizeLong(const MessageLite& base) {
  const Room& this_ = static_cast<const Room&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Room::ByteSizeLong() const {
  const Room& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.Room)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.EntityPlacement entities = 6 [json_name = "entities"];
    {
      total_size += 1UL * this_._internal_entities_size();
      for (const auto& msg : this_._internal_entities()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // map<string, string> metadata = 7 [json_name = "metadata"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
      for (const auto& entry : this_._internal_metadata()) {
        total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // string id = 1 [json_name = "id"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_id());
      }
    }
    // string type = 2 [json_name = "type"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_type());
      }
    }
    // int32 width = 3 [json_name = "width"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_width() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_width());
      }
    }
    // int32 height = 4 [json_name = "height"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_height() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_height());
      }
    }
    // .api.v1alpha1.GridType grid_type = 5 [json_name = "gridType"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_grid_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_grid_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Room::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Room*>(&to_msg);
  auto& from = static_cast<const Room&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.Room)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entities()->MergeFrom(
      from._internal_entities());
  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_id().empty()) {
        _this->_internal_set_id(from._internal_id());
      } else {
        if (_this->_impl_.id_.IsDefault()) {
          _this->_internal_set_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_type().empty()) {
        _this->_internal_set_type(from._internal_type());
      } else {
        if (_this->_impl_.type_.IsDefault()) {
          _this->_internal_set_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_width() != 0) {
        _this->_impl_.width_ = from._impl_.width_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_height() != 0) {
        _this->_impl_.height_ = from._impl_.height_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_grid_type() != 0) {
        _this->_impl_.grid_type_ = from._impl_.grid_type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Room::CopyFrom(const Room& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.Room)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Room::InternalSwap(Room* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.entities_.InternalSwap(&other->_impl_.entities_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Room, _impl_.grid_type_)
      + sizeof(Room::_impl_.grid_type_)
      - PROTOBUF_FIELD_OFFSET(Room, _impl_.width_)>(
          reinterpret_cast<char*>(&_impl_.width_),
          reinterpret_cast<char*>(&other->_impl_.width_));
}

::google::protobuf::Metadata Room::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DungeonStartRequest::_Internal {
 public:
};

DungeonStartRequest::DungeonStartRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DungeonStartRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.DungeonStartRequest)
}
PROTOBUF_NDEBUG_INLINE DungeonStartRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::dnd5e::api::v1alpha1::DungeonStartRequest& from_msg)
      : character_ids_{visibility, arena, from.character_ids_},
        _cached_size_{0} {}

DungeonStartRequest::DungeonStartRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DungeonStartRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DungeonStartRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DungeonStartRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.DungeonStartRequest)
}
PROTOBUF_NDEBUG_INLINE DungeonStartRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : character_ids_{visibility, arena},
        _cached_size_{0} {}

inline void DungeonStartRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DungeonStartRequest::~DungeonStartRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.DungeonStartRequest)
  SharedDtor(*this);
}
inline void DungeonStartRequest::SharedDtor(MessageLite& self) {
  DungeonStartRequest& this_ = static_cast<DungeonStartRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DungeonStartRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DungeonStartRequest(arena);
}
constexpr auto DungeonStartRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DungeonStartRequest, _impl_.character_ids_) +
          decltype(DungeonStartRequest::_impl_.character_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(DungeonStartRequest), alignof(DungeonStartRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DungeonStartRequest::PlacementNew_,
                                 sizeof(DungeonStartRequest),
                                 alignof(DungeonStartRequest));
  }
}
constexpr auto DungeonStartRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DungeonStartRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DungeonStartRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DungeonStartRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DungeonStartRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DungeonStartRequest>(), &DungeonStartRequest::ByteSizeLong,
              &DungeonStartRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DungeonStartRequest, _impl_._cached_size_),
          false,
      },
      &DungeonStartRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fencounter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull DungeonStartRequest_class_data_ =
        DungeonStartRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
DungeonStartRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DungeonStartRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DungeonStartRequest_class_data_.tc_table);
  return DungeonStartRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 60, 2>
DungeonStartRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    DungeonStartRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::DungeonStartRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string character_ids = 1 [json_name = "characterIds"];
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DungeonStartRequest, _impl_.character_ids_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string character_ids = 1 [json_name = "characterIds"];
    {PROTOBUF_FIELD_OFFSET(DungeonStartRequest, _impl_.character_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\46\15\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.DungeonStartRequest"
    "character_ids"
  }},
};
PROTOBUF_NOINLINE void DungeonStartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.DungeonStartRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.character_ids_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DungeonStartRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DungeonStartRequest& this_ = static_cast<const DungeonStartRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DungeonStartRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DungeonStartRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.DungeonStartRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string character_ids = 1 [json_name = "characterIds"];
  for (int i = 0, n = this_._internal_character_ids_size(); i < n; ++i) {
    const auto& s = this_._internal_character_ids().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.DungeonStartRequest.character_ids");
    target = stream->WriteString(1, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.DungeonStartRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DungeonStartRequest::ByteSizeLong(const MessageLite& base) {
  const DungeonStartRequest& this_ = static_cast<const DungeonStartRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DungeonStartRequest::ByteSizeLong() const {
  const DungeonStartRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.DungeonStartRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string character_ids = 1 [json_name = "characterIds"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_character_ids().size());
      for (int i = 0, n = this_._internal_character_ids().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_character_ids().Get(i));
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DungeonStartRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DungeonStartRequest*>(&to_msg);
  auto& from = static_cast<const DungeonStartRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.DungeonStartRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_character_ids()->MergeFrom(from._internal_character_ids());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DungeonStartRequest::CopyFrom(const DungeonStartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.DungeonStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DungeonStartRequest::InternalSwap(DungeonStartRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.character_ids_.InternalSwap(&other->_impl_.character_ids_);
}

::google::protobuf::Metadata DungeonStartRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DungeonStartResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<DungeonStartResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DungeonStartResponse, _impl_._has_bits_);
};

DungeonStartResponse::DungeonStartResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DungeonStartResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.DungeonStartResponse)
}
PROTOBUF_NDEBUG_INLINE DungeonStartResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::dnd5e::api::v1alpha1::DungeonStartResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        encounter_id_(arena, from.encounter_id_) {}

DungeonStartResponse::DungeonStartResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DungeonStartResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DungeonStartResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DungeonStartResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.room_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.room_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.DungeonStartResponse)
}
PROTOBUF_NDEBUG_INLINE DungeonStartResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        encounter_id_(arena) {}

inline void DungeonStartResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.room_ = {};
}
DungeonStartResponse::~DungeonStartResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.DungeonStartResponse)
  SharedDtor(*this);
}
inline void DungeonStartResponse::SharedDtor(MessageLite& self) {
  DungeonStartResponse& this_ = static_cast<DungeonStartResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.encounter_id_.Destroy();
  delete this_._impl_.room_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DungeonStartResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DungeonStartResponse(arena);
}
constexpr auto DungeonStartResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DungeonStartResponse),
                                            alignof(DungeonStartResponse));
}
constexpr auto DungeonStartResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DungeonStartResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DungeonStartResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DungeonStartResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DungeonStartResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DungeonStartResponse>(), &DungeonStartResponse::ByteSizeLong,
              &DungeonStartResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DungeonStartResponse, _impl_._cached_size_),
          false,
      },
      &DungeonStartResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fencounter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull DungeonStartResponse_class_data_ =
        DungeonStartResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
DungeonStartResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DungeonStartResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DungeonStartResponse_class_data_.tc_table);
  return DungeonStartResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 60, 2>
DungeonStartResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DungeonStartResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    DungeonStartResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::DungeonStartResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .dnd5e.api.v1alpha1.Room room = 2 [json_name = "room"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(DungeonStartResponse, _impl_.room_)}},
    // string encounter_id = 1 [json_name = "encounterId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DungeonStartResponse, _impl_.encounter_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string encounter_id = 1 [json_name = "encounterId"];
    {PROTOBUF_FIELD_OFFSET(DungeonStartResponse, _impl_.encounter_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .dnd5e.api.v1alpha1.Room room = 2 [json_name = "room"];
    {PROTOBUF_FIELD_OFFSET(DungeonStartResponse, _impl_.room_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::Room>()},
  }},
  {{
    "\47\14\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.DungeonStartResponse"
    "encounter_id"
  }},
};
PROTOBUF_NOINLINE void DungeonStartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.DungeonStartResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.encounter_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.room_ != nullptr);
      _impl_.room_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DungeonStartResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DungeonStartResponse& this_ = static_cast<const DungeonStartResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DungeonStartResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DungeonStartResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.DungeonStartResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string encounter_id = 1 [json_name = "encounterId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_encounter_id().empty()) {
      const ::std::string& _s = this_._internal_encounter_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.DungeonStartResponse.encounter_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.Room room = 2 [json_name = "room"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.room_, this_._impl_.room_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.DungeonStartResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DungeonStartResponse::ByteSizeLong(const MessageLite& base) {
  const DungeonStartResponse& this_ = static_cast<const DungeonStartResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DungeonStartResponse::ByteSizeLong() const {
  const DungeonStartResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.DungeonStartResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string encounter_id = 1 [json_name = "encounterId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_encounter_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_encounter_id());
      }
    }
    // .dnd5e.api.v1alpha1.Room room = 2 [json_name = "room"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.room_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DungeonStartResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DungeonStartResponse*>(&to_msg);
  auto& from = static_cast<const DungeonStartResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.DungeonStartResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_encounter_id().empty()) {
        _this->_internal_set_encounter_id(from._internal_encounter_id());
      } else {
        if (_this->_impl_.encounter_id_.IsDefault()) {
          _this->_internal_set_encounter_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.room_ != nullptr);
      if (_this->_impl_.room_ == nullptr) {
        _this->_impl_.room_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.room_);
      } else {
        _this->_impl_.room_->MergeFrom(*from._impl_.room_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DungeonStartResponse::CopyFrom(const DungeonStartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.DungeonStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DungeonStartResponse::InternalSwap(DungeonStartResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.encounter_id_, &other->_impl_.encounter_id_, arena);
  swap(_impl_.room_, other->_impl_.room_);
}

::google::protobuf::Metadata DungeonStartResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace api
}  // namespace dnd5e
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_dnd5e_2fapi_2fv1alpha1_2fencounter_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
