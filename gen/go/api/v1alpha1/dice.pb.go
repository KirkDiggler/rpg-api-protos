// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: api/v1alpha1/dice.proto

package apiv1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to roll dice
type RollDiceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Entity that owns these rolls (e.g., "char_draft_123", "char_789", "monster_456")
	EntityId string `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	// Context for grouping related rolls (e.g., "ability_scores", "combat_round_1", "damage_rolls")
	Context string `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	// Dice notation to roll (e.g., "4d6", "1d20", "2d8+3")
	Notation string `protobuf:"bytes,3,opt,name=notation,proto3" json:"notation,omitempty"`
	// Number of separate rolls to make (default 1)
	Count int32 `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	// TTL in seconds for this roll session (default 900 = 15 minutes)
	TtlSeconds int32 `protobuf:"varint,5,opt,name=ttl_seconds,json=ttlSeconds,proto3" json:"ttl_seconds,omitempty"`
	// Optional modifier description for display
	ModifierDescription string `protobuf:"bytes,6,opt,name=modifier_description,json=modifierDescription,proto3" json:"modifier_description,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *RollDiceRequest) Reset() {
	*x = RollDiceRequest{}
	mi := &file_api_v1alpha1_dice_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollDiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollDiceRequest) ProtoMessage() {}

func (x *RollDiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_dice_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollDiceRequest.ProtoReflect.Descriptor instead.
func (*RollDiceRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_dice_proto_rawDescGZIP(), []int{0}
}

func (x *RollDiceRequest) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *RollDiceRequest) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

func (x *RollDiceRequest) GetNotation() string {
	if x != nil {
		return x.Notation
	}
	return ""
}

func (x *RollDiceRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *RollDiceRequest) GetTtlSeconds() int32 {
	if x != nil {
		return x.TtlSeconds
	}
	return 0
}

func (x *RollDiceRequest) GetModifierDescription() string {
	if x != nil {
		return x.ModifierDescription
	}
	return ""
}

// Response with dice roll results
type RollDiceResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The rolls that were generated
	Rolls []*DiceRoll `protobuf:"bytes,1,rep,name=rolls,proto3" json:"rolls,omitempty"`
	// When this roll session expires (Unix timestamp)
	ExpiresAt     int64 `protobuf:"varint,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollDiceResponse) Reset() {
	*x = RollDiceResponse{}
	mi := &file_api_v1alpha1_dice_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollDiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollDiceResponse) ProtoMessage() {}

func (x *RollDiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_dice_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollDiceResponse.ProtoReflect.Descriptor instead.
func (*RollDiceResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_dice_proto_rawDescGZIP(), []int{1}
}

func (x *RollDiceResponse) GetRolls() []*DiceRoll {
	if x != nil {
		return x.Rolls
	}
	return nil
}

func (x *RollDiceResponse) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

// A single dice roll result
type DiceRoll struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for this roll within the session
	RollId string `protobuf:"bytes,1,opt,name=roll_id,json=rollId,proto3" json:"roll_id,omitempty"`
	// Dice notation that was rolled
	Notation string `protobuf:"bytes,2,opt,name=notation,proto3" json:"notation,omitempty"`
	// Individual dice values that were rolled
	Dice []int32 `protobuf:"varint,3,rep,packed,name=dice,proto3" json:"dice,omitempty"`
	// Final result after applying modifiers
	Total int32 `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	// Any dice that were dropped (for "drop lowest" etc.)
	Dropped []int32 `protobuf:"varint,5,rep,packed,name=dropped,proto3" json:"dropped,omitempty"`
	// Human-readable description of the roll
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	// Raw dice total before modifiers
	DiceTotal int32 `protobuf:"varint,7,opt,name=dice_total,json=diceTotal,proto3" json:"dice_total,omitempty"`
	// Modifier applied to get final total
	Modifier      int32 `protobuf:"varint,8,opt,name=modifier,proto3" json:"modifier,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiceRoll) Reset() {
	*x = DiceRoll{}
	mi := &file_api_v1alpha1_dice_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiceRoll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiceRoll) ProtoMessage() {}

func (x *DiceRoll) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_dice_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiceRoll.ProtoReflect.Descriptor instead.
func (*DiceRoll) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_dice_proto_rawDescGZIP(), []int{2}
}

func (x *DiceRoll) GetRollId() string {
	if x != nil {
		return x.RollId
	}
	return ""
}

func (x *DiceRoll) GetNotation() string {
	if x != nil {
		return x.Notation
	}
	return ""
}

func (x *DiceRoll) GetDice() []int32 {
	if x != nil {
		return x.Dice
	}
	return nil
}

func (x *DiceRoll) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DiceRoll) GetDropped() []int32 {
	if x != nil {
		return x.Dropped
	}
	return nil
}

func (x *DiceRoll) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DiceRoll) GetDiceTotal() int32 {
	if x != nil {
		return x.DiceTotal
	}
	return 0
}

func (x *DiceRoll) GetModifier() int32 {
	if x != nil {
		return x.Modifier
	}
	return 0
}

// Request to get an existing roll session
type GetRollSessionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Entity that owns the rolls
	EntityId string `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	// Context to retrieve
	Context       string `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRollSessionRequest) Reset() {
	*x = GetRollSessionRequest{}
	mi := &file_api_v1alpha1_dice_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRollSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRollSessionRequest) ProtoMessage() {}

func (x *GetRollSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_dice_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRollSessionRequest.ProtoReflect.Descriptor instead.
func (*GetRollSessionRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_dice_proto_rawDescGZIP(), []int{3}
}

func (x *GetRollSessionRequest) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *GetRollSessionRequest) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

// Response with roll session data
type GetRollSessionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The rolls in this session
	Rolls []*DiceRoll `protobuf:"bytes,1,rep,name=rolls,proto3" json:"rolls,omitempty"`
	// When this session expires (Unix timestamp)
	ExpiresAt int64 `protobuf:"varint,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// When this session was created (Unix timestamp)
	CreatedAt     int64 `protobuf:"varint,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRollSessionResponse) Reset() {
	*x = GetRollSessionResponse{}
	mi := &file_api_v1alpha1_dice_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRollSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRollSessionResponse) ProtoMessage() {}

func (x *GetRollSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_dice_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRollSessionResponse.ProtoReflect.Descriptor instead.
func (*GetRollSessionResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_dice_proto_rawDescGZIP(), []int{4}
}

func (x *GetRollSessionResponse) GetRolls() []*DiceRoll {
	if x != nil {
		return x.Rolls
	}
	return nil
}

func (x *GetRollSessionResponse) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *GetRollSessionResponse) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

// Request to clear a roll session
type ClearRollSessionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Entity that owns the rolls
	EntityId string `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	// Context to clear
	Context       string `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClearRollSessionRequest) Reset() {
	*x = ClearRollSessionRequest{}
	mi := &file_api_v1alpha1_dice_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClearRollSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearRollSessionRequest) ProtoMessage() {}

func (x *ClearRollSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_dice_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearRollSessionRequest.ProtoReflect.Descriptor instead.
func (*ClearRollSessionRequest) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_dice_proto_rawDescGZIP(), []int{5}
}

func (x *ClearRollSessionRequest) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *ClearRollSessionRequest) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

// Response from clearing a roll session
type ClearRollSessionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Confirmation message
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// Number of rolls that were cleared
	RollsCleared  int32 `protobuf:"varint,2,opt,name=rolls_cleared,json=rollsCleared,proto3" json:"rolls_cleared,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClearRollSessionResponse) Reset() {
	*x = ClearRollSessionResponse{}
	mi := &file_api_v1alpha1_dice_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClearRollSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearRollSessionResponse) ProtoMessage() {}

func (x *ClearRollSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_dice_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearRollSessionResponse.ProtoReflect.Descriptor instead.
func (*ClearRollSessionResponse) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_dice_proto_rawDescGZIP(), []int{6}
}

func (x *ClearRollSessionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ClearRollSessionResponse) GetRollsCleared() int32 {
	if x != nil {
		return x.RollsCleared
	}
	return 0
}

var File_api_v1alpha1_dice_proto protoreflect.FileDescriptor

const file_api_v1alpha1_dice_proto_rawDesc = "" +
	"\n" +
	"\x17api/v1alpha1/dice.proto\x12\fapi.v1alpha1\"\xce\x01\n" +
	"\x0fRollDiceRequest\x12\x1b\n" +
	"\tentity_id\x18\x01 \x01(\tR\bentityId\x12\x18\n" +
	"\acontext\x18\x02 \x01(\tR\acontext\x12\x1a\n" +
	"\bnotation\x18\x03 \x01(\tR\bnotation\x12\x14\n" +
	"\x05count\x18\x04 \x01(\x05R\x05count\x12\x1f\n" +
	"\vttl_seconds\x18\x05 \x01(\x05R\n" +
	"ttlSeconds\x121\n" +
	"\x14modifier_description\x18\x06 \x01(\tR\x13modifierDescription\"_\n" +
	"\x10RollDiceResponse\x12,\n" +
	"\x05rolls\x18\x01 \x03(\v2\x16.api.v1alpha1.DiceRollR\x05rolls\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x02 \x01(\x03R\texpiresAt\"\xe0\x01\n" +
	"\bDiceRoll\x12\x17\n" +
	"\aroll_id\x18\x01 \x01(\tR\x06rollId\x12\x1a\n" +
	"\bnotation\x18\x02 \x01(\tR\bnotation\x12\x12\n" +
	"\x04dice\x18\x03 \x03(\x05R\x04dice\x12\x14\n" +
	"\x05total\x18\x04 \x01(\x05R\x05total\x12\x18\n" +
	"\adropped\x18\x05 \x03(\x05R\adropped\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"dice_total\x18\a \x01(\x05R\tdiceTotal\x12\x1a\n" +
	"\bmodifier\x18\b \x01(\x05R\bmodifier\"N\n" +
	"\x15GetRollSessionRequest\x12\x1b\n" +
	"\tentity_id\x18\x01 \x01(\tR\bentityId\x12\x18\n" +
	"\acontext\x18\x02 \x01(\tR\acontext\"\x84\x01\n" +
	"\x16GetRollSessionResponse\x12,\n" +
	"\x05rolls\x18\x01 \x03(\v2\x16.api.v1alpha1.DiceRollR\x05rolls\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x02 \x01(\x03R\texpiresAt\x12\x1d\n" +
	"\n" +
	"created_at\x18\x03 \x01(\x03R\tcreatedAt\"P\n" +
	"\x17ClearRollSessionRequest\x12\x1b\n" +
	"\tentity_id\x18\x01 \x01(\tR\bentityId\x12\x18\n" +
	"\acontext\x18\x02 \x01(\tR\acontext\"Y\n" +
	"\x18ClearRollSessionResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12#\n" +
	"\rrolls_cleared\x18\x02 \x01(\x05R\frollsCleared2\x98\x02\n" +
	"\vDiceService\x12I\n" +
	"\bRollDice\x12\x1d.api.v1alpha1.RollDiceRequest\x1a\x1e.api.v1alpha1.RollDiceResponse\x12[\n" +
	"\x0eGetRollSession\x12#.api.v1alpha1.GetRollSessionRequest\x1a$.api.v1alpha1.GetRollSessionResponse\x12a\n" +
	"\x10ClearRollSession\x12%.api.v1alpha1.ClearRollSessionRequest\x1a&.api.v1alpha1.ClearRollSessionResponseB\xb5\x01\n" +
	"\x10com.api.v1alpha1B\tDiceProtoP\x01ZEgithub.com/KirkDiggler/rpg-api-protos/gen/go/api/v1alpha1;apiv1alpha1\xa2\x02\x03AXX\xaa\x02\fApi.V1alpha1\xca\x02\fApi\\V1alpha1\xe2\x02\x18Api\\V1alpha1\\GPBMetadata\xea\x02\rApi::V1alpha1b\x06proto3"

var (
	file_api_v1alpha1_dice_proto_rawDescOnce sync.Once
	file_api_v1alpha1_dice_proto_rawDescData []byte
)

func file_api_v1alpha1_dice_proto_rawDescGZIP() []byte {
	file_api_v1alpha1_dice_proto_rawDescOnce.Do(func() {
		file_api_v1alpha1_dice_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_v1alpha1_dice_proto_rawDesc), len(file_api_v1alpha1_dice_proto_rawDesc)))
	})
	return file_api_v1alpha1_dice_proto_rawDescData
}

var file_api_v1alpha1_dice_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_api_v1alpha1_dice_proto_goTypes = []any{
	(*RollDiceRequest)(nil),          // 0: api.v1alpha1.RollDiceRequest
	(*RollDiceResponse)(nil),         // 1: api.v1alpha1.RollDiceResponse
	(*DiceRoll)(nil),                 // 2: api.v1alpha1.DiceRoll
	(*GetRollSessionRequest)(nil),    // 3: api.v1alpha1.GetRollSessionRequest
	(*GetRollSessionResponse)(nil),   // 4: api.v1alpha1.GetRollSessionResponse
	(*ClearRollSessionRequest)(nil),  // 5: api.v1alpha1.ClearRollSessionRequest
	(*ClearRollSessionResponse)(nil), // 6: api.v1alpha1.ClearRollSessionResponse
}
var file_api_v1alpha1_dice_proto_depIdxs = []int32{
	2, // 0: api.v1alpha1.RollDiceResponse.rolls:type_name -> api.v1alpha1.DiceRoll
	2, // 1: api.v1alpha1.GetRollSessionResponse.rolls:type_name -> api.v1alpha1.DiceRoll
	0, // 2: api.v1alpha1.DiceService.RollDice:input_type -> api.v1alpha1.RollDiceRequest
	3, // 3: api.v1alpha1.DiceService.GetRollSession:input_type -> api.v1alpha1.GetRollSessionRequest
	5, // 4: api.v1alpha1.DiceService.ClearRollSession:input_type -> api.v1alpha1.ClearRollSessionRequest
	1, // 5: api.v1alpha1.DiceService.RollDice:output_type -> api.v1alpha1.RollDiceResponse
	4, // 6: api.v1alpha1.DiceService.GetRollSession:output_type -> api.v1alpha1.GetRollSessionResponse
	6, // 7: api.v1alpha1.DiceService.ClearRollSession:output_type -> api.v1alpha1.ClearRollSessionResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_v1alpha1_dice_proto_init() }
func file_api_v1alpha1_dice_proto_init() {
	if File_api_v1alpha1_dice_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1alpha1_dice_proto_rawDesc), len(file_api_v1alpha1_dice_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1alpha1_dice_proto_goTypes,
		DependencyIndexes: file_api_v1alpha1_dice_proto_depIdxs,
		MessageInfos:      file_api_v1alpha1_dice_proto_msgTypes,
	}.Build()
	File_api_v1alpha1_dice_proto = out.File
	file_api_v1alpha1_dice_proto_goTypes = nil
	file_api_v1alpha1_dice_proto_depIdxs = nil
}
