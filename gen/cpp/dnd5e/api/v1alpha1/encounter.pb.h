// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: dnd5e/api/v1alpha1/encounter.proto
// Protobuf C++ Version: 6.31.1

#ifndef dnd5e_2fapi_2fv1alpha1_2fencounter_2eproto_2epb_2eh
#define dnd5e_2fapi_2fv1alpha1_2fencounter_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_type_handler.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field.h"
#include "google/protobuf/unknown_field_set.h"
#include "api/v1alpha1/room_common.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_dnd5e_2fapi_2fv1alpha1_2fencounter_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_dnd5e_2fapi_2fv1alpha1_2fencounter_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_dnd5e_2fapi_2fv1alpha1_2fencounter_2eproto;
}  // extern "C"
namespace dnd5e {
namespace api {
namespace v1alpha1 {
class DungeonStartRequest;
struct DungeonStartRequestDefaultTypeInternal;
extern DungeonStartRequestDefaultTypeInternal _DungeonStartRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull DungeonStartRequest_class_data_;
class DungeonStartResponse;
struct DungeonStartResponseDefaultTypeInternal;
extern DungeonStartResponseDefaultTypeInternal _DungeonStartResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull DungeonStartResponse_class_data_;
class EntityPlacement;
struct EntityPlacementDefaultTypeInternal;
extern EntityPlacementDefaultTypeInternal _EntityPlacement_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull EntityPlacement_class_data_;
class Room;
struct RoomDefaultTypeInternal;
extern RoomDefaultTypeInternal _Room_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Room_class_data_;
class Room_MetadataEntry_DoNotUse;
struct Room_MetadataEntry_DoNotUseDefaultTypeInternal;
extern Room_MetadataEntry_DoNotUseDefaultTypeInternal _Room_MetadataEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Room_MetadataEntry_DoNotUse_class_data_;
}  // namespace v1alpha1
}  // namespace api
}  // namespace dnd5e
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace dnd5e {
namespace api {
namespace v1alpha1 {

// ===================================================================


// -------------------------------------------------------------------

class Room_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, std::string,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  Room_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Room_MetadataEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit Room_MetadataEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_Room_MetadataEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_dnd5e_2fapi_2fv1alpha1_2fencounter_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 54,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull Room_MetadataEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class DungeonStartRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dnd5e.api.v1alpha1.DungeonStartRequest) */ {
 public:
  inline DungeonStartRequest() : DungeonStartRequest(nullptr) {}
  ~DungeonStartRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DungeonStartRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DungeonStartRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DungeonStartRequest(::google::protobuf::internal::ConstantInitialized);

  inline DungeonStartRequest(const DungeonStartRequest& from) : DungeonStartRequest(nullptr, from) {}
  inline DungeonStartRequest(DungeonStartRequest&& from) noexcept
      : DungeonStartRequest(nullptr, ::std::move(from)) {}
  inline DungeonStartRequest& operator=(const DungeonStartRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DungeonStartRequest& operator=(DungeonStartRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DungeonStartRequest& default_instance() {
    return *reinterpret_cast<const DungeonStartRequest*>(
        &_DungeonStartRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(DungeonStartRequest& a, DungeonStartRequest& b) { a.Swap(&b); }
  inline void Swap(DungeonStartRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DungeonStartRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DungeonStartRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DungeonStartRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DungeonStartRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DungeonStartRequest& from) { DungeonStartRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DungeonStartRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "dnd5e.api.v1alpha1.DungeonStartRequest"; }

 protected:
  explicit DungeonStartRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  DungeonStartRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const DungeonStartRequest& from);
  DungeonStartRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, DungeonStartRequest&& from) noexcept
      : DungeonStartRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCharacterIdsFieldNumber = 1,
  };
  // repeated string character_ids = 1 [json_name = "characterIds"];
  int character_ids_size() const;
  private:
  int _internal_character_ids_size() const;

  public:
  void clear_character_ids() ;
  const ::std::string& character_ids(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_character_ids(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_character_ids(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_character_ids();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_character_ids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& character_ids() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_character_ids();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_character_ids() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_character_ids();

  public:
  // @@protoc_insertion_point(class_scope:dnd5e.api.v1alpha1.DungeonStartRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 60,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const DungeonStartRequest& from_msg);
    ::google::protobuf::RepeatedPtrField<::std::string> character_ids_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dnd5e_2fapi_2fv1alpha1_2fencounter_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull DungeonStartRequest_class_data_;
// -------------------------------------------------------------------

class EntityPlacement final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dnd5e.api.v1alpha1.EntityPlacement) */ {
 public:
  inline EntityPlacement() : EntityPlacement(nullptr) {}
  ~EntityPlacement() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EntityPlacement* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EntityPlacement));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EntityPlacement(::google::protobuf::internal::ConstantInitialized);

  inline EntityPlacement(const EntityPlacement& from) : EntityPlacement(nullptr, from) {}
  inline EntityPlacement(EntityPlacement&& from) noexcept
      : EntityPlacement(nullptr, ::std::move(from)) {}
  inline EntityPlacement& operator=(const EntityPlacement& from) {
    CopyFrom(from);
    return *this;
  }
  inline EntityPlacement& operator=(EntityPlacement&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EntityPlacement& default_instance() {
    return *reinterpret_cast<const EntityPlacement*>(
        &_EntityPlacement_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(EntityPlacement& a, EntityPlacement& b) { a.Swap(&b); }
  inline void Swap(EntityPlacement* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EntityPlacement* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EntityPlacement* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EntityPlacement>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EntityPlacement& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EntityPlacement& from) { EntityPlacement::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EntityPlacement* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "dnd5e.api.v1alpha1.EntityPlacement"; }

 protected:
  explicit EntityPlacement(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  EntityPlacement(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const EntityPlacement& from);
  EntityPlacement(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, EntityPlacement&& from) noexcept
      : EntityPlacement(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntityIdFieldNumber = 1,
    kEntityTypeFieldNumber = 2,
    kPositionFieldNumber = 3,
  };
  // string entity_id = 1 [json_name = "entityId"];
  void clear_entity_id() ;
  const ::std::string& entity_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_entity_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_entity_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_entity_id();
  void set_allocated_entity_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_entity_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_entity_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_entity_id();

  public:
  // string entity_type = 2 [json_name = "entityType"];
  void clear_entity_type() ;
  const ::std::string& entity_type() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_entity_type(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_entity_type();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_entity_type();
  void set_allocated_entity_type(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_entity_type() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_entity_type(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_entity_type();

  public:
  // .api.v1alpha1.Position position = 3 [json_name = "position"];
  bool has_position() const;
  void clear_position() ;
  const ::api::v1alpha1::Position& position() const;
  [[nodiscard]] ::api::v1alpha1::Position* PROTOBUF_NULLABLE release_position();
  ::api::v1alpha1::Position* PROTOBUF_NONNULL mutable_position();
  void set_allocated_position(::api::v1alpha1::Position* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_position(::api::v1alpha1::Position* PROTOBUF_NULLABLE value);
  ::api::v1alpha1::Position* PROTOBUF_NULLABLE unsafe_arena_release_position();

  private:
  const ::api::v1alpha1::Position& _internal_position() const;
  ::api::v1alpha1::Position* PROTOBUF_NONNULL _internal_mutable_position();

  public:
  // @@protoc_insertion_point(class_scope:dnd5e.api.v1alpha1.EntityPlacement)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 63,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const EntityPlacement& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr entity_id_;
    ::google::protobuf::internal::ArenaStringPtr entity_type_;
    ::api::v1alpha1::Position* PROTOBUF_NULLABLE position_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dnd5e_2fapi_2fv1alpha1_2fencounter_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull EntityPlacement_class_data_;
// -------------------------------------------------------------------

class Room final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dnd5e.api.v1alpha1.Room) */ {
 public:
  inline Room() : Room(nullptr) {}
  ~Room() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Room* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Room));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Room(::google::protobuf::internal::ConstantInitialized);

  inline Room(const Room& from) : Room(nullptr, from) {}
  inline Room(Room&& from) noexcept
      : Room(nullptr, ::std::move(from)) {}
  inline Room& operator=(const Room& from) {
    CopyFrom(from);
    return *this;
  }
  inline Room& operator=(Room&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Room& default_instance() {
    return *reinterpret_cast<const Room*>(
        &_Room_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Room& a, Room& b) { a.Swap(&b); }
  inline void Swap(Room* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Room* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Room* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Room>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Room& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Room& from) { Room::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Room* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "dnd5e.api.v1alpha1.Room"; }

 protected:
  explicit Room(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Room(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Room& from);
  Room(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Room&& from) noexcept
      : Room(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntitiesFieldNumber = 6,
    kMetadataFieldNumber = 7,
    kIdFieldNumber = 1,
    kTypeFieldNumber = 2,
    kWidthFieldNumber = 3,
    kHeightFieldNumber = 4,
    kGridTypeFieldNumber = 5,
  };
  // repeated .dnd5e.api.v1alpha1.EntityPlacement entities = 6 [json_name = "entities"];
  int entities_size() const;
  private:
  int _internal_entities_size() const;

  public:
  void clear_entities() ;
  ::dnd5e::api::v1alpha1::EntityPlacement* PROTOBUF_NONNULL mutable_entities(int index);
  ::google::protobuf::RepeatedPtrField<::dnd5e::api::v1alpha1::EntityPlacement>* PROTOBUF_NONNULL mutable_entities();

  private:
  const ::google::protobuf::RepeatedPtrField<::dnd5e::api::v1alpha1::EntityPlacement>& _internal_entities() const;
  ::google::protobuf::RepeatedPtrField<::dnd5e::api::v1alpha1::EntityPlacement>* PROTOBUF_NONNULL _internal_mutable_entities();
  public:
  const ::dnd5e::api::v1alpha1::EntityPlacement& entities(int index) const;
  ::dnd5e::api::v1alpha1::EntityPlacement* PROTOBUF_NONNULL add_entities();
  const ::google::protobuf::RepeatedPtrField<::dnd5e::api::v1alpha1::EntityPlacement>& entities() const;
  // map<string, string> metadata = 7 [json_name = "metadata"];
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL _internal_mutable_metadata();

  public:
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const ::std::string& id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_id();
  void set_allocated_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_id();

  public:
  // string type = 2 [json_name = "type"];
  void clear_type() ;
  const ::std::string& type() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_type();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_type();
  void set_allocated_type(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_type() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_type(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_type();

  public:
  // int32 width = 3 [json_name = "width"];
  void clear_width() ;
  ::int32_t width() const;
  void set_width(::int32_t value);

  private:
  ::int32_t _internal_width() const;
  void _internal_set_width(::int32_t value);

  public:
  // int32 height = 4 [json_name = "height"];
  void clear_height() ;
  ::int32_t height() const;
  void set_height(::int32_t value);

  private:
  ::int32_t _internal_height() const;
  void _internal_set_height(::int32_t value);

  public:
  // .api.v1alpha1.GridType grid_type = 5 [json_name = "gridType"];
  void clear_grid_type() ;
  ::api::v1alpha1::GridType grid_type() const;
  void set_grid_type(::api::v1alpha1::GridType value);

  private:
  ::api::v1alpha1::GridType _internal_grid_type() const;
  void _internal_set_grid_type(::api::v1alpha1::GridType value);

  public:
  // @@protoc_insertion_point(class_scope:dnd5e.api.v1alpha1.Room)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7,
                                   2, 46,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Room& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::dnd5e::api::v1alpha1::EntityPlacement > entities_;
    ::google::protobuf::internal::MapField<Room_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::int32_t width_;
    ::int32_t height_;
    int grid_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dnd5e_2fapi_2fv1alpha1_2fencounter_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Room_class_data_;
// -------------------------------------------------------------------

class DungeonStartResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:dnd5e.api.v1alpha1.DungeonStartResponse) */ {
 public:
  inline DungeonStartResponse() : DungeonStartResponse(nullptr) {}
  ~DungeonStartResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DungeonStartResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DungeonStartResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DungeonStartResponse(::google::protobuf::internal::ConstantInitialized);

  inline DungeonStartResponse(const DungeonStartResponse& from) : DungeonStartResponse(nullptr, from) {}
  inline DungeonStartResponse(DungeonStartResponse&& from) noexcept
      : DungeonStartResponse(nullptr, ::std::move(from)) {}
  inline DungeonStartResponse& operator=(const DungeonStartResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DungeonStartResponse& operator=(DungeonStartResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DungeonStartResponse& default_instance() {
    return *reinterpret_cast<const DungeonStartResponse*>(
        &_DungeonStartResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(DungeonStartResponse& a, DungeonStartResponse& b) { a.Swap(&b); }
  inline void Swap(DungeonStartResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DungeonStartResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DungeonStartResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DungeonStartResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DungeonStartResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DungeonStartResponse& from) { DungeonStartResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DungeonStartResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "dnd5e.api.v1alpha1.DungeonStartResponse"; }

 protected:
  explicit DungeonStartResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  DungeonStartResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const DungeonStartResponse& from);
  DungeonStartResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, DungeonStartResponse&& from) noexcept
      : DungeonStartResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEncounterIdFieldNumber = 1,
    kRoomFieldNumber = 2,
  };
  // string encounter_id = 1 [json_name = "encounterId"];
  void clear_encounter_id() ;
  const ::std::string& encounter_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_encounter_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_encounter_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_encounter_id();
  void set_allocated_encounter_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_encounter_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_encounter_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_encounter_id();

  public:
  // .dnd5e.api.v1alpha1.Room room = 2 [json_name = "room"];
  bool has_room() const;
  void clear_room() ;
  const ::dnd5e::api::v1alpha1::Room& room() const;
  [[nodiscard]] ::dnd5e::api::v1alpha1::Room* PROTOBUF_NULLABLE release_room();
  ::dnd5e::api::v1alpha1::Room* PROTOBUF_NONNULL mutable_room();
  void set_allocated_room(::dnd5e::api::v1alpha1::Room* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_room(::dnd5e::api::v1alpha1::Room* PROTOBUF_NULLABLE value);
  ::dnd5e::api::v1alpha1::Room* PROTOBUF_NULLABLE unsafe_arena_release_room();

  private:
  const ::dnd5e::api::v1alpha1::Room& _internal_room() const;
  ::dnd5e::api::v1alpha1::Room* PROTOBUF_NONNULL _internal_mutable_room();

  public:
  // @@protoc_insertion_point(class_scope:dnd5e.api.v1alpha1.DungeonStartResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 60,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const DungeonStartResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr encounter_id_;
    ::dnd5e::api::v1alpha1::Room* PROTOBUF_NULLABLE room_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dnd5e_2fapi_2fv1alpha1_2fencounter_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull DungeonStartResponse_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// EntityPlacement

// string entity_id = 1 [json_name = "entityId"];
inline void EntityPlacement::clear_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& EntityPlacement::entity_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dnd5e.api.v1alpha1.EntityPlacement.entity_id)
  return _internal_entity_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void EntityPlacement::set_entity_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dnd5e.api.v1alpha1.EntityPlacement.entity_id)
}
inline ::std::string* PROTOBUF_NONNULL EntityPlacement::mutable_entity_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_entity_id();
  // @@protoc_insertion_point(field_mutable:dnd5e.api.v1alpha1.EntityPlacement.entity_id)
  return _s;
}
inline const ::std::string& EntityPlacement::_internal_entity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_id_.Get();
}
inline void EntityPlacement::_internal_set_entity_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL EntityPlacement::_internal_mutable_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.entity_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE EntityPlacement::release_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dnd5e.api.v1alpha1.EntityPlacement.entity_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.entity_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.entity_id_.Set("", GetArena());
  }
  return released;
}
inline void EntityPlacement::set_allocated_entity_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.entity_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.entity_id_.IsDefault()) {
    _impl_.entity_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.EntityPlacement.entity_id)
}

// string entity_type = 2 [json_name = "entityType"];
inline void EntityPlacement::clear_entity_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_type_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& EntityPlacement::entity_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dnd5e.api.v1alpha1.EntityPlacement.entity_type)
  return _internal_entity_type();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void EntityPlacement::set_entity_type(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.entity_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dnd5e.api.v1alpha1.EntityPlacement.entity_type)
}
inline ::std::string* PROTOBUF_NONNULL EntityPlacement::mutable_entity_type()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_entity_type();
  // @@protoc_insertion_point(field_mutable:dnd5e.api.v1alpha1.EntityPlacement.entity_type)
  return _s;
}
inline const ::std::string& EntityPlacement::_internal_entity_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_type_.Get();
}
inline void EntityPlacement::_internal_set_entity_type(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.entity_type_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL EntityPlacement::_internal_mutable_entity_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.entity_type_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE EntityPlacement::release_entity_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dnd5e.api.v1alpha1.EntityPlacement.entity_type)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.entity_type_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.entity_type_.Set("", GetArena());
  }
  return released;
}
inline void EntityPlacement::set_allocated_entity_type(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.entity_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.entity_type_.IsDefault()) {
    _impl_.entity_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.EntityPlacement.entity_type)
}

// .api.v1alpha1.Position position = 3 [json_name = "position"];
inline bool EntityPlacement::has_position() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.position_ != nullptr);
  return value;
}
inline const ::api::v1alpha1::Position& EntityPlacement::_internal_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::api::v1alpha1::Position* p = _impl_.position_;
  return p != nullptr ? *p : reinterpret_cast<const ::api::v1alpha1::Position&>(::api::v1alpha1::_Position_default_instance_);
}
inline const ::api::v1alpha1::Position& EntityPlacement::position() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dnd5e.api.v1alpha1.EntityPlacement.position)
  return _internal_position();
}
inline void EntityPlacement::unsafe_arena_set_allocated_position(
    ::api::v1alpha1::Position* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }
  _impl_.position_ = reinterpret_cast<::api::v1alpha1::Position*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dnd5e.api.v1alpha1.EntityPlacement.position)
}
inline ::api::v1alpha1::Position* PROTOBUF_NULLABLE EntityPlacement::release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::api::v1alpha1::Position* released = _impl_.position_;
  _impl_.position_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::api::v1alpha1::Position* PROTOBUF_NULLABLE EntityPlacement::unsafe_arena_release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dnd5e.api.v1alpha1.EntityPlacement.position)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::api::v1alpha1::Position* temp = _impl_.position_;
  _impl_.position_ = nullptr;
  return temp;
}
inline ::api::v1alpha1::Position* PROTOBUF_NONNULL EntityPlacement::_internal_mutable_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::api::v1alpha1::Position>(GetArena());
    _impl_.position_ = reinterpret_cast<::api::v1alpha1::Position*>(p);
  }
  return _impl_.position_;
}
inline ::api::v1alpha1::Position* PROTOBUF_NONNULL EntityPlacement::mutable_position()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::api::v1alpha1::Position* _msg = _internal_mutable_position();
  // @@protoc_insertion_point(field_mutable:dnd5e.api.v1alpha1.EntityPlacement.position)
  return _msg;
}
inline void EntityPlacement::set_allocated_position(::api::v1alpha1::Position* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.position_ = reinterpret_cast<::api::v1alpha1::Position*>(value);
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.EntityPlacement.position)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Room

// string id = 1 [json_name = "id"];
inline void Room::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Room::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dnd5e.api.v1alpha1.Room.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Room::set_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dnd5e.api.v1alpha1.Room.id)
}
inline ::std::string* PROTOBUF_NONNULL Room::mutable_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:dnd5e.api.v1alpha1.Room.id)
  return _s;
}
inline const ::std::string& Room::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void Room::_internal_set_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Room::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Room::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dnd5e.api.v1alpha1.Room.id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.id_.Set("", GetArena());
  }
  return released;
}
inline void Room::set_allocated_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.Room.id)
}

// string type = 2 [json_name = "type"];
inline void Room::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& Room::type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dnd5e.api.v1alpha1.Room.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Room::set_type(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dnd5e.api.v1alpha1.Room.type)
}
inline ::std::string* PROTOBUF_NONNULL Room::mutable_type()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:dnd5e.api.v1alpha1.Room.type)
  return _s;
}
inline const ::std::string& Room::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_.Get();
}
inline void Room::_internal_set_type(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.type_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Room::_internal_mutable_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.type_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Room::release_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dnd5e.api.v1alpha1.Room.type)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.type_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.type_.Set("", GetArena());
  }
  return released;
}
inline void Room::set_allocated_type(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.type_.IsDefault()) {
    _impl_.type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.Room.type)
}

// int32 width = 3 [json_name = "width"];
inline void Room::clear_width() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.width_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t Room::width() const {
  // @@protoc_insertion_point(field_get:dnd5e.api.v1alpha1.Room.width)
  return _internal_width();
}
inline void Room::set_width(::int32_t value) {
  _internal_set_width(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:dnd5e.api.v1alpha1.Room.width)
}
inline ::int32_t Room::_internal_width() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.width_;
}
inline void Room::_internal_set_width(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.width_ = value;
}

// int32 height = 4 [json_name = "height"];
inline void Room::clear_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t Room::height() const {
  // @@protoc_insertion_point(field_get:dnd5e.api.v1alpha1.Room.height)
  return _internal_height();
}
inline void Room::set_height(::int32_t value) {
  _internal_set_height(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:dnd5e.api.v1alpha1.Room.height)
}
inline ::int32_t Room::_internal_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_;
}
inline void Room::_internal_set_height(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = value;
}

// .api.v1alpha1.GridType grid_type = 5 [json_name = "gridType"];
inline void Room::clear_grid_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grid_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::api::v1alpha1::GridType Room::grid_type() const {
  // @@protoc_insertion_point(field_get:dnd5e.api.v1alpha1.Room.grid_type)
  return _internal_grid_type();
}
inline void Room::set_grid_type(::api::v1alpha1::GridType value) {
  _internal_set_grid_type(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:dnd5e.api.v1alpha1.Room.grid_type)
}
inline ::api::v1alpha1::GridType Room::_internal_grid_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::api::v1alpha1::GridType>(_impl_.grid_type_);
}
inline void Room::_internal_set_grid_type(::api::v1alpha1::GridType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grid_type_ = value;
}

// repeated .dnd5e.api.v1alpha1.EntityPlacement entities = 6 [json_name = "entities"];
inline int Room::_internal_entities_size() const {
  return _internal_entities().size();
}
inline int Room::entities_size() const {
  return _internal_entities_size();
}
inline void Room::clear_entities() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entities_.Clear();
}
inline ::dnd5e::api::v1alpha1::EntityPlacement* PROTOBUF_NONNULL Room::mutable_entities(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:dnd5e.api.v1alpha1.Room.entities)
  return _internal_mutable_entities()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::dnd5e::api::v1alpha1::EntityPlacement>* PROTOBUF_NONNULL Room::mutable_entities()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:dnd5e.api.v1alpha1.Room.entities)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_entities();
}
inline const ::dnd5e::api::v1alpha1::EntityPlacement& Room::entities(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dnd5e.api.v1alpha1.Room.entities)
  return _internal_entities().Get(index);
}
inline ::dnd5e::api::v1alpha1::EntityPlacement* PROTOBUF_NONNULL Room::add_entities()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::dnd5e::api::v1alpha1::EntityPlacement* _add = _internal_mutable_entities()->Add();
  // @@protoc_insertion_point(field_add:dnd5e.api.v1alpha1.Room.entities)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::dnd5e::api::v1alpha1::EntityPlacement>& Room::entities() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:dnd5e.api.v1alpha1.Room.entities)
  return _internal_entities();
}
inline const ::google::protobuf::RepeatedPtrField<::dnd5e::api::v1alpha1::EntityPlacement>&
Room::_internal_entities() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entities_;
}
inline ::google::protobuf::RepeatedPtrField<::dnd5e::api::v1alpha1::EntityPlacement>* PROTOBUF_NONNULL
Room::_internal_mutable_entities() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.entities_;
}

// map<string, string> metadata = 7 [json_name = "metadata"];
inline int Room::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int Room::metadata_size() const {
  return _internal_metadata_size();
}
inline void Room::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& Room::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& Room::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:dnd5e.api.v1alpha1.Room.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL Room::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL Room::mutable_metadata()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:dnd5e.api.v1alpha1.Room.metadata)
  return _internal_mutable_metadata();
}

// -------------------------------------------------------------------

// DungeonStartRequest

// repeated string character_ids = 1 [json_name = "characterIds"];
inline int DungeonStartRequest::_internal_character_ids_size() const {
  return _internal_character_ids().size();
}
inline int DungeonStartRequest::character_ids_size() const {
  return _internal_character_ids_size();
}
inline void DungeonStartRequest::clear_character_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.character_ids_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL DungeonStartRequest::add_character_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_character_ids()->Add();
  // @@protoc_insertion_point(field_add_mutable:dnd5e.api.v1alpha1.DungeonStartRequest.character_ids)
  return _s;
}
inline const ::std::string& DungeonStartRequest::character_ids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dnd5e.api.v1alpha1.DungeonStartRequest.character_ids)
  return _internal_character_ids().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL DungeonStartRequest::mutable_character_ids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:dnd5e.api.v1alpha1.DungeonStartRequest.character_ids)
  return _internal_mutable_character_ids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void DungeonStartRequest::set_character_ids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_character_ids()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:dnd5e.api.v1alpha1.DungeonStartRequest.character_ids)
}
template <typename Arg_, typename... Args_>
inline void DungeonStartRequest::add_character_ids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_character_ids(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:dnd5e.api.v1alpha1.DungeonStartRequest.character_ids)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& DungeonStartRequest::character_ids()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:dnd5e.api.v1alpha1.DungeonStartRequest.character_ids)
  return _internal_character_ids();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
DungeonStartRequest::mutable_character_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:dnd5e.api.v1alpha1.DungeonStartRequest.character_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_character_ids();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
DungeonStartRequest::_internal_character_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.character_ids_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
DungeonStartRequest::_internal_mutable_character_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.character_ids_;
}

// -------------------------------------------------------------------

// DungeonStartResponse

// string encounter_id = 1 [json_name = "encounterId"];
inline void DungeonStartResponse::clear_encounter_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encounter_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& DungeonStartResponse::encounter_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dnd5e.api.v1alpha1.DungeonStartResponse.encounter_id)
  return _internal_encounter_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void DungeonStartResponse::set_encounter_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.encounter_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:dnd5e.api.v1alpha1.DungeonStartResponse.encounter_id)
}
inline ::std::string* PROTOBUF_NONNULL DungeonStartResponse::mutable_encounter_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_encounter_id();
  // @@protoc_insertion_point(field_mutable:dnd5e.api.v1alpha1.DungeonStartResponse.encounter_id)
  return _s;
}
inline const ::std::string& DungeonStartResponse::_internal_encounter_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.encounter_id_.Get();
}
inline void DungeonStartResponse::_internal_set_encounter_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.encounter_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL DungeonStartResponse::_internal_mutable_encounter_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.encounter_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE DungeonStartResponse::release_encounter_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dnd5e.api.v1alpha1.DungeonStartResponse.encounter_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.encounter_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.encounter_id_.Set("", GetArena());
  }
  return released;
}
inline void DungeonStartResponse::set_allocated_encounter_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.encounter_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.encounter_id_.IsDefault()) {
    _impl_.encounter_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.DungeonStartResponse.encounter_id)
}

// .dnd5e.api.v1alpha1.Room room = 2 [json_name = "room"];
inline bool DungeonStartResponse::has_room() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.room_ != nullptr);
  return value;
}
inline void DungeonStartResponse::clear_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.room_ != nullptr) _impl_.room_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::dnd5e::api::v1alpha1::Room& DungeonStartResponse::_internal_room() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::dnd5e::api::v1alpha1::Room* p = _impl_.room_;
  return p != nullptr ? *p : reinterpret_cast<const ::dnd5e::api::v1alpha1::Room&>(::dnd5e::api::v1alpha1::_Room_default_instance_);
}
inline const ::dnd5e::api::v1alpha1::Room& DungeonStartResponse::room() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:dnd5e.api.v1alpha1.DungeonStartResponse.room)
  return _internal_room();
}
inline void DungeonStartResponse::unsafe_arena_set_allocated_room(
    ::dnd5e::api::v1alpha1::Room* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.room_);
  }
  _impl_.room_ = reinterpret_cast<::dnd5e::api::v1alpha1::Room*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dnd5e.api.v1alpha1.DungeonStartResponse.room)
}
inline ::dnd5e::api::v1alpha1::Room* PROTOBUF_NULLABLE DungeonStartResponse::release_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::dnd5e::api::v1alpha1::Room* released = _impl_.room_;
  _impl_.room_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::dnd5e::api::v1alpha1::Room* PROTOBUF_NULLABLE DungeonStartResponse::unsafe_arena_release_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:dnd5e.api.v1alpha1.DungeonStartResponse.room)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::dnd5e::api::v1alpha1::Room* temp = _impl_.room_;
  _impl_.room_ = nullptr;
  return temp;
}
inline ::dnd5e::api::v1alpha1::Room* PROTOBUF_NONNULL DungeonStartResponse::_internal_mutable_room() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.room_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::dnd5e::api::v1alpha1::Room>(GetArena());
    _impl_.room_ = reinterpret_cast<::dnd5e::api::v1alpha1::Room*>(p);
  }
  return _impl_.room_;
}
inline ::dnd5e::api::v1alpha1::Room* PROTOBUF_NONNULL DungeonStartResponse::mutable_room()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::dnd5e::api::v1alpha1::Room* _msg = _internal_mutable_room();
  // @@protoc_insertion_point(field_mutable:dnd5e.api.v1alpha1.DungeonStartResponse.room)
  return _msg;
}
inline void DungeonStartResponse::set_allocated_room(::dnd5e::api::v1alpha1::Room* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.room_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.room_ = reinterpret_cast<::dnd5e::api::v1alpha1::Room*>(value);
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.DungeonStartResponse.room)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace api
}  // namespace dnd5e


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // dnd5e_2fapi_2fv1alpha1_2fencounter_2eproto_2epb_2eh
