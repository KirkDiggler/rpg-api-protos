// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: api/v1alpha1/room_spatial.proto
// Protobuf C++ Version: 6.32.0

#include "api/v1alpha1/room_spatial.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace api {
namespace v1alpha1 {

inline constexpr TimeRange::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        start_time_{::int64_t{0}},
        end_time_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR TimeRange::TimeRange(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TimeRange_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TimeRangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TimeRangeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TimeRangeDefaultTypeInternal() {}
  union {
    TimeRange _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TimeRangeDefaultTypeInternal _TimeRange_default_instance_;

inline constexpr SpatialQueryStats::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        execution_time_ms_{0},
        cache_hit_ratio_{0},
        entities_processed_{0},
        calculations_performed_{0},
        memory_bytes_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR SpatialQueryStats::SpatialQueryStats(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SpatialQueryStats_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SpatialQueryStatsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpatialQueryStatsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpatialQueryStatsDefaultTypeInternal() {}
  union {
    SpatialQueryStats _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpatialQueryStatsDefaultTypeInternal _SpatialQueryStats_default_instance_;

inline constexpr RectangleParams::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        width_{0},
        height_{0},
        rotation_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RectangleParams::RectangleParams(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RectangleParams_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RectangleParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RectangleParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RectangleParamsDefaultTypeInternal() {}
  union {
    RectangleParams _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RectangleParamsDefaultTypeInternal _RectangleParams_default_instance_;

inline constexpr RangeQueryOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        include_entity_types_{},
        exclude_entity_types_{},
        require_line_of_sight_{false},
        max_results_{0},
        sort_order_{static_cast< ::api::v1alpha1::RangeSortOrder >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR RangeQueryOptions::RangeQueryOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RangeQueryOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RangeQueryOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RangeQueryOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RangeQueryOptionsDefaultTypeInternal() {}
  union {
    RangeQueryOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RangeQueryOptionsDefaultTypeInternal _RangeQueryOptions_default_instance_;

inline constexpr PlacementOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        max_search_distance_{0},
        allow_entity_overlap_{false},
        allow_difficult_terrain_{false},
        find_nearest_valid_{false} {}

template <typename>
PROTOBUF_CONSTEXPR PlacementOptions::PlacementOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PlacementOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlacementOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlacementOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlacementOptionsDefaultTypeInternal() {}
  union {
    PlacementOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlacementOptionsDefaultTypeInternal _PlacementOptions_default_instance_;

inline constexpr PathfindingStats::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        computation_time_ms_{0},
        nodes_explored_{0},
        algorithm_{static_cast< ::api::v1alpha1::PathfindingAlgorithm >(0)},
        cache_hit_ratio_{0},
        memory_bytes_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR PathfindingStats::PathfindingStats(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PathfindingStats_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PathfindingStatsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PathfindingStatsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PathfindingStatsDefaultTypeInternal() {}
  union {
    PathfindingStats _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PathfindingStatsDefaultTypeInternal _PathfindingStats_default_instance_;

inline constexpr PathfindingOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        avoid_entity_types_{},
        entity_size_{0},
        movement_type_{static_cast< ::api::v1alpha1::MovementType >(0)},
        path_preference_{static_cast< ::api::v1alpha1::PathPreference >(0)},
        max_cost_{0},
        allow_difficult_terrain_{false},
        max_alternatives_{0},
        algorithm_{static_cast< ::api::v1alpha1::PathfindingAlgorithm >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR PathfindingOptions::PathfindingOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PathfindingOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PathfindingOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PathfindingOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PathfindingOptionsDefaultTypeInternal() {}
  union {
    PathfindingOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PathfindingOptionsDefaultTypeInternal _PathfindingOptions_default_instance_;

inline constexpr MultiRoomPathfindingOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        entity_size_{0},
        max_total_cost_{0},
        movement_type_{static_cast< ::api::v1alpha1::MovementType >(0)},
        allow_door_opening_{false},
        prefer_known_paths_{false},
        max_rooms_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MultiRoomPathfindingOptions::MultiRoomPathfindingOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MultiRoomPathfindingOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MultiRoomPathfindingOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MultiRoomPathfindingOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MultiRoomPathfindingOptionsDefaultTypeInternal() {}
  union {
    MultiRoomPathfindingOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MultiRoomPathfindingOptionsDefaultTypeInternal _MultiRoomPathfindingOptions_default_instance_;

inline constexpr MultiRoomOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        entity_size_{0},
        max_range_{0},
        cross_rooms_{false},
        max_rooms_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MultiRoomOptions::MultiRoomOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MultiRoomOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MultiRoomOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MultiRoomOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MultiRoomOptionsDefaultTypeInternal() {}
  union {
    MultiRoomOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MultiRoomOptionsDefaultTypeInternal _MultiRoomOptions_default_instance_;

inline constexpr MovementOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        movement_speed_{0},
        movement_type_{static_cast< ::api::v1alpha1::MovementType >(0)},
        allow_difficult_terrain_{false},
        allow_entity_overlap_{false},
        max_movement_cost_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MovementOptions::MovementOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MovementOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MovementOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MovementOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MovementOptionsDefaultTypeInternal() {}
  union {
    MovementOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MovementOptionsDefaultTypeInternal _MovementOptions_default_instance_;

inline constexpr LineParams::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        length_{0},
        width_{0},
        direction_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LineParams::LineParams(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LineParams_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LineParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LineParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LineParamsDefaultTypeInternal() {}
  union {
    LineParams _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LineParamsDefaultTypeInternal _LineParams_default_instance_;

inline constexpr LineOfSightOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ignore_entity_types_{},
        max_range_{0},
        consider_height_{false},
        partial_cover_blocks_{false},
        detailed_blocking_info_{false} {}

template <typename>
PROTOBUF_CONSTEXPR LineOfSightOptions::LineOfSightOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LineOfSightOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LineOfSightOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LineOfSightOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LineOfSightOptionsDefaultTypeInternal() {}
  union {
    LineOfSightOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LineOfSightOptionsDefaultTypeInternal _LineOfSightOptions_default_instance_;

inline constexpr InvalidateSpatialCacheResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        memory_freed_bytes_{::int64_t{0}},
        entries_invalidated_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InvalidateSpatialCacheResponse::InvalidateSpatialCacheResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(InvalidateSpatialCacheResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InvalidateSpatialCacheResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InvalidateSpatialCacheResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InvalidateSpatialCacheResponseDefaultTypeInternal() {}
  union {
    InvalidateSpatialCacheResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InvalidateSpatialCacheResponseDefaultTypeInternal _InvalidateSpatialCacheResponse_default_instance_;

inline constexpr InvalidateSpatialCacheRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        cache_types_{},
        _cache_types_cached_byte_size_{0},
        room_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        invalidate_all_{false} {}

template <typename>
PROTOBUF_CONSTEXPR InvalidateSpatialCacheRequest::InvalidateSpatialCacheRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(InvalidateSpatialCacheRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InvalidateSpatialCacheRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InvalidateSpatialCacheRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InvalidateSpatialCacheRequestDefaultTypeInternal() {}
  union {
    InvalidateSpatialCacheRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InvalidateSpatialCacheRequestDefaultTypeInternal _InvalidateSpatialCacheRequest_default_instance_;

inline constexpr IndexStats::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        build_time_ms_{0},
        query_time_ms_{0},
        cache_hit_ratio_{0},
        index_memory_bytes_{::int64_t{0}},
        last_updated_{::int64_t{0}},
        index_type_{static_cast< ::api::v1alpha1::SpatialIndexType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR IndexStats::IndexStats(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(IndexStats_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct IndexStatsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IndexStatsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IndexStatsDefaultTypeInternal() {}
  union {
    IndexStats _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IndexStatsDefaultTypeInternal _IndexStats_default_instance_;

inline constexpr ConeParams::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        radius_{0},
        direction_{0},
        angle_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ConeParams::ConeParams(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ConeParams_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ConeParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConeParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConeParamsDefaultTypeInternal() {}
  union {
    ConeParams _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConeParamsDefaultTypeInternal _ConeParams_default_instance_;

inline constexpr CircleParams::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        radius_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CircleParams::CircleParams(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CircleParams_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CircleParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CircleParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CircleParamsDefaultTypeInternal() {}
  union {
    CircleParams _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CircleParamsDefaultTypeInternal _CircleParams_default_instance_;

inline constexpr CacheStats::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        hit_ratio_{0},
        hits_{::int64_t{0}},
        misses_{::int64_t{0}},
        size_bytes_{::int64_t{0}},
        entry_count_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CacheStats::CacheStats(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CacheStats_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CacheStatsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CacheStatsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CacheStatsDefaultTypeInternal() {}
  union {
    CacheStats _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CacheStatsDefaultTypeInternal _CacheStats_default_instance_;

inline constexpr BoundingBox::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        min_x_{0},
        min_y_{0},
        max_x_{0},
        max_y_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BoundingBox::BoundingBox(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(BoundingBox_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BoundingBoxDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BoundingBoxDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BoundingBoxDefaultTypeInternal() {}
  union {
    BoundingBox _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BoundingBoxDefaultTypeInternal _BoundingBox_default_instance_;

inline constexpr AreaOfEffectOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        include_entity_types_{},
        require_line_of_sight_{false},
        exclude_center_{false},
        calculate_secondary_effects_{false},
        cover_rules_{static_cast< ::api::v1alpha1::CoverRules >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR AreaOfEffectOptions::AreaOfEffectOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AreaOfEffectOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AreaOfEffectOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AreaOfEffectOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AreaOfEffectOptionsDefaultTypeInternal() {}
  union {
    AreaOfEffectOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AreaOfEffectOptionsDefaultTypeInternal _AreaOfEffectOptions_default_instance_;

inline constexpr ValidateMovementRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        room_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        entity_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        from_position_{nullptr},
        to_position_{nullptr},
        options_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ValidateMovementRequest::ValidateMovementRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ValidateMovementRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValidateMovementRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidateMovementRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidateMovementRequestDefaultTypeInternal() {}
  union {
    ValidateMovementRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidateMovementRequestDefaultTypeInternal _ValidateMovementRequest_default_instance_;

inline constexpr ValidateEntityPlacementRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        room_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        entity_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        position_{nullptr},
        options_{nullptr},
        entity_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ValidateEntityPlacementRequest::ValidateEntityPlacementRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ValidateEntityPlacementRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValidateEntityPlacementRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidateEntityPlacementRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidateEntityPlacementRequestDefaultTypeInternal() {}
  union {
    ValidateEntityPlacementRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidateEntityPlacementRequestDefaultTypeInternal _ValidateEntityPlacementRequest_default_instance_;

inline constexpr TerrainEffect::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        effect_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        position_{nullptr},
        cost_multiplier_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TerrainEffect::TerrainEffect(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TerrainEffect_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TerrainEffectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TerrainEffectDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TerrainEffectDefaultTypeInternal() {}
  union {
    TerrainEffect _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TerrainEffectDefaultTypeInternal _TerrainEffect_default_instance_;

inline constexpr SecondaryEffect::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        target_entities_{},
        effect_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        origin_{nullptr},
        intensity_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SecondaryEffect::SecondaryEffect(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SecondaryEffect_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SecondaryEffectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SecondaryEffectDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SecondaryEffectDefaultTypeInternal() {}
  union {
    SecondaryEffect _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SecondaryEffectDefaultTypeInternal _SecondaryEffect_default_instance_;

inline constexpr RoomTransition::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        from_room_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        to_room_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        connection_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        transition_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        required_action_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        position_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RoomTransition::RoomTransition(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RoomTransition_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RoomTransitionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoomTransitionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoomTransitionDefaultTypeInternal() {}
  union {
    RoomTransition _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoomTransitionDefaultTypeInternal _RoomTransition_default_instance_;

inline constexpr QuerySpatialIndexRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        entity_types_{},
        tags_{},
        room_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        bounding_box_{nullptr},
        index_type_{static_cast< ::api::v1alpha1::SpatialIndexType >(0)},
        precision_{static_cast< ::api::v1alpha1::QueryPrecision >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR QuerySpatialIndexRequest::QuerySpatialIndexRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(QuerySpatialIndexRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QuerySpatialIndexRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuerySpatialIndexRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuerySpatialIndexRequestDefaultTypeInternal() {}
  union {
    QuerySpatialIndexRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuerySpatialIndexRequestDefaultTypeInternal _QuerySpatialIndexRequest_default_instance_;

inline constexpr QueryMultiRoomLineOfSightRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        from_room_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        to_room_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        entity_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        from_position_{nullptr},
        to_position_{nullptr},
        options_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR QueryMultiRoomLineOfSightRequest::QueryMultiRoomLineOfSightRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(QueryMultiRoomLineOfSightRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryMultiRoomLineOfSightRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryMultiRoomLineOfSightRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryMultiRoomLineOfSightRequestDefaultTypeInternal() {}
  union {
    QueryMultiRoomLineOfSightRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryMultiRoomLineOfSightRequestDefaultTypeInternal _QueryMultiRoomLineOfSightRequest_default_instance_;

inline constexpr QueryLineOfSightRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        room_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        entity_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        from_position_{nullptr},
        to_position_{nullptr},
        options_{nullptr},
        entity_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR QueryLineOfSightRequest::QueryLineOfSightRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(QueryLineOfSightRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryLineOfSightRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryLineOfSightRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryLineOfSightRequestDefaultTypeInternal() {}
  union {
    QueryLineOfSightRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryLineOfSightRequestDefaultTypeInternal _QueryLineOfSightRequest_default_instance_;

inline constexpr QueryEntitiesInRangeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        room_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        center_position_{nullptr},
        options_{nullptr},
        range_{0} {}

template <typename>
PROTOBUF_CONSTEXPR QueryEntitiesInRangeRequest::QueryEntitiesInRangeRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(QueryEntitiesInRangeRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryEntitiesInRangeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryEntitiesInRangeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryEntitiesInRangeRequestDefaultTypeInternal() {}
  union {
    QueryEntitiesInRangeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryEntitiesInRangeRequestDefaultTypeInternal _QueryEntitiesInRangeRequest_default_instance_;

inline constexpr PathSegment::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        positions_{},
        room_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        enter_point_{nullptr},
        exit_point_{nullptr},
        segment_cost_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PathSegment::PathSegment(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PathSegment_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PathSegmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PathSegmentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PathSegmentDefaultTypeInternal() {}
  union {
    PathSegment _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PathSegmentDefaultTypeInternal _PathSegment_default_instance_;

inline constexpr PathAction::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        action_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        target_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        difficulty_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        position_{nullptr},
        time_seconds_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PathAction::PathAction(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PathAction_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PathActionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PathActionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PathActionDefaultTypeInternal() {}
  union {
    PathAction _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PathActionDefaultTypeInternal _PathAction_default_instance_;

inline constexpr MultiRoomPosition::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        room_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        position_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR MultiRoomPosition::MultiRoomPosition(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MultiRoomPosition_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MultiRoomPositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MultiRoomPositionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MultiRoomPositionDefaultTypeInternal() {}
  union {
    MultiRoomPosition _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MultiRoomPositionDefaultTypeInternal _MultiRoomPosition_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse::GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse::MapEntry(GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct GetSpatialStatsResponse_StatsByTypeEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSpatialStatsResponse_StatsByTypeEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSpatialStatsResponse_StatsByTypeEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSpatialStatsResponse_StatsByTypeEntry_DoNotUseDefaultTypeInternal _GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetSpatialStatsResponse_IndexStatsEntry_DoNotUse::GetSpatialStatsResponse_IndexStatsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : GetSpatialStatsResponse_IndexStatsEntry_DoNotUse::MapEntry(GetSpatialStatsResponse_IndexStatsEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : GetSpatialStatsResponse_IndexStatsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct GetSpatialStatsResponse_IndexStatsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSpatialStatsResponse_IndexStatsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSpatialStatsResponse_IndexStatsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GetSpatialStatsResponse_IndexStatsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSpatialStatsResponse_IndexStatsEntry_DoNotUseDefaultTypeInternal _GetSpatialStatsResponse_IndexStatsEntry_DoNotUse_default_instance_;

inline constexpr GetSpatialStatsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        room_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        time_range_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetSpatialStatsRequest::GetSpatialStatsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetSpatialStatsRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetSpatialStatsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSpatialStatsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSpatialStatsRequestDefaultTypeInternal() {}
  union {
    GetSpatialStatsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSpatialStatsRequestDefaultTypeInternal _GetSpatialStatsRequest_default_instance_;

inline constexpr CustomShapeParams::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : vertices_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CustomShapeParams::CustomShapeParams(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CustomShapeParams_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CustomShapeParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomShapeParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomShapeParamsDefaultTypeInternal() {}
  union {
    CustomShapeParams _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomShapeParamsDefaultTypeInternal _CustomShapeParams_default_instance_;

inline constexpr CoverInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        cover_source_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cover_position_{nullptr},
        cover_percentage_{0},
        cover_type_{static_cast< ::api::v1alpha1::CoverType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR CoverInfo::CoverInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CoverInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CoverInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CoverInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CoverInfoDefaultTypeInternal() {}
  union {
    CoverInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CoverInfoDefaultTypeInternal _CoverInfo_default_instance_;

inline constexpr CoverAnalysisResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        cover_source_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        position_{nullptr},
        cover_percentage_{0},
        cover_type_{static_cast< ::api::v1alpha1::CoverType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR CoverAnalysisResult::CoverAnalysisResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CoverAnalysisResult_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CoverAnalysisResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CoverAnalysisResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CoverAnalysisResultDefaultTypeInternal() {}
  union {
    CoverAnalysisResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CoverAnalysisResultDefaultTypeInternal _CoverAnalysisResult_default_instance_;

inline constexpr ConnectionPoint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        room_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        connected_to_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        connection_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        blocking_entity_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        position_{nullptr},
        is_blocked_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ConnectionPoint::ConnectionPoint(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ConnectionPoint_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ConnectionPointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConnectionPointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConnectionPointDefaultTypeInternal() {}
  union {
    ConnectionPoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConnectionPointDefaultTypeInternal _ConnectionPoint_default_instance_;

inline constexpr CalculateMultiRoomPathRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        from_room_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        to_room_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        entity_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        from_position_{nullptr},
        to_position_{nullptr},
        options_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CalculateMultiRoomPathRequest::CalculateMultiRoomPathRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CalculateMultiRoomPathRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CalculateMultiRoomPathRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalculateMultiRoomPathRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalculateMultiRoomPathRequestDefaultTypeInternal() {}
  union {
    CalculateMultiRoomPathRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalculateMultiRoomPathRequestDefaultTypeInternal _CalculateMultiRoomPathRequest_default_instance_;

inline constexpr CalculateMovementPathRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        room_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        entity_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        from_position_{nullptr},
        to_position_{nullptr},
        options_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CalculateMovementPathRequest::CalculateMovementPathRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CalculateMovementPathRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CalculateMovementPathRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalculateMovementPathRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalculateMovementPathRequestDefaultTypeInternal() {}
  union {
    CalculateMovementPathRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalculateMovementPathRequestDefaultTypeInternal _CalculateMovementPathRequest_default_instance_;

inline constexpr BlockingInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        blocking_entity_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        blocking_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        blocking_position_{nullptr},
        blocking_percentage_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BlockingInfo::BlockingInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(BlockingInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlockingInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockingInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockingInfoDefaultTypeInternal() {}
  union {
    BlockingInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockingInfoDefaultTypeInternal _BlockingInfo_default_instance_;

inline constexpr ValidateMovementResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        path_{},
        terrain_effects_{},
        errors_{},
        stats_{nullptr},
        movement_cost_{0},
        is_valid_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ValidateMovementResponse::ValidateMovementResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ValidateMovementResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValidateMovementResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidateMovementResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidateMovementResponseDefaultTypeInternal() {}
  union {
    ValidateMovementResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidateMovementResponseDefaultTypeInternal _ValidateMovementResponse_default_instance_;

inline constexpr ValidateEntityPlacementResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        overlapping_entities_{},
        terrain_effects_{},
        errors_{},
        actual_position_{nullptr},
        stats_{nullptr},
        is_valid_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ValidateEntityPlacementResponse::ValidateEntityPlacementResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ValidateEntityPlacementResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValidateEntityPlacementResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidateEntityPlacementResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidateEntityPlacementResponseDefaultTypeInternal() {}
  union {
    ValidateEntityPlacementResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidateEntityPlacementResponseDefaultTypeInternal _ValidateEntityPlacementResponse_default_instance_;

inline constexpr QueryMultiRoomLineOfSightResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rooms_crossed_{},
        connection_points_{},
        path_positions_{},
        blocking_entity_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        blocking_position_{nullptr},
        stats_{nullptr},
        total_distance_{0},
        has_line_of_sight_{false} {}

template <typename>
PROTOBUF_CONSTEXPR QueryMultiRoomLineOfSightResponse::QueryMultiRoomLineOfSightResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(QueryMultiRoomLineOfSightResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryMultiRoomLineOfSightResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryMultiRoomLineOfSightResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryMultiRoomLineOfSightResponseDefaultTypeInternal() {}
  union {
    QueryMultiRoomLineOfSightResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryMultiRoomLineOfSightResponseDefaultTypeInternal _QueryMultiRoomLineOfSightResponse_default_instance_;

inline constexpr QueryLineOfSightResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        blocking_info_{nullptr},
        cover_info_{nullptr},
        stats_{nullptr},
        distance_{0},
        has_line_of_sight_{false} {}

template <typename>
PROTOBUF_CONSTEXPR QueryLineOfSightResponse::QueryLineOfSightResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(QueryLineOfSightResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryLineOfSightResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryLineOfSightResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryLineOfSightResponseDefaultTypeInternal() {}
  union {
    QueryLineOfSightResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryLineOfSightResponseDefaultTypeInternal _QueryLineOfSightResponse_default_instance_;

inline constexpr MultiRoomPath::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        segments_{},
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        total_cost_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MultiRoomPath::MultiRoomPath(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MultiRoomPath_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MultiRoomPathDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MultiRoomPathDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MultiRoomPathDefaultTypeInternal() {}
  union {
    MultiRoomPath _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MultiRoomPathDefaultTypeInternal _MultiRoomPath_default_instance_;

inline constexpr MovementPath::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        positions_{},
        terrain_effects_{},
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        total_cost_{0},
        path_type_{static_cast< ::api::v1alpha1::PathPreference >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR MovementPath::MovementPath(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MovementPath_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MovementPathDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MovementPathDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MovementPathDefaultTypeInternal() {}
  union {
    MovementPath _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MovementPathDefaultTypeInternal _MovementPath_default_instance_;

inline constexpr GetSpatialStatsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        stats_by_type_{},
        index_stats_{},
        overall_stats_{nullptr},
        cache_stats_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetSpatialStatsResponse::GetSpatialStatsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetSpatialStatsResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetSpatialStatsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSpatialStatsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSpatialStatsResponseDefaultTypeInternal() {}
  union {
    GetSpatialStatsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSpatialStatsResponseDefaultTypeInternal _GetSpatialStatsResponse_default_instance_;

inline constexpr EntityRangeResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        entity_{nullptr},
        cover_info_{nullptr},
        distance_{0},
        direction_{0},
        has_line_of_sight_{false} {}

template <typename>
PROTOBUF_CONSTEXPR EntityRangeResult::EntityRangeResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EntityRangeResult_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EntityRangeResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EntityRangeResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EntityRangeResultDefaultTypeInternal() {}
  union {
    EntityRangeResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EntityRangeResultDefaultTypeInternal _EntityRangeResult_default_instance_;

inline constexpr EntityIndexResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        entity_{nullptr},
        entity_bounds_{nullptr},
        distance_{0},
        exact_match_{false} {}

template <typename>
PROTOBUF_CONSTEXPR EntityIndexResult::EntityIndexResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EntityIndexResult_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EntityIndexResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EntityIndexResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EntityIndexResultDefaultTypeInternal() {}
  union {
    EntityIndexResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EntityIndexResultDefaultTypeInternal _EntityIndexResult_default_instance_;

inline constexpr AreaOfEffectShape::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        shape_type_{static_cast< ::api::v1alpha1::AreaOfEffectType >(0)},
        shape_params_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR AreaOfEffectShape::AreaOfEffectShape(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AreaOfEffectShape_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AreaOfEffectShapeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AreaOfEffectShapeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AreaOfEffectShapeDefaultTypeInternal() {}
  union {
    AreaOfEffectShape _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AreaOfEffectShapeDefaultTypeInternal _AreaOfEffectShape_default_instance_;

inline constexpr AreaOfEffectResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        relative_position_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        entity_{nullptr},
        distance_{0},
        direction_{0},
        line_of_sight_{false},
        cover_type_{static_cast< ::api::v1alpha1::CoverType >(0)},
        cover_percentage_{0},
        effect_strength_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AreaOfEffectResult::AreaOfEffectResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AreaOfEffectResult_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AreaOfEffectResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AreaOfEffectResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AreaOfEffectResultDefaultTypeInternal() {}
  union {
    AreaOfEffectResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AreaOfEffectResultDefaultTypeInternal _AreaOfEffectResult_default_instance_;

inline constexpr QuerySpatialIndexResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        entities_{},
        index_stats_{nullptr},
        query_region_{nullptr},
        total_candidates_{0},
        filtered_results_{0} {}

template <typename>
PROTOBUF_CONSTEXPR QuerySpatialIndexResponse::QuerySpatialIndexResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(QuerySpatialIndexResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QuerySpatialIndexResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuerySpatialIndexResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuerySpatialIndexResponseDefaultTypeInternal() {}
  union {
    QuerySpatialIndexResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuerySpatialIndexResponseDefaultTypeInternal _QuerySpatialIndexResponse_default_instance_;

inline constexpr QueryEntitiesInRangeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        entities_{},
        stats_{nullptr},
        total_count_{0} {}

template <typename>
PROTOBUF_CONSTEXPR QueryEntitiesInRangeResponse::QueryEntitiesInRangeResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(QueryEntitiesInRangeResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryEntitiesInRangeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryEntitiesInRangeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryEntitiesInRangeResponseDefaultTypeInternal() {}
  union {
    QueryEntitiesInRangeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryEntitiesInRangeResponseDefaultTypeInternal _QueryEntitiesInRangeResponse_default_instance_;

inline constexpr QueryAreaOfEffectResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        affected_entities_{},
        area_positions_{},
        cover_analysis_{},
        secondary_effects_{},
        effect_center_{nullptr},
        stats_{nullptr},
        total_area_{0} {}

template <typename>
PROTOBUF_CONSTEXPR QueryAreaOfEffectResponse::QueryAreaOfEffectResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(QueryAreaOfEffectResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryAreaOfEffectResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryAreaOfEffectResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryAreaOfEffectResponseDefaultTypeInternal() {}
  union {
    QueryAreaOfEffectResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryAreaOfEffectResponseDefaultTypeInternal _QueryAreaOfEffectResponse_default_instance_;

inline constexpr QueryAreaOfEffectRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        room_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        center_position_{nullptr},
        shape_{nullptr},
        options_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR QueryAreaOfEffectRequest::QueryAreaOfEffectRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(QueryAreaOfEffectRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryAreaOfEffectRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryAreaOfEffectRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryAreaOfEffectRequestDefaultTypeInternal() {}
  union {
    QueryAreaOfEffectRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryAreaOfEffectRequestDefaultTypeInternal _QueryAreaOfEffectRequest_default_instance_;

inline constexpr CalculateMultiRoomPathResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        room_transitions_{},
        required_actions_{},
        path_{nullptr},
        pathfinding_stats_{nullptr},
        total_distance_{0},
        estimated_time_seconds_{0},
        is_complete_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CalculateMultiRoomPathResponse::CalculateMultiRoomPathResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CalculateMultiRoomPathResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CalculateMultiRoomPathResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalculateMultiRoomPathResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalculateMultiRoomPathResponseDefaultTypeInternal() {}
  union {
    CalculateMultiRoomPathResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalculateMultiRoomPathResponseDefaultTypeInternal _CalculateMultiRoomPathResponse_default_instance_;

inline constexpr CalculateMovementPathResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        reachable_area_{},
        alternatives_{},
        path_{nullptr},
        pathfinding_stats_{nullptr},
        is_complete_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CalculateMovementPathResponse::CalculateMovementPathResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CalculateMovementPathResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CalculateMovementPathResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CalculateMovementPathResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CalculateMovementPathResponseDefaultTypeInternal() {}
  union {
    CalculateMovementPathResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CalculateMovementPathResponseDefaultTypeInternal _CalculateMovementPathResponse_default_instance_;
}  // namespace v1alpha1
}  // namespace api
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_api_2fv1alpha1_2froom_5fspatial_2eproto[10];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_api_2fv1alpha1_2froom_5fspatial_2eproto = nullptr;
const ::uint32_t
    TableStruct_api_2fv1alpha1_2froom_5fspatial_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryLineOfSightRequest, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryLineOfSightRequest, _impl_.room_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryLineOfSightRequest, _impl_.from_position_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryLineOfSightRequest, _impl_.to_position_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryLineOfSightRequest, _impl_.entity_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryLineOfSightRequest, _impl_.entity_size_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryLineOfSightRequest, _impl_.options_),
        0,
        2,
        3,
        1,
        5,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LineOfSightOptions, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LineOfSightOptions, _impl_.consider_height_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LineOfSightOptions, _impl_.partial_cover_blocks_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LineOfSightOptions, _impl_.max_range_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LineOfSightOptions, _impl_.ignore_entity_types_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LineOfSightOptions, _impl_.detailed_blocking_info_),
        1,
        2,
        0,
        ~0u,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryLineOfSightResponse, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryLineOfSightResponse, _impl_.has_line_of_sight_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryLineOfSightResponse, _impl_.distance_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryLineOfSightResponse, _impl_.blocking_info_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryLineOfSightResponse, _impl_.cover_info_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryLineOfSightResponse, _impl_.stats_),
        4,
        3,
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BlockingInfo, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BlockingInfo, _impl_.blocking_entity_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BlockingInfo, _impl_.blocking_position_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BlockingInfo, _impl_.blocking_type_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BlockingInfo, _impl_.blocking_percentage_),
        0,
        2,
        1,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CoverInfo, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CoverInfo, _impl_.cover_type_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CoverInfo, _impl_.cover_percentage_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CoverInfo, _impl_.cover_source_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CoverInfo, _impl_.cover_position_),
        3,
        2,
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidateMovementRequest, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidateMovementRequest, _impl_.room_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidateMovementRequest, _impl_.entity_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidateMovementRequest, _impl_.from_position_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidateMovementRequest, _impl_.to_position_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidateMovementRequest, _impl_.options_),
        0,
        1,
        2,
        3,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MovementOptions, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MovementOptions, _impl_.movement_type_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MovementOptions, _impl_.movement_speed_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MovementOptions, _impl_.allow_difficult_terrain_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MovementOptions, _impl_.allow_entity_overlap_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MovementOptions, _impl_.max_movement_cost_),
        1,
        0,
        2,
        3,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidateMovementResponse, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidateMovementResponse, _impl_.is_valid_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidateMovementResponse, _impl_.movement_cost_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidateMovementResponse, _impl_.path_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidateMovementResponse, _impl_.terrain_effects_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidateMovementResponse, _impl_.errors_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidateMovementResponse, _impl_.stats_),
        2,
        1,
        ~0u,
        ~0u,
        ~0u,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TerrainEffect, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TerrainEffect, _impl_.position_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TerrainEffect, _impl_.effect_type_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TerrainEffect, _impl_.cost_multiplier_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TerrainEffect, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TerrainEffect, _impl_.source_id_),
        3,
        0,
        4,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidateEntityPlacementRequest, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidateEntityPlacementRequest, _impl_.room_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidateEntityPlacementRequest, _impl_.entity_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidateEntityPlacementRequest, _impl_.position_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidateEntityPlacementRequest, _impl_.entity_size_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidateEntityPlacementRequest, _impl_.options_),
        0,
        1,
        2,
        4,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PlacementOptions, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PlacementOptions, _impl_.allow_entity_overlap_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PlacementOptions, _impl_.allow_difficult_terrain_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PlacementOptions, _impl_.find_nearest_valid_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PlacementOptions, _impl_.max_search_distance_),
        1,
        2,
        3,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidateEntityPlacementResponse, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidateEntityPlacementResponse, _impl_.is_valid_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidateEntityPlacementResponse, _impl_.actual_position_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidateEntityPlacementResponse, _impl_.overlapping_entities_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidateEntityPlacementResponse, _impl_.terrain_effects_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidateEntityPlacementResponse, _impl_.errors_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidateEntityPlacementResponse, _impl_.stats_),
        2,
        0,
        ~0u,
        ~0u,
        ~0u,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryEntitiesInRangeRequest, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryEntitiesInRangeRequest, _impl_.room_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryEntitiesInRangeRequest, _impl_.center_position_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryEntitiesInRangeRequest, _impl_.range_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryEntitiesInRangeRequest, _impl_.options_),
        0,
        1,
        3,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RangeQueryOptions, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RangeQueryOptions, _impl_.include_entity_types_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RangeQueryOptions, _impl_.exclude_entity_types_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RangeQueryOptions, _impl_.require_line_of_sight_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RangeQueryOptions, _impl_.max_results_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RangeQueryOptions, _impl_.sort_order_),
        ~0u,
        ~0u,
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryEntitiesInRangeResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryEntitiesInRangeResponse, _impl_.entities_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryEntitiesInRangeResponse, _impl_.total_count_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryEntitiesInRangeResponse, _impl_.stats_),
        ~0u,
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntityRangeResult, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntityRangeResult, _impl_.entity_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntityRangeResult, _impl_.distance_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntityRangeResult, _impl_.direction_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntityRangeResult, _impl_.has_line_of_sight_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntityRangeResult, _impl_.cover_info_),
        0,
        2,
        3,
        4,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CalculateMovementPathRequest, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CalculateMovementPathRequest, _impl_.room_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CalculateMovementPathRequest, _impl_.entity_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CalculateMovementPathRequest, _impl_.from_position_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CalculateMovementPathRequest, _impl_.to_position_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CalculateMovementPathRequest, _impl_.options_),
        0,
        1,
        2,
        3,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PathfindingOptions, _impl_._has_bits_),
        11, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PathfindingOptions, _impl_.movement_type_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PathfindingOptions, _impl_.entity_size_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PathfindingOptions, _impl_.max_cost_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PathfindingOptions, _impl_.path_preference_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PathfindingOptions, _impl_.avoid_entity_types_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PathfindingOptions, _impl_.allow_difficult_terrain_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PathfindingOptions, _impl_.max_alternatives_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PathfindingOptions, _impl_.algorithm_),
        1,
        0,
        3,
        2,
        ~0u,
        4,
        5,
        6,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CalculateMovementPathResponse, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CalculateMovementPathResponse, _impl_.path_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CalculateMovementPathResponse, _impl_.is_complete_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CalculateMovementPathResponse, _impl_.reachable_area_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CalculateMovementPathResponse, _impl_.alternatives_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CalculateMovementPathResponse, _impl_.pathfinding_stats_),
        0,
        2,
        ~0u,
        ~0u,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MovementPath, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MovementPath, _impl_.positions_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MovementPath, _impl_.total_cost_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MovementPath, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MovementPath, _impl_.terrain_effects_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MovementPath, _impl_.path_type_),
        ~0u,
        1,
        0,
        ~0u,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PathfindingStats, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PathfindingStats, _impl_.nodes_explored_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PathfindingStats, _impl_.computation_time_ms_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PathfindingStats, _impl_.algorithm_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PathfindingStats, _impl_.cache_hit_ratio_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PathfindingStats, _impl_.memory_bytes_),
        1,
        0,
        2,
        3,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryAreaOfEffectRequest, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryAreaOfEffectRequest, _impl_.room_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryAreaOfEffectRequest, _impl_.center_position_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryAreaOfEffectRequest, _impl_.shape_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryAreaOfEffectRequest, _impl_.options_),
        0,
        1,
        2,
        3,
        0x085, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::AreaOfEffectShape, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::AreaOfEffectShape, _impl_._oneof_case_[0]),
        11, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::AreaOfEffectShape, _impl_.shape_type_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::AreaOfEffectShape, _impl_.shape_params_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::AreaOfEffectShape, _impl_.shape_params_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::AreaOfEffectShape, _impl_.shape_params_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::AreaOfEffectShape, _impl_.shape_params_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::AreaOfEffectShape, _impl_.shape_params_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::AreaOfEffectShape, _impl_.shape_params_),
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CircleParams, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CircleParams, _impl_.radius_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ConeParams, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ConeParams, _impl_.radius_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ConeParams, _impl_.direction_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ConeParams, _impl_.angle_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LineParams, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LineParams, _impl_.length_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LineParams, _impl_.width_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::LineParams, _impl_.direction_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RectangleParams, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RectangleParams, _impl_.width_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RectangleParams, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RectangleParams, _impl_.rotation_),
        0,
        1,
        2,
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CustomShapeParams, _impl_.vertices_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::AreaOfEffectOptions, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::AreaOfEffectOptions, _impl_.include_entity_types_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::AreaOfEffectOptions, _impl_.require_line_of_sight_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::AreaOfEffectOptions, _impl_.exclude_center_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::AreaOfEffectOptions, _impl_.cover_rules_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::AreaOfEffectOptions, _impl_.calculate_secondary_effects_),
        ~0u,
        0,
        1,
        3,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryAreaOfEffectResponse, _impl_._has_bits_),
        10, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryAreaOfEffectResponse, _impl_.affected_entities_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryAreaOfEffectResponse, _impl_.area_positions_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryAreaOfEffectResponse, _impl_.total_area_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryAreaOfEffectResponse, _impl_.effect_center_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryAreaOfEffectResponse, _impl_.cover_analysis_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryAreaOfEffectResponse, _impl_.secondary_effects_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryAreaOfEffectResponse, _impl_.stats_),
        ~0u,
        ~0u,
        2,
        0,
        ~0u,
        ~0u,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::AreaOfEffectResult, _impl_._has_bits_),
        11, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::AreaOfEffectResult, _impl_.entity_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::AreaOfEffectResult, _impl_.distance_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::AreaOfEffectResult, _impl_.line_of_sight_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::AreaOfEffectResult, _impl_.direction_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::AreaOfEffectResult, _impl_.relative_position_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::AreaOfEffectResult, _impl_.cover_type_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::AreaOfEffectResult, _impl_.cover_percentage_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::AreaOfEffectResult, _impl_.effect_strength_),
        1,
        2,
        4,
        3,
        0,
        5,
        6,
        7,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CoverAnalysisResult, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CoverAnalysisResult, _impl_.position_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CoverAnalysisResult, _impl_.cover_type_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CoverAnalysisResult, _impl_.cover_source_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CoverAnalysisResult, _impl_.cover_percentage_),
        1,
        3,
        0,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SecondaryEffect, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SecondaryEffect, _impl_.effect_type_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SecondaryEffect, _impl_.origin_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SecondaryEffect, _impl_.target_entities_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SecondaryEffect, _impl_.intensity_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SecondaryEffect, _impl_.description_),
        0,
        2,
        ~0u,
        3,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryMultiRoomLineOfSightRequest, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryMultiRoomLineOfSightRequest, _impl_.from_room_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryMultiRoomLineOfSightRequest, _impl_.to_room_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryMultiRoomLineOfSightRequest, _impl_.from_position_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryMultiRoomLineOfSightRequest, _impl_.to_position_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryMultiRoomLineOfSightRequest, _impl_.entity_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryMultiRoomLineOfSightRequest, _impl_.options_),
        0,
        1,
        3,
        4,
        2,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MultiRoomOptions, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MultiRoomOptions, _impl_.entity_size_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MultiRoomOptions, _impl_.max_range_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MultiRoomOptions, _impl_.cross_rooms_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MultiRoomOptions, _impl_.max_rooms_),
        0,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryMultiRoomLineOfSightResponse, _impl_._has_bits_),
        11, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryMultiRoomLineOfSightResponse, _impl_.has_line_of_sight_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryMultiRoomLineOfSightResponse, _impl_.blocking_entity_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryMultiRoomLineOfSightResponse, _impl_.blocking_position_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryMultiRoomLineOfSightResponse, _impl_.rooms_crossed_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryMultiRoomLineOfSightResponse, _impl_.connection_points_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryMultiRoomLineOfSightResponse, _impl_.total_distance_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryMultiRoomLineOfSightResponse, _impl_.path_positions_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QueryMultiRoomLineOfSightResponse, _impl_.stats_),
        4,
        0,
        1,
        ~0u,
        ~0u,
        3,
        ~0u,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ConnectionPoint, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ConnectionPoint, _impl_.room_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ConnectionPoint, _impl_.connected_to_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ConnectionPoint, _impl_.position_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ConnectionPoint, _impl_.connection_type_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ConnectionPoint, _impl_.is_blocked_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ConnectionPoint, _impl_.blocking_entity_),
        0,
        1,
        4,
        2,
        5,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MultiRoomPosition, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MultiRoomPosition, _impl_.room_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MultiRoomPosition, _impl_.position_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CalculateMultiRoomPathRequest, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CalculateMultiRoomPathRequest, _impl_.from_room_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CalculateMultiRoomPathRequest, _impl_.to_room_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CalculateMultiRoomPathRequest, _impl_.from_position_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CalculateMultiRoomPathRequest, _impl_.to_position_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CalculateMultiRoomPathRequest, _impl_.entity_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CalculateMultiRoomPathRequest, _impl_.options_),
        0,
        1,
        3,
        4,
        2,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MultiRoomPathfindingOptions, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MultiRoomPathfindingOptions, _impl_.entity_size_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MultiRoomPathfindingOptions, _impl_.movement_type_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MultiRoomPathfindingOptions, _impl_.max_total_cost_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MultiRoomPathfindingOptions, _impl_.allow_door_opening_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MultiRoomPathfindingOptions, _impl_.prefer_known_paths_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MultiRoomPathfindingOptions, _impl_.max_rooms_),
        0,
        2,
        1,
        3,
        4,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CalculateMultiRoomPathResponse, _impl_._has_bits_),
        10, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CalculateMultiRoomPathResponse, _impl_.path_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CalculateMultiRoomPathResponse, _impl_.is_complete_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CalculateMultiRoomPathResponse, _impl_.room_transitions_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CalculateMultiRoomPathResponse, _impl_.total_distance_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CalculateMultiRoomPathResponse, _impl_.estimated_time_seconds_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CalculateMultiRoomPathResponse, _impl_.required_actions_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CalculateMultiRoomPathResponse, _impl_.pathfinding_stats_),
        0,
        4,
        ~0u,
        2,
        3,
        ~0u,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MultiRoomPath, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MultiRoomPath, _impl_.segments_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MultiRoomPath, _impl_.total_cost_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::MultiRoomPath, _impl_.description_),
        ~0u,
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PathSegment, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PathSegment, _impl_.room_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PathSegment, _impl_.positions_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PathSegment, _impl_.enter_point_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PathSegment, _impl_.exit_point_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PathSegment, _impl_.segment_cost_),
        0,
        ~0u,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomTransition, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomTransition, _impl_.from_room_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomTransition, _impl_.to_room_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomTransition, _impl_.connection_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomTransition, _impl_.position_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomTransition, _impl_.transition_type_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomTransition, _impl_.required_action_),
        0,
        1,
        2,
        5,
        3,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PathAction, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PathAction, _impl_.action_type_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PathAction, _impl_.position_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PathAction, _impl_.target_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PathAction, _impl_.difficulty_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PathAction, _impl_.time_seconds_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PathAction, _impl_.description_),
        0,
        4,
        1,
        2,
        5,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QuerySpatialIndexRequest, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QuerySpatialIndexRequest, _impl_.room_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QuerySpatialIndexRequest, _impl_.index_type_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QuerySpatialIndexRequest, _impl_.bounding_box_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QuerySpatialIndexRequest, _impl_.entity_types_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QuerySpatialIndexRequest, _impl_.tags_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QuerySpatialIndexRequest, _impl_.precision_),
        0,
        2,
        1,
        ~0u,
        ~0u,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BoundingBox, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BoundingBox, _impl_.min_x_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BoundingBox, _impl_.min_y_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BoundingBox, _impl_.max_x_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::BoundingBox, _impl_.max_y_),
        0,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QuerySpatialIndexResponse, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QuerySpatialIndexResponse, _impl_.entities_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QuerySpatialIndexResponse, _impl_.index_stats_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QuerySpatialIndexResponse, _impl_.query_region_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QuerySpatialIndexResponse, _impl_.total_candidates_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::QuerySpatialIndexResponse, _impl_.filtered_results_),
        ~0u,
        0,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntityIndexResult, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntityIndexResult, _impl_.entity_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntityIndexResult, _impl_.distance_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntityIndexResult, _impl_.exact_match_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntityIndexResult, _impl_.entity_bounds_),
        0,
        2,
        3,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::IndexStats, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::IndexStats, _impl_.index_type_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::IndexStats, _impl_.build_time_ms_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::IndexStats, _impl_.query_time_ms_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::IndexStats, _impl_.cache_hit_ratio_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::IndexStats, _impl_.index_memory_bytes_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::IndexStats, _impl_.last_updated_),
        5,
        0,
        1,
        2,
        3,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GetSpatialStatsRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GetSpatialStatsRequest, _impl_.room_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GetSpatialStatsRequest, _impl_.time_range_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TimeRange, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TimeRange, _impl_.start_time_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TimeRange, _impl_.end_time_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GetSpatialStatsResponse_IndexStatsEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GetSpatialStatsResponse_IndexStatsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GetSpatialStatsResponse_IndexStatsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GetSpatialStatsResponse, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GetSpatialStatsResponse, _impl_.overall_stats_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GetSpatialStatsResponse, _impl_.stats_by_type_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GetSpatialStatsResponse, _impl_.cache_stats_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::GetSpatialStatsResponse, _impl_.index_stats_),
        0,
        ~0u,
        1,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CacheStats, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CacheStats, _impl_.hit_ratio_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CacheStats, _impl_.hits_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CacheStats, _impl_.misses_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CacheStats, _impl_.size_bytes_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::CacheStats, _impl_.entry_count_),
        0,
        1,
        2,
        3,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::InvalidateSpatialCacheRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::InvalidateSpatialCacheRequest, _impl_.room_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::InvalidateSpatialCacheRequest, _impl_.cache_types_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::InvalidateSpatialCacheRequest, _impl_.invalidate_all_),
        0,
        ~0u,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::InvalidateSpatialCacheResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::InvalidateSpatialCacheResponse, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::InvalidateSpatialCacheResponse, _impl_.entries_invalidated_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::InvalidateSpatialCacheResponse, _impl_.memory_freed_bytes_),
        0,
        2,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SpatialQueryStats, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SpatialQueryStats, _impl_.execution_time_ms_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SpatialQueryStats, _impl_.entities_processed_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SpatialQueryStats, _impl_.cache_hit_ratio_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SpatialQueryStats, _impl_.memory_bytes_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::SpatialQueryStats, _impl_.calculations_performed_),
        0,
        2,
        1,
        4,
        3,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::api::v1alpha1::QueryLineOfSightRequest)},
        {15, sizeof(::api::v1alpha1::LineOfSightOptions)},
        {28, sizeof(::api::v1alpha1::QueryLineOfSightResponse)},
        {41, sizeof(::api::v1alpha1::BlockingInfo)},
        {52, sizeof(::api::v1alpha1::CoverInfo)},
        {63, sizeof(::api::v1alpha1::ValidateMovementRequest)},
        {76, sizeof(::api::v1alpha1::MovementOptions)},
        {89, sizeof(::api::v1alpha1::ValidateMovementResponse)},
        {104, sizeof(::api::v1alpha1::TerrainEffect)},
        {117, sizeof(::api::v1alpha1::ValidateEntityPlacementRequest)},
        {130, sizeof(::api::v1alpha1::PlacementOptions)},
        {141, sizeof(::api::v1alpha1::ValidateEntityPlacementResponse)},
        {156, sizeof(::api::v1alpha1::QueryEntitiesInRangeRequest)},
        {167, sizeof(::api::v1alpha1::RangeQueryOptions)},
        {180, sizeof(::api::v1alpha1::QueryEntitiesInRangeResponse)},
        {189, sizeof(::api::v1alpha1::EntityRangeResult)},
        {202, sizeof(::api::v1alpha1::CalculateMovementPathRequest)},
        {215, sizeof(::api::v1alpha1::PathfindingOptions)},
        {234, sizeof(::api::v1alpha1::CalculateMovementPathResponse)},
        {247, sizeof(::api::v1alpha1::MovementPath)},
        {260, sizeof(::api::v1alpha1::PathfindingStats)},
        {273, sizeof(::api::v1alpha1::QueryAreaOfEffectRequest)},
        {284, sizeof(::api::v1alpha1::AreaOfEffectShape)},
        {301, sizeof(::api::v1alpha1::CircleParams)},
        {306, sizeof(::api::v1alpha1::ConeParams)},
        {315, sizeof(::api::v1alpha1::LineParams)},
        {324, sizeof(::api::v1alpha1::RectangleParams)},
        {333, sizeof(::api::v1alpha1::CustomShapeParams)},
        {335, sizeof(::api::v1alpha1::AreaOfEffectOptions)},
        {348, sizeof(::api::v1alpha1::QueryAreaOfEffectResponse)},
        {365, sizeof(::api::v1alpha1::AreaOfEffectResult)},
        {384, sizeof(::api::v1alpha1::CoverAnalysisResult)},
        {395, sizeof(::api::v1alpha1::SecondaryEffect)},
        {408, sizeof(::api::v1alpha1::QueryMultiRoomLineOfSightRequest)},
        {423, sizeof(::api::v1alpha1::MultiRoomOptions)},
        {434, sizeof(::api::v1alpha1::QueryMultiRoomLineOfSightResponse)},
        {453, sizeof(::api::v1alpha1::ConnectionPoint)},
        {468, sizeof(::api::v1alpha1::MultiRoomPosition)},
        {475, sizeof(::api::v1alpha1::CalculateMultiRoomPathRequest)},
        {490, sizeof(::api::v1alpha1::MultiRoomPathfindingOptions)},
        {505, sizeof(::api::v1alpha1::CalculateMultiRoomPathResponse)},
        {522, sizeof(::api::v1alpha1::MultiRoomPath)},
        {531, sizeof(::api::v1alpha1::PathSegment)},
        {544, sizeof(::api::v1alpha1::RoomTransition)},
        {559, sizeof(::api::v1alpha1::PathAction)},
        {574, sizeof(::api::v1alpha1::QuerySpatialIndexRequest)},
        {589, sizeof(::api::v1alpha1::BoundingBox)},
        {600, sizeof(::api::v1alpha1::QuerySpatialIndexResponse)},
        {613, sizeof(::api::v1alpha1::EntityIndexResult)},
        {624, sizeof(::api::v1alpha1::IndexStats)},
        {639, sizeof(::api::v1alpha1::GetSpatialStatsRequest)},
        {646, sizeof(::api::v1alpha1::TimeRange)},
        {653, sizeof(::api::v1alpha1::GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse)},
        {660, sizeof(::api::v1alpha1::GetSpatialStatsResponse_IndexStatsEntry_DoNotUse)},
        {667, sizeof(::api::v1alpha1::GetSpatialStatsResponse)},
        {678, sizeof(::api::v1alpha1::CacheStats)},
        {691, sizeof(::api::v1alpha1::InvalidateSpatialCacheRequest)},
        {700, sizeof(::api::v1alpha1::InvalidateSpatialCacheResponse)},
        {709, sizeof(::api::v1alpha1::SpatialQueryStats)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::api::v1alpha1::_QueryLineOfSightRequest_default_instance_._instance,
    &::api::v1alpha1::_LineOfSightOptions_default_instance_._instance,
    &::api::v1alpha1::_QueryLineOfSightResponse_default_instance_._instance,
    &::api::v1alpha1::_BlockingInfo_default_instance_._instance,
    &::api::v1alpha1::_CoverInfo_default_instance_._instance,
    &::api::v1alpha1::_ValidateMovementRequest_default_instance_._instance,
    &::api::v1alpha1::_MovementOptions_default_instance_._instance,
    &::api::v1alpha1::_ValidateMovementResponse_default_instance_._instance,
    &::api::v1alpha1::_TerrainEffect_default_instance_._instance,
    &::api::v1alpha1::_ValidateEntityPlacementRequest_default_instance_._instance,
    &::api::v1alpha1::_PlacementOptions_default_instance_._instance,
    &::api::v1alpha1::_ValidateEntityPlacementResponse_default_instance_._instance,
    &::api::v1alpha1::_QueryEntitiesInRangeRequest_default_instance_._instance,
    &::api::v1alpha1::_RangeQueryOptions_default_instance_._instance,
    &::api::v1alpha1::_QueryEntitiesInRangeResponse_default_instance_._instance,
    &::api::v1alpha1::_EntityRangeResult_default_instance_._instance,
    &::api::v1alpha1::_CalculateMovementPathRequest_default_instance_._instance,
    &::api::v1alpha1::_PathfindingOptions_default_instance_._instance,
    &::api::v1alpha1::_CalculateMovementPathResponse_default_instance_._instance,
    &::api::v1alpha1::_MovementPath_default_instance_._instance,
    &::api::v1alpha1::_PathfindingStats_default_instance_._instance,
    &::api::v1alpha1::_QueryAreaOfEffectRequest_default_instance_._instance,
    &::api::v1alpha1::_AreaOfEffectShape_default_instance_._instance,
    &::api::v1alpha1::_CircleParams_default_instance_._instance,
    &::api::v1alpha1::_ConeParams_default_instance_._instance,
    &::api::v1alpha1::_LineParams_default_instance_._instance,
    &::api::v1alpha1::_RectangleParams_default_instance_._instance,
    &::api::v1alpha1::_CustomShapeParams_default_instance_._instance,
    &::api::v1alpha1::_AreaOfEffectOptions_default_instance_._instance,
    &::api::v1alpha1::_QueryAreaOfEffectResponse_default_instance_._instance,
    &::api::v1alpha1::_AreaOfEffectResult_default_instance_._instance,
    &::api::v1alpha1::_CoverAnalysisResult_default_instance_._instance,
    &::api::v1alpha1::_SecondaryEffect_default_instance_._instance,
    &::api::v1alpha1::_QueryMultiRoomLineOfSightRequest_default_instance_._instance,
    &::api::v1alpha1::_MultiRoomOptions_default_instance_._instance,
    &::api::v1alpha1::_QueryMultiRoomLineOfSightResponse_default_instance_._instance,
    &::api::v1alpha1::_ConnectionPoint_default_instance_._instance,
    &::api::v1alpha1::_MultiRoomPosition_default_instance_._instance,
    &::api::v1alpha1::_CalculateMultiRoomPathRequest_default_instance_._instance,
    &::api::v1alpha1::_MultiRoomPathfindingOptions_default_instance_._instance,
    &::api::v1alpha1::_CalculateMultiRoomPathResponse_default_instance_._instance,
    &::api::v1alpha1::_MultiRoomPath_default_instance_._instance,
    &::api::v1alpha1::_PathSegment_default_instance_._instance,
    &::api::v1alpha1::_RoomTransition_default_instance_._instance,
    &::api::v1alpha1::_PathAction_default_instance_._instance,
    &::api::v1alpha1::_QuerySpatialIndexRequest_default_instance_._instance,
    &::api::v1alpha1::_BoundingBox_default_instance_._instance,
    &::api::v1alpha1::_QuerySpatialIndexResponse_default_instance_._instance,
    &::api::v1alpha1::_EntityIndexResult_default_instance_._instance,
    &::api::v1alpha1::_IndexStats_default_instance_._instance,
    &::api::v1alpha1::_GetSpatialStatsRequest_default_instance_._instance,
    &::api::v1alpha1::_TimeRange_default_instance_._instance,
    &::api::v1alpha1::_GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse_default_instance_._instance,
    &::api::v1alpha1::_GetSpatialStatsResponse_IndexStatsEntry_DoNotUse_default_instance_._instance,
    &::api::v1alpha1::_GetSpatialStatsResponse_default_instance_._instance,
    &::api::v1alpha1::_CacheStats_default_instance_._instance,
    &::api::v1alpha1::_InvalidateSpatialCacheRequest_default_instance_._instance,
    &::api::v1alpha1::_InvalidateSpatialCacheResponse_default_instance_._instance,
    &::api::v1alpha1::_SpatialQueryStats_default_instance_._instance,
};
const char descriptor_table_protodef_api_2fv1alpha1_2froom_5fspatial_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\037api/v1alpha1/room_spatial.proto\022\014api.v"
    "1alpha1\032\036api/v1alpha1/room_common.proto\""
    "\242\002\n\027QueryLineOfSightRequest\022\027\n\007room_id\030\001"
    " \001(\tR\006roomId\022;\n\rfrom_position\030\002 \001(\0132\026.ap"
    "i.v1alpha1.PositionR\014fromPosition\0227\n\013to_"
    "position\030\003 \001(\0132\026.api.v1alpha1.PositionR\n"
    "toPosition\022\033\n\tentity_id\030\004 \001(\tR\010entityId\022"
    "\037\n\013entity_size\030\005 \001(\001R\nentitySize\022:\n\007opti"
    "ons\030\006 \001(\0132 .api.v1alpha1.LineOfSightOpti"
    "onsR\007options\"\362\001\n\022LineOfSightOptions\022\'\n\017c"
    "onsider_height\030\001 \001(\010R\016considerHeight\0220\n\024"
    "partial_cover_blocks\030\002 \001(\010R\022partialCover"
    "Blocks\022\033\n\tmax_range\030\003 \001(\001R\010maxRange\022.\n\023i"
    "gnore_entity_types\030\004 \003(\tR\021ignoreEntityTy"
    "pes\0224\n\026detailed_blocking_info\030\005 \001(\010R\024det"
    "ailedBlockingInfo\"\221\002\n\030QueryLineOfSightRe"
    "sponse\022)\n\021has_line_of_sight\030\001 \001(\010R\016hasLi"
    "neOfSight\022\032\n\010distance\030\002 \001(\001R\010distance\022\?\n"
    "\rblocking_info\030\003 \001(\0132\032.api.v1alpha1.Bloc"
    "kingInfoR\014blockingInfo\0226\n\ncover_info\030\004 \001"
    "(\0132\027.api.v1alpha1.CoverInfoR\tcoverInfo\0225"
    "\n\005stats\030\005 \001(\0132\037.api.v1alpha1.SpatialQuer"
    "yStatsR\005stats\"\327\001\n\014BlockingInfo\022,\n\022blocki"
    "ng_entity_id\030\001 \001(\tR\020blockingEntityId\022C\n\021"
    "blocking_position\030\002 \001(\0132\026.api.v1alpha1.P"
    "ositionR\020blockingPosition\022#\n\rblocking_ty"
    "pe\030\003 \001(\tR\014blockingType\022/\n\023blocking_perce"
    "ntage\030\004 \001(\001R\022blockingPercentage\"\325\001\n\tCove"
    "rInfo\0226\n\ncover_type\030\001 \001(\0162\027.api.v1alpha1"
    ".CoverTypeR\tcoverType\022)\n\020cover_percentag"
    "e\030\002 \001(\001R\017coverPercentage\022&\n\017cover_source"
    "_id\030\003 \001(\tR\rcoverSourceId\022=\n\016cover_positi"
    "on\030\004 \001(\0132\026.api.v1alpha1.PositionR\rcoverP"
    "osition\"\376\001\n\027ValidateMovementRequest\022\027\n\007r"
    "oom_id\030\001 \001(\tR\006roomId\022\033\n\tentity_id\030\002 \001(\tR"
    "\010entityId\022;\n\rfrom_position\030\003 \001(\0132\026.api.v"
    "1alpha1.PositionR\014fromPosition\0227\n\013to_pos"
    "ition\030\004 \001(\0132\026.api.v1alpha1.PositionR\ntoP"
    "osition\0227\n\007options\030\005 \001(\0132\035.api.v1alpha1."
    "MovementOptionsR\007options\"\217\002\n\017MovementOpt"
    "ions\022\?\n\rmovement_type\030\001 \001(\0162\032.api.v1alph"
    "a1.MovementTypeR\014movementType\022%\n\016movemen"
    "t_speed\030\002 \001(\001R\rmovementSpeed\0226\n\027allow_di"
    "fficult_terrain\030\003 \001(\010R\025allowDifficultTer"
    "rain\0220\n\024allow_entity_overlap\030\004 \001(\010R\022allo"
    "wEntityOverlap\022*\n\021max_movement_cost\030\005 \001("
    "\001R\017maxMovementCost\"\264\002\n\030ValidateMovementR"
    "esponse\022\031\n\010is_valid\030\001 \001(\010R\007isValid\022#\n\rmo"
    "vement_cost\030\002 \001(\001R\014movementCost\022*\n\004path\030"
    "\003 \003(\0132\026.api.v1alpha1.PositionR\004path\022D\n\017t"
    "errain_effects\030\004 \003(\0132\033.api.v1alpha1.Terr"
    "ainEffectR\016terrainEffects\022/\n\006errors\030\005 \003("
    "\0132\027.api.v1alpha1.RoomErrorR\006errors\0225\n\005st"
    "ats\030\006 \001(\0132\037.api.v1alpha1.SpatialQuerySta"
    "tsR\005stats\"\314\001\n\rTerrainEffect\0222\n\010position\030"
    "\001 \001(\0132\026.api.v1alpha1.PositionR\010position\022"
    "\037\n\013effect_type\030\002 \001(\tR\neffectType\022\'\n\017cost"
    "_multiplier\030\003 \001(\001R\016costMultiplier\022 \n\013des"
    "cription\030\004 \001(\tR\013description\022\033\n\tsource_id"
    "\030\005 \001(\tR\010sourceId\"\345\001\n\036ValidateEntityPlace"
    "mentRequest\022\027\n\007room_id\030\001 \001(\tR\006roomId\022\033\n\t"
    "entity_id\030\002 \001(\tR\010entityId\0222\n\010position\030\003 "
    "\001(\0132\026.api.v1alpha1.PositionR\010position\022\037\n"
    "\013entity_size\030\004 \001(\001R\nentitySize\0228\n\007option"
    "s\030\005 \001(\0132\036.api.v1alpha1.PlacementOptionsR"
    "\007options\"\332\001\n\020PlacementOptions\0220\n\024allow_e"
    "ntity_overlap\030\001 \001(\010R\022allowEntityOverlap\022"
    "6\n\027allow_difficult_terrain\030\002 \001(\010R\025allowD"
    "ifficultTerrain\022,\n\022find_nearest_valid\030\003 "
    "\001(\010R\020findNearestValid\022.\n\023max_search_dist"
    "ance\030\004 \001(\001R\021maxSearchDistance\"\336\002\n\037Valida"
    "teEntityPlacementResponse\022\031\n\010is_valid\030\001 "
    "\001(\010R\007isValid\022\?\n\017actual_position\030\002 \001(\0132\026."
    "api.v1alpha1.PositionR\016actualPosition\0221\n"
    "\024overlapping_entities\030\003 \003(\tR\023overlapping"
    "Entities\022D\n\017terrain_effects\030\004 \003(\0132\033.api."
    "v1alpha1.TerrainEffectR\016terrainEffects\022/"
    "\n\006errors\030\005 \003(\0132\027.api.v1alpha1.RoomErrorR"
    "\006errors\0225\n\005stats\030\006 \001(\0132\037.api.v1alpha1.Sp"
    "atialQueryStatsR\005stats\"\310\001\n\033QueryEntities"
    "InRangeRequest\022\027\n\007room_id\030\001 \001(\tR\006roomId\022"
    "\?\n\017center_position\030\002 \001(\0132\026.api.v1alpha1."
    "PositionR\016centerPosition\022\024\n\005range\030\003 \001(\001R"
    "\005range\0229\n\007options\030\004 \001(\0132\037.api.v1alpha1.R"
    "angeQueryOptionsR\007options\"\210\002\n\021RangeQuery"
    "Options\0220\n\024include_entity_types\030\001 \003(\tR\022i"
    "ncludeEntityTypes\0220\n\024exclude_entity_type"
    "s\030\002 \003(\tR\022excludeEntityTypes\0221\n\025require_l"
    "ine_of_sight\030\003 \001(\010R\022requireLineOfSight\022\037"
    "\n\013max_results\030\004 \001(\005R\nmaxResults\022;\n\nsort_"
    "order\030\005 \001(\0162\034.api.v1alpha1.RangeSortOrde"
    "rR\tsortOrder\"\263\001\n\034QueryEntitiesInRangeRes"
    "ponse\022;\n\010entities\030\001 \003(\0132\037.api.v1alpha1.E"
    "ntityRangeResultR\010entities\022\037\n\013total_coun"
    "t\030\002 \001(\005R\ntotalCount\0225\n\005stats\030\003 \001(\0132\037.api"
    ".v1alpha1.SpatialQueryStatsR\005stats\"\336\001\n\021E"
    "ntityRangeResult\022,\n\006entity\030\001 \001(\0132\024.api.v"
    "1alpha1.EntityR\006entity\022\032\n\010distance\030\002 \001(\001"
    "R\010distance\022\034\n\tdirection\030\003 \001(\001R\tdirection"
    "\022)\n\021has_line_of_sight\030\004 \001(\010R\016hasLineOfSi"
    "ght\0226\n\ncover_info\030\005 \001(\0132\027.api.v1alpha1.C"
    "overInfoR\tcoverInfo\"\206\002\n\034CalculateMovemen"
    "tPathRequest\022\027\n\007room_id\030\001 \001(\tR\006roomId\022\033\n"
    "\tentity_id\030\002 \001(\tR\010entityId\022;\n\rfrom_posit"
    "ion\030\003 \001(\0132\026.api.v1alpha1.PositionR\014fromP"
    "osition\0227\n\013to_position\030\004 \001(\0132\026.api.v1alp"
    "ha1.PositionR\ntoPosition\022:\n\007options\030\005 \001("
    "\0132 .api.v1alpha1.PathfindingOptionsR\007opt"
    "ions\"\253\003\n\022PathfindingOptions\022\?\n\rmovement_"
    "type\030\001 \001(\0162\032.api.v1alpha1.MovementTypeR\014"
    "movementType\022\037\n\013entity_size\030\002 \001(\001R\nentit"
    "ySize\022\031\n\010max_cost\030\003 \001(\001R\007maxCost\022E\n\017path"
    "_preference\030\004 \001(\0162\034.api.v1alpha1.PathPre"
    "ferenceR\016pathPreference\022,\n\022avoid_entity_"
    "types\030\005 \003(\tR\020avoidEntityTypes\0226\n\027allow_d"
    "ifficult_terrain\030\006 \001(\010R\025allowDifficultTe"
    "rrain\022)\n\020max_alternatives\030\007 \001(\005R\017maxAlte"
    "rnatives\022@\n\talgorithm\030\010 \001(\0162\".api.v1alph"
    "a1.PathfindingAlgorithmR\talgorithm\"\274\002\n\035C"
    "alculateMovementPathResponse\022.\n\004path\030\001 \001"
    "(\0132\032.api.v1alpha1.MovementPathR\004path\022\037\n\013"
    "is_complete\030\002 \001(\010R\nisComplete\022=\n\016reachab"
    "le_area\030\003 \003(\0132\026.api.v1alpha1.PositionR\rr"
    "eachableArea\022>\n\014alternatives\030\004 \003(\0132\032.api"
    ".v1alpha1.MovementPathR\014alternatives\022K\n\021"
    "pathfinding_stats\030\005 \001(\0132\036.api.v1alpha1.P"
    "athfindingStatsR\020pathfindingStats\"\206\002\n\014Mo"
    "vementPath\0224\n\tpositions\030\001 \003(\0132\026.api.v1al"
    "pha1.PositionR\tpositions\022\035\n\ntotal_cost\030\002"
    " \001(\001R\ttotalCost\022 \n\013description\030\003 \001(\tR\013de"
    "scription\022D\n\017terrain_effects\030\004 \003(\0132\033.api"
    ".v1alpha1.TerrainEffectR\016terrainEffects\022"
    "9\n\tpath_type\030\005 \001(\0162\034.api.v1alpha1.PathPr"
    "eferenceR\010pathType\"\366\001\n\020PathfindingStats\022"
    "%\n\016nodes_explored\030\001 \001(\005R\rnodesExplored\022."
    "\n\023computation_time_ms\030\002 \001(\001R\021computation"
    "TimeMs\022@\n\talgorithm\030\003 \001(\0162\".api.v1alpha1"
    ".PathfindingAlgorithmR\talgorithm\022&\n\017cach"
    "e_hit_ratio\030\004 \001(\001R\rcacheHitRatio\022!\n\014memo"
    "ry_bytes\030\005 \001(\003R\013memoryBytes\"\350\001\n\030QueryAre"
    "aOfEffectRequest\022\027\n\007room_id\030\001 \001(\tR\006roomI"
    "d\022\?\n\017center_position\030\002 \001(\0132\026.api.v1alpha"
    "1.PositionR\016centerPosition\0225\n\005shape\030\003 \001("
    "\0132\037.api.v1alpha1.AreaOfEffectShapeR\005shap"
    "e\022;\n\007options\030\004 \001(\0132!.api.v1alpha1.AreaOf"
    "EffectOptionsR\007options\"\362\002\n\021AreaOfEffectS"
    "hape\022=\n\nshape_type\030\001 \001(\0162\036.api.v1alpha1."
    "AreaOfEffectTypeR\tshapeType\0224\n\006circle\030\002 "
    "\001(\0132\032.api.v1alpha1.CircleParamsH\000R\006circl"
    "e\022.\n\004cone\030\003 \001(\0132\030.api.v1alpha1.ConeParam"
    "sH\000R\004cone\022.\n\004line\030\004 \001(\0132\030.api.v1alpha1.L"
    "ineParamsH\000R\004line\022=\n\trectangle\030\005 \001(\0132\035.a"
    "pi.v1alpha1.RectangleParamsH\000R\trectangle"
    "\0229\n\006custom\030\006 \001(\0132\037.api.v1alpha1.CustomSh"
    "apeParamsH\000R\006customB\016\n\014shape_params\"&\n\014C"
    "ircleParams\022\026\n\006radius\030\001 \001(\001R\006radius\"X\n\nC"
    "oneParams\022\026\n\006radius\030\001 \001(\001R\006radius\022\034\n\tdir"
    "ection\030\002 \001(\001R\tdirection\022\024\n\005angle\030\003 \001(\001R\005"
    "angle\"X\n\nLineParams\022\026\n\006length\030\001 \001(\001R\006len"
    "gth\022\024\n\005width\030\002 \001(\001R\005width\022\034\n\tdirection\030\003"
    " \001(\001R\tdirection\"[\n\017RectangleParams\022\024\n\005wi"
    "dth\030\001 \001(\001R\005width\022\026\n\006height\030\002 \001(\001R\006height"
    "\022\032\n\010rotation\030\003 \001(\001R\010rotation\"G\n\021CustomSh"
    "apeParams\0222\n\010vertices\030\001 \003(\0132\026.api.v1alph"
    "a1.PositionR\010vertices\"\234\002\n\023AreaOfEffectOp"
    "tions\0220\n\024include_entity_types\030\001 \003(\tR\022inc"
    "ludeEntityTypes\0221\n\025require_line_of_sight"
    "\030\002 \001(\010R\022requireLineOfSight\022%\n\016exclude_ce"
    "nter\030\003 \001(\010R\rexcludeCenter\0229\n\013cover_rules"
    "\030\004 \001(\0162\030.api.v1alpha1.CoverRulesR\ncoverR"
    "ules\022>\n\033calculate_secondary_effects\030\005 \001("
    "\010R\031calculateSecondaryEffects\"\322\003\n\031QueryAr"
    "eaOfEffectResponse\022M\n\021affected_entities\030"
    "\001 \003(\0132 .api.v1alpha1.AreaOfEffectResultR"
    "\020affectedEntities\022=\n\016area_positions\030\002 \003("
    "\0132\026.api.v1alpha1.PositionR\rareaPositions"
    "\022\035\n\ntotal_area\030\003 \001(\001R\ttotalArea\022;\n\reffec"
    "t_center\030\004 \001(\0132\026.api.v1alpha1.PositionR\014"
    "effectCenter\022H\n\016cover_analysis\030\005 \003(\0132!.a"
    "pi.v1alpha1.CoverAnalysisResultR\rcoverAn"
    "alysis\022J\n\021secondary_effects\030\006 \003(\0132\035.api."
    "v1alpha1.SecondaryEffectR\020secondaryEffec"
    "ts\0225\n\005stats\030\007 \001(\0132\037.api.v1alpha1.Spatial"
    "QueryStatsR\005stats\"\331\002\n\022AreaOfEffectResult"
    "\022,\n\006entity\030\001 \001(\0132\024.api.v1alpha1.EntityR\006"
    "entity\022\032\n\010distance\030\002 \001(\001R\010distance\022\"\n\rli"
    "ne_of_sight\030\003 \001(\010R\013lineOfSight\022\034\n\tdirect"
    "ion\030\004 \001(\001R\tdirection\022+\n\021relative_positio"
    "n\030\005 \001(\tR\020relativePosition\0226\n\ncover_type\030"
    "\006 \001(\0162\027.api.v1alpha1.CoverTypeR\tcoverTyp"
    "e\022)\n\020cover_percentage\030\007 \001(\001R\017coverPercen"
    "tage\022\'\n\017effect_strength\030\010 \001(\001R\016effectStr"
    "ength\"\317\001\n\023CoverAnalysisResult\0222\n\010positio"
    "n\030\001 \001(\0132\026.api.v1alpha1.PositionR\010positio"
    "n\0226\n\ncover_type\030\002 \001(\0162\027.api.v1alpha1.Cov"
    "erTypeR\tcoverType\022!\n\014cover_source\030\003 \001(\tR"
    "\013coverSource\022)\n\020cover_percentage\030\004 \001(\001R\017"
    "coverPercentage\"\313\001\n\017SecondaryEffect\022\037\n\013e"
    "ffect_type\030\001 \001(\tR\neffectType\022.\n\006origin\030\002"
    " \001(\0132\026.api.v1alpha1.PositionR\006origin\022\'\n\017"
    "target_entities\030\003 \003(\tR\016targetEntities\022\034\n"
    "\tintensity\030\004 \001(\001R\tintensity\022 \n\013descripti"
    "on\030\005 \001(\tR\013description\"\257\002\n QueryMultiRoom"
    "LineOfSightRequest\022 \n\014from_room_id\030\001 \001(\t"
    "R\nfromRoomId\022\034\n\nto_room_id\030\002 \001(\tR\010toRoom"
    "Id\022;\n\rfrom_position\030\003 \001(\0132\026.api.v1alpha1"
    ".PositionR\014fromPosition\0227\n\013to_position\030\004"
    " \001(\0132\026.api.v1alpha1.PositionR\ntoPosition"
    "\022\033\n\tentity_id\030\005 \001(\tR\010entityId\0228\n\007options"
    "\030\006 \001(\0132\036.api.v1alpha1.MultiRoomOptionsR\007"
    "options\"\216\001\n\020MultiRoomOptions\022\037\n\013entity_s"
    "ize\030\001 \001(\001R\nentitySize\022\033\n\tmax_range\030\002 \001(\001"
    "R\010maxRange\022\037\n\013cross_rooms\030\003 \001(\010R\ncrossRo"
    "oms\022\033\n\tmax_rooms\030\004 \001(\005R\010maxRooms\"\330\003\n!Que"
    "ryMultiRoomLineOfSightResponse\022)\n\021has_li"
    "ne_of_sight\030\001 \001(\010R\016hasLineOfSight\022,\n\022blo"
    "cking_entity_id\030\002 \001(\tR\020blockingEntityId\022"
    "C\n\021blocking_position\030\003 \001(\0132\026.api.v1alpha"
    "1.PositionR\020blockingPosition\022#\n\rrooms_cr"
    "ossed\030\004 \003(\tR\014roomsCrossed\022J\n\021connection_"
    "points\030\005 \003(\0132\035.api.v1alpha1.ConnectionPo"
    "intR\020connectionPoints\022%\n\016total_distance\030"
    "\006 \001(\001R\rtotalDistance\022F\n\016path_positions\030\007"
    " \003(\0132\037.api.v1alpha1.MultiRoomPositionR\rp"
    "athPositions\0225\n\005stats\030\010 \001(\0132\037.api.v1alph"
    "a1.SpatialQueryStatsR\005stats\"\362\001\n\017Connecti"
    "onPoint\022\027\n\007room_id\030\001 \001(\tR\006roomId\022!\n\014conn"
    "ected_to\030\002 \001(\tR\013connectedTo\0222\n\010position\030"
    "\003 \001(\0132\026.api.v1alpha1.PositionR\010position\022"
    "\'\n\017connection_type\030\004 \001(\tR\016connectionType"
    "\022\035\n\nis_blocked\030\005 \001(\010R\tisBlocked\022\'\n\017block"
    "ing_entity\030\006 \001(\tR\016blockingEntity\"`\n\021Mult"
    "iRoomPosition\022\027\n\007room_id\030\001 \001(\tR\006roomId\0222"
    "\n\010position\030\002 \001(\0132\026.api.v1alpha1.Position"
    "R\010position\"\267\002\n\035CalculateMultiRoomPathReq"
    "uest\022 \n\014from_room_id\030\001 \001(\tR\nfromRoomId\022\034"
    "\n\nto_room_id\030\002 \001(\tR\010toRoomId\022;\n\rfrom_pos"
    "ition\030\003 \001(\0132\026.api.v1alpha1.PositionR\014fro"
    "mPosition\0227\n\013to_position\030\004 \001(\0132\026.api.v1a"
    "lpha1.PositionR\ntoPosition\022\033\n\tentity_id\030"
    "\005 \001(\tR\010entityId\022C\n\007options\030\006 \001(\0132).api.v"
    "1alpha1.MultiRoomPathfindingOptionsR\007opt"
    "ions\"\236\002\n\033MultiRoomPathfindingOptions\022\037\n\013"
    "entity_size\030\001 \001(\001R\nentitySize\022\?\n\rmovemen"
    "t_type\030\002 \001(\0162\032.api.v1alpha1.MovementType"
    "R\014movementType\022$\n\016max_total_cost\030\003 \001(\001R\014"
    "maxTotalCost\022,\n\022allow_door_opening\030\004 \001(\010"
    "R\020allowDoorOpening\022,\n\022prefer_known_paths"
    "\030\005 \001(\010R\020preferKnownPaths\022\033\n\tmax_rooms\030\006 "
    "\001(\005R\010maxRooms\"\252\003\n\036CalculateMultiRoomPath"
    "Response\022/\n\004path\030\001 \001(\0132\033.api.v1alpha1.Mu"
    "ltiRoomPathR\004path\022\037\n\013is_complete\030\002 \001(\010R\n"
    "isComplete\022G\n\020room_transitions\030\003 \003(\0132\034.a"
    "pi.v1alpha1.RoomTransitionR\017roomTransiti"
    "ons\022%\n\016total_distance\030\004 \001(\001R\rtotalDistan"
    "ce\0224\n\026estimated_time_seconds\030\005 \001(\001R\024esti"
    "matedTimeSeconds\022C\n\020required_actions\030\006 \003"
    "(\0132\030.api.v1alpha1.PathActionR\017requiredAc"
    "tions\022K\n\021pathfinding_stats\030\007 \001(\0132\036.api.v"
    "1alpha1.PathfindingStatsR\020pathfindingSta"
    "ts\"\207\001\n\rMultiRoomPath\0225\n\010segments\030\001 \003(\0132\031"
    ".api.v1alpha1.PathSegmentR\010segments\022\035\n\nt"
    "otal_cost\030\002 \001(\001R\ttotalCost\022 \n\013descriptio"
    "n\030\003 \001(\tR\013description\"\357\001\n\013PathSegment\022\027\n\007"
    "room_id\030\001 \001(\tR\006roomId\0224\n\tpositions\030\002 \003(\013"
    "2\026.api.v1alpha1.PositionR\tpositions\0227\n\013e"
    "nter_point\030\003 \001(\0132\026.api.v1alpha1.Position"
    "R\nenterPoint\0225\n\nexit_point\030\004 \001(\0132\026.api.v"
    "1alpha1.PositionR\texitPoint\022!\n\014segment_c"
    "ost\030\005 \001(\001R\013segmentCost\"\373\001\n\016RoomTransitio"
    "n\022 \n\014from_room_id\030\001 \001(\tR\nfromRoomId\022\034\n\nt"
    "o_room_id\030\002 \001(\tR\010toRoomId\022#\n\rconnection_"
    "id\030\003 \001(\tR\014connectionId\0222\n\010position\030\004 \001(\013"
    "2\026.api.v1alpha1.PositionR\010position\022\'\n\017tr"
    "ansition_type\030\005 \001(\tR\016transitionType\022\'\n\017r"
    "equired_action\030\006 \001(\tR\016requiredAction\"\336\001\n"
    "\nPathAction\022\037\n\013action_type\030\001 \001(\tR\naction"
    "Type\0222\n\010position\030\002 \001(\0132\026.api.v1alpha1.Po"
    "sitionR\010position\022\026\n\006target\030\003 \001(\tR\006target"
    "\022\036\n\ndifficulty\030\004 \001(\tR\ndifficulty\022!\n\014time"
    "_seconds\030\005 \001(\001R\013timeSeconds\022 \n\013descripti"
    "on\030\006 \001(\tR\013description\"\243\002\n\030QuerySpatialIn"
    "dexRequest\022\027\n\007room_id\030\001 \001(\tR\006roomId\022=\n\ni"
    "ndex_type\030\002 \001(\0162\036.api.v1alpha1.SpatialIn"
    "dexTypeR\tindexType\022<\n\014bounding_box\030\003 \001(\013"
    "2\031.api.v1alpha1.BoundingBoxR\013boundingBox"
    "\022!\n\014entity_types\030\004 \003(\tR\013entityTypes\022\022\n\004t"
    "ags\030\005 \003(\tR\004tags\022:\n\tprecision\030\006 \001(\0162\034.api"
    ".v1alpha1.QueryPrecisionR\tprecision\"a\n\013B"
    "oundingBox\022\023\n\005min_x\030\001 \001(\001R\004minX\022\023\n\005min_y"
    "\030\002 \001(\001R\004minY\022\023\n\005max_x\030\003 \001(\001R\004maxX\022\023\n\005max"
    "_y\030\004 \001(\001R\004maxY\"\247\002\n\031QuerySpatialIndexResp"
    "onse\022;\n\010entities\030\001 \003(\0132\037.api.v1alpha1.En"
    "tityIndexResultR\010entities\0229\n\013index_stats"
    "\030\002 \001(\0132\030.api.v1alpha1.IndexStatsR\nindexS"
    "tats\022<\n\014query_region\030\003 \001(\0132\031.api.v1alpha"
    "1.BoundingBoxR\013queryRegion\022)\n\020total_cand"
    "idates\030\004 \001(\005R\017totalCandidates\022)\n\020filtere"
    "d_results\030\005 \001(\005R\017filteredResults\"\276\001\n\021Ent"
    "ityIndexResult\022,\n\006entity\030\001 \001(\0132\024.api.v1a"
    "lpha1.EntityR\006entity\022\032\n\010distance\030\002 \001(\001R\010"
    "distance\022\037\n\013exact_match\030\003 \001(\010R\nexactMatc"
    "h\022>\n\rentity_bounds\030\004 \001(\0132\031.api.v1alpha1."
    "BoundingBoxR\014entityBounds\"\214\002\n\nIndexStats"
    "\022=\n\nindex_type\030\001 \001(\0162\036.api.v1alpha1.Spat"
    "ialIndexTypeR\tindexType\022\"\n\rbuild_time_ms"
    "\030\002 \001(\001R\013buildTimeMs\022\"\n\rquery_time_ms\030\003 \001"
    "(\001R\013queryTimeMs\022&\n\017cache_hit_ratio\030\004 \001(\001"
    "R\rcacheHitRatio\022,\n\022index_memory_bytes\030\005 "
    "\001(\003R\020indexMemoryBytes\022!\n\014last_updated\030\006 "
    "\001(\003R\013lastUpdated\"i\n\026GetSpatialStatsReque"
    "st\022\027\n\007room_id\030\001 \001(\tR\006roomId\0226\n\ntime_rang"
    "e\030\002 \001(\0132\027.api.v1alpha1.TimeRangeR\ttimeRa"
    "nge\"E\n\tTimeRange\022\035\n\nstart_time\030\001 \001(\003R\tst"
    "artTime\022\031\n\010end_time\030\002 \001(\003R\007endTime\"\210\004\n\027G"
    "etSpatialStatsResponse\022D\n\roverall_stats\030"
    "\001 \001(\0132\037.api.v1alpha1.SpatialQueryStatsR\014"
    "overallStats\022Z\n\rstats_by_type\030\002 \003(\01326.ap"
    "i.v1alpha1.GetSpatialStatsResponse.Stats"
    "ByTypeEntryR\013statsByType\0229\n\013cache_stats\030"
    "\003 \001(\0132\030.api.v1alpha1.CacheStatsR\ncacheSt"
    "ats\022V\n\013index_stats\030\004 \003(\01325.api.v1alpha1."
    "GetSpatialStatsResponse.IndexStatsEntryR"
    "\nindexStats\032_\n\020StatsByTypeEntry\022\020\n\003key\030\001"
    " \001(\tR\003key\0225\n\005value\030\002 \001(\0132\037.api.v1alpha1."
    "SpatialQueryStatsR\005value:\0028\001\032W\n\017IndexSta"
    "tsEntry\022\020\n\003key\030\001 \001(\tR\003key\022.\n\005value\030\002 \001(\013"
    "2\030.api.v1alpha1.IndexStatsR\005value:\0028\001\"\225\001"
    "\n\nCacheStats\022\033\n\thit_ratio\030\001 \001(\001R\010hitRati"
    "o\022\022\n\004hits\030\002 \001(\003R\004hits\022\026\n\006misses\030\003 \001(\003R\006m"
    "isses\022\035\n\nsize_bytes\030\004 \001(\003R\tsizeBytes\022\037\n\013"
    "entry_count\030\005 \001(\005R\nentryCount\"\231\001\n\035Invali"
    "dateSpatialCacheRequest\022\027\n\007room_id\030\001 \001(\t"
    "R\006roomId\0228\n\013cache_types\030\002 \003(\0162\027.api.v1al"
    "pha1.CacheTypeR\ncacheTypes\022%\n\016invalidate"
    "_all\030\003 \001(\010R\rinvalidateAll\"\231\001\n\036Invalidate"
    "SpatialCacheResponse\022\030\n\007message\030\001 \001(\tR\007m"
    "essage\022/\n\023entries_invalidated\030\002 \001(\005R\022ent"
    "riesInvalidated\022,\n\022memory_freed_bytes\030\003 "
    "\001(\003R\020memoryFreedBytes\"\360\001\n\021SpatialQuerySt"
    "ats\022*\n\021execution_time_ms\030\001 \001(\001R\017executio"
    "nTimeMs\022-\n\022entities_processed\030\002 \001(\005R\021ent"
    "itiesProcessed\022&\n\017cache_hit_ratio\030\003 \001(\001R"
    "\rcacheHitRatio\022!\n\014memory_bytes\030\004 \001(\003R\013me"
    "moryBytes\0225\n\026calculations_performed\030\005 \001("
    "\005R\025calculationsPerformed*\235\001\n\tCoverType\022\032"
    "\n\026COVER_TYPE_UNSPECIFIED\020\000\022\023\n\017COVER_TYPE"
    "_NONE\020\001\022\026\n\022COVER_TYPE_PARTIAL\020\002\022\023\n\017COVER"
    "_TYPE_HALF\020\003\022\035\n\031COVER_TYPE_THREE_QUARTER"
    "S\020\004\022\023\n\017COVER_TYPE_FULL\020\005*\332\001\n\014MovementTyp"
    "e\022\035\n\031MOVEMENT_TYPE_UNSPECIFIED\020\000\022\026\n\022MOVE"
    "MENT_TYPE_WALK\020\001\022\025\n\021MOVEMENT_TYPE_RUN\020\002\022"
    "\025\n\021MOVEMENT_TYPE_FLY\020\003\022\026\n\022MOVEMENT_TYPE_"
    "SWIM\020\004\022\027\n\023MOVEMENT_TYPE_CLIMB\020\005\022\030\n\024MOVEM"
    "ENT_TYPE_BURROW\020\006\022\032\n\026MOVEMENT_TYPE_TELEP"
    "ORT\020\007*\270\001\n\016RangeSortOrder\022 \n\034RANGE_SORT_O"
    "RDER_UNSPECIFIED\020\000\022!\n\035RANGE_SORT_ORDER_D"
    "ISTANCE_ASC\020\001\022\"\n\036RANGE_SORT_ORDER_DISTAN"
    "CE_DESC\020\002\022\035\n\031RANGE_SORT_ORDER_SIZE_ASC\020\003"
    "\022\036\n\032RANGE_SORT_ORDER_SIZE_DESC\020\004*\237\001\n\016Pat"
    "hPreference\022\037\n\033PATH_PREFERENCE_UNSPECIFI"
    "ED\020\000\022\033\n\027PATH_PREFERENCE_OPTIMAL\020\001\022\030\n\024PAT"
    "H_PREFERENCE_SAFE\020\002\022\032\n\026PATH_PREFERENCE_D"
    "IRECT\020\003\022\031\n\025PATH_PREFERENCE_COVER\020\004*\321\001\n\024P"
    "athfindingAlgorithm\022%\n!PATHFINDING_ALGOR"
    "ITHM_UNSPECIFIED\020\000\022 \n\034PATHFINDING_ALGORI"
    "THM_A_STAR\020\001\022\"\n\036PATHFINDING_ALGORITHM_DI"
    "JKSTRA\020\002\022$\n PATHFINDING_ALGORITHM_JUMP_P"
    "OINT\020\003\022&\n\"PATHFINDING_ALGORITHM_HIERARCH"
    "ICAL\020\004*\326\001\n\020AreaOfEffectType\022#\n\037AREA_OF_E"
    "FFECT_TYPE_UNSPECIFIED\020\000\022\036\n\032AREA_OF_EFFE"
    "CT_TYPE_CIRCLE\020\001\022\034\n\030AREA_OF_EFFECT_TYPE_"
    "CONE\020\002\022\034\n\030AREA_OF_EFFECT_TYPE_LINE\020\003\022!\n\035"
    "AREA_OF_EFFECT_TYPE_RECTANGLE\020\004\022\036\n\032AREA_"
    "OF_EFFECT_TYPE_CUSTOM\020\005*r\n\nCoverRules\022\033\n"
    "\027COVER_RULES_UNSPECIFIED\020\000\022\026\n\022COVER_RULE"
    "S_STRICT\020\001\022\027\n\023COVER_RULES_PARTIAL\020\002\022\026\n\022C"
    "OVER_RULES_IGNORE\020\003*\260\001\n\020SpatialIndexType"
    "\022\"\n\036SPATIAL_INDEX_TYPE_UNSPECIFIED\020\000\022\037\n\033"
    "SPATIAL_INDEX_TYPE_QUADTREE\020\001\022\035\n\031SPATIAL"
    "_INDEX_TYPE_R_TREE\020\002\022\033\n\027SPATIAL_INDEX_TY"
    "PE_GRID\020\003\022\033\n\027SPATIAL_INDEX_TYPE_AUTO\020\004*\211"
    "\001\n\016QueryPrecision\022\037\n\033QUERY_PRECISION_UNS"
    "PECIFIED\020\000\022\030\n\024QUERY_PRECISION_FAST\020\001\022\034\n\030"
    "QUERY_PRECISION_ACCURATE\020\002\022\036\n\032QUERY_PREC"
    "ISION_EXHAUSTIVE\020\003*\236\001\n\tCacheType\022\032\n\026CACH"
    "E_TYPE_UNSPECIFIED\020\000\022\034\n\030CACHE_TYPE_SPATI"
    "AL_INDEX\020\001\022\034\n\030CACHE_TYPE_QUERY_RESULTS\020\002"
    "\022\035\n\031CACHE_TYPE_ROOM_STRUCTURE\020\003\022\032\n\026CACHE"
    "_TYPE_PATHFINDING\020\0042\303\t\n\016SpatialService\022a"
    "\n\020QueryLineOfSight\022%.api.v1alpha1.QueryL"
    "ineOfSightRequest\032&.api.v1alpha1.QueryLi"
    "neOfSightResponse\022a\n\020ValidateMovement\022%."
    "api.v1alpha1.ValidateMovementRequest\032&.a"
    "pi.v1alpha1.ValidateMovementResponse\022v\n\027"
    "ValidateEntityPlacement\022,.api.v1alpha1.V"
    "alidateEntityPlacementRequest\032-.api.v1al"
    "pha1.ValidateEntityPlacementResponse\022m\n\024"
    "QueryEntitiesInRange\022).api.v1alpha1.Quer"
    "yEntitiesInRangeRequest\032*.api.v1alpha1.Q"
    "ueryEntitiesInRangeResponse\022p\n\025Calculate"
    "MovementPath\022*.api.v1alpha1.CalculateMov"
    "ementPathRequest\032+.api.v1alpha1.Calculat"
    "eMovementPathResponse\022d\n\021QueryAreaOfEffe"
    "ct\022&.api.v1alpha1.QueryAreaOfEffectReque"
    "st\032\'.api.v1alpha1.QueryAreaOfEffectRespo"
    "nse\022|\n\031QueryMultiRoomLineOfSight\022..api.v"
    "1alpha1.QueryMultiRoomLineOfSightRequest"
    "\032/.api.v1alpha1.QueryMultiRoomLineOfSigh"
    "tResponse\022s\n\026CalculateMultiRoomPath\022+.ap"
    "i.v1alpha1.CalculateMultiRoomPathRequest"
    "\032,.api.v1alpha1.CalculateMultiRoomPathRe"
    "sponse\022d\n\021QuerySpatialIndex\022&.api.v1alph"
    "a1.QuerySpatialIndexRequest\032\'.api.v1alph"
    "a1.QuerySpatialIndexResponse\022^\n\017GetSpati"
    "alStats\022$.api.v1alpha1.GetSpatialStatsRe"
    "quest\032%.api.v1alpha1.GetSpatialStatsResp"
    "onse\022s\n\026InvalidateSpatialCache\022+.api.v1a"
    "lpha1.InvalidateSpatialCacheRequest\032,.ap"
    "i.v1alpha1.InvalidateSpatialCacheRespons"
    "eB\274\001\n\020com.api.v1alpha1B\020RoomSpatialProto"
    "P\001ZEgithub.com/KirkDiggler/rpg-api-proto"
    "s/gen/go/api/v1alpha1;apiv1alpha1\242\002\003AXX\252"
    "\002\014Api.V1alpha1\312\002\014Api\\V1alpha1\342\002\030Api\\V1al"
    "pha1\\GPBMetadata\352\002\rApi::V1alpha1b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto_deps[1] = {
        &::descriptor_table_api_2fv1alpha1_2froom_5fcommon_2eproto,
};
static ::absl::once_flag descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto = {
    false,
    false,
    17000,
    descriptor_table_protodef_api_2fv1alpha1_2froom_5fspatial_2eproto,
    "api/v1alpha1/room_spatial.proto",
    &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto_once,
    descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto_deps,
    1,
    59,
    schemas,
    file_default_instances,
    TableStruct_api_2fv1alpha1_2froom_5fspatial_2eproto::offsets,
    file_level_enum_descriptors_api_2fv1alpha1_2froom_5fspatial_2eproto,
    file_level_service_descriptors_api_2fv1alpha1_2froom_5fspatial_2eproto,
};
namespace api {
namespace v1alpha1 {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL CoverType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto);
  return file_level_enum_descriptors_api_2fv1alpha1_2froom_5fspatial_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t CoverType_internal_data_[] = {
    393216u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL MovementType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto);
  return file_level_enum_descriptors_api_2fv1alpha1_2froom_5fspatial_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t MovementType_internal_data_[] = {
    524288u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL RangeSortOrder_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto);
  return file_level_enum_descriptors_api_2fv1alpha1_2froom_5fspatial_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t RangeSortOrder_internal_data_[] = {
    327680u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL PathPreference_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto);
  return file_level_enum_descriptors_api_2fv1alpha1_2froom_5fspatial_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t PathPreference_internal_data_[] = {
    327680u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL PathfindingAlgorithm_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto);
  return file_level_enum_descriptors_api_2fv1alpha1_2froom_5fspatial_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t PathfindingAlgorithm_internal_data_[] = {
    327680u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL AreaOfEffectType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto);
  return file_level_enum_descriptors_api_2fv1alpha1_2froom_5fspatial_2eproto[5];
}
PROTOBUF_CONSTINIT const uint32_t AreaOfEffectType_internal_data_[] = {
    393216u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL CoverRules_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto);
  return file_level_enum_descriptors_api_2fv1alpha1_2froom_5fspatial_2eproto[6];
}
PROTOBUF_CONSTINIT const uint32_t CoverRules_internal_data_[] = {
    262144u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL SpatialIndexType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto);
  return file_level_enum_descriptors_api_2fv1alpha1_2froom_5fspatial_2eproto[7];
}
PROTOBUF_CONSTINIT const uint32_t SpatialIndexType_internal_data_[] = {
    327680u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL QueryPrecision_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto);
  return file_level_enum_descriptors_api_2fv1alpha1_2froom_5fspatial_2eproto[8];
}
PROTOBUF_CONSTINIT const uint32_t QueryPrecision_internal_data_[] = {
    262144u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL CacheType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto);
  return file_level_enum_descriptors_api_2fv1alpha1_2froom_5fspatial_2eproto[9];
}
PROTOBUF_CONSTINIT const uint32_t CacheType_internal_data_[] = {
    327680u, 0u, };
// ===================================================================

class QueryLineOfSightRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<QueryLineOfSightRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryLineOfSightRequest, _impl_._has_bits_);
};

void QueryLineOfSightRequest::clear_from_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.from_position_ != nullptr) _impl_.from_position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
void QueryLineOfSightRequest::clear_to_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.to_position_ != nullptr) _impl_.to_position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008U;
}
QueryLineOfSightRequest::QueryLineOfSightRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, QueryLineOfSightRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.QueryLineOfSightRequest)
}
PROTOBUF_NDEBUG_INLINE QueryLineOfSightRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::QueryLineOfSightRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        room_id_(arena, from.room_id_),
        entity_id_(arena, from.entity_id_) {}

QueryLineOfSightRequest::QueryLineOfSightRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const QueryLineOfSightRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, QueryLineOfSightRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryLineOfSightRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.from_position_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.from_position_)
                : nullptr;
  _impl_.to_position_ = ((cached_has_bits & 0x00000008U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.to_position_)
                : nullptr;
  _impl_.options_ = ((cached_has_bits & 0x00000010U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_)
                : nullptr;
  _impl_.entity_size_ = from._impl_.entity_size_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.QueryLineOfSightRequest)
}
PROTOBUF_NDEBUG_INLINE QueryLineOfSightRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        room_id_(arena),
        entity_id_(arena) {}

inline void QueryLineOfSightRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, from_position_),
           0,
           offsetof(Impl_, entity_size_) -
               offsetof(Impl_, from_position_) +
               sizeof(Impl_::entity_size_));
}
QueryLineOfSightRequest::~QueryLineOfSightRequest() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.QueryLineOfSightRequest)
  SharedDtor(*this);
}
inline void QueryLineOfSightRequest::SharedDtor(MessageLite& self) {
  QueryLineOfSightRequest& this_ = static_cast<QueryLineOfSightRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.room_id_.Destroy();
  this_._impl_.entity_id_.Destroy();
  delete this_._impl_.from_position_;
  delete this_._impl_.to_position_;
  delete this_._impl_.options_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL QueryLineOfSightRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) QueryLineOfSightRequest(arena);
}
constexpr auto QueryLineOfSightRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(QueryLineOfSightRequest),
                                            alignof(QueryLineOfSightRequest));
}
constexpr auto QueryLineOfSightRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_QueryLineOfSightRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &QueryLineOfSightRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<QueryLineOfSightRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &QueryLineOfSightRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<QueryLineOfSightRequest>(), &QueryLineOfSightRequest::ByteSizeLong,
              &QueryLineOfSightRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(QueryLineOfSightRequest, _impl_._cached_size_),
          false,
      },
      &QueryLineOfSightRequest::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull QueryLineOfSightRequest_class_data_ =
        QueryLineOfSightRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
QueryLineOfSightRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&QueryLineOfSightRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(QueryLineOfSightRequest_class_data_.tc_table);
  return QueryLineOfSightRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 3, 61, 2>
QueryLineOfSightRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryLineOfSightRequest, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    QueryLineOfSightRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::QueryLineOfSightRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string room_id = 1 [json_name = "roomId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(QueryLineOfSightRequest, _impl_.room_id_)}},
    // .api.v1alpha1.Position from_position = 2 [json_name = "fromPosition"];
    {::_pbi::TcParser::FastMtS1,
     {18, 2, 0, PROTOBUF_FIELD_OFFSET(QueryLineOfSightRequest, _impl_.from_position_)}},
    // .api.v1alpha1.Position to_position = 3 [json_name = "toPosition"];
    {::_pbi::TcParser::FastMtS1,
     {26, 3, 1, PROTOBUF_FIELD_OFFSET(QueryLineOfSightRequest, _impl_.to_position_)}},
    // string entity_id = 4 [json_name = "entityId"];
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(QueryLineOfSightRequest, _impl_.entity_id_)}},
    // double entity_size = 5 [json_name = "entitySize"];
    {::_pbi::TcParser::FastF64S1,
     {41, 5, 0, PROTOBUF_FIELD_OFFSET(QueryLineOfSightRequest, _impl_.entity_size_)}},
    // .api.v1alpha1.LineOfSightOptions options = 6 [json_name = "options"];
    {::_pbi::TcParser::FastMtS1,
     {50, 4, 2, PROTOBUF_FIELD_OFFSET(QueryLineOfSightRequest, _impl_.options_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string room_id = 1 [json_name = "roomId"];
    {PROTOBUF_FIELD_OFFSET(QueryLineOfSightRequest, _impl_.room_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.Position from_position = 2 [json_name = "fromPosition"];
    {PROTOBUF_FIELD_OFFSET(QueryLineOfSightRequest, _impl_.from_position_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.Position to_position = 3 [json_name = "toPosition"];
    {PROTOBUF_FIELD_OFFSET(QueryLineOfSightRequest, _impl_.to_position_), _Internal::kHasBitsOffset + 3, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string entity_id = 4 [json_name = "entityId"];
    {PROTOBUF_FIELD_OFFSET(QueryLineOfSightRequest, _impl_.entity_id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double entity_size = 5 [json_name = "entitySize"];
    {PROTOBUF_FIELD_OFFSET(QueryLineOfSightRequest, _impl_.entity_size_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // .api.v1alpha1.LineOfSightOptions options = 6 [json_name = "options"];
    {PROTOBUF_FIELD_OFFSET(QueryLineOfSightRequest, _impl_.options_), _Internal::kHasBitsOffset + 4, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::LineOfSightOptions>()},
  }},
  {{
    "\44\7\0\0\11\0\0\0"
    "api.v1alpha1.QueryLineOfSightRequest"
    "room_id"
    "entity_id"
  }},
};
PROTOBUF_NOINLINE void QueryLineOfSightRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.QueryLineOfSightRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.room_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.entity_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.from_position_ != nullptr);
      _impl_.from_position_->Clear();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(_impl_.to_position_ != nullptr);
      _impl_.to_position_->Clear();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(_impl_.options_ != nullptr);
      _impl_.options_->Clear();
    }
  }
  _impl_.entity_size_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL QueryLineOfSightRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const QueryLineOfSightRequest& this_ = static_cast<const QueryLineOfSightRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL QueryLineOfSightRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const QueryLineOfSightRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.QueryLineOfSightRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string room_id = 1 [json_name = "roomId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_room_id().empty()) {
      const ::std::string& _s = this_._internal_room_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.QueryLineOfSightRequest.room_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.Position from_position = 2 [json_name = "fromPosition"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.from_position_, this_._impl_.from_position_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.Position to_position = 3 [json_name = "toPosition"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.to_position_, this_._impl_.to_position_->GetCachedSize(), target,
        stream);
  }

  // string entity_id = 4 [json_name = "entityId"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    if (!this_._internal_entity_id().empty()) {
      const ::std::string& _s = this_._internal_entity_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.QueryLineOfSightRequest.entity_id");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // double entity_size = 5 [json_name = "entitySize"];
  if ((cached_has_bits & 0x00000020U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_entity_size()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          5, this_._internal_entity_size(), target);
    }
  }

  // .api.v1alpha1.LineOfSightOptions options = 6 [json_name = "options"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.options_, this_._impl_.options_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.QueryLineOfSightRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t QueryLineOfSightRequest::ByteSizeLong(const MessageLite& base) {
  const QueryLineOfSightRequest& this_ = static_cast<const QueryLineOfSightRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t QueryLineOfSightRequest::ByteSizeLong() const {
  const QueryLineOfSightRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.QueryLineOfSightRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    // string room_id = 1 [json_name = "roomId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_room_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_room_id());
      }
    }
    // string entity_id = 4 [json_name = "entityId"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_entity_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_entity_id());
      }
    }
    // .api.v1alpha1.Position from_position = 2 [json_name = "fromPosition"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.from_position_);
    }
    // .api.v1alpha1.Position to_position = 3 [json_name = "toPosition"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.to_position_);
    }
    // .api.v1alpha1.LineOfSightOptions options = 6 [json_name = "options"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.options_);
    }
    // double entity_size = 5 [json_name = "entitySize"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_entity_size()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void QueryLineOfSightRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryLineOfSightRequest*>(&to_msg);
  auto& from = static_cast<const QueryLineOfSightRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.QueryLineOfSightRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_room_id().empty()) {
        _this->_internal_set_room_id(from._internal_room_id());
      } else {
        if (_this->_impl_.room_id_.IsDefault()) {
          _this->_internal_set_room_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_entity_id().empty()) {
        _this->_internal_set_entity_id(from._internal_entity_id());
      } else {
        if (_this->_impl_.entity_id_.IsDefault()) {
          _this->_internal_set_entity_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.from_position_ != nullptr);
      if (_this->_impl_.from_position_ == nullptr) {
        _this->_impl_.from_position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.from_position_);
      } else {
        _this->_impl_.from_position_->MergeFrom(*from._impl_.from_position_);
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(from._impl_.to_position_ != nullptr);
      if (_this->_impl_.to_position_ == nullptr) {
        _this->_impl_.to_position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.to_position_);
      } else {
        _this->_impl_.to_position_->MergeFrom(*from._impl_.to_position_);
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(from._impl_.options_ != nullptr);
      if (_this->_impl_.options_ == nullptr) {
        _this->_impl_.options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_);
      } else {
        _this->_impl_.options_->MergeFrom(*from._impl_.options_);
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_entity_size()) != 0) {
        _this->_impl_.entity_size_ = from._impl_.entity_size_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryLineOfSightRequest::CopyFrom(const QueryLineOfSightRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.QueryLineOfSightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryLineOfSightRequest::InternalSwap(QueryLineOfSightRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.room_id_, &other->_impl_.room_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entity_id_, &other->_impl_.entity_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryLineOfSightRequest, _impl_.entity_size_)
      + sizeof(QueryLineOfSightRequest::_impl_.entity_size_)
      - PROTOBUF_FIELD_OFFSET(QueryLineOfSightRequest, _impl_.from_position_)>(
          reinterpret_cast<char*>(&_impl_.from_position_),
          reinterpret_cast<char*>(&other->_impl_.from_position_));
}

::google::protobuf::Metadata QueryLineOfSightRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LineOfSightOptions::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<LineOfSightOptions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LineOfSightOptions, _impl_._has_bits_);
};

LineOfSightOptions::LineOfSightOptions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LineOfSightOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.LineOfSightOptions)
}
PROTOBUF_NDEBUG_INLINE LineOfSightOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::LineOfSightOptions& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        ignore_entity_types_{visibility, arena, from.ignore_entity_types_} {}

LineOfSightOptions::LineOfSightOptions(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const LineOfSightOptions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LineOfSightOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LineOfSightOptions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, max_range_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, max_range_),
           offsetof(Impl_, detailed_blocking_info_) -
               offsetof(Impl_, max_range_) +
               sizeof(Impl_::detailed_blocking_info_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.LineOfSightOptions)
}
PROTOBUF_NDEBUG_INLINE LineOfSightOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        ignore_entity_types_{visibility, arena} {}

inline void LineOfSightOptions::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, max_range_),
           0,
           offsetof(Impl_, detailed_blocking_info_) -
               offsetof(Impl_, max_range_) +
               sizeof(Impl_::detailed_blocking_info_));
}
LineOfSightOptions::~LineOfSightOptions() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.LineOfSightOptions)
  SharedDtor(*this);
}
inline void LineOfSightOptions::SharedDtor(MessageLite& self) {
  LineOfSightOptions& this_ = static_cast<LineOfSightOptions&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LineOfSightOptions::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LineOfSightOptions(arena);
}
constexpr auto LineOfSightOptions::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(LineOfSightOptions, _impl_.ignore_entity_types_) +
          decltype(LineOfSightOptions::_impl_.ignore_entity_types_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(LineOfSightOptions), alignof(LineOfSightOptions), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&LineOfSightOptions::PlacementNew_,
                                 sizeof(LineOfSightOptions),
                                 alignof(LineOfSightOptions));
  }
}
constexpr auto LineOfSightOptions::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LineOfSightOptions_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LineOfSightOptions::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LineOfSightOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LineOfSightOptions::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LineOfSightOptions>(), &LineOfSightOptions::ByteSizeLong,
              &LineOfSightOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LineOfSightOptions, _impl_._cached_size_),
          false,
      },
      &LineOfSightOptions::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LineOfSightOptions_class_data_ =
        LineOfSightOptions::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LineOfSightOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LineOfSightOptions_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LineOfSightOptions_class_data_.tc_table);
  return LineOfSightOptions_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 59, 2>
LineOfSightOptions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LineOfSightOptions, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    LineOfSightOptions_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::LineOfSightOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool consider_height = 1 [json_name = "considerHeight"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(LineOfSightOptions, _impl_.consider_height_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(LineOfSightOptions, _impl_.consider_height_)}},
    // bool partial_cover_blocks = 2 [json_name = "partialCoverBlocks"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(LineOfSightOptions, _impl_.partial_cover_blocks_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(LineOfSightOptions, _impl_.partial_cover_blocks_)}},
    // double max_range = 3 [json_name = "maxRange"];
    {::_pbi::TcParser::FastF64S1,
     {25, 0, 0, PROTOBUF_FIELD_OFFSET(LineOfSightOptions, _impl_.max_range_)}},
    // repeated string ignore_entity_types = 4 [json_name = "ignoreEntityTypes"];
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(LineOfSightOptions, _impl_.ignore_entity_types_)}},
    // bool detailed_blocking_info = 5 [json_name = "detailedBlockingInfo"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(LineOfSightOptions, _impl_.detailed_blocking_info_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(LineOfSightOptions, _impl_.detailed_blocking_info_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bool consider_height = 1 [json_name = "considerHeight"];
    {PROTOBUF_FIELD_OFFSET(LineOfSightOptions, _impl_.consider_height_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool partial_cover_blocks = 2 [json_name = "partialCoverBlocks"];
    {PROTOBUF_FIELD_OFFSET(LineOfSightOptions, _impl_.partial_cover_blocks_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // double max_range = 3 [json_name = "maxRange"];
    {PROTOBUF_FIELD_OFFSET(LineOfSightOptions, _impl_.max_range_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // repeated string ignore_entity_types = 4 [json_name = "ignoreEntityTypes"];
    {PROTOBUF_FIELD_OFFSET(LineOfSightOptions, _impl_.ignore_entity_types_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // bool detailed_blocking_info = 5 [json_name = "detailedBlockingInfo"];
    {PROTOBUF_FIELD_OFFSET(LineOfSightOptions, _impl_.detailed_blocking_info_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\37\0\0\0\23\0\0\0"
    "api.v1alpha1.LineOfSightOptions"
    "ignore_entity_types"
  }},
};
PROTOBUF_NOINLINE void LineOfSightOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.LineOfSightOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ignore_entity_types_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    ::memset(&_impl_.max_range_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.detailed_blocking_info_) -
        reinterpret_cast<char*>(&_impl_.max_range_)) + sizeof(_impl_.detailed_blocking_info_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LineOfSightOptions::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LineOfSightOptions& this_ = static_cast<const LineOfSightOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LineOfSightOptions::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LineOfSightOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.LineOfSightOptions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool consider_height = 1 [json_name = "considerHeight"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_consider_height() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_consider_height(), target);
    }
  }

  // bool partial_cover_blocks = 2 [json_name = "partialCoverBlocks"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_partial_cover_blocks() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_partial_cover_blocks(), target);
    }
  }

  // double max_range = 3 [json_name = "maxRange"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_max_range()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_max_range(), target);
    }
  }

  // repeated string ignore_entity_types = 4 [json_name = "ignoreEntityTypes"];
  for (int i = 0, n = this_._internal_ignore_entity_types_size(); i < n; ++i) {
    const auto& s = this_._internal_ignore_entity_types().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.LineOfSightOptions.ignore_entity_types");
    target = stream->WriteString(4, s, target);
  }

  // bool detailed_blocking_info = 5 [json_name = "detailedBlockingInfo"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_detailed_blocking_info() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          5, this_._internal_detailed_blocking_info(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.LineOfSightOptions)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LineOfSightOptions::ByteSizeLong(const MessageLite& base) {
  const LineOfSightOptions& this_ = static_cast<const LineOfSightOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LineOfSightOptions::ByteSizeLong() const {
  const LineOfSightOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.LineOfSightOptions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string ignore_entity_types = 4 [json_name = "ignoreEntityTypes"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_ignore_entity_types().size());
      for (int i = 0, n = this_._internal_ignore_entity_types().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_ignore_entity_types().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // double max_range = 3 [json_name = "maxRange"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_max_range()) != 0) {
        total_size += 9;
      }
    }
    // bool consider_height = 1 [json_name = "considerHeight"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_consider_height() != 0) {
        total_size += 2;
      }
    }
    // bool partial_cover_blocks = 2 [json_name = "partialCoverBlocks"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_partial_cover_blocks() != 0) {
        total_size += 2;
      }
    }
    // bool detailed_blocking_info = 5 [json_name = "detailedBlockingInfo"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_detailed_blocking_info() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LineOfSightOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LineOfSightOptions*>(&to_msg);
  auto& from = static_cast<const LineOfSightOptions&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.LineOfSightOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_ignore_entity_types()->MergeFrom(from._internal_ignore_entity_types());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_max_range()) != 0) {
        _this->_impl_.max_range_ = from._impl_.max_range_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_consider_height() != 0) {
        _this->_impl_.consider_height_ = from._impl_.consider_height_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_partial_cover_blocks() != 0) {
        _this->_impl_.partial_cover_blocks_ = from._impl_.partial_cover_blocks_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_detailed_blocking_info() != 0) {
        _this->_impl_.detailed_blocking_info_ = from._impl_.detailed_blocking_info_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LineOfSightOptions::CopyFrom(const LineOfSightOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.LineOfSightOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LineOfSightOptions::InternalSwap(LineOfSightOptions* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.ignore_entity_types_.InternalSwap(&other->_impl_.ignore_entity_types_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LineOfSightOptions, _impl_.detailed_blocking_info_)
      + sizeof(LineOfSightOptions::_impl_.detailed_blocking_info_)
      - PROTOBUF_FIELD_OFFSET(LineOfSightOptions, _impl_.max_range_)>(
          reinterpret_cast<char*>(&_impl_.max_range_),
          reinterpret_cast<char*>(&other->_impl_.max_range_));
}

::google::protobuf::Metadata LineOfSightOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryLineOfSightResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<QueryLineOfSightResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryLineOfSightResponse, _impl_._has_bits_);
};

QueryLineOfSightResponse::QueryLineOfSightResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, QueryLineOfSightResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.QueryLineOfSightResponse)
}
PROTOBUF_NDEBUG_INLINE QueryLineOfSightResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::QueryLineOfSightResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

QueryLineOfSightResponse::QueryLineOfSightResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const QueryLineOfSightResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, QueryLineOfSightResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryLineOfSightResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.blocking_info_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.blocking_info_)
                : nullptr;
  _impl_.cover_info_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.cover_info_)
                : nullptr;
  _impl_.stats_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.stats_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, distance_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, distance_),
           offsetof(Impl_, has_line_of_sight_) -
               offsetof(Impl_, distance_) +
               sizeof(Impl_::has_line_of_sight_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.QueryLineOfSightResponse)
}
PROTOBUF_NDEBUG_INLINE QueryLineOfSightResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void QueryLineOfSightResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, blocking_info_),
           0,
           offsetof(Impl_, has_line_of_sight_) -
               offsetof(Impl_, blocking_info_) +
               sizeof(Impl_::has_line_of_sight_));
}
QueryLineOfSightResponse::~QueryLineOfSightResponse() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.QueryLineOfSightResponse)
  SharedDtor(*this);
}
inline void QueryLineOfSightResponse::SharedDtor(MessageLite& self) {
  QueryLineOfSightResponse& this_ = static_cast<QueryLineOfSightResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.blocking_info_;
  delete this_._impl_.cover_info_;
  delete this_._impl_.stats_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL QueryLineOfSightResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) QueryLineOfSightResponse(arena);
}
constexpr auto QueryLineOfSightResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(QueryLineOfSightResponse),
                                            alignof(QueryLineOfSightResponse));
}
constexpr auto QueryLineOfSightResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_QueryLineOfSightResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &QueryLineOfSightResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<QueryLineOfSightResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &QueryLineOfSightResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<QueryLineOfSightResponse>(), &QueryLineOfSightResponse::ByteSizeLong,
              &QueryLineOfSightResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(QueryLineOfSightResponse, _impl_._cached_size_),
          false,
      },
      &QueryLineOfSightResponse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull QueryLineOfSightResponse_class_data_ =
        QueryLineOfSightResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
QueryLineOfSightResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&QueryLineOfSightResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(QueryLineOfSightResponse_class_data_.tc_table);
  return QueryLineOfSightResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 0, 2>
QueryLineOfSightResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryLineOfSightResponse, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    QueryLineOfSightResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::QueryLineOfSightResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool has_line_of_sight = 1 [json_name = "hasLineOfSight"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(QueryLineOfSightResponse, _impl_.has_line_of_sight_), 4>(),
     {8, 4, 0, PROTOBUF_FIELD_OFFSET(QueryLineOfSightResponse, _impl_.has_line_of_sight_)}},
    // double distance = 2 [json_name = "distance"];
    {::_pbi::TcParser::FastF64S1,
     {17, 3, 0, PROTOBUF_FIELD_OFFSET(QueryLineOfSightResponse, _impl_.distance_)}},
    // .api.v1alpha1.BlockingInfo blocking_info = 3 [json_name = "blockingInfo"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(QueryLineOfSightResponse, _impl_.blocking_info_)}},
    // .api.v1alpha1.CoverInfo cover_info = 4 [json_name = "coverInfo"];
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(QueryLineOfSightResponse, _impl_.cover_info_)}},
    // .api.v1alpha1.SpatialQueryStats stats = 5 [json_name = "stats"];
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 2, PROTOBUF_FIELD_OFFSET(QueryLineOfSightResponse, _impl_.stats_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bool has_line_of_sight = 1 [json_name = "hasLineOfSight"];
    {PROTOBUF_FIELD_OFFSET(QueryLineOfSightResponse, _impl_.has_line_of_sight_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // double distance = 2 [json_name = "distance"];
    {PROTOBUF_FIELD_OFFSET(QueryLineOfSightResponse, _impl_.distance_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // .api.v1alpha1.BlockingInfo blocking_info = 3 [json_name = "blockingInfo"];
    {PROTOBUF_FIELD_OFFSET(QueryLineOfSightResponse, _impl_.blocking_info_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.CoverInfo cover_info = 4 [json_name = "coverInfo"];
    {PROTOBUF_FIELD_OFFSET(QueryLineOfSightResponse, _impl_.cover_info_), _Internal::kHasBitsOffset + 1, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.SpatialQueryStats stats = 5 [json_name = "stats"];
    {PROTOBUF_FIELD_OFFSET(QueryLineOfSightResponse, _impl_.stats_), _Internal::kHasBitsOffset + 2, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::BlockingInfo>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::CoverInfo>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::SpatialQueryStats>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void QueryLineOfSightResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.QueryLineOfSightResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.blocking_info_ != nullptr);
      _impl_.blocking_info_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.cover_info_ != nullptr);
      _impl_.cover_info_->Clear();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.stats_ != nullptr);
      _impl_.stats_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000018U) != 0) {
    ::memset(&_impl_.distance_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.has_line_of_sight_) -
        reinterpret_cast<char*>(&_impl_.distance_)) + sizeof(_impl_.has_line_of_sight_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL QueryLineOfSightResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const QueryLineOfSightResponse& this_ = static_cast<const QueryLineOfSightResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL QueryLineOfSightResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const QueryLineOfSightResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.QueryLineOfSightResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool has_line_of_sight = 1 [json_name = "hasLineOfSight"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_has_line_of_sight() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_has_line_of_sight(), target);
    }
  }

  // double distance = 2 [json_name = "distance"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_distance()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_distance(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.BlockingInfo blocking_info = 3 [json_name = "blockingInfo"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.blocking_info_, this_._impl_.blocking_info_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.CoverInfo cover_info = 4 [json_name = "coverInfo"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.cover_info_, this_._impl_.cover_info_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.SpatialQueryStats stats = 5 [json_name = "stats"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.stats_, this_._impl_.stats_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.QueryLineOfSightResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t QueryLineOfSightResponse::ByteSizeLong(const MessageLite& base) {
  const QueryLineOfSightResponse& this_ = static_cast<const QueryLineOfSightResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t QueryLineOfSightResponse::ByteSizeLong() const {
  const QueryLineOfSightResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.QueryLineOfSightResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // .api.v1alpha1.BlockingInfo blocking_info = 3 [json_name = "blockingInfo"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.blocking_info_);
    }
    // .api.v1alpha1.CoverInfo cover_info = 4 [json_name = "coverInfo"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.cover_info_);
    }
    // .api.v1alpha1.SpatialQueryStats stats = 5 [json_name = "stats"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.stats_);
    }
    // double distance = 2 [json_name = "distance"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_distance()) != 0) {
        total_size += 9;
      }
    }
    // bool has_line_of_sight = 1 [json_name = "hasLineOfSight"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_has_line_of_sight() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void QueryLineOfSightResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryLineOfSightResponse*>(&to_msg);
  auto& from = static_cast<const QueryLineOfSightResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.QueryLineOfSightResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.blocking_info_ != nullptr);
      if (_this->_impl_.blocking_info_ == nullptr) {
        _this->_impl_.blocking_info_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.blocking_info_);
      } else {
        _this->_impl_.blocking_info_->MergeFrom(*from._impl_.blocking_info_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.cover_info_ != nullptr);
      if (_this->_impl_.cover_info_ == nullptr) {
        _this->_impl_.cover_info_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.cover_info_);
      } else {
        _this->_impl_.cover_info_->MergeFrom(*from._impl_.cover_info_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.stats_ != nullptr);
      if (_this->_impl_.stats_ == nullptr) {
        _this->_impl_.stats_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.stats_);
      } else {
        _this->_impl_.stats_->MergeFrom(*from._impl_.stats_);
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_distance()) != 0) {
        _this->_impl_.distance_ = from._impl_.distance_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_has_line_of_sight() != 0) {
        _this->_impl_.has_line_of_sight_ = from._impl_.has_line_of_sight_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryLineOfSightResponse::CopyFrom(const QueryLineOfSightResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.QueryLineOfSightResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryLineOfSightResponse::InternalSwap(QueryLineOfSightResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryLineOfSightResponse, _impl_.has_line_of_sight_)
      + sizeof(QueryLineOfSightResponse::_impl_.has_line_of_sight_)
      - PROTOBUF_FIELD_OFFSET(QueryLineOfSightResponse, _impl_.blocking_info_)>(
          reinterpret_cast<char*>(&_impl_.blocking_info_),
          reinterpret_cast<char*>(&other->_impl_.blocking_info_));
}

::google::protobuf::Metadata QueryLineOfSightResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlockingInfo::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<BlockingInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BlockingInfo, _impl_._has_bits_);
};

void BlockingInfo::clear_blocking_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.blocking_position_ != nullptr) _impl_.blocking_position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
BlockingInfo::BlockingInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BlockingInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.BlockingInfo)
}
PROTOBUF_NDEBUG_INLINE BlockingInfo::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::BlockingInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        blocking_entity_id_(arena, from.blocking_entity_id_),
        blocking_type_(arena, from.blocking_type_) {}

BlockingInfo::BlockingInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const BlockingInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BlockingInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BlockingInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.blocking_position_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.blocking_position_)
                : nullptr;
  _impl_.blocking_percentage_ = from._impl_.blocking_percentage_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.BlockingInfo)
}
PROTOBUF_NDEBUG_INLINE BlockingInfo::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        blocking_entity_id_(arena),
        blocking_type_(arena) {}

inline void BlockingInfo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, blocking_position_),
           0,
           offsetof(Impl_, blocking_percentage_) -
               offsetof(Impl_, blocking_position_) +
               sizeof(Impl_::blocking_percentage_));
}
BlockingInfo::~BlockingInfo() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.BlockingInfo)
  SharedDtor(*this);
}
inline void BlockingInfo::SharedDtor(MessageLite& self) {
  BlockingInfo& this_ = static_cast<BlockingInfo&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.blocking_entity_id_.Destroy();
  this_._impl_.blocking_type_.Destroy();
  delete this_._impl_.blocking_position_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL BlockingInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) BlockingInfo(arena);
}
constexpr auto BlockingInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(BlockingInfo),
                                            alignof(BlockingInfo));
}
constexpr auto BlockingInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_BlockingInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &BlockingInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<BlockingInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &BlockingInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<BlockingInfo>(), &BlockingInfo::ByteSizeLong,
              &BlockingInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(BlockingInfo, _impl_._cached_size_),
          false,
      },
      &BlockingInfo::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull BlockingInfo_class_data_ =
        BlockingInfo::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
BlockingInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&BlockingInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(BlockingInfo_class_data_.tc_table);
  return BlockingInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 65, 2>
BlockingInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BlockingInfo, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    BlockingInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::BlockingInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double blocking_percentage = 4 [json_name = "blockingPercentage"];
    {::_pbi::TcParser::FastF64S1,
     {33, 3, 0, PROTOBUF_FIELD_OFFSET(BlockingInfo, _impl_.blocking_percentage_)}},
    // string blocking_entity_id = 1 [json_name = "blockingEntityId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(BlockingInfo, _impl_.blocking_entity_id_)}},
    // .api.v1alpha1.Position blocking_position = 2 [json_name = "blockingPosition"];
    {::_pbi::TcParser::FastMtS1,
     {18, 2, 0, PROTOBUF_FIELD_OFFSET(BlockingInfo, _impl_.blocking_position_)}},
    // string blocking_type = 3 [json_name = "blockingType"];
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(BlockingInfo, _impl_.blocking_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string blocking_entity_id = 1 [json_name = "blockingEntityId"];
    {PROTOBUF_FIELD_OFFSET(BlockingInfo, _impl_.blocking_entity_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.Position blocking_position = 2 [json_name = "blockingPosition"];
    {PROTOBUF_FIELD_OFFSET(BlockingInfo, _impl_.blocking_position_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string blocking_type = 3 [json_name = "blockingType"];
    {PROTOBUF_FIELD_OFFSET(BlockingInfo, _impl_.blocking_type_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double blocking_percentage = 4 [json_name = "blockingPercentage"];
    {PROTOBUF_FIELD_OFFSET(BlockingInfo, _impl_.blocking_percentage_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
  }},
  {{
    "\31\22\0\15\0\0\0\0"
    "api.v1alpha1.BlockingInfo"
    "blocking_entity_id"
    "blocking_type"
  }},
};
PROTOBUF_NOINLINE void BlockingInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.BlockingInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.blocking_entity_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.blocking_type_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.blocking_position_ != nullptr);
      _impl_.blocking_position_->Clear();
    }
  }
  _impl_.blocking_percentage_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL BlockingInfo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const BlockingInfo& this_ = static_cast<const BlockingInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL BlockingInfo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const BlockingInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.BlockingInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string blocking_entity_id = 1 [json_name = "blockingEntityId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_blocking_entity_id().empty()) {
      const ::std::string& _s = this_._internal_blocking_entity_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.BlockingInfo.blocking_entity_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.Position blocking_position = 2 [json_name = "blockingPosition"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.blocking_position_, this_._impl_.blocking_position_->GetCachedSize(), target,
        stream);
  }

  // string blocking_type = 3 [json_name = "blockingType"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    if (!this_._internal_blocking_type().empty()) {
      const ::std::string& _s = this_._internal_blocking_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.BlockingInfo.blocking_type");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // double blocking_percentage = 4 [json_name = "blockingPercentage"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_blocking_percentage()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          4, this_._internal_blocking_percentage(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.BlockingInfo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t BlockingInfo::ByteSizeLong(const MessageLite& base) {
  const BlockingInfo& this_ = static_cast<const BlockingInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t BlockingInfo::ByteSizeLong() const {
  const BlockingInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.BlockingInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string blocking_entity_id = 1 [json_name = "blockingEntityId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_blocking_entity_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_blocking_entity_id());
      }
    }
    // string blocking_type = 3 [json_name = "blockingType"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_blocking_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_blocking_type());
      }
    }
    // .api.v1alpha1.Position blocking_position = 2 [json_name = "blockingPosition"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.blocking_position_);
    }
    // double blocking_percentage = 4 [json_name = "blockingPercentage"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_blocking_percentage()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void BlockingInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlockingInfo*>(&to_msg);
  auto& from = static_cast<const BlockingInfo&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.BlockingInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_blocking_entity_id().empty()) {
        _this->_internal_set_blocking_entity_id(from._internal_blocking_entity_id());
      } else {
        if (_this->_impl_.blocking_entity_id_.IsDefault()) {
          _this->_internal_set_blocking_entity_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_blocking_type().empty()) {
        _this->_internal_set_blocking_type(from._internal_blocking_type());
      } else {
        if (_this->_impl_.blocking_type_.IsDefault()) {
          _this->_internal_set_blocking_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.blocking_position_ != nullptr);
      if (_this->_impl_.blocking_position_ == nullptr) {
        _this->_impl_.blocking_position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.blocking_position_);
      } else {
        _this->_impl_.blocking_position_->MergeFrom(*from._impl_.blocking_position_);
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_blocking_percentage()) != 0) {
        _this->_impl_.blocking_percentage_ = from._impl_.blocking_percentage_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlockingInfo::CopyFrom(const BlockingInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.BlockingInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlockingInfo::InternalSwap(BlockingInfo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.blocking_entity_id_, &other->_impl_.blocking_entity_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.blocking_type_, &other->_impl_.blocking_type_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BlockingInfo, _impl_.blocking_percentage_)
      + sizeof(BlockingInfo::_impl_.blocking_percentage_)
      - PROTOBUF_FIELD_OFFSET(BlockingInfo, _impl_.blocking_position_)>(
          reinterpret_cast<char*>(&_impl_.blocking_position_),
          reinterpret_cast<char*>(&other->_impl_.blocking_position_));
}

::google::protobuf::Metadata BlockingInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CoverInfo::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CoverInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CoverInfo, _impl_._has_bits_);
};

void CoverInfo::clear_cover_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cover_position_ != nullptr) _impl_.cover_position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
CoverInfo::CoverInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CoverInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.CoverInfo)
}
PROTOBUF_NDEBUG_INLINE CoverInfo::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::CoverInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        cover_source_id_(arena, from.cover_source_id_) {}

CoverInfo::CoverInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CoverInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CoverInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CoverInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.cover_position_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.cover_position_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cover_percentage_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, cover_percentage_),
           offsetof(Impl_, cover_type_) -
               offsetof(Impl_, cover_percentage_) +
               sizeof(Impl_::cover_type_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.CoverInfo)
}
PROTOBUF_NDEBUG_INLINE CoverInfo::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        cover_source_id_(arena) {}

inline void CoverInfo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cover_position_),
           0,
           offsetof(Impl_, cover_type_) -
               offsetof(Impl_, cover_position_) +
               sizeof(Impl_::cover_type_));
}
CoverInfo::~CoverInfo() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.CoverInfo)
  SharedDtor(*this);
}
inline void CoverInfo::SharedDtor(MessageLite& self) {
  CoverInfo& this_ = static_cast<CoverInfo&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.cover_source_id_.Destroy();
  delete this_._impl_.cover_position_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CoverInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CoverInfo(arena);
}
constexpr auto CoverInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CoverInfo),
                                            alignof(CoverInfo));
}
constexpr auto CoverInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CoverInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CoverInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CoverInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CoverInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CoverInfo>(), &CoverInfo::ByteSizeLong,
              &CoverInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CoverInfo, _impl_._cached_size_),
          false,
      },
      &CoverInfo::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CoverInfo_class_data_ =
        CoverInfo::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CoverInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CoverInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CoverInfo_class_data_.tc_table);
  return CoverInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 46, 2>
CoverInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CoverInfo, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CoverInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::CoverInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .api.v1alpha1.Position cover_position = 4 [json_name = "coverPosition"];
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(CoverInfo, _impl_.cover_position_)}},
    // .api.v1alpha1.CoverType cover_type = 1 [json_name = "coverType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CoverInfo, _impl_.cover_type_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(CoverInfo, _impl_.cover_type_)}},
    // double cover_percentage = 2 [json_name = "coverPercentage"];
    {::_pbi::TcParser::FastF64S1,
     {17, 2, 0, PROTOBUF_FIELD_OFFSET(CoverInfo, _impl_.cover_percentage_)}},
    // string cover_source_id = 3 [json_name = "coverSourceId"];
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CoverInfo, _impl_.cover_source_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .api.v1alpha1.CoverType cover_type = 1 [json_name = "coverType"];
    {PROTOBUF_FIELD_OFFSET(CoverInfo, _impl_.cover_type_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // double cover_percentage = 2 [json_name = "coverPercentage"];
    {PROTOBUF_FIELD_OFFSET(CoverInfo, _impl_.cover_percentage_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // string cover_source_id = 3 [json_name = "coverSourceId"];
    {PROTOBUF_FIELD_OFFSET(CoverInfo, _impl_.cover_source_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.Position cover_position = 4 [json_name = "coverPosition"];
    {PROTOBUF_FIELD_OFFSET(CoverInfo, _impl_.cover_position_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
  }},
  {{
    "\26\0\0\17\0\0\0\0"
    "api.v1alpha1.CoverInfo"
    "cover_source_id"
  }},
};
PROTOBUF_NOINLINE void CoverInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.CoverInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.cover_source_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.cover_position_ != nullptr);
      _impl_.cover_position_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000000cU) != 0) {
    ::memset(&_impl_.cover_percentage_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.cover_type_) -
        reinterpret_cast<char*>(&_impl_.cover_percentage_)) + sizeof(_impl_.cover_type_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CoverInfo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CoverInfo& this_ = static_cast<const CoverInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CoverInfo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CoverInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.CoverInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .api.v1alpha1.CoverType cover_type = 1 [json_name = "coverType"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_cover_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_cover_type(), target);
    }
  }

  // double cover_percentage = 2 [json_name = "coverPercentage"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_cover_percentage()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_cover_percentage(), target);
    }
  }

  // string cover_source_id = 3 [json_name = "coverSourceId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_cover_source_id().empty()) {
      const ::std::string& _s = this_._internal_cover_source_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.CoverInfo.cover_source_id");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.Position cover_position = 4 [json_name = "coverPosition"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.cover_position_, this_._impl_.cover_position_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.CoverInfo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CoverInfo::ByteSizeLong(const MessageLite& base) {
  const CoverInfo& this_ = static_cast<const CoverInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CoverInfo::ByteSizeLong() const {
  const CoverInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.CoverInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string cover_source_id = 3 [json_name = "coverSourceId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_cover_source_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_cover_source_id());
      }
    }
    // .api.v1alpha1.Position cover_position = 4 [json_name = "coverPosition"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.cover_position_);
    }
    // double cover_percentage = 2 [json_name = "coverPercentage"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_cover_percentage()) != 0) {
        total_size += 9;
      }
    }
    // .api.v1alpha1.CoverType cover_type = 1 [json_name = "coverType"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_cover_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_cover_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CoverInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CoverInfo*>(&to_msg);
  auto& from = static_cast<const CoverInfo&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.CoverInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_cover_source_id().empty()) {
        _this->_internal_set_cover_source_id(from._internal_cover_source_id());
      } else {
        if (_this->_impl_.cover_source_id_.IsDefault()) {
          _this->_internal_set_cover_source_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.cover_position_ != nullptr);
      if (_this->_impl_.cover_position_ == nullptr) {
        _this->_impl_.cover_position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.cover_position_);
      } else {
        _this->_impl_.cover_position_->MergeFrom(*from._impl_.cover_position_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_cover_percentage()) != 0) {
        _this->_impl_.cover_percentage_ = from._impl_.cover_percentage_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_cover_type() != 0) {
        _this->_impl_.cover_type_ = from._impl_.cover_type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CoverInfo::CopyFrom(const CoverInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.CoverInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CoverInfo::InternalSwap(CoverInfo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cover_source_id_, &other->_impl_.cover_source_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CoverInfo, _impl_.cover_type_)
      + sizeof(CoverInfo::_impl_.cover_type_)
      - PROTOBUF_FIELD_OFFSET(CoverInfo, _impl_.cover_position_)>(
          reinterpret_cast<char*>(&_impl_.cover_position_),
          reinterpret_cast<char*>(&other->_impl_.cover_position_));
}

::google::protobuf::Metadata CoverInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ValidateMovementRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ValidateMovementRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ValidateMovementRequest, _impl_._has_bits_);
};

void ValidateMovementRequest::clear_from_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.from_position_ != nullptr) _impl_.from_position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
void ValidateMovementRequest::clear_to_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.to_position_ != nullptr) _impl_.to_position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008U;
}
ValidateMovementRequest::ValidateMovementRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ValidateMovementRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.ValidateMovementRequest)
}
PROTOBUF_NDEBUG_INLINE ValidateMovementRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::ValidateMovementRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        room_id_(arena, from.room_id_),
        entity_id_(arena, from.entity_id_) {}

ValidateMovementRequest::ValidateMovementRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ValidateMovementRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ValidateMovementRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ValidateMovementRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.from_position_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.from_position_)
                : nullptr;
  _impl_.to_position_ = ((cached_has_bits & 0x00000008U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.to_position_)
                : nullptr;
  _impl_.options_ = ((cached_has_bits & 0x00000010U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.ValidateMovementRequest)
}
PROTOBUF_NDEBUG_INLINE ValidateMovementRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        room_id_(arena),
        entity_id_(arena) {}

inline void ValidateMovementRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, from_position_),
           0,
           offsetof(Impl_, options_) -
               offsetof(Impl_, from_position_) +
               sizeof(Impl_::options_));
}
ValidateMovementRequest::~ValidateMovementRequest() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.ValidateMovementRequest)
  SharedDtor(*this);
}
inline void ValidateMovementRequest::SharedDtor(MessageLite& self) {
  ValidateMovementRequest& this_ = static_cast<ValidateMovementRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.room_id_.Destroy();
  this_._impl_.entity_id_.Destroy();
  delete this_._impl_.from_position_;
  delete this_._impl_.to_position_;
  delete this_._impl_.options_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ValidateMovementRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ValidateMovementRequest(arena);
}
constexpr auto ValidateMovementRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ValidateMovementRequest),
                                            alignof(ValidateMovementRequest));
}
constexpr auto ValidateMovementRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ValidateMovementRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ValidateMovementRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ValidateMovementRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ValidateMovementRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ValidateMovementRequest>(), &ValidateMovementRequest::ByteSizeLong,
              &ValidateMovementRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ValidateMovementRequest, _impl_._cached_size_),
          false,
      },
      &ValidateMovementRequest::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ValidateMovementRequest_class_data_ =
        ValidateMovementRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ValidateMovementRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ValidateMovementRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ValidateMovementRequest_class_data_.tc_table);
  return ValidateMovementRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 61, 2>
ValidateMovementRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ValidateMovementRequest, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ValidateMovementRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::ValidateMovementRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string room_id = 1 [json_name = "roomId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ValidateMovementRequest, _impl_.room_id_)}},
    // string entity_id = 2 [json_name = "entityId"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(ValidateMovementRequest, _impl_.entity_id_)}},
    // .api.v1alpha1.Position from_position = 3 [json_name = "fromPosition"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(ValidateMovementRequest, _impl_.from_position_)}},
    // .api.v1alpha1.Position to_position = 4 [json_name = "toPosition"];
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 1, PROTOBUF_FIELD_OFFSET(ValidateMovementRequest, _impl_.to_position_)}},
    // .api.v1alpha1.MovementOptions options = 5 [json_name = "options"];
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 2, PROTOBUF_FIELD_OFFSET(ValidateMovementRequest, _impl_.options_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string room_id = 1 [json_name = "roomId"];
    {PROTOBUF_FIELD_OFFSET(ValidateMovementRequest, _impl_.room_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string entity_id = 2 [json_name = "entityId"];
    {PROTOBUF_FIELD_OFFSET(ValidateMovementRequest, _impl_.entity_id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.Position from_position = 3 [json_name = "fromPosition"];
    {PROTOBUF_FIELD_OFFSET(ValidateMovementRequest, _impl_.from_position_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.Position to_position = 4 [json_name = "toPosition"];
    {PROTOBUF_FIELD_OFFSET(ValidateMovementRequest, _impl_.to_position_), _Internal::kHasBitsOffset + 3, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.MovementOptions options = 5 [json_name = "options"];
    {PROTOBUF_FIELD_OFFSET(ValidateMovementRequest, _impl_.options_), _Internal::kHasBitsOffset + 4, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::MovementOptions>()},
  }},
  {{
    "\44\7\11\0\0\0\0\0"
    "api.v1alpha1.ValidateMovementRequest"
    "room_id"
    "entity_id"
  }},
};
PROTOBUF_NOINLINE void ValidateMovementRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.ValidateMovementRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.room_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.entity_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.from_position_ != nullptr);
      _impl_.from_position_->Clear();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(_impl_.to_position_ != nullptr);
      _impl_.to_position_->Clear();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(_impl_.options_ != nullptr);
      _impl_.options_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ValidateMovementRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ValidateMovementRequest& this_ = static_cast<const ValidateMovementRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ValidateMovementRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ValidateMovementRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.ValidateMovementRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string room_id = 1 [json_name = "roomId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_room_id().empty()) {
      const ::std::string& _s = this_._internal_room_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.ValidateMovementRequest.room_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string entity_id = 2 [json_name = "entityId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_entity_id().empty()) {
      const ::std::string& _s = this_._internal_entity_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.ValidateMovementRequest.entity_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.Position from_position = 3 [json_name = "fromPosition"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.from_position_, this_._impl_.from_position_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.Position to_position = 4 [json_name = "toPosition"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.to_position_, this_._impl_.to_position_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.MovementOptions options = 5 [json_name = "options"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.options_, this_._impl_.options_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.ValidateMovementRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ValidateMovementRequest::ByteSizeLong(const MessageLite& base) {
  const ValidateMovementRequest& this_ = static_cast<const ValidateMovementRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ValidateMovementRequest::ByteSizeLong() const {
  const ValidateMovementRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.ValidateMovementRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // string room_id = 1 [json_name = "roomId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_room_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_room_id());
      }
    }
    // string entity_id = 2 [json_name = "entityId"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_entity_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_entity_id());
      }
    }
    // .api.v1alpha1.Position from_position = 3 [json_name = "fromPosition"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.from_position_);
    }
    // .api.v1alpha1.Position to_position = 4 [json_name = "toPosition"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.to_position_);
    }
    // .api.v1alpha1.MovementOptions options = 5 [json_name = "options"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.options_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ValidateMovementRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ValidateMovementRequest*>(&to_msg);
  auto& from = static_cast<const ValidateMovementRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.ValidateMovementRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_room_id().empty()) {
        _this->_internal_set_room_id(from._internal_room_id());
      } else {
        if (_this->_impl_.room_id_.IsDefault()) {
          _this->_internal_set_room_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_entity_id().empty()) {
        _this->_internal_set_entity_id(from._internal_entity_id());
      } else {
        if (_this->_impl_.entity_id_.IsDefault()) {
          _this->_internal_set_entity_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.from_position_ != nullptr);
      if (_this->_impl_.from_position_ == nullptr) {
        _this->_impl_.from_position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.from_position_);
      } else {
        _this->_impl_.from_position_->MergeFrom(*from._impl_.from_position_);
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(from._impl_.to_position_ != nullptr);
      if (_this->_impl_.to_position_ == nullptr) {
        _this->_impl_.to_position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.to_position_);
      } else {
        _this->_impl_.to_position_->MergeFrom(*from._impl_.to_position_);
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(from._impl_.options_ != nullptr);
      if (_this->_impl_.options_ == nullptr) {
        _this->_impl_.options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_);
      } else {
        _this->_impl_.options_->MergeFrom(*from._impl_.options_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValidateMovementRequest::CopyFrom(const ValidateMovementRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.ValidateMovementRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ValidateMovementRequest::InternalSwap(ValidateMovementRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.room_id_, &other->_impl_.room_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entity_id_, &other->_impl_.entity_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ValidateMovementRequest, _impl_.options_)
      + sizeof(ValidateMovementRequest::_impl_.options_)
      - PROTOBUF_FIELD_OFFSET(ValidateMovementRequest, _impl_.from_position_)>(
          reinterpret_cast<char*>(&_impl_.from_position_),
          reinterpret_cast<char*>(&other->_impl_.from_position_));
}

::google::protobuf::Metadata ValidateMovementRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MovementOptions::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MovementOptions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MovementOptions, _impl_._has_bits_);
};

MovementOptions::MovementOptions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MovementOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.MovementOptions)
}
MovementOptions::MovementOptions(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MovementOptions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MovementOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE MovementOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void MovementOptions::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, movement_speed_),
           0,
           offsetof(Impl_, max_movement_cost_) -
               offsetof(Impl_, movement_speed_) +
               sizeof(Impl_::max_movement_cost_));
}
MovementOptions::~MovementOptions() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.MovementOptions)
  SharedDtor(*this);
}
inline void MovementOptions::SharedDtor(MessageLite& self) {
  MovementOptions& this_ = static_cast<MovementOptions&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MovementOptions::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MovementOptions(arena);
}
constexpr auto MovementOptions::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MovementOptions),
                                            alignof(MovementOptions));
}
constexpr auto MovementOptions::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MovementOptions_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MovementOptions::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MovementOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MovementOptions::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MovementOptions>(), &MovementOptions::ByteSizeLong,
              &MovementOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MovementOptions, _impl_._cached_size_),
          false,
      },
      &MovementOptions::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MovementOptions_class_data_ =
        MovementOptions::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MovementOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MovementOptions_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MovementOptions_class_data_.tc_table);
  return MovementOptions_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2>
MovementOptions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MovementOptions, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    MovementOptions_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::MovementOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .api.v1alpha1.MovementType movement_type = 1 [json_name = "movementType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MovementOptions, _impl_.movement_type_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(MovementOptions, _impl_.movement_type_)}},
    // double movement_speed = 2 [json_name = "movementSpeed"];
    {::_pbi::TcParser::FastF64S1,
     {17, 0, 0, PROTOBUF_FIELD_OFFSET(MovementOptions, _impl_.movement_speed_)}},
    // bool allow_difficult_terrain = 3 [json_name = "allowDifficultTerrain"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MovementOptions, _impl_.allow_difficult_terrain_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(MovementOptions, _impl_.allow_difficult_terrain_)}},
    // bool allow_entity_overlap = 4 [json_name = "allowEntityOverlap"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MovementOptions, _impl_.allow_entity_overlap_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(MovementOptions, _impl_.allow_entity_overlap_)}},
    // double max_movement_cost = 5 [json_name = "maxMovementCost"];
    {::_pbi::TcParser::FastF64S1,
     {41, 4, 0, PROTOBUF_FIELD_OFFSET(MovementOptions, _impl_.max_movement_cost_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .api.v1alpha1.MovementType movement_type = 1 [json_name = "movementType"];
    {PROTOBUF_FIELD_OFFSET(MovementOptions, _impl_.movement_type_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // double movement_speed = 2 [json_name = "movementSpeed"];
    {PROTOBUF_FIELD_OFFSET(MovementOptions, _impl_.movement_speed_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // bool allow_difficult_terrain = 3 [json_name = "allowDifficultTerrain"];
    {PROTOBUF_FIELD_OFFSET(MovementOptions, _impl_.allow_difficult_terrain_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool allow_entity_overlap = 4 [json_name = "allowEntityOverlap"];
    {PROTOBUF_FIELD_OFFSET(MovementOptions, _impl_.allow_entity_overlap_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // double max_movement_cost = 5 [json_name = "maxMovementCost"];
    {PROTOBUF_FIELD_OFFSET(MovementOptions, _impl_.max_movement_cost_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void MovementOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.MovementOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    ::memset(&_impl_.movement_speed_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.max_movement_cost_) -
        reinterpret_cast<char*>(&_impl_.movement_speed_)) + sizeof(_impl_.max_movement_cost_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MovementOptions::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MovementOptions& this_ = static_cast<const MovementOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MovementOptions::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MovementOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.MovementOptions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .api.v1alpha1.MovementType movement_type = 1 [json_name = "movementType"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_movement_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_movement_type(), target);
    }
  }

  // double movement_speed = 2 [json_name = "movementSpeed"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_movement_speed()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_movement_speed(), target);
    }
  }

  // bool allow_difficult_terrain = 3 [json_name = "allowDifficultTerrain"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_allow_difficult_terrain() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_allow_difficult_terrain(), target);
    }
  }

  // bool allow_entity_overlap = 4 [json_name = "allowEntityOverlap"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_allow_entity_overlap() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_allow_entity_overlap(), target);
    }
  }

  // double max_movement_cost = 5 [json_name = "maxMovementCost"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_max_movement_cost()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          5, this_._internal_max_movement_cost(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.MovementOptions)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MovementOptions::ByteSizeLong(const MessageLite& base) {
  const MovementOptions& this_ = static_cast<const MovementOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MovementOptions::ByteSizeLong() const {
  const MovementOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.MovementOptions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // double movement_speed = 2 [json_name = "movementSpeed"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_movement_speed()) != 0) {
        total_size += 9;
      }
    }
    // .api.v1alpha1.MovementType movement_type = 1 [json_name = "movementType"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_movement_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_movement_type());
      }
    }
    // bool allow_difficult_terrain = 3 [json_name = "allowDifficultTerrain"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_allow_difficult_terrain() != 0) {
        total_size += 2;
      }
    }
    // bool allow_entity_overlap = 4 [json_name = "allowEntityOverlap"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_allow_entity_overlap() != 0) {
        total_size += 2;
      }
    }
    // double max_movement_cost = 5 [json_name = "maxMovementCost"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_max_movement_cost()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MovementOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MovementOptions*>(&to_msg);
  auto& from = static_cast<const MovementOptions&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.MovementOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_movement_speed()) != 0) {
        _this->_impl_.movement_speed_ = from._impl_.movement_speed_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_movement_type() != 0) {
        _this->_impl_.movement_type_ = from._impl_.movement_type_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_allow_difficult_terrain() != 0) {
        _this->_impl_.allow_difficult_terrain_ = from._impl_.allow_difficult_terrain_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_allow_entity_overlap() != 0) {
        _this->_impl_.allow_entity_overlap_ = from._impl_.allow_entity_overlap_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_max_movement_cost()) != 0) {
        _this->_impl_.max_movement_cost_ = from._impl_.max_movement_cost_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MovementOptions::CopyFrom(const MovementOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.MovementOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MovementOptions::InternalSwap(MovementOptions* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MovementOptions, _impl_.max_movement_cost_)
      + sizeof(MovementOptions::_impl_.max_movement_cost_)
      - PROTOBUF_FIELD_OFFSET(MovementOptions, _impl_.movement_speed_)>(
          reinterpret_cast<char*>(&_impl_.movement_speed_),
          reinterpret_cast<char*>(&other->_impl_.movement_speed_));
}

::google::protobuf::Metadata MovementOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ValidateMovementResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ValidateMovementResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ValidateMovementResponse, _impl_._has_bits_);
};

void ValidateMovementResponse::clear_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.Clear();
}
void ValidateMovementResponse::clear_errors() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errors_.Clear();
}
ValidateMovementResponse::ValidateMovementResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ValidateMovementResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.ValidateMovementResponse)
}
PROTOBUF_NDEBUG_INLINE ValidateMovementResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::ValidateMovementResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        path_{visibility, arena, from.path_},
        terrain_effects_{visibility, arena, from.terrain_effects_},
        errors_{visibility, arena, from.errors_} {}

ValidateMovementResponse::ValidateMovementResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ValidateMovementResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ValidateMovementResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ValidateMovementResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.stats_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.stats_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, movement_cost_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, movement_cost_),
           offsetof(Impl_, is_valid_) -
               offsetof(Impl_, movement_cost_) +
               sizeof(Impl_::is_valid_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.ValidateMovementResponse)
}
PROTOBUF_NDEBUG_INLINE ValidateMovementResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        path_{visibility, arena},
        terrain_effects_{visibility, arena},
        errors_{visibility, arena} {}

inline void ValidateMovementResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, stats_),
           0,
           offsetof(Impl_, is_valid_) -
               offsetof(Impl_, stats_) +
               sizeof(Impl_::is_valid_));
}
ValidateMovementResponse::~ValidateMovementResponse() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.ValidateMovementResponse)
  SharedDtor(*this);
}
inline void ValidateMovementResponse::SharedDtor(MessageLite& self) {
  ValidateMovementResponse& this_ = static_cast<ValidateMovementResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.stats_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ValidateMovementResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ValidateMovementResponse(arena);
}
constexpr auto ValidateMovementResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ValidateMovementResponse, _impl_.path_) +
          decltype(ValidateMovementResponse::_impl_.path_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ValidateMovementResponse, _impl_.terrain_effects_) +
          decltype(ValidateMovementResponse::_impl_.terrain_effects_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ValidateMovementResponse, _impl_.errors_) +
          decltype(ValidateMovementResponse::_impl_.errors_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ValidateMovementResponse), alignof(ValidateMovementResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ValidateMovementResponse::PlacementNew_,
                                 sizeof(ValidateMovementResponse),
                                 alignof(ValidateMovementResponse));
  }
}
constexpr auto ValidateMovementResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ValidateMovementResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ValidateMovementResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ValidateMovementResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ValidateMovementResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ValidateMovementResponse>(), &ValidateMovementResponse::ByteSizeLong,
              &ValidateMovementResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ValidateMovementResponse, _impl_._cached_size_),
          false,
      },
      &ValidateMovementResponse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ValidateMovementResponse_class_data_ =
        ValidateMovementResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ValidateMovementResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ValidateMovementResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ValidateMovementResponse_class_data_.tc_table);
  return ValidateMovementResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 4, 0, 2>
ValidateMovementResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ValidateMovementResponse, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ValidateMovementResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::ValidateMovementResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool is_valid = 1 [json_name = "isValid"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ValidateMovementResponse, _impl_.is_valid_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(ValidateMovementResponse, _impl_.is_valid_)}},
    // double movement_cost = 2 [json_name = "movementCost"];
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(ValidateMovementResponse, _impl_.movement_cost_)}},
    // repeated .api.v1alpha1.Position path = 3 [json_name = "path"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ValidateMovementResponse, _impl_.path_)}},
    // repeated .api.v1alpha1.TerrainEffect terrain_effects = 4 [json_name = "terrainEffects"];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 1, PROTOBUF_FIELD_OFFSET(ValidateMovementResponse, _impl_.terrain_effects_)}},
    // repeated .api.v1alpha1.RoomError errors = 5 [json_name = "errors"];
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 2, PROTOBUF_FIELD_OFFSET(ValidateMovementResponse, _impl_.errors_)}},
    // .api.v1alpha1.SpatialQueryStats stats = 6 [json_name = "stats"];
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 3, PROTOBUF_FIELD_OFFSET(ValidateMovementResponse, _impl_.stats_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bool is_valid = 1 [json_name = "isValid"];
    {PROTOBUF_FIELD_OFFSET(ValidateMovementResponse, _impl_.is_valid_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // double movement_cost = 2 [json_name = "movementCost"];
    {PROTOBUF_FIELD_OFFSET(ValidateMovementResponse, _impl_.movement_cost_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // repeated .api.v1alpha1.Position path = 3 [json_name = "path"];
    {PROTOBUF_FIELD_OFFSET(ValidateMovementResponse, _impl_.path_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .api.v1alpha1.TerrainEffect terrain_effects = 4 [json_name = "terrainEffects"];
    {PROTOBUF_FIELD_OFFSET(ValidateMovementResponse, _impl_.terrain_effects_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .api.v1alpha1.RoomError errors = 5 [json_name = "errors"];
    {PROTOBUF_FIELD_OFFSET(ValidateMovementResponse, _impl_.errors_), -1, 2, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.SpatialQueryStats stats = 6 [json_name = "stats"];
    {PROTOBUF_FIELD_OFFSET(ValidateMovementResponse, _impl_.stats_), _Internal::kHasBitsOffset + 0, 3, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::TerrainEffect>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RoomError>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::SpatialQueryStats>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ValidateMovementResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.ValidateMovementResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.Clear();
  _impl_.terrain_effects_.Clear();
  _impl_.errors_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.stats_ != nullptr);
    _impl_.stats_->Clear();
  }
  if ((cached_has_bits & 0x00000006U) != 0) {
    ::memset(&_impl_.movement_cost_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_valid_) -
        reinterpret_cast<char*>(&_impl_.movement_cost_)) + sizeof(_impl_.is_valid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ValidateMovementResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ValidateMovementResponse& this_ = static_cast<const ValidateMovementResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ValidateMovementResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ValidateMovementResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.ValidateMovementResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool is_valid = 1 [json_name = "isValid"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_is_valid() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_is_valid(), target);
    }
  }

  // double movement_cost = 2 [json_name = "movementCost"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_movement_cost()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_movement_cost(), target);
    }
  }

  // repeated .api.v1alpha1.Position path = 3 [json_name = "path"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_path_size());
       i < n; i++) {
    const auto& repfield = this_._internal_path().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .api.v1alpha1.TerrainEffect terrain_effects = 4 [json_name = "terrainEffects"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_terrain_effects_size());
       i < n; i++) {
    const auto& repfield = this_._internal_terrain_effects().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .api.v1alpha1.RoomError errors = 5 [json_name = "errors"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_errors_size());
       i < n; i++) {
    const auto& repfield = this_._internal_errors().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.SpatialQueryStats stats = 6 [json_name = "stats"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.stats_, this_._impl_.stats_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.ValidateMovementResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ValidateMovementResponse::ByteSizeLong(const MessageLite& base) {
  const ValidateMovementResponse& this_ = static_cast<const ValidateMovementResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ValidateMovementResponse::ByteSizeLong() const {
  const ValidateMovementResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.ValidateMovementResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.Position path = 3 [json_name = "path"];
    {
      total_size += 1UL * this_._internal_path_size();
      for (const auto& msg : this_._internal_path()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .api.v1alpha1.TerrainEffect terrain_effects = 4 [json_name = "terrainEffects"];
    {
      total_size += 1UL * this_._internal_terrain_effects_size();
      for (const auto& msg : this_._internal_terrain_effects()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .api.v1alpha1.RoomError errors = 5 [json_name = "errors"];
    {
      total_size += 1UL * this_._internal_errors_size();
      for (const auto& msg : this_._internal_errors()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // .api.v1alpha1.SpatialQueryStats stats = 6 [json_name = "stats"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.stats_);
    }
    // double movement_cost = 2 [json_name = "movementCost"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_movement_cost()) != 0) {
        total_size += 9;
      }
    }
    // bool is_valid = 1 [json_name = "isValid"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_is_valid() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ValidateMovementResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ValidateMovementResponse*>(&to_msg);
  auto& from = static_cast<const ValidateMovementResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.ValidateMovementResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_path()->MergeFrom(
      from._internal_path());
  _this->_internal_mutable_terrain_effects()->MergeFrom(
      from._internal_terrain_effects());
  _this->_internal_mutable_errors()->MergeFrom(
      from._internal_errors());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.stats_ != nullptr);
      if (_this->_impl_.stats_ == nullptr) {
        _this->_impl_.stats_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.stats_);
      } else {
        _this->_impl_.stats_->MergeFrom(*from._impl_.stats_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_movement_cost()) != 0) {
        _this->_impl_.movement_cost_ = from._impl_.movement_cost_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_is_valid() != 0) {
        _this->_impl_.is_valid_ = from._impl_.is_valid_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValidateMovementResponse::CopyFrom(const ValidateMovementResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.ValidateMovementResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ValidateMovementResponse::InternalSwap(ValidateMovementResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.path_.InternalSwap(&other->_impl_.path_);
  _impl_.terrain_effects_.InternalSwap(&other->_impl_.terrain_effects_);
  _impl_.errors_.InternalSwap(&other->_impl_.errors_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ValidateMovementResponse, _impl_.is_valid_)
      + sizeof(ValidateMovementResponse::_impl_.is_valid_)
      - PROTOBUF_FIELD_OFFSET(ValidateMovementResponse, _impl_.stats_)>(
          reinterpret_cast<char*>(&_impl_.stats_),
          reinterpret_cast<char*>(&other->_impl_.stats_));
}

::google::protobuf::Metadata ValidateMovementResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TerrainEffect::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TerrainEffect>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TerrainEffect, _impl_._has_bits_);
};

void TerrainEffect::clear_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ != nullptr) _impl_.position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008U;
}
TerrainEffect::TerrainEffect(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TerrainEffect_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.TerrainEffect)
}
PROTOBUF_NDEBUG_INLINE TerrainEffect::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::TerrainEffect& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        effect_type_(arena, from.effect_type_),
        description_(arena, from.description_),
        source_id_(arena, from.source_id_) {}

TerrainEffect::TerrainEffect(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TerrainEffect& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TerrainEffect_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TerrainEffect* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ = ((cached_has_bits & 0x00000008U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.position_)
                : nullptr;
  _impl_.cost_multiplier_ = from._impl_.cost_multiplier_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.TerrainEffect)
}
PROTOBUF_NDEBUG_INLINE TerrainEffect::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        effect_type_(arena),
        description_(arena),
        source_id_(arena) {}

inline void TerrainEffect::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_),
           0,
           offsetof(Impl_, cost_multiplier_) -
               offsetof(Impl_, position_) +
               sizeof(Impl_::cost_multiplier_));
}
TerrainEffect::~TerrainEffect() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.TerrainEffect)
  SharedDtor(*this);
}
inline void TerrainEffect::SharedDtor(MessageLite& self) {
  TerrainEffect& this_ = static_cast<TerrainEffect&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.effect_type_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.source_id_.Destroy();
  delete this_._impl_.position_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TerrainEffect::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TerrainEffect(arena);
}
constexpr auto TerrainEffect::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TerrainEffect),
                                            alignof(TerrainEffect));
}
constexpr auto TerrainEffect::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TerrainEffect_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TerrainEffect::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TerrainEffect>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TerrainEffect::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TerrainEffect>(), &TerrainEffect::ByteSizeLong,
              &TerrainEffect::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TerrainEffect, _impl_._cached_size_),
          false,
      },
      &TerrainEffect::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TerrainEffect_class_data_ =
        TerrainEffect::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TerrainEffect::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TerrainEffect_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TerrainEffect_class_data_.tc_table);
  return TerrainEffect_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 66, 2>
TerrainEffect::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TerrainEffect, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TerrainEffect_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::TerrainEffect>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .api.v1alpha1.Position position = 1 [json_name = "position"];
    {::_pbi::TcParser::FastMtS1,
     {10, 3, 0, PROTOBUF_FIELD_OFFSET(TerrainEffect, _impl_.position_)}},
    // string effect_type = 2 [json_name = "effectType"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(TerrainEffect, _impl_.effect_type_)}},
    // double cost_multiplier = 3 [json_name = "costMultiplier"];
    {::_pbi::TcParser::FastF64S1,
     {25, 4, 0, PROTOBUF_FIELD_OFFSET(TerrainEffect, _impl_.cost_multiplier_)}},
    // string description = 4 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(TerrainEffect, _impl_.description_)}},
    // string source_id = 5 [json_name = "sourceId"];
    {::_pbi::TcParser::FastUS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(TerrainEffect, _impl_.source_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .api.v1alpha1.Position position = 1 [json_name = "position"];
    {PROTOBUF_FIELD_OFFSET(TerrainEffect, _impl_.position_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string effect_type = 2 [json_name = "effectType"];
    {PROTOBUF_FIELD_OFFSET(TerrainEffect, _impl_.effect_type_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double cost_multiplier = 3 [json_name = "costMultiplier"];
    {PROTOBUF_FIELD_OFFSET(TerrainEffect, _impl_.cost_multiplier_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // string description = 4 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(TerrainEffect, _impl_.description_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string source_id = 5 [json_name = "sourceId"];
    {PROTOBUF_FIELD_OFFSET(TerrainEffect, _impl_.source_id_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
  }},
  {{
    "\32\0\13\0\13\11\0\0"
    "api.v1alpha1.TerrainEffect"
    "effect_type"
    "description"
    "source_id"
  }},
};
PROTOBUF_NOINLINE void TerrainEffect::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.TerrainEffect)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.effect_type_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.source_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
  }
  _impl_.cost_multiplier_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TerrainEffect::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TerrainEffect& this_ = static_cast<const TerrainEffect&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TerrainEffect::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TerrainEffect& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.TerrainEffect)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.Position position = 1 [json_name = "position"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.position_, this_._impl_.position_->GetCachedSize(), target,
        stream);
  }

  // string effect_type = 2 [json_name = "effectType"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!this_._internal_effect_type().empty()) {
      const ::std::string& _s = this_._internal_effect_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TerrainEffect.effect_type");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // double cost_multiplier = 3 [json_name = "costMultiplier"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_cost_multiplier()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_cost_multiplier(), target);
    }
  }

  // string description = 4 [json_name = "description"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TerrainEffect.description");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // string source_id = 5 [json_name = "sourceId"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    if (!this_._internal_source_id().empty()) {
      const ::std::string& _s = this_._internal_source_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TerrainEffect.source_id");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.TerrainEffect)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TerrainEffect::ByteSizeLong(const MessageLite& base) {
  const TerrainEffect& this_ = static_cast<const TerrainEffect&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TerrainEffect::ByteSizeLong() const {
  const TerrainEffect& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.TerrainEffect)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // string effect_type = 2 [json_name = "effectType"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_effect_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_effect_type());
      }
    }
    // string description = 4 [json_name = "description"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // string source_id = 5 [json_name = "sourceId"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_source_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_source_id());
      }
    }
    // .api.v1alpha1.Position position = 1 [json_name = "position"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.position_);
    }
    // double cost_multiplier = 3 [json_name = "costMultiplier"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_cost_multiplier()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TerrainEffect::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TerrainEffect*>(&to_msg);
  auto& from = static_cast<const TerrainEffect&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.TerrainEffect)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_effect_type().empty()) {
        _this->_internal_set_effect_type(from._internal_effect_type());
      } else {
        if (_this->_impl_.effect_type_.IsDefault()) {
          _this->_internal_set_effect_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_source_id().empty()) {
        _this->_internal_set_source_id(from._internal_source_id());
      } else {
        if (_this->_impl_.source_id_.IsDefault()) {
          _this->_internal_set_source_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(from._impl_.position_ != nullptr);
      if (_this->_impl_.position_ == nullptr) {
        _this->_impl_.position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.position_);
      } else {
        _this->_impl_.position_->MergeFrom(*from._impl_.position_);
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_cost_multiplier()) != 0) {
        _this->_impl_.cost_multiplier_ = from._impl_.cost_multiplier_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TerrainEffect::CopyFrom(const TerrainEffect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.TerrainEffect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TerrainEffect::InternalSwap(TerrainEffect* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.effect_type_, &other->_impl_.effect_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_id_, &other->_impl_.source_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TerrainEffect, _impl_.cost_multiplier_)
      + sizeof(TerrainEffect::_impl_.cost_multiplier_)
      - PROTOBUF_FIELD_OFFSET(TerrainEffect, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::google::protobuf::Metadata TerrainEffect::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ValidateEntityPlacementRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ValidateEntityPlacementRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementRequest, _impl_._has_bits_);
};

void ValidateEntityPlacementRequest::clear_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ != nullptr) _impl_.position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
ValidateEntityPlacementRequest::ValidateEntityPlacementRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ValidateEntityPlacementRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.ValidateEntityPlacementRequest)
}
PROTOBUF_NDEBUG_INLINE ValidateEntityPlacementRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::ValidateEntityPlacementRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        room_id_(arena, from.room_id_),
        entity_id_(arena, from.entity_id_) {}

ValidateEntityPlacementRequest::ValidateEntityPlacementRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ValidateEntityPlacementRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ValidateEntityPlacementRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ValidateEntityPlacementRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.position_)
                : nullptr;
  _impl_.options_ = ((cached_has_bits & 0x00000008U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_)
                : nullptr;
  _impl_.entity_size_ = from._impl_.entity_size_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.ValidateEntityPlacementRequest)
}
PROTOBUF_NDEBUG_INLINE ValidateEntityPlacementRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        room_id_(arena),
        entity_id_(arena) {}

inline void ValidateEntityPlacementRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_),
           0,
           offsetof(Impl_, entity_size_) -
               offsetof(Impl_, position_) +
               sizeof(Impl_::entity_size_));
}
ValidateEntityPlacementRequest::~ValidateEntityPlacementRequest() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.ValidateEntityPlacementRequest)
  SharedDtor(*this);
}
inline void ValidateEntityPlacementRequest::SharedDtor(MessageLite& self) {
  ValidateEntityPlacementRequest& this_ = static_cast<ValidateEntityPlacementRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.room_id_.Destroy();
  this_._impl_.entity_id_.Destroy();
  delete this_._impl_.position_;
  delete this_._impl_.options_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ValidateEntityPlacementRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ValidateEntityPlacementRequest(arena);
}
constexpr auto ValidateEntityPlacementRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ValidateEntityPlacementRequest),
                                            alignof(ValidateEntityPlacementRequest));
}
constexpr auto ValidateEntityPlacementRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ValidateEntityPlacementRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ValidateEntityPlacementRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ValidateEntityPlacementRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ValidateEntityPlacementRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ValidateEntityPlacementRequest>(), &ValidateEntityPlacementRequest::ByteSizeLong,
              &ValidateEntityPlacementRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementRequest, _impl_._cached_size_),
          false,
      },
      &ValidateEntityPlacementRequest::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ValidateEntityPlacementRequest_class_data_ =
        ValidateEntityPlacementRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ValidateEntityPlacementRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ValidateEntityPlacementRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ValidateEntityPlacementRequest_class_data_.tc_table);
  return ValidateEntityPlacementRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 68, 2>
ValidateEntityPlacementRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementRequest, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ValidateEntityPlacementRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::ValidateEntityPlacementRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string room_id = 1 [json_name = "roomId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementRequest, _impl_.room_id_)}},
    // string entity_id = 2 [json_name = "entityId"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementRequest, _impl_.entity_id_)}},
    // .api.v1alpha1.Position position = 3 [json_name = "position"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementRequest, _impl_.position_)}},
    // double entity_size = 4 [json_name = "entitySize"];
    {::_pbi::TcParser::FastF64S1,
     {33, 4, 0, PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementRequest, _impl_.entity_size_)}},
    // .api.v1alpha1.PlacementOptions options = 5 [json_name = "options"];
    {::_pbi::TcParser::FastMtS1,
     {42, 3, 1, PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementRequest, _impl_.options_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string room_id = 1 [json_name = "roomId"];
    {PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementRequest, _impl_.room_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string entity_id = 2 [json_name = "entityId"];
    {PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementRequest, _impl_.entity_id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.Position position = 3 [json_name = "position"];
    {PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementRequest, _impl_.position_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // double entity_size = 4 [json_name = "entitySize"];
    {PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementRequest, _impl_.entity_size_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // .api.v1alpha1.PlacementOptions options = 5 [json_name = "options"];
    {PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementRequest, _impl_.options_), _Internal::kHasBitsOffset + 3, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::PlacementOptions>()},
  }},
  {{
    "\53\7\11\0\0\0\0\0"
    "api.v1alpha1.ValidateEntityPlacementRequest"
    "room_id"
    "entity_id"
  }},
};
PROTOBUF_NOINLINE void ValidateEntityPlacementRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.ValidateEntityPlacementRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.room_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.entity_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(_impl_.options_ != nullptr);
      _impl_.options_->Clear();
    }
  }
  _impl_.entity_size_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ValidateEntityPlacementRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ValidateEntityPlacementRequest& this_ = static_cast<const ValidateEntityPlacementRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ValidateEntityPlacementRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ValidateEntityPlacementRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.ValidateEntityPlacementRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string room_id = 1 [json_name = "roomId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_room_id().empty()) {
      const ::std::string& _s = this_._internal_room_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.ValidateEntityPlacementRequest.room_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string entity_id = 2 [json_name = "entityId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_entity_id().empty()) {
      const ::std::string& _s = this_._internal_entity_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.ValidateEntityPlacementRequest.entity_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.Position position = 3 [json_name = "position"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.position_, this_._impl_.position_->GetCachedSize(), target,
        stream);
  }

  // double entity_size = 4 [json_name = "entitySize"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_entity_size()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          4, this_._internal_entity_size(), target);
    }
  }

  // .api.v1alpha1.PlacementOptions options = 5 [json_name = "options"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.options_, this_._impl_.options_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.ValidateEntityPlacementRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ValidateEntityPlacementRequest::ByteSizeLong(const MessageLite& base) {
  const ValidateEntityPlacementRequest& this_ = static_cast<const ValidateEntityPlacementRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ValidateEntityPlacementRequest::ByteSizeLong() const {
  const ValidateEntityPlacementRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.ValidateEntityPlacementRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // string room_id = 1 [json_name = "roomId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_room_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_room_id());
      }
    }
    // string entity_id = 2 [json_name = "entityId"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_entity_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_entity_id());
      }
    }
    // .api.v1alpha1.Position position = 3 [json_name = "position"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.position_);
    }
    // .api.v1alpha1.PlacementOptions options = 5 [json_name = "options"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.options_);
    }
    // double entity_size = 4 [json_name = "entitySize"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_entity_size()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ValidateEntityPlacementRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ValidateEntityPlacementRequest*>(&to_msg);
  auto& from = static_cast<const ValidateEntityPlacementRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.ValidateEntityPlacementRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_room_id().empty()) {
        _this->_internal_set_room_id(from._internal_room_id());
      } else {
        if (_this->_impl_.room_id_.IsDefault()) {
          _this->_internal_set_room_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_entity_id().empty()) {
        _this->_internal_set_entity_id(from._internal_entity_id());
      } else {
        if (_this->_impl_.entity_id_.IsDefault()) {
          _this->_internal_set_entity_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.position_ != nullptr);
      if (_this->_impl_.position_ == nullptr) {
        _this->_impl_.position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.position_);
      } else {
        _this->_impl_.position_->MergeFrom(*from._impl_.position_);
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(from._impl_.options_ != nullptr);
      if (_this->_impl_.options_ == nullptr) {
        _this->_impl_.options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_);
      } else {
        _this->_impl_.options_->MergeFrom(*from._impl_.options_);
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_entity_size()) != 0) {
        _this->_impl_.entity_size_ = from._impl_.entity_size_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValidateEntityPlacementRequest::CopyFrom(const ValidateEntityPlacementRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.ValidateEntityPlacementRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ValidateEntityPlacementRequest::InternalSwap(ValidateEntityPlacementRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.room_id_, &other->_impl_.room_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entity_id_, &other->_impl_.entity_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementRequest, _impl_.entity_size_)
      + sizeof(ValidateEntityPlacementRequest::_impl_.entity_size_)
      - PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementRequest, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::google::protobuf::Metadata ValidateEntityPlacementRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PlacementOptions::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<PlacementOptions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PlacementOptions, _impl_._has_bits_);
};

PlacementOptions::PlacementOptions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PlacementOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.PlacementOptions)
}
PlacementOptions::PlacementOptions(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PlacementOptions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PlacementOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE PlacementOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void PlacementOptions::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, max_search_distance_),
           0,
           offsetof(Impl_, find_nearest_valid_) -
               offsetof(Impl_, max_search_distance_) +
               sizeof(Impl_::find_nearest_valid_));
}
PlacementOptions::~PlacementOptions() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.PlacementOptions)
  SharedDtor(*this);
}
inline void PlacementOptions::SharedDtor(MessageLite& self) {
  PlacementOptions& this_ = static_cast<PlacementOptions&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PlacementOptions::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PlacementOptions(arena);
}
constexpr auto PlacementOptions::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PlacementOptions),
                                            alignof(PlacementOptions));
}
constexpr auto PlacementOptions::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PlacementOptions_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PlacementOptions::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PlacementOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PlacementOptions::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PlacementOptions>(), &PlacementOptions::ByteSizeLong,
              &PlacementOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PlacementOptions, _impl_._cached_size_),
          false,
      },
      &PlacementOptions::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PlacementOptions_class_data_ =
        PlacementOptions::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PlacementOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PlacementOptions_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PlacementOptions_class_data_.tc_table);
  return PlacementOptions_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2>
PlacementOptions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PlacementOptions, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    PlacementOptions_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::PlacementOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double max_search_distance = 4 [json_name = "maxSearchDistance"];
    {::_pbi::TcParser::FastF64S1,
     {33, 0, 0, PROTOBUF_FIELD_OFFSET(PlacementOptions, _impl_.max_search_distance_)}},
    // bool allow_entity_overlap = 1 [json_name = "allowEntityOverlap"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PlacementOptions, _impl_.allow_entity_overlap_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(PlacementOptions, _impl_.allow_entity_overlap_)}},
    // bool allow_difficult_terrain = 2 [json_name = "allowDifficultTerrain"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PlacementOptions, _impl_.allow_difficult_terrain_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(PlacementOptions, _impl_.allow_difficult_terrain_)}},
    // bool find_nearest_valid = 3 [json_name = "findNearestValid"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PlacementOptions, _impl_.find_nearest_valid_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(PlacementOptions, _impl_.find_nearest_valid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool allow_entity_overlap = 1 [json_name = "allowEntityOverlap"];
    {PROTOBUF_FIELD_OFFSET(PlacementOptions, _impl_.allow_entity_overlap_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool allow_difficult_terrain = 2 [json_name = "allowDifficultTerrain"];
    {PROTOBUF_FIELD_OFFSET(PlacementOptions, _impl_.allow_difficult_terrain_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool find_nearest_valid = 3 [json_name = "findNearestValid"];
    {PROTOBUF_FIELD_OFFSET(PlacementOptions, _impl_.find_nearest_valid_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // double max_search_distance = 4 [json_name = "maxSearchDistance"];
    {PROTOBUF_FIELD_OFFSET(PlacementOptions, _impl_.max_search_distance_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void PlacementOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.PlacementOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    ::memset(&_impl_.max_search_distance_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.find_nearest_valid_) -
        reinterpret_cast<char*>(&_impl_.max_search_distance_)) + sizeof(_impl_.find_nearest_valid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PlacementOptions::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PlacementOptions& this_ = static_cast<const PlacementOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PlacementOptions::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PlacementOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.PlacementOptions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool allow_entity_overlap = 1 [json_name = "allowEntityOverlap"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_allow_entity_overlap() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_allow_entity_overlap(), target);
    }
  }

  // bool allow_difficult_terrain = 2 [json_name = "allowDifficultTerrain"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_allow_difficult_terrain() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_allow_difficult_terrain(), target);
    }
  }

  // bool find_nearest_valid = 3 [json_name = "findNearestValid"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_find_nearest_valid() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_find_nearest_valid(), target);
    }
  }

  // double max_search_distance = 4 [json_name = "maxSearchDistance"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_max_search_distance()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          4, this_._internal_max_search_distance(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.PlacementOptions)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PlacementOptions::ByteSizeLong(const MessageLite& base) {
  const PlacementOptions& this_ = static_cast<const PlacementOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PlacementOptions::ByteSizeLong() const {
  const PlacementOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.PlacementOptions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // double max_search_distance = 4 [json_name = "maxSearchDistance"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_max_search_distance()) != 0) {
        total_size += 9;
      }
    }
    // bool allow_entity_overlap = 1 [json_name = "allowEntityOverlap"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_allow_entity_overlap() != 0) {
        total_size += 2;
      }
    }
    // bool allow_difficult_terrain = 2 [json_name = "allowDifficultTerrain"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_allow_difficult_terrain() != 0) {
        total_size += 2;
      }
    }
    // bool find_nearest_valid = 3 [json_name = "findNearestValid"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_find_nearest_valid() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PlacementOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlacementOptions*>(&to_msg);
  auto& from = static_cast<const PlacementOptions&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.PlacementOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_max_search_distance()) != 0) {
        _this->_impl_.max_search_distance_ = from._impl_.max_search_distance_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_allow_entity_overlap() != 0) {
        _this->_impl_.allow_entity_overlap_ = from._impl_.allow_entity_overlap_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_allow_difficult_terrain() != 0) {
        _this->_impl_.allow_difficult_terrain_ = from._impl_.allow_difficult_terrain_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_find_nearest_valid() != 0) {
        _this->_impl_.find_nearest_valid_ = from._impl_.find_nearest_valid_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlacementOptions::CopyFrom(const PlacementOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.PlacementOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlacementOptions::InternalSwap(PlacementOptions* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlacementOptions, _impl_.find_nearest_valid_)
      + sizeof(PlacementOptions::_impl_.find_nearest_valid_)
      - PROTOBUF_FIELD_OFFSET(PlacementOptions, _impl_.max_search_distance_)>(
          reinterpret_cast<char*>(&_impl_.max_search_distance_),
          reinterpret_cast<char*>(&other->_impl_.max_search_distance_));
}

::google::protobuf::Metadata PlacementOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ValidateEntityPlacementResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ValidateEntityPlacementResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementResponse, _impl_._has_bits_);
};

void ValidateEntityPlacementResponse::clear_actual_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.actual_position_ != nullptr) _impl_.actual_position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
void ValidateEntityPlacementResponse::clear_errors() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errors_.Clear();
}
ValidateEntityPlacementResponse::ValidateEntityPlacementResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ValidateEntityPlacementResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.ValidateEntityPlacementResponse)
}
PROTOBUF_NDEBUG_INLINE ValidateEntityPlacementResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::ValidateEntityPlacementResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        overlapping_entities_{visibility, arena, from.overlapping_entities_},
        terrain_effects_{visibility, arena, from.terrain_effects_},
        errors_{visibility, arena, from.errors_} {}

ValidateEntityPlacementResponse::ValidateEntityPlacementResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ValidateEntityPlacementResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ValidateEntityPlacementResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ValidateEntityPlacementResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.actual_position_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.actual_position_)
                : nullptr;
  _impl_.stats_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.stats_)
                : nullptr;
  _impl_.is_valid_ = from._impl_.is_valid_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.ValidateEntityPlacementResponse)
}
PROTOBUF_NDEBUG_INLINE ValidateEntityPlacementResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        overlapping_entities_{visibility, arena},
        terrain_effects_{visibility, arena},
        errors_{visibility, arena} {}

inline void ValidateEntityPlacementResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, actual_position_),
           0,
           offsetof(Impl_, is_valid_) -
               offsetof(Impl_, actual_position_) +
               sizeof(Impl_::is_valid_));
}
ValidateEntityPlacementResponse::~ValidateEntityPlacementResponse() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.ValidateEntityPlacementResponse)
  SharedDtor(*this);
}
inline void ValidateEntityPlacementResponse::SharedDtor(MessageLite& self) {
  ValidateEntityPlacementResponse& this_ = static_cast<ValidateEntityPlacementResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.actual_position_;
  delete this_._impl_.stats_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ValidateEntityPlacementResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ValidateEntityPlacementResponse(arena);
}
constexpr auto ValidateEntityPlacementResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementResponse, _impl_.overlapping_entities_) +
          decltype(ValidateEntityPlacementResponse::_impl_.overlapping_entities_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementResponse, _impl_.terrain_effects_) +
          decltype(ValidateEntityPlacementResponse::_impl_.terrain_effects_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementResponse, _impl_.errors_) +
          decltype(ValidateEntityPlacementResponse::_impl_.errors_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ValidateEntityPlacementResponse), alignof(ValidateEntityPlacementResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ValidateEntityPlacementResponse::PlacementNew_,
                                 sizeof(ValidateEntityPlacementResponse),
                                 alignof(ValidateEntityPlacementResponse));
  }
}
constexpr auto ValidateEntityPlacementResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ValidateEntityPlacementResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ValidateEntityPlacementResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ValidateEntityPlacementResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ValidateEntityPlacementResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ValidateEntityPlacementResponse>(), &ValidateEntityPlacementResponse::ByteSizeLong,
              &ValidateEntityPlacementResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementResponse, _impl_._cached_size_),
          false,
      },
      &ValidateEntityPlacementResponse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ValidateEntityPlacementResponse_class_data_ =
        ValidateEntityPlacementResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ValidateEntityPlacementResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ValidateEntityPlacementResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ValidateEntityPlacementResponse_class_data_.tc_table);
  return ValidateEntityPlacementResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 4, 73, 2>
ValidateEntityPlacementResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementResponse, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ValidateEntityPlacementResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::ValidateEntityPlacementResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool is_valid = 1 [json_name = "isValid"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ValidateEntityPlacementResponse, _impl_.is_valid_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementResponse, _impl_.is_valid_)}},
    // .api.v1alpha1.Position actual_position = 2 [json_name = "actualPosition"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementResponse, _impl_.actual_position_)}},
    // repeated string overlapping_entities = 3 [json_name = "overlappingEntities"];
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementResponse, _impl_.overlapping_entities_)}},
    // repeated .api.v1alpha1.TerrainEffect terrain_effects = 4 [json_name = "terrainEffects"];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 1, PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementResponse, _impl_.terrain_effects_)}},
    // repeated .api.v1alpha1.RoomError errors = 5 [json_name = "errors"];
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 2, PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementResponse, _impl_.errors_)}},
    // .api.v1alpha1.SpatialQueryStats stats = 6 [json_name = "stats"];
    {::_pbi::TcParser::FastMtS1,
     {50, 1, 3, PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementResponse, _impl_.stats_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bool is_valid = 1 [json_name = "isValid"];
    {PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementResponse, _impl_.is_valid_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // .api.v1alpha1.Position actual_position = 2 [json_name = "actualPosition"];
    {PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementResponse, _impl_.actual_position_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string overlapping_entities = 3 [json_name = "overlappingEntities"];
    {PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementResponse, _impl_.overlapping_entities_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated .api.v1alpha1.TerrainEffect terrain_effects = 4 [json_name = "terrainEffects"];
    {PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementResponse, _impl_.terrain_effects_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .api.v1alpha1.RoomError errors = 5 [json_name = "errors"];
    {PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementResponse, _impl_.errors_), -1, 2, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.SpatialQueryStats stats = 6 [json_name = "stats"];
    {PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementResponse, _impl_.stats_), _Internal::kHasBitsOffset + 1, 3, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::TerrainEffect>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RoomError>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::SpatialQueryStats>()},
  }},
  {{
    "\54\0\0\24\0\0\0\0"
    "api.v1alpha1.ValidateEntityPlacementResponse"
    "overlapping_entities"
  }},
};
PROTOBUF_NOINLINE void ValidateEntityPlacementResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.ValidateEntityPlacementResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.overlapping_entities_.Clear();
  _impl_.terrain_effects_.Clear();
  _impl_.errors_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.actual_position_ != nullptr);
      _impl_.actual_position_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.stats_ != nullptr);
      _impl_.stats_->Clear();
    }
  }
  _impl_.is_valid_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ValidateEntityPlacementResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ValidateEntityPlacementResponse& this_ = static_cast<const ValidateEntityPlacementResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ValidateEntityPlacementResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ValidateEntityPlacementResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.ValidateEntityPlacementResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool is_valid = 1 [json_name = "isValid"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_is_valid() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_is_valid(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.Position actual_position = 2 [json_name = "actualPosition"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.actual_position_, this_._impl_.actual_position_->GetCachedSize(), target,
        stream);
  }

  // repeated string overlapping_entities = 3 [json_name = "overlappingEntities"];
  for (int i = 0, n = this_._internal_overlapping_entities_size(); i < n; ++i) {
    const auto& s = this_._internal_overlapping_entities().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.ValidateEntityPlacementResponse.overlapping_entities");
    target = stream->WriteString(3, s, target);
  }

  // repeated .api.v1alpha1.TerrainEffect terrain_effects = 4 [json_name = "terrainEffects"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_terrain_effects_size());
       i < n; i++) {
    const auto& repfield = this_._internal_terrain_effects().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .api.v1alpha1.RoomError errors = 5 [json_name = "errors"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_errors_size());
       i < n; i++) {
    const auto& repfield = this_._internal_errors().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // .api.v1alpha1.SpatialQueryStats stats = 6 [json_name = "stats"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.stats_, this_._impl_.stats_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.ValidateEntityPlacementResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ValidateEntityPlacementResponse::ByteSizeLong(const MessageLite& base) {
  const ValidateEntityPlacementResponse& this_ = static_cast<const ValidateEntityPlacementResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ValidateEntityPlacementResponse::ByteSizeLong() const {
  const ValidateEntityPlacementResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.ValidateEntityPlacementResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string overlapping_entities = 3 [json_name = "overlappingEntities"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_overlapping_entities().size());
      for (int i = 0, n = this_._internal_overlapping_entities().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_overlapping_entities().Get(i));
      }
    }
    // repeated .api.v1alpha1.TerrainEffect terrain_effects = 4 [json_name = "terrainEffects"];
    {
      total_size += 1UL * this_._internal_terrain_effects_size();
      for (const auto& msg : this_._internal_terrain_effects()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .api.v1alpha1.RoomError errors = 5 [json_name = "errors"];
    {
      total_size += 1UL * this_._internal_errors_size();
      for (const auto& msg : this_._internal_errors()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // .api.v1alpha1.Position actual_position = 2 [json_name = "actualPosition"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.actual_position_);
    }
    // .api.v1alpha1.SpatialQueryStats stats = 6 [json_name = "stats"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.stats_);
    }
    // bool is_valid = 1 [json_name = "isValid"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_is_valid() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ValidateEntityPlacementResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ValidateEntityPlacementResponse*>(&to_msg);
  auto& from = static_cast<const ValidateEntityPlacementResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.ValidateEntityPlacementResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_overlapping_entities()->MergeFrom(from._internal_overlapping_entities());
  _this->_internal_mutable_terrain_effects()->MergeFrom(
      from._internal_terrain_effects());
  _this->_internal_mutable_errors()->MergeFrom(
      from._internal_errors());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.actual_position_ != nullptr);
      if (_this->_impl_.actual_position_ == nullptr) {
        _this->_impl_.actual_position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.actual_position_);
      } else {
        _this->_impl_.actual_position_->MergeFrom(*from._impl_.actual_position_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.stats_ != nullptr);
      if (_this->_impl_.stats_ == nullptr) {
        _this->_impl_.stats_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.stats_);
      } else {
        _this->_impl_.stats_->MergeFrom(*from._impl_.stats_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_is_valid() != 0) {
        _this->_impl_.is_valid_ = from._impl_.is_valid_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValidateEntityPlacementResponse::CopyFrom(const ValidateEntityPlacementResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.ValidateEntityPlacementResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ValidateEntityPlacementResponse::InternalSwap(ValidateEntityPlacementResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.overlapping_entities_.InternalSwap(&other->_impl_.overlapping_entities_);
  _impl_.terrain_effects_.InternalSwap(&other->_impl_.terrain_effects_);
  _impl_.errors_.InternalSwap(&other->_impl_.errors_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementResponse, _impl_.is_valid_)
      + sizeof(ValidateEntityPlacementResponse::_impl_.is_valid_)
      - PROTOBUF_FIELD_OFFSET(ValidateEntityPlacementResponse, _impl_.actual_position_)>(
          reinterpret_cast<char*>(&_impl_.actual_position_),
          reinterpret_cast<char*>(&other->_impl_.actual_position_));
}

::google::protobuf::Metadata ValidateEntityPlacementResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryEntitiesInRangeRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<QueryEntitiesInRangeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryEntitiesInRangeRequest, _impl_._has_bits_);
};

void QueryEntitiesInRangeRequest::clear_center_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.center_position_ != nullptr) _impl_.center_position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
QueryEntitiesInRangeRequest::QueryEntitiesInRangeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, QueryEntitiesInRangeRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.QueryEntitiesInRangeRequest)
}
PROTOBUF_NDEBUG_INLINE QueryEntitiesInRangeRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::QueryEntitiesInRangeRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        room_id_(arena, from.room_id_) {}

QueryEntitiesInRangeRequest::QueryEntitiesInRangeRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const QueryEntitiesInRangeRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, QueryEntitiesInRangeRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryEntitiesInRangeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.center_position_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.center_position_)
                : nullptr;
  _impl_.options_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_)
                : nullptr;
  _impl_.range_ = from._impl_.range_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.QueryEntitiesInRangeRequest)
}
PROTOBUF_NDEBUG_INLINE QueryEntitiesInRangeRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        room_id_(arena) {}

inline void QueryEntitiesInRangeRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, center_position_),
           0,
           offsetof(Impl_, range_) -
               offsetof(Impl_, center_position_) +
               sizeof(Impl_::range_));
}
QueryEntitiesInRangeRequest::~QueryEntitiesInRangeRequest() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.QueryEntitiesInRangeRequest)
  SharedDtor(*this);
}
inline void QueryEntitiesInRangeRequest::SharedDtor(MessageLite& self) {
  QueryEntitiesInRangeRequest& this_ = static_cast<QueryEntitiesInRangeRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.room_id_.Destroy();
  delete this_._impl_.center_position_;
  delete this_._impl_.options_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL QueryEntitiesInRangeRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) QueryEntitiesInRangeRequest(arena);
}
constexpr auto QueryEntitiesInRangeRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(QueryEntitiesInRangeRequest),
                                            alignof(QueryEntitiesInRangeRequest));
}
constexpr auto QueryEntitiesInRangeRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_QueryEntitiesInRangeRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &QueryEntitiesInRangeRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<QueryEntitiesInRangeRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &QueryEntitiesInRangeRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<QueryEntitiesInRangeRequest>(), &QueryEntitiesInRangeRequest::ByteSizeLong,
              &QueryEntitiesInRangeRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(QueryEntitiesInRangeRequest, _impl_._cached_size_),
          false,
      },
      &QueryEntitiesInRangeRequest::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull QueryEntitiesInRangeRequest_class_data_ =
        QueryEntitiesInRangeRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
QueryEntitiesInRangeRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&QueryEntitiesInRangeRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(QueryEntitiesInRangeRequest_class_data_.tc_table);
  return QueryEntitiesInRangeRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 56, 2>
QueryEntitiesInRangeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryEntitiesInRangeRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    QueryEntitiesInRangeRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::QueryEntitiesInRangeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .api.v1alpha1.RangeQueryOptions options = 4 [json_name = "options"];
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 1, PROTOBUF_FIELD_OFFSET(QueryEntitiesInRangeRequest, _impl_.options_)}},
    // string room_id = 1 [json_name = "roomId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(QueryEntitiesInRangeRequest, _impl_.room_id_)}},
    // .api.v1alpha1.Position center_position = 2 [json_name = "centerPosition"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(QueryEntitiesInRangeRequest, _impl_.center_position_)}},
    // double range = 3 [json_name = "range"];
    {::_pbi::TcParser::FastF64S1,
     {25, 3, 0, PROTOBUF_FIELD_OFFSET(QueryEntitiesInRangeRequest, _impl_.range_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string room_id = 1 [json_name = "roomId"];
    {PROTOBUF_FIELD_OFFSET(QueryEntitiesInRangeRequest, _impl_.room_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.Position center_position = 2 [json_name = "centerPosition"];
    {PROTOBUF_FIELD_OFFSET(QueryEntitiesInRangeRequest, _impl_.center_position_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // double range = 3 [json_name = "range"];
    {PROTOBUF_FIELD_OFFSET(QueryEntitiesInRangeRequest, _impl_.range_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // .api.v1alpha1.RangeQueryOptions options = 4 [json_name = "options"];
    {PROTOBUF_FIELD_OFFSET(QueryEntitiesInRangeRequest, _impl_.options_), _Internal::kHasBitsOffset + 2, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RangeQueryOptions>()},
  }},
  {{
    "\50\7\0\0\0\0\0\0"
    "api.v1alpha1.QueryEntitiesInRangeRequest"
    "room_id"
  }},
};
PROTOBUF_NOINLINE void QueryEntitiesInRangeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.QueryEntitiesInRangeRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.room_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.center_position_ != nullptr);
      _impl_.center_position_->Clear();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.options_ != nullptr);
      _impl_.options_->Clear();
    }
  }
  _impl_.range_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL QueryEntitiesInRangeRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const QueryEntitiesInRangeRequest& this_ = static_cast<const QueryEntitiesInRangeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL QueryEntitiesInRangeRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const QueryEntitiesInRangeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.QueryEntitiesInRangeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string room_id = 1 [json_name = "roomId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_room_id().empty()) {
      const ::std::string& _s = this_._internal_room_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.QueryEntitiesInRangeRequest.room_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.Position center_position = 2 [json_name = "centerPosition"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.center_position_, this_._impl_.center_position_->GetCachedSize(), target,
        stream);
  }

  // double range = 3 [json_name = "range"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_range()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_range(), target);
    }
  }

  // .api.v1alpha1.RangeQueryOptions options = 4 [json_name = "options"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.options_, this_._impl_.options_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.QueryEntitiesInRangeRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t QueryEntitiesInRangeRequest::ByteSizeLong(const MessageLite& base) {
  const QueryEntitiesInRangeRequest& this_ = static_cast<const QueryEntitiesInRangeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t QueryEntitiesInRangeRequest::ByteSizeLong() const {
  const QueryEntitiesInRangeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.QueryEntitiesInRangeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string room_id = 1 [json_name = "roomId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_room_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_room_id());
      }
    }
    // .api.v1alpha1.Position center_position = 2 [json_name = "centerPosition"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.center_position_);
    }
    // .api.v1alpha1.RangeQueryOptions options = 4 [json_name = "options"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.options_);
    }
    // double range = 3 [json_name = "range"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_range()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void QueryEntitiesInRangeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryEntitiesInRangeRequest*>(&to_msg);
  auto& from = static_cast<const QueryEntitiesInRangeRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.QueryEntitiesInRangeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_room_id().empty()) {
        _this->_internal_set_room_id(from._internal_room_id());
      } else {
        if (_this->_impl_.room_id_.IsDefault()) {
          _this->_internal_set_room_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.center_position_ != nullptr);
      if (_this->_impl_.center_position_ == nullptr) {
        _this->_impl_.center_position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.center_position_);
      } else {
        _this->_impl_.center_position_->MergeFrom(*from._impl_.center_position_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.options_ != nullptr);
      if (_this->_impl_.options_ == nullptr) {
        _this->_impl_.options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_);
      } else {
        _this->_impl_.options_->MergeFrom(*from._impl_.options_);
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_range()) != 0) {
        _this->_impl_.range_ = from._impl_.range_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryEntitiesInRangeRequest::CopyFrom(const QueryEntitiesInRangeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.QueryEntitiesInRangeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryEntitiesInRangeRequest::InternalSwap(QueryEntitiesInRangeRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.room_id_, &other->_impl_.room_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryEntitiesInRangeRequest, _impl_.range_)
      + sizeof(QueryEntitiesInRangeRequest::_impl_.range_)
      - PROTOBUF_FIELD_OFFSET(QueryEntitiesInRangeRequest, _impl_.center_position_)>(
          reinterpret_cast<char*>(&_impl_.center_position_),
          reinterpret_cast<char*>(&other->_impl_.center_position_));
}

::google::protobuf::Metadata QueryEntitiesInRangeRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RangeQueryOptions::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RangeQueryOptions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RangeQueryOptions, _impl_._has_bits_);
};

RangeQueryOptions::RangeQueryOptions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RangeQueryOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.RangeQueryOptions)
}
PROTOBUF_NDEBUG_INLINE RangeQueryOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::RangeQueryOptions& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        include_entity_types_{visibility, arena, from.include_entity_types_},
        exclude_entity_types_{visibility, arena, from.exclude_entity_types_} {}

RangeQueryOptions::RangeQueryOptions(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RangeQueryOptions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RangeQueryOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RangeQueryOptions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, require_line_of_sight_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, require_line_of_sight_),
           offsetof(Impl_, sort_order_) -
               offsetof(Impl_, require_line_of_sight_) +
               sizeof(Impl_::sort_order_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.RangeQueryOptions)
}
PROTOBUF_NDEBUG_INLINE RangeQueryOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        include_entity_types_{visibility, arena},
        exclude_entity_types_{visibility, arena} {}

inline void RangeQueryOptions::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, require_line_of_sight_),
           0,
           offsetof(Impl_, sort_order_) -
               offsetof(Impl_, require_line_of_sight_) +
               sizeof(Impl_::sort_order_));
}
RangeQueryOptions::~RangeQueryOptions() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.RangeQueryOptions)
  SharedDtor(*this);
}
inline void RangeQueryOptions::SharedDtor(MessageLite& self) {
  RangeQueryOptions& this_ = static_cast<RangeQueryOptions&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RangeQueryOptions::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RangeQueryOptions(arena);
}
constexpr auto RangeQueryOptions::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RangeQueryOptions, _impl_.include_entity_types_) +
          decltype(RangeQueryOptions::_impl_.include_entity_types_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RangeQueryOptions, _impl_.exclude_entity_types_) +
          decltype(RangeQueryOptions::_impl_.exclude_entity_types_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(RangeQueryOptions), alignof(RangeQueryOptions), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RangeQueryOptions::PlacementNew_,
                                 sizeof(RangeQueryOptions),
                                 alignof(RangeQueryOptions));
  }
}
constexpr auto RangeQueryOptions::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RangeQueryOptions_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RangeQueryOptions::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RangeQueryOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RangeQueryOptions::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RangeQueryOptions>(), &RangeQueryOptions::ByteSizeLong,
              &RangeQueryOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RangeQueryOptions, _impl_._cached_size_),
          false,
      },
      &RangeQueryOptions::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RangeQueryOptions_class_data_ =
        RangeQueryOptions::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RangeQueryOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RangeQueryOptions_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RangeQueryOptions_class_data_.tc_table);
  return RangeQueryOptions_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 79, 2>
RangeQueryOptions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RangeQueryOptions, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RangeQueryOptions_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::RangeQueryOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string include_entity_types = 1 [json_name = "includeEntityTypes"];
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RangeQueryOptions, _impl_.include_entity_types_)}},
    // repeated string exclude_entity_types = 2 [json_name = "excludeEntityTypes"];
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RangeQueryOptions, _impl_.exclude_entity_types_)}},
    // bool require_line_of_sight = 3 [json_name = "requireLineOfSight"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RangeQueryOptions, _impl_.require_line_of_sight_), 0>(),
     {24, 0, 0, PROTOBUF_FIELD_OFFSET(RangeQueryOptions, _impl_.require_line_of_sight_)}},
    // int32 max_results = 4 [json_name = "maxResults"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RangeQueryOptions, _impl_.max_results_), 1>(),
     {32, 1, 0, PROTOBUF_FIELD_OFFSET(RangeQueryOptions, _impl_.max_results_)}},
    // .api.v1alpha1.RangeSortOrder sort_order = 5 [json_name = "sortOrder"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RangeQueryOptions, _impl_.sort_order_), 2>(),
     {40, 2, 0, PROTOBUF_FIELD_OFFSET(RangeQueryOptions, _impl_.sort_order_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string include_entity_types = 1 [json_name = "includeEntityTypes"];
    {PROTOBUF_FIELD_OFFSET(RangeQueryOptions, _impl_.include_entity_types_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string exclude_entity_types = 2 [json_name = "excludeEntityTypes"];
    {PROTOBUF_FIELD_OFFSET(RangeQueryOptions, _impl_.exclude_entity_types_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // bool require_line_of_sight = 3 [json_name = "requireLineOfSight"];
    {PROTOBUF_FIELD_OFFSET(RangeQueryOptions, _impl_.require_line_of_sight_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // int32 max_results = 4 [json_name = "maxResults"];
    {PROTOBUF_FIELD_OFFSET(RangeQueryOptions, _impl_.max_results_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .api.v1alpha1.RangeSortOrder sort_order = 5 [json_name = "sortOrder"];
    {PROTOBUF_FIELD_OFFSET(RangeQueryOptions, _impl_.sort_order_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\36\24\24\0\0\0\0\0"
    "api.v1alpha1.RangeQueryOptions"
    "include_entity_types"
    "exclude_entity_types"
  }},
};
PROTOBUF_NOINLINE void RangeQueryOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.RangeQueryOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.include_entity_types_.Clear();
  _impl_.exclude_entity_types_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    ::memset(&_impl_.require_line_of_sight_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.sort_order_) -
        reinterpret_cast<char*>(&_impl_.require_line_of_sight_)) + sizeof(_impl_.sort_order_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RangeQueryOptions::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RangeQueryOptions& this_ = static_cast<const RangeQueryOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RangeQueryOptions::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RangeQueryOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.RangeQueryOptions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string include_entity_types = 1 [json_name = "includeEntityTypes"];
  for (int i = 0, n = this_._internal_include_entity_types_size(); i < n; ++i) {
    const auto& s = this_._internal_include_entity_types().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RangeQueryOptions.include_entity_types");
    target = stream->WriteString(1, s, target);
  }

  // repeated string exclude_entity_types = 2 [json_name = "excludeEntityTypes"];
  for (int i = 0, n = this_._internal_exclude_entity_types_size(); i < n; ++i) {
    const auto& s = this_._internal_exclude_entity_types().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RangeQueryOptions.exclude_entity_types");
    target = stream->WriteString(2, s, target);
  }

  // bool require_line_of_sight = 3 [json_name = "requireLineOfSight"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_require_line_of_sight() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_require_line_of_sight(), target);
    }
  }

  // int32 max_results = 4 [json_name = "maxResults"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_max_results() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_max_results(), target);
    }
  }

  // .api.v1alpha1.RangeSortOrder sort_order = 5 [json_name = "sortOrder"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_sort_order() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          5, this_._internal_sort_order(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.RangeQueryOptions)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RangeQueryOptions::ByteSizeLong(const MessageLite& base) {
  const RangeQueryOptions& this_ = static_cast<const RangeQueryOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RangeQueryOptions::ByteSizeLong() const {
  const RangeQueryOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.RangeQueryOptions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string include_entity_types = 1 [json_name = "includeEntityTypes"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_include_entity_types().size());
      for (int i = 0, n = this_._internal_include_entity_types().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_include_entity_types().Get(i));
      }
    }
    // repeated string exclude_entity_types = 2 [json_name = "excludeEntityTypes"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_exclude_entity_types().size());
      for (int i = 0, n = this_._internal_exclude_entity_types().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_exclude_entity_types().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // bool require_line_of_sight = 3 [json_name = "requireLineOfSight"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_require_line_of_sight() != 0) {
        total_size += 2;
      }
    }
    // int32 max_results = 4 [json_name = "maxResults"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_max_results() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_max_results());
      }
    }
    // .api.v1alpha1.RangeSortOrder sort_order = 5 [json_name = "sortOrder"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_sort_order() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_sort_order());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RangeQueryOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RangeQueryOptions*>(&to_msg);
  auto& from = static_cast<const RangeQueryOptions&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.RangeQueryOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_include_entity_types()->MergeFrom(from._internal_include_entity_types());
  _this->_internal_mutable_exclude_entity_types()->MergeFrom(from._internal_exclude_entity_types());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (from._internal_require_line_of_sight() != 0) {
        _this->_impl_.require_line_of_sight_ = from._impl_.require_line_of_sight_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_max_results() != 0) {
        _this->_impl_.max_results_ = from._impl_.max_results_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_sort_order() != 0) {
        _this->_impl_.sort_order_ = from._impl_.sort_order_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RangeQueryOptions::CopyFrom(const RangeQueryOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.RangeQueryOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RangeQueryOptions::InternalSwap(RangeQueryOptions* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.include_entity_types_.InternalSwap(&other->_impl_.include_entity_types_);
  _impl_.exclude_entity_types_.InternalSwap(&other->_impl_.exclude_entity_types_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RangeQueryOptions, _impl_.sort_order_)
      + sizeof(RangeQueryOptions::_impl_.sort_order_)
      - PROTOBUF_FIELD_OFFSET(RangeQueryOptions, _impl_.require_line_of_sight_)>(
          reinterpret_cast<char*>(&_impl_.require_line_of_sight_),
          reinterpret_cast<char*>(&other->_impl_.require_line_of_sight_));
}

::google::protobuf::Metadata RangeQueryOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryEntitiesInRangeResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<QueryEntitiesInRangeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryEntitiesInRangeResponse, _impl_._has_bits_);
};

QueryEntitiesInRangeResponse::QueryEntitiesInRangeResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, QueryEntitiesInRangeResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.QueryEntitiesInRangeResponse)
}
PROTOBUF_NDEBUG_INLINE QueryEntitiesInRangeResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::QueryEntitiesInRangeResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        entities_{visibility, arena, from.entities_} {}

QueryEntitiesInRangeResponse::QueryEntitiesInRangeResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const QueryEntitiesInRangeResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, QueryEntitiesInRangeResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryEntitiesInRangeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.stats_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.stats_)
                : nullptr;
  _impl_.total_count_ = from._impl_.total_count_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.QueryEntitiesInRangeResponse)
}
PROTOBUF_NDEBUG_INLINE QueryEntitiesInRangeResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        entities_{visibility, arena} {}

inline void QueryEntitiesInRangeResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, stats_),
           0,
           offsetof(Impl_, total_count_) -
               offsetof(Impl_, stats_) +
               sizeof(Impl_::total_count_));
}
QueryEntitiesInRangeResponse::~QueryEntitiesInRangeResponse() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.QueryEntitiesInRangeResponse)
  SharedDtor(*this);
}
inline void QueryEntitiesInRangeResponse::SharedDtor(MessageLite& self) {
  QueryEntitiesInRangeResponse& this_ = static_cast<QueryEntitiesInRangeResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.stats_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL QueryEntitiesInRangeResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) QueryEntitiesInRangeResponse(arena);
}
constexpr auto QueryEntitiesInRangeResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(QueryEntitiesInRangeResponse, _impl_.entities_) +
          decltype(QueryEntitiesInRangeResponse::_impl_.entities_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(QueryEntitiesInRangeResponse), alignof(QueryEntitiesInRangeResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&QueryEntitiesInRangeResponse::PlacementNew_,
                                 sizeof(QueryEntitiesInRangeResponse),
                                 alignof(QueryEntitiesInRangeResponse));
  }
}
constexpr auto QueryEntitiesInRangeResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_QueryEntitiesInRangeResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &QueryEntitiesInRangeResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<QueryEntitiesInRangeResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &QueryEntitiesInRangeResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<QueryEntitiesInRangeResponse>(), &QueryEntitiesInRangeResponse::ByteSizeLong,
              &QueryEntitiesInRangeResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(QueryEntitiesInRangeResponse, _impl_._cached_size_),
          false,
      },
      &QueryEntitiesInRangeResponse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull QueryEntitiesInRangeResponse_class_data_ =
        QueryEntitiesInRangeResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
QueryEntitiesInRangeResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&QueryEntitiesInRangeResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(QueryEntitiesInRangeResponse_class_data_.tc_table);
  return QueryEntitiesInRangeResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2>
QueryEntitiesInRangeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryEntitiesInRangeResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    QueryEntitiesInRangeResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::QueryEntitiesInRangeResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .api.v1alpha1.EntityRangeResult entities = 1 [json_name = "entities"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(QueryEntitiesInRangeResponse, _impl_.entities_)}},
    // int32 total_count = 2 [json_name = "totalCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(QueryEntitiesInRangeResponse, _impl_.total_count_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(QueryEntitiesInRangeResponse, _impl_.total_count_)}},
    // .api.v1alpha1.SpatialQueryStats stats = 3 [json_name = "stats"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 1, PROTOBUF_FIELD_OFFSET(QueryEntitiesInRangeResponse, _impl_.stats_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .api.v1alpha1.EntityRangeResult entities = 1 [json_name = "entities"];
    {PROTOBUF_FIELD_OFFSET(QueryEntitiesInRangeResponse, _impl_.entities_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 total_count = 2 [json_name = "totalCount"];
    {PROTOBUF_FIELD_OFFSET(QueryEntitiesInRangeResponse, _impl_.total_count_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .api.v1alpha1.SpatialQueryStats stats = 3 [json_name = "stats"];
    {PROTOBUF_FIELD_OFFSET(QueryEntitiesInRangeResponse, _impl_.stats_), _Internal::kHasBitsOffset + 0, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::EntityRangeResult>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::SpatialQueryStats>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void QueryEntitiesInRangeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.QueryEntitiesInRangeResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entities_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.stats_ != nullptr);
    _impl_.stats_->Clear();
  }
  _impl_.total_count_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL QueryEntitiesInRangeResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const QueryEntitiesInRangeResponse& this_ = static_cast<const QueryEntitiesInRangeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL QueryEntitiesInRangeResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const QueryEntitiesInRangeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.QueryEntitiesInRangeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .api.v1alpha1.EntityRangeResult entities = 1 [json_name = "entities"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_entities_size());
       i < n; i++) {
    const auto& repfield = this_._internal_entities().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // int32 total_count = 2 [json_name = "totalCount"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_total_count() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_total_count(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.SpatialQueryStats stats = 3 [json_name = "stats"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.stats_, this_._impl_.stats_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.QueryEntitiesInRangeResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t QueryEntitiesInRangeResponse::ByteSizeLong(const MessageLite& base) {
  const QueryEntitiesInRangeResponse& this_ = static_cast<const QueryEntitiesInRangeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t QueryEntitiesInRangeResponse::ByteSizeLong() const {
  const QueryEntitiesInRangeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.QueryEntitiesInRangeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.EntityRangeResult entities = 1 [json_name = "entities"];
    {
      total_size += 1UL * this_._internal_entities_size();
      for (const auto& msg : this_._internal_entities()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // .api.v1alpha1.SpatialQueryStats stats = 3 [json_name = "stats"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.stats_);
    }
    // int32 total_count = 2 [json_name = "totalCount"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_total_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_total_count());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void QueryEntitiesInRangeResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryEntitiesInRangeResponse*>(&to_msg);
  auto& from = static_cast<const QueryEntitiesInRangeResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.QueryEntitiesInRangeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entities()->MergeFrom(
      from._internal_entities());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.stats_ != nullptr);
      if (_this->_impl_.stats_ == nullptr) {
        _this->_impl_.stats_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.stats_);
      } else {
        _this->_impl_.stats_->MergeFrom(*from._impl_.stats_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_total_count() != 0) {
        _this->_impl_.total_count_ = from._impl_.total_count_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryEntitiesInRangeResponse::CopyFrom(const QueryEntitiesInRangeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.QueryEntitiesInRangeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryEntitiesInRangeResponse::InternalSwap(QueryEntitiesInRangeResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.entities_.InternalSwap(&other->_impl_.entities_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryEntitiesInRangeResponse, _impl_.total_count_)
      + sizeof(QueryEntitiesInRangeResponse::_impl_.total_count_)
      - PROTOBUF_FIELD_OFFSET(QueryEntitiesInRangeResponse, _impl_.stats_)>(
          reinterpret_cast<char*>(&_impl_.stats_),
          reinterpret_cast<char*>(&other->_impl_.stats_));
}

::google::protobuf::Metadata QueryEntitiesInRangeResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EntityRangeResult::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<EntityRangeResult>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EntityRangeResult, _impl_._has_bits_);
};

void EntityRangeResult::clear_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.entity_ != nullptr) _impl_.entity_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
EntityRangeResult::EntityRangeResult(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EntityRangeResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.EntityRangeResult)
}
PROTOBUF_NDEBUG_INLINE EntityRangeResult::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::EntityRangeResult& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

EntityRangeResult::EntityRangeResult(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EntityRangeResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EntityRangeResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EntityRangeResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.entity_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.entity_)
                : nullptr;
  _impl_.cover_info_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.cover_info_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, distance_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, distance_),
           offsetof(Impl_, has_line_of_sight_) -
               offsetof(Impl_, distance_) +
               sizeof(Impl_::has_line_of_sight_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.EntityRangeResult)
}
PROTOBUF_NDEBUG_INLINE EntityRangeResult::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void EntityRangeResult::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, entity_),
           0,
           offsetof(Impl_, has_line_of_sight_) -
               offsetof(Impl_, entity_) +
               sizeof(Impl_::has_line_of_sight_));
}
EntityRangeResult::~EntityRangeResult() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.EntityRangeResult)
  SharedDtor(*this);
}
inline void EntityRangeResult::SharedDtor(MessageLite& self) {
  EntityRangeResult& this_ = static_cast<EntityRangeResult&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.entity_;
  delete this_._impl_.cover_info_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EntityRangeResult::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EntityRangeResult(arena);
}
constexpr auto EntityRangeResult::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(EntityRangeResult),
                                            alignof(EntityRangeResult));
}
constexpr auto EntityRangeResult::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EntityRangeResult_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EntityRangeResult::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EntityRangeResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EntityRangeResult::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EntityRangeResult>(), &EntityRangeResult::ByteSizeLong,
              &EntityRangeResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EntityRangeResult, _impl_._cached_size_),
          false,
      },
      &EntityRangeResult::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EntityRangeResult_class_data_ =
        EntityRangeResult::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EntityRangeResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EntityRangeResult_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EntityRangeResult_class_data_.tc_table);
  return EntityRangeResult_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 0, 2>
EntityRangeResult::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EntityRangeResult, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    EntityRangeResult_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::EntityRangeResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .api.v1alpha1.Entity entity = 1 [json_name = "entity"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EntityRangeResult, _impl_.entity_)}},
    // double distance = 2 [json_name = "distance"];
    {::_pbi::TcParser::FastF64S1,
     {17, 2, 0, PROTOBUF_FIELD_OFFSET(EntityRangeResult, _impl_.distance_)}},
    // double direction = 3 [json_name = "direction"];
    {::_pbi::TcParser::FastF64S1,
     {25, 3, 0, PROTOBUF_FIELD_OFFSET(EntityRangeResult, _impl_.direction_)}},
    // bool has_line_of_sight = 4 [json_name = "hasLineOfSight"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(EntityRangeResult, _impl_.has_line_of_sight_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(EntityRangeResult, _impl_.has_line_of_sight_)}},
    // .api.v1alpha1.CoverInfo cover_info = 5 [json_name = "coverInfo"];
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(EntityRangeResult, _impl_.cover_info_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .api.v1alpha1.Entity entity = 1 [json_name = "entity"];
    {PROTOBUF_FIELD_OFFSET(EntityRangeResult, _impl_.entity_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // double distance = 2 [json_name = "distance"];
    {PROTOBUF_FIELD_OFFSET(EntityRangeResult, _impl_.distance_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double direction = 3 [json_name = "direction"];
    {PROTOBUF_FIELD_OFFSET(EntityRangeResult, _impl_.direction_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // bool has_line_of_sight = 4 [json_name = "hasLineOfSight"];
    {PROTOBUF_FIELD_OFFSET(EntityRangeResult, _impl_.has_line_of_sight_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // .api.v1alpha1.CoverInfo cover_info = 5 [json_name = "coverInfo"];
    {PROTOBUF_FIELD_OFFSET(EntityRangeResult, _impl_.cover_info_), _Internal::kHasBitsOffset + 1, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Entity>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::CoverInfo>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void EntityRangeResult::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.EntityRangeResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.entity_ != nullptr);
      _impl_.entity_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.cover_info_ != nullptr);
      _impl_.cover_info_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000001cU) != 0) {
    ::memset(&_impl_.distance_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.has_line_of_sight_) -
        reinterpret_cast<char*>(&_impl_.distance_)) + sizeof(_impl_.has_line_of_sight_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EntityRangeResult::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EntityRangeResult& this_ = static_cast<const EntityRangeResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EntityRangeResult::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EntityRangeResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.EntityRangeResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.Entity entity = 1 [json_name = "entity"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.entity_, this_._impl_.entity_->GetCachedSize(), target,
        stream);
  }

  // double distance = 2 [json_name = "distance"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_distance()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_distance(), target);
    }
  }

  // double direction = 3 [json_name = "direction"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_direction()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_direction(), target);
    }
  }

  // bool has_line_of_sight = 4 [json_name = "hasLineOfSight"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    if (this_._internal_has_line_of_sight() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_has_line_of_sight(), target);
    }
  }

  // .api.v1alpha1.CoverInfo cover_info = 5 [json_name = "coverInfo"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.cover_info_, this_._impl_.cover_info_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.EntityRangeResult)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EntityRangeResult::ByteSizeLong(const MessageLite& base) {
  const EntityRangeResult& this_ = static_cast<const EntityRangeResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EntityRangeResult::ByteSizeLong() const {
  const EntityRangeResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.EntityRangeResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // .api.v1alpha1.Entity entity = 1 [json_name = "entity"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.entity_);
    }
    // .api.v1alpha1.CoverInfo cover_info = 5 [json_name = "coverInfo"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.cover_info_);
    }
    // double distance = 2 [json_name = "distance"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_distance()) != 0) {
        total_size += 9;
      }
    }
    // double direction = 3 [json_name = "direction"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_direction()) != 0) {
        total_size += 9;
      }
    }
    // bool has_line_of_sight = 4 [json_name = "hasLineOfSight"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_has_line_of_sight() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EntityRangeResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EntityRangeResult*>(&to_msg);
  auto& from = static_cast<const EntityRangeResult&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.EntityRangeResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.entity_ != nullptr);
      if (_this->_impl_.entity_ == nullptr) {
        _this->_impl_.entity_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.entity_);
      } else {
        _this->_impl_.entity_->MergeFrom(*from._impl_.entity_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.cover_info_ != nullptr);
      if (_this->_impl_.cover_info_ == nullptr) {
        _this->_impl_.cover_info_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.cover_info_);
      } else {
        _this->_impl_.cover_info_->MergeFrom(*from._impl_.cover_info_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_distance()) != 0) {
        _this->_impl_.distance_ = from._impl_.distance_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_direction()) != 0) {
        _this->_impl_.direction_ = from._impl_.direction_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_has_line_of_sight() != 0) {
        _this->_impl_.has_line_of_sight_ = from._impl_.has_line_of_sight_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EntityRangeResult::CopyFrom(const EntityRangeResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.EntityRangeResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EntityRangeResult::InternalSwap(EntityRangeResult* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EntityRangeResult, _impl_.has_line_of_sight_)
      + sizeof(EntityRangeResult::_impl_.has_line_of_sight_)
      - PROTOBUF_FIELD_OFFSET(EntityRangeResult, _impl_.entity_)>(
          reinterpret_cast<char*>(&_impl_.entity_),
          reinterpret_cast<char*>(&other->_impl_.entity_));
}

::google::protobuf::Metadata EntityRangeResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CalculateMovementPathRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CalculateMovementPathRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CalculateMovementPathRequest, _impl_._has_bits_);
};

void CalculateMovementPathRequest::clear_from_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.from_position_ != nullptr) _impl_.from_position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
void CalculateMovementPathRequest::clear_to_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.to_position_ != nullptr) _impl_.to_position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008U;
}
CalculateMovementPathRequest::CalculateMovementPathRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CalculateMovementPathRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.CalculateMovementPathRequest)
}
PROTOBUF_NDEBUG_INLINE CalculateMovementPathRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::CalculateMovementPathRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        room_id_(arena, from.room_id_),
        entity_id_(arena, from.entity_id_) {}

CalculateMovementPathRequest::CalculateMovementPathRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CalculateMovementPathRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CalculateMovementPathRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CalculateMovementPathRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.from_position_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.from_position_)
                : nullptr;
  _impl_.to_position_ = ((cached_has_bits & 0x00000008U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.to_position_)
                : nullptr;
  _impl_.options_ = ((cached_has_bits & 0x00000010U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.CalculateMovementPathRequest)
}
PROTOBUF_NDEBUG_INLINE CalculateMovementPathRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        room_id_(arena),
        entity_id_(arena) {}

inline void CalculateMovementPathRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, from_position_),
           0,
           offsetof(Impl_, options_) -
               offsetof(Impl_, from_position_) +
               sizeof(Impl_::options_));
}
CalculateMovementPathRequest::~CalculateMovementPathRequest() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.CalculateMovementPathRequest)
  SharedDtor(*this);
}
inline void CalculateMovementPathRequest::SharedDtor(MessageLite& self) {
  CalculateMovementPathRequest& this_ = static_cast<CalculateMovementPathRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.room_id_.Destroy();
  this_._impl_.entity_id_.Destroy();
  delete this_._impl_.from_position_;
  delete this_._impl_.to_position_;
  delete this_._impl_.options_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CalculateMovementPathRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CalculateMovementPathRequest(arena);
}
constexpr auto CalculateMovementPathRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CalculateMovementPathRequest),
                                            alignof(CalculateMovementPathRequest));
}
constexpr auto CalculateMovementPathRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CalculateMovementPathRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CalculateMovementPathRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CalculateMovementPathRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CalculateMovementPathRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CalculateMovementPathRequest>(), &CalculateMovementPathRequest::ByteSizeLong,
              &CalculateMovementPathRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CalculateMovementPathRequest, _impl_._cached_size_),
          false,
      },
      &CalculateMovementPathRequest::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CalculateMovementPathRequest_class_data_ =
        CalculateMovementPathRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CalculateMovementPathRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CalculateMovementPathRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CalculateMovementPathRequest_class_data_.tc_table);
  return CalculateMovementPathRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 66, 2>
CalculateMovementPathRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CalculateMovementPathRequest, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CalculateMovementPathRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::CalculateMovementPathRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string room_id = 1 [json_name = "roomId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CalculateMovementPathRequest, _impl_.room_id_)}},
    // string entity_id = 2 [json_name = "entityId"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CalculateMovementPathRequest, _impl_.entity_id_)}},
    // .api.v1alpha1.Position from_position = 3 [json_name = "fromPosition"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(CalculateMovementPathRequest, _impl_.from_position_)}},
    // .api.v1alpha1.Position to_position = 4 [json_name = "toPosition"];
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 1, PROTOBUF_FIELD_OFFSET(CalculateMovementPathRequest, _impl_.to_position_)}},
    // .api.v1alpha1.PathfindingOptions options = 5 [json_name = "options"];
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 2, PROTOBUF_FIELD_OFFSET(CalculateMovementPathRequest, _impl_.options_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string room_id = 1 [json_name = "roomId"];
    {PROTOBUF_FIELD_OFFSET(CalculateMovementPathRequest, _impl_.room_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string entity_id = 2 [json_name = "entityId"];
    {PROTOBUF_FIELD_OFFSET(CalculateMovementPathRequest, _impl_.entity_id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.Position from_position = 3 [json_name = "fromPosition"];
    {PROTOBUF_FIELD_OFFSET(CalculateMovementPathRequest, _impl_.from_position_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.Position to_position = 4 [json_name = "toPosition"];
    {PROTOBUF_FIELD_OFFSET(CalculateMovementPathRequest, _impl_.to_position_), _Internal::kHasBitsOffset + 3, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.PathfindingOptions options = 5 [json_name = "options"];
    {PROTOBUF_FIELD_OFFSET(CalculateMovementPathRequest, _impl_.options_), _Internal::kHasBitsOffset + 4, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::PathfindingOptions>()},
  }},
  {{
    "\51\7\11\0\0\0\0\0"
    "api.v1alpha1.CalculateMovementPathRequest"
    "room_id"
    "entity_id"
  }},
};
PROTOBUF_NOINLINE void CalculateMovementPathRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.CalculateMovementPathRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.room_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.entity_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.from_position_ != nullptr);
      _impl_.from_position_->Clear();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(_impl_.to_position_ != nullptr);
      _impl_.to_position_->Clear();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(_impl_.options_ != nullptr);
      _impl_.options_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CalculateMovementPathRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CalculateMovementPathRequest& this_ = static_cast<const CalculateMovementPathRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CalculateMovementPathRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CalculateMovementPathRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.CalculateMovementPathRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string room_id = 1 [json_name = "roomId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_room_id().empty()) {
      const ::std::string& _s = this_._internal_room_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.CalculateMovementPathRequest.room_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string entity_id = 2 [json_name = "entityId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_entity_id().empty()) {
      const ::std::string& _s = this_._internal_entity_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.CalculateMovementPathRequest.entity_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.Position from_position = 3 [json_name = "fromPosition"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.from_position_, this_._impl_.from_position_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.Position to_position = 4 [json_name = "toPosition"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.to_position_, this_._impl_.to_position_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.PathfindingOptions options = 5 [json_name = "options"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.options_, this_._impl_.options_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.CalculateMovementPathRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CalculateMovementPathRequest::ByteSizeLong(const MessageLite& base) {
  const CalculateMovementPathRequest& this_ = static_cast<const CalculateMovementPathRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CalculateMovementPathRequest::ByteSizeLong() const {
  const CalculateMovementPathRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.CalculateMovementPathRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // string room_id = 1 [json_name = "roomId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_room_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_room_id());
      }
    }
    // string entity_id = 2 [json_name = "entityId"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_entity_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_entity_id());
      }
    }
    // .api.v1alpha1.Position from_position = 3 [json_name = "fromPosition"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.from_position_);
    }
    // .api.v1alpha1.Position to_position = 4 [json_name = "toPosition"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.to_position_);
    }
    // .api.v1alpha1.PathfindingOptions options = 5 [json_name = "options"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.options_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CalculateMovementPathRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CalculateMovementPathRequest*>(&to_msg);
  auto& from = static_cast<const CalculateMovementPathRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.CalculateMovementPathRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_room_id().empty()) {
        _this->_internal_set_room_id(from._internal_room_id());
      } else {
        if (_this->_impl_.room_id_.IsDefault()) {
          _this->_internal_set_room_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_entity_id().empty()) {
        _this->_internal_set_entity_id(from._internal_entity_id());
      } else {
        if (_this->_impl_.entity_id_.IsDefault()) {
          _this->_internal_set_entity_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.from_position_ != nullptr);
      if (_this->_impl_.from_position_ == nullptr) {
        _this->_impl_.from_position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.from_position_);
      } else {
        _this->_impl_.from_position_->MergeFrom(*from._impl_.from_position_);
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(from._impl_.to_position_ != nullptr);
      if (_this->_impl_.to_position_ == nullptr) {
        _this->_impl_.to_position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.to_position_);
      } else {
        _this->_impl_.to_position_->MergeFrom(*from._impl_.to_position_);
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(from._impl_.options_ != nullptr);
      if (_this->_impl_.options_ == nullptr) {
        _this->_impl_.options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_);
      } else {
        _this->_impl_.options_->MergeFrom(*from._impl_.options_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CalculateMovementPathRequest::CopyFrom(const CalculateMovementPathRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.CalculateMovementPathRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CalculateMovementPathRequest::InternalSwap(CalculateMovementPathRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.room_id_, &other->_impl_.room_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entity_id_, &other->_impl_.entity_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CalculateMovementPathRequest, _impl_.options_)
      + sizeof(CalculateMovementPathRequest::_impl_.options_)
      - PROTOBUF_FIELD_OFFSET(CalculateMovementPathRequest, _impl_.from_position_)>(
          reinterpret_cast<char*>(&_impl_.from_position_),
          reinterpret_cast<char*>(&other->_impl_.from_position_));
}

::google::protobuf::Metadata CalculateMovementPathRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PathfindingOptions::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<PathfindingOptions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PathfindingOptions, _impl_._has_bits_);
};

PathfindingOptions::PathfindingOptions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PathfindingOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.PathfindingOptions)
}
PROTOBUF_NDEBUG_INLINE PathfindingOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::PathfindingOptions& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        avoid_entity_types_{visibility, arena, from.avoid_entity_types_} {}

PathfindingOptions::PathfindingOptions(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const PathfindingOptions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PathfindingOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PathfindingOptions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, entity_size_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, entity_size_),
           offsetof(Impl_, algorithm_) -
               offsetof(Impl_, entity_size_) +
               sizeof(Impl_::algorithm_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.PathfindingOptions)
}
PROTOBUF_NDEBUG_INLINE PathfindingOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        avoid_entity_types_{visibility, arena} {}

inline void PathfindingOptions::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, entity_size_),
           0,
           offsetof(Impl_, algorithm_) -
               offsetof(Impl_, entity_size_) +
               sizeof(Impl_::algorithm_));
}
PathfindingOptions::~PathfindingOptions() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.PathfindingOptions)
  SharedDtor(*this);
}
inline void PathfindingOptions::SharedDtor(MessageLite& self) {
  PathfindingOptions& this_ = static_cast<PathfindingOptions&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PathfindingOptions::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PathfindingOptions(arena);
}
constexpr auto PathfindingOptions::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PathfindingOptions, _impl_.avoid_entity_types_) +
          decltype(PathfindingOptions::_impl_.avoid_entity_types_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(PathfindingOptions), alignof(PathfindingOptions), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PathfindingOptions::PlacementNew_,
                                 sizeof(PathfindingOptions),
                                 alignof(PathfindingOptions));
  }
}
constexpr auto PathfindingOptions::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PathfindingOptions_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PathfindingOptions::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PathfindingOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PathfindingOptions::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PathfindingOptions>(), &PathfindingOptions::ByteSizeLong,
              &PathfindingOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PathfindingOptions, _impl_._cached_size_),
          false,
      },
      &PathfindingOptions::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PathfindingOptions_class_data_ =
        PathfindingOptions::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PathfindingOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PathfindingOptions_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PathfindingOptions_class_data_.tc_table);
  return PathfindingOptions_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 66, 2>
PathfindingOptions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PathfindingOptions, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    PathfindingOptions_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::PathfindingOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .api.v1alpha1.PathfindingAlgorithm algorithm = 8 [json_name = "algorithm"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PathfindingOptions, _impl_.algorithm_), 6>(),
     {64, 6, 0, PROTOBUF_FIELD_OFFSET(PathfindingOptions, _impl_.algorithm_)}},
    // .api.v1alpha1.MovementType movement_type = 1 [json_name = "movementType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PathfindingOptions, _impl_.movement_type_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(PathfindingOptions, _impl_.movement_type_)}},
    // double entity_size = 2 [json_name = "entitySize"];
    {::_pbi::TcParser::FastF64S1,
     {17, 0, 0, PROTOBUF_FIELD_OFFSET(PathfindingOptions, _impl_.entity_size_)}},
    // double max_cost = 3 [json_name = "maxCost"];
    {::_pbi::TcParser::FastF64S1,
     {25, 3, 0, PROTOBUF_FIELD_OFFSET(PathfindingOptions, _impl_.max_cost_)}},
    // .api.v1alpha1.PathPreference path_preference = 4 [json_name = "pathPreference"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PathfindingOptions, _impl_.path_preference_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(PathfindingOptions, _impl_.path_preference_)}},
    // repeated string avoid_entity_types = 5 [json_name = "avoidEntityTypes"];
    {::_pbi::TcParser::FastUR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(PathfindingOptions, _impl_.avoid_entity_types_)}},
    // bool allow_difficult_terrain = 6 [json_name = "allowDifficultTerrain"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PathfindingOptions, _impl_.allow_difficult_terrain_), 4>(),
     {48, 4, 0, PROTOBUF_FIELD_OFFSET(PathfindingOptions, _impl_.allow_difficult_terrain_)}},
    // int32 max_alternatives = 7 [json_name = "maxAlternatives"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PathfindingOptions, _impl_.max_alternatives_), 5>(),
     {56, 5, 0, PROTOBUF_FIELD_OFFSET(PathfindingOptions, _impl_.max_alternatives_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .api.v1alpha1.MovementType movement_type = 1 [json_name = "movementType"];
    {PROTOBUF_FIELD_OFFSET(PathfindingOptions, _impl_.movement_type_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // double entity_size = 2 [json_name = "entitySize"];
    {PROTOBUF_FIELD_OFFSET(PathfindingOptions, _impl_.entity_size_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double max_cost = 3 [json_name = "maxCost"];
    {PROTOBUF_FIELD_OFFSET(PathfindingOptions, _impl_.max_cost_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // .api.v1alpha1.PathPreference path_preference = 4 [json_name = "pathPreference"];
    {PROTOBUF_FIELD_OFFSET(PathfindingOptions, _impl_.path_preference_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // repeated string avoid_entity_types = 5 [json_name = "avoidEntityTypes"];
    {PROTOBUF_FIELD_OFFSET(PathfindingOptions, _impl_.avoid_entity_types_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // bool allow_difficult_terrain = 6 [json_name = "allowDifficultTerrain"];
    {PROTOBUF_FIELD_OFFSET(PathfindingOptions, _impl_.allow_difficult_terrain_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // int32 max_alternatives = 7 [json_name = "maxAlternatives"];
    {PROTOBUF_FIELD_OFFSET(PathfindingOptions, _impl_.max_alternatives_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .api.v1alpha1.PathfindingAlgorithm algorithm = 8 [json_name = "algorithm"];
    {PROTOBUF_FIELD_OFFSET(PathfindingOptions, _impl_.algorithm_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\37\0\0\0\0\22\0\0\0\0\0\0\0\0\0\0"
    "api.v1alpha1.PathfindingOptions"
    "avoid_entity_types"
  }},
};
PROTOBUF_NOINLINE void PathfindingOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.PathfindingOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.avoid_entity_types_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    ::memset(&_impl_.entity_size_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.algorithm_) -
        reinterpret_cast<char*>(&_impl_.entity_size_)) + sizeof(_impl_.algorithm_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PathfindingOptions::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PathfindingOptions& this_ = static_cast<const PathfindingOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PathfindingOptions::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PathfindingOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.PathfindingOptions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .api.v1alpha1.MovementType movement_type = 1 [json_name = "movementType"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_movement_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_movement_type(), target);
    }
  }

  // double entity_size = 2 [json_name = "entitySize"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_entity_size()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_entity_size(), target);
    }
  }

  // double max_cost = 3 [json_name = "maxCost"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_max_cost()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_max_cost(), target);
    }
  }

  // .api.v1alpha1.PathPreference path_preference = 4 [json_name = "pathPreference"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_path_preference() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          4, this_._internal_path_preference(), target);
    }
  }

  // repeated string avoid_entity_types = 5 [json_name = "avoidEntityTypes"];
  for (int i = 0, n = this_._internal_avoid_entity_types_size(); i < n; ++i) {
    const auto& s = this_._internal_avoid_entity_types().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.PathfindingOptions.avoid_entity_types");
    target = stream->WriteString(5, s, target);
  }

  // bool allow_difficult_terrain = 6 [json_name = "allowDifficultTerrain"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_allow_difficult_terrain() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          6, this_._internal_allow_difficult_terrain(), target);
    }
  }

  // int32 max_alternatives = 7 [json_name = "maxAlternatives"];
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (this_._internal_max_alternatives() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<7>(
              stream, this_._internal_max_alternatives(), target);
    }
  }

  // .api.v1alpha1.PathfindingAlgorithm algorithm = 8 [json_name = "algorithm"];
  if ((this_._impl_._has_bits_[0] & 0x00000040U) != 0) {
    if (this_._internal_algorithm() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          8, this_._internal_algorithm(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.PathfindingOptions)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PathfindingOptions::ByteSizeLong(const MessageLite& base) {
  const PathfindingOptions& this_ = static_cast<const PathfindingOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PathfindingOptions::ByteSizeLong() const {
  const PathfindingOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.PathfindingOptions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string avoid_entity_types = 5 [json_name = "avoidEntityTypes"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_avoid_entity_types().size());
      for (int i = 0, n = this_._internal_avoid_entity_types().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_avoid_entity_types().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    // double entity_size = 2 [json_name = "entitySize"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_entity_size()) != 0) {
        total_size += 9;
      }
    }
    // .api.v1alpha1.MovementType movement_type = 1 [json_name = "movementType"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_movement_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_movement_type());
      }
    }
    // .api.v1alpha1.PathPreference path_preference = 4 [json_name = "pathPreference"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_path_preference() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_path_preference());
      }
    }
    // double max_cost = 3 [json_name = "maxCost"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_max_cost()) != 0) {
        total_size += 9;
      }
    }
    // bool allow_difficult_terrain = 6 [json_name = "allowDifficultTerrain"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_allow_difficult_terrain() != 0) {
        total_size += 2;
      }
    }
    // int32 max_alternatives = 7 [json_name = "maxAlternatives"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_max_alternatives() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_max_alternatives());
      }
    }
    // .api.v1alpha1.PathfindingAlgorithm algorithm = 8 [json_name = "algorithm"];
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (this_._internal_algorithm() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_algorithm());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PathfindingOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PathfindingOptions*>(&to_msg);
  auto& from = static_cast<const PathfindingOptions&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.PathfindingOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_avoid_entity_types()->MergeFrom(from._internal_avoid_entity_types());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_entity_size()) != 0) {
        _this->_impl_.entity_size_ = from._impl_.entity_size_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_movement_type() != 0) {
        _this->_impl_.movement_type_ = from._impl_.movement_type_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_path_preference() != 0) {
        _this->_impl_.path_preference_ = from._impl_.path_preference_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_max_cost()) != 0) {
        _this->_impl_.max_cost_ = from._impl_.max_cost_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_allow_difficult_terrain() != 0) {
        _this->_impl_.allow_difficult_terrain_ = from._impl_.allow_difficult_terrain_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_max_alternatives() != 0) {
        _this->_impl_.max_alternatives_ = from._impl_.max_alternatives_;
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (from._internal_algorithm() != 0) {
        _this->_impl_.algorithm_ = from._impl_.algorithm_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PathfindingOptions::CopyFrom(const PathfindingOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.PathfindingOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PathfindingOptions::InternalSwap(PathfindingOptions* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.avoid_entity_types_.InternalSwap(&other->_impl_.avoid_entity_types_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PathfindingOptions, _impl_.algorithm_)
      + sizeof(PathfindingOptions::_impl_.algorithm_)
      - PROTOBUF_FIELD_OFFSET(PathfindingOptions, _impl_.entity_size_)>(
          reinterpret_cast<char*>(&_impl_.entity_size_),
          reinterpret_cast<char*>(&other->_impl_.entity_size_));
}

::google::protobuf::Metadata PathfindingOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CalculateMovementPathResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CalculateMovementPathResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CalculateMovementPathResponse, _impl_._has_bits_);
};

void CalculateMovementPathResponse::clear_reachable_area() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reachable_area_.Clear();
}
CalculateMovementPathResponse::CalculateMovementPathResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CalculateMovementPathResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.CalculateMovementPathResponse)
}
PROTOBUF_NDEBUG_INLINE CalculateMovementPathResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::CalculateMovementPathResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        reachable_area_{visibility, arena, from.reachable_area_},
        alternatives_{visibility, arena, from.alternatives_} {}

CalculateMovementPathResponse::CalculateMovementPathResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CalculateMovementPathResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CalculateMovementPathResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CalculateMovementPathResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.path_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.path_)
                : nullptr;
  _impl_.pathfinding_stats_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pathfinding_stats_)
                : nullptr;
  _impl_.is_complete_ = from._impl_.is_complete_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.CalculateMovementPathResponse)
}
PROTOBUF_NDEBUG_INLINE CalculateMovementPathResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        reachable_area_{visibility, arena},
        alternatives_{visibility, arena} {}

inline void CalculateMovementPathResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, path_),
           0,
           offsetof(Impl_, is_complete_) -
               offsetof(Impl_, path_) +
               sizeof(Impl_::is_complete_));
}
CalculateMovementPathResponse::~CalculateMovementPathResponse() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.CalculateMovementPathResponse)
  SharedDtor(*this);
}
inline void CalculateMovementPathResponse::SharedDtor(MessageLite& self) {
  CalculateMovementPathResponse& this_ = static_cast<CalculateMovementPathResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.path_;
  delete this_._impl_.pathfinding_stats_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CalculateMovementPathResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CalculateMovementPathResponse(arena);
}
constexpr auto CalculateMovementPathResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CalculateMovementPathResponse, _impl_.reachable_area_) +
          decltype(CalculateMovementPathResponse::_impl_.reachable_area_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CalculateMovementPathResponse, _impl_.alternatives_) +
          decltype(CalculateMovementPathResponse::_impl_.alternatives_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CalculateMovementPathResponse), alignof(CalculateMovementPathResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CalculateMovementPathResponse::PlacementNew_,
                                 sizeof(CalculateMovementPathResponse),
                                 alignof(CalculateMovementPathResponse));
  }
}
constexpr auto CalculateMovementPathResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CalculateMovementPathResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CalculateMovementPathResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CalculateMovementPathResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CalculateMovementPathResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CalculateMovementPathResponse>(), &CalculateMovementPathResponse::ByteSizeLong,
              &CalculateMovementPathResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CalculateMovementPathResponse, _impl_._cached_size_),
          false,
      },
      &CalculateMovementPathResponse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CalculateMovementPathResponse_class_data_ =
        CalculateMovementPathResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CalculateMovementPathResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CalculateMovementPathResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CalculateMovementPathResponse_class_data_.tc_table);
  return CalculateMovementPathResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 4, 0, 2>
CalculateMovementPathResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CalculateMovementPathResponse, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CalculateMovementPathResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::CalculateMovementPathResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .api.v1alpha1.MovementPath path = 1 [json_name = "path"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CalculateMovementPathResponse, _impl_.path_)}},
    // bool is_complete = 2 [json_name = "isComplete"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CalculateMovementPathResponse, _impl_.is_complete_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(CalculateMovementPathResponse, _impl_.is_complete_)}},
    // repeated .api.v1alpha1.Position reachable_area = 3 [json_name = "reachableArea"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(CalculateMovementPathResponse, _impl_.reachable_area_)}},
    // repeated .api.v1alpha1.MovementPath alternatives = 4 [json_name = "alternatives"];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 2, PROTOBUF_FIELD_OFFSET(CalculateMovementPathResponse, _impl_.alternatives_)}},
    // .api.v1alpha1.PathfindingStats pathfinding_stats = 5 [json_name = "pathfindingStats"];
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 3, PROTOBUF_FIELD_OFFSET(CalculateMovementPathResponse, _impl_.pathfinding_stats_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .api.v1alpha1.MovementPath path = 1 [json_name = "path"];
    {PROTOBUF_FIELD_OFFSET(CalculateMovementPathResponse, _impl_.path_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool is_complete = 2 [json_name = "isComplete"];
    {PROTOBUF_FIELD_OFFSET(CalculateMovementPathResponse, _impl_.is_complete_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated .api.v1alpha1.Position reachable_area = 3 [json_name = "reachableArea"];
    {PROTOBUF_FIELD_OFFSET(CalculateMovementPathResponse, _impl_.reachable_area_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .api.v1alpha1.MovementPath alternatives = 4 [json_name = "alternatives"];
    {PROTOBUF_FIELD_OFFSET(CalculateMovementPathResponse, _impl_.alternatives_), -1, 2, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.PathfindingStats pathfinding_stats = 5 [json_name = "pathfindingStats"];
    {PROTOBUF_FIELD_OFFSET(CalculateMovementPathResponse, _impl_.pathfinding_stats_), _Internal::kHasBitsOffset + 1, 3, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::MovementPath>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::MovementPath>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::PathfindingStats>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CalculateMovementPathResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.CalculateMovementPathResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reachable_area_.Clear();
  _impl_.alternatives_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.path_ != nullptr);
      _impl_.path_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.pathfinding_stats_ != nullptr);
      _impl_.pathfinding_stats_->Clear();
    }
  }
  _impl_.is_complete_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CalculateMovementPathResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CalculateMovementPathResponse& this_ = static_cast<const CalculateMovementPathResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CalculateMovementPathResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CalculateMovementPathResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.CalculateMovementPathResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.MovementPath path = 1 [json_name = "path"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.path_, this_._impl_.path_->GetCachedSize(), target,
        stream);
  }

  // bool is_complete = 2 [json_name = "isComplete"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    if (this_._internal_is_complete() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_is_complete(), target);
    }
  }

  // repeated .api.v1alpha1.Position reachable_area = 3 [json_name = "reachableArea"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_reachable_area_size());
       i < n; i++) {
    const auto& repfield = this_._internal_reachable_area().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .api.v1alpha1.MovementPath alternatives = 4 [json_name = "alternatives"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_alternatives_size());
       i < n; i++) {
    const auto& repfield = this_._internal_alternatives().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // .api.v1alpha1.PathfindingStats pathfinding_stats = 5 [json_name = "pathfindingStats"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.pathfinding_stats_, this_._impl_.pathfinding_stats_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.CalculateMovementPathResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CalculateMovementPathResponse::ByteSizeLong(const MessageLite& base) {
  const CalculateMovementPathResponse& this_ = static_cast<const CalculateMovementPathResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CalculateMovementPathResponse::ByteSizeLong() const {
  const CalculateMovementPathResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.CalculateMovementPathResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.Position reachable_area = 3 [json_name = "reachableArea"];
    {
      total_size += 1UL * this_._internal_reachable_area_size();
      for (const auto& msg : this_._internal_reachable_area()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .api.v1alpha1.MovementPath alternatives = 4 [json_name = "alternatives"];
    {
      total_size += 1UL * this_._internal_alternatives_size();
      for (const auto& msg : this_._internal_alternatives()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // .api.v1alpha1.MovementPath path = 1 [json_name = "path"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.path_);
    }
    // .api.v1alpha1.PathfindingStats pathfinding_stats = 5 [json_name = "pathfindingStats"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pathfinding_stats_);
    }
    // bool is_complete = 2 [json_name = "isComplete"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_is_complete() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CalculateMovementPathResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CalculateMovementPathResponse*>(&to_msg);
  auto& from = static_cast<const CalculateMovementPathResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.CalculateMovementPathResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_reachable_area()->MergeFrom(
      from._internal_reachable_area());
  _this->_internal_mutable_alternatives()->MergeFrom(
      from._internal_alternatives());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.path_ != nullptr);
      if (_this->_impl_.path_ == nullptr) {
        _this->_impl_.path_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.path_);
      } else {
        _this->_impl_.path_->MergeFrom(*from._impl_.path_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.pathfinding_stats_ != nullptr);
      if (_this->_impl_.pathfinding_stats_ == nullptr) {
        _this->_impl_.pathfinding_stats_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pathfinding_stats_);
      } else {
        _this->_impl_.pathfinding_stats_->MergeFrom(*from._impl_.pathfinding_stats_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_is_complete() != 0) {
        _this->_impl_.is_complete_ = from._impl_.is_complete_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CalculateMovementPathResponse::CopyFrom(const CalculateMovementPathResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.CalculateMovementPathResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CalculateMovementPathResponse::InternalSwap(CalculateMovementPathResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.reachable_area_.InternalSwap(&other->_impl_.reachable_area_);
  _impl_.alternatives_.InternalSwap(&other->_impl_.alternatives_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CalculateMovementPathResponse, _impl_.is_complete_)
      + sizeof(CalculateMovementPathResponse::_impl_.is_complete_)
      - PROTOBUF_FIELD_OFFSET(CalculateMovementPathResponse, _impl_.path_)>(
          reinterpret_cast<char*>(&_impl_.path_),
          reinterpret_cast<char*>(&other->_impl_.path_));
}

::google::protobuf::Metadata CalculateMovementPathResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MovementPath::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MovementPath>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MovementPath, _impl_._has_bits_);
};

void MovementPath::clear_positions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.positions_.Clear();
}
MovementPath::MovementPath(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MovementPath_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.MovementPath)
}
PROTOBUF_NDEBUG_INLINE MovementPath::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::MovementPath& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        positions_{visibility, arena, from.positions_},
        terrain_effects_{visibility, arena, from.terrain_effects_},
        description_(arena, from.description_) {}

MovementPath::MovementPath(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MovementPath& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MovementPath_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MovementPath* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_cost_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, total_cost_),
           offsetof(Impl_, path_type_) -
               offsetof(Impl_, total_cost_) +
               sizeof(Impl_::path_type_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.MovementPath)
}
PROTOBUF_NDEBUG_INLINE MovementPath::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        positions_{visibility, arena},
        terrain_effects_{visibility, arena},
        description_(arena) {}

inline void MovementPath::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_cost_),
           0,
           offsetof(Impl_, path_type_) -
               offsetof(Impl_, total_cost_) +
               sizeof(Impl_::path_type_));
}
MovementPath::~MovementPath() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.MovementPath)
  SharedDtor(*this);
}
inline void MovementPath::SharedDtor(MessageLite& self) {
  MovementPath& this_ = static_cast<MovementPath&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.description_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MovementPath::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MovementPath(arena);
}
constexpr auto MovementPath::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(MovementPath, _impl_.positions_) +
          decltype(MovementPath::_impl_.positions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(MovementPath, _impl_.terrain_effects_) +
          decltype(MovementPath::_impl_.terrain_effects_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(MovementPath), alignof(MovementPath), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&MovementPath::PlacementNew_,
                                 sizeof(MovementPath),
                                 alignof(MovementPath));
  }
}
constexpr auto MovementPath::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MovementPath_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MovementPath::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MovementPath>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MovementPath::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MovementPath>(), &MovementPath::ByteSizeLong,
              &MovementPath::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MovementPath, _impl_._cached_size_),
          false,
      },
      &MovementPath::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MovementPath_class_data_ =
        MovementPath::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MovementPath::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MovementPath_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MovementPath_class_data_.tc_table);
  return MovementPath_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 45, 2>
MovementPath::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MovementPath, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    MovementPath_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::MovementPath>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .api.v1alpha1.Position positions = 1 [json_name = "positions"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MovementPath, _impl_.positions_)}},
    // double total_cost = 2 [json_name = "totalCost"];
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(MovementPath, _impl_.total_cost_)}},
    // string description = 3 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(MovementPath, _impl_.description_)}},
    // repeated .api.v1alpha1.TerrainEffect terrain_effects = 4 [json_name = "terrainEffects"];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 1, PROTOBUF_FIELD_OFFSET(MovementPath, _impl_.terrain_effects_)}},
    // .api.v1alpha1.PathPreference path_type = 5 [json_name = "pathType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MovementPath, _impl_.path_type_), 2>(),
     {40, 2, 0, PROTOBUF_FIELD_OFFSET(MovementPath, _impl_.path_type_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .api.v1alpha1.Position positions = 1 [json_name = "positions"];
    {PROTOBUF_FIELD_OFFSET(MovementPath, _impl_.positions_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // double total_cost = 2 [json_name = "totalCost"];
    {PROTOBUF_FIELD_OFFSET(MovementPath, _impl_.total_cost_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // string description = 3 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(MovementPath, _impl_.description_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .api.v1alpha1.TerrainEffect terrain_effects = 4 [json_name = "terrainEffects"];
    {PROTOBUF_FIELD_OFFSET(MovementPath, _impl_.terrain_effects_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.PathPreference path_type = 5 [json_name = "pathType"];
    {PROTOBUF_FIELD_OFFSET(MovementPath, _impl_.path_type_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::TerrainEffect>()},
  }},
  {{
    "\31\0\0\13\0\0\0\0"
    "api.v1alpha1.MovementPath"
    "description"
  }},
};
PROTOBUF_NOINLINE void MovementPath::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.MovementPath)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.positions_.Clear();
  _impl_.terrain_effects_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.description_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x00000006U) != 0) {
    ::memset(&_impl_.total_cost_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.path_type_) -
        reinterpret_cast<char*>(&_impl_.total_cost_)) + sizeof(_impl_.path_type_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MovementPath::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MovementPath& this_ = static_cast<const MovementPath&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MovementPath::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MovementPath& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.MovementPath)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .api.v1alpha1.Position positions = 1 [json_name = "positions"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_positions_size());
       i < n; i++) {
    const auto& repfield = this_._internal_positions().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // double total_cost = 2 [json_name = "totalCost"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_total_cost()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_total_cost(), target);
    }
  }

  // string description = 3 [json_name = "description"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.MovementPath.description");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // repeated .api.v1alpha1.TerrainEffect terrain_effects = 4 [json_name = "terrainEffects"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_terrain_effects_size());
       i < n; i++) {
    const auto& repfield = this_._internal_terrain_effects().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // .api.v1alpha1.PathPreference path_type = 5 [json_name = "pathType"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_path_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          5, this_._internal_path_type(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.MovementPath)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MovementPath::ByteSizeLong(const MessageLite& base) {
  const MovementPath& this_ = static_cast<const MovementPath&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MovementPath::ByteSizeLong() const {
  const MovementPath& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.MovementPath)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.Position positions = 1 [json_name = "positions"];
    {
      total_size += 1UL * this_._internal_positions_size();
      for (const auto& msg : this_._internal_positions()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .api.v1alpha1.TerrainEffect terrain_effects = 4 [json_name = "terrainEffects"];
    {
      total_size += 1UL * this_._internal_terrain_effects_size();
      for (const auto& msg : this_._internal_terrain_effects()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string description = 3 [json_name = "description"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // double total_cost = 2 [json_name = "totalCost"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_total_cost()) != 0) {
        total_size += 9;
      }
    }
    // .api.v1alpha1.PathPreference path_type = 5 [json_name = "pathType"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_path_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_path_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MovementPath::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MovementPath*>(&to_msg);
  auto& from = static_cast<const MovementPath&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.MovementPath)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_positions()->MergeFrom(
      from._internal_positions());
  _this->_internal_mutable_terrain_effects()->MergeFrom(
      from._internal_terrain_effects());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_total_cost()) != 0) {
        _this->_impl_.total_cost_ = from._impl_.total_cost_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_path_type() != 0) {
        _this->_impl_.path_type_ = from._impl_.path_type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MovementPath::CopyFrom(const MovementPath& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.MovementPath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MovementPath::InternalSwap(MovementPath* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.positions_.InternalSwap(&other->_impl_.positions_);
  _impl_.terrain_effects_.InternalSwap(&other->_impl_.terrain_effects_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MovementPath, _impl_.path_type_)
      + sizeof(MovementPath::_impl_.path_type_)
      - PROTOBUF_FIELD_OFFSET(MovementPath, _impl_.total_cost_)>(
          reinterpret_cast<char*>(&_impl_.total_cost_),
          reinterpret_cast<char*>(&other->_impl_.total_cost_));
}

::google::protobuf::Metadata MovementPath::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PathfindingStats::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<PathfindingStats>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PathfindingStats, _impl_._has_bits_);
};

PathfindingStats::PathfindingStats(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PathfindingStats_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.PathfindingStats)
}
PathfindingStats::PathfindingStats(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PathfindingStats& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PathfindingStats_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE PathfindingStats::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void PathfindingStats::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, computation_time_ms_),
           0,
           offsetof(Impl_, memory_bytes_) -
               offsetof(Impl_, computation_time_ms_) +
               sizeof(Impl_::memory_bytes_));
}
PathfindingStats::~PathfindingStats() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.PathfindingStats)
  SharedDtor(*this);
}
inline void PathfindingStats::SharedDtor(MessageLite& self) {
  PathfindingStats& this_ = static_cast<PathfindingStats&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PathfindingStats::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PathfindingStats(arena);
}
constexpr auto PathfindingStats::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PathfindingStats),
                                            alignof(PathfindingStats));
}
constexpr auto PathfindingStats::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PathfindingStats_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PathfindingStats::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PathfindingStats>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PathfindingStats::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PathfindingStats>(), &PathfindingStats::ByteSizeLong,
              &PathfindingStats::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PathfindingStats, _impl_._cached_size_),
          false,
      },
      &PathfindingStats::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PathfindingStats_class_data_ =
        PathfindingStats::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PathfindingStats::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PathfindingStats_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PathfindingStats_class_data_.tc_table);
  return PathfindingStats_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2>
PathfindingStats::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PathfindingStats, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    PathfindingStats_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::PathfindingStats>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 nodes_explored = 1 [json_name = "nodesExplored"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PathfindingStats, _impl_.nodes_explored_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(PathfindingStats, _impl_.nodes_explored_)}},
    // double computation_time_ms = 2 [json_name = "computationTimeMs"];
    {::_pbi::TcParser::FastF64S1,
     {17, 0, 0, PROTOBUF_FIELD_OFFSET(PathfindingStats, _impl_.computation_time_ms_)}},
    // .api.v1alpha1.PathfindingAlgorithm algorithm = 3 [json_name = "algorithm"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PathfindingStats, _impl_.algorithm_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(PathfindingStats, _impl_.algorithm_)}},
    // double cache_hit_ratio = 4 [json_name = "cacheHitRatio"];
    {::_pbi::TcParser::FastF64S1,
     {33, 3, 0, PROTOBUF_FIELD_OFFSET(PathfindingStats, _impl_.cache_hit_ratio_)}},
    // int64 memory_bytes = 5 [json_name = "memoryBytes"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PathfindingStats, _impl_.memory_bytes_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(PathfindingStats, _impl_.memory_bytes_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 nodes_explored = 1 [json_name = "nodesExplored"];
    {PROTOBUF_FIELD_OFFSET(PathfindingStats, _impl_.nodes_explored_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // double computation_time_ms = 2 [json_name = "computationTimeMs"];
    {PROTOBUF_FIELD_OFFSET(PathfindingStats, _impl_.computation_time_ms_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // .api.v1alpha1.PathfindingAlgorithm algorithm = 3 [json_name = "algorithm"];
    {PROTOBUF_FIELD_OFFSET(PathfindingStats, _impl_.algorithm_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // double cache_hit_ratio = 4 [json_name = "cacheHitRatio"];
    {PROTOBUF_FIELD_OFFSET(PathfindingStats, _impl_.cache_hit_ratio_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // int64 memory_bytes = 5 [json_name = "memoryBytes"];
    {PROTOBUF_FIELD_OFFSET(PathfindingStats, _impl_.memory_bytes_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void PathfindingStats::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.PathfindingStats)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    ::memset(&_impl_.computation_time_ms_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.memory_bytes_) -
        reinterpret_cast<char*>(&_impl_.computation_time_ms_)) + sizeof(_impl_.memory_bytes_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PathfindingStats::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PathfindingStats& this_ = static_cast<const PathfindingStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PathfindingStats::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PathfindingStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.PathfindingStats)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 nodes_explored = 1 [json_name = "nodesExplored"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_nodes_explored() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_nodes_explored(), target);
    }
  }

  // double computation_time_ms = 2 [json_name = "computationTimeMs"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_computation_time_ms()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_computation_time_ms(), target);
    }
  }

  // .api.v1alpha1.PathfindingAlgorithm algorithm = 3 [json_name = "algorithm"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_algorithm() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_algorithm(), target);
    }
  }

  // double cache_hit_ratio = 4 [json_name = "cacheHitRatio"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_cache_hit_ratio()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          4, this_._internal_cache_hit_ratio(), target);
    }
  }

  // int64 memory_bytes = 5 [json_name = "memoryBytes"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_memory_bytes() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<5>(
              stream, this_._internal_memory_bytes(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.PathfindingStats)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PathfindingStats::ByteSizeLong(const MessageLite& base) {
  const PathfindingStats& this_ = static_cast<const PathfindingStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PathfindingStats::ByteSizeLong() const {
  const PathfindingStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.PathfindingStats)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // double computation_time_ms = 2 [json_name = "computationTimeMs"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_computation_time_ms()) != 0) {
        total_size += 9;
      }
    }
    // int32 nodes_explored = 1 [json_name = "nodesExplored"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_nodes_explored() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_nodes_explored());
      }
    }
    // .api.v1alpha1.PathfindingAlgorithm algorithm = 3 [json_name = "algorithm"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_algorithm() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_algorithm());
      }
    }
    // double cache_hit_ratio = 4 [json_name = "cacheHitRatio"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_cache_hit_ratio()) != 0) {
        total_size += 9;
      }
    }
    // int64 memory_bytes = 5 [json_name = "memoryBytes"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_memory_bytes() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_memory_bytes());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PathfindingStats::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PathfindingStats*>(&to_msg);
  auto& from = static_cast<const PathfindingStats&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.PathfindingStats)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_computation_time_ms()) != 0) {
        _this->_impl_.computation_time_ms_ = from._impl_.computation_time_ms_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_nodes_explored() != 0) {
        _this->_impl_.nodes_explored_ = from._impl_.nodes_explored_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_algorithm() != 0) {
        _this->_impl_.algorithm_ = from._impl_.algorithm_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_cache_hit_ratio()) != 0) {
        _this->_impl_.cache_hit_ratio_ = from._impl_.cache_hit_ratio_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_memory_bytes() != 0) {
        _this->_impl_.memory_bytes_ = from._impl_.memory_bytes_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PathfindingStats::CopyFrom(const PathfindingStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.PathfindingStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PathfindingStats::InternalSwap(PathfindingStats* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PathfindingStats, _impl_.memory_bytes_)
      + sizeof(PathfindingStats::_impl_.memory_bytes_)
      - PROTOBUF_FIELD_OFFSET(PathfindingStats, _impl_.computation_time_ms_)>(
          reinterpret_cast<char*>(&_impl_.computation_time_ms_),
          reinterpret_cast<char*>(&other->_impl_.computation_time_ms_));
}

::google::protobuf::Metadata PathfindingStats::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryAreaOfEffectRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<QueryAreaOfEffectRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectRequest, _impl_._has_bits_);
};

void QueryAreaOfEffectRequest::clear_center_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.center_position_ != nullptr) _impl_.center_position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
QueryAreaOfEffectRequest::QueryAreaOfEffectRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, QueryAreaOfEffectRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.QueryAreaOfEffectRequest)
}
PROTOBUF_NDEBUG_INLINE QueryAreaOfEffectRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::QueryAreaOfEffectRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        room_id_(arena, from.room_id_) {}

QueryAreaOfEffectRequest::QueryAreaOfEffectRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const QueryAreaOfEffectRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, QueryAreaOfEffectRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryAreaOfEffectRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.center_position_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.center_position_)
                : nullptr;
  _impl_.shape_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.shape_)
                : nullptr;
  _impl_.options_ = ((cached_has_bits & 0x00000008U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.QueryAreaOfEffectRequest)
}
PROTOBUF_NDEBUG_INLINE QueryAreaOfEffectRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        room_id_(arena) {}

inline void QueryAreaOfEffectRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, center_position_),
           0,
           offsetof(Impl_, options_) -
               offsetof(Impl_, center_position_) +
               sizeof(Impl_::options_));
}
QueryAreaOfEffectRequest::~QueryAreaOfEffectRequest() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.QueryAreaOfEffectRequest)
  SharedDtor(*this);
}
inline void QueryAreaOfEffectRequest::SharedDtor(MessageLite& self) {
  QueryAreaOfEffectRequest& this_ = static_cast<QueryAreaOfEffectRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.room_id_.Destroy();
  delete this_._impl_.center_position_;
  delete this_._impl_.shape_;
  delete this_._impl_.options_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL QueryAreaOfEffectRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) QueryAreaOfEffectRequest(arena);
}
constexpr auto QueryAreaOfEffectRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(QueryAreaOfEffectRequest),
                                            alignof(QueryAreaOfEffectRequest));
}
constexpr auto QueryAreaOfEffectRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_QueryAreaOfEffectRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &QueryAreaOfEffectRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<QueryAreaOfEffectRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &QueryAreaOfEffectRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<QueryAreaOfEffectRequest>(), &QueryAreaOfEffectRequest::ByteSizeLong,
              &QueryAreaOfEffectRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectRequest, _impl_._cached_size_),
          false,
      },
      &QueryAreaOfEffectRequest::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull QueryAreaOfEffectRequest_class_data_ =
        QueryAreaOfEffectRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
QueryAreaOfEffectRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&QueryAreaOfEffectRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(QueryAreaOfEffectRequest_class_data_.tc_table);
  return QueryAreaOfEffectRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 3, 53, 2>
QueryAreaOfEffectRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    QueryAreaOfEffectRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::QueryAreaOfEffectRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .api.v1alpha1.AreaOfEffectOptions options = 4 [json_name = "options"];
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 2, PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectRequest, _impl_.options_)}},
    // string room_id = 1 [json_name = "roomId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectRequest, _impl_.room_id_)}},
    // .api.v1alpha1.Position center_position = 2 [json_name = "centerPosition"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectRequest, _impl_.center_position_)}},
    // .api.v1alpha1.AreaOfEffectShape shape = 3 [json_name = "shape"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 1, PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectRequest, _impl_.shape_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string room_id = 1 [json_name = "roomId"];
    {PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectRequest, _impl_.room_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.Position center_position = 2 [json_name = "centerPosition"];
    {PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectRequest, _impl_.center_position_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.AreaOfEffectShape shape = 3 [json_name = "shape"];
    {PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectRequest, _impl_.shape_), _Internal::kHasBitsOffset + 2, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.AreaOfEffectOptions options = 4 [json_name = "options"];
    {PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectRequest, _impl_.options_), _Internal::kHasBitsOffset + 3, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::AreaOfEffectShape>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::AreaOfEffectOptions>()},
  }},
  {{
    "\45\7\0\0\0\0\0\0"
    "api.v1alpha1.QueryAreaOfEffectRequest"
    "room_id"
  }},
};
PROTOBUF_NOINLINE void QueryAreaOfEffectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.QueryAreaOfEffectRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.room_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.center_position_ != nullptr);
      _impl_.center_position_->Clear();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.shape_ != nullptr);
      _impl_.shape_->Clear();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(_impl_.options_ != nullptr);
      _impl_.options_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL QueryAreaOfEffectRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const QueryAreaOfEffectRequest& this_ = static_cast<const QueryAreaOfEffectRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL QueryAreaOfEffectRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const QueryAreaOfEffectRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.QueryAreaOfEffectRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string room_id = 1 [json_name = "roomId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_room_id().empty()) {
      const ::std::string& _s = this_._internal_room_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.QueryAreaOfEffectRequest.room_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.Position center_position = 2 [json_name = "centerPosition"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.center_position_, this_._impl_.center_position_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.AreaOfEffectShape shape = 3 [json_name = "shape"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.shape_, this_._impl_.shape_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.AreaOfEffectOptions options = 4 [json_name = "options"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.options_, this_._impl_.options_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.QueryAreaOfEffectRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t QueryAreaOfEffectRequest::ByteSizeLong(const MessageLite& base) {
  const QueryAreaOfEffectRequest& this_ = static_cast<const QueryAreaOfEffectRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t QueryAreaOfEffectRequest::ByteSizeLong() const {
  const QueryAreaOfEffectRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.QueryAreaOfEffectRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string room_id = 1 [json_name = "roomId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_room_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_room_id());
      }
    }
    // .api.v1alpha1.Position center_position = 2 [json_name = "centerPosition"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.center_position_);
    }
    // .api.v1alpha1.AreaOfEffectShape shape = 3 [json_name = "shape"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.shape_);
    }
    // .api.v1alpha1.AreaOfEffectOptions options = 4 [json_name = "options"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.options_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void QueryAreaOfEffectRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryAreaOfEffectRequest*>(&to_msg);
  auto& from = static_cast<const QueryAreaOfEffectRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.QueryAreaOfEffectRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_room_id().empty()) {
        _this->_internal_set_room_id(from._internal_room_id());
      } else {
        if (_this->_impl_.room_id_.IsDefault()) {
          _this->_internal_set_room_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.center_position_ != nullptr);
      if (_this->_impl_.center_position_ == nullptr) {
        _this->_impl_.center_position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.center_position_);
      } else {
        _this->_impl_.center_position_->MergeFrom(*from._impl_.center_position_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.shape_ != nullptr);
      if (_this->_impl_.shape_ == nullptr) {
        _this->_impl_.shape_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.shape_);
      } else {
        _this->_impl_.shape_->MergeFrom(*from._impl_.shape_);
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(from._impl_.options_ != nullptr);
      if (_this->_impl_.options_ == nullptr) {
        _this->_impl_.options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_);
      } else {
        _this->_impl_.options_->MergeFrom(*from._impl_.options_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryAreaOfEffectRequest::CopyFrom(const QueryAreaOfEffectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.QueryAreaOfEffectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryAreaOfEffectRequest::InternalSwap(QueryAreaOfEffectRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.room_id_, &other->_impl_.room_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectRequest, _impl_.options_)
      + sizeof(QueryAreaOfEffectRequest::_impl_.options_)
      - PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectRequest, _impl_.center_position_)>(
          reinterpret_cast<char*>(&_impl_.center_position_),
          reinterpret_cast<char*>(&other->_impl_.center_position_));
}

::google::protobuf::Metadata QueryAreaOfEffectRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AreaOfEffectShape::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<AreaOfEffectShape>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AreaOfEffectShape, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::api::v1alpha1::AreaOfEffectShape, _impl_._oneof_case_);
};

void AreaOfEffectShape::set_allocated_circle(::api::v1alpha1::CircleParams* PROTOBUF_NULLABLE circle) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_shape_params();
  if (circle) {
    ::google::protobuf::Arena* submessage_arena = circle->GetArena();
    if (message_arena != submessage_arena) {
      circle = ::google::protobuf::internal::GetOwnedMessage(message_arena, circle, submessage_arena);
    }
    set_has_circle();
    _impl_.shape_params_.circle_ = circle;
  }
  // @@protoc_insertion_point(field_set_allocated:api.v1alpha1.AreaOfEffectShape.circle)
}
void AreaOfEffectShape::set_allocated_cone(::api::v1alpha1::ConeParams* PROTOBUF_NULLABLE cone) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_shape_params();
  if (cone) {
    ::google::protobuf::Arena* submessage_arena = cone->GetArena();
    if (message_arena != submessage_arena) {
      cone = ::google::protobuf::internal::GetOwnedMessage(message_arena, cone, submessage_arena);
    }
    set_has_cone();
    _impl_.shape_params_.cone_ = cone;
  }
  // @@protoc_insertion_point(field_set_allocated:api.v1alpha1.AreaOfEffectShape.cone)
}
void AreaOfEffectShape::set_allocated_line(::api::v1alpha1::LineParams* PROTOBUF_NULLABLE line) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_shape_params();
  if (line) {
    ::google::protobuf::Arena* submessage_arena = line->GetArena();
    if (message_arena != submessage_arena) {
      line = ::google::protobuf::internal::GetOwnedMessage(message_arena, line, submessage_arena);
    }
    set_has_line();
    _impl_.shape_params_.line_ = line;
  }
  // @@protoc_insertion_point(field_set_allocated:api.v1alpha1.AreaOfEffectShape.line)
}
void AreaOfEffectShape::set_allocated_rectangle(::api::v1alpha1::RectangleParams* PROTOBUF_NULLABLE rectangle) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_shape_params();
  if (rectangle) {
    ::google::protobuf::Arena* submessage_arena = rectangle->GetArena();
    if (message_arena != submessage_arena) {
      rectangle = ::google::protobuf::internal::GetOwnedMessage(message_arena, rectangle, submessage_arena);
    }
    set_has_rectangle();
    _impl_.shape_params_.rectangle_ = rectangle;
  }
  // @@protoc_insertion_point(field_set_allocated:api.v1alpha1.AreaOfEffectShape.rectangle)
}
void AreaOfEffectShape::set_allocated_custom(::api::v1alpha1::CustomShapeParams* PROTOBUF_NULLABLE custom) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_shape_params();
  if (custom) {
    ::google::protobuf::Arena* submessage_arena = custom->GetArena();
    if (message_arena != submessage_arena) {
      custom = ::google::protobuf::internal::GetOwnedMessage(message_arena, custom, submessage_arena);
    }
    set_has_custom();
    _impl_.shape_params_.custom_ = custom;
  }
  // @@protoc_insertion_point(field_set_allocated:api.v1alpha1.AreaOfEffectShape.custom)
}
AreaOfEffectShape::AreaOfEffectShape(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AreaOfEffectShape_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.AreaOfEffectShape)
}
PROTOBUF_NDEBUG_INLINE AreaOfEffectShape::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::AreaOfEffectShape& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        shape_params_{},
        _oneof_case_{from._oneof_case_[0]} {}

AreaOfEffectShape::AreaOfEffectShape(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const AreaOfEffectShape& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AreaOfEffectShape_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AreaOfEffectShape* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.shape_type_ = from._impl_.shape_type_;
  switch (shape_params_case()) {
    case SHAPE_PARAMS_NOT_SET:
      break;
      case kCircle:
        _impl_.shape_params_.circle_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.shape_params_.circle_);
        break;
      case kCone:
        _impl_.shape_params_.cone_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.shape_params_.cone_);
        break;
      case kLine:
        _impl_.shape_params_.line_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.shape_params_.line_);
        break;
      case kRectangle:
        _impl_.shape_params_.rectangle_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.shape_params_.rectangle_);
        break;
      case kCustom:
        _impl_.shape_params_.custom_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.shape_params_.custom_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.AreaOfEffectShape)
}
PROTOBUF_NDEBUG_INLINE AreaOfEffectShape::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        shape_params_{},
        _oneof_case_{} {}

inline void AreaOfEffectShape::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.shape_type_ = {};
}
AreaOfEffectShape::~AreaOfEffectShape() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.AreaOfEffectShape)
  SharedDtor(*this);
}
inline void AreaOfEffectShape::SharedDtor(MessageLite& self) {
  AreaOfEffectShape& this_ = static_cast<AreaOfEffectShape&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_shape_params()) {
    this_.clear_shape_params();
  }
  this_._impl_.~Impl_();
}

void AreaOfEffectShape::clear_shape_params() {
// @@protoc_insertion_point(one_of_clear_start:api.v1alpha1.AreaOfEffectShape)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (shape_params_case()) {
    case kCircle: {
      if (GetArena() == nullptr) {
        delete _impl_.shape_params_.circle_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.shape_params_.circle_);
      }
      break;
    }
    case kCone: {
      if (GetArena() == nullptr) {
        delete _impl_.shape_params_.cone_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.shape_params_.cone_);
      }
      break;
    }
    case kLine: {
      if (GetArena() == nullptr) {
        delete _impl_.shape_params_.line_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.shape_params_.line_);
      }
      break;
    }
    case kRectangle: {
      if (GetArena() == nullptr) {
        delete _impl_.shape_params_.rectangle_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.shape_params_.rectangle_);
      }
      break;
    }
    case kCustom: {
      if (GetArena() == nullptr) {
        delete _impl_.shape_params_.custom_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.shape_params_.custom_);
      }
      break;
    }
    case SHAPE_PARAMS_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = SHAPE_PARAMS_NOT_SET;
}


inline void* PROTOBUF_NONNULL AreaOfEffectShape::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AreaOfEffectShape(arena);
}
constexpr auto AreaOfEffectShape::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AreaOfEffectShape),
                                            alignof(AreaOfEffectShape));
}
constexpr auto AreaOfEffectShape::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AreaOfEffectShape_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AreaOfEffectShape::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AreaOfEffectShape>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AreaOfEffectShape::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AreaOfEffectShape>(), &AreaOfEffectShape::ByteSizeLong,
              &AreaOfEffectShape::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AreaOfEffectShape, _impl_._cached_size_),
          false,
      },
      &AreaOfEffectShape::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull AreaOfEffectShape_class_data_ =
        AreaOfEffectShape::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
AreaOfEffectShape::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AreaOfEffectShape_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AreaOfEffectShape_class_data_.tc_table);
  return AreaOfEffectShape_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 6, 5, 0, 2>
AreaOfEffectShape::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AreaOfEffectShape, _impl_._has_bits_),
    0, // no _extensions_
    6, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    AreaOfEffectShape_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::AreaOfEffectShape>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .api.v1alpha1.AreaOfEffectType shape_type = 1 [json_name = "shapeType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AreaOfEffectShape, _impl_.shape_type_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AreaOfEffectShape, _impl_.shape_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .api.v1alpha1.AreaOfEffectType shape_type = 1 [json_name = "shapeType"];
    {PROTOBUF_FIELD_OFFSET(AreaOfEffectShape, _impl_.shape_type_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .api.v1alpha1.CircleParams circle = 2 [json_name = "circle"];
    {PROTOBUF_FIELD_OFFSET(AreaOfEffectShape, _impl_.shape_params_.circle_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.ConeParams cone = 3 [json_name = "cone"];
    {PROTOBUF_FIELD_OFFSET(AreaOfEffectShape, _impl_.shape_params_.cone_), _Internal::kOneofCaseOffset + 0, 1, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.LineParams line = 4 [json_name = "line"];
    {PROTOBUF_FIELD_OFFSET(AreaOfEffectShape, _impl_.shape_params_.line_), _Internal::kOneofCaseOffset + 0, 2, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.RectangleParams rectangle = 5 [json_name = "rectangle"];
    {PROTOBUF_FIELD_OFFSET(AreaOfEffectShape, _impl_.shape_params_.rectangle_), _Internal::kOneofCaseOffset + 0, 3, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.CustomShapeParams custom = 6 [json_name = "custom"];
    {PROTOBUF_FIELD_OFFSET(AreaOfEffectShape, _impl_.shape_params_.custom_), _Internal::kOneofCaseOffset + 0, 4, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::CircleParams>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::ConeParams>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::LineParams>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RectangleParams>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::CustomShapeParams>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void AreaOfEffectShape::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.AreaOfEffectShape)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.shape_type_ = 0;
  clear_shape_params();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL AreaOfEffectShape::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const AreaOfEffectShape& this_ = static_cast<const AreaOfEffectShape&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL AreaOfEffectShape::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const AreaOfEffectShape& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.AreaOfEffectShape)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .api.v1alpha1.AreaOfEffectType shape_type = 1 [json_name = "shapeType"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_shape_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_shape_type(), target);
    }
  }

  switch (this_.shape_params_case()) {
    case kCircle: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *this_._impl_.shape_params_.circle_, this_._impl_.shape_params_.circle_->GetCachedSize(), target,
          stream);
      break;
    }
    case kCone: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *this_._impl_.shape_params_.cone_, this_._impl_.shape_params_.cone_->GetCachedSize(), target,
          stream);
      break;
    }
    case kLine: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *this_._impl_.shape_params_.line_, this_._impl_.shape_params_.line_->GetCachedSize(), target,
          stream);
      break;
    }
    case kRectangle: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, *this_._impl_.shape_params_.rectangle_, this_._impl_.shape_params_.rectangle_->GetCachedSize(), target,
          stream);
      break;
    }
    case kCustom: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, *this_._impl_.shape_params_.custom_, this_._impl_.shape_params_.custom_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.AreaOfEffectShape)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AreaOfEffectShape::ByteSizeLong(const MessageLite& base) {
  const AreaOfEffectShape& this_ = static_cast<const AreaOfEffectShape&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AreaOfEffectShape::ByteSizeLong() const {
  const AreaOfEffectShape& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.AreaOfEffectShape)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .api.v1alpha1.AreaOfEffectType shape_type = 1 [json_name = "shapeType"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_shape_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_shape_type());
      }
    }
  }
  switch (this_.shape_params_case()) {
    // .api.v1alpha1.CircleParams circle = 2 [json_name = "circle"];
    case kCircle: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.shape_params_.circle_);
      break;
    }
    // .api.v1alpha1.ConeParams cone = 3 [json_name = "cone"];
    case kCone: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.shape_params_.cone_);
      break;
    }
    // .api.v1alpha1.LineParams line = 4 [json_name = "line"];
    case kLine: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.shape_params_.line_);
      break;
    }
    // .api.v1alpha1.RectangleParams rectangle = 5 [json_name = "rectangle"];
    case kRectangle: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.shape_params_.rectangle_);
      break;
    }
    // .api.v1alpha1.CustomShapeParams custom = 6 [json_name = "custom"];
    case kCustom: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.shape_params_.custom_);
      break;
    }
    case SHAPE_PARAMS_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void AreaOfEffectShape::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AreaOfEffectShape*>(&to_msg);
  auto& from = static_cast<const AreaOfEffectShape&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.AreaOfEffectShape)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (from._internal_shape_type() != 0) {
      _this->_impl_.shape_type_ = from._impl_.shape_type_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_shape_params();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kCircle: {
        if (oneof_needs_init) {
          _this->_impl_.shape_params_.circle_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.shape_params_.circle_);
        } else {
          _this->_impl_.shape_params_.circle_->MergeFrom(*from._impl_.shape_params_.circle_);
        }
        break;
      }
      case kCone: {
        if (oneof_needs_init) {
          _this->_impl_.shape_params_.cone_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.shape_params_.cone_);
        } else {
          _this->_impl_.shape_params_.cone_->MergeFrom(*from._impl_.shape_params_.cone_);
        }
        break;
      }
      case kLine: {
        if (oneof_needs_init) {
          _this->_impl_.shape_params_.line_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.shape_params_.line_);
        } else {
          _this->_impl_.shape_params_.line_->MergeFrom(*from._impl_.shape_params_.line_);
        }
        break;
      }
      case kRectangle: {
        if (oneof_needs_init) {
          _this->_impl_.shape_params_.rectangle_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.shape_params_.rectangle_);
        } else {
          _this->_impl_.shape_params_.rectangle_->MergeFrom(*from._impl_.shape_params_.rectangle_);
        }
        break;
      }
      case kCustom: {
        if (oneof_needs_init) {
          _this->_impl_.shape_params_.custom_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.shape_params_.custom_);
        } else {
          _this->_impl_.shape_params_.custom_->MergeFrom(*from._impl_.shape_params_.custom_);
        }
        break;
      }
      case SHAPE_PARAMS_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AreaOfEffectShape::CopyFrom(const AreaOfEffectShape& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.AreaOfEffectShape)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AreaOfEffectShape::InternalSwap(AreaOfEffectShape* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.shape_type_, other->_impl_.shape_type_);
  swap(_impl_.shape_params_, other->_impl_.shape_params_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata AreaOfEffectShape::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CircleParams::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CircleParams>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CircleParams, _impl_._has_bits_);
};

CircleParams::CircleParams(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CircleParams_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.CircleParams)
}
CircleParams::CircleParams(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CircleParams& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CircleParams_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CircleParams::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CircleParams::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.radius_ = {};
}
CircleParams::~CircleParams() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.CircleParams)
  SharedDtor(*this);
}
inline void CircleParams::SharedDtor(MessageLite& self) {
  CircleParams& this_ = static_cast<CircleParams&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CircleParams::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CircleParams(arena);
}
constexpr auto CircleParams::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CircleParams),
                                            alignof(CircleParams));
}
constexpr auto CircleParams::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CircleParams_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CircleParams::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CircleParams>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CircleParams::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CircleParams>(), &CircleParams::ByteSizeLong,
              &CircleParams::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CircleParams, _impl_._cached_size_),
          false,
      },
      &CircleParams::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CircleParams_class_data_ =
        CircleParams::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CircleParams::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CircleParams_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CircleParams_class_data_.tc_table);
  return CircleParams_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
CircleParams::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CircleParams, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CircleParams_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::CircleParams>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double radius = 1 [json_name = "radius"];
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(CircleParams, _impl_.radius_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double radius = 1 [json_name = "radius"];
    {PROTOBUF_FIELD_OFFSET(CircleParams, _impl_.radius_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CircleParams::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.CircleParams)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.radius_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CircleParams::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CircleParams& this_ = static_cast<const CircleParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CircleParams::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CircleParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.CircleParams)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double radius = 1 [json_name = "radius"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_radius()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          1, this_._internal_radius(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.CircleParams)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CircleParams::ByteSizeLong(const MessageLite& base) {
  const CircleParams& this_ = static_cast<const CircleParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CircleParams::ByteSizeLong() const {
  const CircleParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.CircleParams)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // double radius = 1 [json_name = "radius"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_radius()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CircleParams::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CircleParams*>(&to_msg);
  auto& from = static_cast<const CircleParams&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.CircleParams)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint64_t>(from._internal_radius()) != 0) {
      _this->_impl_.radius_ = from._impl_.radius_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CircleParams::CopyFrom(const CircleParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.CircleParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CircleParams::InternalSwap(CircleParams* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.radius_, other->_impl_.radius_);
}

::google::protobuf::Metadata CircleParams::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ConeParams::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ConeParams>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ConeParams, _impl_._has_bits_);
};

ConeParams::ConeParams(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ConeParams_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.ConeParams)
}
ConeParams::ConeParams(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ConeParams& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ConeParams_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE ConeParams::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ConeParams::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, radius_),
           0,
           offsetof(Impl_, angle_) -
               offsetof(Impl_, radius_) +
               sizeof(Impl_::angle_));
}
ConeParams::~ConeParams() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.ConeParams)
  SharedDtor(*this);
}
inline void ConeParams::SharedDtor(MessageLite& self) {
  ConeParams& this_ = static_cast<ConeParams&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ConeParams::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ConeParams(arena);
}
constexpr auto ConeParams::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ConeParams),
                                            alignof(ConeParams));
}
constexpr auto ConeParams::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ConeParams_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ConeParams::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ConeParams>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ConeParams::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ConeParams>(), &ConeParams::ByteSizeLong,
              &ConeParams::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ConeParams, _impl_._cached_size_),
          false,
      },
      &ConeParams::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ConeParams_class_data_ =
        ConeParams::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ConeParams::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ConeParams_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ConeParams_class_data_.tc_table);
  return ConeParams_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
ConeParams::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ConeParams, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ConeParams_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::ConeParams>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double radius = 1 [json_name = "radius"];
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(ConeParams, _impl_.radius_)}},
    // double direction = 2 [json_name = "direction"];
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(ConeParams, _impl_.direction_)}},
    // double angle = 3 [json_name = "angle"];
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(ConeParams, _impl_.angle_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double radius = 1 [json_name = "radius"];
    {PROTOBUF_FIELD_OFFSET(ConeParams, _impl_.radius_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double direction = 2 [json_name = "direction"];
    {PROTOBUF_FIELD_OFFSET(ConeParams, _impl_.direction_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double angle = 3 [json_name = "angle"];
    {PROTOBUF_FIELD_OFFSET(ConeParams, _impl_.angle_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void ConeParams::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.ConeParams)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    ::memset(&_impl_.radius_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.angle_) -
        reinterpret_cast<char*>(&_impl_.radius_)) + sizeof(_impl_.angle_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ConeParams::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ConeParams& this_ = static_cast<const ConeParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ConeParams::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ConeParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.ConeParams)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double radius = 1 [json_name = "radius"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_radius()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          1, this_._internal_radius(), target);
    }
  }

  // double direction = 2 [json_name = "direction"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_direction()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_direction(), target);
    }
  }

  // double angle = 3 [json_name = "angle"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_angle()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_angle(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.ConeParams)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ConeParams::ByteSizeLong(const MessageLite& base) {
  const ConeParams& this_ = static_cast<const ConeParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ConeParams::ByteSizeLong() const {
  const ConeParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.ConeParams)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // double radius = 1 [json_name = "radius"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_radius()) != 0) {
        total_size += 9;
      }
    }
    // double direction = 2 [json_name = "direction"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_direction()) != 0) {
        total_size += 9;
      }
    }
    // double angle = 3 [json_name = "angle"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_angle()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ConeParams::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ConeParams*>(&to_msg);
  auto& from = static_cast<const ConeParams&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.ConeParams)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_radius()) != 0) {
        _this->_impl_.radius_ = from._impl_.radius_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_direction()) != 0) {
        _this->_impl_.direction_ = from._impl_.direction_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_angle()) != 0) {
        _this->_impl_.angle_ = from._impl_.angle_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConeParams::CopyFrom(const ConeParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.ConeParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ConeParams::InternalSwap(ConeParams* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConeParams, _impl_.angle_)
      + sizeof(ConeParams::_impl_.angle_)
      - PROTOBUF_FIELD_OFFSET(ConeParams, _impl_.radius_)>(
          reinterpret_cast<char*>(&_impl_.radius_),
          reinterpret_cast<char*>(&other->_impl_.radius_));
}

::google::protobuf::Metadata ConeParams::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LineParams::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<LineParams>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LineParams, _impl_._has_bits_);
};

LineParams::LineParams(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LineParams_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.LineParams)
}
LineParams::LineParams(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LineParams& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LineParams_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE LineParams::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void LineParams::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, length_),
           0,
           offsetof(Impl_, direction_) -
               offsetof(Impl_, length_) +
               sizeof(Impl_::direction_));
}
LineParams::~LineParams() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.LineParams)
  SharedDtor(*this);
}
inline void LineParams::SharedDtor(MessageLite& self) {
  LineParams& this_ = static_cast<LineParams&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LineParams::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LineParams(arena);
}
constexpr auto LineParams::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LineParams),
                                            alignof(LineParams));
}
constexpr auto LineParams::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LineParams_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LineParams::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LineParams>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LineParams::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LineParams>(), &LineParams::ByteSizeLong,
              &LineParams::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LineParams, _impl_._cached_size_),
          false,
      },
      &LineParams::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LineParams_class_data_ =
        LineParams::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LineParams::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LineParams_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LineParams_class_data_.tc_table);
  return LineParams_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
LineParams::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LineParams, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    LineParams_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::LineParams>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double length = 1 [json_name = "length"];
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(LineParams, _impl_.length_)}},
    // double width = 2 [json_name = "width"];
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(LineParams, _impl_.width_)}},
    // double direction = 3 [json_name = "direction"];
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(LineParams, _impl_.direction_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double length = 1 [json_name = "length"];
    {PROTOBUF_FIELD_OFFSET(LineParams, _impl_.length_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double width = 2 [json_name = "width"];
    {PROTOBUF_FIELD_OFFSET(LineParams, _impl_.width_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double direction = 3 [json_name = "direction"];
    {PROTOBUF_FIELD_OFFSET(LineParams, _impl_.direction_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void LineParams::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.LineParams)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    ::memset(&_impl_.length_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.direction_) -
        reinterpret_cast<char*>(&_impl_.length_)) + sizeof(_impl_.direction_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LineParams::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LineParams& this_ = static_cast<const LineParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LineParams::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LineParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.LineParams)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double length = 1 [json_name = "length"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_length()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          1, this_._internal_length(), target);
    }
  }

  // double width = 2 [json_name = "width"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_width()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_width(), target);
    }
  }

  // double direction = 3 [json_name = "direction"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_direction()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_direction(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.LineParams)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LineParams::ByteSizeLong(const MessageLite& base) {
  const LineParams& this_ = static_cast<const LineParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LineParams::ByteSizeLong() const {
  const LineParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.LineParams)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // double length = 1 [json_name = "length"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_length()) != 0) {
        total_size += 9;
      }
    }
    // double width = 2 [json_name = "width"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_width()) != 0) {
        total_size += 9;
      }
    }
    // double direction = 3 [json_name = "direction"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_direction()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LineParams::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LineParams*>(&to_msg);
  auto& from = static_cast<const LineParams&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.LineParams)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_length()) != 0) {
        _this->_impl_.length_ = from._impl_.length_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_width()) != 0) {
        _this->_impl_.width_ = from._impl_.width_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_direction()) != 0) {
        _this->_impl_.direction_ = from._impl_.direction_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LineParams::CopyFrom(const LineParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.LineParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LineParams::InternalSwap(LineParams* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LineParams, _impl_.direction_)
      + sizeof(LineParams::_impl_.direction_)
      - PROTOBUF_FIELD_OFFSET(LineParams, _impl_.length_)>(
          reinterpret_cast<char*>(&_impl_.length_),
          reinterpret_cast<char*>(&other->_impl_.length_));
}

::google::protobuf::Metadata LineParams::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RectangleParams::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RectangleParams>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RectangleParams, _impl_._has_bits_);
};

RectangleParams::RectangleParams(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RectangleParams_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.RectangleParams)
}
RectangleParams::RectangleParams(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RectangleParams& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RectangleParams_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE RectangleParams::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void RectangleParams::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, width_),
           0,
           offsetof(Impl_, rotation_) -
               offsetof(Impl_, width_) +
               sizeof(Impl_::rotation_));
}
RectangleParams::~RectangleParams() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.RectangleParams)
  SharedDtor(*this);
}
inline void RectangleParams::SharedDtor(MessageLite& self) {
  RectangleParams& this_ = static_cast<RectangleParams&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RectangleParams::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RectangleParams(arena);
}
constexpr auto RectangleParams::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RectangleParams),
                                            alignof(RectangleParams));
}
constexpr auto RectangleParams::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RectangleParams_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RectangleParams::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RectangleParams>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RectangleParams::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RectangleParams>(), &RectangleParams::ByteSizeLong,
              &RectangleParams::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RectangleParams, _impl_._cached_size_),
          false,
      },
      &RectangleParams::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RectangleParams_class_data_ =
        RectangleParams::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RectangleParams::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RectangleParams_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RectangleParams_class_data_.tc_table);
  return RectangleParams_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
RectangleParams::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RectangleParams, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RectangleParams_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::RectangleParams>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double width = 1 [json_name = "width"];
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(RectangleParams, _impl_.width_)}},
    // double height = 2 [json_name = "height"];
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(RectangleParams, _impl_.height_)}},
    // double rotation = 3 [json_name = "rotation"];
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(RectangleParams, _impl_.rotation_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double width = 1 [json_name = "width"];
    {PROTOBUF_FIELD_OFFSET(RectangleParams, _impl_.width_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double height = 2 [json_name = "height"];
    {PROTOBUF_FIELD_OFFSET(RectangleParams, _impl_.height_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double rotation = 3 [json_name = "rotation"];
    {PROTOBUF_FIELD_OFFSET(RectangleParams, _impl_.rotation_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void RectangleParams::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.RectangleParams)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    ::memset(&_impl_.width_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.rotation_) -
        reinterpret_cast<char*>(&_impl_.width_)) + sizeof(_impl_.rotation_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RectangleParams::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RectangleParams& this_ = static_cast<const RectangleParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RectangleParams::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RectangleParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.RectangleParams)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double width = 1 [json_name = "width"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_width()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          1, this_._internal_width(), target);
    }
  }

  // double height = 2 [json_name = "height"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_height()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_height(), target);
    }
  }

  // double rotation = 3 [json_name = "rotation"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_rotation()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_rotation(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.RectangleParams)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RectangleParams::ByteSizeLong(const MessageLite& base) {
  const RectangleParams& this_ = static_cast<const RectangleParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RectangleParams::ByteSizeLong() const {
  const RectangleParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.RectangleParams)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // double width = 1 [json_name = "width"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_width()) != 0) {
        total_size += 9;
      }
    }
    // double height = 2 [json_name = "height"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_height()) != 0) {
        total_size += 9;
      }
    }
    // double rotation = 3 [json_name = "rotation"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_rotation()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RectangleParams::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RectangleParams*>(&to_msg);
  auto& from = static_cast<const RectangleParams&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.RectangleParams)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_width()) != 0) {
        _this->_impl_.width_ = from._impl_.width_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_height()) != 0) {
        _this->_impl_.height_ = from._impl_.height_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_rotation()) != 0) {
        _this->_impl_.rotation_ = from._impl_.rotation_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RectangleParams::CopyFrom(const RectangleParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.RectangleParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RectangleParams::InternalSwap(RectangleParams* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RectangleParams, _impl_.rotation_)
      + sizeof(RectangleParams::_impl_.rotation_)
      - PROTOBUF_FIELD_OFFSET(RectangleParams, _impl_.width_)>(
          reinterpret_cast<char*>(&_impl_.width_),
          reinterpret_cast<char*>(&other->_impl_.width_));
}

::google::protobuf::Metadata RectangleParams::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CustomShapeParams::_Internal {
 public:
};

void CustomShapeParams::clear_vertices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vertices_.Clear();
}
CustomShapeParams::CustomShapeParams(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CustomShapeParams_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.CustomShapeParams)
}
PROTOBUF_NDEBUG_INLINE CustomShapeParams::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::CustomShapeParams& from_msg)
      : vertices_{visibility, arena, from.vertices_},
        _cached_size_{0} {}

CustomShapeParams::CustomShapeParams(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CustomShapeParams& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CustomShapeParams_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CustomShapeParams* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.CustomShapeParams)
}
PROTOBUF_NDEBUG_INLINE CustomShapeParams::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : vertices_{visibility, arena},
        _cached_size_{0} {}

inline void CustomShapeParams::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CustomShapeParams::~CustomShapeParams() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.CustomShapeParams)
  SharedDtor(*this);
}
inline void CustomShapeParams::SharedDtor(MessageLite& self) {
  CustomShapeParams& this_ = static_cast<CustomShapeParams&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CustomShapeParams::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CustomShapeParams(arena);
}
constexpr auto CustomShapeParams::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CustomShapeParams, _impl_.vertices_) +
          decltype(CustomShapeParams::_impl_.vertices_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CustomShapeParams), alignof(CustomShapeParams), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CustomShapeParams::PlacementNew_,
                                 sizeof(CustomShapeParams),
                                 alignof(CustomShapeParams));
  }
}
constexpr auto CustomShapeParams::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CustomShapeParams_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CustomShapeParams::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CustomShapeParams>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CustomShapeParams::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CustomShapeParams>(), &CustomShapeParams::ByteSizeLong,
              &CustomShapeParams::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CustomShapeParams, _impl_._cached_size_),
          false,
      },
      &CustomShapeParams::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CustomShapeParams_class_data_ =
        CustomShapeParams::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CustomShapeParams::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CustomShapeParams_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CustomShapeParams_class_data_.tc_table);
  return CustomShapeParams_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
CustomShapeParams::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CustomShapeParams_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::CustomShapeParams>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .api.v1alpha1.Position vertices = 1 [json_name = "vertices"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CustomShapeParams, _impl_.vertices_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .api.v1alpha1.Position vertices = 1 [json_name = "vertices"];
    {PROTOBUF_FIELD_OFFSET(CustomShapeParams, _impl_.vertices_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CustomShapeParams::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.CustomShapeParams)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.vertices_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CustomShapeParams::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CustomShapeParams& this_ = static_cast<const CustomShapeParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CustomShapeParams::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CustomShapeParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.CustomShapeParams)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .api.v1alpha1.Position vertices = 1 [json_name = "vertices"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_vertices_size());
       i < n; i++) {
    const auto& repfield = this_._internal_vertices().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.CustomShapeParams)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CustomShapeParams::ByteSizeLong(const MessageLite& base) {
  const CustomShapeParams& this_ = static_cast<const CustomShapeParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CustomShapeParams::ByteSizeLong() const {
  const CustomShapeParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.CustomShapeParams)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.Position vertices = 1 [json_name = "vertices"];
    {
      total_size += 1UL * this_._internal_vertices_size();
      for (const auto& msg : this_._internal_vertices()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CustomShapeParams::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CustomShapeParams*>(&to_msg);
  auto& from = static_cast<const CustomShapeParams&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.CustomShapeParams)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_vertices()->MergeFrom(
      from._internal_vertices());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CustomShapeParams::CopyFrom(const CustomShapeParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.CustomShapeParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CustomShapeParams::InternalSwap(CustomShapeParams* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.vertices_.InternalSwap(&other->_impl_.vertices_);
}

::google::protobuf::Metadata CustomShapeParams::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AreaOfEffectOptions::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<AreaOfEffectOptions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AreaOfEffectOptions, _impl_._has_bits_);
};

AreaOfEffectOptions::AreaOfEffectOptions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AreaOfEffectOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.AreaOfEffectOptions)
}
PROTOBUF_NDEBUG_INLINE AreaOfEffectOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::AreaOfEffectOptions& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        include_entity_types_{visibility, arena, from.include_entity_types_} {}

AreaOfEffectOptions::AreaOfEffectOptions(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const AreaOfEffectOptions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AreaOfEffectOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AreaOfEffectOptions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, require_line_of_sight_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, require_line_of_sight_),
           offsetof(Impl_, cover_rules_) -
               offsetof(Impl_, require_line_of_sight_) +
               sizeof(Impl_::cover_rules_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.AreaOfEffectOptions)
}
PROTOBUF_NDEBUG_INLINE AreaOfEffectOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        include_entity_types_{visibility, arena} {}

inline void AreaOfEffectOptions::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, require_line_of_sight_),
           0,
           offsetof(Impl_, cover_rules_) -
               offsetof(Impl_, require_line_of_sight_) +
               sizeof(Impl_::cover_rules_));
}
AreaOfEffectOptions::~AreaOfEffectOptions() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.AreaOfEffectOptions)
  SharedDtor(*this);
}
inline void AreaOfEffectOptions::SharedDtor(MessageLite& self) {
  AreaOfEffectOptions& this_ = static_cast<AreaOfEffectOptions&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL AreaOfEffectOptions::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AreaOfEffectOptions(arena);
}
constexpr auto AreaOfEffectOptions::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(AreaOfEffectOptions, _impl_.include_entity_types_) +
          decltype(AreaOfEffectOptions::_impl_.include_entity_types_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(AreaOfEffectOptions), alignof(AreaOfEffectOptions), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&AreaOfEffectOptions::PlacementNew_,
                                 sizeof(AreaOfEffectOptions),
                                 alignof(AreaOfEffectOptions));
  }
}
constexpr auto AreaOfEffectOptions::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AreaOfEffectOptions_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AreaOfEffectOptions::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AreaOfEffectOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AreaOfEffectOptions::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AreaOfEffectOptions>(), &AreaOfEffectOptions::ByteSizeLong,
              &AreaOfEffectOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AreaOfEffectOptions, _impl_._cached_size_),
          false,
      },
      &AreaOfEffectOptions::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull AreaOfEffectOptions_class_data_ =
        AreaOfEffectOptions::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
AreaOfEffectOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AreaOfEffectOptions_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AreaOfEffectOptions_class_data_.tc_table);
  return AreaOfEffectOptions_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 61, 2>
AreaOfEffectOptions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AreaOfEffectOptions, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    AreaOfEffectOptions_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::AreaOfEffectOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string include_entity_types = 1 [json_name = "includeEntityTypes"];
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AreaOfEffectOptions, _impl_.include_entity_types_)}},
    // bool require_line_of_sight = 2 [json_name = "requireLineOfSight"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AreaOfEffectOptions, _impl_.require_line_of_sight_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(AreaOfEffectOptions, _impl_.require_line_of_sight_)}},
    // bool exclude_center = 3 [json_name = "excludeCenter"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AreaOfEffectOptions, _impl_.exclude_center_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(AreaOfEffectOptions, _impl_.exclude_center_)}},
    // .api.v1alpha1.CoverRules cover_rules = 4 [json_name = "coverRules"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AreaOfEffectOptions, _impl_.cover_rules_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(AreaOfEffectOptions, _impl_.cover_rules_)}},
    // bool calculate_secondary_effects = 5 [json_name = "calculateSecondaryEffects"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AreaOfEffectOptions, _impl_.calculate_secondary_effects_), 2>(),
     {40, 2, 0, PROTOBUF_FIELD_OFFSET(AreaOfEffectOptions, _impl_.calculate_secondary_effects_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string include_entity_types = 1 [json_name = "includeEntityTypes"];
    {PROTOBUF_FIELD_OFFSET(AreaOfEffectOptions, _impl_.include_entity_types_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // bool require_line_of_sight = 2 [json_name = "requireLineOfSight"];
    {PROTOBUF_FIELD_OFFSET(AreaOfEffectOptions, _impl_.require_line_of_sight_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool exclude_center = 3 [json_name = "excludeCenter"];
    {PROTOBUF_FIELD_OFFSET(AreaOfEffectOptions, _impl_.exclude_center_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // .api.v1alpha1.CoverRules cover_rules = 4 [json_name = "coverRules"];
    {PROTOBUF_FIELD_OFFSET(AreaOfEffectOptions, _impl_.cover_rules_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // bool calculate_secondary_effects = 5 [json_name = "calculateSecondaryEffects"];
    {PROTOBUF_FIELD_OFFSET(AreaOfEffectOptions, _impl_.calculate_secondary_effects_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\40\24\0\0\0\0\0\0"
    "api.v1alpha1.AreaOfEffectOptions"
    "include_entity_types"
  }},
};
PROTOBUF_NOINLINE void AreaOfEffectOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.AreaOfEffectOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.include_entity_types_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    ::memset(&_impl_.require_line_of_sight_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.cover_rules_) -
        reinterpret_cast<char*>(&_impl_.require_line_of_sight_)) + sizeof(_impl_.cover_rules_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL AreaOfEffectOptions::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const AreaOfEffectOptions& this_ = static_cast<const AreaOfEffectOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL AreaOfEffectOptions::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const AreaOfEffectOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.AreaOfEffectOptions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string include_entity_types = 1 [json_name = "includeEntityTypes"];
  for (int i = 0, n = this_._internal_include_entity_types_size(); i < n; ++i) {
    const auto& s = this_._internal_include_entity_types().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.AreaOfEffectOptions.include_entity_types");
    target = stream->WriteString(1, s, target);
  }

  // bool require_line_of_sight = 2 [json_name = "requireLineOfSight"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_require_line_of_sight() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_require_line_of_sight(), target);
    }
  }

  // bool exclude_center = 3 [json_name = "excludeCenter"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_exclude_center() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_exclude_center(), target);
    }
  }

  // .api.v1alpha1.CoverRules cover_rules = 4 [json_name = "coverRules"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_cover_rules() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          4, this_._internal_cover_rules(), target);
    }
  }

  // bool calculate_secondary_effects = 5 [json_name = "calculateSecondaryEffects"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_calculate_secondary_effects() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          5, this_._internal_calculate_secondary_effects(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.AreaOfEffectOptions)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AreaOfEffectOptions::ByteSizeLong(const MessageLite& base) {
  const AreaOfEffectOptions& this_ = static_cast<const AreaOfEffectOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AreaOfEffectOptions::ByteSizeLong() const {
  const AreaOfEffectOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.AreaOfEffectOptions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string include_entity_types = 1 [json_name = "includeEntityTypes"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_include_entity_types().size());
      for (int i = 0, n = this_._internal_include_entity_types().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_include_entity_types().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // bool require_line_of_sight = 2 [json_name = "requireLineOfSight"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_require_line_of_sight() != 0) {
        total_size += 2;
      }
    }
    // bool exclude_center = 3 [json_name = "excludeCenter"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_exclude_center() != 0) {
        total_size += 2;
      }
    }
    // bool calculate_secondary_effects = 5 [json_name = "calculateSecondaryEffects"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_calculate_secondary_effects() != 0) {
        total_size += 2;
      }
    }
    // .api.v1alpha1.CoverRules cover_rules = 4 [json_name = "coverRules"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_cover_rules() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_cover_rules());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void AreaOfEffectOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AreaOfEffectOptions*>(&to_msg);
  auto& from = static_cast<const AreaOfEffectOptions&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.AreaOfEffectOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_include_entity_types()->MergeFrom(from._internal_include_entity_types());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (from._internal_require_line_of_sight() != 0) {
        _this->_impl_.require_line_of_sight_ = from._impl_.require_line_of_sight_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_exclude_center() != 0) {
        _this->_impl_.exclude_center_ = from._impl_.exclude_center_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_calculate_secondary_effects() != 0) {
        _this->_impl_.calculate_secondary_effects_ = from._impl_.calculate_secondary_effects_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_cover_rules() != 0) {
        _this->_impl_.cover_rules_ = from._impl_.cover_rules_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AreaOfEffectOptions::CopyFrom(const AreaOfEffectOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.AreaOfEffectOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AreaOfEffectOptions::InternalSwap(AreaOfEffectOptions* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.include_entity_types_.InternalSwap(&other->_impl_.include_entity_types_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AreaOfEffectOptions, _impl_.cover_rules_)
      + sizeof(AreaOfEffectOptions::_impl_.cover_rules_)
      - PROTOBUF_FIELD_OFFSET(AreaOfEffectOptions, _impl_.require_line_of_sight_)>(
          reinterpret_cast<char*>(&_impl_.require_line_of_sight_),
          reinterpret_cast<char*>(&other->_impl_.require_line_of_sight_));
}

::google::protobuf::Metadata AreaOfEffectOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryAreaOfEffectResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<QueryAreaOfEffectResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectResponse, _impl_._has_bits_);
};

void QueryAreaOfEffectResponse::clear_area_positions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.area_positions_.Clear();
}
void QueryAreaOfEffectResponse::clear_effect_center() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.effect_center_ != nullptr) _impl_.effect_center_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
QueryAreaOfEffectResponse::QueryAreaOfEffectResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, QueryAreaOfEffectResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.QueryAreaOfEffectResponse)
}
PROTOBUF_NDEBUG_INLINE QueryAreaOfEffectResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::QueryAreaOfEffectResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        affected_entities_{visibility, arena, from.affected_entities_},
        area_positions_{visibility, arena, from.area_positions_},
        cover_analysis_{visibility, arena, from.cover_analysis_},
        secondary_effects_{visibility, arena, from.secondary_effects_} {}

QueryAreaOfEffectResponse::QueryAreaOfEffectResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const QueryAreaOfEffectResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, QueryAreaOfEffectResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryAreaOfEffectResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.effect_center_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.effect_center_)
                : nullptr;
  _impl_.stats_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.stats_)
                : nullptr;
  _impl_.total_area_ = from._impl_.total_area_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.QueryAreaOfEffectResponse)
}
PROTOBUF_NDEBUG_INLINE QueryAreaOfEffectResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        affected_entities_{visibility, arena},
        area_positions_{visibility, arena},
        cover_analysis_{visibility, arena},
        secondary_effects_{visibility, arena} {}

inline void QueryAreaOfEffectResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, effect_center_),
           0,
           offsetof(Impl_, total_area_) -
               offsetof(Impl_, effect_center_) +
               sizeof(Impl_::total_area_));
}
QueryAreaOfEffectResponse::~QueryAreaOfEffectResponse() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.QueryAreaOfEffectResponse)
  SharedDtor(*this);
}
inline void QueryAreaOfEffectResponse::SharedDtor(MessageLite& self) {
  QueryAreaOfEffectResponse& this_ = static_cast<QueryAreaOfEffectResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.effect_center_;
  delete this_._impl_.stats_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL QueryAreaOfEffectResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) QueryAreaOfEffectResponse(arena);
}
constexpr auto QueryAreaOfEffectResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectResponse, _impl_.affected_entities_) +
          decltype(QueryAreaOfEffectResponse::_impl_.affected_entities_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectResponse, _impl_.area_positions_) +
          decltype(QueryAreaOfEffectResponse::_impl_.area_positions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectResponse, _impl_.cover_analysis_) +
          decltype(QueryAreaOfEffectResponse::_impl_.cover_analysis_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectResponse, _impl_.secondary_effects_) +
          decltype(QueryAreaOfEffectResponse::_impl_.secondary_effects_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(QueryAreaOfEffectResponse), alignof(QueryAreaOfEffectResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&QueryAreaOfEffectResponse::PlacementNew_,
                                 sizeof(QueryAreaOfEffectResponse),
                                 alignof(QueryAreaOfEffectResponse));
  }
}
constexpr auto QueryAreaOfEffectResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_QueryAreaOfEffectResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &QueryAreaOfEffectResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<QueryAreaOfEffectResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &QueryAreaOfEffectResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<QueryAreaOfEffectResponse>(), &QueryAreaOfEffectResponse::ByteSizeLong,
              &QueryAreaOfEffectResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectResponse, _impl_._cached_size_),
          false,
      },
      &QueryAreaOfEffectResponse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull QueryAreaOfEffectResponse_class_data_ =
        QueryAreaOfEffectResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
QueryAreaOfEffectResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&QueryAreaOfEffectResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(QueryAreaOfEffectResponse_class_data_.tc_table);
  return QueryAreaOfEffectResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 6, 0, 2>
QueryAreaOfEffectResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectResponse, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    QueryAreaOfEffectResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::QueryAreaOfEffectResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .api.v1alpha1.AreaOfEffectResult affected_entities = 1 [json_name = "affectedEntities"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectResponse, _impl_.affected_entities_)}},
    // repeated .api.v1alpha1.Position area_positions = 2 [json_name = "areaPositions"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectResponse, _impl_.area_positions_)}},
    // double total_area = 3 [json_name = "totalArea"];
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectResponse, _impl_.total_area_)}},
    // .api.v1alpha1.Position effect_center = 4 [json_name = "effectCenter"];
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 2, PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectResponse, _impl_.effect_center_)}},
    // repeated .api.v1alpha1.CoverAnalysisResult cover_analysis = 5 [json_name = "coverAnalysis"];
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 3, PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectResponse, _impl_.cover_analysis_)}},
    // repeated .api.v1alpha1.SecondaryEffect secondary_effects = 6 [json_name = "secondaryEffects"];
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 4, PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectResponse, _impl_.secondary_effects_)}},
    // .api.v1alpha1.SpatialQueryStats stats = 7 [json_name = "stats"];
    {::_pbi::TcParser::FastMtS1,
     {58, 1, 5, PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectResponse, _impl_.stats_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .api.v1alpha1.AreaOfEffectResult affected_entities = 1 [json_name = "affectedEntities"];
    {PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectResponse, _impl_.affected_entities_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .api.v1alpha1.Position area_positions = 2 [json_name = "areaPositions"];
    {PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectResponse, _impl_.area_positions_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // double total_area = 3 [json_name = "totalArea"];
    {PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectResponse, _impl_.total_area_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // .api.v1alpha1.Position effect_center = 4 [json_name = "effectCenter"];
    {PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectResponse, _impl_.effect_center_), _Internal::kHasBitsOffset + 0, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .api.v1alpha1.CoverAnalysisResult cover_analysis = 5 [json_name = "coverAnalysis"];
    {PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectResponse, _impl_.cover_analysis_), -1, 3, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .api.v1alpha1.SecondaryEffect secondary_effects = 6 [json_name = "secondaryEffects"];
    {PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectResponse, _impl_.secondary_effects_), -1, 4, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.SpatialQueryStats stats = 7 [json_name = "stats"];
    {PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectResponse, _impl_.stats_), _Internal::kHasBitsOffset + 1, 5, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::AreaOfEffectResult>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::CoverAnalysisResult>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::SecondaryEffect>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::SpatialQueryStats>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void QueryAreaOfEffectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.QueryAreaOfEffectResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.affected_entities_.Clear();
  _impl_.area_positions_.Clear();
  _impl_.cover_analysis_.Clear();
  _impl_.secondary_effects_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.effect_center_ != nullptr);
      _impl_.effect_center_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.stats_ != nullptr);
      _impl_.stats_->Clear();
    }
  }
  _impl_.total_area_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL QueryAreaOfEffectResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const QueryAreaOfEffectResponse& this_ = static_cast<const QueryAreaOfEffectResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL QueryAreaOfEffectResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const QueryAreaOfEffectResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.QueryAreaOfEffectResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .api.v1alpha1.AreaOfEffectResult affected_entities = 1 [json_name = "affectedEntities"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_affected_entities_size());
       i < n; i++) {
    const auto& repfield = this_._internal_affected_entities().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .api.v1alpha1.Position area_positions = 2 [json_name = "areaPositions"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_area_positions_size());
       i < n; i++) {
    const auto& repfield = this_._internal_area_positions().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // double total_area = 3 [json_name = "totalArea"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_total_area()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_total_area(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.Position effect_center = 4 [json_name = "effectCenter"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.effect_center_, this_._impl_.effect_center_->GetCachedSize(), target,
        stream);
  }

  // repeated .api.v1alpha1.CoverAnalysisResult cover_analysis = 5 [json_name = "coverAnalysis"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_cover_analysis_size());
       i < n; i++) {
    const auto& repfield = this_._internal_cover_analysis().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .api.v1alpha1.SecondaryEffect secondary_effects = 6 [json_name = "secondaryEffects"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_secondary_effects_size());
       i < n; i++) {
    const auto& repfield = this_._internal_secondary_effects().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            6, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // .api.v1alpha1.SpatialQueryStats stats = 7 [json_name = "stats"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *this_._impl_.stats_, this_._impl_.stats_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.QueryAreaOfEffectResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t QueryAreaOfEffectResponse::ByteSizeLong(const MessageLite& base) {
  const QueryAreaOfEffectResponse& this_ = static_cast<const QueryAreaOfEffectResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t QueryAreaOfEffectResponse::ByteSizeLong() const {
  const QueryAreaOfEffectResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.QueryAreaOfEffectResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.AreaOfEffectResult affected_entities = 1 [json_name = "affectedEntities"];
    {
      total_size += 1UL * this_._internal_affected_entities_size();
      for (const auto& msg : this_._internal_affected_entities()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .api.v1alpha1.Position area_positions = 2 [json_name = "areaPositions"];
    {
      total_size += 1UL * this_._internal_area_positions_size();
      for (const auto& msg : this_._internal_area_positions()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .api.v1alpha1.CoverAnalysisResult cover_analysis = 5 [json_name = "coverAnalysis"];
    {
      total_size += 1UL * this_._internal_cover_analysis_size();
      for (const auto& msg : this_._internal_cover_analysis()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .api.v1alpha1.SecondaryEffect secondary_effects = 6 [json_name = "secondaryEffects"];
    {
      total_size += 1UL * this_._internal_secondary_effects_size();
      for (const auto& msg : this_._internal_secondary_effects()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // .api.v1alpha1.Position effect_center = 4 [json_name = "effectCenter"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.effect_center_);
    }
    // .api.v1alpha1.SpatialQueryStats stats = 7 [json_name = "stats"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.stats_);
    }
    // double total_area = 3 [json_name = "totalArea"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_total_area()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void QueryAreaOfEffectResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryAreaOfEffectResponse*>(&to_msg);
  auto& from = static_cast<const QueryAreaOfEffectResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.QueryAreaOfEffectResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_affected_entities()->MergeFrom(
      from._internal_affected_entities());
  _this->_internal_mutable_area_positions()->MergeFrom(
      from._internal_area_positions());
  _this->_internal_mutable_cover_analysis()->MergeFrom(
      from._internal_cover_analysis());
  _this->_internal_mutable_secondary_effects()->MergeFrom(
      from._internal_secondary_effects());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.effect_center_ != nullptr);
      if (_this->_impl_.effect_center_ == nullptr) {
        _this->_impl_.effect_center_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.effect_center_);
      } else {
        _this->_impl_.effect_center_->MergeFrom(*from._impl_.effect_center_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.stats_ != nullptr);
      if (_this->_impl_.stats_ == nullptr) {
        _this->_impl_.stats_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.stats_);
      } else {
        _this->_impl_.stats_->MergeFrom(*from._impl_.stats_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_total_area()) != 0) {
        _this->_impl_.total_area_ = from._impl_.total_area_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryAreaOfEffectResponse::CopyFrom(const QueryAreaOfEffectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.QueryAreaOfEffectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryAreaOfEffectResponse::InternalSwap(QueryAreaOfEffectResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.affected_entities_.InternalSwap(&other->_impl_.affected_entities_);
  _impl_.area_positions_.InternalSwap(&other->_impl_.area_positions_);
  _impl_.cover_analysis_.InternalSwap(&other->_impl_.cover_analysis_);
  _impl_.secondary_effects_.InternalSwap(&other->_impl_.secondary_effects_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectResponse, _impl_.total_area_)
      + sizeof(QueryAreaOfEffectResponse::_impl_.total_area_)
      - PROTOBUF_FIELD_OFFSET(QueryAreaOfEffectResponse, _impl_.effect_center_)>(
          reinterpret_cast<char*>(&_impl_.effect_center_),
          reinterpret_cast<char*>(&other->_impl_.effect_center_));
}

::google::protobuf::Metadata QueryAreaOfEffectResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AreaOfEffectResult::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<AreaOfEffectResult>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AreaOfEffectResult, _impl_._has_bits_);
};

void AreaOfEffectResult::clear_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.entity_ != nullptr) _impl_.entity_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
AreaOfEffectResult::AreaOfEffectResult(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AreaOfEffectResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.AreaOfEffectResult)
}
PROTOBUF_NDEBUG_INLINE AreaOfEffectResult::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::AreaOfEffectResult& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        relative_position_(arena, from.relative_position_) {}

AreaOfEffectResult::AreaOfEffectResult(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const AreaOfEffectResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AreaOfEffectResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AreaOfEffectResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.entity_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.entity_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, distance_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, distance_),
           offsetof(Impl_, effect_strength_) -
               offsetof(Impl_, distance_) +
               sizeof(Impl_::effect_strength_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.AreaOfEffectResult)
}
PROTOBUF_NDEBUG_INLINE AreaOfEffectResult::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        relative_position_(arena) {}

inline void AreaOfEffectResult::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, entity_),
           0,
           offsetof(Impl_, effect_strength_) -
               offsetof(Impl_, entity_) +
               sizeof(Impl_::effect_strength_));
}
AreaOfEffectResult::~AreaOfEffectResult() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.AreaOfEffectResult)
  SharedDtor(*this);
}
inline void AreaOfEffectResult::SharedDtor(MessageLite& self) {
  AreaOfEffectResult& this_ = static_cast<AreaOfEffectResult&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.relative_position_.Destroy();
  delete this_._impl_.entity_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL AreaOfEffectResult::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AreaOfEffectResult(arena);
}
constexpr auto AreaOfEffectResult::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AreaOfEffectResult),
                                            alignof(AreaOfEffectResult));
}
constexpr auto AreaOfEffectResult::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AreaOfEffectResult_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AreaOfEffectResult::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AreaOfEffectResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AreaOfEffectResult::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AreaOfEffectResult>(), &AreaOfEffectResult::ByteSizeLong,
              &AreaOfEffectResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AreaOfEffectResult, _impl_._cached_size_),
          false,
      },
      &AreaOfEffectResult::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull AreaOfEffectResult_class_data_ =
        AreaOfEffectResult::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
AreaOfEffectResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AreaOfEffectResult_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AreaOfEffectResult_class_data_.tc_table);
  return AreaOfEffectResult_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 1, 65, 2>
AreaOfEffectResult::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AreaOfEffectResult, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    AreaOfEffectResult_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::AreaOfEffectResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double effect_strength = 8 [json_name = "effectStrength"];
    {::_pbi::TcParser::FastF64S1,
     {65, 7, 0, PROTOBUF_FIELD_OFFSET(AreaOfEffectResult, _impl_.effect_strength_)}},
    // .api.v1alpha1.Entity entity = 1 [json_name = "entity"];
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0, PROTOBUF_FIELD_OFFSET(AreaOfEffectResult, _impl_.entity_)}},
    // double distance = 2 [json_name = "distance"];
    {::_pbi::TcParser::FastF64S1,
     {17, 2, 0, PROTOBUF_FIELD_OFFSET(AreaOfEffectResult, _impl_.distance_)}},
    // bool line_of_sight = 3 [json_name = "lineOfSight"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AreaOfEffectResult, _impl_.line_of_sight_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(AreaOfEffectResult, _impl_.line_of_sight_)}},
    // double direction = 4 [json_name = "direction"];
    {::_pbi::TcParser::FastF64S1,
     {33, 3, 0, PROTOBUF_FIELD_OFFSET(AreaOfEffectResult, _impl_.direction_)}},
    // string relative_position = 5 [json_name = "relativePosition"];
    {::_pbi::TcParser::FastUS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(AreaOfEffectResult, _impl_.relative_position_)}},
    // .api.v1alpha1.CoverType cover_type = 6 [json_name = "coverType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AreaOfEffectResult, _impl_.cover_type_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(AreaOfEffectResult, _impl_.cover_type_)}},
    // double cover_percentage = 7 [json_name = "coverPercentage"];
    {::_pbi::TcParser::FastF64S1,
     {57, 6, 0, PROTOBUF_FIELD_OFFSET(AreaOfEffectResult, _impl_.cover_percentage_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .api.v1alpha1.Entity entity = 1 [json_name = "entity"];
    {PROTOBUF_FIELD_OFFSET(AreaOfEffectResult, _impl_.entity_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // double distance = 2 [json_name = "distance"];
    {PROTOBUF_FIELD_OFFSET(AreaOfEffectResult, _impl_.distance_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // bool line_of_sight = 3 [json_name = "lineOfSight"];
    {PROTOBUF_FIELD_OFFSET(AreaOfEffectResult, _impl_.line_of_sight_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // double direction = 4 [json_name = "direction"];
    {PROTOBUF_FIELD_OFFSET(AreaOfEffectResult, _impl_.direction_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // string relative_position = 5 [json_name = "relativePosition"];
    {PROTOBUF_FIELD_OFFSET(AreaOfEffectResult, _impl_.relative_position_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.CoverType cover_type = 6 [json_name = "coverType"];
    {PROTOBUF_FIELD_OFFSET(AreaOfEffectResult, _impl_.cover_type_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // double cover_percentage = 7 [json_name = "coverPercentage"];
    {PROTOBUF_FIELD_OFFSET(AreaOfEffectResult, _impl_.cover_percentage_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double effect_strength = 8 [json_name = "effectStrength"];
    {PROTOBUF_FIELD_OFFSET(AreaOfEffectResult, _impl_.effect_strength_), _Internal::kHasBitsOffset + 7, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Entity>()},
  }},
  {{
    "\37\0\0\0\0\21\0\0\0\0\0\0\0\0\0\0"
    "api.v1alpha1.AreaOfEffectResult"
    "relative_position"
  }},
};
PROTOBUF_NOINLINE void AreaOfEffectResult::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.AreaOfEffectResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.relative_position_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.entity_ != nullptr);
      _impl_.entity_->Clear();
    }
  }
  if ((cached_has_bits & 0x000000fcU) != 0) {
    ::memset(&_impl_.distance_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.effect_strength_) -
        reinterpret_cast<char*>(&_impl_.distance_)) + sizeof(_impl_.effect_strength_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL AreaOfEffectResult::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const AreaOfEffectResult& this_ = static_cast<const AreaOfEffectResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL AreaOfEffectResult::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const AreaOfEffectResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.AreaOfEffectResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.Entity entity = 1 [json_name = "entity"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.entity_, this_._impl_.entity_->GetCachedSize(), target,
        stream);
  }

  // double distance = 2 [json_name = "distance"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_distance()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_distance(), target);
    }
  }

  // bool line_of_sight = 3 [json_name = "lineOfSight"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    if (this_._internal_line_of_sight() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_line_of_sight(), target);
    }
  }

  // double direction = 4 [json_name = "direction"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_direction()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          4, this_._internal_direction(), target);
    }
  }

  // string relative_position = 5 [json_name = "relativePosition"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!this_._internal_relative_position().empty()) {
      const ::std::string& _s = this_._internal_relative_position();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.AreaOfEffectResult.relative_position");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  // .api.v1alpha1.CoverType cover_type = 6 [json_name = "coverType"];
  if ((cached_has_bits & 0x00000020U) != 0) {
    if (this_._internal_cover_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          6, this_._internal_cover_type(), target);
    }
  }

  // double cover_percentage = 7 [json_name = "coverPercentage"];
  if ((cached_has_bits & 0x00000040U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_cover_percentage()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          7, this_._internal_cover_percentage(), target);
    }
  }

  // double effect_strength = 8 [json_name = "effectStrength"];
  if ((cached_has_bits & 0x00000080U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_effect_strength()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          8, this_._internal_effect_strength(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.AreaOfEffectResult)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AreaOfEffectResult::ByteSizeLong(const MessageLite& base) {
  const AreaOfEffectResult& this_ = static_cast<const AreaOfEffectResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AreaOfEffectResult::ByteSizeLong() const {
  const AreaOfEffectResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.AreaOfEffectResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    // string relative_position = 5 [json_name = "relativePosition"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_relative_position().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_relative_position());
      }
    }
    // .api.v1alpha1.Entity entity = 1 [json_name = "entity"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.entity_);
    }
    // double distance = 2 [json_name = "distance"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_distance()) != 0) {
        total_size += 9;
      }
    }
    // double direction = 4 [json_name = "direction"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_direction()) != 0) {
        total_size += 9;
      }
    }
    // bool line_of_sight = 3 [json_name = "lineOfSight"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_line_of_sight() != 0) {
        total_size += 2;
      }
    }
    // .api.v1alpha1.CoverType cover_type = 6 [json_name = "coverType"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_cover_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_cover_type());
      }
    }
    // double cover_percentage = 7 [json_name = "coverPercentage"];
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_cover_percentage()) != 0) {
        total_size += 9;
      }
    }
    // double effect_strength = 8 [json_name = "effectStrength"];
    if ((cached_has_bits & 0x00000080U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_effect_strength()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void AreaOfEffectResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AreaOfEffectResult*>(&to_msg);
  auto& from = static_cast<const AreaOfEffectResult&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.AreaOfEffectResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_relative_position().empty()) {
        _this->_internal_set_relative_position(from._internal_relative_position());
      } else {
        if (_this->_impl_.relative_position_.IsDefault()) {
          _this->_internal_set_relative_position("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.entity_ != nullptr);
      if (_this->_impl_.entity_ == nullptr) {
        _this->_impl_.entity_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.entity_);
      } else {
        _this->_impl_.entity_->MergeFrom(*from._impl_.entity_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_distance()) != 0) {
        _this->_impl_.distance_ = from._impl_.distance_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_direction()) != 0) {
        _this->_impl_.direction_ = from._impl_.direction_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_line_of_sight() != 0) {
        _this->_impl_.line_of_sight_ = from._impl_.line_of_sight_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_cover_type() != 0) {
        _this->_impl_.cover_type_ = from._impl_.cover_type_;
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_cover_percentage()) != 0) {
        _this->_impl_.cover_percentage_ = from._impl_.cover_percentage_;
      }
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_effect_strength()) != 0) {
        _this->_impl_.effect_strength_ = from._impl_.effect_strength_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AreaOfEffectResult::CopyFrom(const AreaOfEffectResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.AreaOfEffectResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AreaOfEffectResult::InternalSwap(AreaOfEffectResult* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.relative_position_, &other->_impl_.relative_position_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AreaOfEffectResult, _impl_.effect_strength_)
      + sizeof(AreaOfEffectResult::_impl_.effect_strength_)
      - PROTOBUF_FIELD_OFFSET(AreaOfEffectResult, _impl_.entity_)>(
          reinterpret_cast<char*>(&_impl_.entity_),
          reinterpret_cast<char*>(&other->_impl_.entity_));
}

::google::protobuf::Metadata AreaOfEffectResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CoverAnalysisResult::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CoverAnalysisResult>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CoverAnalysisResult, _impl_._has_bits_);
};

void CoverAnalysisResult::clear_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ != nullptr) _impl_.position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
CoverAnalysisResult::CoverAnalysisResult(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CoverAnalysisResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.CoverAnalysisResult)
}
PROTOBUF_NDEBUG_INLINE CoverAnalysisResult::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::CoverAnalysisResult& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        cover_source_(arena, from.cover_source_) {}

CoverAnalysisResult::CoverAnalysisResult(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CoverAnalysisResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CoverAnalysisResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CoverAnalysisResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.position_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cover_percentage_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, cover_percentage_),
           offsetof(Impl_, cover_type_) -
               offsetof(Impl_, cover_percentage_) +
               sizeof(Impl_::cover_type_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.CoverAnalysisResult)
}
PROTOBUF_NDEBUG_INLINE CoverAnalysisResult::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        cover_source_(arena) {}

inline void CoverAnalysisResult::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_),
           0,
           offsetof(Impl_, cover_type_) -
               offsetof(Impl_, position_) +
               sizeof(Impl_::cover_type_));
}
CoverAnalysisResult::~CoverAnalysisResult() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.CoverAnalysisResult)
  SharedDtor(*this);
}
inline void CoverAnalysisResult::SharedDtor(MessageLite& self) {
  CoverAnalysisResult& this_ = static_cast<CoverAnalysisResult&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.cover_source_.Destroy();
  delete this_._impl_.position_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CoverAnalysisResult::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CoverAnalysisResult(arena);
}
constexpr auto CoverAnalysisResult::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CoverAnalysisResult),
                                            alignof(CoverAnalysisResult));
}
constexpr auto CoverAnalysisResult::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CoverAnalysisResult_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CoverAnalysisResult::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CoverAnalysisResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CoverAnalysisResult::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CoverAnalysisResult>(), &CoverAnalysisResult::ByteSizeLong,
              &CoverAnalysisResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CoverAnalysisResult, _impl_._cached_size_),
          false,
      },
      &CoverAnalysisResult::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CoverAnalysisResult_class_data_ =
        CoverAnalysisResult::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CoverAnalysisResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CoverAnalysisResult_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CoverAnalysisResult_class_data_.tc_table);
  return CoverAnalysisResult_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 53, 2>
CoverAnalysisResult::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CoverAnalysisResult, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CoverAnalysisResult_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::CoverAnalysisResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double cover_percentage = 4 [json_name = "coverPercentage"];
    {::_pbi::TcParser::FastF64S1,
     {33, 2, 0, PROTOBUF_FIELD_OFFSET(CoverAnalysisResult, _impl_.cover_percentage_)}},
    // .api.v1alpha1.Position position = 1 [json_name = "position"];
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0, PROTOBUF_FIELD_OFFSET(CoverAnalysisResult, _impl_.position_)}},
    // .api.v1alpha1.CoverType cover_type = 2 [json_name = "coverType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CoverAnalysisResult, _impl_.cover_type_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(CoverAnalysisResult, _impl_.cover_type_)}},
    // string cover_source = 3 [json_name = "coverSource"];
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CoverAnalysisResult, _impl_.cover_source_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .api.v1alpha1.Position position = 1 [json_name = "position"];
    {PROTOBUF_FIELD_OFFSET(CoverAnalysisResult, _impl_.position_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.CoverType cover_type = 2 [json_name = "coverType"];
    {PROTOBUF_FIELD_OFFSET(CoverAnalysisResult, _impl_.cover_type_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string cover_source = 3 [json_name = "coverSource"];
    {PROTOBUF_FIELD_OFFSET(CoverAnalysisResult, _impl_.cover_source_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double cover_percentage = 4 [json_name = "coverPercentage"];
    {PROTOBUF_FIELD_OFFSET(CoverAnalysisResult, _impl_.cover_percentage_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
  }},
  {{
    "\40\0\0\14\0\0\0\0"
    "api.v1alpha1.CoverAnalysisResult"
    "cover_source"
  }},
};
PROTOBUF_NOINLINE void CoverAnalysisResult::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.CoverAnalysisResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.cover_source_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000000cU) != 0) {
    ::memset(&_impl_.cover_percentage_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.cover_type_) -
        reinterpret_cast<char*>(&_impl_.cover_percentage_)) + sizeof(_impl_.cover_type_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CoverAnalysisResult::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CoverAnalysisResult& this_ = static_cast<const CoverAnalysisResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CoverAnalysisResult::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CoverAnalysisResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.CoverAnalysisResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.Position position = 1 [json_name = "position"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.position_, this_._impl_.position_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.CoverType cover_type = 2 [json_name = "coverType"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    if (this_._internal_cover_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_cover_type(), target);
    }
  }

  // string cover_source = 3 [json_name = "coverSource"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!this_._internal_cover_source().empty()) {
      const ::std::string& _s = this_._internal_cover_source();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.CoverAnalysisResult.cover_source");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // double cover_percentage = 4 [json_name = "coverPercentage"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_cover_percentage()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          4, this_._internal_cover_percentage(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.CoverAnalysisResult)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CoverAnalysisResult::ByteSizeLong(const MessageLite& base) {
  const CoverAnalysisResult& this_ = static_cast<const CoverAnalysisResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CoverAnalysisResult::ByteSizeLong() const {
  const CoverAnalysisResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.CoverAnalysisResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string cover_source = 3 [json_name = "coverSource"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_cover_source().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_cover_source());
      }
    }
    // .api.v1alpha1.Position position = 1 [json_name = "position"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.position_);
    }
    // double cover_percentage = 4 [json_name = "coverPercentage"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_cover_percentage()) != 0) {
        total_size += 9;
      }
    }
    // .api.v1alpha1.CoverType cover_type = 2 [json_name = "coverType"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_cover_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_cover_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CoverAnalysisResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CoverAnalysisResult*>(&to_msg);
  auto& from = static_cast<const CoverAnalysisResult&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.CoverAnalysisResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_cover_source().empty()) {
        _this->_internal_set_cover_source(from._internal_cover_source());
      } else {
        if (_this->_impl_.cover_source_.IsDefault()) {
          _this->_internal_set_cover_source("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.position_ != nullptr);
      if (_this->_impl_.position_ == nullptr) {
        _this->_impl_.position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.position_);
      } else {
        _this->_impl_.position_->MergeFrom(*from._impl_.position_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_cover_percentage()) != 0) {
        _this->_impl_.cover_percentage_ = from._impl_.cover_percentage_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_cover_type() != 0) {
        _this->_impl_.cover_type_ = from._impl_.cover_type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CoverAnalysisResult::CopyFrom(const CoverAnalysisResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.CoverAnalysisResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CoverAnalysisResult::InternalSwap(CoverAnalysisResult* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cover_source_, &other->_impl_.cover_source_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CoverAnalysisResult, _impl_.cover_type_)
      + sizeof(CoverAnalysisResult::_impl_.cover_type_)
      - PROTOBUF_FIELD_OFFSET(CoverAnalysisResult, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::google::protobuf::Metadata CoverAnalysisResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SecondaryEffect::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SecondaryEffect>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SecondaryEffect, _impl_._has_bits_);
};

void SecondaryEffect::clear_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.origin_ != nullptr) _impl_.origin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
SecondaryEffect::SecondaryEffect(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SecondaryEffect_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.SecondaryEffect)
}
PROTOBUF_NDEBUG_INLINE SecondaryEffect::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::SecondaryEffect& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        target_entities_{visibility, arena, from.target_entities_},
        effect_type_(arena, from.effect_type_),
        description_(arena, from.description_) {}

SecondaryEffect::SecondaryEffect(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SecondaryEffect& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SecondaryEffect_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SecondaryEffect* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.origin_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_)
                : nullptr;
  _impl_.intensity_ = from._impl_.intensity_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.SecondaryEffect)
}
PROTOBUF_NDEBUG_INLINE SecondaryEffect::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        target_entities_{visibility, arena},
        effect_type_(arena),
        description_(arena) {}

inline void SecondaryEffect::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, origin_),
           0,
           offsetof(Impl_, intensity_) -
               offsetof(Impl_, origin_) +
               sizeof(Impl_::intensity_));
}
SecondaryEffect::~SecondaryEffect() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.SecondaryEffect)
  SharedDtor(*this);
}
inline void SecondaryEffect::SharedDtor(MessageLite& self) {
  SecondaryEffect& this_ = static_cast<SecondaryEffect&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.effect_type_.Destroy();
  this_._impl_.description_.Destroy();
  delete this_._impl_.origin_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SecondaryEffect::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SecondaryEffect(arena);
}
constexpr auto SecondaryEffect::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SecondaryEffect, _impl_.target_entities_) +
          decltype(SecondaryEffect::_impl_.target_entities_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SecondaryEffect), alignof(SecondaryEffect), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SecondaryEffect::PlacementNew_,
                                 sizeof(SecondaryEffect),
                                 alignof(SecondaryEffect));
  }
}
constexpr auto SecondaryEffect::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SecondaryEffect_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SecondaryEffect::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SecondaryEffect>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SecondaryEffect::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SecondaryEffect>(), &SecondaryEffect::ByteSizeLong,
              &SecondaryEffect::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SecondaryEffect, _impl_._cached_size_),
          false,
      },
      &SecondaryEffect::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SecondaryEffect_class_data_ =
        SecondaryEffect::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SecondaryEffect::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SecondaryEffect_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SecondaryEffect_class_data_.tc_table);
  return SecondaryEffect_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 74, 2>
SecondaryEffect::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SecondaryEffect, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SecondaryEffect_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::SecondaryEffect>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string effect_type = 1 [json_name = "effectType"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SecondaryEffect, _impl_.effect_type_)}},
    // .api.v1alpha1.Position origin = 2 [json_name = "origin"];
    {::_pbi::TcParser::FastMtS1,
     {18, 2, 0, PROTOBUF_FIELD_OFFSET(SecondaryEffect, _impl_.origin_)}},
    // repeated string target_entities = 3 [json_name = "targetEntities"];
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SecondaryEffect, _impl_.target_entities_)}},
    // double intensity = 4 [json_name = "intensity"];
    {::_pbi::TcParser::FastF64S1,
     {33, 3, 0, PROTOBUF_FIELD_OFFSET(SecondaryEffect, _impl_.intensity_)}},
    // string description = 5 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {42, 1, 0, PROTOBUF_FIELD_OFFSET(SecondaryEffect, _impl_.description_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string effect_type = 1 [json_name = "effectType"];
    {PROTOBUF_FIELD_OFFSET(SecondaryEffect, _impl_.effect_type_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.Position origin = 2 [json_name = "origin"];
    {PROTOBUF_FIELD_OFFSET(SecondaryEffect, _impl_.origin_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string target_entities = 3 [json_name = "targetEntities"];
    {PROTOBUF_FIELD_OFFSET(SecondaryEffect, _impl_.target_entities_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // double intensity = 4 [json_name = "intensity"];
    {PROTOBUF_FIELD_OFFSET(SecondaryEffect, _impl_.intensity_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // string description = 5 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(SecondaryEffect, _impl_.description_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
  }},
  {{
    "\34\13\0\17\0\13\0\0"
    "api.v1alpha1.SecondaryEffect"
    "effect_type"
    "target_entities"
    "description"
  }},
};
PROTOBUF_NOINLINE void SecondaryEffect::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.SecondaryEffect)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.target_entities_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.effect_type_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.origin_ != nullptr);
      _impl_.origin_->Clear();
    }
  }
  _impl_.intensity_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SecondaryEffect::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SecondaryEffect& this_ = static_cast<const SecondaryEffect&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SecondaryEffect::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SecondaryEffect& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.SecondaryEffect)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string effect_type = 1 [json_name = "effectType"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_effect_type().empty()) {
      const ::std::string& _s = this_._internal_effect_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.SecondaryEffect.effect_type");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.Position origin = 2 [json_name = "origin"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.origin_, this_._impl_.origin_->GetCachedSize(), target,
        stream);
  }

  // repeated string target_entities = 3 [json_name = "targetEntities"];
  for (int i = 0, n = this_._internal_target_entities_size(); i < n; ++i) {
    const auto& s = this_._internal_target_entities().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.SecondaryEffect.target_entities");
    target = stream->WriteString(3, s, target);
  }

  // double intensity = 4 [json_name = "intensity"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_intensity()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          4, this_._internal_intensity(), target);
    }
  }

  // string description = 5 [json_name = "description"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.SecondaryEffect.description");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.SecondaryEffect)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SecondaryEffect::ByteSizeLong(const MessageLite& base) {
  const SecondaryEffect& this_ = static_cast<const SecondaryEffect&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SecondaryEffect::ByteSizeLong() const {
  const SecondaryEffect& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.SecondaryEffect)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string target_entities = 3 [json_name = "targetEntities"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_target_entities().size());
      for (int i = 0, n = this_._internal_target_entities().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_target_entities().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string effect_type = 1 [json_name = "effectType"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_effect_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_effect_type());
      }
    }
    // string description = 5 [json_name = "description"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // .api.v1alpha1.Position origin = 2 [json_name = "origin"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.origin_);
    }
    // double intensity = 4 [json_name = "intensity"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_intensity()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SecondaryEffect::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SecondaryEffect*>(&to_msg);
  auto& from = static_cast<const SecondaryEffect&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.SecondaryEffect)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_target_entities()->MergeFrom(from._internal_target_entities());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_effect_type().empty()) {
        _this->_internal_set_effect_type(from._internal_effect_type());
      } else {
        if (_this->_impl_.effect_type_.IsDefault()) {
          _this->_internal_set_effect_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.origin_ != nullptr);
      if (_this->_impl_.origin_ == nullptr) {
        _this->_impl_.origin_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.origin_);
      } else {
        _this->_impl_.origin_->MergeFrom(*from._impl_.origin_);
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_intensity()) != 0) {
        _this->_impl_.intensity_ = from._impl_.intensity_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SecondaryEffect::CopyFrom(const SecondaryEffect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.SecondaryEffect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SecondaryEffect::InternalSwap(SecondaryEffect* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.target_entities_.InternalSwap(&other->_impl_.target_entities_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.effect_type_, &other->_impl_.effect_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SecondaryEffect, _impl_.intensity_)
      + sizeof(SecondaryEffect::_impl_.intensity_)
      - PROTOBUF_FIELD_OFFSET(SecondaryEffect, _impl_.origin_)>(
          reinterpret_cast<char*>(&_impl_.origin_),
          reinterpret_cast<char*>(&other->_impl_.origin_));
}

::google::protobuf::Metadata SecondaryEffect::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryMultiRoomLineOfSightRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<QueryMultiRoomLineOfSightRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightRequest, _impl_._has_bits_);
};

void QueryMultiRoomLineOfSightRequest::clear_from_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.from_position_ != nullptr) _impl_.from_position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008U;
}
void QueryMultiRoomLineOfSightRequest::clear_to_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.to_position_ != nullptr) _impl_.to_position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010U;
}
QueryMultiRoomLineOfSightRequest::QueryMultiRoomLineOfSightRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, QueryMultiRoomLineOfSightRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.QueryMultiRoomLineOfSightRequest)
}
PROTOBUF_NDEBUG_INLINE QueryMultiRoomLineOfSightRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::QueryMultiRoomLineOfSightRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        from_room_id_(arena, from.from_room_id_),
        to_room_id_(arena, from.to_room_id_),
        entity_id_(arena, from.entity_id_) {}

QueryMultiRoomLineOfSightRequest::QueryMultiRoomLineOfSightRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const QueryMultiRoomLineOfSightRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, QueryMultiRoomLineOfSightRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryMultiRoomLineOfSightRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.from_position_ = ((cached_has_bits & 0x00000008U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.from_position_)
                : nullptr;
  _impl_.to_position_ = ((cached_has_bits & 0x00000010U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.to_position_)
                : nullptr;
  _impl_.options_ = ((cached_has_bits & 0x00000020U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.QueryMultiRoomLineOfSightRequest)
}
PROTOBUF_NDEBUG_INLINE QueryMultiRoomLineOfSightRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        from_room_id_(arena),
        to_room_id_(arena),
        entity_id_(arena) {}

inline void QueryMultiRoomLineOfSightRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, from_position_),
           0,
           offsetof(Impl_, options_) -
               offsetof(Impl_, from_position_) +
               sizeof(Impl_::options_));
}
QueryMultiRoomLineOfSightRequest::~QueryMultiRoomLineOfSightRequest() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.QueryMultiRoomLineOfSightRequest)
  SharedDtor(*this);
}
inline void QueryMultiRoomLineOfSightRequest::SharedDtor(MessageLite& self) {
  QueryMultiRoomLineOfSightRequest& this_ = static_cast<QueryMultiRoomLineOfSightRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.from_room_id_.Destroy();
  this_._impl_.to_room_id_.Destroy();
  this_._impl_.entity_id_.Destroy();
  delete this_._impl_.from_position_;
  delete this_._impl_.to_position_;
  delete this_._impl_.options_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL QueryMultiRoomLineOfSightRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) QueryMultiRoomLineOfSightRequest(arena);
}
constexpr auto QueryMultiRoomLineOfSightRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(QueryMultiRoomLineOfSightRequest),
                                            alignof(QueryMultiRoomLineOfSightRequest));
}
constexpr auto QueryMultiRoomLineOfSightRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_QueryMultiRoomLineOfSightRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &QueryMultiRoomLineOfSightRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<QueryMultiRoomLineOfSightRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &QueryMultiRoomLineOfSightRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<QueryMultiRoomLineOfSightRequest>(), &QueryMultiRoomLineOfSightRequest::ByteSizeLong,
              &QueryMultiRoomLineOfSightRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightRequest, _impl_._cached_size_),
          false,
      },
      &QueryMultiRoomLineOfSightRequest::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull QueryMultiRoomLineOfSightRequest_class_data_ =
        QueryMultiRoomLineOfSightRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
QueryMultiRoomLineOfSightRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&QueryMultiRoomLineOfSightRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(QueryMultiRoomLineOfSightRequest_class_data_.tc_table);
  return QueryMultiRoomLineOfSightRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 3, 85, 2>
QueryMultiRoomLineOfSightRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightRequest, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    QueryMultiRoomLineOfSightRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::QueryMultiRoomLineOfSightRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string from_room_id = 1 [json_name = "fromRoomId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightRequest, _impl_.from_room_id_)}},
    // string to_room_id = 2 [json_name = "toRoomId"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightRequest, _impl_.to_room_id_)}},
    // .api.v1alpha1.Position from_position = 3 [json_name = "fromPosition"];
    {::_pbi::TcParser::FastMtS1,
     {26, 3, 0, PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightRequest, _impl_.from_position_)}},
    // .api.v1alpha1.Position to_position = 4 [json_name = "toPosition"];
    {::_pbi::TcParser::FastMtS1,
     {34, 4, 1, PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightRequest, _impl_.to_position_)}},
    // string entity_id = 5 [json_name = "entityId"];
    {::_pbi::TcParser::FastUS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightRequest, _impl_.entity_id_)}},
    // .api.v1alpha1.MultiRoomOptions options = 6 [json_name = "options"];
    {::_pbi::TcParser::FastMtS1,
     {50, 5, 2, PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightRequest, _impl_.options_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string from_room_id = 1 [json_name = "fromRoomId"];
    {PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightRequest, _impl_.from_room_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string to_room_id = 2 [json_name = "toRoomId"];
    {PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightRequest, _impl_.to_room_id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.Position from_position = 3 [json_name = "fromPosition"];
    {PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightRequest, _impl_.from_position_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.Position to_position = 4 [json_name = "toPosition"];
    {PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightRequest, _impl_.to_position_), _Internal::kHasBitsOffset + 4, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string entity_id = 5 [json_name = "entityId"];
    {PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightRequest, _impl_.entity_id_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.MultiRoomOptions options = 6 [json_name = "options"];
    {PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightRequest, _impl_.options_), _Internal::kHasBitsOffset + 5, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::MultiRoomOptions>()},
  }},
  {{
    "\55\14\12\0\0\11\0\0"
    "api.v1alpha1.QueryMultiRoomLineOfSightRequest"
    "from_room_id"
    "to_room_id"
    "entity_id"
  }},
};
PROTOBUF_NOINLINE void QueryMultiRoomLineOfSightRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.QueryMultiRoomLineOfSightRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.from_room_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.to_room_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.entity_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(_impl_.from_position_ != nullptr);
      _impl_.from_position_->Clear();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(_impl_.to_position_ != nullptr);
      _impl_.to_position_->Clear();
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      ABSL_DCHECK(_impl_.options_ != nullptr);
      _impl_.options_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL QueryMultiRoomLineOfSightRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const QueryMultiRoomLineOfSightRequest& this_ = static_cast<const QueryMultiRoomLineOfSightRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL QueryMultiRoomLineOfSightRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const QueryMultiRoomLineOfSightRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.QueryMultiRoomLineOfSightRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string from_room_id = 1 [json_name = "fromRoomId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_from_room_id().empty()) {
      const ::std::string& _s = this_._internal_from_room_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.QueryMultiRoomLineOfSightRequest.from_room_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string to_room_id = 2 [json_name = "toRoomId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_to_room_id().empty()) {
      const ::std::string& _s = this_._internal_to_room_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.QueryMultiRoomLineOfSightRequest.to_room_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.Position from_position = 3 [json_name = "fromPosition"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.from_position_, this_._impl_.from_position_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.Position to_position = 4 [json_name = "toPosition"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.to_position_, this_._impl_.to_position_->GetCachedSize(), target,
        stream);
  }

  // string entity_id = 5 [json_name = "entityId"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    if (!this_._internal_entity_id().empty()) {
      const ::std::string& _s = this_._internal_entity_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.QueryMultiRoomLineOfSightRequest.entity_id");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  // .api.v1alpha1.MultiRoomOptions options = 6 [json_name = "options"];
  if ((cached_has_bits & 0x00000020U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.options_, this_._impl_.options_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.QueryMultiRoomLineOfSightRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t QueryMultiRoomLineOfSightRequest::ByteSizeLong(const MessageLite& base) {
  const QueryMultiRoomLineOfSightRequest& this_ = static_cast<const QueryMultiRoomLineOfSightRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t QueryMultiRoomLineOfSightRequest::ByteSizeLong() const {
  const QueryMultiRoomLineOfSightRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.QueryMultiRoomLineOfSightRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    // string from_room_id = 1 [json_name = "fromRoomId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_from_room_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_from_room_id());
      }
    }
    // string to_room_id = 2 [json_name = "toRoomId"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_to_room_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_to_room_id());
      }
    }
    // string entity_id = 5 [json_name = "entityId"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_entity_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_entity_id());
      }
    }
    // .api.v1alpha1.Position from_position = 3 [json_name = "fromPosition"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.from_position_);
    }
    // .api.v1alpha1.Position to_position = 4 [json_name = "toPosition"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.to_position_);
    }
    // .api.v1alpha1.MultiRoomOptions options = 6 [json_name = "options"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.options_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void QueryMultiRoomLineOfSightRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryMultiRoomLineOfSightRequest*>(&to_msg);
  auto& from = static_cast<const QueryMultiRoomLineOfSightRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.QueryMultiRoomLineOfSightRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_from_room_id().empty()) {
        _this->_internal_set_from_room_id(from._internal_from_room_id());
      } else {
        if (_this->_impl_.from_room_id_.IsDefault()) {
          _this->_internal_set_from_room_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_to_room_id().empty()) {
        _this->_internal_set_to_room_id(from._internal_to_room_id());
      } else {
        if (_this->_impl_.to_room_id_.IsDefault()) {
          _this->_internal_set_to_room_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_entity_id().empty()) {
        _this->_internal_set_entity_id(from._internal_entity_id());
      } else {
        if (_this->_impl_.entity_id_.IsDefault()) {
          _this->_internal_set_entity_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(from._impl_.from_position_ != nullptr);
      if (_this->_impl_.from_position_ == nullptr) {
        _this->_impl_.from_position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.from_position_);
      } else {
        _this->_impl_.from_position_->MergeFrom(*from._impl_.from_position_);
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(from._impl_.to_position_ != nullptr);
      if (_this->_impl_.to_position_ == nullptr) {
        _this->_impl_.to_position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.to_position_);
      } else {
        _this->_impl_.to_position_->MergeFrom(*from._impl_.to_position_);
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      ABSL_DCHECK(from._impl_.options_ != nullptr);
      if (_this->_impl_.options_ == nullptr) {
        _this->_impl_.options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_);
      } else {
        _this->_impl_.options_->MergeFrom(*from._impl_.options_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryMultiRoomLineOfSightRequest::CopyFrom(const QueryMultiRoomLineOfSightRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.QueryMultiRoomLineOfSightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryMultiRoomLineOfSightRequest::InternalSwap(QueryMultiRoomLineOfSightRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.from_room_id_, &other->_impl_.from_room_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.to_room_id_, &other->_impl_.to_room_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entity_id_, &other->_impl_.entity_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightRequest, _impl_.options_)
      + sizeof(QueryMultiRoomLineOfSightRequest::_impl_.options_)
      - PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightRequest, _impl_.from_position_)>(
          reinterpret_cast<char*>(&_impl_.from_position_),
          reinterpret_cast<char*>(&other->_impl_.from_position_));
}

::google::protobuf::Metadata QueryMultiRoomLineOfSightRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MultiRoomOptions::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MultiRoomOptions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MultiRoomOptions, _impl_._has_bits_);
};

MultiRoomOptions::MultiRoomOptions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MultiRoomOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.MultiRoomOptions)
}
MultiRoomOptions::MultiRoomOptions(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MultiRoomOptions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MultiRoomOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE MultiRoomOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void MultiRoomOptions::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, entity_size_),
           0,
           offsetof(Impl_, max_rooms_) -
               offsetof(Impl_, entity_size_) +
               sizeof(Impl_::max_rooms_));
}
MultiRoomOptions::~MultiRoomOptions() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.MultiRoomOptions)
  SharedDtor(*this);
}
inline void MultiRoomOptions::SharedDtor(MessageLite& self) {
  MultiRoomOptions& this_ = static_cast<MultiRoomOptions&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MultiRoomOptions::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MultiRoomOptions(arena);
}
constexpr auto MultiRoomOptions::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MultiRoomOptions),
                                            alignof(MultiRoomOptions));
}
constexpr auto MultiRoomOptions::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MultiRoomOptions_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MultiRoomOptions::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MultiRoomOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MultiRoomOptions::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MultiRoomOptions>(), &MultiRoomOptions::ByteSizeLong,
              &MultiRoomOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MultiRoomOptions, _impl_._cached_size_),
          false,
      },
      &MultiRoomOptions::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MultiRoomOptions_class_data_ =
        MultiRoomOptions::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MultiRoomOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MultiRoomOptions_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MultiRoomOptions_class_data_.tc_table);
  return MultiRoomOptions_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2>
MultiRoomOptions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MultiRoomOptions, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    MultiRoomOptions_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::MultiRoomOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 max_rooms = 4 [json_name = "maxRooms"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MultiRoomOptions, _impl_.max_rooms_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(MultiRoomOptions, _impl_.max_rooms_)}},
    // double entity_size = 1 [json_name = "entitySize"];
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(MultiRoomOptions, _impl_.entity_size_)}},
    // double max_range = 2 [json_name = "maxRange"];
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(MultiRoomOptions, _impl_.max_range_)}},
    // bool cross_rooms = 3 [json_name = "crossRooms"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MultiRoomOptions, _impl_.cross_rooms_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(MultiRoomOptions, _impl_.cross_rooms_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double entity_size = 1 [json_name = "entitySize"];
    {PROTOBUF_FIELD_OFFSET(MultiRoomOptions, _impl_.entity_size_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double max_range = 2 [json_name = "maxRange"];
    {PROTOBUF_FIELD_OFFSET(MultiRoomOptions, _impl_.max_range_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // bool cross_rooms = 3 [json_name = "crossRooms"];
    {PROTOBUF_FIELD_OFFSET(MultiRoomOptions, _impl_.cross_rooms_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // int32 max_rooms = 4 [json_name = "maxRooms"];
    {PROTOBUF_FIELD_OFFSET(MultiRoomOptions, _impl_.max_rooms_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void MultiRoomOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.MultiRoomOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    ::memset(&_impl_.entity_size_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.max_rooms_) -
        reinterpret_cast<char*>(&_impl_.entity_size_)) + sizeof(_impl_.max_rooms_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MultiRoomOptions::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MultiRoomOptions& this_ = static_cast<const MultiRoomOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MultiRoomOptions::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MultiRoomOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.MultiRoomOptions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double entity_size = 1 [json_name = "entitySize"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_entity_size()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          1, this_._internal_entity_size(), target);
    }
  }

  // double max_range = 2 [json_name = "maxRange"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_max_range()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_max_range(), target);
    }
  }

  // bool cross_rooms = 3 [json_name = "crossRooms"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_cross_rooms() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_cross_rooms(), target);
    }
  }

  // int32 max_rooms = 4 [json_name = "maxRooms"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_max_rooms() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_max_rooms(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.MultiRoomOptions)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MultiRoomOptions::ByteSizeLong(const MessageLite& base) {
  const MultiRoomOptions& this_ = static_cast<const MultiRoomOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MultiRoomOptions::ByteSizeLong() const {
  const MultiRoomOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.MultiRoomOptions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // double entity_size = 1 [json_name = "entitySize"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_entity_size()) != 0) {
        total_size += 9;
      }
    }
    // double max_range = 2 [json_name = "maxRange"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_max_range()) != 0) {
        total_size += 9;
      }
    }
    // bool cross_rooms = 3 [json_name = "crossRooms"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_cross_rooms() != 0) {
        total_size += 2;
      }
    }
    // int32 max_rooms = 4 [json_name = "maxRooms"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_max_rooms() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_max_rooms());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MultiRoomOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MultiRoomOptions*>(&to_msg);
  auto& from = static_cast<const MultiRoomOptions&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.MultiRoomOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_entity_size()) != 0) {
        _this->_impl_.entity_size_ = from._impl_.entity_size_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_max_range()) != 0) {
        _this->_impl_.max_range_ = from._impl_.max_range_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_cross_rooms() != 0) {
        _this->_impl_.cross_rooms_ = from._impl_.cross_rooms_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_max_rooms() != 0) {
        _this->_impl_.max_rooms_ = from._impl_.max_rooms_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MultiRoomOptions::CopyFrom(const MultiRoomOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.MultiRoomOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MultiRoomOptions::InternalSwap(MultiRoomOptions* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MultiRoomOptions, _impl_.max_rooms_)
      + sizeof(MultiRoomOptions::_impl_.max_rooms_)
      - PROTOBUF_FIELD_OFFSET(MultiRoomOptions, _impl_.entity_size_)>(
          reinterpret_cast<char*>(&_impl_.entity_size_),
          reinterpret_cast<char*>(&other->_impl_.entity_size_));
}

::google::protobuf::Metadata MultiRoomOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryMultiRoomLineOfSightResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<QueryMultiRoomLineOfSightResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightResponse, _impl_._has_bits_);
};

void QueryMultiRoomLineOfSightResponse::clear_blocking_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.blocking_position_ != nullptr) _impl_.blocking_position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
QueryMultiRoomLineOfSightResponse::QueryMultiRoomLineOfSightResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, QueryMultiRoomLineOfSightResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.QueryMultiRoomLineOfSightResponse)
}
PROTOBUF_NDEBUG_INLINE QueryMultiRoomLineOfSightResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::QueryMultiRoomLineOfSightResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        rooms_crossed_{visibility, arena, from.rooms_crossed_},
        connection_points_{visibility, arena, from.connection_points_},
        path_positions_{visibility, arena, from.path_positions_},
        blocking_entity_id_(arena, from.blocking_entity_id_) {}

QueryMultiRoomLineOfSightResponse::QueryMultiRoomLineOfSightResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const QueryMultiRoomLineOfSightResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, QueryMultiRoomLineOfSightResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryMultiRoomLineOfSightResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.blocking_position_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.blocking_position_)
                : nullptr;
  _impl_.stats_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.stats_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_distance_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, total_distance_),
           offsetof(Impl_, has_line_of_sight_) -
               offsetof(Impl_, total_distance_) +
               sizeof(Impl_::has_line_of_sight_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.QueryMultiRoomLineOfSightResponse)
}
PROTOBUF_NDEBUG_INLINE QueryMultiRoomLineOfSightResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        rooms_crossed_{visibility, arena},
        connection_points_{visibility, arena},
        path_positions_{visibility, arena},
        blocking_entity_id_(arena) {}

inline void QueryMultiRoomLineOfSightResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, blocking_position_),
           0,
           offsetof(Impl_, has_line_of_sight_) -
               offsetof(Impl_, blocking_position_) +
               sizeof(Impl_::has_line_of_sight_));
}
QueryMultiRoomLineOfSightResponse::~QueryMultiRoomLineOfSightResponse() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.QueryMultiRoomLineOfSightResponse)
  SharedDtor(*this);
}
inline void QueryMultiRoomLineOfSightResponse::SharedDtor(MessageLite& self) {
  QueryMultiRoomLineOfSightResponse& this_ = static_cast<QueryMultiRoomLineOfSightResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.blocking_entity_id_.Destroy();
  delete this_._impl_.blocking_position_;
  delete this_._impl_.stats_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL QueryMultiRoomLineOfSightResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) QueryMultiRoomLineOfSightResponse(arena);
}
constexpr auto QueryMultiRoomLineOfSightResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightResponse, _impl_.rooms_crossed_) +
          decltype(QueryMultiRoomLineOfSightResponse::_impl_.rooms_crossed_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightResponse, _impl_.connection_points_) +
          decltype(QueryMultiRoomLineOfSightResponse::_impl_.connection_points_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightResponse, _impl_.path_positions_) +
          decltype(QueryMultiRoomLineOfSightResponse::_impl_.path_positions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(QueryMultiRoomLineOfSightResponse), alignof(QueryMultiRoomLineOfSightResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&QueryMultiRoomLineOfSightResponse::PlacementNew_,
                                 sizeof(QueryMultiRoomLineOfSightResponse),
                                 alignof(QueryMultiRoomLineOfSightResponse));
  }
}
constexpr auto QueryMultiRoomLineOfSightResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_QueryMultiRoomLineOfSightResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &QueryMultiRoomLineOfSightResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<QueryMultiRoomLineOfSightResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &QueryMultiRoomLineOfSightResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<QueryMultiRoomLineOfSightResponse>(), &QueryMultiRoomLineOfSightResponse::ByteSizeLong,
              &QueryMultiRoomLineOfSightResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightResponse, _impl_._cached_size_),
          false,
      },
      &QueryMultiRoomLineOfSightResponse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull QueryMultiRoomLineOfSightResponse_class_data_ =
        QueryMultiRoomLineOfSightResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
QueryMultiRoomLineOfSightResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&QueryMultiRoomLineOfSightResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(QueryMultiRoomLineOfSightResponse_class_data_.tc_table);
  return QueryMultiRoomLineOfSightResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 4, 94, 2>
QueryMultiRoomLineOfSightResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightResponse, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    QueryMultiRoomLineOfSightResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::QueryMultiRoomLineOfSightResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .api.v1alpha1.SpatialQueryStats stats = 8 [json_name = "stats"];
    {::_pbi::TcParser::FastMtS1,
     {66, 2, 3, PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightResponse, _impl_.stats_)}},
    // bool has_line_of_sight = 1 [json_name = "hasLineOfSight"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(QueryMultiRoomLineOfSightResponse, _impl_.has_line_of_sight_), 4>(),
     {8, 4, 0, PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightResponse, _impl_.has_line_of_sight_)}},
    // string blocking_entity_id = 2 [json_name = "blockingEntityId"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightResponse, _impl_.blocking_entity_id_)}},
    // .api.v1alpha1.Position blocking_position = 3 [json_name = "blockingPosition"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightResponse, _impl_.blocking_position_)}},
    // repeated string rooms_crossed = 4 [json_name = "roomsCrossed"];
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightResponse, _impl_.rooms_crossed_)}},
    // repeated .api.v1alpha1.ConnectionPoint connection_points = 5 [json_name = "connectionPoints"];
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 1, PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightResponse, _impl_.connection_points_)}},
    // double total_distance = 6 [json_name = "totalDistance"];
    {::_pbi::TcParser::FastF64S1,
     {49, 3, 0, PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightResponse, _impl_.total_distance_)}},
    // repeated .api.v1alpha1.MultiRoomPosition path_positions = 7 [json_name = "pathPositions"];
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 2, PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightResponse, _impl_.path_positions_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool has_line_of_sight = 1 [json_name = "hasLineOfSight"];
    {PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightResponse, _impl_.has_line_of_sight_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string blocking_entity_id = 2 [json_name = "blockingEntityId"];
    {PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightResponse, _impl_.blocking_entity_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.Position blocking_position = 3 [json_name = "blockingPosition"];
    {PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightResponse, _impl_.blocking_position_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string rooms_crossed = 4 [json_name = "roomsCrossed"];
    {PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightResponse, _impl_.rooms_crossed_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated .api.v1alpha1.ConnectionPoint connection_points = 5 [json_name = "connectionPoints"];
    {PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightResponse, _impl_.connection_points_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // double total_distance = 6 [json_name = "totalDistance"];
    {PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightResponse, _impl_.total_distance_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // repeated .api.v1alpha1.MultiRoomPosition path_positions = 7 [json_name = "pathPositions"];
    {PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightResponse, _impl_.path_positions_), -1, 2, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.SpatialQueryStats stats = 8 [json_name = "stats"];
    {PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightResponse, _impl_.stats_), _Internal::kHasBitsOffset + 2, 3, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::ConnectionPoint>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::MultiRoomPosition>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::SpatialQueryStats>()},
  }},
  {{
    "\56\0\22\0\15\0\0\0\0\0\0\0\0\0\0\0"
    "api.v1alpha1.QueryMultiRoomLineOfSightResponse"
    "blocking_entity_id"
    "rooms_crossed"
  }},
};
PROTOBUF_NOINLINE void QueryMultiRoomLineOfSightResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.QueryMultiRoomLineOfSightResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rooms_crossed_.Clear();
  _impl_.connection_points_.Clear();
  _impl_.path_positions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.blocking_entity_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.blocking_position_ != nullptr);
      _impl_.blocking_position_->Clear();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.stats_ != nullptr);
      _impl_.stats_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000018U) != 0) {
    ::memset(&_impl_.total_distance_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.has_line_of_sight_) -
        reinterpret_cast<char*>(&_impl_.total_distance_)) + sizeof(_impl_.has_line_of_sight_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL QueryMultiRoomLineOfSightResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const QueryMultiRoomLineOfSightResponse& this_ = static_cast<const QueryMultiRoomLineOfSightResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL QueryMultiRoomLineOfSightResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const QueryMultiRoomLineOfSightResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.QueryMultiRoomLineOfSightResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool has_line_of_sight = 1 [json_name = "hasLineOfSight"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_has_line_of_sight() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_has_line_of_sight(), target);
    }
  }

  // string blocking_entity_id = 2 [json_name = "blockingEntityId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_blocking_entity_id().empty()) {
      const ::std::string& _s = this_._internal_blocking_entity_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.QueryMultiRoomLineOfSightResponse.blocking_entity_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.Position blocking_position = 3 [json_name = "blockingPosition"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.blocking_position_, this_._impl_.blocking_position_->GetCachedSize(), target,
        stream);
  }

  // repeated string rooms_crossed = 4 [json_name = "roomsCrossed"];
  for (int i = 0, n = this_._internal_rooms_crossed_size(); i < n; ++i) {
    const auto& s = this_._internal_rooms_crossed().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.QueryMultiRoomLineOfSightResponse.rooms_crossed");
    target = stream->WriteString(4, s, target);
  }

  // repeated .api.v1alpha1.ConnectionPoint connection_points = 5 [json_name = "connectionPoints"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_connection_points_size());
       i < n; i++) {
    const auto& repfield = this_._internal_connection_points().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // double total_distance = 6 [json_name = "totalDistance"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_total_distance()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          6, this_._internal_total_distance(), target);
    }
  }

  // repeated .api.v1alpha1.MultiRoomPosition path_positions = 7 [json_name = "pathPositions"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_path_positions_size());
       i < n; i++) {
    const auto& repfield = this_._internal_path_positions().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            7, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // .api.v1alpha1.SpatialQueryStats stats = 8 [json_name = "stats"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *this_._impl_.stats_, this_._impl_.stats_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.QueryMultiRoomLineOfSightResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t QueryMultiRoomLineOfSightResponse::ByteSizeLong(const MessageLite& base) {
  const QueryMultiRoomLineOfSightResponse& this_ = static_cast<const QueryMultiRoomLineOfSightResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t QueryMultiRoomLineOfSightResponse::ByteSizeLong() const {
  const QueryMultiRoomLineOfSightResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.QueryMultiRoomLineOfSightResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string rooms_crossed = 4 [json_name = "roomsCrossed"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_rooms_crossed().size());
      for (int i = 0, n = this_._internal_rooms_crossed().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_rooms_crossed().Get(i));
      }
    }
    // repeated .api.v1alpha1.ConnectionPoint connection_points = 5 [json_name = "connectionPoints"];
    {
      total_size += 1UL * this_._internal_connection_points_size();
      for (const auto& msg : this_._internal_connection_points()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .api.v1alpha1.MultiRoomPosition path_positions = 7 [json_name = "pathPositions"];
    {
      total_size += 1UL * this_._internal_path_positions_size();
      for (const auto& msg : this_._internal_path_positions()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // string blocking_entity_id = 2 [json_name = "blockingEntityId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_blocking_entity_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_blocking_entity_id());
      }
    }
    // .api.v1alpha1.Position blocking_position = 3 [json_name = "blockingPosition"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.blocking_position_);
    }
    // .api.v1alpha1.SpatialQueryStats stats = 8 [json_name = "stats"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.stats_);
    }
    // double total_distance = 6 [json_name = "totalDistance"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_total_distance()) != 0) {
        total_size += 9;
      }
    }
    // bool has_line_of_sight = 1 [json_name = "hasLineOfSight"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_has_line_of_sight() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void QueryMultiRoomLineOfSightResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryMultiRoomLineOfSightResponse*>(&to_msg);
  auto& from = static_cast<const QueryMultiRoomLineOfSightResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.QueryMultiRoomLineOfSightResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_rooms_crossed()->MergeFrom(from._internal_rooms_crossed());
  _this->_internal_mutable_connection_points()->MergeFrom(
      from._internal_connection_points());
  _this->_internal_mutable_path_positions()->MergeFrom(
      from._internal_path_positions());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_blocking_entity_id().empty()) {
        _this->_internal_set_blocking_entity_id(from._internal_blocking_entity_id());
      } else {
        if (_this->_impl_.blocking_entity_id_.IsDefault()) {
          _this->_internal_set_blocking_entity_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.blocking_position_ != nullptr);
      if (_this->_impl_.blocking_position_ == nullptr) {
        _this->_impl_.blocking_position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.blocking_position_);
      } else {
        _this->_impl_.blocking_position_->MergeFrom(*from._impl_.blocking_position_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.stats_ != nullptr);
      if (_this->_impl_.stats_ == nullptr) {
        _this->_impl_.stats_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.stats_);
      } else {
        _this->_impl_.stats_->MergeFrom(*from._impl_.stats_);
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_total_distance()) != 0) {
        _this->_impl_.total_distance_ = from._impl_.total_distance_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_has_line_of_sight() != 0) {
        _this->_impl_.has_line_of_sight_ = from._impl_.has_line_of_sight_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryMultiRoomLineOfSightResponse::CopyFrom(const QueryMultiRoomLineOfSightResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.QueryMultiRoomLineOfSightResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryMultiRoomLineOfSightResponse::InternalSwap(QueryMultiRoomLineOfSightResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.rooms_crossed_.InternalSwap(&other->_impl_.rooms_crossed_);
  _impl_.connection_points_.InternalSwap(&other->_impl_.connection_points_);
  _impl_.path_positions_.InternalSwap(&other->_impl_.path_positions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.blocking_entity_id_, &other->_impl_.blocking_entity_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightResponse, _impl_.has_line_of_sight_)
      + sizeof(QueryMultiRoomLineOfSightResponse::_impl_.has_line_of_sight_)
      - PROTOBUF_FIELD_OFFSET(QueryMultiRoomLineOfSightResponse, _impl_.blocking_position_)>(
          reinterpret_cast<char*>(&_impl_.blocking_position_),
          reinterpret_cast<char*>(&other->_impl_.blocking_position_));
}

::google::protobuf::Metadata QueryMultiRoomLineOfSightResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ConnectionPoint::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ConnectionPoint>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ConnectionPoint, _impl_._has_bits_);
};

void ConnectionPoint::clear_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ != nullptr) _impl_.position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010U;
}
ConnectionPoint::ConnectionPoint(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ConnectionPoint_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.ConnectionPoint)
}
PROTOBUF_NDEBUG_INLINE ConnectionPoint::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::ConnectionPoint& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        room_id_(arena, from.room_id_),
        connected_to_(arena, from.connected_to_),
        connection_type_(arena, from.connection_type_),
        blocking_entity_(arena, from.blocking_entity_) {}

ConnectionPoint::ConnectionPoint(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ConnectionPoint& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ConnectionPoint_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ConnectionPoint* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ = ((cached_has_bits & 0x00000010U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.position_)
                : nullptr;
  _impl_.is_blocked_ = from._impl_.is_blocked_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.ConnectionPoint)
}
PROTOBUF_NDEBUG_INLINE ConnectionPoint::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        room_id_(arena),
        connected_to_(arena),
        connection_type_(arena),
        blocking_entity_(arena) {}

inline void ConnectionPoint::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_),
           0,
           offsetof(Impl_, is_blocked_) -
               offsetof(Impl_, position_) +
               sizeof(Impl_::is_blocked_));
}
ConnectionPoint::~ConnectionPoint() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.ConnectionPoint)
  SharedDtor(*this);
}
inline void ConnectionPoint::SharedDtor(MessageLite& self) {
  ConnectionPoint& this_ = static_cast<ConnectionPoint&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.room_id_.Destroy();
  this_._impl_.connected_to_.Destroy();
  this_._impl_.connection_type_.Destroy();
  this_._impl_.blocking_entity_.Destroy();
  delete this_._impl_.position_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ConnectionPoint::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ConnectionPoint(arena);
}
constexpr auto ConnectionPoint::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ConnectionPoint),
                                            alignof(ConnectionPoint));
}
constexpr auto ConnectionPoint::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ConnectionPoint_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ConnectionPoint::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ConnectionPoint>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ConnectionPoint::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ConnectionPoint>(), &ConnectionPoint::ByteSizeLong,
              &ConnectionPoint::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ConnectionPoint, _impl_._cached_size_),
          false,
      },
      &ConnectionPoint::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ConnectionPoint_class_data_ =
        ConnectionPoint::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ConnectionPoint::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ConnectionPoint_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ConnectionPoint_class_data_.tc_table);
  return ConnectionPoint_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 86, 2>
ConnectionPoint::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ConnectionPoint, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ConnectionPoint_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::ConnectionPoint>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string room_id = 1 [json_name = "roomId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ConnectionPoint, _impl_.room_id_)}},
    // string connected_to = 2 [json_name = "connectedTo"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(ConnectionPoint, _impl_.connected_to_)}},
    // .api.v1alpha1.Position position = 3 [json_name = "position"];
    {::_pbi::TcParser::FastMtS1,
     {26, 4, 0, PROTOBUF_FIELD_OFFSET(ConnectionPoint, _impl_.position_)}},
    // string connection_type = 4 [json_name = "connectionType"];
    {::_pbi::TcParser::FastUS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(ConnectionPoint, _impl_.connection_type_)}},
    // bool is_blocked = 5 [json_name = "isBlocked"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ConnectionPoint, _impl_.is_blocked_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(ConnectionPoint, _impl_.is_blocked_)}},
    // string blocking_entity = 6 [json_name = "blockingEntity"];
    {::_pbi::TcParser::FastUS1,
     {50, 3, 0, PROTOBUF_FIELD_OFFSET(ConnectionPoint, _impl_.blocking_entity_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string room_id = 1 [json_name = "roomId"];
    {PROTOBUF_FIELD_OFFSET(ConnectionPoint, _impl_.room_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string connected_to = 2 [json_name = "connectedTo"];
    {PROTOBUF_FIELD_OFFSET(ConnectionPoint, _impl_.connected_to_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.Position position = 3 [json_name = "position"];
    {PROTOBUF_FIELD_OFFSET(ConnectionPoint, _impl_.position_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string connection_type = 4 [json_name = "connectionType"];
    {PROTOBUF_FIELD_OFFSET(ConnectionPoint, _impl_.connection_type_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool is_blocked = 5 [json_name = "isBlocked"];
    {PROTOBUF_FIELD_OFFSET(ConnectionPoint, _impl_.is_blocked_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string blocking_entity = 6 [json_name = "blockingEntity"];
    {PROTOBUF_FIELD_OFFSET(ConnectionPoint, _impl_.blocking_entity_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
  }},
  {{
    "\34\7\14\0\17\0\17\0"
    "api.v1alpha1.ConnectionPoint"
    "room_id"
    "connected_to"
    "connection_type"
    "blocking_entity"
  }},
};
PROTOBUF_NOINLINE void ConnectionPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.ConnectionPoint)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.room_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.connected_to_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.connection_type_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.blocking_entity_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
  }
  _impl_.is_blocked_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ConnectionPoint::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ConnectionPoint& this_ = static_cast<const ConnectionPoint&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ConnectionPoint::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ConnectionPoint& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.ConnectionPoint)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string room_id = 1 [json_name = "roomId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_room_id().empty()) {
      const ::std::string& _s = this_._internal_room_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.ConnectionPoint.room_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string connected_to = 2 [json_name = "connectedTo"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_connected_to().empty()) {
      const ::std::string& _s = this_._internal_connected_to();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.ConnectionPoint.connected_to");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.Position position = 3 [json_name = "position"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.position_, this_._impl_.position_->GetCachedSize(), target,
        stream);
  }

  // string connection_type = 4 [json_name = "connectionType"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    if (!this_._internal_connection_type().empty()) {
      const ::std::string& _s = this_._internal_connection_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.ConnectionPoint.connection_type");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // bool is_blocked = 5 [json_name = "isBlocked"];
  if ((cached_has_bits & 0x00000020U) != 0) {
    if (this_._internal_is_blocked() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          5, this_._internal_is_blocked(), target);
    }
  }

  // string blocking_entity = 6 [json_name = "blockingEntity"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    if (!this_._internal_blocking_entity().empty()) {
      const ::std::string& _s = this_._internal_blocking_entity();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.ConnectionPoint.blocking_entity");
      target = stream->WriteStringMaybeAliased(6, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.ConnectionPoint)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ConnectionPoint::ByteSizeLong(const MessageLite& base) {
  const ConnectionPoint& this_ = static_cast<const ConnectionPoint&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ConnectionPoint::ByteSizeLong() const {
  const ConnectionPoint& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.ConnectionPoint)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    // string room_id = 1 [json_name = "roomId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_room_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_room_id());
      }
    }
    // string connected_to = 2 [json_name = "connectedTo"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_connected_to().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_connected_to());
      }
    }
    // string connection_type = 4 [json_name = "connectionType"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_connection_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_connection_type());
      }
    }
    // string blocking_entity = 6 [json_name = "blockingEntity"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_blocking_entity().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_blocking_entity());
      }
    }
    // .api.v1alpha1.Position position = 3 [json_name = "position"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.position_);
    }
    // bool is_blocked = 5 [json_name = "isBlocked"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_is_blocked() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ConnectionPoint::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ConnectionPoint*>(&to_msg);
  auto& from = static_cast<const ConnectionPoint&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.ConnectionPoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_room_id().empty()) {
        _this->_internal_set_room_id(from._internal_room_id());
      } else {
        if (_this->_impl_.room_id_.IsDefault()) {
          _this->_internal_set_room_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_connected_to().empty()) {
        _this->_internal_set_connected_to(from._internal_connected_to());
      } else {
        if (_this->_impl_.connected_to_.IsDefault()) {
          _this->_internal_set_connected_to("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_connection_type().empty()) {
        _this->_internal_set_connection_type(from._internal_connection_type());
      } else {
        if (_this->_impl_.connection_type_.IsDefault()) {
          _this->_internal_set_connection_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_blocking_entity().empty()) {
        _this->_internal_set_blocking_entity(from._internal_blocking_entity());
      } else {
        if (_this->_impl_.blocking_entity_.IsDefault()) {
          _this->_internal_set_blocking_entity("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(from._impl_.position_ != nullptr);
      if (_this->_impl_.position_ == nullptr) {
        _this->_impl_.position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.position_);
      } else {
        _this->_impl_.position_->MergeFrom(*from._impl_.position_);
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_is_blocked() != 0) {
        _this->_impl_.is_blocked_ = from._impl_.is_blocked_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConnectionPoint::CopyFrom(const ConnectionPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.ConnectionPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ConnectionPoint::InternalSwap(ConnectionPoint* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.room_id_, &other->_impl_.room_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.connected_to_, &other->_impl_.connected_to_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.connection_type_, &other->_impl_.connection_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.blocking_entity_, &other->_impl_.blocking_entity_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConnectionPoint, _impl_.is_blocked_)
      + sizeof(ConnectionPoint::_impl_.is_blocked_)
      - PROTOBUF_FIELD_OFFSET(ConnectionPoint, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::google::protobuf::Metadata ConnectionPoint::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MultiRoomPosition::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MultiRoomPosition>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MultiRoomPosition, _impl_._has_bits_);
};

void MultiRoomPosition::clear_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ != nullptr) _impl_.position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
MultiRoomPosition::MultiRoomPosition(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MultiRoomPosition_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.MultiRoomPosition)
}
PROTOBUF_NDEBUG_INLINE MultiRoomPosition::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::MultiRoomPosition& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        room_id_(arena, from.room_id_) {}

MultiRoomPosition::MultiRoomPosition(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MultiRoomPosition& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MultiRoomPosition_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MultiRoomPosition* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.position_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.MultiRoomPosition)
}
PROTOBUF_NDEBUG_INLINE MultiRoomPosition::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        room_id_(arena) {}

inline void MultiRoomPosition::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.position_ = {};
}
MultiRoomPosition::~MultiRoomPosition() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.MultiRoomPosition)
  SharedDtor(*this);
}
inline void MultiRoomPosition::SharedDtor(MessageLite& self) {
  MultiRoomPosition& this_ = static_cast<MultiRoomPosition&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.room_id_.Destroy();
  delete this_._impl_.position_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MultiRoomPosition::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MultiRoomPosition(arena);
}
constexpr auto MultiRoomPosition::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MultiRoomPosition),
                                            alignof(MultiRoomPosition));
}
constexpr auto MultiRoomPosition::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MultiRoomPosition_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MultiRoomPosition::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MultiRoomPosition>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MultiRoomPosition::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MultiRoomPosition>(), &MultiRoomPosition::ByteSizeLong,
              &MultiRoomPosition::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MultiRoomPosition, _impl_._cached_size_),
          false,
      },
      &MultiRoomPosition::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MultiRoomPosition_class_data_ =
        MultiRoomPosition::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MultiRoomPosition::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MultiRoomPosition_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MultiRoomPosition_class_data_.tc_table);
  return MultiRoomPosition_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 46, 2>
MultiRoomPosition::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MultiRoomPosition, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    MultiRoomPosition_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::MultiRoomPosition>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .api.v1alpha1.Position position = 2 [json_name = "position"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(MultiRoomPosition, _impl_.position_)}},
    // string room_id = 1 [json_name = "roomId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(MultiRoomPosition, _impl_.room_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string room_id = 1 [json_name = "roomId"];
    {PROTOBUF_FIELD_OFFSET(MultiRoomPosition, _impl_.room_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.Position position = 2 [json_name = "position"];
    {PROTOBUF_FIELD_OFFSET(MultiRoomPosition, _impl_.position_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
  }},
  {{
    "\36\7\0\0\0\0\0\0"
    "api.v1alpha1.MultiRoomPosition"
    "room_id"
  }},
};
PROTOBUF_NOINLINE void MultiRoomPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.MultiRoomPosition)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.room_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MultiRoomPosition::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MultiRoomPosition& this_ = static_cast<const MultiRoomPosition&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MultiRoomPosition::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MultiRoomPosition& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.MultiRoomPosition)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string room_id = 1 [json_name = "roomId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_room_id().empty()) {
      const ::std::string& _s = this_._internal_room_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.MultiRoomPosition.room_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.Position position = 2 [json_name = "position"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.position_, this_._impl_.position_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.MultiRoomPosition)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MultiRoomPosition::ByteSizeLong(const MessageLite& base) {
  const MultiRoomPosition& this_ = static_cast<const MultiRoomPosition&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MultiRoomPosition::ByteSizeLong() const {
  const MultiRoomPosition& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.MultiRoomPosition)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string room_id = 1 [json_name = "roomId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_room_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_room_id());
      }
    }
    // .api.v1alpha1.Position position = 2 [json_name = "position"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.position_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MultiRoomPosition::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MultiRoomPosition*>(&to_msg);
  auto& from = static_cast<const MultiRoomPosition&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.MultiRoomPosition)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_room_id().empty()) {
        _this->_internal_set_room_id(from._internal_room_id());
      } else {
        if (_this->_impl_.room_id_.IsDefault()) {
          _this->_internal_set_room_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.position_ != nullptr);
      if (_this->_impl_.position_ == nullptr) {
        _this->_impl_.position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.position_);
      } else {
        _this->_impl_.position_->MergeFrom(*from._impl_.position_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MultiRoomPosition::CopyFrom(const MultiRoomPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.MultiRoomPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MultiRoomPosition::InternalSwap(MultiRoomPosition* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.room_id_, &other->_impl_.room_id_, arena);
  swap(_impl_.position_, other->_impl_.position_);
}

::google::protobuf::Metadata MultiRoomPosition::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CalculateMultiRoomPathRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CalculateMultiRoomPathRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathRequest, _impl_._has_bits_);
};

void CalculateMultiRoomPathRequest::clear_from_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.from_position_ != nullptr) _impl_.from_position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008U;
}
void CalculateMultiRoomPathRequest::clear_to_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.to_position_ != nullptr) _impl_.to_position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010U;
}
CalculateMultiRoomPathRequest::CalculateMultiRoomPathRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CalculateMultiRoomPathRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.CalculateMultiRoomPathRequest)
}
PROTOBUF_NDEBUG_INLINE CalculateMultiRoomPathRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::CalculateMultiRoomPathRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        from_room_id_(arena, from.from_room_id_),
        to_room_id_(arena, from.to_room_id_),
        entity_id_(arena, from.entity_id_) {}

CalculateMultiRoomPathRequest::CalculateMultiRoomPathRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CalculateMultiRoomPathRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CalculateMultiRoomPathRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CalculateMultiRoomPathRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.from_position_ = ((cached_has_bits & 0x00000008U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.from_position_)
                : nullptr;
  _impl_.to_position_ = ((cached_has_bits & 0x00000010U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.to_position_)
                : nullptr;
  _impl_.options_ = ((cached_has_bits & 0x00000020U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.CalculateMultiRoomPathRequest)
}
PROTOBUF_NDEBUG_INLINE CalculateMultiRoomPathRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        from_room_id_(arena),
        to_room_id_(arena),
        entity_id_(arena) {}

inline void CalculateMultiRoomPathRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, from_position_),
           0,
           offsetof(Impl_, options_) -
               offsetof(Impl_, from_position_) +
               sizeof(Impl_::options_));
}
CalculateMultiRoomPathRequest::~CalculateMultiRoomPathRequest() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.CalculateMultiRoomPathRequest)
  SharedDtor(*this);
}
inline void CalculateMultiRoomPathRequest::SharedDtor(MessageLite& self) {
  CalculateMultiRoomPathRequest& this_ = static_cast<CalculateMultiRoomPathRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.from_room_id_.Destroy();
  this_._impl_.to_room_id_.Destroy();
  this_._impl_.entity_id_.Destroy();
  delete this_._impl_.from_position_;
  delete this_._impl_.to_position_;
  delete this_._impl_.options_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CalculateMultiRoomPathRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CalculateMultiRoomPathRequest(arena);
}
constexpr auto CalculateMultiRoomPathRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CalculateMultiRoomPathRequest),
                                            alignof(CalculateMultiRoomPathRequest));
}
constexpr auto CalculateMultiRoomPathRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CalculateMultiRoomPathRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CalculateMultiRoomPathRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CalculateMultiRoomPathRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CalculateMultiRoomPathRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CalculateMultiRoomPathRequest>(), &CalculateMultiRoomPathRequest::ByteSizeLong,
              &CalculateMultiRoomPathRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathRequest, _impl_._cached_size_),
          false,
      },
      &CalculateMultiRoomPathRequest::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CalculateMultiRoomPathRequest_class_data_ =
        CalculateMultiRoomPathRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CalculateMultiRoomPathRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CalculateMultiRoomPathRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CalculateMultiRoomPathRequest_class_data_.tc_table);
  return CalculateMultiRoomPathRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 3, 82, 2>
CalculateMultiRoomPathRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathRequest, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CalculateMultiRoomPathRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::CalculateMultiRoomPathRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string from_room_id = 1 [json_name = "fromRoomId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathRequest, _impl_.from_room_id_)}},
    // string to_room_id = 2 [json_name = "toRoomId"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathRequest, _impl_.to_room_id_)}},
    // .api.v1alpha1.Position from_position = 3 [json_name = "fromPosition"];
    {::_pbi::TcParser::FastMtS1,
     {26, 3, 0, PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathRequest, _impl_.from_position_)}},
    // .api.v1alpha1.Position to_position = 4 [json_name = "toPosition"];
    {::_pbi::TcParser::FastMtS1,
     {34, 4, 1, PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathRequest, _impl_.to_position_)}},
    // string entity_id = 5 [json_name = "entityId"];
    {::_pbi::TcParser::FastUS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathRequest, _impl_.entity_id_)}},
    // .api.v1alpha1.MultiRoomPathfindingOptions options = 6 [json_name = "options"];
    {::_pbi::TcParser::FastMtS1,
     {50, 5, 2, PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathRequest, _impl_.options_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string from_room_id = 1 [json_name = "fromRoomId"];
    {PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathRequest, _impl_.from_room_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string to_room_id = 2 [json_name = "toRoomId"];
    {PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathRequest, _impl_.to_room_id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.Position from_position = 3 [json_name = "fromPosition"];
    {PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathRequest, _impl_.from_position_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.Position to_position = 4 [json_name = "toPosition"];
    {PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathRequest, _impl_.to_position_), _Internal::kHasBitsOffset + 4, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string entity_id = 5 [json_name = "entityId"];
    {PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathRequest, _impl_.entity_id_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.MultiRoomPathfindingOptions options = 6 [json_name = "options"];
    {PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathRequest, _impl_.options_), _Internal::kHasBitsOffset + 5, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::MultiRoomPathfindingOptions>()},
  }},
  {{
    "\52\14\12\0\0\11\0\0"
    "api.v1alpha1.CalculateMultiRoomPathRequest"
    "from_room_id"
    "to_room_id"
    "entity_id"
  }},
};
PROTOBUF_NOINLINE void CalculateMultiRoomPathRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.CalculateMultiRoomPathRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.from_room_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.to_room_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.entity_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(_impl_.from_position_ != nullptr);
      _impl_.from_position_->Clear();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(_impl_.to_position_ != nullptr);
      _impl_.to_position_->Clear();
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      ABSL_DCHECK(_impl_.options_ != nullptr);
      _impl_.options_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CalculateMultiRoomPathRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CalculateMultiRoomPathRequest& this_ = static_cast<const CalculateMultiRoomPathRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CalculateMultiRoomPathRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CalculateMultiRoomPathRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.CalculateMultiRoomPathRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string from_room_id = 1 [json_name = "fromRoomId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_from_room_id().empty()) {
      const ::std::string& _s = this_._internal_from_room_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.CalculateMultiRoomPathRequest.from_room_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string to_room_id = 2 [json_name = "toRoomId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_to_room_id().empty()) {
      const ::std::string& _s = this_._internal_to_room_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.CalculateMultiRoomPathRequest.to_room_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.Position from_position = 3 [json_name = "fromPosition"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.from_position_, this_._impl_.from_position_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.Position to_position = 4 [json_name = "toPosition"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.to_position_, this_._impl_.to_position_->GetCachedSize(), target,
        stream);
  }

  // string entity_id = 5 [json_name = "entityId"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    if (!this_._internal_entity_id().empty()) {
      const ::std::string& _s = this_._internal_entity_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.CalculateMultiRoomPathRequest.entity_id");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  // .api.v1alpha1.MultiRoomPathfindingOptions options = 6 [json_name = "options"];
  if ((cached_has_bits & 0x00000020U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.options_, this_._impl_.options_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.CalculateMultiRoomPathRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CalculateMultiRoomPathRequest::ByteSizeLong(const MessageLite& base) {
  const CalculateMultiRoomPathRequest& this_ = static_cast<const CalculateMultiRoomPathRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CalculateMultiRoomPathRequest::ByteSizeLong() const {
  const CalculateMultiRoomPathRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.CalculateMultiRoomPathRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    // string from_room_id = 1 [json_name = "fromRoomId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_from_room_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_from_room_id());
      }
    }
    // string to_room_id = 2 [json_name = "toRoomId"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_to_room_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_to_room_id());
      }
    }
    // string entity_id = 5 [json_name = "entityId"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_entity_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_entity_id());
      }
    }
    // .api.v1alpha1.Position from_position = 3 [json_name = "fromPosition"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.from_position_);
    }
    // .api.v1alpha1.Position to_position = 4 [json_name = "toPosition"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.to_position_);
    }
    // .api.v1alpha1.MultiRoomPathfindingOptions options = 6 [json_name = "options"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.options_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CalculateMultiRoomPathRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CalculateMultiRoomPathRequest*>(&to_msg);
  auto& from = static_cast<const CalculateMultiRoomPathRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.CalculateMultiRoomPathRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_from_room_id().empty()) {
        _this->_internal_set_from_room_id(from._internal_from_room_id());
      } else {
        if (_this->_impl_.from_room_id_.IsDefault()) {
          _this->_internal_set_from_room_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_to_room_id().empty()) {
        _this->_internal_set_to_room_id(from._internal_to_room_id());
      } else {
        if (_this->_impl_.to_room_id_.IsDefault()) {
          _this->_internal_set_to_room_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_entity_id().empty()) {
        _this->_internal_set_entity_id(from._internal_entity_id());
      } else {
        if (_this->_impl_.entity_id_.IsDefault()) {
          _this->_internal_set_entity_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(from._impl_.from_position_ != nullptr);
      if (_this->_impl_.from_position_ == nullptr) {
        _this->_impl_.from_position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.from_position_);
      } else {
        _this->_impl_.from_position_->MergeFrom(*from._impl_.from_position_);
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(from._impl_.to_position_ != nullptr);
      if (_this->_impl_.to_position_ == nullptr) {
        _this->_impl_.to_position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.to_position_);
      } else {
        _this->_impl_.to_position_->MergeFrom(*from._impl_.to_position_);
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      ABSL_DCHECK(from._impl_.options_ != nullptr);
      if (_this->_impl_.options_ == nullptr) {
        _this->_impl_.options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_);
      } else {
        _this->_impl_.options_->MergeFrom(*from._impl_.options_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CalculateMultiRoomPathRequest::CopyFrom(const CalculateMultiRoomPathRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.CalculateMultiRoomPathRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CalculateMultiRoomPathRequest::InternalSwap(CalculateMultiRoomPathRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.from_room_id_, &other->_impl_.from_room_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.to_room_id_, &other->_impl_.to_room_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entity_id_, &other->_impl_.entity_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathRequest, _impl_.options_)
      + sizeof(CalculateMultiRoomPathRequest::_impl_.options_)
      - PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathRequest, _impl_.from_position_)>(
          reinterpret_cast<char*>(&_impl_.from_position_),
          reinterpret_cast<char*>(&other->_impl_.from_position_));
}

::google::protobuf::Metadata CalculateMultiRoomPathRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MultiRoomPathfindingOptions::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MultiRoomPathfindingOptions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MultiRoomPathfindingOptions, _impl_._has_bits_);
};

MultiRoomPathfindingOptions::MultiRoomPathfindingOptions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MultiRoomPathfindingOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.MultiRoomPathfindingOptions)
}
MultiRoomPathfindingOptions::MultiRoomPathfindingOptions(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MultiRoomPathfindingOptions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MultiRoomPathfindingOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE MultiRoomPathfindingOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void MultiRoomPathfindingOptions::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, entity_size_),
           0,
           offsetof(Impl_, max_rooms_) -
               offsetof(Impl_, entity_size_) +
               sizeof(Impl_::max_rooms_));
}
MultiRoomPathfindingOptions::~MultiRoomPathfindingOptions() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.MultiRoomPathfindingOptions)
  SharedDtor(*this);
}
inline void MultiRoomPathfindingOptions::SharedDtor(MessageLite& self) {
  MultiRoomPathfindingOptions& this_ = static_cast<MultiRoomPathfindingOptions&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MultiRoomPathfindingOptions::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MultiRoomPathfindingOptions(arena);
}
constexpr auto MultiRoomPathfindingOptions::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MultiRoomPathfindingOptions),
                                            alignof(MultiRoomPathfindingOptions));
}
constexpr auto MultiRoomPathfindingOptions::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MultiRoomPathfindingOptions_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MultiRoomPathfindingOptions::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MultiRoomPathfindingOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MultiRoomPathfindingOptions::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MultiRoomPathfindingOptions>(), &MultiRoomPathfindingOptions::ByteSizeLong,
              &MultiRoomPathfindingOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MultiRoomPathfindingOptions, _impl_._cached_size_),
          false,
      },
      &MultiRoomPathfindingOptions::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MultiRoomPathfindingOptions_class_data_ =
        MultiRoomPathfindingOptions::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MultiRoomPathfindingOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MultiRoomPathfindingOptions_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MultiRoomPathfindingOptions_class_data_.tc_table);
  return MultiRoomPathfindingOptions_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2>
MultiRoomPathfindingOptions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MultiRoomPathfindingOptions, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    MultiRoomPathfindingOptions_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::MultiRoomPathfindingOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double entity_size = 1 [json_name = "entitySize"];
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(MultiRoomPathfindingOptions, _impl_.entity_size_)}},
    // .api.v1alpha1.MovementType movement_type = 2 [json_name = "movementType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MultiRoomPathfindingOptions, _impl_.movement_type_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(MultiRoomPathfindingOptions, _impl_.movement_type_)}},
    // double max_total_cost = 3 [json_name = "maxTotalCost"];
    {::_pbi::TcParser::FastF64S1,
     {25, 1, 0, PROTOBUF_FIELD_OFFSET(MultiRoomPathfindingOptions, _impl_.max_total_cost_)}},
    // bool allow_door_opening = 4 [json_name = "allowDoorOpening"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MultiRoomPathfindingOptions, _impl_.allow_door_opening_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(MultiRoomPathfindingOptions, _impl_.allow_door_opening_)}},
    // bool prefer_known_paths = 5 [json_name = "preferKnownPaths"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MultiRoomPathfindingOptions, _impl_.prefer_known_paths_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(MultiRoomPathfindingOptions, _impl_.prefer_known_paths_)}},
    // int32 max_rooms = 6 [json_name = "maxRooms"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MultiRoomPathfindingOptions, _impl_.max_rooms_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(MultiRoomPathfindingOptions, _impl_.max_rooms_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // double entity_size = 1 [json_name = "entitySize"];
    {PROTOBUF_FIELD_OFFSET(MultiRoomPathfindingOptions, _impl_.entity_size_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // .api.v1alpha1.MovementType movement_type = 2 [json_name = "movementType"];
    {PROTOBUF_FIELD_OFFSET(MultiRoomPathfindingOptions, _impl_.movement_type_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // double max_total_cost = 3 [json_name = "maxTotalCost"];
    {PROTOBUF_FIELD_OFFSET(MultiRoomPathfindingOptions, _impl_.max_total_cost_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // bool allow_door_opening = 4 [json_name = "allowDoorOpening"];
    {PROTOBUF_FIELD_OFFSET(MultiRoomPathfindingOptions, _impl_.allow_door_opening_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool prefer_known_paths = 5 [json_name = "preferKnownPaths"];
    {PROTOBUF_FIELD_OFFSET(MultiRoomPathfindingOptions, _impl_.prefer_known_paths_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // int32 max_rooms = 6 [json_name = "maxRooms"];
    {PROTOBUF_FIELD_OFFSET(MultiRoomPathfindingOptions, _impl_.max_rooms_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void MultiRoomPathfindingOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.MultiRoomPathfindingOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    ::memset(&_impl_.entity_size_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.max_rooms_) -
        reinterpret_cast<char*>(&_impl_.entity_size_)) + sizeof(_impl_.max_rooms_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MultiRoomPathfindingOptions::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MultiRoomPathfindingOptions& this_ = static_cast<const MultiRoomPathfindingOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MultiRoomPathfindingOptions::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MultiRoomPathfindingOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.MultiRoomPathfindingOptions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double entity_size = 1 [json_name = "entitySize"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_entity_size()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          1, this_._internal_entity_size(), target);
    }
  }

  // .api.v1alpha1.MovementType movement_type = 2 [json_name = "movementType"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_movement_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_movement_type(), target);
    }
  }

  // double max_total_cost = 3 [json_name = "maxTotalCost"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_max_total_cost()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_max_total_cost(), target);
    }
  }

  // bool allow_door_opening = 4 [json_name = "allowDoorOpening"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_allow_door_opening() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_allow_door_opening(), target);
    }
  }

  // bool prefer_known_paths = 5 [json_name = "preferKnownPaths"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_prefer_known_paths() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          5, this_._internal_prefer_known_paths(), target);
    }
  }

  // int32 max_rooms = 6 [json_name = "maxRooms"];
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (this_._internal_max_rooms() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<6>(
              stream, this_._internal_max_rooms(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.MultiRoomPathfindingOptions)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MultiRoomPathfindingOptions::ByteSizeLong(const MessageLite& base) {
  const MultiRoomPathfindingOptions& this_ = static_cast<const MultiRoomPathfindingOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MultiRoomPathfindingOptions::ByteSizeLong() const {
  const MultiRoomPathfindingOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.MultiRoomPathfindingOptions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    // double entity_size = 1 [json_name = "entitySize"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_entity_size()) != 0) {
        total_size += 9;
      }
    }
    // double max_total_cost = 3 [json_name = "maxTotalCost"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_max_total_cost()) != 0) {
        total_size += 9;
      }
    }
    // .api.v1alpha1.MovementType movement_type = 2 [json_name = "movementType"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_movement_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_movement_type());
      }
    }
    // bool allow_door_opening = 4 [json_name = "allowDoorOpening"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_allow_door_opening() != 0) {
        total_size += 2;
      }
    }
    // bool prefer_known_paths = 5 [json_name = "preferKnownPaths"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_prefer_known_paths() != 0) {
        total_size += 2;
      }
    }
    // int32 max_rooms = 6 [json_name = "maxRooms"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_max_rooms() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_max_rooms());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MultiRoomPathfindingOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MultiRoomPathfindingOptions*>(&to_msg);
  auto& from = static_cast<const MultiRoomPathfindingOptions&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.MultiRoomPathfindingOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_entity_size()) != 0) {
        _this->_impl_.entity_size_ = from._impl_.entity_size_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_max_total_cost()) != 0) {
        _this->_impl_.max_total_cost_ = from._impl_.max_total_cost_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_movement_type() != 0) {
        _this->_impl_.movement_type_ = from._impl_.movement_type_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_allow_door_opening() != 0) {
        _this->_impl_.allow_door_opening_ = from._impl_.allow_door_opening_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_prefer_known_paths() != 0) {
        _this->_impl_.prefer_known_paths_ = from._impl_.prefer_known_paths_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_max_rooms() != 0) {
        _this->_impl_.max_rooms_ = from._impl_.max_rooms_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MultiRoomPathfindingOptions::CopyFrom(const MultiRoomPathfindingOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.MultiRoomPathfindingOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MultiRoomPathfindingOptions::InternalSwap(MultiRoomPathfindingOptions* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MultiRoomPathfindingOptions, _impl_.max_rooms_)
      + sizeof(MultiRoomPathfindingOptions::_impl_.max_rooms_)
      - PROTOBUF_FIELD_OFFSET(MultiRoomPathfindingOptions, _impl_.entity_size_)>(
          reinterpret_cast<char*>(&_impl_.entity_size_),
          reinterpret_cast<char*>(&other->_impl_.entity_size_));
}

::google::protobuf::Metadata MultiRoomPathfindingOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CalculateMultiRoomPathResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CalculateMultiRoomPathResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathResponse, _impl_._has_bits_);
};

CalculateMultiRoomPathResponse::CalculateMultiRoomPathResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CalculateMultiRoomPathResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.CalculateMultiRoomPathResponse)
}
PROTOBUF_NDEBUG_INLINE CalculateMultiRoomPathResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::CalculateMultiRoomPathResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        room_transitions_{visibility, arena, from.room_transitions_},
        required_actions_{visibility, arena, from.required_actions_} {}

CalculateMultiRoomPathResponse::CalculateMultiRoomPathResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CalculateMultiRoomPathResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CalculateMultiRoomPathResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CalculateMultiRoomPathResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.path_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.path_)
                : nullptr;
  _impl_.pathfinding_stats_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pathfinding_stats_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_distance_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, total_distance_),
           offsetof(Impl_, is_complete_) -
               offsetof(Impl_, total_distance_) +
               sizeof(Impl_::is_complete_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.CalculateMultiRoomPathResponse)
}
PROTOBUF_NDEBUG_INLINE CalculateMultiRoomPathResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        room_transitions_{visibility, arena},
        required_actions_{visibility, arena} {}

inline void CalculateMultiRoomPathResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, path_),
           0,
           offsetof(Impl_, is_complete_) -
               offsetof(Impl_, path_) +
               sizeof(Impl_::is_complete_));
}
CalculateMultiRoomPathResponse::~CalculateMultiRoomPathResponse() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.CalculateMultiRoomPathResponse)
  SharedDtor(*this);
}
inline void CalculateMultiRoomPathResponse::SharedDtor(MessageLite& self) {
  CalculateMultiRoomPathResponse& this_ = static_cast<CalculateMultiRoomPathResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.path_;
  delete this_._impl_.pathfinding_stats_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CalculateMultiRoomPathResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CalculateMultiRoomPathResponse(arena);
}
constexpr auto CalculateMultiRoomPathResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathResponse, _impl_.room_transitions_) +
          decltype(CalculateMultiRoomPathResponse::_impl_.room_transitions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathResponse, _impl_.required_actions_) +
          decltype(CalculateMultiRoomPathResponse::_impl_.required_actions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CalculateMultiRoomPathResponse), alignof(CalculateMultiRoomPathResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CalculateMultiRoomPathResponse::PlacementNew_,
                                 sizeof(CalculateMultiRoomPathResponse),
                                 alignof(CalculateMultiRoomPathResponse));
  }
}
constexpr auto CalculateMultiRoomPathResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CalculateMultiRoomPathResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CalculateMultiRoomPathResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CalculateMultiRoomPathResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CalculateMultiRoomPathResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CalculateMultiRoomPathResponse>(), &CalculateMultiRoomPathResponse::ByteSizeLong,
              &CalculateMultiRoomPathResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathResponse, _impl_._cached_size_),
          false,
      },
      &CalculateMultiRoomPathResponse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CalculateMultiRoomPathResponse_class_data_ =
        CalculateMultiRoomPathResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CalculateMultiRoomPathResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CalculateMultiRoomPathResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CalculateMultiRoomPathResponse_class_data_.tc_table);
  return CalculateMultiRoomPathResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 4, 0, 2>
CalculateMultiRoomPathResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathResponse, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CalculateMultiRoomPathResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::CalculateMultiRoomPathResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .api.v1alpha1.MultiRoomPath path = 1 [json_name = "path"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathResponse, _impl_.path_)}},
    // bool is_complete = 2 [json_name = "isComplete"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CalculateMultiRoomPathResponse, _impl_.is_complete_), 4>(),
     {16, 4, 0, PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathResponse, _impl_.is_complete_)}},
    // repeated .api.v1alpha1.RoomTransition room_transitions = 3 [json_name = "roomTransitions"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathResponse, _impl_.room_transitions_)}},
    // double total_distance = 4 [json_name = "totalDistance"];
    {::_pbi::TcParser::FastF64S1,
     {33, 2, 0, PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathResponse, _impl_.total_distance_)}},
    // double estimated_time_seconds = 5 [json_name = "estimatedTimeSeconds"];
    {::_pbi::TcParser::FastF64S1,
     {41, 3, 0, PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathResponse, _impl_.estimated_time_seconds_)}},
    // repeated .api.v1alpha1.PathAction required_actions = 6 [json_name = "requiredActions"];
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 2, PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathResponse, _impl_.required_actions_)}},
    // .api.v1alpha1.PathfindingStats pathfinding_stats = 7 [json_name = "pathfindingStats"];
    {::_pbi::TcParser::FastMtS1,
     {58, 1, 3, PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathResponse, _impl_.pathfinding_stats_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .api.v1alpha1.MultiRoomPath path = 1 [json_name = "path"];
    {PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathResponse, _impl_.path_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool is_complete = 2 [json_name = "isComplete"];
    {PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathResponse, _impl_.is_complete_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated .api.v1alpha1.RoomTransition room_transitions = 3 [json_name = "roomTransitions"];
    {PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathResponse, _impl_.room_transitions_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // double total_distance = 4 [json_name = "totalDistance"];
    {PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathResponse, _impl_.total_distance_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double estimated_time_seconds = 5 [json_name = "estimatedTimeSeconds"];
    {PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathResponse, _impl_.estimated_time_seconds_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // repeated .api.v1alpha1.PathAction required_actions = 6 [json_name = "requiredActions"];
    {PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathResponse, _impl_.required_actions_), -1, 2, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.PathfindingStats pathfinding_stats = 7 [json_name = "pathfindingStats"];
    {PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathResponse, _impl_.pathfinding_stats_), _Internal::kHasBitsOffset + 1, 3, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::MultiRoomPath>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RoomTransition>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::PathAction>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::PathfindingStats>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CalculateMultiRoomPathResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.CalculateMultiRoomPathResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.room_transitions_.Clear();
  _impl_.required_actions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.path_ != nullptr);
      _impl_.path_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.pathfinding_stats_ != nullptr);
      _impl_.pathfinding_stats_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000001cU) != 0) {
    ::memset(&_impl_.total_distance_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_complete_) -
        reinterpret_cast<char*>(&_impl_.total_distance_)) + sizeof(_impl_.is_complete_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CalculateMultiRoomPathResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CalculateMultiRoomPathResponse& this_ = static_cast<const CalculateMultiRoomPathResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CalculateMultiRoomPathResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CalculateMultiRoomPathResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.CalculateMultiRoomPathResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.MultiRoomPath path = 1 [json_name = "path"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.path_, this_._impl_.path_->GetCachedSize(), target,
        stream);
  }

  // bool is_complete = 2 [json_name = "isComplete"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    if (this_._internal_is_complete() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_is_complete(), target);
    }
  }

  // repeated .api.v1alpha1.RoomTransition room_transitions = 3 [json_name = "roomTransitions"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_room_transitions_size());
       i < n; i++) {
    const auto& repfield = this_._internal_room_transitions().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // double total_distance = 4 [json_name = "totalDistance"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_total_distance()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          4, this_._internal_total_distance(), target);
    }
  }

  // double estimated_time_seconds = 5 [json_name = "estimatedTimeSeconds"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_estimated_time_seconds()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          5, this_._internal_estimated_time_seconds(), target);
    }
  }

  // repeated .api.v1alpha1.PathAction required_actions = 6 [json_name = "requiredActions"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_required_actions_size());
       i < n; i++) {
    const auto& repfield = this_._internal_required_actions().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            6, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // .api.v1alpha1.PathfindingStats pathfinding_stats = 7 [json_name = "pathfindingStats"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *this_._impl_.pathfinding_stats_, this_._impl_.pathfinding_stats_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.CalculateMultiRoomPathResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CalculateMultiRoomPathResponse::ByteSizeLong(const MessageLite& base) {
  const CalculateMultiRoomPathResponse& this_ = static_cast<const CalculateMultiRoomPathResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CalculateMultiRoomPathResponse::ByteSizeLong() const {
  const CalculateMultiRoomPathResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.CalculateMultiRoomPathResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.RoomTransition room_transitions = 3 [json_name = "roomTransitions"];
    {
      total_size += 1UL * this_._internal_room_transitions_size();
      for (const auto& msg : this_._internal_room_transitions()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .api.v1alpha1.PathAction required_actions = 6 [json_name = "requiredActions"];
    {
      total_size += 1UL * this_._internal_required_actions_size();
      for (const auto& msg : this_._internal_required_actions()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // .api.v1alpha1.MultiRoomPath path = 1 [json_name = "path"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.path_);
    }
    // .api.v1alpha1.PathfindingStats pathfinding_stats = 7 [json_name = "pathfindingStats"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pathfinding_stats_);
    }
    // double total_distance = 4 [json_name = "totalDistance"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_total_distance()) != 0) {
        total_size += 9;
      }
    }
    // double estimated_time_seconds = 5 [json_name = "estimatedTimeSeconds"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_estimated_time_seconds()) != 0) {
        total_size += 9;
      }
    }
    // bool is_complete = 2 [json_name = "isComplete"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_is_complete() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CalculateMultiRoomPathResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CalculateMultiRoomPathResponse*>(&to_msg);
  auto& from = static_cast<const CalculateMultiRoomPathResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.CalculateMultiRoomPathResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_room_transitions()->MergeFrom(
      from._internal_room_transitions());
  _this->_internal_mutable_required_actions()->MergeFrom(
      from._internal_required_actions());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.path_ != nullptr);
      if (_this->_impl_.path_ == nullptr) {
        _this->_impl_.path_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.path_);
      } else {
        _this->_impl_.path_->MergeFrom(*from._impl_.path_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.pathfinding_stats_ != nullptr);
      if (_this->_impl_.pathfinding_stats_ == nullptr) {
        _this->_impl_.pathfinding_stats_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.pathfinding_stats_);
      } else {
        _this->_impl_.pathfinding_stats_->MergeFrom(*from._impl_.pathfinding_stats_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_total_distance()) != 0) {
        _this->_impl_.total_distance_ = from._impl_.total_distance_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_estimated_time_seconds()) != 0) {
        _this->_impl_.estimated_time_seconds_ = from._impl_.estimated_time_seconds_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_is_complete() != 0) {
        _this->_impl_.is_complete_ = from._impl_.is_complete_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CalculateMultiRoomPathResponse::CopyFrom(const CalculateMultiRoomPathResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.CalculateMultiRoomPathResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CalculateMultiRoomPathResponse::InternalSwap(CalculateMultiRoomPathResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.room_transitions_.InternalSwap(&other->_impl_.room_transitions_);
  _impl_.required_actions_.InternalSwap(&other->_impl_.required_actions_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathResponse, _impl_.is_complete_)
      + sizeof(CalculateMultiRoomPathResponse::_impl_.is_complete_)
      - PROTOBUF_FIELD_OFFSET(CalculateMultiRoomPathResponse, _impl_.path_)>(
          reinterpret_cast<char*>(&_impl_.path_),
          reinterpret_cast<char*>(&other->_impl_.path_));
}

::google::protobuf::Metadata CalculateMultiRoomPathResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MultiRoomPath::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MultiRoomPath>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MultiRoomPath, _impl_._has_bits_);
};

MultiRoomPath::MultiRoomPath(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MultiRoomPath_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.MultiRoomPath)
}
PROTOBUF_NDEBUG_INLINE MultiRoomPath::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::MultiRoomPath& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        segments_{visibility, arena, from.segments_},
        description_(arena, from.description_) {}

MultiRoomPath::MultiRoomPath(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MultiRoomPath& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MultiRoomPath_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MultiRoomPath* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.total_cost_ = from._impl_.total_cost_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.MultiRoomPath)
}
PROTOBUF_NDEBUG_INLINE MultiRoomPath::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        segments_{visibility, arena},
        description_(arena) {}

inline void MultiRoomPath::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.total_cost_ = {};
}
MultiRoomPath::~MultiRoomPath() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.MultiRoomPath)
  SharedDtor(*this);
}
inline void MultiRoomPath::SharedDtor(MessageLite& self) {
  MultiRoomPath& this_ = static_cast<MultiRoomPath&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.description_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MultiRoomPath::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MultiRoomPath(arena);
}
constexpr auto MultiRoomPath::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(MultiRoomPath, _impl_.segments_) +
          decltype(MultiRoomPath::_impl_.segments_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(MultiRoomPath), alignof(MultiRoomPath), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&MultiRoomPath::PlacementNew_,
                                 sizeof(MultiRoomPath),
                                 alignof(MultiRoomPath));
  }
}
constexpr auto MultiRoomPath::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MultiRoomPath_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MultiRoomPath::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MultiRoomPath>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MultiRoomPath::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MultiRoomPath>(), &MultiRoomPath::ByteSizeLong,
              &MultiRoomPath::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MultiRoomPath, _impl_._cached_size_),
          false,
      },
      &MultiRoomPath::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MultiRoomPath_class_data_ =
        MultiRoomPath::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MultiRoomPath::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MultiRoomPath_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MultiRoomPath_class_data_.tc_table);
  return MultiRoomPath_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 46, 2>
MultiRoomPath::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MultiRoomPath, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    MultiRoomPath_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::MultiRoomPath>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .api.v1alpha1.PathSegment segments = 1 [json_name = "segments"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MultiRoomPath, _impl_.segments_)}},
    // double total_cost = 2 [json_name = "totalCost"];
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(MultiRoomPath, _impl_.total_cost_)}},
    // string description = 3 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(MultiRoomPath, _impl_.description_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .api.v1alpha1.PathSegment segments = 1 [json_name = "segments"];
    {PROTOBUF_FIELD_OFFSET(MultiRoomPath, _impl_.segments_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // double total_cost = 2 [json_name = "totalCost"];
    {PROTOBUF_FIELD_OFFSET(MultiRoomPath, _impl_.total_cost_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // string description = 3 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(MultiRoomPath, _impl_.description_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::PathSegment>()},
  }},
  {{
    "\32\0\0\13\0\0\0\0"
    "api.v1alpha1.MultiRoomPath"
    "description"
  }},
};
PROTOBUF_NOINLINE void MultiRoomPath::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.MultiRoomPath)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.segments_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.description_.ClearNonDefaultToEmpty();
  }
  _impl_.total_cost_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MultiRoomPath::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MultiRoomPath& this_ = static_cast<const MultiRoomPath&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MultiRoomPath::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MultiRoomPath& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.MultiRoomPath)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .api.v1alpha1.PathSegment segments = 1 [json_name = "segments"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_segments_size());
       i < n; i++) {
    const auto& repfield = this_._internal_segments().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // double total_cost = 2 [json_name = "totalCost"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_total_cost()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_total_cost(), target);
    }
  }

  // string description = 3 [json_name = "description"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.MultiRoomPath.description");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.MultiRoomPath)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MultiRoomPath::ByteSizeLong(const MessageLite& base) {
  const MultiRoomPath& this_ = static_cast<const MultiRoomPath&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MultiRoomPath::ByteSizeLong() const {
  const MultiRoomPath& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.MultiRoomPath)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.PathSegment segments = 1 [json_name = "segments"];
    {
      total_size += 1UL * this_._internal_segments_size();
      for (const auto& msg : this_._internal_segments()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string description = 3 [json_name = "description"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // double total_cost = 2 [json_name = "totalCost"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_total_cost()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MultiRoomPath::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MultiRoomPath*>(&to_msg);
  auto& from = static_cast<const MultiRoomPath&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.MultiRoomPath)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_segments()->MergeFrom(
      from._internal_segments());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_total_cost()) != 0) {
        _this->_impl_.total_cost_ = from._impl_.total_cost_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MultiRoomPath::CopyFrom(const MultiRoomPath& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.MultiRoomPath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MultiRoomPath::InternalSwap(MultiRoomPath* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.segments_.InternalSwap(&other->_impl_.segments_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  swap(_impl_.total_cost_, other->_impl_.total_cost_);
}

::google::protobuf::Metadata MultiRoomPath::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PathSegment::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<PathSegment>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PathSegment, _impl_._has_bits_);
};

void PathSegment::clear_positions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.positions_.Clear();
}
void PathSegment::clear_enter_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.enter_point_ != nullptr) _impl_.enter_point_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
void PathSegment::clear_exit_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.exit_point_ != nullptr) _impl_.exit_point_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
PathSegment::PathSegment(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PathSegment_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.PathSegment)
}
PROTOBUF_NDEBUG_INLINE PathSegment::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::PathSegment& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        positions_{visibility, arena, from.positions_},
        room_id_(arena, from.room_id_) {}

PathSegment::PathSegment(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const PathSegment& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PathSegment_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PathSegment* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.enter_point_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.enter_point_)
                : nullptr;
  _impl_.exit_point_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.exit_point_)
                : nullptr;
  _impl_.segment_cost_ = from._impl_.segment_cost_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.PathSegment)
}
PROTOBUF_NDEBUG_INLINE PathSegment::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        positions_{visibility, arena},
        room_id_(arena) {}

inline void PathSegment::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, enter_point_),
           0,
           offsetof(Impl_, segment_cost_) -
               offsetof(Impl_, enter_point_) +
               sizeof(Impl_::segment_cost_));
}
PathSegment::~PathSegment() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.PathSegment)
  SharedDtor(*this);
}
inline void PathSegment::SharedDtor(MessageLite& self) {
  PathSegment& this_ = static_cast<PathSegment&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.room_id_.Destroy();
  delete this_._impl_.enter_point_;
  delete this_._impl_.exit_point_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PathSegment::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PathSegment(arena);
}
constexpr auto PathSegment::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PathSegment, _impl_.positions_) +
          decltype(PathSegment::_impl_.positions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(PathSegment), alignof(PathSegment), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PathSegment::PlacementNew_,
                                 sizeof(PathSegment),
                                 alignof(PathSegment));
  }
}
constexpr auto PathSegment::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PathSegment_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PathSegment::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PathSegment>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PathSegment::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PathSegment>(), &PathSegment::ByteSizeLong,
              &PathSegment::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PathSegment, _impl_._cached_size_),
          false,
      },
      &PathSegment::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PathSegment_class_data_ =
        PathSegment::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PathSegment::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PathSegment_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PathSegment_class_data_.tc_table);
  return PathSegment_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 40, 2>
PathSegment::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PathSegment, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    PathSegment_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::PathSegment>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string room_id = 1 [json_name = "roomId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PathSegment, _impl_.room_id_)}},
    // repeated .api.v1alpha1.Position positions = 2 [json_name = "positions"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PathSegment, _impl_.positions_)}},
    // .api.v1alpha1.Position enter_point = 3 [json_name = "enterPoint"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(PathSegment, _impl_.enter_point_)}},
    // .api.v1alpha1.Position exit_point = 4 [json_name = "exitPoint"];
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 2, PROTOBUF_FIELD_OFFSET(PathSegment, _impl_.exit_point_)}},
    // double segment_cost = 5 [json_name = "segmentCost"];
    {::_pbi::TcParser::FastF64S1,
     {41, 3, 0, PROTOBUF_FIELD_OFFSET(PathSegment, _impl_.segment_cost_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string room_id = 1 [json_name = "roomId"];
    {PROTOBUF_FIELD_OFFSET(PathSegment, _impl_.room_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .api.v1alpha1.Position positions = 2 [json_name = "positions"];
    {PROTOBUF_FIELD_OFFSET(PathSegment, _impl_.positions_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.Position enter_point = 3 [json_name = "enterPoint"];
    {PROTOBUF_FIELD_OFFSET(PathSegment, _impl_.enter_point_), _Internal::kHasBitsOffset + 1, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.Position exit_point = 4 [json_name = "exitPoint"];
    {PROTOBUF_FIELD_OFFSET(PathSegment, _impl_.exit_point_), _Internal::kHasBitsOffset + 2, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // double segment_cost = 5 [json_name = "segmentCost"];
    {PROTOBUF_FIELD_OFFSET(PathSegment, _impl_.segment_cost_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
  }},
  {{
    "\30\7\0\0\0\0\0\0"
    "api.v1alpha1.PathSegment"
    "room_id"
  }},
};
PROTOBUF_NOINLINE void PathSegment::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.PathSegment)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.positions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.room_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.enter_point_ != nullptr);
      _impl_.enter_point_->Clear();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.exit_point_ != nullptr);
      _impl_.exit_point_->Clear();
    }
  }
  _impl_.segment_cost_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PathSegment::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PathSegment& this_ = static_cast<const PathSegment&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PathSegment::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PathSegment& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.PathSegment)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string room_id = 1 [json_name = "roomId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_room_id().empty()) {
      const ::std::string& _s = this_._internal_room_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.PathSegment.room_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // repeated .api.v1alpha1.Position positions = 2 [json_name = "positions"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_positions_size());
       i < n; i++) {
    const auto& repfield = this_._internal_positions().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.Position enter_point = 3 [json_name = "enterPoint"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.enter_point_, this_._impl_.enter_point_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.Position exit_point = 4 [json_name = "exitPoint"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.exit_point_, this_._impl_.exit_point_->GetCachedSize(), target,
        stream);
  }

  // double segment_cost = 5 [json_name = "segmentCost"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_segment_cost()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          5, this_._internal_segment_cost(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.PathSegment)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PathSegment::ByteSizeLong(const MessageLite& base) {
  const PathSegment& this_ = static_cast<const PathSegment&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PathSegment::ByteSizeLong() const {
  const PathSegment& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.PathSegment)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.Position positions = 2 [json_name = "positions"];
    {
      total_size += 1UL * this_._internal_positions_size();
      for (const auto& msg : this_._internal_positions()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string room_id = 1 [json_name = "roomId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_room_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_room_id());
      }
    }
    // .api.v1alpha1.Position enter_point = 3 [json_name = "enterPoint"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.enter_point_);
    }
    // .api.v1alpha1.Position exit_point = 4 [json_name = "exitPoint"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.exit_point_);
    }
    // double segment_cost = 5 [json_name = "segmentCost"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_segment_cost()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PathSegment::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PathSegment*>(&to_msg);
  auto& from = static_cast<const PathSegment&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.PathSegment)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_positions()->MergeFrom(
      from._internal_positions());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_room_id().empty()) {
        _this->_internal_set_room_id(from._internal_room_id());
      } else {
        if (_this->_impl_.room_id_.IsDefault()) {
          _this->_internal_set_room_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.enter_point_ != nullptr);
      if (_this->_impl_.enter_point_ == nullptr) {
        _this->_impl_.enter_point_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.enter_point_);
      } else {
        _this->_impl_.enter_point_->MergeFrom(*from._impl_.enter_point_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.exit_point_ != nullptr);
      if (_this->_impl_.exit_point_ == nullptr) {
        _this->_impl_.exit_point_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.exit_point_);
      } else {
        _this->_impl_.exit_point_->MergeFrom(*from._impl_.exit_point_);
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_segment_cost()) != 0) {
        _this->_impl_.segment_cost_ = from._impl_.segment_cost_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PathSegment::CopyFrom(const PathSegment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.PathSegment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PathSegment::InternalSwap(PathSegment* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.positions_.InternalSwap(&other->_impl_.positions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.room_id_, &other->_impl_.room_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PathSegment, _impl_.segment_cost_)
      + sizeof(PathSegment::_impl_.segment_cost_)
      - PROTOBUF_FIELD_OFFSET(PathSegment, _impl_.enter_point_)>(
          reinterpret_cast<char*>(&_impl_.enter_point_),
          reinterpret_cast<char*>(&other->_impl_.enter_point_));
}

::google::protobuf::Metadata PathSegment::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RoomTransition::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RoomTransition>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RoomTransition, _impl_._has_bits_);
};

void RoomTransition::clear_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ != nullptr) _impl_.position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020U;
}
RoomTransition::RoomTransition(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RoomTransition_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.RoomTransition)
}
PROTOBUF_NDEBUG_INLINE RoomTransition::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::RoomTransition& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        from_room_id_(arena, from.from_room_id_),
        to_room_id_(arena, from.to_room_id_),
        connection_id_(arena, from.connection_id_),
        transition_type_(arena, from.transition_type_),
        required_action_(arena, from.required_action_) {}

RoomTransition::RoomTransition(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RoomTransition& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RoomTransition_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RoomTransition* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ = ((cached_has_bits & 0x00000020U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.position_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.RoomTransition)
}
PROTOBUF_NDEBUG_INLINE RoomTransition::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        from_room_id_(arena),
        to_room_id_(arena),
        connection_id_(arena),
        transition_type_(arena),
        required_action_(arena) {}

inline void RoomTransition::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.position_ = {};
}
RoomTransition::~RoomTransition() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.RoomTransition)
  SharedDtor(*this);
}
inline void RoomTransition::SharedDtor(MessageLite& self) {
  RoomTransition& this_ = static_cast<RoomTransition&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.from_room_id_.Destroy();
  this_._impl_.to_room_id_.Destroy();
  this_._impl_.connection_id_.Destroy();
  this_._impl_.transition_type_.Destroy();
  this_._impl_.required_action_.Destroy();
  delete this_._impl_.position_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RoomTransition::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RoomTransition(arena);
}
constexpr auto RoomTransition::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RoomTransition),
                                            alignof(RoomTransition));
}
constexpr auto RoomTransition::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RoomTransition_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RoomTransition::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RoomTransition>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RoomTransition::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RoomTransition>(), &RoomTransition::ByteSizeLong,
              &RoomTransition::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RoomTransition, _impl_._cached_size_),
          false,
      },
      &RoomTransition::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RoomTransition_class_data_ =
        RoomTransition::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RoomTransition::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RoomTransition_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RoomTransition_class_data_.tc_table);
  return RoomTransition_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 101, 2>
RoomTransition::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RoomTransition, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RoomTransition_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::RoomTransition>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string from_room_id = 1 [json_name = "fromRoomId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RoomTransition, _impl_.from_room_id_)}},
    // string to_room_id = 2 [json_name = "toRoomId"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(RoomTransition, _impl_.to_room_id_)}},
    // string connection_id = 3 [json_name = "connectionId"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(RoomTransition, _impl_.connection_id_)}},
    // .api.v1alpha1.Position position = 4 [json_name = "position"];
    {::_pbi::TcParser::FastMtS1,
     {34, 5, 0, PROTOBUF_FIELD_OFFSET(RoomTransition, _impl_.position_)}},
    // string transition_type = 5 [json_name = "transitionType"];
    {::_pbi::TcParser::FastUS1,
     {42, 3, 0, PROTOBUF_FIELD_OFFSET(RoomTransition, _impl_.transition_type_)}},
    // string required_action = 6 [json_name = "requiredAction"];
    {::_pbi::TcParser::FastUS1,
     {50, 4, 0, PROTOBUF_FIELD_OFFSET(RoomTransition, _impl_.required_action_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string from_room_id = 1 [json_name = "fromRoomId"];
    {PROTOBUF_FIELD_OFFSET(RoomTransition, _impl_.from_room_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string to_room_id = 2 [json_name = "toRoomId"];
    {PROTOBUF_FIELD_OFFSET(RoomTransition, _impl_.to_room_id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string connection_id = 3 [json_name = "connectionId"];
    {PROTOBUF_FIELD_OFFSET(RoomTransition, _impl_.connection_id_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.Position position = 4 [json_name = "position"];
    {PROTOBUF_FIELD_OFFSET(RoomTransition, _impl_.position_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string transition_type = 5 [json_name = "transitionType"];
    {PROTOBUF_FIELD_OFFSET(RoomTransition, _impl_.transition_type_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string required_action = 6 [json_name = "requiredAction"];
    {PROTOBUF_FIELD_OFFSET(RoomTransition, _impl_.required_action_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
  }},
  {{
    "\33\14\12\15\0\17\17\0"
    "api.v1alpha1.RoomTransition"
    "from_room_id"
    "to_room_id"
    "connection_id"
    "transition_type"
    "required_action"
  }},
};
PROTOBUF_NOINLINE void RoomTransition::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.RoomTransition)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.from_room_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.to_room_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.connection_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.transition_type_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      _impl_.required_action_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      ABSL_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RoomTransition::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RoomTransition& this_ = static_cast<const RoomTransition&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RoomTransition::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RoomTransition& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.RoomTransition)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string from_room_id = 1 [json_name = "fromRoomId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_from_room_id().empty()) {
      const ::std::string& _s = this_._internal_from_room_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RoomTransition.from_room_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string to_room_id = 2 [json_name = "toRoomId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_to_room_id().empty()) {
      const ::std::string& _s = this_._internal_to_room_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RoomTransition.to_room_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string connection_id = 3 [json_name = "connectionId"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_connection_id().empty()) {
      const ::std::string& _s = this_._internal_connection_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RoomTransition.connection_id");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.Position position = 4 [json_name = "position"];
  if ((cached_has_bits & 0x00000020U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.position_, this_._impl_.position_->GetCachedSize(), target,
        stream);
  }

  // string transition_type = 5 [json_name = "transitionType"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    if (!this_._internal_transition_type().empty()) {
      const ::std::string& _s = this_._internal_transition_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RoomTransition.transition_type");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  // string required_action = 6 [json_name = "requiredAction"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    if (!this_._internal_required_action().empty()) {
      const ::std::string& _s = this_._internal_required_action();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RoomTransition.required_action");
      target = stream->WriteStringMaybeAliased(6, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.RoomTransition)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RoomTransition::ByteSizeLong(const MessageLite& base) {
  const RoomTransition& this_ = static_cast<const RoomTransition&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RoomTransition::ByteSizeLong() const {
  const RoomTransition& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.RoomTransition)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    // string from_room_id = 1 [json_name = "fromRoomId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_from_room_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_from_room_id());
      }
    }
    // string to_room_id = 2 [json_name = "toRoomId"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_to_room_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_to_room_id());
      }
    }
    // string connection_id = 3 [json_name = "connectionId"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_connection_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_connection_id());
      }
    }
    // string transition_type = 5 [json_name = "transitionType"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_transition_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_transition_type());
      }
    }
    // string required_action = 6 [json_name = "requiredAction"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (!this_._internal_required_action().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_required_action());
      }
    }
    // .api.v1alpha1.Position position = 4 [json_name = "position"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.position_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RoomTransition::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RoomTransition*>(&to_msg);
  auto& from = static_cast<const RoomTransition&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.RoomTransition)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_from_room_id().empty()) {
        _this->_internal_set_from_room_id(from._internal_from_room_id());
      } else {
        if (_this->_impl_.from_room_id_.IsDefault()) {
          _this->_internal_set_from_room_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_to_room_id().empty()) {
        _this->_internal_set_to_room_id(from._internal_to_room_id());
      } else {
        if (_this->_impl_.to_room_id_.IsDefault()) {
          _this->_internal_set_to_room_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_connection_id().empty()) {
        _this->_internal_set_connection_id(from._internal_connection_id());
      } else {
        if (_this->_impl_.connection_id_.IsDefault()) {
          _this->_internal_set_connection_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_transition_type().empty()) {
        _this->_internal_set_transition_type(from._internal_transition_type());
      } else {
        if (_this->_impl_.transition_type_.IsDefault()) {
          _this->_internal_set_transition_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (!from._internal_required_action().empty()) {
        _this->_internal_set_required_action(from._internal_required_action());
      } else {
        if (_this->_impl_.required_action_.IsDefault()) {
          _this->_internal_set_required_action("");
        }
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      ABSL_DCHECK(from._impl_.position_ != nullptr);
      if (_this->_impl_.position_ == nullptr) {
        _this->_impl_.position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.position_);
      } else {
        _this->_impl_.position_->MergeFrom(*from._impl_.position_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RoomTransition::CopyFrom(const RoomTransition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.RoomTransition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RoomTransition::InternalSwap(RoomTransition* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.from_room_id_, &other->_impl_.from_room_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.to_room_id_, &other->_impl_.to_room_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.connection_id_, &other->_impl_.connection_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.transition_type_, &other->_impl_.transition_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.required_action_, &other->_impl_.required_action_, arena);
  swap(_impl_.position_, other->_impl_.position_);
}

::google::protobuf::Metadata RoomTransition::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PathAction::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<PathAction>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PathAction, _impl_._has_bits_);
};

void PathAction::clear_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ != nullptr) _impl_.position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010U;
}
PathAction::PathAction(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PathAction_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.PathAction)
}
PROTOBUF_NDEBUG_INLINE PathAction::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::PathAction& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        action_type_(arena, from.action_type_),
        target_(arena, from.target_),
        difficulty_(arena, from.difficulty_),
        description_(arena, from.description_) {}

PathAction::PathAction(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const PathAction& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PathAction_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PathAction* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ = ((cached_has_bits & 0x00000010U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.position_)
                : nullptr;
  _impl_.time_seconds_ = from._impl_.time_seconds_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.PathAction)
}
PROTOBUF_NDEBUG_INLINE PathAction::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        action_type_(arena),
        target_(arena),
        difficulty_(arena),
        description_(arena) {}

inline void PathAction::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_),
           0,
           offsetof(Impl_, time_seconds_) -
               offsetof(Impl_, position_) +
               sizeof(Impl_::time_seconds_));
}
PathAction::~PathAction() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.PathAction)
  SharedDtor(*this);
}
inline void PathAction::SharedDtor(MessageLite& self) {
  PathAction& this_ = static_cast<PathAction&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.action_type_.Destroy();
  this_._impl_.target_.Destroy();
  this_._impl_.difficulty_.Destroy();
  this_._impl_.description_.Destroy();
  delete this_._impl_.position_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PathAction::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PathAction(arena);
}
constexpr auto PathAction::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PathAction),
                                            alignof(PathAction));
}
constexpr auto PathAction::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PathAction_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PathAction::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PathAction>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PathAction::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PathAction>(), &PathAction::ByteSizeLong,
              &PathAction::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PathAction, _impl_._cached_size_),
          false,
      },
      &PathAction::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PathAction_class_data_ =
        PathAction::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PathAction::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PathAction_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PathAction_class_data_.tc_table);
  return PathAction_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 70, 2>
PathAction::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PathAction, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    PathAction_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::PathAction>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string action_type = 1 [json_name = "actionType"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PathAction, _impl_.action_type_)}},
    // .api.v1alpha1.Position position = 2 [json_name = "position"];
    {::_pbi::TcParser::FastMtS1,
     {18, 4, 0, PROTOBUF_FIELD_OFFSET(PathAction, _impl_.position_)}},
    // string target = 3 [json_name = "target"];
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(PathAction, _impl_.target_)}},
    // string difficulty = 4 [json_name = "difficulty"];
    {::_pbi::TcParser::FastUS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(PathAction, _impl_.difficulty_)}},
    // double time_seconds = 5 [json_name = "timeSeconds"];
    {::_pbi::TcParser::FastF64S1,
     {41, 5, 0, PROTOBUF_FIELD_OFFSET(PathAction, _impl_.time_seconds_)}},
    // string description = 6 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {50, 3, 0, PROTOBUF_FIELD_OFFSET(PathAction, _impl_.description_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string action_type = 1 [json_name = "actionType"];
    {PROTOBUF_FIELD_OFFSET(PathAction, _impl_.action_type_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.Position position = 2 [json_name = "position"];
    {PROTOBUF_FIELD_OFFSET(PathAction, _impl_.position_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string target = 3 [json_name = "target"];
    {PROTOBUF_FIELD_OFFSET(PathAction, _impl_.target_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string difficulty = 4 [json_name = "difficulty"];
    {PROTOBUF_FIELD_OFFSET(PathAction, _impl_.difficulty_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double time_seconds = 5 [json_name = "timeSeconds"];
    {PROTOBUF_FIELD_OFFSET(PathAction, _impl_.time_seconds_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // string description = 6 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(PathAction, _impl_.description_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
  }},
  {{
    "\27\13\0\6\12\0\13\0"
    "api.v1alpha1.PathAction"
    "action_type"
    "target"
    "difficulty"
    "description"
  }},
};
PROTOBUF_NOINLINE void PathAction::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.PathAction)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.action_type_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.target_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.difficulty_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
  }
  _impl_.time_seconds_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PathAction::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PathAction& this_ = static_cast<const PathAction&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PathAction::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PathAction& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.PathAction)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string action_type = 1 [json_name = "actionType"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_action_type().empty()) {
      const ::std::string& _s = this_._internal_action_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.PathAction.action_type");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.Position position = 2 [json_name = "position"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.position_, this_._impl_.position_->GetCachedSize(), target,
        stream);
  }

  // string target = 3 [json_name = "target"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    if (!this_._internal_target().empty()) {
      const ::std::string& _s = this_._internal_target();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.PathAction.target");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string difficulty = 4 [json_name = "difficulty"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    if (!this_._internal_difficulty().empty()) {
      const ::std::string& _s = this_._internal_difficulty();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.PathAction.difficulty");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // double time_seconds = 5 [json_name = "timeSeconds"];
  if ((cached_has_bits & 0x00000020U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_time_seconds()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          5, this_._internal_time_seconds(), target);
    }
  }

  // string description = 6 [json_name = "description"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.PathAction.description");
      target = stream->WriteStringMaybeAliased(6, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.PathAction)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PathAction::ByteSizeLong(const MessageLite& base) {
  const PathAction& this_ = static_cast<const PathAction&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PathAction::ByteSizeLong() const {
  const PathAction& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.PathAction)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    // string action_type = 1 [json_name = "actionType"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_action_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_action_type());
      }
    }
    // string target = 3 [json_name = "target"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_target().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_target());
      }
    }
    // string difficulty = 4 [json_name = "difficulty"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_difficulty().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_difficulty());
      }
    }
    // string description = 6 [json_name = "description"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // .api.v1alpha1.Position position = 2 [json_name = "position"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.position_);
    }
    // double time_seconds = 5 [json_name = "timeSeconds"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_time_seconds()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PathAction::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PathAction*>(&to_msg);
  auto& from = static_cast<const PathAction&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.PathAction)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_action_type().empty()) {
        _this->_internal_set_action_type(from._internal_action_type());
      } else {
        if (_this->_impl_.action_type_.IsDefault()) {
          _this->_internal_set_action_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_target().empty()) {
        _this->_internal_set_target(from._internal_target());
      } else {
        if (_this->_impl_.target_.IsDefault()) {
          _this->_internal_set_target("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_difficulty().empty()) {
        _this->_internal_set_difficulty(from._internal_difficulty());
      } else {
        if (_this->_impl_.difficulty_.IsDefault()) {
          _this->_internal_set_difficulty("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(from._impl_.position_ != nullptr);
      if (_this->_impl_.position_ == nullptr) {
        _this->_impl_.position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.position_);
      } else {
        _this->_impl_.position_->MergeFrom(*from._impl_.position_);
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_time_seconds()) != 0) {
        _this->_impl_.time_seconds_ = from._impl_.time_seconds_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PathAction::CopyFrom(const PathAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.PathAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PathAction::InternalSwap(PathAction* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.action_type_, &other->_impl_.action_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_, &other->_impl_.target_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.difficulty_, &other->_impl_.difficulty_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PathAction, _impl_.time_seconds_)
      + sizeof(PathAction::_impl_.time_seconds_)
      - PROTOBUF_FIELD_OFFSET(PathAction, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::google::protobuf::Metadata PathAction::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QuerySpatialIndexRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<QuerySpatialIndexRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QuerySpatialIndexRequest, _impl_._has_bits_);
};

QuerySpatialIndexRequest::QuerySpatialIndexRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, QuerySpatialIndexRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.QuerySpatialIndexRequest)
}
PROTOBUF_NDEBUG_INLINE QuerySpatialIndexRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::QuerySpatialIndexRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        entity_types_{visibility, arena, from.entity_types_},
        tags_{visibility, arena, from.tags_},
        room_id_(arena, from.room_id_) {}

QuerySpatialIndexRequest::QuerySpatialIndexRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const QuerySpatialIndexRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, QuerySpatialIndexRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QuerySpatialIndexRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.bounding_box_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.bounding_box_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, index_type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, index_type_),
           offsetof(Impl_, precision_) -
               offsetof(Impl_, index_type_) +
               sizeof(Impl_::precision_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.QuerySpatialIndexRequest)
}
PROTOBUF_NDEBUG_INLINE QuerySpatialIndexRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        entity_types_{visibility, arena},
        tags_{visibility, arena},
        room_id_(arena) {}

inline void QuerySpatialIndexRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, bounding_box_),
           0,
           offsetof(Impl_, precision_) -
               offsetof(Impl_, bounding_box_) +
               sizeof(Impl_::precision_));
}
QuerySpatialIndexRequest::~QuerySpatialIndexRequest() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.QuerySpatialIndexRequest)
  SharedDtor(*this);
}
inline void QuerySpatialIndexRequest::SharedDtor(MessageLite& self) {
  QuerySpatialIndexRequest& this_ = static_cast<QuerySpatialIndexRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.room_id_.Destroy();
  delete this_._impl_.bounding_box_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL QuerySpatialIndexRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) QuerySpatialIndexRequest(arena);
}
constexpr auto QuerySpatialIndexRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(QuerySpatialIndexRequest, _impl_.entity_types_) +
          decltype(QuerySpatialIndexRequest::_impl_.entity_types_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(QuerySpatialIndexRequest, _impl_.tags_) +
          decltype(QuerySpatialIndexRequest::_impl_.tags_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(QuerySpatialIndexRequest), alignof(QuerySpatialIndexRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&QuerySpatialIndexRequest::PlacementNew_,
                                 sizeof(QuerySpatialIndexRequest),
                                 alignof(QuerySpatialIndexRequest));
  }
}
constexpr auto QuerySpatialIndexRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_QuerySpatialIndexRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &QuerySpatialIndexRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<QuerySpatialIndexRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &QuerySpatialIndexRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<QuerySpatialIndexRequest>(), &QuerySpatialIndexRequest::ByteSizeLong,
              &QuerySpatialIndexRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(QuerySpatialIndexRequest, _impl_._cached_size_),
          false,
      },
      &QuerySpatialIndexRequest::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull QuerySpatialIndexRequest_class_data_ =
        QuerySpatialIndexRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
QuerySpatialIndexRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&QuerySpatialIndexRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(QuerySpatialIndexRequest_class_data_.tc_table);
  return QuerySpatialIndexRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 69, 2>
QuerySpatialIndexRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QuerySpatialIndexRequest, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    QuerySpatialIndexRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::QuerySpatialIndexRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string room_id = 1 [json_name = "roomId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(QuerySpatialIndexRequest, _impl_.room_id_)}},
    // .api.v1alpha1.SpatialIndexType index_type = 2 [json_name = "indexType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(QuerySpatialIndexRequest, _impl_.index_type_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(QuerySpatialIndexRequest, _impl_.index_type_)}},
    // .api.v1alpha1.BoundingBox bounding_box = 3 [json_name = "boundingBox"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(QuerySpatialIndexRequest, _impl_.bounding_box_)}},
    // repeated string entity_types = 4 [json_name = "entityTypes"];
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(QuerySpatialIndexRequest, _impl_.entity_types_)}},
    // repeated string tags = 5 [json_name = "tags"];
    {::_pbi::TcParser::FastUR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(QuerySpatialIndexRequest, _impl_.tags_)}},
    // .api.v1alpha1.QueryPrecision precision = 6 [json_name = "precision"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(QuerySpatialIndexRequest, _impl_.precision_), 3>(),
     {48, 3, 0, PROTOBUF_FIELD_OFFSET(QuerySpatialIndexRequest, _impl_.precision_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string room_id = 1 [json_name = "roomId"];
    {PROTOBUF_FIELD_OFFSET(QuerySpatialIndexRequest, _impl_.room_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.SpatialIndexType index_type = 2 [json_name = "indexType"];
    {PROTOBUF_FIELD_OFFSET(QuerySpatialIndexRequest, _impl_.index_type_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .api.v1alpha1.BoundingBox bounding_box = 3 [json_name = "boundingBox"];
    {PROTOBUF_FIELD_OFFSET(QuerySpatialIndexRequest, _impl_.bounding_box_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string entity_types = 4 [json_name = "entityTypes"];
    {PROTOBUF_FIELD_OFFSET(QuerySpatialIndexRequest, _impl_.entity_types_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string tags = 5 [json_name = "tags"];
    {PROTOBUF_FIELD_OFFSET(QuerySpatialIndexRequest, _impl_.tags_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .api.v1alpha1.QueryPrecision precision = 6 [json_name = "precision"];
    {PROTOBUF_FIELD_OFFSET(QuerySpatialIndexRequest, _impl_.precision_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::BoundingBox>()},
  }},
  {{
    "\45\7\0\0\14\4\0\0"
    "api.v1alpha1.QuerySpatialIndexRequest"
    "room_id"
    "entity_types"
    "tags"
  }},
};
PROTOBUF_NOINLINE void QuerySpatialIndexRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.QuerySpatialIndexRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entity_types_.Clear();
  _impl_.tags_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.room_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.bounding_box_ != nullptr);
      _impl_.bounding_box_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000000cU) != 0) {
    ::memset(&_impl_.index_type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.precision_) -
        reinterpret_cast<char*>(&_impl_.index_type_)) + sizeof(_impl_.precision_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL QuerySpatialIndexRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const QuerySpatialIndexRequest& this_ = static_cast<const QuerySpatialIndexRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL QuerySpatialIndexRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const QuerySpatialIndexRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.QuerySpatialIndexRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string room_id = 1 [json_name = "roomId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_room_id().empty()) {
      const ::std::string& _s = this_._internal_room_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.QuerySpatialIndexRequest.room_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // .api.v1alpha1.SpatialIndexType index_type = 2 [json_name = "indexType"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_index_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_index_type(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.BoundingBox bounding_box = 3 [json_name = "boundingBox"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.bounding_box_, this_._impl_.bounding_box_->GetCachedSize(), target,
        stream);
  }

  // repeated string entity_types = 4 [json_name = "entityTypes"];
  for (int i = 0, n = this_._internal_entity_types_size(); i < n; ++i) {
    const auto& s = this_._internal_entity_types().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.QuerySpatialIndexRequest.entity_types");
    target = stream->WriteString(4, s, target);
  }

  // repeated string tags = 5 [json_name = "tags"];
  for (int i = 0, n = this_._internal_tags_size(); i < n; ++i) {
    const auto& s = this_._internal_tags().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.QuerySpatialIndexRequest.tags");
    target = stream->WriteString(5, s, target);
  }

  // .api.v1alpha1.QueryPrecision precision = 6 [json_name = "precision"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    if (this_._internal_precision() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          6, this_._internal_precision(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.QuerySpatialIndexRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t QuerySpatialIndexRequest::ByteSizeLong(const MessageLite& base) {
  const QuerySpatialIndexRequest& this_ = static_cast<const QuerySpatialIndexRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t QuerySpatialIndexRequest::ByteSizeLong() const {
  const QuerySpatialIndexRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.QuerySpatialIndexRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string entity_types = 4 [json_name = "entityTypes"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_entity_types().size());
      for (int i = 0, n = this_._internal_entity_types().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_entity_types().Get(i));
      }
    }
    // repeated string tags = 5 [json_name = "tags"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_tags().size());
      for (int i = 0, n = this_._internal_tags().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_tags().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string room_id = 1 [json_name = "roomId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_room_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_room_id());
      }
    }
    // .api.v1alpha1.BoundingBox bounding_box = 3 [json_name = "boundingBox"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.bounding_box_);
    }
    // .api.v1alpha1.SpatialIndexType index_type = 2 [json_name = "indexType"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_index_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_index_type());
      }
    }
    // .api.v1alpha1.QueryPrecision precision = 6 [json_name = "precision"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_precision() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_precision());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void QuerySpatialIndexRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QuerySpatialIndexRequest*>(&to_msg);
  auto& from = static_cast<const QuerySpatialIndexRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.QuerySpatialIndexRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entity_types()->MergeFrom(from._internal_entity_types());
  _this->_internal_mutable_tags()->MergeFrom(from._internal_tags());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_room_id().empty()) {
        _this->_internal_set_room_id(from._internal_room_id());
      } else {
        if (_this->_impl_.room_id_.IsDefault()) {
          _this->_internal_set_room_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.bounding_box_ != nullptr);
      if (_this->_impl_.bounding_box_ == nullptr) {
        _this->_impl_.bounding_box_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.bounding_box_);
      } else {
        _this->_impl_.bounding_box_->MergeFrom(*from._impl_.bounding_box_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_index_type() != 0) {
        _this->_impl_.index_type_ = from._impl_.index_type_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_precision() != 0) {
        _this->_impl_.precision_ = from._impl_.precision_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QuerySpatialIndexRequest::CopyFrom(const QuerySpatialIndexRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.QuerySpatialIndexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QuerySpatialIndexRequest::InternalSwap(QuerySpatialIndexRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.entity_types_.InternalSwap(&other->_impl_.entity_types_);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.room_id_, &other->_impl_.room_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QuerySpatialIndexRequest, _impl_.precision_)
      + sizeof(QuerySpatialIndexRequest::_impl_.precision_)
      - PROTOBUF_FIELD_OFFSET(QuerySpatialIndexRequest, _impl_.bounding_box_)>(
          reinterpret_cast<char*>(&_impl_.bounding_box_),
          reinterpret_cast<char*>(&other->_impl_.bounding_box_));
}

::google::protobuf::Metadata QuerySpatialIndexRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BoundingBox::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<BoundingBox>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BoundingBox, _impl_._has_bits_);
};

BoundingBox::BoundingBox(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BoundingBox_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.BoundingBox)
}
BoundingBox::BoundingBox(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BoundingBox& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BoundingBox_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE BoundingBox::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void BoundingBox::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, min_x_),
           0,
           offsetof(Impl_, max_y_) -
               offsetof(Impl_, min_x_) +
               sizeof(Impl_::max_y_));
}
BoundingBox::~BoundingBox() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.BoundingBox)
  SharedDtor(*this);
}
inline void BoundingBox::SharedDtor(MessageLite& self) {
  BoundingBox& this_ = static_cast<BoundingBox&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL BoundingBox::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) BoundingBox(arena);
}
constexpr auto BoundingBox::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BoundingBox),
                                            alignof(BoundingBox));
}
constexpr auto BoundingBox::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_BoundingBox_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &BoundingBox::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<BoundingBox>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &BoundingBox::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<BoundingBox>(), &BoundingBox::ByteSizeLong,
              &BoundingBox::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(BoundingBox, _impl_._cached_size_),
          false,
      },
      &BoundingBox::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull BoundingBox_class_data_ =
        BoundingBox::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
BoundingBox::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&BoundingBox_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(BoundingBox_class_data_.tc_table);
  return BoundingBox_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2>
BoundingBox::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BoundingBox, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    BoundingBox_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::BoundingBox>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double max_y = 4 [json_name = "maxY"];
    {::_pbi::TcParser::FastF64S1,
     {33, 3, 0, PROTOBUF_FIELD_OFFSET(BoundingBox, _impl_.max_y_)}},
    // double min_x = 1 [json_name = "minX"];
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(BoundingBox, _impl_.min_x_)}},
    // double min_y = 2 [json_name = "minY"];
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(BoundingBox, _impl_.min_y_)}},
    // double max_x = 3 [json_name = "maxX"];
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(BoundingBox, _impl_.max_x_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double min_x = 1 [json_name = "minX"];
    {PROTOBUF_FIELD_OFFSET(BoundingBox, _impl_.min_x_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double min_y = 2 [json_name = "minY"];
    {PROTOBUF_FIELD_OFFSET(BoundingBox, _impl_.min_y_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double max_x = 3 [json_name = "maxX"];
    {PROTOBUF_FIELD_OFFSET(BoundingBox, _impl_.max_x_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double max_y = 4 [json_name = "maxY"];
    {PROTOBUF_FIELD_OFFSET(BoundingBox, _impl_.max_y_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void BoundingBox::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.BoundingBox)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    ::memset(&_impl_.min_x_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.max_y_) -
        reinterpret_cast<char*>(&_impl_.min_x_)) + sizeof(_impl_.max_y_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL BoundingBox::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const BoundingBox& this_ = static_cast<const BoundingBox&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL BoundingBox::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const BoundingBox& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.BoundingBox)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double min_x = 1 [json_name = "minX"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_min_x()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          1, this_._internal_min_x(), target);
    }
  }

  // double min_y = 2 [json_name = "minY"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_min_y()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_min_y(), target);
    }
  }

  // double max_x = 3 [json_name = "maxX"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_max_x()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_max_x(), target);
    }
  }

  // double max_y = 4 [json_name = "maxY"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_max_y()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          4, this_._internal_max_y(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.BoundingBox)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t BoundingBox::ByteSizeLong(const MessageLite& base) {
  const BoundingBox& this_ = static_cast<const BoundingBox&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t BoundingBox::ByteSizeLong() const {
  const BoundingBox& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.BoundingBox)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // double min_x = 1 [json_name = "minX"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_min_x()) != 0) {
        total_size += 9;
      }
    }
    // double min_y = 2 [json_name = "minY"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_min_y()) != 0) {
        total_size += 9;
      }
    }
    // double max_x = 3 [json_name = "maxX"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_max_x()) != 0) {
        total_size += 9;
      }
    }
    // double max_y = 4 [json_name = "maxY"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_max_y()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void BoundingBox::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BoundingBox*>(&to_msg);
  auto& from = static_cast<const BoundingBox&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.BoundingBox)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_min_x()) != 0) {
        _this->_impl_.min_x_ = from._impl_.min_x_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_min_y()) != 0) {
        _this->_impl_.min_y_ = from._impl_.min_y_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_max_x()) != 0) {
        _this->_impl_.max_x_ = from._impl_.max_x_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_max_y()) != 0) {
        _this->_impl_.max_y_ = from._impl_.max_y_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BoundingBox::CopyFrom(const BoundingBox& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.BoundingBox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BoundingBox::InternalSwap(BoundingBox* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BoundingBox, _impl_.max_y_)
      + sizeof(BoundingBox::_impl_.max_y_)
      - PROTOBUF_FIELD_OFFSET(BoundingBox, _impl_.min_x_)>(
          reinterpret_cast<char*>(&_impl_.min_x_),
          reinterpret_cast<char*>(&other->_impl_.min_x_));
}

::google::protobuf::Metadata BoundingBox::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QuerySpatialIndexResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<QuerySpatialIndexResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QuerySpatialIndexResponse, _impl_._has_bits_);
};

QuerySpatialIndexResponse::QuerySpatialIndexResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, QuerySpatialIndexResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.QuerySpatialIndexResponse)
}
PROTOBUF_NDEBUG_INLINE QuerySpatialIndexResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::QuerySpatialIndexResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        entities_{visibility, arena, from.entities_} {}

QuerySpatialIndexResponse::QuerySpatialIndexResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const QuerySpatialIndexResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, QuerySpatialIndexResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QuerySpatialIndexResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.index_stats_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.index_stats_)
                : nullptr;
  _impl_.query_region_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.query_region_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_candidates_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, total_candidates_),
           offsetof(Impl_, filtered_results_) -
               offsetof(Impl_, total_candidates_) +
               sizeof(Impl_::filtered_results_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.QuerySpatialIndexResponse)
}
PROTOBUF_NDEBUG_INLINE QuerySpatialIndexResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        entities_{visibility, arena} {}

inline void QuerySpatialIndexResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, index_stats_),
           0,
           offsetof(Impl_, filtered_results_) -
               offsetof(Impl_, index_stats_) +
               sizeof(Impl_::filtered_results_));
}
QuerySpatialIndexResponse::~QuerySpatialIndexResponse() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.QuerySpatialIndexResponse)
  SharedDtor(*this);
}
inline void QuerySpatialIndexResponse::SharedDtor(MessageLite& self) {
  QuerySpatialIndexResponse& this_ = static_cast<QuerySpatialIndexResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.index_stats_;
  delete this_._impl_.query_region_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL QuerySpatialIndexResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) QuerySpatialIndexResponse(arena);
}
constexpr auto QuerySpatialIndexResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(QuerySpatialIndexResponse, _impl_.entities_) +
          decltype(QuerySpatialIndexResponse::_impl_.entities_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(QuerySpatialIndexResponse), alignof(QuerySpatialIndexResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&QuerySpatialIndexResponse::PlacementNew_,
                                 sizeof(QuerySpatialIndexResponse),
                                 alignof(QuerySpatialIndexResponse));
  }
}
constexpr auto QuerySpatialIndexResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_QuerySpatialIndexResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &QuerySpatialIndexResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<QuerySpatialIndexResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &QuerySpatialIndexResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<QuerySpatialIndexResponse>(), &QuerySpatialIndexResponse::ByteSizeLong,
              &QuerySpatialIndexResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(QuerySpatialIndexResponse, _impl_._cached_size_),
          false,
      },
      &QuerySpatialIndexResponse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull QuerySpatialIndexResponse_class_data_ =
        QuerySpatialIndexResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
QuerySpatialIndexResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&QuerySpatialIndexResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(QuerySpatialIndexResponse_class_data_.tc_table);
  return QuerySpatialIndexResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 0, 2>
QuerySpatialIndexResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QuerySpatialIndexResponse, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    QuerySpatialIndexResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::QuerySpatialIndexResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .api.v1alpha1.EntityIndexResult entities = 1 [json_name = "entities"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(QuerySpatialIndexResponse, _impl_.entities_)}},
    // .api.v1alpha1.IndexStats index_stats = 2 [json_name = "indexStats"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(QuerySpatialIndexResponse, _impl_.index_stats_)}},
    // .api.v1alpha1.BoundingBox query_region = 3 [json_name = "queryRegion"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 2, PROTOBUF_FIELD_OFFSET(QuerySpatialIndexResponse, _impl_.query_region_)}},
    // int32 total_candidates = 4 [json_name = "totalCandidates"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(QuerySpatialIndexResponse, _impl_.total_candidates_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(QuerySpatialIndexResponse, _impl_.total_candidates_)}},
    // int32 filtered_results = 5 [json_name = "filteredResults"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(QuerySpatialIndexResponse, _impl_.filtered_results_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(QuerySpatialIndexResponse, _impl_.filtered_results_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .api.v1alpha1.EntityIndexResult entities = 1 [json_name = "entities"];
    {PROTOBUF_FIELD_OFFSET(QuerySpatialIndexResponse, _impl_.entities_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.IndexStats index_stats = 2 [json_name = "indexStats"];
    {PROTOBUF_FIELD_OFFSET(QuerySpatialIndexResponse, _impl_.index_stats_), _Internal::kHasBitsOffset + 0, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.BoundingBox query_region = 3 [json_name = "queryRegion"];
    {PROTOBUF_FIELD_OFFSET(QuerySpatialIndexResponse, _impl_.query_region_), _Internal::kHasBitsOffset + 1, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 total_candidates = 4 [json_name = "totalCandidates"];
    {PROTOBUF_FIELD_OFFSET(QuerySpatialIndexResponse, _impl_.total_candidates_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 filtered_results = 5 [json_name = "filteredResults"];
    {PROTOBUF_FIELD_OFFSET(QuerySpatialIndexResponse, _impl_.filtered_results_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::EntityIndexResult>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::IndexStats>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::BoundingBox>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void QuerySpatialIndexResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.QuerySpatialIndexResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entities_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.index_stats_ != nullptr);
      _impl_.index_stats_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.query_region_ != nullptr);
      _impl_.query_region_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000000cU) != 0) {
    ::memset(&_impl_.total_candidates_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.filtered_results_) -
        reinterpret_cast<char*>(&_impl_.total_candidates_)) + sizeof(_impl_.filtered_results_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL QuerySpatialIndexResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const QuerySpatialIndexResponse& this_ = static_cast<const QuerySpatialIndexResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL QuerySpatialIndexResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const QuerySpatialIndexResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.QuerySpatialIndexResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .api.v1alpha1.EntityIndexResult entities = 1 [json_name = "entities"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_entities_size());
       i < n; i++) {
    const auto& repfield = this_._internal_entities().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.IndexStats index_stats = 2 [json_name = "indexStats"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.index_stats_, this_._impl_.index_stats_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.BoundingBox query_region = 3 [json_name = "queryRegion"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.query_region_, this_._impl_.query_region_->GetCachedSize(), target,
        stream);
  }

  // int32 total_candidates = 4 [json_name = "totalCandidates"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    if (this_._internal_total_candidates() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_total_candidates(), target);
    }
  }

  // int32 filtered_results = 5 [json_name = "filteredResults"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    if (this_._internal_filtered_results() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
              stream, this_._internal_filtered_results(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.QuerySpatialIndexResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t QuerySpatialIndexResponse::ByteSizeLong(const MessageLite& base) {
  const QuerySpatialIndexResponse& this_ = static_cast<const QuerySpatialIndexResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t QuerySpatialIndexResponse::ByteSizeLong() const {
  const QuerySpatialIndexResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.QuerySpatialIndexResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.EntityIndexResult entities = 1 [json_name = "entities"];
    {
      total_size += 1UL * this_._internal_entities_size();
      for (const auto& msg : this_._internal_entities()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // .api.v1alpha1.IndexStats index_stats = 2 [json_name = "indexStats"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.index_stats_);
    }
    // .api.v1alpha1.BoundingBox query_region = 3 [json_name = "queryRegion"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.query_region_);
    }
    // int32 total_candidates = 4 [json_name = "totalCandidates"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_total_candidates() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_total_candidates());
      }
    }
    // int32 filtered_results = 5 [json_name = "filteredResults"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_filtered_results() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_filtered_results());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void QuerySpatialIndexResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QuerySpatialIndexResponse*>(&to_msg);
  auto& from = static_cast<const QuerySpatialIndexResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.QuerySpatialIndexResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entities()->MergeFrom(
      from._internal_entities());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.index_stats_ != nullptr);
      if (_this->_impl_.index_stats_ == nullptr) {
        _this->_impl_.index_stats_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.index_stats_);
      } else {
        _this->_impl_.index_stats_->MergeFrom(*from._impl_.index_stats_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.query_region_ != nullptr);
      if (_this->_impl_.query_region_ == nullptr) {
        _this->_impl_.query_region_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.query_region_);
      } else {
        _this->_impl_.query_region_->MergeFrom(*from._impl_.query_region_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_total_candidates() != 0) {
        _this->_impl_.total_candidates_ = from._impl_.total_candidates_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_filtered_results() != 0) {
        _this->_impl_.filtered_results_ = from._impl_.filtered_results_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QuerySpatialIndexResponse::CopyFrom(const QuerySpatialIndexResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.QuerySpatialIndexResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QuerySpatialIndexResponse::InternalSwap(QuerySpatialIndexResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.entities_.InternalSwap(&other->_impl_.entities_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QuerySpatialIndexResponse, _impl_.filtered_results_)
      + sizeof(QuerySpatialIndexResponse::_impl_.filtered_results_)
      - PROTOBUF_FIELD_OFFSET(QuerySpatialIndexResponse, _impl_.index_stats_)>(
          reinterpret_cast<char*>(&_impl_.index_stats_),
          reinterpret_cast<char*>(&other->_impl_.index_stats_));
}

::google::protobuf::Metadata QuerySpatialIndexResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EntityIndexResult::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<EntityIndexResult>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EntityIndexResult, _impl_._has_bits_);
};

void EntityIndexResult::clear_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.entity_ != nullptr) _impl_.entity_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
EntityIndexResult::EntityIndexResult(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EntityIndexResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.EntityIndexResult)
}
PROTOBUF_NDEBUG_INLINE EntityIndexResult::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::EntityIndexResult& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

EntityIndexResult::EntityIndexResult(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EntityIndexResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EntityIndexResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EntityIndexResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.entity_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.entity_)
                : nullptr;
  _impl_.entity_bounds_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.entity_bounds_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, distance_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, distance_),
           offsetof(Impl_, exact_match_) -
               offsetof(Impl_, distance_) +
               sizeof(Impl_::exact_match_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.EntityIndexResult)
}
PROTOBUF_NDEBUG_INLINE EntityIndexResult::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void EntityIndexResult::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, entity_),
           0,
           offsetof(Impl_, exact_match_) -
               offsetof(Impl_, entity_) +
               sizeof(Impl_::exact_match_));
}
EntityIndexResult::~EntityIndexResult() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.EntityIndexResult)
  SharedDtor(*this);
}
inline void EntityIndexResult::SharedDtor(MessageLite& self) {
  EntityIndexResult& this_ = static_cast<EntityIndexResult&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.entity_;
  delete this_._impl_.entity_bounds_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EntityIndexResult::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EntityIndexResult(arena);
}
constexpr auto EntityIndexResult::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(EntityIndexResult),
                                            alignof(EntityIndexResult));
}
constexpr auto EntityIndexResult::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EntityIndexResult_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EntityIndexResult::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EntityIndexResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EntityIndexResult::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EntityIndexResult>(), &EntityIndexResult::ByteSizeLong,
              &EntityIndexResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EntityIndexResult, _impl_._cached_size_),
          false,
      },
      &EntityIndexResult::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EntityIndexResult_class_data_ =
        EntityIndexResult::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EntityIndexResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EntityIndexResult_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EntityIndexResult_class_data_.tc_table);
  return EntityIndexResult_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 0, 2>
EntityIndexResult::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EntityIndexResult, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    EntityIndexResult_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::EntityIndexResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .api.v1alpha1.BoundingBox entity_bounds = 4 [json_name = "entityBounds"];
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(EntityIndexResult, _impl_.entity_bounds_)}},
    // .api.v1alpha1.Entity entity = 1 [json_name = "entity"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EntityIndexResult, _impl_.entity_)}},
    // double distance = 2 [json_name = "distance"];
    {::_pbi::TcParser::FastF64S1,
     {17, 2, 0, PROTOBUF_FIELD_OFFSET(EntityIndexResult, _impl_.distance_)}},
    // bool exact_match = 3 [json_name = "exactMatch"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(EntityIndexResult, _impl_.exact_match_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(EntityIndexResult, _impl_.exact_match_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .api.v1alpha1.Entity entity = 1 [json_name = "entity"];
    {PROTOBUF_FIELD_OFFSET(EntityIndexResult, _impl_.entity_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // double distance = 2 [json_name = "distance"];
    {PROTOBUF_FIELD_OFFSET(EntityIndexResult, _impl_.distance_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // bool exact_match = 3 [json_name = "exactMatch"];
    {PROTOBUF_FIELD_OFFSET(EntityIndexResult, _impl_.exact_match_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // .api.v1alpha1.BoundingBox entity_bounds = 4 [json_name = "entityBounds"];
    {PROTOBUF_FIELD_OFFSET(EntityIndexResult, _impl_.entity_bounds_), _Internal::kHasBitsOffset + 1, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Entity>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::BoundingBox>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void EntityIndexResult::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.EntityIndexResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.entity_ != nullptr);
      _impl_.entity_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.entity_bounds_ != nullptr);
      _impl_.entity_bounds_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000000cU) != 0) {
    ::memset(&_impl_.distance_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.exact_match_) -
        reinterpret_cast<char*>(&_impl_.distance_)) + sizeof(_impl_.exact_match_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EntityIndexResult::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EntityIndexResult& this_ = static_cast<const EntityIndexResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EntityIndexResult::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EntityIndexResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.EntityIndexResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.Entity entity = 1 [json_name = "entity"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.entity_, this_._impl_.entity_->GetCachedSize(), target,
        stream);
  }

  // double distance = 2 [json_name = "distance"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_distance()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_distance(), target);
    }
  }

  // bool exact_match = 3 [json_name = "exactMatch"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    if (this_._internal_exact_match() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_exact_match(), target);
    }
  }

  // .api.v1alpha1.BoundingBox entity_bounds = 4 [json_name = "entityBounds"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.entity_bounds_, this_._impl_.entity_bounds_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.EntityIndexResult)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EntityIndexResult::ByteSizeLong(const MessageLite& base) {
  const EntityIndexResult& this_ = static_cast<const EntityIndexResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EntityIndexResult::ByteSizeLong() const {
  const EntityIndexResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.EntityIndexResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // .api.v1alpha1.Entity entity = 1 [json_name = "entity"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.entity_);
    }
    // .api.v1alpha1.BoundingBox entity_bounds = 4 [json_name = "entityBounds"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.entity_bounds_);
    }
    // double distance = 2 [json_name = "distance"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_distance()) != 0) {
        total_size += 9;
      }
    }
    // bool exact_match = 3 [json_name = "exactMatch"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_exact_match() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EntityIndexResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EntityIndexResult*>(&to_msg);
  auto& from = static_cast<const EntityIndexResult&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.EntityIndexResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.entity_ != nullptr);
      if (_this->_impl_.entity_ == nullptr) {
        _this->_impl_.entity_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.entity_);
      } else {
        _this->_impl_.entity_->MergeFrom(*from._impl_.entity_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.entity_bounds_ != nullptr);
      if (_this->_impl_.entity_bounds_ == nullptr) {
        _this->_impl_.entity_bounds_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.entity_bounds_);
      } else {
        _this->_impl_.entity_bounds_->MergeFrom(*from._impl_.entity_bounds_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_distance()) != 0) {
        _this->_impl_.distance_ = from._impl_.distance_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_exact_match() != 0) {
        _this->_impl_.exact_match_ = from._impl_.exact_match_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EntityIndexResult::CopyFrom(const EntityIndexResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.EntityIndexResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EntityIndexResult::InternalSwap(EntityIndexResult* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EntityIndexResult, _impl_.exact_match_)
      + sizeof(EntityIndexResult::_impl_.exact_match_)
      - PROTOBUF_FIELD_OFFSET(EntityIndexResult, _impl_.entity_)>(
          reinterpret_cast<char*>(&_impl_.entity_),
          reinterpret_cast<char*>(&other->_impl_.entity_));
}

::google::protobuf::Metadata EntityIndexResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class IndexStats::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<IndexStats>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(IndexStats, _impl_._has_bits_);
};

IndexStats::IndexStats(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, IndexStats_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.IndexStats)
}
IndexStats::IndexStats(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const IndexStats& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, IndexStats_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE IndexStats::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void IndexStats::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, build_time_ms_),
           0,
           offsetof(Impl_, index_type_) -
               offsetof(Impl_, build_time_ms_) +
               sizeof(Impl_::index_type_));
}
IndexStats::~IndexStats() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.IndexStats)
  SharedDtor(*this);
}
inline void IndexStats::SharedDtor(MessageLite& self) {
  IndexStats& this_ = static_cast<IndexStats&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL IndexStats::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) IndexStats(arena);
}
constexpr auto IndexStats::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(IndexStats),
                                            alignof(IndexStats));
}
constexpr auto IndexStats::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_IndexStats_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &IndexStats::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<IndexStats>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &IndexStats::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<IndexStats>(), &IndexStats::ByteSizeLong,
              &IndexStats::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(IndexStats, _impl_._cached_size_),
          false,
      },
      &IndexStats::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull IndexStats_class_data_ =
        IndexStats::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
IndexStats::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&IndexStats_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(IndexStats_class_data_.tc_table);
  return IndexStats_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2>
IndexStats::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(IndexStats, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    IndexStats_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::IndexStats>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .api.v1alpha1.SpatialIndexType index_type = 1 [json_name = "indexType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(IndexStats, _impl_.index_type_), 5>(),
     {8, 5, 0, PROTOBUF_FIELD_OFFSET(IndexStats, _impl_.index_type_)}},
    // double build_time_ms = 2 [json_name = "buildTimeMs"];
    {::_pbi::TcParser::FastF64S1,
     {17, 0, 0, PROTOBUF_FIELD_OFFSET(IndexStats, _impl_.build_time_ms_)}},
    // double query_time_ms = 3 [json_name = "queryTimeMs"];
    {::_pbi::TcParser::FastF64S1,
     {25, 1, 0, PROTOBUF_FIELD_OFFSET(IndexStats, _impl_.query_time_ms_)}},
    // double cache_hit_ratio = 4 [json_name = "cacheHitRatio"];
    {::_pbi::TcParser::FastF64S1,
     {33, 2, 0, PROTOBUF_FIELD_OFFSET(IndexStats, _impl_.cache_hit_ratio_)}},
    // int64 index_memory_bytes = 5 [json_name = "indexMemoryBytes"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(IndexStats, _impl_.index_memory_bytes_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(IndexStats, _impl_.index_memory_bytes_)}},
    // int64 last_updated = 6 [json_name = "lastUpdated"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(IndexStats, _impl_.last_updated_), 4>(),
     {48, 4, 0, PROTOBUF_FIELD_OFFSET(IndexStats, _impl_.last_updated_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .api.v1alpha1.SpatialIndexType index_type = 1 [json_name = "indexType"];
    {PROTOBUF_FIELD_OFFSET(IndexStats, _impl_.index_type_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // double build_time_ms = 2 [json_name = "buildTimeMs"];
    {PROTOBUF_FIELD_OFFSET(IndexStats, _impl_.build_time_ms_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double query_time_ms = 3 [json_name = "queryTimeMs"];
    {PROTOBUF_FIELD_OFFSET(IndexStats, _impl_.query_time_ms_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double cache_hit_ratio = 4 [json_name = "cacheHitRatio"];
    {PROTOBUF_FIELD_OFFSET(IndexStats, _impl_.cache_hit_ratio_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // int64 index_memory_bytes = 5 [json_name = "indexMemoryBytes"];
    {PROTOBUF_FIELD_OFFSET(IndexStats, _impl_.index_memory_bytes_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 last_updated = 6 [json_name = "lastUpdated"];
    {PROTOBUF_FIELD_OFFSET(IndexStats, _impl_.last_updated_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void IndexStats::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.IndexStats)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    ::memset(&_impl_.build_time_ms_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.index_type_) -
        reinterpret_cast<char*>(&_impl_.build_time_ms_)) + sizeof(_impl_.index_type_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL IndexStats::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const IndexStats& this_ = static_cast<const IndexStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL IndexStats::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const IndexStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.IndexStats)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .api.v1alpha1.SpatialIndexType index_type = 1 [json_name = "indexType"];
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (this_._internal_index_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_index_type(), target);
    }
  }

  // double build_time_ms = 2 [json_name = "buildTimeMs"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_build_time_ms()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_build_time_ms(), target);
    }
  }

  // double query_time_ms = 3 [json_name = "queryTimeMs"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_query_time_ms()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_query_time_ms(), target);
    }
  }

  // double cache_hit_ratio = 4 [json_name = "cacheHitRatio"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_cache_hit_ratio()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          4, this_._internal_cache_hit_ratio(), target);
    }
  }

  // int64 index_memory_bytes = 5 [json_name = "indexMemoryBytes"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_index_memory_bytes() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<5>(
              stream, this_._internal_index_memory_bytes(), target);
    }
  }

  // int64 last_updated = 6 [json_name = "lastUpdated"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_last_updated() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<6>(
              stream, this_._internal_last_updated(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.IndexStats)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t IndexStats::ByteSizeLong(const MessageLite& base) {
  const IndexStats& this_ = static_cast<const IndexStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t IndexStats::ByteSizeLong() const {
  const IndexStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.IndexStats)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    // double build_time_ms = 2 [json_name = "buildTimeMs"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_build_time_ms()) != 0) {
        total_size += 9;
      }
    }
    // double query_time_ms = 3 [json_name = "queryTimeMs"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_query_time_ms()) != 0) {
        total_size += 9;
      }
    }
    // double cache_hit_ratio = 4 [json_name = "cacheHitRatio"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_cache_hit_ratio()) != 0) {
        total_size += 9;
      }
    }
    // int64 index_memory_bytes = 5 [json_name = "indexMemoryBytes"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_index_memory_bytes() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_index_memory_bytes());
      }
    }
    // int64 last_updated = 6 [json_name = "lastUpdated"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_last_updated() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_last_updated());
      }
    }
    // .api.v1alpha1.SpatialIndexType index_type = 1 [json_name = "indexType"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_index_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_index_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void IndexStats::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<IndexStats*>(&to_msg);
  auto& from = static_cast<const IndexStats&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.IndexStats)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_build_time_ms()) != 0) {
        _this->_impl_.build_time_ms_ = from._impl_.build_time_ms_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_query_time_ms()) != 0) {
        _this->_impl_.query_time_ms_ = from._impl_.query_time_ms_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_cache_hit_ratio()) != 0) {
        _this->_impl_.cache_hit_ratio_ = from._impl_.cache_hit_ratio_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_index_memory_bytes() != 0) {
        _this->_impl_.index_memory_bytes_ = from._impl_.index_memory_bytes_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_last_updated() != 0) {
        _this->_impl_.last_updated_ = from._impl_.last_updated_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_index_type() != 0) {
        _this->_impl_.index_type_ = from._impl_.index_type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IndexStats::CopyFrom(const IndexStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.IndexStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void IndexStats::InternalSwap(IndexStats* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IndexStats, _impl_.index_type_)
      + sizeof(IndexStats::_impl_.index_type_)
      - PROTOBUF_FIELD_OFFSET(IndexStats, _impl_.build_time_ms_)>(
          reinterpret_cast<char*>(&_impl_.build_time_ms_),
          reinterpret_cast<char*>(&other->_impl_.build_time_ms_));
}

::google::protobuf::Metadata IndexStats::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetSpatialStatsRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetSpatialStatsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetSpatialStatsRequest, _impl_._has_bits_);
};

GetSpatialStatsRequest::GetSpatialStatsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetSpatialStatsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.GetSpatialStatsRequest)
}
PROTOBUF_NDEBUG_INLINE GetSpatialStatsRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::GetSpatialStatsRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        room_id_(arena, from.room_id_) {}

GetSpatialStatsRequest::GetSpatialStatsRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetSpatialStatsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetSpatialStatsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetSpatialStatsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.time_range_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.time_range_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.GetSpatialStatsRequest)
}
PROTOBUF_NDEBUG_INLINE GetSpatialStatsRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        room_id_(arena) {}

inline void GetSpatialStatsRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.time_range_ = {};
}
GetSpatialStatsRequest::~GetSpatialStatsRequest() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.GetSpatialStatsRequest)
  SharedDtor(*this);
}
inline void GetSpatialStatsRequest::SharedDtor(MessageLite& self) {
  GetSpatialStatsRequest& this_ = static_cast<GetSpatialStatsRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.room_id_.Destroy();
  delete this_._impl_.time_range_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetSpatialStatsRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetSpatialStatsRequest(arena);
}
constexpr auto GetSpatialStatsRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetSpatialStatsRequest),
                                            alignof(GetSpatialStatsRequest));
}
constexpr auto GetSpatialStatsRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetSpatialStatsRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetSpatialStatsRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetSpatialStatsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetSpatialStatsRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetSpatialStatsRequest>(), &GetSpatialStatsRequest::ByteSizeLong,
              &GetSpatialStatsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetSpatialStatsRequest, _impl_._cached_size_),
          false,
      },
      &GetSpatialStatsRequest::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetSpatialStatsRequest_class_data_ =
        GetSpatialStatsRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetSpatialStatsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetSpatialStatsRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetSpatialStatsRequest_class_data_.tc_table);
  return GetSpatialStatsRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 51, 2>
GetSpatialStatsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetSpatialStatsRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetSpatialStatsRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::GetSpatialStatsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .api.v1alpha1.TimeRange time_range = 2 [json_name = "timeRange"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(GetSpatialStatsRequest, _impl_.time_range_)}},
    // string room_id = 1 [json_name = "roomId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetSpatialStatsRequest, _impl_.room_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string room_id = 1 [json_name = "roomId"];
    {PROTOBUF_FIELD_OFFSET(GetSpatialStatsRequest, _impl_.room_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.TimeRange time_range = 2 [json_name = "timeRange"];
    {PROTOBUF_FIELD_OFFSET(GetSpatialStatsRequest, _impl_.time_range_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::TimeRange>()},
  }},
  {{
    "\43\7\0\0\0\0\0\0"
    "api.v1alpha1.GetSpatialStatsRequest"
    "room_id"
  }},
};
PROTOBUF_NOINLINE void GetSpatialStatsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.GetSpatialStatsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.room_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.time_range_ != nullptr);
      _impl_.time_range_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetSpatialStatsRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetSpatialStatsRequest& this_ = static_cast<const GetSpatialStatsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetSpatialStatsRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetSpatialStatsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.GetSpatialStatsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string room_id = 1 [json_name = "roomId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_room_id().empty()) {
      const ::std::string& _s = this_._internal_room_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.GetSpatialStatsRequest.room_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.TimeRange time_range = 2 [json_name = "timeRange"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.time_range_, this_._impl_.time_range_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.GetSpatialStatsRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetSpatialStatsRequest::ByteSizeLong(const MessageLite& base) {
  const GetSpatialStatsRequest& this_ = static_cast<const GetSpatialStatsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetSpatialStatsRequest::ByteSizeLong() const {
  const GetSpatialStatsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.GetSpatialStatsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string room_id = 1 [json_name = "roomId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_room_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_room_id());
      }
    }
    // .api.v1alpha1.TimeRange time_range = 2 [json_name = "timeRange"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.time_range_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetSpatialStatsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetSpatialStatsRequest*>(&to_msg);
  auto& from = static_cast<const GetSpatialStatsRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.GetSpatialStatsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_room_id().empty()) {
        _this->_internal_set_room_id(from._internal_room_id());
      } else {
        if (_this->_impl_.room_id_.IsDefault()) {
          _this->_internal_set_room_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.time_range_ != nullptr);
      if (_this->_impl_.time_range_ == nullptr) {
        _this->_impl_.time_range_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.time_range_);
      } else {
        _this->_impl_.time_range_->MergeFrom(*from._impl_.time_range_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetSpatialStatsRequest::CopyFrom(const GetSpatialStatsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.GetSpatialStatsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetSpatialStatsRequest::InternalSwap(GetSpatialStatsRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.room_id_, &other->_impl_.room_id_, arena);
  swap(_impl_.time_range_, other->_impl_.time_range_);
}

::google::protobuf::Metadata GetSpatialStatsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TimeRange::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TimeRange>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TimeRange, _impl_._has_bits_);
};

TimeRange::TimeRange(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TimeRange_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.TimeRange)
}
TimeRange::TimeRange(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TimeRange& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TimeRange_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE TimeRange::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void TimeRange::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, start_time_),
           0,
           offsetof(Impl_, end_time_) -
               offsetof(Impl_, start_time_) +
               sizeof(Impl_::end_time_));
}
TimeRange::~TimeRange() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.TimeRange)
  SharedDtor(*this);
}
inline void TimeRange::SharedDtor(MessageLite& self) {
  TimeRange& this_ = static_cast<TimeRange&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TimeRange::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TimeRange(arena);
}
constexpr auto TimeRange::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TimeRange),
                                            alignof(TimeRange));
}
constexpr auto TimeRange::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TimeRange_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TimeRange::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TimeRange>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TimeRange::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TimeRange>(), &TimeRange::ByteSizeLong,
              &TimeRange::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TimeRange, _impl_._cached_size_),
          false,
      },
      &TimeRange::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TimeRange_class_data_ =
        TimeRange::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TimeRange::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TimeRange_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TimeRange_class_data_.tc_table);
  return TimeRange_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
TimeRange::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TimeRange, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TimeRange_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::TimeRange>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 end_time = 2 [json_name = "endTime"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TimeRange, _impl_.end_time_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TimeRange, _impl_.end_time_)}},
    // int64 start_time = 1 [json_name = "startTime"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TimeRange, _impl_.start_time_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(TimeRange, _impl_.start_time_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 start_time = 1 [json_name = "startTime"];
    {PROTOBUF_FIELD_OFFSET(TimeRange, _impl_.start_time_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 end_time = 2 [json_name = "endTime"];
    {PROTOBUF_FIELD_OFFSET(TimeRange, _impl_.end_time_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void TimeRange::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.TimeRange)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    ::memset(&_impl_.start_time_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.end_time_) -
        reinterpret_cast<char*>(&_impl_.start_time_)) + sizeof(_impl_.end_time_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TimeRange::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TimeRange& this_ = static_cast<const TimeRange&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TimeRange::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TimeRange& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.TimeRange)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 start_time = 1 [json_name = "startTime"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_start_time() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_start_time(), target);
    }
  }

  // int64 end_time = 2 [json_name = "endTime"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_end_time() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
              stream, this_._internal_end_time(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.TimeRange)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TimeRange::ByteSizeLong(const MessageLite& base) {
  const TimeRange& this_ = static_cast<const TimeRange&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TimeRange::ByteSizeLong() const {
  const TimeRange& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.TimeRange)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // int64 start_time = 1 [json_name = "startTime"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_start_time() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_start_time());
      }
    }
    // int64 end_time = 2 [json_name = "endTime"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_end_time() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_end_time());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TimeRange::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TimeRange*>(&to_msg);
  auto& from = static_cast<const TimeRange&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.TimeRange)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (from._internal_start_time() != 0) {
        _this->_impl_.start_time_ = from._impl_.start_time_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_end_time() != 0) {
        _this->_impl_.end_time_ = from._impl_.end_time_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TimeRange::CopyFrom(const TimeRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.TimeRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TimeRange::InternalSwap(TimeRange* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TimeRange, _impl_.end_time_)
      + sizeof(TimeRange::_impl_.end_time_)
      - PROTOBUF_FIELD_OFFSET(TimeRange, _impl_.start_time_)>(
          reinterpret_cast<char*>(&_impl_.start_time_),
          reinterpret_cast<char*>(&other->_impl_.start_time_));
}

::google::protobuf::Metadata TimeRange::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse::GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse()
    : SuperType(GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse_class_data_.base()) {}
GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse::GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse::GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse() : SuperType() {}
GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse::GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse(arena);
}
constexpr auto GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse),
                                            alignof(GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse));
}
constexpr auto GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse_class_data_ =
        GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse_class_data_.tc_table);
  return GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 65, 2>
GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .api.v1alpha1.SpatialQueryStats value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.SpatialQueryStats value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(GetSpatialStatsResponse_StatsByTypeEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::SpatialQueryStats>()},
  }},
  {{
    "\65\3\0\0\0\0\0\0"
    "api.v1alpha1.GetSpatialStatsResponse.StatsByTypeEntry"
    "key"
  }},
};
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
GetSpatialStatsResponse_IndexStatsEntry_DoNotUse::GetSpatialStatsResponse_IndexStatsEntry_DoNotUse()
    : SuperType(GetSpatialStatsResponse_IndexStatsEntry_DoNotUse_class_data_.base()) {}
GetSpatialStatsResponse_IndexStatsEntry_DoNotUse::GetSpatialStatsResponse_IndexStatsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, GetSpatialStatsResponse_IndexStatsEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
GetSpatialStatsResponse_IndexStatsEntry_DoNotUse::GetSpatialStatsResponse_IndexStatsEntry_DoNotUse() : SuperType() {}
GetSpatialStatsResponse_IndexStatsEntry_DoNotUse::GetSpatialStatsResponse_IndexStatsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL GetSpatialStatsResponse_IndexStatsEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetSpatialStatsResponse_IndexStatsEntry_DoNotUse(arena);
}
constexpr auto GetSpatialStatsResponse_IndexStatsEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetSpatialStatsResponse_IndexStatsEntry_DoNotUse),
                                            alignof(GetSpatialStatsResponse_IndexStatsEntry_DoNotUse));
}
constexpr auto GetSpatialStatsResponse_IndexStatsEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetSpatialStatsResponse_IndexStatsEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetSpatialStatsResponse_IndexStatsEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetSpatialStatsResponse_IndexStatsEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetSpatialStatsResponse_IndexStatsEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&GetSpatialStatsResponse_IndexStatsEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetSpatialStatsResponse_IndexStatsEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &GetSpatialStatsResponse_IndexStatsEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetSpatialStatsResponse_IndexStatsEntry_DoNotUse_class_data_ =
        GetSpatialStatsResponse_IndexStatsEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetSpatialStatsResponse_IndexStatsEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetSpatialStatsResponse_IndexStatsEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetSpatialStatsResponse_IndexStatsEntry_DoNotUse_class_data_.tc_table);
  return GetSpatialStatsResponse_IndexStatsEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 64, 2>
GetSpatialStatsResponse_IndexStatsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetSpatialStatsResponse_IndexStatsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetSpatialStatsResponse_IndexStatsEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::GetSpatialStatsResponse_IndexStatsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .api.v1alpha1.IndexStats value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(GetSpatialStatsResponse_IndexStatsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetSpatialStatsResponse_IndexStatsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(GetSpatialStatsResponse_IndexStatsEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.IndexStats value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(GetSpatialStatsResponse_IndexStatsEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::IndexStats>()},
  }},
  {{
    "\64\3\0\0\0\0\0\0"
    "api.v1alpha1.GetSpatialStatsResponse.IndexStatsEntry"
    "key"
  }},
};
// ===================================================================

class GetSpatialStatsResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetSpatialStatsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetSpatialStatsResponse, _impl_._has_bits_);
};

GetSpatialStatsResponse::GetSpatialStatsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetSpatialStatsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.GetSpatialStatsResponse)
}
PROTOBUF_NDEBUG_INLINE GetSpatialStatsResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::GetSpatialStatsResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        stats_by_type_{visibility, arena, from.stats_by_type_},
        index_stats_{visibility, arena, from.index_stats_} {}

GetSpatialStatsResponse::GetSpatialStatsResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetSpatialStatsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetSpatialStatsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetSpatialStatsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.overall_stats_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.overall_stats_)
                : nullptr;
  _impl_.cache_stats_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.cache_stats_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.GetSpatialStatsResponse)
}
PROTOBUF_NDEBUG_INLINE GetSpatialStatsResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        stats_by_type_{visibility, arena},
        index_stats_{visibility, arena} {}

inline void GetSpatialStatsResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, overall_stats_),
           0,
           offsetof(Impl_, cache_stats_) -
               offsetof(Impl_, overall_stats_) +
               sizeof(Impl_::cache_stats_));
}
GetSpatialStatsResponse::~GetSpatialStatsResponse() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.GetSpatialStatsResponse)
  SharedDtor(*this);
}
inline void GetSpatialStatsResponse::SharedDtor(MessageLite& self) {
  GetSpatialStatsResponse& this_ = static_cast<GetSpatialStatsResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.overall_stats_;
  delete this_._impl_.cache_stats_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetSpatialStatsResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetSpatialStatsResponse(arena);
}
constexpr auto GetSpatialStatsResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetSpatialStatsResponse, _impl_.stats_by_type_) +
          decltype(GetSpatialStatsResponse::_impl_.stats_by_type_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GetSpatialStatsResponse, _impl_.stats_by_type_) +
          decltype(GetSpatialStatsResponse::_impl_.stats_by_type_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GetSpatialStatsResponse, _impl_.index_stats_) +
          decltype(GetSpatialStatsResponse::_impl_.index_stats_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GetSpatialStatsResponse, _impl_.index_stats_) +
          decltype(GetSpatialStatsResponse::_impl_.index_stats_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(GetSpatialStatsResponse), alignof(GetSpatialStatsResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetSpatialStatsResponse::PlacementNew_,
                                 sizeof(GetSpatialStatsResponse),
                                 alignof(GetSpatialStatsResponse));
  }
}
constexpr auto GetSpatialStatsResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetSpatialStatsResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetSpatialStatsResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetSpatialStatsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetSpatialStatsResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetSpatialStatsResponse>(), &GetSpatialStatsResponse::ByteSizeLong,
              &GetSpatialStatsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetSpatialStatsResponse, _impl_._cached_size_),
          false,
      },
      &GetSpatialStatsResponse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetSpatialStatsResponse_class_data_ =
        GetSpatialStatsResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetSpatialStatsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetSpatialStatsResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetSpatialStatsResponse_class_data_.tc_table);
  return GetSpatialStatsResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 6, 69, 2>
GetSpatialStatsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetSpatialStatsResponse, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetSpatialStatsResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::GetSpatialStatsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .api.v1alpha1.SpatialQueryStats overall_stats = 1 [json_name = "overallStats"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetSpatialStatsResponse, _impl_.overall_stats_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .api.v1alpha1.CacheStats cache_stats = 3 [json_name = "cacheStats"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(GetSpatialStatsResponse, _impl_.cache_stats_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .api.v1alpha1.SpatialQueryStats overall_stats = 1 [json_name = "overallStats"];
    {PROTOBUF_FIELD_OFFSET(GetSpatialStatsResponse, _impl_.overall_stats_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, .api.v1alpha1.SpatialQueryStats> stats_by_type = 2 [json_name = "statsByType"];
    {PROTOBUF_FIELD_OFFSET(GetSpatialStatsResponse, _impl_.stats_by_type_), -1, 2, (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // .api.v1alpha1.CacheStats cache_stats = 3 [json_name = "cacheStats"];
    {PROTOBUF_FIELD_OFFSET(GetSpatialStatsResponse, _impl_.cache_stats_), _Internal::kHasBitsOffset + 1, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, .api.v1alpha1.IndexStats> index_stats = 4 [json_name = "indexStats"];
    {PROTOBUF_FIELD_OFFSET(GetSpatialStatsResponse, _impl_.index_stats_), -1, 4, (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::SpatialQueryStats>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::CacheStats>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 11,
                                       0)},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::SpatialQueryStats>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 11,
                                       0)},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::IndexStats>()},
  }},
  {{
    "\44\0\15\0\13\0\0\0"
    "api.v1alpha1.GetSpatialStatsResponse"
    "stats_by_type"
    "index_stats"
  }},
};
PROTOBUF_NOINLINE void GetSpatialStatsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.GetSpatialStatsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stats_by_type_.Clear();
  _impl_.index_stats_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.overall_stats_ != nullptr);
      _impl_.overall_stats_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.cache_stats_ != nullptr);
      _impl_.cache_stats_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetSpatialStatsResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetSpatialStatsResponse& this_ = static_cast<const GetSpatialStatsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetSpatialStatsResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetSpatialStatsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.GetSpatialStatsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.SpatialQueryStats overall_stats = 1 [json_name = "overallStats"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.overall_stats_, this_._impl_.overall_stats_->GetCachedSize(), target,
        stream);
  }

  // map<string, .api.v1alpha1.SpatialQueryStats> stats_by_type = 2 [json_name = "statsByType"];
  if (!this_._internal_stats_by_type().empty()) {
    using MapType = ::google::protobuf::Map<::std::string, ::api::v1alpha1::SpatialQueryStats>;
    using WireHelper = _pbi::MapEntryFuncs<::std::string, ::api::v1alpha1::SpatialQueryStats,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>;
    const auto& field = this_._internal_stats_by_type();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.GetSpatialStatsResponse.stats_by_type");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.GetSpatialStatsResponse.stats_by_type");
      }
    }
  }

  // .api.v1alpha1.CacheStats cache_stats = 3 [json_name = "cacheStats"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.cache_stats_, this_._impl_.cache_stats_->GetCachedSize(), target,
        stream);
  }

  // map<string, .api.v1alpha1.IndexStats> index_stats = 4 [json_name = "indexStats"];
  if (!this_._internal_index_stats().empty()) {
    using MapType = ::google::protobuf::Map<::std::string, ::api::v1alpha1::IndexStats>;
    using WireHelper = _pbi::MapEntryFuncs<::std::string, ::api::v1alpha1::IndexStats,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>;
    const auto& field = this_._internal_index_stats();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.GetSpatialStatsResponse.index_stats");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.GetSpatialStatsResponse.index_stats");
      }
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.GetSpatialStatsResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetSpatialStatsResponse::ByteSizeLong(const MessageLite& base) {
  const GetSpatialStatsResponse& this_ = static_cast<const GetSpatialStatsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetSpatialStatsResponse::ByteSizeLong() const {
  const GetSpatialStatsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.GetSpatialStatsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, .api.v1alpha1.SpatialQueryStats> stats_by_type = 2 [json_name = "statsByType"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_stats_by_type_size());
      for (const auto& entry : this_._internal_stats_by_type()) {
        total_size += _pbi::MapEntryFuncs<::std::string, ::api::v1alpha1::SpatialQueryStats,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
      }
    }
    // map<string, .api.v1alpha1.IndexStats> index_stats = 4 [json_name = "indexStats"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_index_stats_size());
      for (const auto& entry : this_._internal_index_stats()) {
        total_size += _pbi::MapEntryFuncs<::std::string, ::api::v1alpha1::IndexStats,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // .api.v1alpha1.SpatialQueryStats overall_stats = 1 [json_name = "overallStats"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.overall_stats_);
    }
    // .api.v1alpha1.CacheStats cache_stats = 3 [json_name = "cacheStats"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.cache_stats_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetSpatialStatsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetSpatialStatsResponse*>(&to_msg);
  auto& from = static_cast<const GetSpatialStatsResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.GetSpatialStatsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.stats_by_type_.MergeFrom(from._impl_.stats_by_type_);
  _this->_impl_.index_stats_.MergeFrom(from._impl_.index_stats_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.overall_stats_ != nullptr);
      if (_this->_impl_.overall_stats_ == nullptr) {
        _this->_impl_.overall_stats_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.overall_stats_);
      } else {
        _this->_impl_.overall_stats_->MergeFrom(*from._impl_.overall_stats_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.cache_stats_ != nullptr);
      if (_this->_impl_.cache_stats_ == nullptr) {
        _this->_impl_.cache_stats_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.cache_stats_);
      } else {
        _this->_impl_.cache_stats_->MergeFrom(*from._impl_.cache_stats_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetSpatialStatsResponse::CopyFrom(const GetSpatialStatsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.GetSpatialStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetSpatialStatsResponse::InternalSwap(GetSpatialStatsResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.stats_by_type_.InternalSwap(&other->_impl_.stats_by_type_);
  _impl_.index_stats_.InternalSwap(&other->_impl_.index_stats_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetSpatialStatsResponse, _impl_.cache_stats_)
      + sizeof(GetSpatialStatsResponse::_impl_.cache_stats_)
      - PROTOBUF_FIELD_OFFSET(GetSpatialStatsResponse, _impl_.overall_stats_)>(
          reinterpret_cast<char*>(&_impl_.overall_stats_),
          reinterpret_cast<char*>(&other->_impl_.overall_stats_));
}

::google::protobuf::Metadata GetSpatialStatsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CacheStats::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CacheStats>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CacheStats, _impl_._has_bits_);
};

CacheStats::CacheStats(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CacheStats_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.CacheStats)
}
CacheStats::CacheStats(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CacheStats& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CacheStats_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CacheStats::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CacheStats::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, hit_ratio_),
           0,
           offsetof(Impl_, entry_count_) -
               offsetof(Impl_, hit_ratio_) +
               sizeof(Impl_::entry_count_));
}
CacheStats::~CacheStats() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.CacheStats)
  SharedDtor(*this);
}
inline void CacheStats::SharedDtor(MessageLite& self) {
  CacheStats& this_ = static_cast<CacheStats&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CacheStats::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CacheStats(arena);
}
constexpr auto CacheStats::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CacheStats),
                                            alignof(CacheStats));
}
constexpr auto CacheStats::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CacheStats_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CacheStats::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CacheStats>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CacheStats::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CacheStats>(), &CacheStats::ByteSizeLong,
              &CacheStats::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CacheStats, _impl_._cached_size_),
          false,
      },
      &CacheStats::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CacheStats_class_data_ =
        CacheStats::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CacheStats::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CacheStats_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CacheStats_class_data_.tc_table);
  return CacheStats_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2>
CacheStats::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CacheStats, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CacheStats_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::CacheStats>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double hit_ratio = 1 [json_name = "hitRatio"];
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(CacheStats, _impl_.hit_ratio_)}},
    // int64 hits = 2 [json_name = "hits"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CacheStats, _impl_.hits_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CacheStats, _impl_.hits_)}},
    // int64 misses = 3 [json_name = "misses"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CacheStats, _impl_.misses_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CacheStats, _impl_.misses_)}},
    // int64 size_bytes = 4 [json_name = "sizeBytes"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CacheStats, _impl_.size_bytes_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CacheStats, _impl_.size_bytes_)}},
    // int32 entry_count = 5 [json_name = "entryCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CacheStats, _impl_.entry_count_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(CacheStats, _impl_.entry_count_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // double hit_ratio = 1 [json_name = "hitRatio"];
    {PROTOBUF_FIELD_OFFSET(CacheStats, _impl_.hit_ratio_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // int64 hits = 2 [json_name = "hits"];
    {PROTOBUF_FIELD_OFFSET(CacheStats, _impl_.hits_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 misses = 3 [json_name = "misses"];
    {PROTOBUF_FIELD_OFFSET(CacheStats, _impl_.misses_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 size_bytes = 4 [json_name = "sizeBytes"];
    {PROTOBUF_FIELD_OFFSET(CacheStats, _impl_.size_bytes_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int32 entry_count = 5 [json_name = "entryCount"];
    {PROTOBUF_FIELD_OFFSET(CacheStats, _impl_.entry_count_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CacheStats::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.CacheStats)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    ::memset(&_impl_.hit_ratio_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.entry_count_) -
        reinterpret_cast<char*>(&_impl_.hit_ratio_)) + sizeof(_impl_.entry_count_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CacheStats::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CacheStats& this_ = static_cast<const CacheStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CacheStats::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CacheStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.CacheStats)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double hit_ratio = 1 [json_name = "hitRatio"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_hit_ratio()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          1, this_._internal_hit_ratio(), target);
    }
  }

  // int64 hits = 2 [json_name = "hits"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_hits() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
              stream, this_._internal_hits(), target);
    }
  }

  // int64 misses = 3 [json_name = "misses"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_misses() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<3>(
              stream, this_._internal_misses(), target);
    }
  }

  // int64 size_bytes = 4 [json_name = "sizeBytes"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_size_bytes() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<4>(
              stream, this_._internal_size_bytes(), target);
    }
  }

  // int32 entry_count = 5 [json_name = "entryCount"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_entry_count() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
              stream, this_._internal_entry_count(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.CacheStats)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CacheStats::ByteSizeLong(const MessageLite& base) {
  const CacheStats& this_ = static_cast<const CacheStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CacheStats::ByteSizeLong() const {
  const CacheStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.CacheStats)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // double hit_ratio = 1 [json_name = "hitRatio"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_hit_ratio()) != 0) {
        total_size += 9;
      }
    }
    // int64 hits = 2 [json_name = "hits"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_hits() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_hits());
      }
    }
    // int64 misses = 3 [json_name = "misses"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_misses() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_misses());
      }
    }
    // int64 size_bytes = 4 [json_name = "sizeBytes"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_size_bytes() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_size_bytes());
      }
    }
    // int32 entry_count = 5 [json_name = "entryCount"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_entry_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_entry_count());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CacheStats::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CacheStats*>(&to_msg);
  auto& from = static_cast<const CacheStats&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.CacheStats)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_hit_ratio()) != 0) {
        _this->_impl_.hit_ratio_ = from._impl_.hit_ratio_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_hits() != 0) {
        _this->_impl_.hits_ = from._impl_.hits_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_misses() != 0) {
        _this->_impl_.misses_ = from._impl_.misses_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_size_bytes() != 0) {
        _this->_impl_.size_bytes_ = from._impl_.size_bytes_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_entry_count() != 0) {
        _this->_impl_.entry_count_ = from._impl_.entry_count_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CacheStats::CopyFrom(const CacheStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.CacheStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CacheStats::InternalSwap(CacheStats* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CacheStats, _impl_.entry_count_)
      + sizeof(CacheStats::_impl_.entry_count_)
      - PROTOBUF_FIELD_OFFSET(CacheStats, _impl_.hit_ratio_)>(
          reinterpret_cast<char*>(&_impl_.hit_ratio_),
          reinterpret_cast<char*>(&other->_impl_.hit_ratio_));
}

::google::protobuf::Metadata CacheStats::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InvalidateSpatialCacheRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<InvalidateSpatialCacheRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(InvalidateSpatialCacheRequest, _impl_._has_bits_);
};

InvalidateSpatialCacheRequest::InvalidateSpatialCacheRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, InvalidateSpatialCacheRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.InvalidateSpatialCacheRequest)
}
PROTOBUF_NDEBUG_INLINE InvalidateSpatialCacheRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::InvalidateSpatialCacheRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        cache_types_{visibility, arena, from.cache_types_},
        _cache_types_cached_byte_size_{0},
        room_id_(arena, from.room_id_) {}

InvalidateSpatialCacheRequest::InvalidateSpatialCacheRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const InvalidateSpatialCacheRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, InvalidateSpatialCacheRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InvalidateSpatialCacheRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.invalidate_all_ = from._impl_.invalidate_all_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.InvalidateSpatialCacheRequest)
}
PROTOBUF_NDEBUG_INLINE InvalidateSpatialCacheRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        cache_types_{visibility, arena},
        _cache_types_cached_byte_size_{0},
        room_id_(arena) {}

inline void InvalidateSpatialCacheRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.invalidate_all_ = {};
}
InvalidateSpatialCacheRequest::~InvalidateSpatialCacheRequest() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.InvalidateSpatialCacheRequest)
  SharedDtor(*this);
}
inline void InvalidateSpatialCacheRequest::SharedDtor(MessageLite& self) {
  InvalidateSpatialCacheRequest& this_ = static_cast<InvalidateSpatialCacheRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.room_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL InvalidateSpatialCacheRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) InvalidateSpatialCacheRequest(arena);
}
constexpr auto InvalidateSpatialCacheRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(InvalidateSpatialCacheRequest, _impl_.cache_types_) +
          decltype(InvalidateSpatialCacheRequest::_impl_.cache_types_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(InvalidateSpatialCacheRequest), alignof(InvalidateSpatialCacheRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&InvalidateSpatialCacheRequest::PlacementNew_,
                                 sizeof(InvalidateSpatialCacheRequest),
                                 alignof(InvalidateSpatialCacheRequest));
  }
}
constexpr auto InvalidateSpatialCacheRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_InvalidateSpatialCacheRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &InvalidateSpatialCacheRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<InvalidateSpatialCacheRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &InvalidateSpatialCacheRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<InvalidateSpatialCacheRequest>(), &InvalidateSpatialCacheRequest::ByteSizeLong,
              &InvalidateSpatialCacheRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(InvalidateSpatialCacheRequest, _impl_._cached_size_),
          false,
      },
      &InvalidateSpatialCacheRequest::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull InvalidateSpatialCacheRequest_class_data_ =
        InvalidateSpatialCacheRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
InvalidateSpatialCacheRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&InvalidateSpatialCacheRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(InvalidateSpatialCacheRequest_class_data_.tc_table);
  return InvalidateSpatialCacheRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 58, 2>
InvalidateSpatialCacheRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InvalidateSpatialCacheRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    InvalidateSpatialCacheRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::InvalidateSpatialCacheRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string room_id = 1 [json_name = "roomId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(InvalidateSpatialCacheRequest, _impl_.room_id_)}},
    // repeated .api.v1alpha1.CacheType cache_types = 2 [json_name = "cacheTypes"];
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(InvalidateSpatialCacheRequest, _impl_.cache_types_)}},
    // bool invalidate_all = 3 [json_name = "invalidateAll"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(InvalidateSpatialCacheRequest, _impl_.invalidate_all_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(InvalidateSpatialCacheRequest, _impl_.invalidate_all_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string room_id = 1 [json_name = "roomId"];
    {PROTOBUF_FIELD_OFFSET(InvalidateSpatialCacheRequest, _impl_.room_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .api.v1alpha1.CacheType cache_types = 2 [json_name = "cacheTypes"];
    {PROTOBUF_FIELD_OFFSET(InvalidateSpatialCacheRequest, _impl_.cache_types_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // bool invalidate_all = 3 [json_name = "invalidateAll"];
    {PROTOBUF_FIELD_OFFSET(InvalidateSpatialCacheRequest, _impl_.invalidate_all_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\52\7\0\0\0\0\0\0"
    "api.v1alpha1.InvalidateSpatialCacheRequest"
    "room_id"
  }},
};
PROTOBUF_NOINLINE void InvalidateSpatialCacheRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.InvalidateSpatialCacheRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cache_types_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.room_id_.ClearNonDefaultToEmpty();
  }
  _impl_.invalidate_all_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL InvalidateSpatialCacheRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const InvalidateSpatialCacheRequest& this_ = static_cast<const InvalidateSpatialCacheRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL InvalidateSpatialCacheRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const InvalidateSpatialCacheRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.InvalidateSpatialCacheRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string room_id = 1 [json_name = "roomId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_room_id().empty()) {
      const ::std::string& _s = this_._internal_room_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.InvalidateSpatialCacheRequest.room_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // repeated .api.v1alpha1.CacheType cache_types = 2 [json_name = "cacheTypes"];
  {
    ::size_t byte_size = this_._impl_._cache_types_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          2, this_._internal_cache_types(), byte_size, target);
    }
  }

  // bool invalidate_all = 3 [json_name = "invalidateAll"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_invalidate_all() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_invalidate_all(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.InvalidateSpatialCacheRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t InvalidateSpatialCacheRequest::ByteSizeLong(const MessageLite& base) {
  const InvalidateSpatialCacheRequest& this_ = static_cast<const InvalidateSpatialCacheRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t InvalidateSpatialCacheRequest::ByteSizeLong() const {
  const InvalidateSpatialCacheRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.InvalidateSpatialCacheRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.CacheType cache_types = 2 [json_name = "cacheTypes"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_cache_types(), 1, this_._impl_._cache_types_cached_byte_size_);
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string room_id = 1 [json_name = "roomId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_room_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_room_id());
      }
    }
    // bool invalidate_all = 3 [json_name = "invalidateAll"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_invalidate_all() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void InvalidateSpatialCacheRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InvalidateSpatialCacheRequest*>(&to_msg);
  auto& from = static_cast<const InvalidateSpatialCacheRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.InvalidateSpatialCacheRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_cache_types()->MergeFrom(from._internal_cache_types());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_room_id().empty()) {
        _this->_internal_set_room_id(from._internal_room_id());
      } else {
        if (_this->_impl_.room_id_.IsDefault()) {
          _this->_internal_set_room_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_invalidate_all() != 0) {
        _this->_impl_.invalidate_all_ = from._impl_.invalidate_all_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InvalidateSpatialCacheRequest::CopyFrom(const InvalidateSpatialCacheRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.InvalidateSpatialCacheRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InvalidateSpatialCacheRequest::InternalSwap(InvalidateSpatialCacheRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.cache_types_.InternalSwap(&other->_impl_.cache_types_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.room_id_, &other->_impl_.room_id_, arena);
  swap(_impl_.invalidate_all_, other->_impl_.invalidate_all_);
}

::google::protobuf::Metadata InvalidateSpatialCacheRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InvalidateSpatialCacheResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<InvalidateSpatialCacheResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(InvalidateSpatialCacheResponse, _impl_._has_bits_);
};

InvalidateSpatialCacheResponse::InvalidateSpatialCacheResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, InvalidateSpatialCacheResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.InvalidateSpatialCacheResponse)
}
PROTOBUF_NDEBUG_INLINE InvalidateSpatialCacheResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::InvalidateSpatialCacheResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        message_(arena, from.message_) {}

InvalidateSpatialCacheResponse::InvalidateSpatialCacheResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const InvalidateSpatialCacheResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, InvalidateSpatialCacheResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InvalidateSpatialCacheResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, memory_freed_bytes_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, memory_freed_bytes_),
           offsetof(Impl_, entries_invalidated_) -
               offsetof(Impl_, memory_freed_bytes_) +
               sizeof(Impl_::entries_invalidated_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.InvalidateSpatialCacheResponse)
}
PROTOBUF_NDEBUG_INLINE InvalidateSpatialCacheResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        message_(arena) {}

inline void InvalidateSpatialCacheResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, memory_freed_bytes_),
           0,
           offsetof(Impl_, entries_invalidated_) -
               offsetof(Impl_, memory_freed_bytes_) +
               sizeof(Impl_::entries_invalidated_));
}
InvalidateSpatialCacheResponse::~InvalidateSpatialCacheResponse() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.InvalidateSpatialCacheResponse)
  SharedDtor(*this);
}
inline void InvalidateSpatialCacheResponse::SharedDtor(MessageLite& self) {
  InvalidateSpatialCacheResponse& this_ = static_cast<InvalidateSpatialCacheResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL InvalidateSpatialCacheResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) InvalidateSpatialCacheResponse(arena);
}
constexpr auto InvalidateSpatialCacheResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(InvalidateSpatialCacheResponse),
                                            alignof(InvalidateSpatialCacheResponse));
}
constexpr auto InvalidateSpatialCacheResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_InvalidateSpatialCacheResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &InvalidateSpatialCacheResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<InvalidateSpatialCacheResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &InvalidateSpatialCacheResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<InvalidateSpatialCacheResponse>(), &InvalidateSpatialCacheResponse::ByteSizeLong,
              &InvalidateSpatialCacheResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(InvalidateSpatialCacheResponse, _impl_._cached_size_),
          false,
      },
      &InvalidateSpatialCacheResponse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull InvalidateSpatialCacheResponse_class_data_ =
        InvalidateSpatialCacheResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
InvalidateSpatialCacheResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&InvalidateSpatialCacheResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(InvalidateSpatialCacheResponse_class_data_.tc_table);
  return InvalidateSpatialCacheResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 59, 2>
InvalidateSpatialCacheResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InvalidateSpatialCacheResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    InvalidateSpatialCacheResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::InvalidateSpatialCacheResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string message = 1 [json_name = "message"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(InvalidateSpatialCacheResponse, _impl_.message_)}},
    // int32 entries_invalidated = 2 [json_name = "entriesInvalidated"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InvalidateSpatialCacheResponse, _impl_.entries_invalidated_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(InvalidateSpatialCacheResponse, _impl_.entries_invalidated_)}},
    // int64 memory_freed_bytes = 3 [json_name = "memoryFreedBytes"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(InvalidateSpatialCacheResponse, _impl_.memory_freed_bytes_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(InvalidateSpatialCacheResponse, _impl_.memory_freed_bytes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string message = 1 [json_name = "message"];
    {PROTOBUF_FIELD_OFFSET(InvalidateSpatialCacheResponse, _impl_.message_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 entries_invalidated = 2 [json_name = "entriesInvalidated"];
    {PROTOBUF_FIELD_OFFSET(InvalidateSpatialCacheResponse, _impl_.entries_invalidated_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int64 memory_freed_bytes = 3 [json_name = "memoryFreedBytes"];
    {PROTOBUF_FIELD_OFFSET(InvalidateSpatialCacheResponse, _impl_.memory_freed_bytes_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\53\7\0\0\0\0\0\0"
    "api.v1alpha1.InvalidateSpatialCacheResponse"
    "message"
  }},
};
PROTOBUF_NOINLINE void InvalidateSpatialCacheResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.InvalidateSpatialCacheResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.message_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x00000006U) != 0) {
    ::memset(&_impl_.memory_freed_bytes_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.entries_invalidated_) -
        reinterpret_cast<char*>(&_impl_.memory_freed_bytes_)) + sizeof(_impl_.entries_invalidated_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL InvalidateSpatialCacheResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const InvalidateSpatialCacheResponse& this_ = static_cast<const InvalidateSpatialCacheResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL InvalidateSpatialCacheResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const InvalidateSpatialCacheResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.InvalidateSpatialCacheResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string message = 1 [json_name = "message"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_message().empty()) {
      const ::std::string& _s = this_._internal_message();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.InvalidateSpatialCacheResponse.message");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // int32 entries_invalidated = 2 [json_name = "entriesInvalidated"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_entries_invalidated() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_entries_invalidated(), target);
    }
  }

  // int64 memory_freed_bytes = 3 [json_name = "memoryFreedBytes"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_memory_freed_bytes() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<3>(
              stream, this_._internal_memory_freed_bytes(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.InvalidateSpatialCacheResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t InvalidateSpatialCacheResponse::ByteSizeLong(const MessageLite& base) {
  const InvalidateSpatialCacheResponse& this_ = static_cast<const InvalidateSpatialCacheResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t InvalidateSpatialCacheResponse::ByteSizeLong() const {
  const InvalidateSpatialCacheResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.InvalidateSpatialCacheResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string message = 1 [json_name = "message"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_message().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_message());
      }
    }
    // int64 memory_freed_bytes = 3 [json_name = "memoryFreedBytes"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_memory_freed_bytes() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_memory_freed_bytes());
      }
    }
    // int32 entries_invalidated = 2 [json_name = "entriesInvalidated"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_entries_invalidated() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_entries_invalidated());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void InvalidateSpatialCacheResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InvalidateSpatialCacheResponse*>(&to_msg);
  auto& from = static_cast<const InvalidateSpatialCacheResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.InvalidateSpatialCacheResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_message().empty()) {
        _this->_internal_set_message(from._internal_message());
      } else {
        if (_this->_impl_.message_.IsDefault()) {
          _this->_internal_set_message("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_memory_freed_bytes() != 0) {
        _this->_impl_.memory_freed_bytes_ = from._impl_.memory_freed_bytes_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_entries_invalidated() != 0) {
        _this->_impl_.entries_invalidated_ = from._impl_.entries_invalidated_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InvalidateSpatialCacheResponse::CopyFrom(const InvalidateSpatialCacheResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.InvalidateSpatialCacheResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InvalidateSpatialCacheResponse::InternalSwap(InvalidateSpatialCacheResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InvalidateSpatialCacheResponse, _impl_.entries_invalidated_)
      + sizeof(InvalidateSpatialCacheResponse::_impl_.entries_invalidated_)
      - PROTOBUF_FIELD_OFFSET(InvalidateSpatialCacheResponse, _impl_.memory_freed_bytes_)>(
          reinterpret_cast<char*>(&_impl_.memory_freed_bytes_),
          reinterpret_cast<char*>(&other->_impl_.memory_freed_bytes_));
}

::google::protobuf::Metadata InvalidateSpatialCacheResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SpatialQueryStats::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SpatialQueryStats>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SpatialQueryStats, _impl_._has_bits_);
};

SpatialQueryStats::SpatialQueryStats(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SpatialQueryStats_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.SpatialQueryStats)
}
SpatialQueryStats::SpatialQueryStats(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SpatialQueryStats& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SpatialQueryStats_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE SpatialQueryStats::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SpatialQueryStats::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, execution_time_ms_),
           0,
           offsetof(Impl_, memory_bytes_) -
               offsetof(Impl_, execution_time_ms_) +
               sizeof(Impl_::memory_bytes_));
}
SpatialQueryStats::~SpatialQueryStats() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.SpatialQueryStats)
  SharedDtor(*this);
}
inline void SpatialQueryStats::SharedDtor(MessageLite& self) {
  SpatialQueryStats& this_ = static_cast<SpatialQueryStats&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SpatialQueryStats::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SpatialQueryStats(arena);
}
constexpr auto SpatialQueryStats::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SpatialQueryStats),
                                            alignof(SpatialQueryStats));
}
constexpr auto SpatialQueryStats::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SpatialQueryStats_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SpatialQueryStats::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SpatialQueryStats>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SpatialQueryStats::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SpatialQueryStats>(), &SpatialQueryStats::ByteSizeLong,
              &SpatialQueryStats::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SpatialQueryStats, _impl_._cached_size_),
          false,
      },
      &SpatialQueryStats::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SpatialQueryStats_class_data_ =
        SpatialQueryStats::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SpatialQueryStats::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SpatialQueryStats_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SpatialQueryStats_class_data_.tc_table);
  return SpatialQueryStats_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2>
SpatialQueryStats::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SpatialQueryStats, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SpatialQueryStats_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::SpatialQueryStats>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double execution_time_ms = 1 [json_name = "executionTimeMs"];
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(SpatialQueryStats, _impl_.execution_time_ms_)}},
    // int32 entities_processed = 2 [json_name = "entitiesProcessed"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpatialQueryStats, _impl_.entities_processed_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(SpatialQueryStats, _impl_.entities_processed_)}},
    // double cache_hit_ratio = 3 [json_name = "cacheHitRatio"];
    {::_pbi::TcParser::FastF64S1,
     {25, 1, 0, PROTOBUF_FIELD_OFFSET(SpatialQueryStats, _impl_.cache_hit_ratio_)}},
    // int64 memory_bytes = 4 [json_name = "memoryBytes"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SpatialQueryStats, _impl_.memory_bytes_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(SpatialQueryStats, _impl_.memory_bytes_)}},
    // int32 calculations_performed = 5 [json_name = "calculationsPerformed"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpatialQueryStats, _impl_.calculations_performed_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(SpatialQueryStats, _impl_.calculations_performed_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // double execution_time_ms = 1 [json_name = "executionTimeMs"];
    {PROTOBUF_FIELD_OFFSET(SpatialQueryStats, _impl_.execution_time_ms_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // int32 entities_processed = 2 [json_name = "entitiesProcessed"];
    {PROTOBUF_FIELD_OFFSET(SpatialQueryStats, _impl_.entities_processed_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // double cache_hit_ratio = 3 [json_name = "cacheHitRatio"];
    {PROTOBUF_FIELD_OFFSET(SpatialQueryStats, _impl_.cache_hit_ratio_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // int64 memory_bytes = 4 [json_name = "memoryBytes"];
    {PROTOBUF_FIELD_OFFSET(SpatialQueryStats, _impl_.memory_bytes_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int32 calculations_performed = 5 [json_name = "calculationsPerformed"];
    {PROTOBUF_FIELD_OFFSET(SpatialQueryStats, _impl_.calculations_performed_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void SpatialQueryStats::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.SpatialQueryStats)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    ::memset(&_impl_.execution_time_ms_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.memory_bytes_) -
        reinterpret_cast<char*>(&_impl_.execution_time_ms_)) + sizeof(_impl_.memory_bytes_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SpatialQueryStats::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SpatialQueryStats& this_ = static_cast<const SpatialQueryStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SpatialQueryStats::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SpatialQueryStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.SpatialQueryStats)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double execution_time_ms = 1 [json_name = "executionTimeMs"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_execution_time_ms()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          1, this_._internal_execution_time_ms(), target);
    }
  }

  // int32 entities_processed = 2 [json_name = "entitiesProcessed"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_entities_processed() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_entities_processed(), target);
    }
  }

  // double cache_hit_ratio = 3 [json_name = "cacheHitRatio"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_cache_hit_ratio()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_cache_hit_ratio(), target);
    }
  }

  // int64 memory_bytes = 4 [json_name = "memoryBytes"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_memory_bytes() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<4>(
              stream, this_._internal_memory_bytes(), target);
    }
  }

  // int32 calculations_performed = 5 [json_name = "calculationsPerformed"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_calculations_performed() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
              stream, this_._internal_calculations_performed(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.SpatialQueryStats)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SpatialQueryStats::ByteSizeLong(const MessageLite& base) {
  const SpatialQueryStats& this_ = static_cast<const SpatialQueryStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SpatialQueryStats::ByteSizeLong() const {
  const SpatialQueryStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.SpatialQueryStats)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // double execution_time_ms = 1 [json_name = "executionTimeMs"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_execution_time_ms()) != 0) {
        total_size += 9;
      }
    }
    // double cache_hit_ratio = 3 [json_name = "cacheHitRatio"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_cache_hit_ratio()) != 0) {
        total_size += 9;
      }
    }
    // int32 entities_processed = 2 [json_name = "entitiesProcessed"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_entities_processed() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_entities_processed());
      }
    }
    // int32 calculations_performed = 5 [json_name = "calculationsPerformed"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_calculations_performed() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_calculations_performed());
      }
    }
    // int64 memory_bytes = 4 [json_name = "memoryBytes"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_memory_bytes() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_memory_bytes());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SpatialQueryStats::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SpatialQueryStats*>(&to_msg);
  auto& from = static_cast<const SpatialQueryStats&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.SpatialQueryStats)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_execution_time_ms()) != 0) {
        _this->_impl_.execution_time_ms_ = from._impl_.execution_time_ms_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_cache_hit_ratio()) != 0) {
        _this->_impl_.cache_hit_ratio_ = from._impl_.cache_hit_ratio_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_entities_processed() != 0) {
        _this->_impl_.entities_processed_ = from._impl_.entities_processed_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_calculations_performed() != 0) {
        _this->_impl_.calculations_performed_ = from._impl_.calculations_performed_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_memory_bytes() != 0) {
        _this->_impl_.memory_bytes_ = from._impl_.memory_bytes_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SpatialQueryStats::CopyFrom(const SpatialQueryStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.SpatialQueryStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SpatialQueryStats::InternalSwap(SpatialQueryStats* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpatialQueryStats, _impl_.memory_bytes_)
      + sizeof(SpatialQueryStats::_impl_.memory_bytes_)
      - PROTOBUF_FIELD_OFFSET(SpatialQueryStats, _impl_.execution_time_ms_)>(
          reinterpret_cast<char*>(&_impl_.execution_time_ms_),
          reinterpret_cast<char*>(&other->_impl_.execution_time_ms_));
}

::google::protobuf::Metadata SpatialQueryStats::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace api
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_api_2fv1alpha1_2froom_5fspatial_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
