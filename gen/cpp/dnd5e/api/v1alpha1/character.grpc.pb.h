// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: dnd5e/api/v1alpha1/character.proto
#ifndef GRPC_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto__INCLUDED
#define GRPC_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto__INCLUDED

#include "dnd5e/api/v1alpha1/character.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>
#include <grpcpp/ports_def.inc>

namespace dnd5e {
namespace api {
namespace v1alpha1 {

// Service for D&D 5e character creation and management
// Supports both wizard-style step-by-step creation and free-form editing
class CharacterService final {
 public:
  static constexpr char const* service_full_name() {
    return "dnd5e.api.v1alpha1.CharacterService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Draft lifecycle
    virtual ::grpc::Status CreateDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::CreateDraftRequest& request, ::dnd5e::api::v1alpha1::CreateDraftResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::CreateDraftResponse>> AsyncCreateDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::CreateDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::CreateDraftResponse>>(AsyncCreateDraftRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::CreateDraftResponse>> PrepareAsyncCreateDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::CreateDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::CreateDraftResponse>>(PrepareAsyncCreateDraftRaw(context, request, cq));
    }
    virtual ::grpc::Status GetDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetDraftRequest& request, ::dnd5e::api::v1alpha1::GetDraftResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetDraftResponse>> AsyncGetDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetDraftResponse>>(AsyncGetDraftRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetDraftResponse>> PrepareAsyncGetDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetDraftResponse>>(PrepareAsyncGetDraftRaw(context, request, cq));
    }
    virtual ::grpc::Status ListDrafts(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListDraftsRequest& request, ::dnd5e::api::v1alpha1::ListDraftsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListDraftsResponse>> AsyncListDrafts(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListDraftsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListDraftsResponse>>(AsyncListDraftsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListDraftsResponse>> PrepareAsyncListDrafts(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListDraftsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListDraftsResponse>>(PrepareAsyncListDraftsRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::DeleteDraftRequest& request, ::dnd5e::api::v1alpha1::DeleteDraftResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::DeleteDraftResponse>> AsyncDeleteDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::DeleteDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::DeleteDraftResponse>>(AsyncDeleteDraftRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::DeleteDraftResponse>> PrepareAsyncDeleteDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::DeleteDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::DeleteDraftResponse>>(PrepareAsyncDeleteDraftRaw(context, request, cq));
    }
    // Section-based updates (supports skip-around editing)
    virtual ::grpc::Status UpdateName(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateNameRequest& request, ::dnd5e::api::v1alpha1::UpdateNameResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateNameResponse>> AsyncUpdateName(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateNameResponse>>(AsyncUpdateNameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateNameResponse>> PrepareAsyncUpdateName(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateNameResponse>>(PrepareAsyncUpdateNameRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateRace(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateRaceRequest& request, ::dnd5e::api::v1alpha1::UpdateRaceResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateRaceResponse>> AsyncUpdateRace(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateRaceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateRaceResponse>>(AsyncUpdateRaceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateRaceResponse>> PrepareAsyncUpdateRace(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateRaceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateRaceResponse>>(PrepareAsyncUpdateRaceRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateClass(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateClassRequest& request, ::dnd5e::api::v1alpha1::UpdateClassResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateClassResponse>> AsyncUpdateClass(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateClassRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateClassResponse>>(AsyncUpdateClassRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateClassResponse>> PrepareAsyncUpdateClass(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateClassRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateClassResponse>>(PrepareAsyncUpdateClassRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateBackground(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateBackgroundRequest& request, ::dnd5e::api::v1alpha1::UpdateBackgroundResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateBackgroundResponse>> AsyncUpdateBackground(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateBackgroundRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateBackgroundResponse>>(AsyncUpdateBackgroundRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateBackgroundResponse>> PrepareAsyncUpdateBackground(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateBackgroundRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateBackgroundResponse>>(PrepareAsyncUpdateBackgroundRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateAbilityScores(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest& request, ::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse>> AsyncUpdateAbilityScores(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse>>(AsyncUpdateAbilityScoresRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse>> PrepareAsyncUpdateAbilityScores(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse>>(PrepareAsyncUpdateAbilityScoresRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateSkills(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateSkillsRequest& request, ::dnd5e::api::v1alpha1::UpdateSkillsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateSkillsResponse>> AsyncUpdateSkills(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateSkillsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateSkillsResponse>>(AsyncUpdateSkillsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateSkillsResponse>> PrepareAsyncUpdateSkills(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateSkillsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateSkillsResponse>>(PrepareAsyncUpdateSkillsRaw(context, request, cq));
    }
    // Validation
    virtual ::grpc::Status ValidateDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ValidateDraftRequest& request, ::dnd5e::api::v1alpha1::ValidateDraftResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ValidateDraftResponse>> AsyncValidateDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ValidateDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ValidateDraftResponse>>(AsyncValidateDraftRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ValidateDraftResponse>> PrepareAsyncValidateDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ValidateDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ValidateDraftResponse>>(PrepareAsyncValidateDraftRaw(context, request, cq));
    }
    // Get a preview of what the character would look like if finalized
    virtual ::grpc::Status GetDraftPreview(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetDraftPreviewRequest& request, ::dnd5e::api::v1alpha1::GetDraftPreviewResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetDraftPreviewResponse>> AsyncGetDraftPreview(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetDraftPreviewRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetDraftPreviewResponse>>(AsyncGetDraftPreviewRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetDraftPreviewResponse>> PrepareAsyncGetDraftPreview(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetDraftPreviewRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetDraftPreviewResponse>>(PrepareAsyncGetDraftPreviewRaw(context, request, cq));
    }
    // Character finalization
    virtual ::grpc::Status FinalizeDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::FinalizeDraftRequest& request, ::dnd5e::api::v1alpha1::FinalizeDraftResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::FinalizeDraftResponse>> AsyncFinalizeDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::FinalizeDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::FinalizeDraftResponse>>(AsyncFinalizeDraftRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::FinalizeDraftResponse>> PrepareAsyncFinalizeDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::FinalizeDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::FinalizeDraftResponse>>(PrepareAsyncFinalizeDraftRaw(context, request, cq));
    }
    // Completed character operations
    virtual ::grpc::Status GetCharacter(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetCharacterRequest& request, ::dnd5e::api::v1alpha1::GetCharacterResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetCharacterResponse>> AsyncGetCharacter(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetCharacterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetCharacterResponse>>(AsyncGetCharacterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetCharacterResponse>> PrepareAsyncGetCharacter(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetCharacterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetCharacterResponse>>(PrepareAsyncGetCharacterRaw(context, request, cq));
    }
    virtual ::grpc::Status ListCharacters(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListCharactersRequest& request, ::dnd5e::api::v1alpha1::ListCharactersResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListCharactersResponse>> AsyncListCharacters(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListCharactersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListCharactersResponse>>(AsyncListCharactersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListCharactersResponse>> PrepareAsyncListCharacters(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListCharactersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListCharactersResponse>>(PrepareAsyncListCharactersRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteCharacter(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::DeleteCharacterRequest& request, ::dnd5e::api::v1alpha1::DeleteCharacterResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::DeleteCharacterResponse>> AsyncDeleteCharacter(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::DeleteCharacterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::DeleteCharacterResponse>>(AsyncDeleteCharacterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::DeleteCharacterResponse>> PrepareAsyncDeleteCharacter(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::DeleteCharacterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::DeleteCharacterResponse>>(PrepareAsyncDeleteCharacterRaw(context, request, cq));
    }
    // Data loading for character creation UI
    virtual ::grpc::Status ListRaces(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListRacesRequest& request, ::dnd5e::api::v1alpha1::ListRacesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListRacesResponse>> AsyncListRaces(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListRacesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListRacesResponse>>(AsyncListRacesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListRacesResponse>> PrepareAsyncListRaces(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListRacesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListRacesResponse>>(PrepareAsyncListRacesRaw(context, request, cq));
    }
    virtual ::grpc::Status ListClasses(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListClassesRequest& request, ::dnd5e::api::v1alpha1::ListClassesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListClassesResponse>> AsyncListClasses(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListClassesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListClassesResponse>>(AsyncListClassesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListClassesResponse>> PrepareAsyncListClasses(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListClassesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListClassesResponse>>(PrepareAsyncListClassesRaw(context, request, cq));
    }
    virtual ::grpc::Status ListBackgrounds(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListBackgroundsRequest& request, ::dnd5e::api::v1alpha1::ListBackgroundsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListBackgroundsResponse>> AsyncListBackgrounds(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListBackgroundsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListBackgroundsResponse>>(AsyncListBackgroundsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListBackgroundsResponse>> PrepareAsyncListBackgrounds(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListBackgroundsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListBackgroundsResponse>>(PrepareAsyncListBackgroundsRaw(context, request, cq));
    }
    virtual ::grpc::Status GetRaceDetails(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetRaceDetailsRequest& request, ::dnd5e::api::v1alpha1::GetRaceDetailsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetRaceDetailsResponse>> AsyncGetRaceDetails(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetRaceDetailsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetRaceDetailsResponse>>(AsyncGetRaceDetailsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetRaceDetailsResponse>> PrepareAsyncGetRaceDetails(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetRaceDetailsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetRaceDetailsResponse>>(PrepareAsyncGetRaceDetailsRaw(context, request, cq));
    }
    virtual ::grpc::Status GetClassDetails(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetClassDetailsRequest& request, ::dnd5e::api::v1alpha1::GetClassDetailsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetClassDetailsResponse>> AsyncGetClassDetails(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetClassDetailsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetClassDetailsResponse>>(AsyncGetClassDetailsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetClassDetailsResponse>> PrepareAsyncGetClassDetails(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetClassDetailsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetClassDetailsResponse>>(PrepareAsyncGetClassDetailsRaw(context, request, cq));
    }
    virtual ::grpc::Status GetBackgroundDetails(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest& request, ::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse>> AsyncGetBackgroundDetails(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse>>(AsyncGetBackgroundDetailsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse>> PrepareAsyncGetBackgroundDetails(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse>>(PrepareAsyncGetBackgroundDetailsRaw(context, request, cq));
    }
    virtual ::grpc::Status GetFeature(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetFeatureRequest& request, ::dnd5e::api::v1alpha1::GetFeatureResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetFeatureResponse>> AsyncGetFeature(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetFeatureRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetFeatureResponse>>(AsyncGetFeatureRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetFeatureResponse>> PrepareAsyncGetFeature(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetFeatureRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetFeatureResponse>>(PrepareAsyncGetFeatureRaw(context, request, cq));
    }
    // Dice rolling for character creation
    virtual ::grpc::Status RollAbilityScores(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::RollAbilityScoresRequest& request, ::dnd5e::api::v1alpha1::RollAbilityScoresResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::RollAbilityScoresResponse>> AsyncRollAbilityScores(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::RollAbilityScoresRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::RollAbilityScoresResponse>>(AsyncRollAbilityScoresRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::RollAbilityScoresResponse>> PrepareAsyncRollAbilityScores(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::RollAbilityScoresRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::RollAbilityScoresResponse>>(PrepareAsyncRollAbilityScoresRaw(context, request, cq));
    }
    // Equipment listing by type
    virtual ::grpc::Status ListEquipmentByType(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest& request, ::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse>> AsyncListEquipmentByType(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse>>(AsyncListEquipmentByTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse>> PrepareAsyncListEquipmentByType(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse>>(PrepareAsyncListEquipmentByTypeRaw(context, request, cq));
    }
    // Spell listing by level
    virtual ::grpc::Status ListSpellsByLevel(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListSpellsByLevelRequest& request, ::dnd5e::api::v1alpha1::ListSpellsByLevelResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListSpellsByLevelResponse>> AsyncListSpellsByLevel(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListSpellsByLevelRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListSpellsByLevelResponse>>(AsyncListSpellsByLevelRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListSpellsByLevelResponse>> PrepareAsyncListSpellsByLevel(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListSpellsByLevelRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListSpellsByLevelResponse>>(PrepareAsyncListSpellsByLevelRaw(context, request, cq));
    }
    // Equipment management
    virtual ::grpc::Status GetCharacterInventory(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetCharacterInventoryRequest& request, ::dnd5e::api::v1alpha1::GetCharacterInventoryResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetCharacterInventoryResponse>> AsyncGetCharacterInventory(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetCharacterInventoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetCharacterInventoryResponse>>(AsyncGetCharacterInventoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetCharacterInventoryResponse>> PrepareAsyncGetCharacterInventory(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetCharacterInventoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetCharacterInventoryResponse>>(PrepareAsyncGetCharacterInventoryRaw(context, request, cq));
    }
    virtual ::grpc::Status EquipItem(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::EquipItemRequest& request, ::dnd5e::api::v1alpha1::EquipItemResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::EquipItemResponse>> AsyncEquipItem(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::EquipItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::EquipItemResponse>>(AsyncEquipItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::EquipItemResponse>> PrepareAsyncEquipItem(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::EquipItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::EquipItemResponse>>(PrepareAsyncEquipItemRaw(context, request, cq));
    }
    virtual ::grpc::Status UnequipItem(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UnequipItemRequest& request, ::dnd5e::api::v1alpha1::UnequipItemResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UnequipItemResponse>> AsyncUnequipItem(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UnequipItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UnequipItemResponse>>(AsyncUnequipItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UnequipItemResponse>> PrepareAsyncUnequipItem(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UnequipItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UnequipItemResponse>>(PrepareAsyncUnequipItemRaw(context, request, cq));
    }
    virtual ::grpc::Status AddToInventory(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::AddToInventoryRequest& request, ::dnd5e::api::v1alpha1::AddToInventoryResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::AddToInventoryResponse>> AsyncAddToInventory(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::AddToInventoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::AddToInventoryResponse>>(AsyncAddToInventoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::AddToInventoryResponse>> PrepareAsyncAddToInventory(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::AddToInventoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::AddToInventoryResponse>>(PrepareAsyncAddToInventoryRaw(context, request, cq));
    }
    virtual ::grpc::Status RemoveFromInventory(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::RemoveFromInventoryRequest& request, ::dnd5e::api::v1alpha1::RemoveFromInventoryResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::RemoveFromInventoryResponse>> AsyncRemoveFromInventory(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::RemoveFromInventoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::RemoveFromInventoryResponse>>(AsyncRemoveFromInventoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::RemoveFromInventoryResponse>> PrepareAsyncRemoveFromInventory(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::RemoveFromInventoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::RemoveFromInventoryResponse>>(PrepareAsyncRemoveFromInventoryRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Draft lifecycle
      virtual void CreateDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::CreateDraftRequest* request, ::dnd5e::api::v1alpha1::CreateDraftResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::CreateDraftRequest* request, ::dnd5e::api::v1alpha1::CreateDraftResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetDraftRequest* request, ::dnd5e::api::v1alpha1::GetDraftResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetDraftRequest* request, ::dnd5e::api::v1alpha1::GetDraftResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListDrafts(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListDraftsRequest* request, ::dnd5e::api::v1alpha1::ListDraftsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListDrafts(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListDraftsRequest* request, ::dnd5e::api::v1alpha1::ListDraftsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::DeleteDraftRequest* request, ::dnd5e::api::v1alpha1::DeleteDraftResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::DeleteDraftRequest* request, ::dnd5e::api::v1alpha1::DeleteDraftResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Section-based updates (supports skip-around editing)
      virtual void UpdateName(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateNameRequest* request, ::dnd5e::api::v1alpha1::UpdateNameResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateName(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateNameRequest* request, ::dnd5e::api::v1alpha1::UpdateNameResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateRace(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateRaceRequest* request, ::dnd5e::api::v1alpha1::UpdateRaceResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateRace(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateRaceRequest* request, ::dnd5e::api::v1alpha1::UpdateRaceResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateClass(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateClassRequest* request, ::dnd5e::api::v1alpha1::UpdateClassResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateClass(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateClassRequest* request, ::dnd5e::api::v1alpha1::UpdateClassResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateBackground(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateBackgroundRequest* request, ::dnd5e::api::v1alpha1::UpdateBackgroundResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateBackground(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateBackgroundRequest* request, ::dnd5e::api::v1alpha1::UpdateBackgroundResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateAbilityScores(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest* request, ::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateAbilityScores(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest* request, ::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateSkills(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateSkillsRequest* request, ::dnd5e::api::v1alpha1::UpdateSkillsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateSkills(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateSkillsRequest* request, ::dnd5e::api::v1alpha1::UpdateSkillsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Validation
      virtual void ValidateDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ValidateDraftRequest* request, ::dnd5e::api::v1alpha1::ValidateDraftResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ValidateDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ValidateDraftRequest* request, ::dnd5e::api::v1alpha1::ValidateDraftResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Get a preview of what the character would look like if finalized
      virtual void GetDraftPreview(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetDraftPreviewRequest* request, ::dnd5e::api::v1alpha1::GetDraftPreviewResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetDraftPreview(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetDraftPreviewRequest* request, ::dnd5e::api::v1alpha1::GetDraftPreviewResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Character finalization
      virtual void FinalizeDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::FinalizeDraftRequest* request, ::dnd5e::api::v1alpha1::FinalizeDraftResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FinalizeDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::FinalizeDraftRequest* request, ::dnd5e::api::v1alpha1::FinalizeDraftResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Completed character operations
      virtual void GetCharacter(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetCharacterRequest* request, ::dnd5e::api::v1alpha1::GetCharacterResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetCharacter(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetCharacterRequest* request, ::dnd5e::api::v1alpha1::GetCharacterResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListCharacters(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListCharactersRequest* request, ::dnd5e::api::v1alpha1::ListCharactersResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListCharacters(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListCharactersRequest* request, ::dnd5e::api::v1alpha1::ListCharactersResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteCharacter(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::DeleteCharacterRequest* request, ::dnd5e::api::v1alpha1::DeleteCharacterResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteCharacter(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::DeleteCharacterRequest* request, ::dnd5e::api::v1alpha1::DeleteCharacterResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Data loading for character creation UI
      virtual void ListRaces(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListRacesRequest* request, ::dnd5e::api::v1alpha1::ListRacesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListRaces(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListRacesRequest* request, ::dnd5e::api::v1alpha1::ListRacesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListClasses(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListClassesRequest* request, ::dnd5e::api::v1alpha1::ListClassesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListClasses(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListClassesRequest* request, ::dnd5e::api::v1alpha1::ListClassesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListBackgrounds(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListBackgroundsRequest* request, ::dnd5e::api::v1alpha1::ListBackgroundsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListBackgrounds(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListBackgroundsRequest* request, ::dnd5e::api::v1alpha1::ListBackgroundsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetRaceDetails(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetRaceDetailsRequest* request, ::dnd5e::api::v1alpha1::GetRaceDetailsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetRaceDetails(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetRaceDetailsRequest* request, ::dnd5e::api::v1alpha1::GetRaceDetailsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetClassDetails(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetClassDetailsRequest* request, ::dnd5e::api::v1alpha1::GetClassDetailsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetClassDetails(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetClassDetailsRequest* request, ::dnd5e::api::v1alpha1::GetClassDetailsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetBackgroundDetails(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest* request, ::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetBackgroundDetails(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest* request, ::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetFeature(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetFeatureRequest* request, ::dnd5e::api::v1alpha1::GetFeatureResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetFeature(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetFeatureRequest* request, ::dnd5e::api::v1alpha1::GetFeatureResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Dice rolling for character creation
      virtual void RollAbilityScores(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::RollAbilityScoresRequest* request, ::dnd5e::api::v1alpha1::RollAbilityScoresResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RollAbilityScores(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::RollAbilityScoresRequest* request, ::dnd5e::api::v1alpha1::RollAbilityScoresResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Equipment listing by type
      virtual void ListEquipmentByType(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest* request, ::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListEquipmentByType(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest* request, ::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Spell listing by level
      virtual void ListSpellsByLevel(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListSpellsByLevelRequest* request, ::dnd5e::api::v1alpha1::ListSpellsByLevelResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListSpellsByLevel(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListSpellsByLevelRequest* request, ::dnd5e::api::v1alpha1::ListSpellsByLevelResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Equipment management
      virtual void GetCharacterInventory(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetCharacterInventoryRequest* request, ::dnd5e::api::v1alpha1::GetCharacterInventoryResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetCharacterInventory(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetCharacterInventoryRequest* request, ::dnd5e::api::v1alpha1::GetCharacterInventoryResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void EquipItem(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::EquipItemRequest* request, ::dnd5e::api::v1alpha1::EquipItemResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void EquipItem(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::EquipItemRequest* request, ::dnd5e::api::v1alpha1::EquipItemResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UnequipItem(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UnequipItemRequest* request, ::dnd5e::api::v1alpha1::UnequipItemResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UnequipItem(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UnequipItemRequest* request, ::dnd5e::api::v1alpha1::UnequipItemResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void AddToInventory(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::AddToInventoryRequest* request, ::dnd5e::api::v1alpha1::AddToInventoryResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AddToInventory(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::AddToInventoryRequest* request, ::dnd5e::api::v1alpha1::AddToInventoryResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void RemoveFromInventory(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::RemoveFromInventoryRequest* request, ::dnd5e::api::v1alpha1::RemoveFromInventoryResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RemoveFromInventory(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::RemoveFromInventoryRequest* request, ::dnd5e::api::v1alpha1::RemoveFromInventoryResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::CreateDraftResponse>* AsyncCreateDraftRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::CreateDraftRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::CreateDraftResponse>* PrepareAsyncCreateDraftRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::CreateDraftRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetDraftResponse>* AsyncGetDraftRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetDraftRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetDraftResponse>* PrepareAsyncGetDraftRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetDraftRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListDraftsResponse>* AsyncListDraftsRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListDraftsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListDraftsResponse>* PrepareAsyncListDraftsRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListDraftsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::DeleteDraftResponse>* AsyncDeleteDraftRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::DeleteDraftRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::DeleteDraftResponse>* PrepareAsyncDeleteDraftRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::DeleteDraftRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateNameResponse>* AsyncUpdateNameRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateNameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateNameResponse>* PrepareAsyncUpdateNameRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateNameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateRaceResponse>* AsyncUpdateRaceRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateRaceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateRaceResponse>* PrepareAsyncUpdateRaceRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateRaceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateClassResponse>* AsyncUpdateClassRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateClassRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateClassResponse>* PrepareAsyncUpdateClassRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateClassRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateBackgroundResponse>* AsyncUpdateBackgroundRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateBackgroundRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateBackgroundResponse>* PrepareAsyncUpdateBackgroundRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateBackgroundRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse>* AsyncUpdateAbilityScoresRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse>* PrepareAsyncUpdateAbilityScoresRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateSkillsResponse>* AsyncUpdateSkillsRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateSkillsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UpdateSkillsResponse>* PrepareAsyncUpdateSkillsRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateSkillsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ValidateDraftResponse>* AsyncValidateDraftRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ValidateDraftRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ValidateDraftResponse>* PrepareAsyncValidateDraftRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ValidateDraftRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetDraftPreviewResponse>* AsyncGetDraftPreviewRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetDraftPreviewRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetDraftPreviewResponse>* PrepareAsyncGetDraftPreviewRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetDraftPreviewRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::FinalizeDraftResponse>* AsyncFinalizeDraftRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::FinalizeDraftRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::FinalizeDraftResponse>* PrepareAsyncFinalizeDraftRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::FinalizeDraftRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetCharacterResponse>* AsyncGetCharacterRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetCharacterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetCharacterResponse>* PrepareAsyncGetCharacterRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetCharacterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListCharactersResponse>* AsyncListCharactersRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListCharactersRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListCharactersResponse>* PrepareAsyncListCharactersRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListCharactersRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::DeleteCharacterResponse>* AsyncDeleteCharacterRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::DeleteCharacterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::DeleteCharacterResponse>* PrepareAsyncDeleteCharacterRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::DeleteCharacterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListRacesResponse>* AsyncListRacesRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListRacesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListRacesResponse>* PrepareAsyncListRacesRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListRacesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListClassesResponse>* AsyncListClassesRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListClassesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListClassesResponse>* PrepareAsyncListClassesRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListClassesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListBackgroundsResponse>* AsyncListBackgroundsRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListBackgroundsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListBackgroundsResponse>* PrepareAsyncListBackgroundsRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListBackgroundsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetRaceDetailsResponse>* AsyncGetRaceDetailsRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetRaceDetailsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetRaceDetailsResponse>* PrepareAsyncGetRaceDetailsRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetRaceDetailsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetClassDetailsResponse>* AsyncGetClassDetailsRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetClassDetailsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetClassDetailsResponse>* PrepareAsyncGetClassDetailsRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetClassDetailsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse>* AsyncGetBackgroundDetailsRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse>* PrepareAsyncGetBackgroundDetailsRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetFeatureResponse>* AsyncGetFeatureRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetFeatureRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetFeatureResponse>* PrepareAsyncGetFeatureRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetFeatureRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::RollAbilityScoresResponse>* AsyncRollAbilityScoresRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::RollAbilityScoresRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::RollAbilityScoresResponse>* PrepareAsyncRollAbilityScoresRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::RollAbilityScoresRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse>* AsyncListEquipmentByTypeRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse>* PrepareAsyncListEquipmentByTypeRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListSpellsByLevelResponse>* AsyncListSpellsByLevelRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListSpellsByLevelRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::ListSpellsByLevelResponse>* PrepareAsyncListSpellsByLevelRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListSpellsByLevelRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetCharacterInventoryResponse>* AsyncGetCharacterInventoryRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetCharacterInventoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::GetCharacterInventoryResponse>* PrepareAsyncGetCharacterInventoryRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetCharacterInventoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::EquipItemResponse>* AsyncEquipItemRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::EquipItemRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::EquipItemResponse>* PrepareAsyncEquipItemRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::EquipItemRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UnequipItemResponse>* AsyncUnequipItemRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UnequipItemRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::UnequipItemResponse>* PrepareAsyncUnequipItemRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UnequipItemRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::AddToInventoryResponse>* AsyncAddToInventoryRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::AddToInventoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::AddToInventoryResponse>* PrepareAsyncAddToInventoryRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::AddToInventoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::RemoveFromInventoryResponse>* AsyncRemoveFromInventoryRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::RemoveFromInventoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::api::v1alpha1::RemoveFromInventoryResponse>* PrepareAsyncRemoveFromInventoryRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::RemoveFromInventoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status CreateDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::CreateDraftRequest& request, ::dnd5e::api::v1alpha1::CreateDraftResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::CreateDraftResponse>> AsyncCreateDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::CreateDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::CreateDraftResponse>>(AsyncCreateDraftRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::CreateDraftResponse>> PrepareAsyncCreateDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::CreateDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::CreateDraftResponse>>(PrepareAsyncCreateDraftRaw(context, request, cq));
    }
    ::grpc::Status GetDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetDraftRequest& request, ::dnd5e::api::v1alpha1::GetDraftResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetDraftResponse>> AsyncGetDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetDraftResponse>>(AsyncGetDraftRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetDraftResponse>> PrepareAsyncGetDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetDraftResponse>>(PrepareAsyncGetDraftRaw(context, request, cq));
    }
    ::grpc::Status ListDrafts(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListDraftsRequest& request, ::dnd5e::api::v1alpha1::ListDraftsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListDraftsResponse>> AsyncListDrafts(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListDraftsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListDraftsResponse>>(AsyncListDraftsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListDraftsResponse>> PrepareAsyncListDrafts(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListDraftsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListDraftsResponse>>(PrepareAsyncListDraftsRaw(context, request, cq));
    }
    ::grpc::Status DeleteDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::DeleteDraftRequest& request, ::dnd5e::api::v1alpha1::DeleteDraftResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::DeleteDraftResponse>> AsyncDeleteDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::DeleteDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::DeleteDraftResponse>>(AsyncDeleteDraftRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::DeleteDraftResponse>> PrepareAsyncDeleteDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::DeleteDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::DeleteDraftResponse>>(PrepareAsyncDeleteDraftRaw(context, request, cq));
    }
    ::grpc::Status UpdateName(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateNameRequest& request, ::dnd5e::api::v1alpha1::UpdateNameResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateNameResponse>> AsyncUpdateName(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateNameResponse>>(AsyncUpdateNameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateNameResponse>> PrepareAsyncUpdateName(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateNameResponse>>(PrepareAsyncUpdateNameRaw(context, request, cq));
    }
    ::grpc::Status UpdateRace(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateRaceRequest& request, ::dnd5e::api::v1alpha1::UpdateRaceResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateRaceResponse>> AsyncUpdateRace(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateRaceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateRaceResponse>>(AsyncUpdateRaceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateRaceResponse>> PrepareAsyncUpdateRace(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateRaceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateRaceResponse>>(PrepareAsyncUpdateRaceRaw(context, request, cq));
    }
    ::grpc::Status UpdateClass(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateClassRequest& request, ::dnd5e::api::v1alpha1::UpdateClassResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateClassResponse>> AsyncUpdateClass(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateClassRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateClassResponse>>(AsyncUpdateClassRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateClassResponse>> PrepareAsyncUpdateClass(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateClassRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateClassResponse>>(PrepareAsyncUpdateClassRaw(context, request, cq));
    }
    ::grpc::Status UpdateBackground(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateBackgroundRequest& request, ::dnd5e::api::v1alpha1::UpdateBackgroundResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateBackgroundResponse>> AsyncUpdateBackground(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateBackgroundRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateBackgroundResponse>>(AsyncUpdateBackgroundRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateBackgroundResponse>> PrepareAsyncUpdateBackground(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateBackgroundRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateBackgroundResponse>>(PrepareAsyncUpdateBackgroundRaw(context, request, cq));
    }
    ::grpc::Status UpdateAbilityScores(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest& request, ::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse>> AsyncUpdateAbilityScores(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse>>(AsyncUpdateAbilityScoresRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse>> PrepareAsyncUpdateAbilityScores(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse>>(PrepareAsyncUpdateAbilityScoresRaw(context, request, cq));
    }
    ::grpc::Status UpdateSkills(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateSkillsRequest& request, ::dnd5e::api::v1alpha1::UpdateSkillsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateSkillsResponse>> AsyncUpdateSkills(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateSkillsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateSkillsResponse>>(AsyncUpdateSkillsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateSkillsResponse>> PrepareAsyncUpdateSkills(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateSkillsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateSkillsResponse>>(PrepareAsyncUpdateSkillsRaw(context, request, cq));
    }
    ::grpc::Status ValidateDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ValidateDraftRequest& request, ::dnd5e::api::v1alpha1::ValidateDraftResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ValidateDraftResponse>> AsyncValidateDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ValidateDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ValidateDraftResponse>>(AsyncValidateDraftRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ValidateDraftResponse>> PrepareAsyncValidateDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ValidateDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ValidateDraftResponse>>(PrepareAsyncValidateDraftRaw(context, request, cq));
    }
    ::grpc::Status GetDraftPreview(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetDraftPreviewRequest& request, ::dnd5e::api::v1alpha1::GetDraftPreviewResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetDraftPreviewResponse>> AsyncGetDraftPreview(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetDraftPreviewRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetDraftPreviewResponse>>(AsyncGetDraftPreviewRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetDraftPreviewResponse>> PrepareAsyncGetDraftPreview(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetDraftPreviewRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetDraftPreviewResponse>>(PrepareAsyncGetDraftPreviewRaw(context, request, cq));
    }
    ::grpc::Status FinalizeDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::FinalizeDraftRequest& request, ::dnd5e::api::v1alpha1::FinalizeDraftResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::FinalizeDraftResponse>> AsyncFinalizeDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::FinalizeDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::FinalizeDraftResponse>>(AsyncFinalizeDraftRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::FinalizeDraftResponse>> PrepareAsyncFinalizeDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::FinalizeDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::FinalizeDraftResponse>>(PrepareAsyncFinalizeDraftRaw(context, request, cq));
    }
    ::grpc::Status GetCharacter(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetCharacterRequest& request, ::dnd5e::api::v1alpha1::GetCharacterResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetCharacterResponse>> AsyncGetCharacter(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetCharacterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetCharacterResponse>>(AsyncGetCharacterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetCharacterResponse>> PrepareAsyncGetCharacter(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetCharacterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetCharacterResponse>>(PrepareAsyncGetCharacterRaw(context, request, cq));
    }
    ::grpc::Status ListCharacters(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListCharactersRequest& request, ::dnd5e::api::v1alpha1::ListCharactersResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListCharactersResponse>> AsyncListCharacters(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListCharactersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListCharactersResponse>>(AsyncListCharactersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListCharactersResponse>> PrepareAsyncListCharacters(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListCharactersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListCharactersResponse>>(PrepareAsyncListCharactersRaw(context, request, cq));
    }
    ::grpc::Status DeleteCharacter(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::DeleteCharacterRequest& request, ::dnd5e::api::v1alpha1::DeleteCharacterResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::DeleteCharacterResponse>> AsyncDeleteCharacter(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::DeleteCharacterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::DeleteCharacterResponse>>(AsyncDeleteCharacterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::DeleteCharacterResponse>> PrepareAsyncDeleteCharacter(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::DeleteCharacterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::DeleteCharacterResponse>>(PrepareAsyncDeleteCharacterRaw(context, request, cq));
    }
    ::grpc::Status ListRaces(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListRacesRequest& request, ::dnd5e::api::v1alpha1::ListRacesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListRacesResponse>> AsyncListRaces(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListRacesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListRacesResponse>>(AsyncListRacesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListRacesResponse>> PrepareAsyncListRaces(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListRacesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListRacesResponse>>(PrepareAsyncListRacesRaw(context, request, cq));
    }
    ::grpc::Status ListClasses(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListClassesRequest& request, ::dnd5e::api::v1alpha1::ListClassesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListClassesResponse>> AsyncListClasses(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListClassesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListClassesResponse>>(AsyncListClassesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListClassesResponse>> PrepareAsyncListClasses(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListClassesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListClassesResponse>>(PrepareAsyncListClassesRaw(context, request, cq));
    }
    ::grpc::Status ListBackgrounds(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListBackgroundsRequest& request, ::dnd5e::api::v1alpha1::ListBackgroundsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListBackgroundsResponse>> AsyncListBackgrounds(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListBackgroundsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListBackgroundsResponse>>(AsyncListBackgroundsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListBackgroundsResponse>> PrepareAsyncListBackgrounds(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListBackgroundsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListBackgroundsResponse>>(PrepareAsyncListBackgroundsRaw(context, request, cq));
    }
    ::grpc::Status GetRaceDetails(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetRaceDetailsRequest& request, ::dnd5e::api::v1alpha1::GetRaceDetailsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetRaceDetailsResponse>> AsyncGetRaceDetails(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetRaceDetailsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetRaceDetailsResponse>>(AsyncGetRaceDetailsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetRaceDetailsResponse>> PrepareAsyncGetRaceDetails(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetRaceDetailsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetRaceDetailsResponse>>(PrepareAsyncGetRaceDetailsRaw(context, request, cq));
    }
    ::grpc::Status GetClassDetails(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetClassDetailsRequest& request, ::dnd5e::api::v1alpha1::GetClassDetailsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetClassDetailsResponse>> AsyncGetClassDetails(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetClassDetailsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetClassDetailsResponse>>(AsyncGetClassDetailsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetClassDetailsResponse>> PrepareAsyncGetClassDetails(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetClassDetailsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetClassDetailsResponse>>(PrepareAsyncGetClassDetailsRaw(context, request, cq));
    }
    ::grpc::Status GetBackgroundDetails(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest& request, ::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse>> AsyncGetBackgroundDetails(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse>>(AsyncGetBackgroundDetailsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse>> PrepareAsyncGetBackgroundDetails(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse>>(PrepareAsyncGetBackgroundDetailsRaw(context, request, cq));
    }
    ::grpc::Status GetFeature(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetFeatureRequest& request, ::dnd5e::api::v1alpha1::GetFeatureResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetFeatureResponse>> AsyncGetFeature(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetFeatureRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetFeatureResponse>>(AsyncGetFeatureRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetFeatureResponse>> PrepareAsyncGetFeature(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetFeatureRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetFeatureResponse>>(PrepareAsyncGetFeatureRaw(context, request, cq));
    }
    ::grpc::Status RollAbilityScores(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::RollAbilityScoresRequest& request, ::dnd5e::api::v1alpha1::RollAbilityScoresResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::RollAbilityScoresResponse>> AsyncRollAbilityScores(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::RollAbilityScoresRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::RollAbilityScoresResponse>>(AsyncRollAbilityScoresRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::RollAbilityScoresResponse>> PrepareAsyncRollAbilityScores(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::RollAbilityScoresRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::RollAbilityScoresResponse>>(PrepareAsyncRollAbilityScoresRaw(context, request, cq));
    }
    ::grpc::Status ListEquipmentByType(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest& request, ::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse>> AsyncListEquipmentByType(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse>>(AsyncListEquipmentByTypeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse>> PrepareAsyncListEquipmentByType(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse>>(PrepareAsyncListEquipmentByTypeRaw(context, request, cq));
    }
    ::grpc::Status ListSpellsByLevel(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListSpellsByLevelRequest& request, ::dnd5e::api::v1alpha1::ListSpellsByLevelResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListSpellsByLevelResponse>> AsyncListSpellsByLevel(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListSpellsByLevelRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListSpellsByLevelResponse>>(AsyncListSpellsByLevelRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListSpellsByLevelResponse>> PrepareAsyncListSpellsByLevel(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListSpellsByLevelRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListSpellsByLevelResponse>>(PrepareAsyncListSpellsByLevelRaw(context, request, cq));
    }
    ::grpc::Status GetCharacterInventory(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetCharacterInventoryRequest& request, ::dnd5e::api::v1alpha1::GetCharacterInventoryResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetCharacterInventoryResponse>> AsyncGetCharacterInventory(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetCharacterInventoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetCharacterInventoryResponse>>(AsyncGetCharacterInventoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetCharacterInventoryResponse>> PrepareAsyncGetCharacterInventory(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetCharacterInventoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetCharacterInventoryResponse>>(PrepareAsyncGetCharacterInventoryRaw(context, request, cq));
    }
    ::grpc::Status EquipItem(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::EquipItemRequest& request, ::dnd5e::api::v1alpha1::EquipItemResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::EquipItemResponse>> AsyncEquipItem(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::EquipItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::EquipItemResponse>>(AsyncEquipItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::EquipItemResponse>> PrepareAsyncEquipItem(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::EquipItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::EquipItemResponse>>(PrepareAsyncEquipItemRaw(context, request, cq));
    }
    ::grpc::Status UnequipItem(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UnequipItemRequest& request, ::dnd5e::api::v1alpha1::UnequipItemResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UnequipItemResponse>> AsyncUnequipItem(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UnequipItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UnequipItemResponse>>(AsyncUnequipItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UnequipItemResponse>> PrepareAsyncUnequipItem(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UnequipItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UnequipItemResponse>>(PrepareAsyncUnequipItemRaw(context, request, cq));
    }
    ::grpc::Status AddToInventory(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::AddToInventoryRequest& request, ::dnd5e::api::v1alpha1::AddToInventoryResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::AddToInventoryResponse>> AsyncAddToInventory(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::AddToInventoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::AddToInventoryResponse>>(AsyncAddToInventoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::AddToInventoryResponse>> PrepareAsyncAddToInventory(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::AddToInventoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::AddToInventoryResponse>>(PrepareAsyncAddToInventoryRaw(context, request, cq));
    }
    ::grpc::Status RemoveFromInventory(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::RemoveFromInventoryRequest& request, ::dnd5e::api::v1alpha1::RemoveFromInventoryResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::RemoveFromInventoryResponse>> AsyncRemoveFromInventory(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::RemoveFromInventoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::RemoveFromInventoryResponse>>(AsyncRemoveFromInventoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::RemoveFromInventoryResponse>> PrepareAsyncRemoveFromInventory(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::RemoveFromInventoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::RemoveFromInventoryResponse>>(PrepareAsyncRemoveFromInventoryRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void CreateDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::CreateDraftRequest* request, ::dnd5e::api::v1alpha1::CreateDraftResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::CreateDraftRequest* request, ::dnd5e::api::v1alpha1::CreateDraftResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetDraftRequest* request, ::dnd5e::api::v1alpha1::GetDraftResponse* response, std::function<void(::grpc::Status)>) override;
      void GetDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetDraftRequest* request, ::dnd5e::api::v1alpha1::GetDraftResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListDrafts(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListDraftsRequest* request, ::dnd5e::api::v1alpha1::ListDraftsResponse* response, std::function<void(::grpc::Status)>) override;
      void ListDrafts(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListDraftsRequest* request, ::dnd5e::api::v1alpha1::ListDraftsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::DeleteDraftRequest* request, ::dnd5e::api::v1alpha1::DeleteDraftResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::DeleteDraftRequest* request, ::dnd5e::api::v1alpha1::DeleteDraftResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateName(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateNameRequest* request, ::dnd5e::api::v1alpha1::UpdateNameResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateName(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateNameRequest* request, ::dnd5e::api::v1alpha1::UpdateNameResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateRace(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateRaceRequest* request, ::dnd5e::api::v1alpha1::UpdateRaceResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateRace(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateRaceRequest* request, ::dnd5e::api::v1alpha1::UpdateRaceResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateClass(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateClassRequest* request, ::dnd5e::api::v1alpha1::UpdateClassResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateClass(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateClassRequest* request, ::dnd5e::api::v1alpha1::UpdateClassResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateBackground(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateBackgroundRequest* request, ::dnd5e::api::v1alpha1::UpdateBackgroundResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateBackground(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateBackgroundRequest* request, ::dnd5e::api::v1alpha1::UpdateBackgroundResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateAbilityScores(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest* request, ::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateAbilityScores(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest* request, ::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateSkills(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateSkillsRequest* request, ::dnd5e::api::v1alpha1::UpdateSkillsResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateSkills(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateSkillsRequest* request, ::dnd5e::api::v1alpha1::UpdateSkillsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ValidateDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ValidateDraftRequest* request, ::dnd5e::api::v1alpha1::ValidateDraftResponse* response, std::function<void(::grpc::Status)>) override;
      void ValidateDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ValidateDraftRequest* request, ::dnd5e::api::v1alpha1::ValidateDraftResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetDraftPreview(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetDraftPreviewRequest* request, ::dnd5e::api::v1alpha1::GetDraftPreviewResponse* response, std::function<void(::grpc::Status)>) override;
      void GetDraftPreview(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetDraftPreviewRequest* request, ::dnd5e::api::v1alpha1::GetDraftPreviewResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void FinalizeDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::FinalizeDraftRequest* request, ::dnd5e::api::v1alpha1::FinalizeDraftResponse* response, std::function<void(::grpc::Status)>) override;
      void FinalizeDraft(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::FinalizeDraftRequest* request, ::dnd5e::api::v1alpha1::FinalizeDraftResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetCharacter(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetCharacterRequest* request, ::dnd5e::api::v1alpha1::GetCharacterResponse* response, std::function<void(::grpc::Status)>) override;
      void GetCharacter(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetCharacterRequest* request, ::dnd5e::api::v1alpha1::GetCharacterResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListCharacters(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListCharactersRequest* request, ::dnd5e::api::v1alpha1::ListCharactersResponse* response, std::function<void(::grpc::Status)>) override;
      void ListCharacters(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListCharactersRequest* request, ::dnd5e::api::v1alpha1::ListCharactersResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteCharacter(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::DeleteCharacterRequest* request, ::dnd5e::api::v1alpha1::DeleteCharacterResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteCharacter(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::DeleteCharacterRequest* request, ::dnd5e::api::v1alpha1::DeleteCharacterResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListRaces(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListRacesRequest* request, ::dnd5e::api::v1alpha1::ListRacesResponse* response, std::function<void(::grpc::Status)>) override;
      void ListRaces(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListRacesRequest* request, ::dnd5e::api::v1alpha1::ListRacesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListClasses(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListClassesRequest* request, ::dnd5e::api::v1alpha1::ListClassesResponse* response, std::function<void(::grpc::Status)>) override;
      void ListClasses(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListClassesRequest* request, ::dnd5e::api::v1alpha1::ListClassesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListBackgrounds(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListBackgroundsRequest* request, ::dnd5e::api::v1alpha1::ListBackgroundsResponse* response, std::function<void(::grpc::Status)>) override;
      void ListBackgrounds(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListBackgroundsRequest* request, ::dnd5e::api::v1alpha1::ListBackgroundsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetRaceDetails(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetRaceDetailsRequest* request, ::dnd5e::api::v1alpha1::GetRaceDetailsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetRaceDetails(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetRaceDetailsRequest* request, ::dnd5e::api::v1alpha1::GetRaceDetailsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetClassDetails(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetClassDetailsRequest* request, ::dnd5e::api::v1alpha1::GetClassDetailsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetClassDetails(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetClassDetailsRequest* request, ::dnd5e::api::v1alpha1::GetClassDetailsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetBackgroundDetails(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest* request, ::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetBackgroundDetails(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest* request, ::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetFeature(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetFeatureRequest* request, ::dnd5e::api::v1alpha1::GetFeatureResponse* response, std::function<void(::grpc::Status)>) override;
      void GetFeature(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetFeatureRequest* request, ::dnd5e::api::v1alpha1::GetFeatureResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RollAbilityScores(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::RollAbilityScoresRequest* request, ::dnd5e::api::v1alpha1::RollAbilityScoresResponse* response, std::function<void(::grpc::Status)>) override;
      void RollAbilityScores(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::RollAbilityScoresRequest* request, ::dnd5e::api::v1alpha1::RollAbilityScoresResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListEquipmentByType(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest* request, ::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse* response, std::function<void(::grpc::Status)>) override;
      void ListEquipmentByType(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest* request, ::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListSpellsByLevel(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListSpellsByLevelRequest* request, ::dnd5e::api::v1alpha1::ListSpellsByLevelResponse* response, std::function<void(::grpc::Status)>) override;
      void ListSpellsByLevel(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListSpellsByLevelRequest* request, ::dnd5e::api::v1alpha1::ListSpellsByLevelResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetCharacterInventory(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetCharacterInventoryRequest* request, ::dnd5e::api::v1alpha1::GetCharacterInventoryResponse* response, std::function<void(::grpc::Status)>) override;
      void GetCharacterInventory(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetCharacterInventoryRequest* request, ::dnd5e::api::v1alpha1::GetCharacterInventoryResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void EquipItem(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::EquipItemRequest* request, ::dnd5e::api::v1alpha1::EquipItemResponse* response, std::function<void(::grpc::Status)>) override;
      void EquipItem(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::EquipItemRequest* request, ::dnd5e::api::v1alpha1::EquipItemResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UnequipItem(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UnequipItemRequest* request, ::dnd5e::api::v1alpha1::UnequipItemResponse* response, std::function<void(::grpc::Status)>) override;
      void UnequipItem(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UnequipItemRequest* request, ::dnd5e::api::v1alpha1::UnequipItemResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void AddToInventory(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::AddToInventoryRequest* request, ::dnd5e::api::v1alpha1::AddToInventoryResponse* response, std::function<void(::grpc::Status)>) override;
      void AddToInventory(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::AddToInventoryRequest* request, ::dnd5e::api::v1alpha1::AddToInventoryResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RemoveFromInventory(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::RemoveFromInventoryRequest* request, ::dnd5e::api::v1alpha1::RemoveFromInventoryResponse* response, std::function<void(::grpc::Status)>) override;
      void RemoveFromInventory(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::RemoveFromInventoryRequest* request, ::dnd5e::api::v1alpha1::RemoveFromInventoryResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::CreateDraftResponse>* AsyncCreateDraftRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::CreateDraftRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::CreateDraftResponse>* PrepareAsyncCreateDraftRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::CreateDraftRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetDraftResponse>* AsyncGetDraftRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetDraftRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetDraftResponse>* PrepareAsyncGetDraftRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetDraftRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListDraftsResponse>* AsyncListDraftsRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListDraftsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListDraftsResponse>* PrepareAsyncListDraftsRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListDraftsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::DeleteDraftResponse>* AsyncDeleteDraftRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::DeleteDraftRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::DeleteDraftResponse>* PrepareAsyncDeleteDraftRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::DeleteDraftRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateNameResponse>* AsyncUpdateNameRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateNameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateNameResponse>* PrepareAsyncUpdateNameRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateNameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateRaceResponse>* AsyncUpdateRaceRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateRaceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateRaceResponse>* PrepareAsyncUpdateRaceRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateRaceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateClassResponse>* AsyncUpdateClassRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateClassRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateClassResponse>* PrepareAsyncUpdateClassRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateClassRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateBackgroundResponse>* AsyncUpdateBackgroundRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateBackgroundRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateBackgroundResponse>* PrepareAsyncUpdateBackgroundRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateBackgroundRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse>* AsyncUpdateAbilityScoresRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse>* PrepareAsyncUpdateAbilityScoresRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateSkillsResponse>* AsyncUpdateSkillsRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateSkillsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UpdateSkillsResponse>* PrepareAsyncUpdateSkillsRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UpdateSkillsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ValidateDraftResponse>* AsyncValidateDraftRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ValidateDraftRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ValidateDraftResponse>* PrepareAsyncValidateDraftRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ValidateDraftRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetDraftPreviewResponse>* AsyncGetDraftPreviewRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetDraftPreviewRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetDraftPreviewResponse>* PrepareAsyncGetDraftPreviewRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetDraftPreviewRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::FinalizeDraftResponse>* AsyncFinalizeDraftRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::FinalizeDraftRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::FinalizeDraftResponse>* PrepareAsyncFinalizeDraftRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::FinalizeDraftRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetCharacterResponse>* AsyncGetCharacterRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetCharacterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetCharacterResponse>* PrepareAsyncGetCharacterRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetCharacterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListCharactersResponse>* AsyncListCharactersRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListCharactersRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListCharactersResponse>* PrepareAsyncListCharactersRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListCharactersRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::DeleteCharacterResponse>* AsyncDeleteCharacterRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::DeleteCharacterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::DeleteCharacterResponse>* PrepareAsyncDeleteCharacterRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::DeleteCharacterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListRacesResponse>* AsyncListRacesRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListRacesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListRacesResponse>* PrepareAsyncListRacesRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListRacesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListClassesResponse>* AsyncListClassesRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListClassesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListClassesResponse>* PrepareAsyncListClassesRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListClassesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListBackgroundsResponse>* AsyncListBackgroundsRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListBackgroundsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListBackgroundsResponse>* PrepareAsyncListBackgroundsRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListBackgroundsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetRaceDetailsResponse>* AsyncGetRaceDetailsRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetRaceDetailsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetRaceDetailsResponse>* PrepareAsyncGetRaceDetailsRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetRaceDetailsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetClassDetailsResponse>* AsyncGetClassDetailsRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetClassDetailsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetClassDetailsResponse>* PrepareAsyncGetClassDetailsRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetClassDetailsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse>* AsyncGetBackgroundDetailsRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse>* PrepareAsyncGetBackgroundDetailsRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetFeatureResponse>* AsyncGetFeatureRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetFeatureRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetFeatureResponse>* PrepareAsyncGetFeatureRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetFeatureRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::RollAbilityScoresResponse>* AsyncRollAbilityScoresRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::RollAbilityScoresRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::RollAbilityScoresResponse>* PrepareAsyncRollAbilityScoresRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::RollAbilityScoresRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse>* AsyncListEquipmentByTypeRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse>* PrepareAsyncListEquipmentByTypeRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListSpellsByLevelResponse>* AsyncListSpellsByLevelRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListSpellsByLevelRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::ListSpellsByLevelResponse>* PrepareAsyncListSpellsByLevelRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::ListSpellsByLevelRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetCharacterInventoryResponse>* AsyncGetCharacterInventoryRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetCharacterInventoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::GetCharacterInventoryResponse>* PrepareAsyncGetCharacterInventoryRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::GetCharacterInventoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::EquipItemResponse>* AsyncEquipItemRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::EquipItemRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::EquipItemResponse>* PrepareAsyncEquipItemRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::EquipItemRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UnequipItemResponse>* AsyncUnequipItemRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UnequipItemRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::UnequipItemResponse>* PrepareAsyncUnequipItemRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::UnequipItemRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::AddToInventoryResponse>* AsyncAddToInventoryRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::AddToInventoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::AddToInventoryResponse>* PrepareAsyncAddToInventoryRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::AddToInventoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::RemoveFromInventoryResponse>* AsyncRemoveFromInventoryRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::RemoveFromInventoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::api::v1alpha1::RemoveFromInventoryResponse>* PrepareAsyncRemoveFromInventoryRaw(::grpc::ClientContext* context, const ::dnd5e::api::v1alpha1::RemoveFromInventoryRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateDraft_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDraft_;
    const ::grpc::internal::RpcMethod rpcmethod_ListDrafts_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteDraft_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateName_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateRace_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateClass_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateBackground_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateAbilityScores_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateSkills_;
    const ::grpc::internal::RpcMethod rpcmethod_ValidateDraft_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDraftPreview_;
    const ::grpc::internal::RpcMethod rpcmethod_FinalizeDraft_;
    const ::grpc::internal::RpcMethod rpcmethod_GetCharacter_;
    const ::grpc::internal::RpcMethod rpcmethod_ListCharacters_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteCharacter_;
    const ::grpc::internal::RpcMethod rpcmethod_ListRaces_;
    const ::grpc::internal::RpcMethod rpcmethod_ListClasses_;
    const ::grpc::internal::RpcMethod rpcmethod_ListBackgrounds_;
    const ::grpc::internal::RpcMethod rpcmethod_GetRaceDetails_;
    const ::grpc::internal::RpcMethod rpcmethod_GetClassDetails_;
    const ::grpc::internal::RpcMethod rpcmethod_GetBackgroundDetails_;
    const ::grpc::internal::RpcMethod rpcmethod_GetFeature_;
    const ::grpc::internal::RpcMethod rpcmethod_RollAbilityScores_;
    const ::grpc::internal::RpcMethod rpcmethod_ListEquipmentByType_;
    const ::grpc::internal::RpcMethod rpcmethod_ListSpellsByLevel_;
    const ::grpc::internal::RpcMethod rpcmethod_GetCharacterInventory_;
    const ::grpc::internal::RpcMethod rpcmethod_EquipItem_;
    const ::grpc::internal::RpcMethod rpcmethod_UnequipItem_;
    const ::grpc::internal::RpcMethod rpcmethod_AddToInventory_;
    const ::grpc::internal::RpcMethod rpcmethod_RemoveFromInventory_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Draft lifecycle
    virtual ::grpc::Status CreateDraft(::grpc::ServerContext* context, const ::dnd5e::api::v1alpha1::CreateDraftRequest* request, ::dnd5e::api::v1alpha1::CreateDraftResponse* response);
    virtual ::grpc::Status GetDraft(::grpc::ServerContext* context, const ::dnd5e::api::v1alpha1::GetDraftRequest* request, ::dnd5e::api::v1alpha1::GetDraftResponse* response);
    virtual ::grpc::Status ListDrafts(::grpc::ServerContext* context, const ::dnd5e::api::v1alpha1::ListDraftsRequest* request, ::dnd5e::api::v1alpha1::ListDraftsResponse* response);
    virtual ::grpc::Status DeleteDraft(::grpc::ServerContext* context, const ::dnd5e::api::v1alpha1::DeleteDraftRequest* request, ::dnd5e::api::v1alpha1::DeleteDraftResponse* response);
    // Section-based updates (supports skip-around editing)
    virtual ::grpc::Status UpdateName(::grpc::ServerContext* context, const ::dnd5e::api::v1alpha1::UpdateNameRequest* request, ::dnd5e::api::v1alpha1::UpdateNameResponse* response);
    virtual ::grpc::Status UpdateRace(::grpc::ServerContext* context, const ::dnd5e::api::v1alpha1::UpdateRaceRequest* request, ::dnd5e::api::v1alpha1::UpdateRaceResponse* response);
    virtual ::grpc::Status UpdateClass(::grpc::ServerContext* context, const ::dnd5e::api::v1alpha1::UpdateClassRequest* request, ::dnd5e::api::v1alpha1::UpdateClassResponse* response);
    virtual ::grpc::Status UpdateBackground(::grpc::ServerContext* context, const ::dnd5e::api::v1alpha1::UpdateBackgroundRequest* request, ::dnd5e::api::v1alpha1::UpdateBackgroundResponse* response);
    virtual ::grpc::Status UpdateAbilityScores(::grpc::ServerContext* context, const ::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest* request, ::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse* response);
    virtual ::grpc::Status UpdateSkills(::grpc::ServerContext* context, const ::dnd5e::api::v1alpha1::UpdateSkillsRequest* request, ::dnd5e::api::v1alpha1::UpdateSkillsResponse* response);
    // Validation
    virtual ::grpc::Status ValidateDraft(::grpc::ServerContext* context, const ::dnd5e::api::v1alpha1::ValidateDraftRequest* request, ::dnd5e::api::v1alpha1::ValidateDraftResponse* response);
    // Get a preview of what the character would look like if finalized
    virtual ::grpc::Status GetDraftPreview(::grpc::ServerContext* context, const ::dnd5e::api::v1alpha1::GetDraftPreviewRequest* request, ::dnd5e::api::v1alpha1::GetDraftPreviewResponse* response);
    // Character finalization
    virtual ::grpc::Status FinalizeDraft(::grpc::ServerContext* context, const ::dnd5e::api::v1alpha1::FinalizeDraftRequest* request, ::dnd5e::api::v1alpha1::FinalizeDraftResponse* response);
    // Completed character operations
    virtual ::grpc::Status GetCharacter(::grpc::ServerContext* context, const ::dnd5e::api::v1alpha1::GetCharacterRequest* request, ::dnd5e::api::v1alpha1::GetCharacterResponse* response);
    virtual ::grpc::Status ListCharacters(::grpc::ServerContext* context, const ::dnd5e::api::v1alpha1::ListCharactersRequest* request, ::dnd5e::api::v1alpha1::ListCharactersResponse* response);
    virtual ::grpc::Status DeleteCharacter(::grpc::ServerContext* context, const ::dnd5e::api::v1alpha1::DeleteCharacterRequest* request, ::dnd5e::api::v1alpha1::DeleteCharacterResponse* response);
    // Data loading for character creation UI
    virtual ::grpc::Status ListRaces(::grpc::ServerContext* context, const ::dnd5e::api::v1alpha1::ListRacesRequest* request, ::dnd5e::api::v1alpha1::ListRacesResponse* response);
    virtual ::grpc::Status ListClasses(::grpc::ServerContext* context, const ::dnd5e::api::v1alpha1::ListClassesRequest* request, ::dnd5e::api::v1alpha1::ListClassesResponse* response);
    virtual ::grpc::Status ListBackgrounds(::grpc::ServerContext* context, const ::dnd5e::api::v1alpha1::ListBackgroundsRequest* request, ::dnd5e::api::v1alpha1::ListBackgroundsResponse* response);
    virtual ::grpc::Status GetRaceDetails(::grpc::ServerContext* context, const ::dnd5e::api::v1alpha1::GetRaceDetailsRequest* request, ::dnd5e::api::v1alpha1::GetRaceDetailsResponse* response);
    virtual ::grpc::Status GetClassDetails(::grpc::ServerContext* context, const ::dnd5e::api::v1alpha1::GetClassDetailsRequest* request, ::dnd5e::api::v1alpha1::GetClassDetailsResponse* response);
    virtual ::grpc::Status GetBackgroundDetails(::grpc::ServerContext* context, const ::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest* request, ::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse* response);
    virtual ::grpc::Status GetFeature(::grpc::ServerContext* context, const ::dnd5e::api::v1alpha1::GetFeatureRequest* request, ::dnd5e::api::v1alpha1::GetFeatureResponse* response);
    // Dice rolling for character creation
    virtual ::grpc::Status RollAbilityScores(::grpc::ServerContext* context, const ::dnd5e::api::v1alpha1::RollAbilityScoresRequest* request, ::dnd5e::api::v1alpha1::RollAbilityScoresResponse* response);
    // Equipment listing by type
    virtual ::grpc::Status ListEquipmentByType(::grpc::ServerContext* context, const ::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest* request, ::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse* response);
    // Spell listing by level
    virtual ::grpc::Status ListSpellsByLevel(::grpc::ServerContext* context, const ::dnd5e::api::v1alpha1::ListSpellsByLevelRequest* request, ::dnd5e::api::v1alpha1::ListSpellsByLevelResponse* response);
    // Equipment management
    virtual ::grpc::Status GetCharacterInventory(::grpc::ServerContext* context, const ::dnd5e::api::v1alpha1::GetCharacterInventoryRequest* request, ::dnd5e::api::v1alpha1::GetCharacterInventoryResponse* response);
    virtual ::grpc::Status EquipItem(::grpc::ServerContext* context, const ::dnd5e::api::v1alpha1::EquipItemRequest* request, ::dnd5e::api::v1alpha1::EquipItemResponse* response);
    virtual ::grpc::Status UnequipItem(::grpc::ServerContext* context, const ::dnd5e::api::v1alpha1::UnequipItemRequest* request, ::dnd5e::api::v1alpha1::UnequipItemResponse* response);
    virtual ::grpc::Status AddToInventory(::grpc::ServerContext* context, const ::dnd5e::api::v1alpha1::AddToInventoryRequest* request, ::dnd5e::api::v1alpha1::AddToInventoryResponse* response);
    virtual ::grpc::Status RemoveFromInventory(::grpc::ServerContext* context, const ::dnd5e::api::v1alpha1::RemoveFromInventoryRequest* request, ::dnd5e::api::v1alpha1::RemoveFromInventoryResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateDraft() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDraft(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::CreateDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::CreateDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateDraft(::grpc::ServerContext* context, ::dnd5e::api::v1alpha1::CreateDraftRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::api::v1alpha1::CreateDraftResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetDraft() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDraft(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::GetDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDraft(::grpc::ServerContext* context, ::dnd5e::api::v1alpha1::GetDraftRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::api::v1alpha1::GetDraftResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListDrafts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListDrafts() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_ListDrafts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDrafts(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListDraftsRequest* /*request*/, ::dnd5e::api::v1alpha1::ListDraftsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListDrafts(::grpc::ServerContext* context, ::dnd5e::api::v1alpha1::ListDraftsRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::api::v1alpha1::ListDraftsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteDraft() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_DeleteDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDraft(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::DeleteDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::DeleteDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteDraft(::grpc::ServerContext* context, ::dnd5e::api::v1alpha1::DeleteDraftRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::api::v1alpha1::DeleteDraftResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateName() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_UpdateName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateName(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateNameRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateName(::grpc::ServerContext* context, ::dnd5e::api::v1alpha1::UpdateNameRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::api::v1alpha1::UpdateNameResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateRace : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateRace() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_UpdateRace() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateRace(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateRaceRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateRaceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateRace(::grpc::ServerContext* context, ::dnd5e::api::v1alpha1::UpdateRaceRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::api::v1alpha1::UpdateRaceResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateClass : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateClass() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_UpdateClass() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateClass(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateClassRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateClassResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateClass(::grpc::ServerContext* context, ::dnd5e::api::v1alpha1::UpdateClassRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::api::v1alpha1::UpdateClassResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateBackground : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateBackground() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_UpdateBackground() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateBackground(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateBackgroundRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateBackgroundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateBackground(::grpc::ServerContext* context, ::dnd5e::api::v1alpha1::UpdateBackgroundRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::api::v1alpha1::UpdateBackgroundResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateAbilityScores : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateAbilityScores() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_UpdateAbilityScores() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAbilityScores(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateAbilityScores(::grpc::ServerContext* context, ::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateSkills : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateSkills() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_UpdateSkills() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSkills(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateSkillsRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateSkillsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateSkills(::grpc::ServerContext* context, ::dnd5e::api::v1alpha1::UpdateSkillsRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::api::v1alpha1::UpdateSkillsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ValidateDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ValidateDraft() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_ValidateDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateDraft(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ValidateDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::ValidateDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestValidateDraft(::grpc::ServerContext* context, ::dnd5e::api::v1alpha1::ValidateDraftRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::api::v1alpha1::ValidateDraftResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDraftPreview : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetDraftPreview() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_GetDraftPreview() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDraftPreview(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetDraftPreviewRequest* /*request*/, ::dnd5e::api::v1alpha1::GetDraftPreviewResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDraftPreview(::grpc::ServerContext* context, ::dnd5e::api::v1alpha1::GetDraftPreviewRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::api::v1alpha1::GetDraftPreviewResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_FinalizeDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_FinalizeDraft() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_FinalizeDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FinalizeDraft(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::FinalizeDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::FinalizeDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFinalizeDraft(::grpc::ServerContext* context, ::dnd5e::api::v1alpha1::FinalizeDraftRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::api::v1alpha1::FinalizeDraftResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetCharacter() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_GetCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCharacter(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetCharacterRequest* /*request*/, ::dnd5e::api::v1alpha1::GetCharacterResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCharacter(::grpc::ServerContext* context, ::dnd5e::api::v1alpha1::GetCharacterRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::api::v1alpha1::GetCharacterResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListCharacters : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListCharacters() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_ListCharacters() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCharacters(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListCharactersRequest* /*request*/, ::dnd5e::api::v1alpha1::ListCharactersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListCharacters(::grpc::ServerContext* context, ::dnd5e::api::v1alpha1::ListCharactersRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::api::v1alpha1::ListCharactersResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteCharacter() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_DeleteCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteCharacter(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::DeleteCharacterRequest* /*request*/, ::dnd5e::api::v1alpha1::DeleteCharacterResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteCharacter(::grpc::ServerContext* context, ::dnd5e::api::v1alpha1::DeleteCharacterRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::api::v1alpha1::DeleteCharacterResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListRaces : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListRaces() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_ListRaces() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRaces(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListRacesRequest* /*request*/, ::dnd5e::api::v1alpha1::ListRacesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListRaces(::grpc::ServerContext* context, ::dnd5e::api::v1alpha1::ListRacesRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::api::v1alpha1::ListRacesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListClasses : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListClasses() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_ListClasses() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListClasses(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListClassesRequest* /*request*/, ::dnd5e::api::v1alpha1::ListClassesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListClasses(::grpc::ServerContext* context, ::dnd5e::api::v1alpha1::ListClassesRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::api::v1alpha1::ListClassesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListBackgrounds : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListBackgrounds() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_ListBackgrounds() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListBackgrounds(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListBackgroundsRequest* /*request*/, ::dnd5e::api::v1alpha1::ListBackgroundsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListBackgrounds(::grpc::ServerContext* context, ::dnd5e::api::v1alpha1::ListBackgroundsRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::api::v1alpha1::ListBackgroundsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRaceDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetRaceDetails() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_GetRaceDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRaceDetails(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetRaceDetailsRequest* /*request*/, ::dnd5e::api::v1alpha1::GetRaceDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRaceDetails(::grpc::ServerContext* context, ::dnd5e::api::v1alpha1::GetRaceDetailsRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::api::v1alpha1::GetRaceDetailsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetClassDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetClassDetails() {
      ::grpc::Service::MarkMethodAsync(20);
    }
    ~WithAsyncMethod_GetClassDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetClassDetails(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetClassDetailsRequest* /*request*/, ::dnd5e::api::v1alpha1::GetClassDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetClassDetails(::grpc::ServerContext* context, ::dnd5e::api::v1alpha1::GetClassDetailsRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::api::v1alpha1::GetClassDetailsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetBackgroundDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetBackgroundDetails() {
      ::grpc::Service::MarkMethodAsync(21);
    }
    ~WithAsyncMethod_GetBackgroundDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBackgroundDetails(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest* /*request*/, ::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBackgroundDetails(::grpc::ServerContext* context, ::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetFeature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetFeature() {
      ::grpc::Service::MarkMethodAsync(22);
    }
    ~WithAsyncMethod_GetFeature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFeature(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetFeatureRequest* /*request*/, ::dnd5e::api::v1alpha1::GetFeatureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFeature(::grpc::ServerContext* context, ::dnd5e::api::v1alpha1::GetFeatureRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::api::v1alpha1::GetFeatureResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RollAbilityScores : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RollAbilityScores() {
      ::grpc::Service::MarkMethodAsync(23);
    }
    ~WithAsyncMethod_RollAbilityScores() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RollAbilityScores(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::RollAbilityScoresRequest* /*request*/, ::dnd5e::api::v1alpha1::RollAbilityScoresResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRollAbilityScores(::grpc::ServerContext* context, ::dnd5e::api::v1alpha1::RollAbilityScoresRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::api::v1alpha1::RollAbilityScoresResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListEquipmentByType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListEquipmentByType() {
      ::grpc::Service::MarkMethodAsync(24);
    }
    ~WithAsyncMethod_ListEquipmentByType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListEquipmentByType(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest* /*request*/, ::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListEquipmentByType(::grpc::ServerContext* context, ::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListSpellsByLevel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListSpellsByLevel() {
      ::grpc::Service::MarkMethodAsync(25);
    }
    ~WithAsyncMethod_ListSpellsByLevel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListSpellsByLevel(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListSpellsByLevelRequest* /*request*/, ::dnd5e::api::v1alpha1::ListSpellsByLevelResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListSpellsByLevel(::grpc::ServerContext* context, ::dnd5e::api::v1alpha1::ListSpellsByLevelRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::api::v1alpha1::ListSpellsByLevelResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetCharacterInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetCharacterInventory() {
      ::grpc::Service::MarkMethodAsync(26);
    }
    ~WithAsyncMethod_GetCharacterInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCharacterInventory(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetCharacterInventoryRequest* /*request*/, ::dnd5e::api::v1alpha1::GetCharacterInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCharacterInventory(::grpc::ServerContext* context, ::dnd5e::api::v1alpha1::GetCharacterInventoryRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::api::v1alpha1::GetCharacterInventoryResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_EquipItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_EquipItem() {
      ::grpc::Service::MarkMethodAsync(27);
    }
    ~WithAsyncMethod_EquipItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EquipItem(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::EquipItemRequest* /*request*/, ::dnd5e::api::v1alpha1::EquipItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEquipItem(::grpc::ServerContext* context, ::dnd5e::api::v1alpha1::EquipItemRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::api::v1alpha1::EquipItemResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UnequipItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UnequipItem() {
      ::grpc::Service::MarkMethodAsync(28);
    }
    ~WithAsyncMethod_UnequipItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnequipItem(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UnequipItemRequest* /*request*/, ::dnd5e::api::v1alpha1::UnequipItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUnequipItem(::grpc::ServerContext* context, ::dnd5e::api::v1alpha1::UnequipItemRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::api::v1alpha1::UnequipItemResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddToInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddToInventory() {
      ::grpc::Service::MarkMethodAsync(29);
    }
    ~WithAsyncMethod_AddToInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddToInventory(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::AddToInventoryRequest* /*request*/, ::dnd5e::api::v1alpha1::AddToInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddToInventory(::grpc::ServerContext* context, ::dnd5e::api::v1alpha1::AddToInventoryRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::api::v1alpha1::AddToInventoryResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(29, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RemoveFromInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RemoveFromInventory() {
      ::grpc::Service::MarkMethodAsync(30);
    }
    ~WithAsyncMethod_RemoveFromInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveFromInventory(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::RemoveFromInventoryRequest* /*request*/, ::dnd5e::api::v1alpha1::RemoveFromInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveFromInventory(::grpc::ServerContext* context, ::dnd5e::api::v1alpha1::RemoveFromInventoryRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::api::v1alpha1::RemoveFromInventoryResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(30, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateDraft<WithAsyncMethod_GetDraft<WithAsyncMethod_ListDrafts<WithAsyncMethod_DeleteDraft<WithAsyncMethod_UpdateName<WithAsyncMethod_UpdateRace<WithAsyncMethod_UpdateClass<WithAsyncMethod_UpdateBackground<WithAsyncMethod_UpdateAbilityScores<WithAsyncMethod_UpdateSkills<WithAsyncMethod_ValidateDraft<WithAsyncMethod_GetDraftPreview<WithAsyncMethod_FinalizeDraft<WithAsyncMethod_GetCharacter<WithAsyncMethod_ListCharacters<WithAsyncMethod_DeleteCharacter<WithAsyncMethod_ListRaces<WithAsyncMethod_ListClasses<WithAsyncMethod_ListBackgrounds<WithAsyncMethod_GetRaceDetails<WithAsyncMethod_GetClassDetails<WithAsyncMethod_GetBackgroundDetails<WithAsyncMethod_GetFeature<WithAsyncMethod_RollAbilityScores<WithAsyncMethod_ListEquipmentByType<WithAsyncMethod_ListSpellsByLevel<WithAsyncMethod_GetCharacterInventory<WithAsyncMethod_EquipItem<WithAsyncMethod_UnequipItem<WithAsyncMethod_AddToInventory<WithAsyncMethod_RemoveFromInventory<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_CreateDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateDraft() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::CreateDraftRequest, ::dnd5e::api::v1alpha1::CreateDraftResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::api::v1alpha1::CreateDraftRequest* request, ::dnd5e::api::v1alpha1::CreateDraftResponse* response) { return this->CreateDraft(context, request, response); }));}
    void SetMessageAllocatorFor_CreateDraft(
        ::grpc::MessageAllocator< ::dnd5e::api::v1alpha1::CreateDraftRequest, ::dnd5e::api::v1alpha1::CreateDraftResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::CreateDraftRequest, ::dnd5e::api::v1alpha1::CreateDraftResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDraft(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::CreateDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::CreateDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateDraft(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::api::v1alpha1::CreateDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::CreateDraftResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetDraft() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::GetDraftRequest, ::dnd5e::api::v1alpha1::GetDraftResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::api::v1alpha1::GetDraftRequest* request, ::dnd5e::api::v1alpha1::GetDraftResponse* response) { return this->GetDraft(context, request, response); }));}
    void SetMessageAllocatorFor_GetDraft(
        ::grpc::MessageAllocator< ::dnd5e::api::v1alpha1::GetDraftRequest, ::dnd5e::api::v1alpha1::GetDraftResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::GetDraftRequest, ::dnd5e::api::v1alpha1::GetDraftResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDraft(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::GetDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDraft(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::GetDraftResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListDrafts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListDrafts() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::ListDraftsRequest, ::dnd5e::api::v1alpha1::ListDraftsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::api::v1alpha1::ListDraftsRequest* request, ::dnd5e::api::v1alpha1::ListDraftsResponse* response) { return this->ListDrafts(context, request, response); }));}
    void SetMessageAllocatorFor_ListDrafts(
        ::grpc::MessageAllocator< ::dnd5e::api::v1alpha1::ListDraftsRequest, ::dnd5e::api::v1alpha1::ListDraftsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::ListDraftsRequest, ::dnd5e::api::v1alpha1::ListDraftsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListDrafts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDrafts(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListDraftsRequest* /*request*/, ::dnd5e::api::v1alpha1::ListDraftsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListDrafts(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListDraftsRequest* /*request*/, ::dnd5e::api::v1alpha1::ListDraftsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteDraft() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::DeleteDraftRequest, ::dnd5e::api::v1alpha1::DeleteDraftResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::api::v1alpha1::DeleteDraftRequest* request, ::dnd5e::api::v1alpha1::DeleteDraftResponse* response) { return this->DeleteDraft(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteDraft(
        ::grpc::MessageAllocator< ::dnd5e::api::v1alpha1::DeleteDraftRequest, ::dnd5e::api::v1alpha1::DeleteDraftResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::DeleteDraftRequest, ::dnd5e::api::v1alpha1::DeleteDraftResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDraft(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::DeleteDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::DeleteDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteDraft(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::api::v1alpha1::DeleteDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::DeleteDraftResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateName() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::UpdateNameRequest, ::dnd5e::api::v1alpha1::UpdateNameResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::api::v1alpha1::UpdateNameRequest* request, ::dnd5e::api::v1alpha1::UpdateNameResponse* response) { return this->UpdateName(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateName(
        ::grpc::MessageAllocator< ::dnd5e::api::v1alpha1::UpdateNameRequest, ::dnd5e::api::v1alpha1::UpdateNameResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::UpdateNameRequest, ::dnd5e::api::v1alpha1::UpdateNameResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateName(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateNameRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateName(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateNameRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateNameResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateRace : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateRace() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::UpdateRaceRequest, ::dnd5e::api::v1alpha1::UpdateRaceResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::api::v1alpha1::UpdateRaceRequest* request, ::dnd5e::api::v1alpha1::UpdateRaceResponse* response) { return this->UpdateRace(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateRace(
        ::grpc::MessageAllocator< ::dnd5e::api::v1alpha1::UpdateRaceRequest, ::dnd5e::api::v1alpha1::UpdateRaceResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::UpdateRaceRequest, ::dnd5e::api::v1alpha1::UpdateRaceResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateRace() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateRace(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateRaceRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateRaceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateRace(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateRaceRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateRaceResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateClass : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateClass() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::UpdateClassRequest, ::dnd5e::api::v1alpha1::UpdateClassResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::api::v1alpha1::UpdateClassRequest* request, ::dnd5e::api::v1alpha1::UpdateClassResponse* response) { return this->UpdateClass(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateClass(
        ::grpc::MessageAllocator< ::dnd5e::api::v1alpha1::UpdateClassRequest, ::dnd5e::api::v1alpha1::UpdateClassResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::UpdateClassRequest, ::dnd5e::api::v1alpha1::UpdateClassResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateClass() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateClass(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateClassRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateClassResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateClass(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateClassRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateClassResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateBackground : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateBackground() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::UpdateBackgroundRequest, ::dnd5e::api::v1alpha1::UpdateBackgroundResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::api::v1alpha1::UpdateBackgroundRequest* request, ::dnd5e::api::v1alpha1::UpdateBackgroundResponse* response) { return this->UpdateBackground(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateBackground(
        ::grpc::MessageAllocator< ::dnd5e::api::v1alpha1::UpdateBackgroundRequest, ::dnd5e::api::v1alpha1::UpdateBackgroundResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::UpdateBackgroundRequest, ::dnd5e::api::v1alpha1::UpdateBackgroundResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateBackground() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateBackground(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateBackgroundRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateBackgroundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateBackground(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateBackgroundRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateBackgroundResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateAbilityScores : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateAbilityScores() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest, ::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest* request, ::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse* response) { return this->UpdateAbilityScores(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateAbilityScores(
        ::grpc::MessageAllocator< ::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest, ::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest, ::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateAbilityScores() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAbilityScores(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateAbilityScores(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateSkills : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateSkills() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::UpdateSkillsRequest, ::dnd5e::api::v1alpha1::UpdateSkillsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::api::v1alpha1::UpdateSkillsRequest* request, ::dnd5e::api::v1alpha1::UpdateSkillsResponse* response) { return this->UpdateSkills(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateSkills(
        ::grpc::MessageAllocator< ::dnd5e::api::v1alpha1::UpdateSkillsRequest, ::dnd5e::api::v1alpha1::UpdateSkillsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::UpdateSkillsRequest, ::dnd5e::api::v1alpha1::UpdateSkillsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateSkills() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSkills(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateSkillsRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateSkillsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateSkills(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateSkillsRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateSkillsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ValidateDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ValidateDraft() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::ValidateDraftRequest, ::dnd5e::api::v1alpha1::ValidateDraftResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::api::v1alpha1::ValidateDraftRequest* request, ::dnd5e::api::v1alpha1::ValidateDraftResponse* response) { return this->ValidateDraft(context, request, response); }));}
    void SetMessageAllocatorFor_ValidateDraft(
        ::grpc::MessageAllocator< ::dnd5e::api::v1alpha1::ValidateDraftRequest, ::dnd5e::api::v1alpha1::ValidateDraftResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::ValidateDraftRequest, ::dnd5e::api::v1alpha1::ValidateDraftResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ValidateDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateDraft(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ValidateDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::ValidateDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ValidateDraft(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ValidateDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::ValidateDraftResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetDraftPreview : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetDraftPreview() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::GetDraftPreviewRequest, ::dnd5e::api::v1alpha1::GetDraftPreviewResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::api::v1alpha1::GetDraftPreviewRequest* request, ::dnd5e::api::v1alpha1::GetDraftPreviewResponse* response) { return this->GetDraftPreview(context, request, response); }));}
    void SetMessageAllocatorFor_GetDraftPreview(
        ::grpc::MessageAllocator< ::dnd5e::api::v1alpha1::GetDraftPreviewRequest, ::dnd5e::api::v1alpha1::GetDraftPreviewResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::GetDraftPreviewRequest, ::dnd5e::api::v1alpha1::GetDraftPreviewResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetDraftPreview() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDraftPreview(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetDraftPreviewRequest* /*request*/, ::dnd5e::api::v1alpha1::GetDraftPreviewResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDraftPreview(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetDraftPreviewRequest* /*request*/, ::dnd5e::api::v1alpha1::GetDraftPreviewResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_FinalizeDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_FinalizeDraft() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::FinalizeDraftRequest, ::dnd5e::api::v1alpha1::FinalizeDraftResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::api::v1alpha1::FinalizeDraftRequest* request, ::dnd5e::api::v1alpha1::FinalizeDraftResponse* response) { return this->FinalizeDraft(context, request, response); }));}
    void SetMessageAllocatorFor_FinalizeDraft(
        ::grpc::MessageAllocator< ::dnd5e::api::v1alpha1::FinalizeDraftRequest, ::dnd5e::api::v1alpha1::FinalizeDraftResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::FinalizeDraftRequest, ::dnd5e::api::v1alpha1::FinalizeDraftResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_FinalizeDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FinalizeDraft(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::FinalizeDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::FinalizeDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FinalizeDraft(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::api::v1alpha1::FinalizeDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::FinalizeDraftResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetCharacter() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::GetCharacterRequest, ::dnd5e::api::v1alpha1::GetCharacterResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::api::v1alpha1::GetCharacterRequest* request, ::dnd5e::api::v1alpha1::GetCharacterResponse* response) { return this->GetCharacter(context, request, response); }));}
    void SetMessageAllocatorFor_GetCharacter(
        ::grpc::MessageAllocator< ::dnd5e::api::v1alpha1::GetCharacterRequest, ::dnd5e::api::v1alpha1::GetCharacterResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::GetCharacterRequest, ::dnd5e::api::v1alpha1::GetCharacterResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCharacter(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetCharacterRequest* /*request*/, ::dnd5e::api::v1alpha1::GetCharacterResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetCharacter(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetCharacterRequest* /*request*/, ::dnd5e::api::v1alpha1::GetCharacterResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListCharacters : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListCharacters() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::ListCharactersRequest, ::dnd5e::api::v1alpha1::ListCharactersResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::api::v1alpha1::ListCharactersRequest* request, ::dnd5e::api::v1alpha1::ListCharactersResponse* response) { return this->ListCharacters(context, request, response); }));}
    void SetMessageAllocatorFor_ListCharacters(
        ::grpc::MessageAllocator< ::dnd5e::api::v1alpha1::ListCharactersRequest, ::dnd5e::api::v1alpha1::ListCharactersResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::ListCharactersRequest, ::dnd5e::api::v1alpha1::ListCharactersResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListCharacters() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCharacters(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListCharactersRequest* /*request*/, ::dnd5e::api::v1alpha1::ListCharactersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListCharacters(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListCharactersRequest* /*request*/, ::dnd5e::api::v1alpha1::ListCharactersResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteCharacter() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::DeleteCharacterRequest, ::dnd5e::api::v1alpha1::DeleteCharacterResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::api::v1alpha1::DeleteCharacterRequest* request, ::dnd5e::api::v1alpha1::DeleteCharacterResponse* response) { return this->DeleteCharacter(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteCharacter(
        ::grpc::MessageAllocator< ::dnd5e::api::v1alpha1::DeleteCharacterRequest, ::dnd5e::api::v1alpha1::DeleteCharacterResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::DeleteCharacterRequest, ::dnd5e::api::v1alpha1::DeleteCharacterResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteCharacter(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::DeleteCharacterRequest* /*request*/, ::dnd5e::api::v1alpha1::DeleteCharacterResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteCharacter(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::api::v1alpha1::DeleteCharacterRequest* /*request*/, ::dnd5e::api::v1alpha1::DeleteCharacterResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListRaces : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListRaces() {
      ::grpc::Service::MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::ListRacesRequest, ::dnd5e::api::v1alpha1::ListRacesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::api::v1alpha1::ListRacesRequest* request, ::dnd5e::api::v1alpha1::ListRacesResponse* response) { return this->ListRaces(context, request, response); }));}
    void SetMessageAllocatorFor_ListRaces(
        ::grpc::MessageAllocator< ::dnd5e::api::v1alpha1::ListRacesRequest, ::dnd5e::api::v1alpha1::ListRacesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::ListRacesRequest, ::dnd5e::api::v1alpha1::ListRacesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListRaces() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRaces(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListRacesRequest* /*request*/, ::dnd5e::api::v1alpha1::ListRacesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListRaces(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListRacesRequest* /*request*/, ::dnd5e::api::v1alpha1::ListRacesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListClasses : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListClasses() {
      ::grpc::Service::MarkMethodCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::ListClassesRequest, ::dnd5e::api::v1alpha1::ListClassesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::api::v1alpha1::ListClassesRequest* request, ::dnd5e::api::v1alpha1::ListClassesResponse* response) { return this->ListClasses(context, request, response); }));}
    void SetMessageAllocatorFor_ListClasses(
        ::grpc::MessageAllocator< ::dnd5e::api::v1alpha1::ListClassesRequest, ::dnd5e::api::v1alpha1::ListClassesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(17);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::ListClassesRequest, ::dnd5e::api::v1alpha1::ListClassesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListClasses() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListClasses(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListClassesRequest* /*request*/, ::dnd5e::api::v1alpha1::ListClassesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListClasses(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListClassesRequest* /*request*/, ::dnd5e::api::v1alpha1::ListClassesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListBackgrounds : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListBackgrounds() {
      ::grpc::Service::MarkMethodCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::ListBackgroundsRequest, ::dnd5e::api::v1alpha1::ListBackgroundsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::api::v1alpha1::ListBackgroundsRequest* request, ::dnd5e::api::v1alpha1::ListBackgroundsResponse* response) { return this->ListBackgrounds(context, request, response); }));}
    void SetMessageAllocatorFor_ListBackgrounds(
        ::grpc::MessageAllocator< ::dnd5e::api::v1alpha1::ListBackgroundsRequest, ::dnd5e::api::v1alpha1::ListBackgroundsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(18);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::ListBackgroundsRequest, ::dnd5e::api::v1alpha1::ListBackgroundsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListBackgrounds() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListBackgrounds(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListBackgroundsRequest* /*request*/, ::dnd5e::api::v1alpha1::ListBackgroundsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListBackgrounds(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListBackgroundsRequest* /*request*/, ::dnd5e::api::v1alpha1::ListBackgroundsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetRaceDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetRaceDetails() {
      ::grpc::Service::MarkMethodCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::GetRaceDetailsRequest, ::dnd5e::api::v1alpha1::GetRaceDetailsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::api::v1alpha1::GetRaceDetailsRequest* request, ::dnd5e::api::v1alpha1::GetRaceDetailsResponse* response) { return this->GetRaceDetails(context, request, response); }));}
    void SetMessageAllocatorFor_GetRaceDetails(
        ::grpc::MessageAllocator< ::dnd5e::api::v1alpha1::GetRaceDetailsRequest, ::dnd5e::api::v1alpha1::GetRaceDetailsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(19);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::GetRaceDetailsRequest, ::dnd5e::api::v1alpha1::GetRaceDetailsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetRaceDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRaceDetails(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetRaceDetailsRequest* /*request*/, ::dnd5e::api::v1alpha1::GetRaceDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRaceDetails(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetRaceDetailsRequest* /*request*/, ::dnd5e::api::v1alpha1::GetRaceDetailsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetClassDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetClassDetails() {
      ::grpc::Service::MarkMethodCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::GetClassDetailsRequest, ::dnd5e::api::v1alpha1::GetClassDetailsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::api::v1alpha1::GetClassDetailsRequest* request, ::dnd5e::api::v1alpha1::GetClassDetailsResponse* response) { return this->GetClassDetails(context, request, response); }));}
    void SetMessageAllocatorFor_GetClassDetails(
        ::grpc::MessageAllocator< ::dnd5e::api::v1alpha1::GetClassDetailsRequest, ::dnd5e::api::v1alpha1::GetClassDetailsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(20);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::GetClassDetailsRequest, ::dnd5e::api::v1alpha1::GetClassDetailsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetClassDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetClassDetails(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetClassDetailsRequest* /*request*/, ::dnd5e::api::v1alpha1::GetClassDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetClassDetails(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetClassDetailsRequest* /*request*/, ::dnd5e::api::v1alpha1::GetClassDetailsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetBackgroundDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetBackgroundDetails() {
      ::grpc::Service::MarkMethodCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest, ::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest* request, ::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse* response) { return this->GetBackgroundDetails(context, request, response); }));}
    void SetMessageAllocatorFor_GetBackgroundDetails(
        ::grpc::MessageAllocator< ::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest, ::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(21);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest, ::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetBackgroundDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBackgroundDetails(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest* /*request*/, ::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetBackgroundDetails(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest* /*request*/, ::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetFeature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetFeature() {
      ::grpc::Service::MarkMethodCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::GetFeatureRequest, ::dnd5e::api::v1alpha1::GetFeatureResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::api::v1alpha1::GetFeatureRequest* request, ::dnd5e::api::v1alpha1::GetFeatureResponse* response) { return this->GetFeature(context, request, response); }));}
    void SetMessageAllocatorFor_GetFeature(
        ::grpc::MessageAllocator< ::dnd5e::api::v1alpha1::GetFeatureRequest, ::dnd5e::api::v1alpha1::GetFeatureResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(22);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::GetFeatureRequest, ::dnd5e::api::v1alpha1::GetFeatureResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetFeature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFeature(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetFeatureRequest* /*request*/, ::dnd5e::api::v1alpha1::GetFeatureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetFeature(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetFeatureRequest* /*request*/, ::dnd5e::api::v1alpha1::GetFeatureResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RollAbilityScores : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RollAbilityScores() {
      ::grpc::Service::MarkMethodCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::RollAbilityScoresRequest, ::dnd5e::api::v1alpha1::RollAbilityScoresResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::api::v1alpha1::RollAbilityScoresRequest* request, ::dnd5e::api::v1alpha1::RollAbilityScoresResponse* response) { return this->RollAbilityScores(context, request, response); }));}
    void SetMessageAllocatorFor_RollAbilityScores(
        ::grpc::MessageAllocator< ::dnd5e::api::v1alpha1::RollAbilityScoresRequest, ::dnd5e::api::v1alpha1::RollAbilityScoresResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(23);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::RollAbilityScoresRequest, ::dnd5e::api::v1alpha1::RollAbilityScoresResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RollAbilityScores() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RollAbilityScores(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::RollAbilityScoresRequest* /*request*/, ::dnd5e::api::v1alpha1::RollAbilityScoresResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RollAbilityScores(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::api::v1alpha1::RollAbilityScoresRequest* /*request*/, ::dnd5e::api::v1alpha1::RollAbilityScoresResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListEquipmentByType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListEquipmentByType() {
      ::grpc::Service::MarkMethodCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest, ::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest* request, ::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse* response) { return this->ListEquipmentByType(context, request, response); }));}
    void SetMessageAllocatorFor_ListEquipmentByType(
        ::grpc::MessageAllocator< ::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest, ::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(24);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest, ::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListEquipmentByType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListEquipmentByType(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest* /*request*/, ::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListEquipmentByType(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest* /*request*/, ::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListSpellsByLevel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListSpellsByLevel() {
      ::grpc::Service::MarkMethodCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::ListSpellsByLevelRequest, ::dnd5e::api::v1alpha1::ListSpellsByLevelResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::api::v1alpha1::ListSpellsByLevelRequest* request, ::dnd5e::api::v1alpha1::ListSpellsByLevelResponse* response) { return this->ListSpellsByLevel(context, request, response); }));}
    void SetMessageAllocatorFor_ListSpellsByLevel(
        ::grpc::MessageAllocator< ::dnd5e::api::v1alpha1::ListSpellsByLevelRequest, ::dnd5e::api::v1alpha1::ListSpellsByLevelResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(25);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::ListSpellsByLevelRequest, ::dnd5e::api::v1alpha1::ListSpellsByLevelResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListSpellsByLevel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListSpellsByLevel(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListSpellsByLevelRequest* /*request*/, ::dnd5e::api::v1alpha1::ListSpellsByLevelResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListSpellsByLevel(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListSpellsByLevelRequest* /*request*/, ::dnd5e::api::v1alpha1::ListSpellsByLevelResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetCharacterInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetCharacterInventory() {
      ::grpc::Service::MarkMethodCallback(26,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::GetCharacterInventoryRequest, ::dnd5e::api::v1alpha1::GetCharacterInventoryResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::api::v1alpha1::GetCharacterInventoryRequest* request, ::dnd5e::api::v1alpha1::GetCharacterInventoryResponse* response) { return this->GetCharacterInventory(context, request, response); }));}
    void SetMessageAllocatorFor_GetCharacterInventory(
        ::grpc::MessageAllocator< ::dnd5e::api::v1alpha1::GetCharacterInventoryRequest, ::dnd5e::api::v1alpha1::GetCharacterInventoryResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(26);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::GetCharacterInventoryRequest, ::dnd5e::api::v1alpha1::GetCharacterInventoryResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetCharacterInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCharacterInventory(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetCharacterInventoryRequest* /*request*/, ::dnd5e::api::v1alpha1::GetCharacterInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetCharacterInventory(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetCharacterInventoryRequest* /*request*/, ::dnd5e::api::v1alpha1::GetCharacterInventoryResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_EquipItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_EquipItem() {
      ::grpc::Service::MarkMethodCallback(27,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::EquipItemRequest, ::dnd5e::api::v1alpha1::EquipItemResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::api::v1alpha1::EquipItemRequest* request, ::dnd5e::api::v1alpha1::EquipItemResponse* response) { return this->EquipItem(context, request, response); }));}
    void SetMessageAllocatorFor_EquipItem(
        ::grpc::MessageAllocator< ::dnd5e::api::v1alpha1::EquipItemRequest, ::dnd5e::api::v1alpha1::EquipItemResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(27);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::EquipItemRequest, ::dnd5e::api::v1alpha1::EquipItemResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_EquipItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EquipItem(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::EquipItemRequest* /*request*/, ::dnd5e::api::v1alpha1::EquipItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* EquipItem(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::api::v1alpha1::EquipItemRequest* /*request*/, ::dnd5e::api::v1alpha1::EquipItemResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UnequipItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UnequipItem() {
      ::grpc::Service::MarkMethodCallback(28,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::UnequipItemRequest, ::dnd5e::api::v1alpha1::UnequipItemResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::api::v1alpha1::UnequipItemRequest* request, ::dnd5e::api::v1alpha1::UnequipItemResponse* response) { return this->UnequipItem(context, request, response); }));}
    void SetMessageAllocatorFor_UnequipItem(
        ::grpc::MessageAllocator< ::dnd5e::api::v1alpha1::UnequipItemRequest, ::dnd5e::api::v1alpha1::UnequipItemResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(28);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::UnequipItemRequest, ::dnd5e::api::v1alpha1::UnequipItemResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UnequipItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnequipItem(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UnequipItemRequest* /*request*/, ::dnd5e::api::v1alpha1::UnequipItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UnequipItem(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UnequipItemRequest* /*request*/, ::dnd5e::api::v1alpha1::UnequipItemResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AddToInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AddToInventory() {
      ::grpc::Service::MarkMethodCallback(29,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::AddToInventoryRequest, ::dnd5e::api::v1alpha1::AddToInventoryResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::api::v1alpha1::AddToInventoryRequest* request, ::dnd5e::api::v1alpha1::AddToInventoryResponse* response) { return this->AddToInventory(context, request, response); }));}
    void SetMessageAllocatorFor_AddToInventory(
        ::grpc::MessageAllocator< ::dnd5e::api::v1alpha1::AddToInventoryRequest, ::dnd5e::api::v1alpha1::AddToInventoryResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(29);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::AddToInventoryRequest, ::dnd5e::api::v1alpha1::AddToInventoryResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AddToInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddToInventory(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::AddToInventoryRequest* /*request*/, ::dnd5e::api::v1alpha1::AddToInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddToInventory(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::api::v1alpha1::AddToInventoryRequest* /*request*/, ::dnd5e::api::v1alpha1::AddToInventoryResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RemoveFromInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RemoveFromInventory() {
      ::grpc::Service::MarkMethodCallback(30,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::RemoveFromInventoryRequest, ::dnd5e::api::v1alpha1::RemoveFromInventoryResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::api::v1alpha1::RemoveFromInventoryRequest* request, ::dnd5e::api::v1alpha1::RemoveFromInventoryResponse* response) { return this->RemoveFromInventory(context, request, response); }));}
    void SetMessageAllocatorFor_RemoveFromInventory(
        ::grpc::MessageAllocator< ::dnd5e::api::v1alpha1::RemoveFromInventoryRequest, ::dnd5e::api::v1alpha1::RemoveFromInventoryResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(30);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::api::v1alpha1::RemoveFromInventoryRequest, ::dnd5e::api::v1alpha1::RemoveFromInventoryResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RemoveFromInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveFromInventory(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::RemoveFromInventoryRequest* /*request*/, ::dnd5e::api::v1alpha1::RemoveFromInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveFromInventory(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::api::v1alpha1::RemoveFromInventoryRequest* /*request*/, ::dnd5e::api::v1alpha1::RemoveFromInventoryResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_CreateDraft<WithCallbackMethod_GetDraft<WithCallbackMethod_ListDrafts<WithCallbackMethod_DeleteDraft<WithCallbackMethod_UpdateName<WithCallbackMethod_UpdateRace<WithCallbackMethod_UpdateClass<WithCallbackMethod_UpdateBackground<WithCallbackMethod_UpdateAbilityScores<WithCallbackMethod_UpdateSkills<WithCallbackMethod_ValidateDraft<WithCallbackMethod_GetDraftPreview<WithCallbackMethod_FinalizeDraft<WithCallbackMethod_GetCharacter<WithCallbackMethod_ListCharacters<WithCallbackMethod_DeleteCharacter<WithCallbackMethod_ListRaces<WithCallbackMethod_ListClasses<WithCallbackMethod_ListBackgrounds<WithCallbackMethod_GetRaceDetails<WithCallbackMethod_GetClassDetails<WithCallbackMethod_GetBackgroundDetails<WithCallbackMethod_GetFeature<WithCallbackMethod_RollAbilityScores<WithCallbackMethod_ListEquipmentByType<WithCallbackMethod_ListSpellsByLevel<WithCallbackMethod_GetCharacterInventory<WithCallbackMethod_EquipItem<WithCallbackMethod_UnequipItem<WithCallbackMethod_AddToInventory<WithCallbackMethod_RemoveFromInventory<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_CreateDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateDraft() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDraft(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::CreateDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::CreateDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetDraft() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDraft(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::GetDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListDrafts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListDrafts() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_ListDrafts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDrafts(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListDraftsRequest* /*request*/, ::dnd5e::api::v1alpha1::ListDraftsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteDraft() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_DeleteDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDraft(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::DeleteDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::DeleteDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateName() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_UpdateName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateName(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateNameRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateRace : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateRace() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_UpdateRace() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateRace(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateRaceRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateRaceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateClass : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateClass() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_UpdateClass() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateClass(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateClassRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateClassResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateBackground : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateBackground() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_UpdateBackground() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateBackground(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateBackgroundRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateBackgroundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateAbilityScores : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateAbilityScores() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_UpdateAbilityScores() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAbilityScores(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateSkills : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateSkills() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_UpdateSkills() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSkills(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateSkillsRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateSkillsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ValidateDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ValidateDraft() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_ValidateDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateDraft(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ValidateDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::ValidateDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDraftPreview : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetDraftPreview() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_GetDraftPreview() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDraftPreview(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetDraftPreviewRequest* /*request*/, ::dnd5e::api::v1alpha1::GetDraftPreviewResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_FinalizeDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_FinalizeDraft() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_FinalizeDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FinalizeDraft(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::FinalizeDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::FinalizeDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetCharacter() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_GetCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCharacter(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetCharacterRequest* /*request*/, ::dnd5e::api::v1alpha1::GetCharacterResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListCharacters : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListCharacters() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_ListCharacters() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCharacters(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListCharactersRequest* /*request*/, ::dnd5e::api::v1alpha1::ListCharactersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteCharacter() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_DeleteCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteCharacter(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::DeleteCharacterRequest* /*request*/, ::dnd5e::api::v1alpha1::DeleteCharacterResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListRaces : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListRaces() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_ListRaces() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRaces(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListRacesRequest* /*request*/, ::dnd5e::api::v1alpha1::ListRacesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListClasses : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListClasses() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_ListClasses() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListClasses(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListClassesRequest* /*request*/, ::dnd5e::api::v1alpha1::ListClassesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListBackgrounds : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListBackgrounds() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_ListBackgrounds() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListBackgrounds(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListBackgroundsRequest* /*request*/, ::dnd5e::api::v1alpha1::ListBackgroundsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRaceDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetRaceDetails() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_GetRaceDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRaceDetails(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetRaceDetailsRequest* /*request*/, ::dnd5e::api::v1alpha1::GetRaceDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetClassDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetClassDetails() {
      ::grpc::Service::MarkMethodGeneric(20);
    }
    ~WithGenericMethod_GetClassDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetClassDetails(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetClassDetailsRequest* /*request*/, ::dnd5e::api::v1alpha1::GetClassDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetBackgroundDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetBackgroundDetails() {
      ::grpc::Service::MarkMethodGeneric(21);
    }
    ~WithGenericMethod_GetBackgroundDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBackgroundDetails(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest* /*request*/, ::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetFeature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetFeature() {
      ::grpc::Service::MarkMethodGeneric(22);
    }
    ~WithGenericMethod_GetFeature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFeature(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetFeatureRequest* /*request*/, ::dnd5e::api::v1alpha1::GetFeatureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RollAbilityScores : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RollAbilityScores() {
      ::grpc::Service::MarkMethodGeneric(23);
    }
    ~WithGenericMethod_RollAbilityScores() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RollAbilityScores(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::RollAbilityScoresRequest* /*request*/, ::dnd5e::api::v1alpha1::RollAbilityScoresResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListEquipmentByType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListEquipmentByType() {
      ::grpc::Service::MarkMethodGeneric(24);
    }
    ~WithGenericMethod_ListEquipmentByType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListEquipmentByType(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest* /*request*/, ::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListSpellsByLevel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListSpellsByLevel() {
      ::grpc::Service::MarkMethodGeneric(25);
    }
    ~WithGenericMethod_ListSpellsByLevel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListSpellsByLevel(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListSpellsByLevelRequest* /*request*/, ::dnd5e::api::v1alpha1::ListSpellsByLevelResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetCharacterInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetCharacterInventory() {
      ::grpc::Service::MarkMethodGeneric(26);
    }
    ~WithGenericMethod_GetCharacterInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCharacterInventory(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetCharacterInventoryRequest* /*request*/, ::dnd5e::api::v1alpha1::GetCharacterInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_EquipItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_EquipItem() {
      ::grpc::Service::MarkMethodGeneric(27);
    }
    ~WithGenericMethod_EquipItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EquipItem(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::EquipItemRequest* /*request*/, ::dnd5e::api::v1alpha1::EquipItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UnequipItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UnequipItem() {
      ::grpc::Service::MarkMethodGeneric(28);
    }
    ~WithGenericMethod_UnequipItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnequipItem(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UnequipItemRequest* /*request*/, ::dnd5e::api::v1alpha1::UnequipItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddToInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddToInventory() {
      ::grpc::Service::MarkMethodGeneric(29);
    }
    ~WithGenericMethod_AddToInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddToInventory(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::AddToInventoryRequest* /*request*/, ::dnd5e::api::v1alpha1::AddToInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RemoveFromInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RemoveFromInventory() {
      ::grpc::Service::MarkMethodGeneric(30);
    }
    ~WithGenericMethod_RemoveFromInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveFromInventory(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::RemoveFromInventoryRequest* /*request*/, ::dnd5e::api::v1alpha1::RemoveFromInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateDraft() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_CreateDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDraft(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::CreateDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::CreateDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateDraft(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetDraft() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_GetDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDraft(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::GetDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDraft(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListDrafts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListDrafts() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_ListDrafts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDrafts(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListDraftsRequest* /*request*/, ::dnd5e::api::v1alpha1::ListDraftsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListDrafts(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteDraft() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_DeleteDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDraft(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::DeleteDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::DeleteDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteDraft(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateName() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_UpdateName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateName(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateNameRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateName(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateRace : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateRace() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_UpdateRace() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateRace(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateRaceRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateRaceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateRace(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateClass : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateClass() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_UpdateClass() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateClass(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateClassRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateClassResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateClass(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateBackground : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateBackground() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_UpdateBackground() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateBackground(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateBackgroundRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateBackgroundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateBackground(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateAbilityScores : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateAbilityScores() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_UpdateAbilityScores() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAbilityScores(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateAbilityScores(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateSkills : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateSkills() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_UpdateSkills() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSkills(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateSkillsRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateSkillsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateSkills(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ValidateDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ValidateDraft() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_ValidateDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateDraft(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ValidateDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::ValidateDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestValidateDraft(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetDraftPreview : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetDraftPreview() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_GetDraftPreview() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDraftPreview(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetDraftPreviewRequest* /*request*/, ::dnd5e::api::v1alpha1::GetDraftPreviewResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDraftPreview(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_FinalizeDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_FinalizeDraft() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_FinalizeDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FinalizeDraft(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::FinalizeDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::FinalizeDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFinalizeDraft(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetCharacter() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_GetCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCharacter(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetCharacterRequest* /*request*/, ::dnd5e::api::v1alpha1::GetCharacterResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCharacter(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListCharacters : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListCharacters() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_ListCharacters() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCharacters(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListCharactersRequest* /*request*/, ::dnd5e::api::v1alpha1::ListCharactersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListCharacters(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteCharacter() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_DeleteCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteCharacter(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::DeleteCharacterRequest* /*request*/, ::dnd5e::api::v1alpha1::DeleteCharacterResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteCharacter(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListRaces : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListRaces() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_ListRaces() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRaces(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListRacesRequest* /*request*/, ::dnd5e::api::v1alpha1::ListRacesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListRaces(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListClasses : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListClasses() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_ListClasses() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListClasses(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListClassesRequest* /*request*/, ::dnd5e::api::v1alpha1::ListClassesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListClasses(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListBackgrounds : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListBackgrounds() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_ListBackgrounds() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListBackgrounds(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListBackgroundsRequest* /*request*/, ::dnd5e::api::v1alpha1::ListBackgroundsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListBackgrounds(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetRaceDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetRaceDetails() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_GetRaceDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRaceDetails(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetRaceDetailsRequest* /*request*/, ::dnd5e::api::v1alpha1::GetRaceDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRaceDetails(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetClassDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetClassDetails() {
      ::grpc::Service::MarkMethodRaw(20);
    }
    ~WithRawMethod_GetClassDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetClassDetails(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetClassDetailsRequest* /*request*/, ::dnd5e::api::v1alpha1::GetClassDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetClassDetails(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetBackgroundDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetBackgroundDetails() {
      ::grpc::Service::MarkMethodRaw(21);
    }
    ~WithRawMethod_GetBackgroundDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBackgroundDetails(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest* /*request*/, ::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBackgroundDetails(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetFeature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetFeature() {
      ::grpc::Service::MarkMethodRaw(22);
    }
    ~WithRawMethod_GetFeature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFeature(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetFeatureRequest* /*request*/, ::dnd5e::api::v1alpha1::GetFeatureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFeature(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RollAbilityScores : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RollAbilityScores() {
      ::grpc::Service::MarkMethodRaw(23);
    }
    ~WithRawMethod_RollAbilityScores() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RollAbilityScores(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::RollAbilityScoresRequest* /*request*/, ::dnd5e::api::v1alpha1::RollAbilityScoresResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRollAbilityScores(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListEquipmentByType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListEquipmentByType() {
      ::grpc::Service::MarkMethodRaw(24);
    }
    ~WithRawMethod_ListEquipmentByType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListEquipmentByType(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest* /*request*/, ::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListEquipmentByType(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListSpellsByLevel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListSpellsByLevel() {
      ::grpc::Service::MarkMethodRaw(25);
    }
    ~WithRawMethod_ListSpellsByLevel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListSpellsByLevel(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListSpellsByLevelRequest* /*request*/, ::dnd5e::api::v1alpha1::ListSpellsByLevelResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListSpellsByLevel(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetCharacterInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetCharacterInventory() {
      ::grpc::Service::MarkMethodRaw(26);
    }
    ~WithRawMethod_GetCharacterInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCharacterInventory(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetCharacterInventoryRequest* /*request*/, ::dnd5e::api::v1alpha1::GetCharacterInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCharacterInventory(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_EquipItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_EquipItem() {
      ::grpc::Service::MarkMethodRaw(27);
    }
    ~WithRawMethod_EquipItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EquipItem(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::EquipItemRequest* /*request*/, ::dnd5e::api::v1alpha1::EquipItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEquipItem(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UnequipItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UnequipItem() {
      ::grpc::Service::MarkMethodRaw(28);
    }
    ~WithRawMethod_UnequipItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnequipItem(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UnequipItemRequest* /*request*/, ::dnd5e::api::v1alpha1::UnequipItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUnequipItem(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddToInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddToInventory() {
      ::grpc::Service::MarkMethodRaw(29);
    }
    ~WithRawMethod_AddToInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddToInventory(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::AddToInventoryRequest* /*request*/, ::dnd5e::api::v1alpha1::AddToInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddToInventory(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(29, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RemoveFromInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RemoveFromInventory() {
      ::grpc::Service::MarkMethodRaw(30);
    }
    ~WithRawMethod_RemoveFromInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveFromInventory(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::RemoveFromInventoryRequest* /*request*/, ::dnd5e::api::v1alpha1::RemoveFromInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveFromInventory(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(30, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateDraft() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateDraft(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDraft(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::CreateDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::CreateDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateDraft(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetDraft() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetDraft(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDraft(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::GetDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDraft(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListDrafts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListDrafts() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListDrafts(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListDrafts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDrafts(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListDraftsRequest* /*request*/, ::dnd5e::api::v1alpha1::ListDraftsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListDrafts(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteDraft() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteDraft(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDraft(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::DeleteDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::DeleteDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteDraft(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateName() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateName(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateName(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateNameRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateName(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateRace : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateRace() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateRace(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateRace() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateRace(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateRaceRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateRaceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateRace(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateClass : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateClass() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateClass(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateClass() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateClass(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateClassRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateClassResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateClass(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateBackground : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateBackground() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateBackground(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateBackground() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateBackground(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateBackgroundRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateBackgroundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateBackground(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateAbilityScores : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateAbilityScores() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateAbilityScores(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateAbilityScores() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateAbilityScores(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateAbilityScores(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateSkills : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateSkills() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateSkills(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateSkills() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSkills(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateSkillsRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateSkillsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateSkills(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ValidateDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ValidateDraft() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ValidateDraft(context, request, response); }));
    }
    ~WithRawCallbackMethod_ValidateDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateDraft(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ValidateDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::ValidateDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ValidateDraft(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetDraftPreview : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetDraftPreview() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetDraftPreview(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetDraftPreview() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDraftPreview(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetDraftPreviewRequest* /*request*/, ::dnd5e::api::v1alpha1::GetDraftPreviewResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDraftPreview(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_FinalizeDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_FinalizeDraft() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->FinalizeDraft(context, request, response); }));
    }
    ~WithRawCallbackMethod_FinalizeDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FinalizeDraft(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::FinalizeDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::FinalizeDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FinalizeDraft(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetCharacter() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetCharacter(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCharacter(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetCharacterRequest* /*request*/, ::dnd5e::api::v1alpha1::GetCharacterResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetCharacter(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListCharacters : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListCharacters() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListCharacters(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListCharacters() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCharacters(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListCharactersRequest* /*request*/, ::dnd5e::api::v1alpha1::ListCharactersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListCharacters(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteCharacter() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteCharacter(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteCharacter(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::DeleteCharacterRequest* /*request*/, ::dnd5e::api::v1alpha1::DeleteCharacterResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteCharacter(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListRaces : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListRaces() {
      ::grpc::Service::MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListRaces(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListRaces() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRaces(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListRacesRequest* /*request*/, ::dnd5e::api::v1alpha1::ListRacesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListRaces(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListClasses : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListClasses() {
      ::grpc::Service::MarkMethodRawCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListClasses(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListClasses() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListClasses(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListClassesRequest* /*request*/, ::dnd5e::api::v1alpha1::ListClassesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListClasses(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListBackgrounds : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListBackgrounds() {
      ::grpc::Service::MarkMethodRawCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListBackgrounds(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListBackgrounds() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListBackgrounds(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListBackgroundsRequest* /*request*/, ::dnd5e::api::v1alpha1::ListBackgroundsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListBackgrounds(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetRaceDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetRaceDetails() {
      ::grpc::Service::MarkMethodRawCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetRaceDetails(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetRaceDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRaceDetails(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetRaceDetailsRequest* /*request*/, ::dnd5e::api::v1alpha1::GetRaceDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRaceDetails(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetClassDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetClassDetails() {
      ::grpc::Service::MarkMethodRawCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetClassDetails(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetClassDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetClassDetails(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetClassDetailsRequest* /*request*/, ::dnd5e::api::v1alpha1::GetClassDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetClassDetails(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetBackgroundDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetBackgroundDetails() {
      ::grpc::Service::MarkMethodRawCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetBackgroundDetails(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetBackgroundDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBackgroundDetails(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest* /*request*/, ::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetBackgroundDetails(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetFeature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetFeature() {
      ::grpc::Service::MarkMethodRawCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetFeature(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetFeature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFeature(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetFeatureRequest* /*request*/, ::dnd5e::api::v1alpha1::GetFeatureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetFeature(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RollAbilityScores : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RollAbilityScores() {
      ::grpc::Service::MarkMethodRawCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RollAbilityScores(context, request, response); }));
    }
    ~WithRawCallbackMethod_RollAbilityScores() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RollAbilityScores(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::RollAbilityScoresRequest* /*request*/, ::dnd5e::api::v1alpha1::RollAbilityScoresResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RollAbilityScores(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListEquipmentByType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListEquipmentByType() {
      ::grpc::Service::MarkMethodRawCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListEquipmentByType(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListEquipmentByType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListEquipmentByType(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest* /*request*/, ::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListEquipmentByType(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListSpellsByLevel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListSpellsByLevel() {
      ::grpc::Service::MarkMethodRawCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListSpellsByLevel(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListSpellsByLevel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListSpellsByLevel(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListSpellsByLevelRequest* /*request*/, ::dnd5e::api::v1alpha1::ListSpellsByLevelResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListSpellsByLevel(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetCharacterInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetCharacterInventory() {
      ::grpc::Service::MarkMethodRawCallback(26,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetCharacterInventory(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetCharacterInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCharacterInventory(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetCharacterInventoryRequest* /*request*/, ::dnd5e::api::v1alpha1::GetCharacterInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetCharacterInventory(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_EquipItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_EquipItem() {
      ::grpc::Service::MarkMethodRawCallback(27,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->EquipItem(context, request, response); }));
    }
    ~WithRawCallbackMethod_EquipItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EquipItem(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::EquipItemRequest* /*request*/, ::dnd5e::api::v1alpha1::EquipItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* EquipItem(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UnequipItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UnequipItem() {
      ::grpc::Service::MarkMethodRawCallback(28,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UnequipItem(context, request, response); }));
    }
    ~WithRawCallbackMethod_UnequipItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnequipItem(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UnequipItemRequest* /*request*/, ::dnd5e::api::v1alpha1::UnequipItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UnequipItem(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AddToInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AddToInventory() {
      ::grpc::Service::MarkMethodRawCallback(29,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddToInventory(context, request, response); }));
    }
    ~WithRawCallbackMethod_AddToInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddToInventory(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::AddToInventoryRequest* /*request*/, ::dnd5e::api::v1alpha1::AddToInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddToInventory(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RemoveFromInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RemoveFromInventory() {
      ::grpc::Service::MarkMethodRawCallback(30,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RemoveFromInventory(context, request, response); }));
    }
    ~WithRawCallbackMethod_RemoveFromInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveFromInventory(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::RemoveFromInventoryRequest* /*request*/, ::dnd5e::api::v1alpha1::RemoveFromInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveFromInventory(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateDraft() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::api::v1alpha1::CreateDraftRequest, ::dnd5e::api::v1alpha1::CreateDraftResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::api::v1alpha1::CreateDraftRequest, ::dnd5e::api::v1alpha1::CreateDraftResponse>* streamer) {
                       return this->StreamedCreateDraft(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateDraft(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::CreateDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::CreateDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateDraft(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::api::v1alpha1::CreateDraftRequest,::dnd5e::api::v1alpha1::CreateDraftResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetDraft() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::api::v1alpha1::GetDraftRequest, ::dnd5e::api::v1alpha1::GetDraftResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::api::v1alpha1::GetDraftRequest, ::dnd5e::api::v1alpha1::GetDraftResponse>* streamer) {
                       return this->StreamedGetDraft(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDraft(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::GetDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetDraft(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::api::v1alpha1::GetDraftRequest,::dnd5e::api::v1alpha1::GetDraftResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListDrafts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListDrafts() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::api::v1alpha1::ListDraftsRequest, ::dnd5e::api::v1alpha1::ListDraftsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::api::v1alpha1::ListDraftsRequest, ::dnd5e::api::v1alpha1::ListDraftsResponse>* streamer) {
                       return this->StreamedListDrafts(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListDrafts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListDrafts(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListDraftsRequest* /*request*/, ::dnd5e::api::v1alpha1::ListDraftsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListDrafts(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::api::v1alpha1::ListDraftsRequest,::dnd5e::api::v1alpha1::ListDraftsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteDraft() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::api::v1alpha1::DeleteDraftRequest, ::dnd5e::api::v1alpha1::DeleteDraftResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::api::v1alpha1::DeleteDraftRequest, ::dnd5e::api::v1alpha1::DeleteDraftResponse>* streamer) {
                       return this->StreamedDeleteDraft(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteDraft(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::DeleteDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::DeleteDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteDraft(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::api::v1alpha1::DeleteDraftRequest,::dnd5e::api::v1alpha1::DeleteDraftResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateName() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::api::v1alpha1::UpdateNameRequest, ::dnd5e::api::v1alpha1::UpdateNameResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::api::v1alpha1::UpdateNameRequest, ::dnd5e::api::v1alpha1::UpdateNameResponse>* streamer) {
                       return this->StreamedUpdateName(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateName(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateNameRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateNameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateName(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::api::v1alpha1::UpdateNameRequest,::dnd5e::api::v1alpha1::UpdateNameResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateRace : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateRace() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::api::v1alpha1::UpdateRaceRequest, ::dnd5e::api::v1alpha1::UpdateRaceResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::api::v1alpha1::UpdateRaceRequest, ::dnd5e::api::v1alpha1::UpdateRaceResponse>* streamer) {
                       return this->StreamedUpdateRace(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateRace() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateRace(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateRaceRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateRaceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateRace(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::api::v1alpha1::UpdateRaceRequest,::dnd5e::api::v1alpha1::UpdateRaceResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateClass : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateClass() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::api::v1alpha1::UpdateClassRequest, ::dnd5e::api::v1alpha1::UpdateClassResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::api::v1alpha1::UpdateClassRequest, ::dnd5e::api::v1alpha1::UpdateClassResponse>* streamer) {
                       return this->StreamedUpdateClass(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateClass() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateClass(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateClassRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateClassResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateClass(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::api::v1alpha1::UpdateClassRequest,::dnd5e::api::v1alpha1::UpdateClassResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateBackground : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateBackground() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::api::v1alpha1::UpdateBackgroundRequest, ::dnd5e::api::v1alpha1::UpdateBackgroundResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::api::v1alpha1::UpdateBackgroundRequest, ::dnd5e::api::v1alpha1::UpdateBackgroundResponse>* streamer) {
                       return this->StreamedUpdateBackground(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateBackground() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateBackground(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateBackgroundRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateBackgroundResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateBackground(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::api::v1alpha1::UpdateBackgroundRequest,::dnd5e::api::v1alpha1::UpdateBackgroundResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateAbilityScores : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateAbilityScores() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest, ::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest, ::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse>* streamer) {
                       return this->StreamedUpdateAbilityScores(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateAbilityScores() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateAbilityScores(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateAbilityScores(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest,::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateSkills : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateSkills() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::api::v1alpha1::UpdateSkillsRequest, ::dnd5e::api::v1alpha1::UpdateSkillsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::api::v1alpha1::UpdateSkillsRequest, ::dnd5e::api::v1alpha1::UpdateSkillsResponse>* streamer) {
                       return this->StreamedUpdateSkills(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateSkills() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateSkills(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UpdateSkillsRequest* /*request*/, ::dnd5e::api::v1alpha1::UpdateSkillsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateSkills(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::api::v1alpha1::UpdateSkillsRequest,::dnd5e::api::v1alpha1::UpdateSkillsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ValidateDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ValidateDraft() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::api::v1alpha1::ValidateDraftRequest, ::dnd5e::api::v1alpha1::ValidateDraftResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::api::v1alpha1::ValidateDraftRequest, ::dnd5e::api::v1alpha1::ValidateDraftResponse>* streamer) {
                       return this->StreamedValidateDraft(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ValidateDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ValidateDraft(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ValidateDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::ValidateDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedValidateDraft(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::api::v1alpha1::ValidateDraftRequest,::dnd5e::api::v1alpha1::ValidateDraftResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetDraftPreview : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetDraftPreview() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::api::v1alpha1::GetDraftPreviewRequest, ::dnd5e::api::v1alpha1::GetDraftPreviewResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::api::v1alpha1::GetDraftPreviewRequest, ::dnd5e::api::v1alpha1::GetDraftPreviewResponse>* streamer) {
                       return this->StreamedGetDraftPreview(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetDraftPreview() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDraftPreview(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetDraftPreviewRequest* /*request*/, ::dnd5e::api::v1alpha1::GetDraftPreviewResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetDraftPreview(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::api::v1alpha1::GetDraftPreviewRequest,::dnd5e::api::v1alpha1::GetDraftPreviewResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_FinalizeDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_FinalizeDraft() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::api::v1alpha1::FinalizeDraftRequest, ::dnd5e::api::v1alpha1::FinalizeDraftResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::api::v1alpha1::FinalizeDraftRequest, ::dnd5e::api::v1alpha1::FinalizeDraftResponse>* streamer) {
                       return this->StreamedFinalizeDraft(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_FinalizeDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status FinalizeDraft(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::FinalizeDraftRequest* /*request*/, ::dnd5e::api::v1alpha1::FinalizeDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFinalizeDraft(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::api::v1alpha1::FinalizeDraftRequest,::dnd5e::api::v1alpha1::FinalizeDraftResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetCharacter() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::api::v1alpha1::GetCharacterRequest, ::dnd5e::api::v1alpha1::GetCharacterResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::api::v1alpha1::GetCharacterRequest, ::dnd5e::api::v1alpha1::GetCharacterResponse>* streamer) {
                       return this->StreamedGetCharacter(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetCharacter(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetCharacterRequest* /*request*/, ::dnd5e::api::v1alpha1::GetCharacterResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetCharacter(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::api::v1alpha1::GetCharacterRequest,::dnd5e::api::v1alpha1::GetCharacterResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListCharacters : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListCharacters() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::api::v1alpha1::ListCharactersRequest, ::dnd5e::api::v1alpha1::ListCharactersResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::api::v1alpha1::ListCharactersRequest, ::dnd5e::api::v1alpha1::ListCharactersResponse>* streamer) {
                       return this->StreamedListCharacters(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListCharacters() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListCharacters(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListCharactersRequest* /*request*/, ::dnd5e::api::v1alpha1::ListCharactersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListCharacters(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::api::v1alpha1::ListCharactersRequest,::dnd5e::api::v1alpha1::ListCharactersResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteCharacter() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::api::v1alpha1::DeleteCharacterRequest, ::dnd5e::api::v1alpha1::DeleteCharacterResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::api::v1alpha1::DeleteCharacterRequest, ::dnd5e::api::v1alpha1::DeleteCharacterResponse>* streamer) {
                       return this->StreamedDeleteCharacter(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteCharacter(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::DeleteCharacterRequest* /*request*/, ::dnd5e::api::v1alpha1::DeleteCharacterResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteCharacter(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::api::v1alpha1::DeleteCharacterRequest,::dnd5e::api::v1alpha1::DeleteCharacterResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListRaces : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListRaces() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::api::v1alpha1::ListRacesRequest, ::dnd5e::api::v1alpha1::ListRacesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::api::v1alpha1::ListRacesRequest, ::dnd5e::api::v1alpha1::ListRacesResponse>* streamer) {
                       return this->StreamedListRaces(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListRaces() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListRaces(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListRacesRequest* /*request*/, ::dnd5e::api::v1alpha1::ListRacesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListRaces(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::api::v1alpha1::ListRacesRequest,::dnd5e::api::v1alpha1::ListRacesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListClasses : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListClasses() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::api::v1alpha1::ListClassesRequest, ::dnd5e::api::v1alpha1::ListClassesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::api::v1alpha1::ListClassesRequest, ::dnd5e::api::v1alpha1::ListClassesResponse>* streamer) {
                       return this->StreamedListClasses(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListClasses() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListClasses(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListClassesRequest* /*request*/, ::dnd5e::api::v1alpha1::ListClassesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListClasses(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::api::v1alpha1::ListClassesRequest,::dnd5e::api::v1alpha1::ListClassesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListBackgrounds : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListBackgrounds() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::api::v1alpha1::ListBackgroundsRequest, ::dnd5e::api::v1alpha1::ListBackgroundsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::api::v1alpha1::ListBackgroundsRequest, ::dnd5e::api::v1alpha1::ListBackgroundsResponse>* streamer) {
                       return this->StreamedListBackgrounds(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListBackgrounds() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListBackgrounds(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListBackgroundsRequest* /*request*/, ::dnd5e::api::v1alpha1::ListBackgroundsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListBackgrounds(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::api::v1alpha1::ListBackgroundsRequest,::dnd5e::api::v1alpha1::ListBackgroundsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRaceDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetRaceDetails() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::api::v1alpha1::GetRaceDetailsRequest, ::dnd5e::api::v1alpha1::GetRaceDetailsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::api::v1alpha1::GetRaceDetailsRequest, ::dnd5e::api::v1alpha1::GetRaceDetailsResponse>* streamer) {
                       return this->StreamedGetRaceDetails(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetRaceDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRaceDetails(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetRaceDetailsRequest* /*request*/, ::dnd5e::api::v1alpha1::GetRaceDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRaceDetails(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::api::v1alpha1::GetRaceDetailsRequest,::dnd5e::api::v1alpha1::GetRaceDetailsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetClassDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetClassDetails() {
      ::grpc::Service::MarkMethodStreamed(20,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::api::v1alpha1::GetClassDetailsRequest, ::dnd5e::api::v1alpha1::GetClassDetailsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::api::v1alpha1::GetClassDetailsRequest, ::dnd5e::api::v1alpha1::GetClassDetailsResponse>* streamer) {
                       return this->StreamedGetClassDetails(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetClassDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetClassDetails(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetClassDetailsRequest* /*request*/, ::dnd5e::api::v1alpha1::GetClassDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetClassDetails(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::api::v1alpha1::GetClassDetailsRequest,::dnd5e::api::v1alpha1::GetClassDetailsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetBackgroundDetails : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetBackgroundDetails() {
      ::grpc::Service::MarkMethodStreamed(21,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest, ::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest, ::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse>* streamer) {
                       return this->StreamedGetBackgroundDetails(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetBackgroundDetails() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetBackgroundDetails(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest* /*request*/, ::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetBackgroundDetails(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest,::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetFeature : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetFeature() {
      ::grpc::Service::MarkMethodStreamed(22,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::api::v1alpha1::GetFeatureRequest, ::dnd5e::api::v1alpha1::GetFeatureResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::api::v1alpha1::GetFeatureRequest, ::dnd5e::api::v1alpha1::GetFeatureResponse>* streamer) {
                       return this->StreamedGetFeature(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetFeature() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetFeature(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetFeatureRequest* /*request*/, ::dnd5e::api::v1alpha1::GetFeatureResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetFeature(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::api::v1alpha1::GetFeatureRequest,::dnd5e::api::v1alpha1::GetFeatureResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RollAbilityScores : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RollAbilityScores() {
      ::grpc::Service::MarkMethodStreamed(23,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::api::v1alpha1::RollAbilityScoresRequest, ::dnd5e::api::v1alpha1::RollAbilityScoresResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::api::v1alpha1::RollAbilityScoresRequest, ::dnd5e::api::v1alpha1::RollAbilityScoresResponse>* streamer) {
                       return this->StreamedRollAbilityScores(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RollAbilityScores() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RollAbilityScores(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::RollAbilityScoresRequest* /*request*/, ::dnd5e::api::v1alpha1::RollAbilityScoresResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRollAbilityScores(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::api::v1alpha1::RollAbilityScoresRequest,::dnd5e::api::v1alpha1::RollAbilityScoresResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListEquipmentByType : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListEquipmentByType() {
      ::grpc::Service::MarkMethodStreamed(24,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest, ::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest, ::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse>* streamer) {
                       return this->StreamedListEquipmentByType(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListEquipmentByType() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListEquipmentByType(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest* /*request*/, ::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListEquipmentByType(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest,::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListSpellsByLevel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListSpellsByLevel() {
      ::grpc::Service::MarkMethodStreamed(25,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::api::v1alpha1::ListSpellsByLevelRequest, ::dnd5e::api::v1alpha1::ListSpellsByLevelResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::api::v1alpha1::ListSpellsByLevelRequest, ::dnd5e::api::v1alpha1::ListSpellsByLevelResponse>* streamer) {
                       return this->StreamedListSpellsByLevel(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListSpellsByLevel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListSpellsByLevel(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::ListSpellsByLevelRequest* /*request*/, ::dnd5e::api::v1alpha1::ListSpellsByLevelResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListSpellsByLevel(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::api::v1alpha1::ListSpellsByLevelRequest,::dnd5e::api::v1alpha1::ListSpellsByLevelResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetCharacterInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetCharacterInventory() {
      ::grpc::Service::MarkMethodStreamed(26,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::api::v1alpha1::GetCharacterInventoryRequest, ::dnd5e::api::v1alpha1::GetCharacterInventoryResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::api::v1alpha1::GetCharacterInventoryRequest, ::dnd5e::api::v1alpha1::GetCharacterInventoryResponse>* streamer) {
                       return this->StreamedGetCharacterInventory(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetCharacterInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetCharacterInventory(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::GetCharacterInventoryRequest* /*request*/, ::dnd5e::api::v1alpha1::GetCharacterInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetCharacterInventory(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::api::v1alpha1::GetCharacterInventoryRequest,::dnd5e::api::v1alpha1::GetCharacterInventoryResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_EquipItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_EquipItem() {
      ::grpc::Service::MarkMethodStreamed(27,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::api::v1alpha1::EquipItemRequest, ::dnd5e::api::v1alpha1::EquipItemResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::api::v1alpha1::EquipItemRequest, ::dnd5e::api::v1alpha1::EquipItemResponse>* streamer) {
                       return this->StreamedEquipItem(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_EquipItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status EquipItem(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::EquipItemRequest* /*request*/, ::dnd5e::api::v1alpha1::EquipItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedEquipItem(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::api::v1alpha1::EquipItemRequest,::dnd5e::api::v1alpha1::EquipItemResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UnequipItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UnequipItem() {
      ::grpc::Service::MarkMethodStreamed(28,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::api::v1alpha1::UnequipItemRequest, ::dnd5e::api::v1alpha1::UnequipItemResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::api::v1alpha1::UnequipItemRequest, ::dnd5e::api::v1alpha1::UnequipItemResponse>* streamer) {
                       return this->StreamedUnequipItem(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UnequipItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UnequipItem(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::UnequipItemRequest* /*request*/, ::dnd5e::api::v1alpha1::UnequipItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUnequipItem(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::api::v1alpha1::UnequipItemRequest,::dnd5e::api::v1alpha1::UnequipItemResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddToInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddToInventory() {
      ::grpc::Service::MarkMethodStreamed(29,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::api::v1alpha1::AddToInventoryRequest, ::dnd5e::api::v1alpha1::AddToInventoryResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::api::v1alpha1::AddToInventoryRequest, ::dnd5e::api::v1alpha1::AddToInventoryResponse>* streamer) {
                       return this->StreamedAddToInventory(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddToInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddToInventory(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::AddToInventoryRequest* /*request*/, ::dnd5e::api::v1alpha1::AddToInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddToInventory(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::api::v1alpha1::AddToInventoryRequest,::dnd5e::api::v1alpha1::AddToInventoryResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RemoveFromInventory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RemoveFromInventory() {
      ::grpc::Service::MarkMethodStreamed(30,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::api::v1alpha1::RemoveFromInventoryRequest, ::dnd5e::api::v1alpha1::RemoveFromInventoryResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::api::v1alpha1::RemoveFromInventoryRequest, ::dnd5e::api::v1alpha1::RemoveFromInventoryResponse>* streamer) {
                       return this->StreamedRemoveFromInventory(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RemoveFromInventory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RemoveFromInventory(::grpc::ServerContext* /*context*/, const ::dnd5e::api::v1alpha1::RemoveFromInventoryRequest* /*request*/, ::dnd5e::api::v1alpha1::RemoveFromInventoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRemoveFromInventory(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::api::v1alpha1::RemoveFromInventoryRequest,::dnd5e::api::v1alpha1::RemoveFromInventoryResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateDraft<WithStreamedUnaryMethod_GetDraft<WithStreamedUnaryMethod_ListDrafts<WithStreamedUnaryMethod_DeleteDraft<WithStreamedUnaryMethod_UpdateName<WithStreamedUnaryMethod_UpdateRace<WithStreamedUnaryMethod_UpdateClass<WithStreamedUnaryMethod_UpdateBackground<WithStreamedUnaryMethod_UpdateAbilityScores<WithStreamedUnaryMethod_UpdateSkills<WithStreamedUnaryMethod_ValidateDraft<WithStreamedUnaryMethod_GetDraftPreview<WithStreamedUnaryMethod_FinalizeDraft<WithStreamedUnaryMethod_GetCharacter<WithStreamedUnaryMethod_ListCharacters<WithStreamedUnaryMethod_DeleteCharacter<WithStreamedUnaryMethod_ListRaces<WithStreamedUnaryMethod_ListClasses<WithStreamedUnaryMethod_ListBackgrounds<WithStreamedUnaryMethod_GetRaceDetails<WithStreamedUnaryMethod_GetClassDetails<WithStreamedUnaryMethod_GetBackgroundDetails<WithStreamedUnaryMethod_GetFeature<WithStreamedUnaryMethod_RollAbilityScores<WithStreamedUnaryMethod_ListEquipmentByType<WithStreamedUnaryMethod_ListSpellsByLevel<WithStreamedUnaryMethod_GetCharacterInventory<WithStreamedUnaryMethod_EquipItem<WithStreamedUnaryMethod_UnequipItem<WithStreamedUnaryMethod_AddToInventory<WithStreamedUnaryMethod_RemoveFromInventory<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateDraft<WithStreamedUnaryMethod_GetDraft<WithStreamedUnaryMethod_ListDrafts<WithStreamedUnaryMethod_DeleteDraft<WithStreamedUnaryMethod_UpdateName<WithStreamedUnaryMethod_UpdateRace<WithStreamedUnaryMethod_UpdateClass<WithStreamedUnaryMethod_UpdateBackground<WithStreamedUnaryMethod_UpdateAbilityScores<WithStreamedUnaryMethod_UpdateSkills<WithStreamedUnaryMethod_ValidateDraft<WithStreamedUnaryMethod_GetDraftPreview<WithStreamedUnaryMethod_FinalizeDraft<WithStreamedUnaryMethod_GetCharacter<WithStreamedUnaryMethod_ListCharacters<WithStreamedUnaryMethod_DeleteCharacter<WithStreamedUnaryMethod_ListRaces<WithStreamedUnaryMethod_ListClasses<WithStreamedUnaryMethod_ListBackgrounds<WithStreamedUnaryMethod_GetRaceDetails<WithStreamedUnaryMethod_GetClassDetails<WithStreamedUnaryMethod_GetBackgroundDetails<WithStreamedUnaryMethod_GetFeature<WithStreamedUnaryMethod_RollAbilityScores<WithStreamedUnaryMethod_ListEquipmentByType<WithStreamedUnaryMethod_ListSpellsByLevel<WithStreamedUnaryMethod_GetCharacterInventory<WithStreamedUnaryMethod_EquipItem<WithStreamedUnaryMethod_UnequipItem<WithStreamedUnaryMethod_AddToInventory<WithStreamedUnaryMethod_RemoveFromInventory<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace v1alpha1
}  // namespace api
}  // namespace dnd5e


#include <grpcpp/ports_undef.inc>
#endif  // GRPC_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto__INCLUDED
