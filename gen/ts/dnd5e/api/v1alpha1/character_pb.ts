// @generated by protoc-gen-es v2.6.1 with parameter "target=ts"
// @generated from file dnd5e/api/v1alpha1/character.proto (package dnd5e.api.v1alpha1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { ValidationError, ValidationWarning } from "./common_pb";
import { file_dnd5e_api_v1alpha1_common } from "./common_pb";
import type { Ability, Alignment, Background, Class, EquipmentType, Language, Race, Skill, Subrace } from "./enums_pb";
import { file_dnd5e_api_v1alpha1_enums } from "./enums_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file dnd5e/api/v1alpha1/character.proto.
 */
export const file_dnd5e_api_v1alpha1_character: GenFile = /*@__PURE__*/
  fileDesc("", [file_dnd5e_api_v1alpha1_common, file_dnd5e_api_v1alpha1_enums]);

/**
 * Ability scores for a character
 *
 * @generated from message dnd5e.api.v1alpha1.AbilityScores
 */
export type AbilityScores = Message<"dnd5e.api.v1alpha1.AbilityScores"> & {
  /**
   * Strength score (3-18 before racial modifiers)
   *
   * @generated from field: int32 strength = 1;
   */
  strength: number;

  /**
   * Dexterity score (3-18 before racial modifiers)
   *
   * @generated from field: int32 dexterity = 2;
   */
  dexterity: number;

  /**
   * Constitution score (3-18 before racial modifiers)
   *
   * @generated from field: int32 constitution = 3;
   */
  constitution: number;

  /**
   * Intelligence score (3-18 before racial modifiers)
   *
   * @generated from field: int32 intelligence = 4;
   */
  intelligence: number;

  /**
   * Wisdom score (3-18 before racial modifiers)
   *
   * @generated from field: int32 wisdom = 5;
   */
  wisdom: number;

  /**
   * Charisma score (3-18 before racial modifiers)
   *
   * @generated from field: int32 charisma = 6;
   */
  charisma: number;
};

/**
 * Describes the message dnd5e.api.v1alpha1.AbilityScores.
 * Use `create(AbilityScoresSchema)` to create a new message.
 */
export const AbilityScoresSchema: GenMessage<AbilityScores> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 0);

/**
 * A complete D&D 5e character
 *
 * @generated from message dnd5e.api.v1alpha1.Character
 */
export type Character = Message<"dnd5e.api.v1alpha1.Character"> & {
  /**
   * Unique identifier
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Character name
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * Character level (starts at 1)
   *
   * @generated from field: int32 level = 3;
   */
  level: number;

  /**
   * Experience points
   *
   * @generated from field: int32 experience_points = 4;
   */
  experiencePoints: number;

  /**
   * Character race
   *
   * @generated from field: dnd5e.api.v1alpha1.Race race = 5;
   */
  race: Race;

  /**
   * Character subrace if applicable
   *
   * @generated from field: dnd5e.api.v1alpha1.Subrace subrace = 6;
   */
  subrace: Subrace;

  /**
   * Character class
   *
   * @generated from field: dnd5e.api.v1alpha1.Class class = 7;
   */
  class: Class;

  /**
   * Character background
   *
   * @generated from field: dnd5e.api.v1alpha1.Background background = 8;
   */
  background: Background;

  /**
   * Character alignment
   *
   * @generated from field: dnd5e.api.v1alpha1.Alignment alignment = 9;
   */
  alignment: Alignment;

  /**
   * Final ability scores (with racial modifiers applied)
   *
   * @generated from field: dnd5e.api.v1alpha1.AbilityScores ability_scores = 10;
   */
  abilityScores?: AbilityScores;

  /**
   * Ability modifiers (calculated from scores)
   *
   * @generated from field: dnd5e.api.v1alpha1.AbilityModifiers ability_modifiers = 11;
   */
  abilityModifiers?: AbilityModifiers;

  /**
   * Calculated combat values
   *
   * @generated from field: dnd5e.api.v1alpha1.CombatStats combat_stats = 12;
   */
  combatStats?: CombatStats;

  /**
   * Proficiencies
   *
   * @generated from field: dnd5e.api.v1alpha1.Proficiencies proficiencies = 13;
   */
  proficiencies?: Proficiencies;

  /**
   * Known languages
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.Language languages = 14;
   */
  languages: Language[];

  /**
   * Current hit points
   *
   * @generated from field: int32 current_hit_points = 15;
   */
  currentHitPoints: number;

  /**
   * Temporary hit points
   *
   * @generated from field: int32 temporary_hit_points = 16;
   */
  temporaryHitPoints: number;

  /**
   * Session association if any
   *
   * @generated from field: string session_id = 17;
   */
  sessionId: string;

  /**
   * Metadata
   *
   * @generated from field: dnd5e.api.v1alpha1.CharacterMetadata metadata = 18;
   */
  metadata?: CharacterMetadata;
};

/**
 * Describes the message dnd5e.api.v1alpha1.Character.
 * Use `create(CharacterSchema)` to create a new message.
 */
export const CharacterSchema: GenMessage<Character> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 1);

/**
 * Ability modifiers calculated from scores
 *
 * @generated from message dnd5e.api.v1alpha1.AbilityModifiers
 */
export type AbilityModifiers = Message<"dnd5e.api.v1alpha1.AbilityModifiers"> & {
  /**
   * @generated from field: int32 strength = 1;
   */
  strength: number;

  /**
   * @generated from field: int32 dexterity = 2;
   */
  dexterity: number;

  /**
   * @generated from field: int32 constitution = 3;
   */
  constitution: number;

  /**
   * @generated from field: int32 intelligence = 4;
   */
  intelligence: number;

  /**
   * @generated from field: int32 wisdom = 5;
   */
  wisdom: number;

  /**
   * @generated from field: int32 charisma = 6;
   */
  charisma: number;
};

/**
 * Describes the message dnd5e.api.v1alpha1.AbilityModifiers.
 * Use `create(AbilityModifiersSchema)` to create a new message.
 */
export const AbilityModifiersSchema: GenMessage<AbilityModifiers> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 2);

/**
 * Combat-related statistics
 *
 * @generated from message dnd5e.api.v1alpha1.CombatStats
 */
export type CombatStats = Message<"dnd5e.api.v1alpha1.CombatStats"> & {
  /**
   * Maximum hit points
   *
   * @generated from field: int32 hit_point_maximum = 1;
   */
  hitPointMaximum: number;

  /**
   * Armor class
   *
   * @generated from field: int32 armor_class = 2;
   */
  armorClass: number;

  /**
   * Initiative modifier
   *
   * @generated from field: int32 initiative = 3;
   */
  initiative: number;

  /**
   * Base movement speed in feet
   *
   * @generated from field: int32 speed = 4;
   */
  speed: number;

  /**
   * Proficiency bonus
   *
   * @generated from field: int32 proficiency_bonus = 5;
   */
  proficiencyBonus: number;

  /**
   * Hit dice (e.g., 1d10 for fighter)
   *
   * @generated from field: string hit_dice = 6;
   */
  hitDice: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.CombatStats.
 * Use `create(CombatStatsSchema)` to create a new message.
 */
export const CombatStatsSchema: GenMessage<CombatStats> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 3);

/**
 * Character proficiencies
 *
 * @generated from message dnd5e.api.v1alpha1.Proficiencies
 */
export type Proficiencies = Message<"dnd5e.api.v1alpha1.Proficiencies"> & {
  /**
   * Skill proficiencies
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.Skill skills = 1;
   */
  skills: Skill[];

  /**
   * Saving throw proficiencies
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.Ability saving_throws = 2;
   */
  savingThrows: Ability[];

  /**
   * Armor proficiencies (as strings for now)
   *
   * @generated from field: repeated string armor = 3;
   */
  armor: string[];

  /**
   * Weapon proficiencies (as strings for now)
   *
   * @generated from field: repeated string weapons = 4;
   */
  weapons: string[];

  /**
   * Tool proficiencies (as strings for now)
   *
   * @generated from field: repeated string tools = 5;
   */
  tools: string[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.Proficiencies.
 * Use `create(ProficienciesSchema)` to create a new message.
 */
export const ProficienciesSchema: GenMessage<Proficiencies> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 4);

/**
 * Character metadata
 *
 * @generated from message dnd5e.api.v1alpha1.CharacterMetadata
 */
export type CharacterMetadata = Message<"dnd5e.api.v1alpha1.CharacterMetadata"> & {
  /**
   * When the character was created
   *
   * @generated from field: int64 created_at = 1;
   */
  createdAt: bigint;

  /**
   * When the character was last updated
   *
   * @generated from field: int64 updated_at = 2;
   */
  updatedAt: bigint;

  /**
   * Player/user who owns this character
   *
   * @generated from field: string player_id = 3;
   */
  playerId: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.CharacterMetadata.
 * Use `create(CharacterMetadataSchema)` to create a new message.
 */
export const CharacterMetadataSchema: GenMessage<CharacterMetadata> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 5);

/**
 * Request to get a character
 *
 * @generated from message dnd5e.api.v1alpha1.GetCharacterRequest
 */
export type GetCharacterRequest = Message<"dnd5e.api.v1alpha1.GetCharacterRequest"> & {
  /**
   * The character ID to retrieve
   *
   * @generated from field: string character_id = 1;
   */
  characterId: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.GetCharacterRequest.
 * Use `create(GetCharacterRequestSchema)` to create a new message.
 */
export const GetCharacterRequestSchema: GenMessage<GetCharacterRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 6);

/**
 * Response containing a character
 *
 * @generated from message dnd5e.api.v1alpha1.GetCharacterResponse
 */
export type GetCharacterResponse = Message<"dnd5e.api.v1alpha1.GetCharacterResponse"> & {
  /**
   * The requested character
   *
   * @generated from field: dnd5e.api.v1alpha1.Character character = 1;
   */
  character?: Character;
};

/**
 * Describes the message dnd5e.api.v1alpha1.GetCharacterResponse.
 * Use `create(GetCharacterResponseSchema)` to create a new message.
 */
export const GetCharacterResponseSchema: GenMessage<GetCharacterResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 7);

/**
 * Request to list characters
 *
 * @generated from message dnd5e.api.v1alpha1.ListCharactersRequest
 */
export type ListCharactersRequest = Message<"dnd5e.api.v1alpha1.ListCharactersRequest"> & {
  /**
   * Maximum number of characters to return (1-100, default 20)
   *
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * Page token from previous response
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  /**
   * Filter by session ID
   *
   * @generated from field: string session_id = 3;
   */
  sessionId: string;

  /**
   * Filter by player ID
   *
   * @generated from field: string player_id = 4;
   */
  playerId: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ListCharactersRequest.
 * Use `create(ListCharactersRequestSchema)` to create a new message.
 */
export const ListCharactersRequestSchema: GenMessage<ListCharactersRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 8);

/**
 * Response containing a list of characters
 *
 * @generated from message dnd5e.api.v1alpha1.ListCharactersResponse
 */
export type ListCharactersResponse = Message<"dnd5e.api.v1alpha1.ListCharactersResponse"> & {
  /**
   * The list of characters
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.Character characters = 1;
   */
  characters: Character[];

  /**
   * Token for next page if available
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Total number of characters matching filters
   *
   * @generated from field: int32 total_size = 3;
   */
  totalSize: number;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ListCharactersResponse.
 * Use `create(ListCharactersResponseSchema)` to create a new message.
 */
export const ListCharactersResponseSchema: GenMessage<ListCharactersResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 9);

/**
 * Request to update a character
 *
 * @generated from message dnd5e.api.v1alpha1.UpdateCharacterRequest
 */
export type UpdateCharacterRequest = Message<"dnd5e.api.v1alpha1.UpdateCharacterRequest"> & {
  /**
   * The character to update (ID required)
   *
   * @generated from field: dnd5e.api.v1alpha1.Character character = 1;
   */
  character?: Character;

  /**
   * Field mask to specify which fields to update
   * For now, we'll allow updating specific fields
   *
   * @generated from field: repeated string update_mask = 2;
   */
  updateMask: string[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.UpdateCharacterRequest.
 * Use `create(UpdateCharacterRequestSchema)` to create a new message.
 */
export const UpdateCharacterRequestSchema: GenMessage<UpdateCharacterRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 10);

/**
 * Response from character update
 *
 * @generated from message dnd5e.api.v1alpha1.UpdateCharacterResponse
 */
export type UpdateCharacterResponse = Message<"dnd5e.api.v1alpha1.UpdateCharacterResponse"> & {
  /**
   * The updated character
   *
   * @generated from field: dnd5e.api.v1alpha1.Character character = 1;
   */
  character?: Character;
};

/**
 * Describes the message dnd5e.api.v1alpha1.UpdateCharacterResponse.
 * Use `create(UpdateCharacterResponseSchema)` to create a new message.
 */
export const UpdateCharacterResponseSchema: GenMessage<UpdateCharacterResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 11);

/**
 * Request to delete a character
 *
 * @generated from message dnd5e.api.v1alpha1.DeleteCharacterRequest
 */
export type DeleteCharacterRequest = Message<"dnd5e.api.v1alpha1.DeleteCharacterRequest"> & {
  /**
   * The character ID to delete
   *
   * @generated from field: string character_id = 1;
   */
  characterId: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.DeleteCharacterRequest.
 * Use `create(DeleteCharacterRequestSchema)` to create a new message.
 */
export const DeleteCharacterRequestSchema: GenMessage<DeleteCharacterRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 12);

/**
 * Response from character deletion
 *
 * @generated from message dnd5e.api.v1alpha1.DeleteCharacterResponse
 */
export type DeleteCharacterResponse = Message<"dnd5e.api.v1alpha1.DeleteCharacterResponse"> & {
  /**
   * Confirmation message
   *
   * @generated from field: string message = 1;
   */
  message: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.DeleteCharacterResponse.
 * Use `create(DeleteCharacterResponseSchema)` to create a new message.
 */
export const DeleteCharacterResponseSchema: GenMessage<DeleteCharacterResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 13);

/**
 * Character draft data for storage with optional fields
 *
 * @generated from message dnd5e.api.v1alpha1.CharacterDraftData
 */
export type CharacterDraftData = Message<"dnd5e.api.v1alpha1.CharacterDraftData"> & {
  /**
   * Unique identifier
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Player creating this character
   *
   * @generated from field: string player_id = 2;
   */
  playerId: string;

  /**
   * Session if part of one
   *
   * @generated from field: string session_id = 3;
   */
  sessionId: string;

  /**
   * Identity fields - stored as enums
   *
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: dnd5e.api.v1alpha1.Race race = 5;
   */
  race: Race;

  /**
   * @generated from field: dnd5e.api.v1alpha1.Subrace subrace = 6;
   */
  subrace: Subrace;

  /**
   * @generated from field: dnd5e.api.v1alpha1.Class class = 7;
   */
  class: Class;

  /**
   * @generated from field: dnd5e.api.v1alpha1.Background background = 8;
   */
  background: Background;

  /**
   * @generated from field: dnd5e.api.v1alpha1.AbilityScores ability_scores = 9;
   */
  abilityScores?: AbilityScores;

  /**
   * @generated from field: dnd5e.api.v1alpha1.Alignment alignment = 10;
   */
  alignment: Alignment;

  /**
   * Store player choices instead of computed state
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.ChoiceSelection choices = 11;
   */
  choices: ChoiceSelection[];

  /**
   * Track what steps are complete
   *
   * @generated from field: dnd5e.api.v1alpha1.CreationProgress progress = 12;
   */
  progress?: CreationProgress;

  /**
   * When this draft expires (e.g., 30 days)
   *
   * @generated from field: int64 expires_at = 13;
   */
  expiresAt: bigint;

  /**
   * Timestamps
   *
   * @generated from field: int64 created_at = 14;
   */
  createdAt: bigint;

  /**
   * @generated from field: int64 updated_at = 15;
   */
  updatedAt: bigint;

  /**
   * Metadata
   *
   * @generated from field: dnd5e.api.v1alpha1.DraftMetadata metadata = 16;
   */
  metadata?: DraftMetadata;
};

/**
 * Describes the message dnd5e.api.v1alpha1.CharacterDraftData.
 * Use `create(CharacterDraftDataSchema)` to create a new message.
 */
export const CharacterDraftDataSchema: GenMessage<CharacterDraftData> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 14);

/**
 * Tracks which parts of character creation are complete
 *
 * @generated from message dnd5e.api.v1alpha1.CreationProgress
 */
export type CreationProgress = Message<"dnd5e.api.v1alpha1.CreationProgress"> & {
  /**
   * @generated from field: bool has_name = 1;
   */
  hasName: boolean;

  /**
   * @generated from field: bool has_race = 2;
   */
  hasRace: boolean;

  /**
   * @generated from field: bool has_class = 3;
   */
  hasClass: boolean;

  /**
   * @generated from field: bool has_background = 4;
   */
  hasBackground: boolean;

  /**
   * @generated from field: bool has_ability_scores = 5;
   */
  hasAbilityScores: boolean;

  /**
   * @generated from field: bool has_skills = 6;
   */
  hasSkills: boolean;

  /**
   * @generated from field: bool has_languages = 7;
   */
  hasLanguages: boolean;

  /**
   * Overall completion percentage
   *
   * @generated from field: int32 completion_percentage = 8;
   */
  completionPercentage: number;

  /**
   * What step they're currently on
   *
   * @generated from field: dnd5e.api.v1alpha1.CreationStep current_step = 9;
   */
  currentStep: CreationStep;
};

/**
 * Describes the message dnd5e.api.v1alpha1.CreationProgress.
 * Use `create(CreationProgressSchema)` to create a new message.
 */
export const CreationProgressSchema: GenMessage<CreationProgress> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 15);

/**
 * Draft metadata
 *
 * @generated from message dnd5e.api.v1alpha1.DraftMetadata
 */
export type DraftMetadata = Message<"dnd5e.api.v1alpha1.DraftMetadata"> & {
  /**
   * @generated from field: int64 created_at = 1;
   */
  createdAt: bigint;

  /**
   * @generated from field: int64 updated_at = 2;
   */
  updatedAt: bigint;

  /**
   * @generated from field: string discord_channel_id = 3;
   */
  discordChannelId: string;

  /**
   * @generated from field: string discord_message_id = 4;
   */
  discordMessageId: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.DraftMetadata.
 * Use `create(DraftMetadataSchema)` to create a new message.
 */
export const DraftMetadataSchema: GenMessage<DraftMetadata> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 16);

/**
 * Character draft with full details for responses
 *
 * @generated from message dnd5e.api.v1alpha1.CharacterDraft
 */
export type CharacterDraft = Message<"dnd5e.api.v1alpha1.CharacterDraft"> & {
  /**
   * Unique identifier
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Player creating this character
   *
   * @generated from field: string player_id = 2;
   */
  playerId: string;

  /**
   * Session if part of one
   *
   * @generated from field: string session_id = 3;
   */
  sessionId: string;

  /**
   * Identity fields
   *
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: dnd5e.api.v1alpha1.RaceInfo race = 5;
   */
  race?: RaceInfo;

  /**
   * @generated from field: dnd5e.api.v1alpha1.SubraceInfo subrace = 6;
   */
  subrace?: SubraceInfo;

  /**
   * @generated from field: dnd5e.api.v1alpha1.ClassInfo class = 7;
   */
  class?: ClassInfo;

  /**
   * @generated from field: dnd5e.api.v1alpha1.BackgroundInfo background = 8;
   */
  background?: BackgroundInfo;

  /**
   * @generated from field: dnd5e.api.v1alpha1.AbilityScores ability_scores = 9;
   */
  abilityScores?: AbilityScores;

  /**
   * @generated from field: dnd5e.api.v1alpha1.Alignment alignment = 10;
   */
  alignment: Alignment;

  /**
   * Store player choices
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.ChoiceSelection choices = 11;
   */
  choices: ChoiceSelection[];

  /**
   * Track what steps are complete
   *
   * @generated from field: dnd5e.api.v1alpha1.CreationProgress progress = 12;
   */
  progress?: CreationProgress;

  /**
   * When this draft expires (e.g., 30 days)
   *
   * @generated from field: int64 expires_at = 13;
   */
  expiresAt: bigint;

  /**
   * Timestamps
   *
   * @generated from field: int64 created_at = 14;
   */
  createdAt: bigint;

  /**
   * @generated from field: int64 updated_at = 15;
   */
  updatedAt: bigint;

  /**
   * Metadata
   *
   * @generated from field: dnd5e.api.v1alpha1.DraftMetadata metadata = 16;
   */
  metadata?: DraftMetadata;
};

/**
 * Describes the message dnd5e.api.v1alpha1.CharacterDraft.
 * Use `create(CharacterDraftSchema)` to create a new message.
 */
export const CharacterDraftSchema: GenMessage<CharacterDraft> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 17);

/**
 * Request to create a draft
 *
 * @generated from message dnd5e.api.v1alpha1.CreateDraftRequest
 */
export type CreateDraftRequest = Message<"dnd5e.api.v1alpha1.CreateDraftRequest"> & {
  /**
   * @generated from field: string player_id = 1;
   */
  playerId: string;

  /**
   * Optional
   *
   * @generated from field: string session_id = 2;
   */
  sessionId: string;

  /**
   * Can optionally provide initial data
   *
   * @generated from field: dnd5e.api.v1alpha1.CharacterDraftData initial_data = 3;
   */
  initialData?: CharacterDraftData;
};

/**
 * Describes the message dnd5e.api.v1alpha1.CreateDraftRequest.
 * Use `create(CreateDraftRequestSchema)` to create a new message.
 */
export const CreateDraftRequestSchema: GenMessage<CreateDraftRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 18);

/**
 * @generated from message dnd5e.api.v1alpha1.CreateDraftResponse
 */
export type CreateDraftResponse = Message<"dnd5e.api.v1alpha1.CreateDraftResponse"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.CharacterDraft draft = 1;
   */
  draft?: CharacterDraft;
};

/**
 * Describes the message dnd5e.api.v1alpha1.CreateDraftResponse.
 * Use `create(CreateDraftResponseSchema)` to create a new message.
 */
export const CreateDraftResponseSchema: GenMessage<CreateDraftResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 19);

/**
 * Request to get a draft
 *
 * @generated from message dnd5e.api.v1alpha1.GetDraftRequest
 */
export type GetDraftRequest = Message<"dnd5e.api.v1alpha1.GetDraftRequest"> & {
  /**
   * @generated from field: string draft_id = 1;
   */
  draftId: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.GetDraftRequest.
 * Use `create(GetDraftRequestSchema)` to create a new message.
 */
export const GetDraftRequestSchema: GenMessage<GetDraftRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 20);

/**
 * @generated from message dnd5e.api.v1alpha1.GetDraftResponse
 */
export type GetDraftResponse = Message<"dnd5e.api.v1alpha1.GetDraftResponse"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.CharacterDraft draft = 1;
   */
  draft?: CharacterDraft;
};

/**
 * Describes the message dnd5e.api.v1alpha1.GetDraftResponse.
 * Use `create(GetDraftResponseSchema)` to create a new message.
 */
export const GetDraftResponseSchema: GenMessage<GetDraftResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 21);

/**
 * Request to update a draft
 *
 * @generated from message dnd5e.api.v1alpha1.UpdateDraftRequest
 */
export type UpdateDraftRequest = Message<"dnd5e.api.v1alpha1.UpdateDraftRequest"> & {
  /**
   * @generated from field: string draft_id = 1;
   */
  draftId: string;

  /**
   * Only provided fields will be updated
   *
   * @generated from field: dnd5e.api.v1alpha1.CharacterDraftData updates = 2;
   */
  updates?: CharacterDraftData;

  /**
   * Which fields to update (field mask pattern)
   *
   * @generated from field: repeated string update_mask = 3;
   */
  updateMask: string[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.UpdateDraftRequest.
 * Use `create(UpdateDraftRequestSchema)` to create a new message.
 */
export const UpdateDraftRequestSchema: GenMessage<UpdateDraftRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 22);

/**
 * @generated from message dnd5e.api.v1alpha1.UpdateDraftResponse
 */
export type UpdateDraftResponse = Message<"dnd5e.api.v1alpha1.UpdateDraftResponse"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.CharacterDraft draft = 1;
   */
  draft?: CharacterDraft;

  /**
   * Any validation warnings (not errors)
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.ValidationWarning warnings = 2;
   */
  warnings: ValidationWarning[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.UpdateDraftResponse.
 * Use `create(UpdateDraftResponseSchema)` to create a new message.
 */
export const UpdateDraftResponseSchema: GenMessage<UpdateDraftResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 23);

/**
 * Section-based update requests
 *
 * @generated from message dnd5e.api.v1alpha1.UpdateNameRequest
 */
export type UpdateNameRequest = Message<"dnd5e.api.v1alpha1.UpdateNameRequest"> & {
  /**
   * @generated from field: string draft_id = 1;
   */
  draftId: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.UpdateNameRequest.
 * Use `create(UpdateNameRequestSchema)` to create a new message.
 */
export const UpdateNameRequestSchema: GenMessage<UpdateNameRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 24);

/**
 * @generated from message dnd5e.api.v1alpha1.UpdateRaceRequest
 */
export type UpdateRaceRequest = Message<"dnd5e.api.v1alpha1.UpdateRaceRequest"> & {
  /**
   * @generated from field: string draft_id = 1;
   */
  draftId: string;

  /**
   * @generated from field: dnd5e.api.v1alpha1.Race race = 2;
   */
  race: Race;

  /**
   * Optional, required for some races
   *
   * @generated from field: dnd5e.api.v1alpha1.Subrace subrace = 3;
   */
  subrace: Subrace;

  /**
   * Choices made for this race
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.ChoiceSelection race_choices = 4;
   */
  raceChoices: ChoiceSelection[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.UpdateRaceRequest.
 * Use `create(UpdateRaceRequestSchema)` to create a new message.
 */
export const UpdateRaceRequestSchema: GenMessage<UpdateRaceRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 25);

/**
 * @generated from message dnd5e.api.v1alpha1.UpdateClassRequest
 */
export type UpdateClassRequest = Message<"dnd5e.api.v1alpha1.UpdateClassRequest"> & {
  /**
   * @generated from field: string draft_id = 1;
   */
  draftId: string;

  /**
   * @generated from field: dnd5e.api.v1alpha1.Class class = 2;
   */
  class: Class;

  /**
   * Choices made for this class
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.ChoiceSelection class_choices = 3;
   */
  classChoices: ChoiceSelection[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.UpdateClassRequest.
 * Use `create(UpdateClassRequestSchema)` to create a new message.
 */
export const UpdateClassRequestSchema: GenMessage<UpdateClassRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 26);

/**
 * @generated from message dnd5e.api.v1alpha1.UpdateBackgroundRequest
 */
export type UpdateBackgroundRequest = Message<"dnd5e.api.v1alpha1.UpdateBackgroundRequest"> & {
  /**
   * @generated from field: string draft_id = 1;
   */
  draftId: string;

  /**
   * @generated from field: dnd5e.api.v1alpha1.Background background = 2;
   */
  background: Background;

  /**
   * Choices made for this background
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.ChoiceSelection background_choices = 3;
   */
  backgroundChoices: ChoiceSelection[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.UpdateBackgroundRequest.
 * Use `create(UpdateBackgroundRequestSchema)` to create a new message.
 */
export const UpdateBackgroundRequestSchema: GenMessage<UpdateBackgroundRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 27);

/**
 * @generated from message dnd5e.api.v1alpha1.UpdateAbilityScoresRequest
 */
export type UpdateAbilityScoresRequest = Message<"dnd5e.api.v1alpha1.UpdateAbilityScoresRequest"> & {
  /**
   * @generated from field: string draft_id = 1;
   */
  draftId: string;

  /**
   * Choose how to set ability scores
   *
   * @generated from oneof dnd5e.api.v1alpha1.UpdateAbilityScoresRequest.scores_input
   */
  scoresInput: {
    /**
     * Manually set ability scores
     *
     * @generated from field: dnd5e.api.v1alpha1.AbilityScores ability_scores = 2;
     */
    value: AbilityScores;
    case: "abilityScores";
  } | {
    /**
     * Assign rolled dice to abilities
     *
     * @generated from field: dnd5e.api.v1alpha1.RollAssignments roll_assignments = 3;
     */
    value: RollAssignments;
    case: "rollAssignments";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message dnd5e.api.v1alpha1.UpdateAbilityScoresRequest.
 * Use `create(UpdateAbilityScoresRequestSchema)` to create a new message.
 */
export const UpdateAbilityScoresRequestSchema: GenMessage<UpdateAbilityScoresRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 28);

/**
 * @generated from message dnd5e.api.v1alpha1.UpdateSkillsRequest
 */
export type UpdateSkillsRequest = Message<"dnd5e.api.v1alpha1.UpdateSkillsRequest"> & {
  /**
   * @generated from field: string draft_id = 1;
   */
  draftId: string;

  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.Skill skills = 2;
   */
  skills: Skill[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.UpdateSkillsRequest.
 * Use `create(UpdateSkillsRequestSchema)` to create a new message.
 */
export const UpdateSkillsRequestSchema: GenMessage<UpdateSkillsRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 29);

/**
 * Section-based update responses
 *
 * @generated from message dnd5e.api.v1alpha1.UpdateNameResponse
 */
export type UpdateNameResponse = Message<"dnd5e.api.v1alpha1.UpdateNameResponse"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.CharacterDraft draft = 1;
   */
  draft?: CharacterDraft;

  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.ValidationWarning warnings = 2;
   */
  warnings: ValidationWarning[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.UpdateNameResponse.
 * Use `create(UpdateNameResponseSchema)` to create a new message.
 */
export const UpdateNameResponseSchema: GenMessage<UpdateNameResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 30);

/**
 * @generated from message dnd5e.api.v1alpha1.UpdateRaceResponse
 */
export type UpdateRaceResponse = Message<"dnd5e.api.v1alpha1.UpdateRaceResponse"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.CharacterDraft draft = 1;
   */
  draft?: CharacterDraft;

  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.ValidationWarning warnings = 2;
   */
  warnings: ValidationWarning[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.UpdateRaceResponse.
 * Use `create(UpdateRaceResponseSchema)` to create a new message.
 */
export const UpdateRaceResponseSchema: GenMessage<UpdateRaceResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 31);

/**
 * @generated from message dnd5e.api.v1alpha1.UpdateClassResponse
 */
export type UpdateClassResponse = Message<"dnd5e.api.v1alpha1.UpdateClassResponse"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.CharacterDraft draft = 1;
   */
  draft?: CharacterDraft;

  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.ValidationWarning warnings = 2;
   */
  warnings: ValidationWarning[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.UpdateClassResponse.
 * Use `create(UpdateClassResponseSchema)` to create a new message.
 */
export const UpdateClassResponseSchema: GenMessage<UpdateClassResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 32);

/**
 * @generated from message dnd5e.api.v1alpha1.UpdateBackgroundResponse
 */
export type UpdateBackgroundResponse = Message<"dnd5e.api.v1alpha1.UpdateBackgroundResponse"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.CharacterDraft draft = 1;
   */
  draft?: CharacterDraft;

  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.ValidationWarning warnings = 2;
   */
  warnings: ValidationWarning[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.UpdateBackgroundResponse.
 * Use `create(UpdateBackgroundResponseSchema)` to create a new message.
 */
export const UpdateBackgroundResponseSchema: GenMessage<UpdateBackgroundResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 33);

/**
 * @generated from message dnd5e.api.v1alpha1.UpdateAbilityScoresResponse
 */
export type UpdateAbilityScoresResponse = Message<"dnd5e.api.v1alpha1.UpdateAbilityScoresResponse"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.CharacterDraft draft = 1;
   */
  draft?: CharacterDraft;

  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.ValidationWarning warnings = 2;
   */
  warnings: ValidationWarning[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.UpdateAbilityScoresResponse.
 * Use `create(UpdateAbilityScoresResponseSchema)` to create a new message.
 */
export const UpdateAbilityScoresResponseSchema: GenMessage<UpdateAbilityScoresResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 34);

/**
 * @generated from message dnd5e.api.v1alpha1.UpdateSkillsResponse
 */
export type UpdateSkillsResponse = Message<"dnd5e.api.v1alpha1.UpdateSkillsResponse"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.CharacterDraft draft = 1;
   */
  draft?: CharacterDraft;

  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.ValidationWarning warnings = 2;
   */
  warnings: ValidationWarning[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.UpdateSkillsResponse.
 * Use `create(UpdateSkillsResponseSchema)` to create a new message.
 */
export const UpdateSkillsResponseSchema: GenMessage<UpdateSkillsResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 35);

/**
 * Request to list drafts
 *
 * @generated from message dnd5e.api.v1alpha1.ListDraftsRequest
 */
export type ListDraftsRequest = Message<"dnd5e.api.v1alpha1.ListDraftsRequest"> & {
  /**
   * @generated from field: string player_id = 1;
   */
  playerId: string;

  /**
   * Optional filter
   *
   * @generated from field: string session_id = 2;
   */
  sessionId: string;

  /**
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * @generated from field: string page_token = 4;
   */
  pageToken: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ListDraftsRequest.
 * Use `create(ListDraftsRequestSchema)` to create a new message.
 */
export const ListDraftsRequestSchema: GenMessage<ListDraftsRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 36);

/**
 * @generated from message dnd5e.api.v1alpha1.ListDraftsResponse
 */
export type ListDraftsResponse = Message<"dnd5e.api.v1alpha1.ListDraftsResponse"> & {
  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.CharacterDraft drafts = 1;
   */
  drafts: CharacterDraft[];

  /**
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ListDraftsResponse.
 * Use `create(ListDraftsResponseSchema)` to create a new message.
 */
export const ListDraftsResponseSchema: GenMessage<ListDraftsResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 37);

/**
 * Request to validate draft
 *
 * @generated from message dnd5e.api.v1alpha1.ValidateDraftRequest
 */
export type ValidateDraftRequest = Message<"dnd5e.api.v1alpha1.ValidateDraftRequest"> & {
  /**
   * @generated from field: string draft_id = 1;
   */
  draftId: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ValidateDraftRequest.
 * Use `create(ValidateDraftRequestSchema)` to create a new message.
 */
export const ValidateDraftRequestSchema: GenMessage<ValidateDraftRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 38);

/**
 * @generated from message dnd5e.api.v1alpha1.ValidateDraftResponse
 */
export type ValidateDraftResponse = Message<"dnd5e.api.v1alpha1.ValidateDraftResponse"> & {
  /**
   * @generated from field: bool is_complete = 1;
   */
  isComplete: boolean;

  /**
   * @generated from field: bool is_valid = 2;
   */
  isValid: boolean;

  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.ValidationError errors = 3;
   */
  errors: ValidationError[];

  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.ValidationWarning warnings = 4;
   */
  warnings: ValidationWarning[];

  /**
   * What's still needed
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.CreationStep missing_steps = 5;
   */
  missingSteps: CreationStep[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.ValidateDraftResponse.
 * Use `create(ValidateDraftResponseSchema)` to create a new message.
 */
export const ValidateDraftResponseSchema: GenMessage<ValidateDraftResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 39);

/**
 * Request to get a preview of the character
 *
 * @generated from message dnd5e.api.v1alpha1.GetDraftPreviewRequest
 */
export type GetDraftPreviewRequest = Message<"dnd5e.api.v1alpha1.GetDraftPreviewRequest"> & {
  /**
   * @generated from field: string draft_id = 1;
   */
  draftId: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.GetDraftPreviewRequest.
 * Use `create(GetDraftPreviewRequestSchema)` to create a new message.
 */
export const GetDraftPreviewRequestSchema: GenMessage<GetDraftPreviewRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 40);

/**
 * @generated from message dnd5e.api.v1alpha1.GetDraftPreviewResponse
 */
export type GetDraftPreviewResponse = Message<"dnd5e.api.v1alpha1.GetDraftPreviewResponse"> & {
  /**
   * The draft with choices
   *
   * @generated from field: dnd5e.api.v1alpha1.CharacterDraft draft = 1;
   */
  draft?: CharacterDraft;

  /**
   * Computed character state
   *
   * @generated from field: dnd5e.api.v1alpha1.Character preview = 2;
   */
  preview?: Character;

  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.ValidationWarning warnings = 3;
   */
  warnings: ValidationWarning[];

  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.ValidationError errors = 4;
   */
  errors: ValidationError[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.GetDraftPreviewResponse.
 * Use `create(GetDraftPreviewResponseSchema)` to create a new message.
 */
export const GetDraftPreviewResponseSchema: GenMessage<GetDraftPreviewResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 41);

/**
 * Request to finalize draft
 *
 * @generated from message dnd5e.api.v1alpha1.FinalizeDraftRequest
 */
export type FinalizeDraftRequest = Message<"dnd5e.api.v1alpha1.FinalizeDraftRequest"> & {
  /**
   * @generated from field: string draft_id = 1;
   */
  draftId: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.FinalizeDraftRequest.
 * Use `create(FinalizeDraftRequestSchema)` to create a new message.
 */
export const FinalizeDraftRequestSchema: GenMessage<FinalizeDraftRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 42);

/**
 * @generated from message dnd5e.api.v1alpha1.FinalizeDraftResponse
 */
export type FinalizeDraftResponse = Message<"dnd5e.api.v1alpha1.FinalizeDraftResponse"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.Character character = 1;
   */
  character?: Character;

  /**
   * Draft is automatically deleted after finalization
   *
   * @generated from field: bool draft_deleted = 2;
   */
  draftDeleted: boolean;
};

/**
 * Describes the message dnd5e.api.v1alpha1.FinalizeDraftResponse.
 * Use `create(FinalizeDraftResponseSchema)` to create a new message.
 */
export const FinalizeDraftResponseSchema: GenMessage<FinalizeDraftResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 43);

/**
 * Request to delete draft
 *
 * @generated from message dnd5e.api.v1alpha1.DeleteDraftRequest
 */
export type DeleteDraftRequest = Message<"dnd5e.api.v1alpha1.DeleteDraftRequest"> & {
  /**
   * @generated from field: string draft_id = 1;
   */
  draftId: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.DeleteDraftRequest.
 * Use `create(DeleteDraftRequestSchema)` to create a new message.
 */
export const DeleteDraftRequestSchema: GenMessage<DeleteDraftRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 44);

/**
 * @generated from message dnd5e.api.v1alpha1.DeleteDraftResponse
 */
export type DeleteDraftResponse = Message<"dnd5e.api.v1alpha1.DeleteDraftResponse"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.DeleteDraftResponse.
 * Use `create(DeleteDraftResponseSchema)` to create a new message.
 */
export const DeleteDraftResponseSchema: GenMessage<DeleteDraftResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 45);

/**
 * Detailed race information for selection UI
 *
 * @generated from message dnd5e.api.v1alpha1.RaceInfo
 */
export type RaceInfo = Message<"dnd5e.api.v1alpha1.RaceInfo"> & {
  /**
   * Basic identification
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Mechanical information
   *
   * @generated from field: int32 speed = 4;
   */
  speed: number;

  /**
   * @generated from field: dnd5e.api.v1alpha1.Size size = 5;
   */
  size: Size;

  /**
   * Ability score increases
   *
   * @generated from field: map<string, int32> ability_bonuses = 6;
   */
  abilityBonuses: { [key: string]: number };

  /**
   * Racial traits
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.RacialTrait traits = 7;
   */
  traits: RacialTrait[];

  /**
   * Available subraces
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.SubraceInfo subraces = 8;
   */
  subraces: SubraceInfo[];

  /**
   * Starting proficiencies
   *
   * @generated from field: repeated string proficiencies = 9;
   */
  proficiencies: string[];

  /**
   * Starting languages
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.Language languages = 10;
   */
  languages: Language[];

  /**
   * Additional flavor text
   *
   * @generated from field: string age_description = 11;
   */
  ageDescription: string;

  /**
   * @generated from field: string alignment_description = 12;
   */
  alignmentDescription: string;

  /**
   * Size description
   *
   * @generated from field: string size_description = 13;
   */
  sizeDescription: string;

  /**
   * All choices (languages, proficiencies, etc.)
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.Choice choices = 14;
   */
  choices: Choice[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.RaceInfo.
 * Use `create(RaceInfoSchema)` to create a new message.
 */
export const RaceInfoSchema: GenMessage<RaceInfo> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 46);

/**
 * Subrace information
 *
 * @generated from message dnd5e.api.v1alpha1.SubraceInfo
 */
export type SubraceInfo = Message<"dnd5e.api.v1alpha1.SubraceInfo"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Additional ability bonuses from subrace
   *
   * @generated from field: map<string, int32> ability_bonuses = 4;
   */
  abilityBonuses: { [key: string]: number };

  /**
   * Additional traits from subrace
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.RacialTrait traits = 5;
   */
  traits: RacialTrait[];

  /**
   * Additional languages from subrace
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.Language languages = 6;
   */
  languages: Language[];

  /**
   * Additional proficiencies from subrace
   *
   * @generated from field: repeated string proficiencies = 7;
   */
  proficiencies: string[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.SubraceInfo.
 * Use `create(SubraceInfoSchema)` to create a new message.
 */
export const SubraceInfoSchema: GenMessage<SubraceInfo> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 47);

/**
 * Racial trait description
 *
 * @generated from message dnd5e.api.v1alpha1.RacialTrait
 */
export type RacialTrait = Message<"dnd5e.api.v1alpha1.RacialTrait"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * Whether this is a choice or automatic
   *
   * @generated from field: bool is_choice = 3;
   */
  isChoice: boolean;

  /**
   * Options if this is a choice
   *
   * @generated from field: repeated string options = 4;
   */
  options: string[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.RacialTrait.
 * Use `create(RacialTraitSchema)` to create a new message.
 */
export const RacialTraitSchema: GenMessage<RacialTrait> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 48);

/**
 * Unified choice for all types - equipment, proficiencies, languages, etc.
 *
 * @generated from message dnd5e.api.v1alpha1.Choice
 */
export type Choice = Message<"dnd5e.api.v1alpha1.Choice"> & {
  /**
   * Unique identifier for tracking
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Human-readable description
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * How many options to choose
   *
   * @generated from field: int32 choose_count = 3;
   */
  chooseCount: number;

  /**
   * What kind of choice this is
   *
   * @generated from field: dnd5e.api.v1alpha1.ChoiceType choice_type = 4;
   */
  choiceType: ChoiceType;

  /**
   * @generated from oneof dnd5e.api.v1alpha1.Choice.option_set
   */
  optionSet: {
    /**
     * List of specific options
     *
     * @generated from field: dnd5e.api.v1alpha1.ExplicitOptions explicit_options = 5;
     */
    value: ExplicitOptions;
    case: "explicitOptions";
  } | {
    /**
     * Reference to expandable category
     *
     * @generated from field: dnd5e.api.v1alpha1.CategoryReference category_reference = 6;
     */
    value: CategoryReference;
    case: "categoryReference";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message dnd5e.api.v1alpha1.Choice.
 * Use `create(ChoiceSchema)` to create a new message.
 */
export const ChoiceSchema: GenMessage<Choice> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 49);

/**
 * Explicit list of options to choose from
 *
 * @generated from message dnd5e.api.v1alpha1.ExplicitOptions
 */
export type ExplicitOptions = Message<"dnd5e.api.v1alpha1.ExplicitOptions"> & {
  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.ChoiceOption options = 1;
   */
  options: ChoiceOption[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.ExplicitOptions.
 * Use `create(ExplicitOptionsSchema)` to create a new message.
 */
export const ExplicitOptionsSchema: GenMessage<ExplicitOptions> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 50);

/**
 * Reference to a category that needs to be resolved/expanded
 *
 * @generated from message dnd5e.api.v1alpha1.CategoryReference
 */
export type CategoryReference = Message<"dnd5e.api.v1alpha1.CategoryReference"> & {
  /**
   * e.g., "martial-weapons", "artisan-tools"
   *
   * @generated from field: string category_id = 1;
   */
  categoryId: string;

  /**
   * Optional exclusions
   *
   * @generated from field: repeated string exclude_ids = 2;
   */
  excludeIds: string[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.CategoryReference.
 * Use `create(CategoryReferenceSchema)` to create a new message.
 */
export const CategoryReferenceSchema: GenMessage<CategoryReference> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 51);

/**
 * Individual option within a choice
 *
 * @generated from message dnd5e.api.v1alpha1.ChoiceOption
 */
export type ChoiceOption = Message<"dnd5e.api.v1alpha1.ChoiceOption"> & {
  /**
   * @generated from oneof dnd5e.api.v1alpha1.ChoiceOption.option_type
   */
  optionType: {
    /**
     * Single item reference
     *
     * @generated from field: dnd5e.api.v1alpha1.ItemReference item = 1;
     */
    value: ItemReference;
    case: "item";
  } | {
    /**
     * Item with quantity
     *
     * @generated from field: dnd5e.api.v1alpha1.CountedItemReference counted_item = 2;
     */
    value: CountedItemReference;
    case: "countedItem";
  } | {
    /**
     * Multiple items as one option
     *
     * @generated from field: dnd5e.api.v1alpha1.ItemBundle bundle = 3;
     */
    value: ItemBundle;
    case: "bundle";
  } | {
    /**
     * For complex nested choices
     *
     * @generated from field: dnd5e.api.v1alpha1.NestedChoice nested_choice = 4;
     */
    value: NestedChoice;
    case: "nestedChoice";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message dnd5e.api.v1alpha1.ChoiceOption.
 * Use `create(ChoiceOptionSchema)` to create a new message.
 */
export const ChoiceOptionSchema: GenMessage<ChoiceOption> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 52);

/**
 * @generated from message dnd5e.api.v1alpha1.ItemReference
 */
export type ItemReference = Message<"dnd5e.api.v1alpha1.ItemReference"> & {
  /**
   * ID to query with
   *
   * @generated from field: string item_id = 1;
   */
  itemId: string;

  /**
   * Display name
   *
   * @generated from field: string name = 2;
   */
  name: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ItemReference.
 * Use `create(ItemReferenceSchema)` to create a new message.
 */
export const ItemReferenceSchema: GenMessage<ItemReference> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 53);

/**
 * @generated from message dnd5e.api.v1alpha1.CountedItemReference
 */
export type CountedItemReference = Message<"dnd5e.api.v1alpha1.CountedItemReference"> & {
  /**
   * @generated from field: string item_id = 1;
   */
  itemId: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * e.g., 20 arrows
   *
   * @generated from field: int32 quantity = 3;
   */
  quantity: number;
};

/**
 * Describes the message dnd5e.api.v1alpha1.CountedItemReference.
 * Use `create(CountedItemReferenceSchema)` to create a new message.
 */
export const CountedItemReferenceSchema: GenMessage<CountedItemReference> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 54);

/**
 * @generated from message dnd5e.api.v1alpha1.ItemBundle
 */
export type ItemBundle = Message<"dnd5e.api.v1alpha1.ItemBundle"> & {
  /**
   * Items in the bundle (can be concrete or choices)
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.BundleItem items = 1;
   */
  items: BundleItem[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.ItemBundle.
 * Use `create(ItemBundleSchema)` to create a new message.
 */
export const ItemBundleSchema: GenMessage<ItemBundle> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 55);

/**
 * Represents a single item in a bundle, which can be either a concrete item or a choice
 *
 * @generated from message dnd5e.api.v1alpha1.BundleItem
 */
export type BundleItem = Message<"dnd5e.api.v1alpha1.BundleItem"> & {
  /**
   * @generated from oneof dnd5e.api.v1alpha1.BundleItem.item_type
   */
  itemType: {
    /**
     * Concrete item like "leather armor"
     *
     * @generated from field: dnd5e.api.v1alpha1.CountedItemReference concrete_item = 1;
     */
    value: CountedItemReference;
    case: "concreteItem";
  } | {
    /**
     * Choice like "a martial weapon"
     *
     * @generated from field: dnd5e.api.v1alpha1.NestedChoice choice_item = 2;
     */
    value: NestedChoice;
    case: "choiceItem";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message dnd5e.api.v1alpha1.BundleItem.
 * Use `create(BundleItemSchema)` to create a new message.
 */
export const BundleItemSchema: GenMessage<BundleItem> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 56);

/**
 * @generated from message dnd5e.api.v1alpha1.NestedChoice
 */
export type NestedChoice = Message<"dnd5e.api.v1alpha1.NestedChoice"> & {
  /**
   * Allows arbitrarily complex choices
   *
   * @generated from field: dnd5e.api.v1alpha1.Choice choice = 1;
   */
  choice?: Choice;
};

/**
 * Describes the message dnd5e.api.v1alpha1.NestedChoice.
 * Use `create(NestedChoiceSchema)` to create a new message.
 */
export const NestedChoiceSchema: GenMessage<NestedChoice> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 57);

/**
 * Detailed class information for selection UI
 *
 * @generated from message dnd5e.api.v1alpha1.ClassInfo
 */
export type ClassInfo = Message<"dnd5e.api.v1alpha1.ClassInfo"> & {
  /**
   * Basic identification
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Mechanical information
   *
   * @generated from field: string hit_die = 4;
   */
  hitDie: string;

  /**
   * @generated from field: repeated string primary_abilities = 5;
   */
  primaryAbilities: string[];

  /**
   * Proficiencies
   *
   * @generated from field: repeated string armor_proficiencies = 6;
   */
  armorProficiencies: string[];

  /**
   * @generated from field: repeated string weapon_proficiencies = 7;
   */
  weaponProficiencies: string[];

  /**
   * @generated from field: repeated string tool_proficiencies = 8;
   */
  toolProficiencies: string[];

  /**
   * @generated from field: repeated string saving_throw_proficiencies = 9;
   */
  savingThrowProficiencies: string[];

  /**
   * Skill choices
   *
   * @generated from field: int32 skill_choices_count = 10;
   */
  skillChoicesCount: number;

  /**
   * @generated from field: repeated string available_skills = 11;
   */
  availableSkills: string[];

  /**
   * Starting equipment
   *
   * @generated from field: repeated string starting_equipment = 12;
   */
  startingEquipment: string[];

  /**
   * Class features at level 1
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.FeatureInfo level_1_features = 13;
   */
  level1Features: FeatureInfo[];

  /**
   * Spellcasting information (if applicable)
   *
   * @generated from field: dnd5e.api.v1alpha1.SpellcastingInfo spellcasting = 14;
   */
  spellcasting?: SpellcastingInfo;

  /**
   * All choices (equipment, proficiencies, etc.)
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.Choice choices = 15;
   */
  choices: Choice[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.ClassInfo.
 * Use `create(ClassInfoSchema)` to create a new message.
 */
export const ClassInfoSchema: GenMessage<ClassInfo> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 58);

/**
 * Spellcasting information
 *
 * @generated from message dnd5e.api.v1alpha1.SpellcastingInfo
 */
export type SpellcastingInfo = Message<"dnd5e.api.v1alpha1.SpellcastingInfo"> & {
  /**
   * @generated from field: string spellcasting_ability = 1;
   */
  spellcastingAbility: string;

  /**
   * @generated from field: bool ritual_casting = 2;
   */
  ritualCasting: boolean;

  /**
   * @generated from field: string spellcasting_focus = 3;
   */
  spellcastingFocus: string;

  /**
   * @generated from field: int32 cantrips_known = 4;
   */
  cantripsKnown: number;

  /**
   * @generated from field: int32 spells_known = 5;
   */
  spellsKnown: number;

  /**
   * @generated from field: int32 spell_slots_level_1 = 6;
   */
  spellSlotsLevel1: number;
};

/**
 * Describes the message dnd5e.api.v1alpha1.SpellcastingInfo.
 * Use `create(SpellcastingInfoSchema)` to create a new message.
 */
export const SpellcastingInfoSchema: GenMessage<SpellcastingInfo> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 59);

/**
 * Detailed background information for selection UI
 *
 * @generated from message dnd5e.api.v1alpha1.BackgroundInfo
 */
export type BackgroundInfo = Message<"dnd5e.api.v1alpha1.BackgroundInfo"> & {
  /**
   * Basic identification
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Mechanical benefits
   *
   * @generated from field: repeated string skill_proficiencies = 4;
   */
  skillProficiencies: string[];

  /**
   * @generated from field: repeated string tool_proficiencies = 5;
   */
  toolProficiencies: string[];

  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.Language languages = 6;
   */
  languages: Language[];

  /**
   * @generated from field: int32 additional_languages = 7;
   */
  additionalLanguages: number;

  /**
   * Starting equipment
   *
   * @generated from field: repeated string starting_equipment = 8;
   */
  startingEquipment: string[];

  /**
   * @generated from field: int32 starting_gold = 9;
   */
  startingGold: number;

  /**
   * Background feature
   *
   * @generated from field: string feature_name = 10;
   */
  featureName: string;

  /**
   * @generated from field: string feature_description = 11;
   */
  featureDescription: string;

  /**
   * Suggested characteristics
   *
   * @generated from field: repeated string personality_traits = 12;
   */
  personalityTraits: string[];

  /**
   * @generated from field: repeated string ideals = 13;
   */
  ideals: string[];

  /**
   * @generated from field: repeated string bonds = 14;
   */
  bonds: string[];

  /**
   * @generated from field: repeated string flaws = 15;
   */
  flaws: string[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.BackgroundInfo.
 * Use `create(BackgroundInfoSchema)` to create a new message.
 */
export const BackgroundInfoSchema: GenMessage<BackgroundInfo> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 60);

/**
 * Detailed feature information for class features, racial traits, etc.
 *
 * @generated from message dnd5e.api.v1alpha1.FeatureInfo
 */
export type FeatureInfo = Message<"dnd5e.api.v1alpha1.FeatureInfo"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: int32 level = 4;
   */
  level: number;

  /**
   * @generated from field: string class_name = 5;
   */
  className: string;

  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.Choice choices = 6;
   */
  choices: Choice[];

  /**
   * @generated from field: bool has_choices = 7;
   */
  hasChoices: boolean;

  /**
   * Contains spell selection requirements for features that involve spell selection.
   * This field is only populated for features that allow or require selecting spells.
   *
   * @generated from field: dnd5e.api.v1alpha1.SpellSelectionInfo spell_selection = 8;
   */
  spellSelection?: SpellSelectionInfo;
};

/**
 * Describes the message dnd5e.api.v1alpha1.FeatureInfo.
 * Use `create(FeatureInfoSchema)` to create a new message.
 */
export const FeatureInfoSchema: GenMessage<FeatureInfo> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 61);

/**
 * Programmatic spell selection requirements
 *
 * @generated from message dnd5e.api.v1alpha1.SpellSelectionInfo
 */
export type SpellSelectionInfo = Message<"dnd5e.api.v1alpha1.SpellSelectionInfo"> & {
  /**
   * Number of spells to select
   *
   * @generated from field: int32 spells_to_select = 1;
   */
  spellsToSelect: number;

  /**
   * Allowed spell levels (0 for cantrips)
   *
   * @generated from field: repeated int32 spell_levels = 2;
   */
  spellLevels: number[];

  /**
   * Allowed spell lists (e.g., "wizard", "cleric")
   *
   * @generated from field: repeated string spell_lists = 3;
   */
  spellLists: string[];

  /**
   * Type of spell selection system
   *
   * @generated from field: dnd5e.api.v1alpha1.SpellSelectionType selection_type = 4;
   */
  selectionType: SpellSelectionType;

  /**
   * Whether spells can be replaced on level up
   *
   * @generated from field: bool requires_replace = 5;
   */
  requiresReplace: boolean;
};

/**
 * Describes the message dnd5e.api.v1alpha1.SpellSelectionInfo.
 * Use `create(SpellSelectionInfoSchema)` to create a new message.
 */
export const SpellSelectionInfoSchema: GenMessage<SpellSelectionInfo> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 62);

/**
 * Request to list races
 *
 * @generated from message dnd5e.api.v1alpha1.ListRacesRequest
 */
export type ListRacesRequest = Message<"dnd5e.api.v1alpha1.ListRacesRequest"> & {
  /**
   * Pagination
   *
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  /**
   * Optional filters
   *
   * @generated from field: bool include_subraces = 3;
   */
  includeSubraces: boolean;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ListRacesRequest.
 * Use `create(ListRacesRequestSchema)` to create a new message.
 */
export const ListRacesRequestSchema: GenMessage<ListRacesRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 63);

/**
 * Response with race list
 *
 * @generated from message dnd5e.api.v1alpha1.ListRacesResponse
 */
export type ListRacesResponse = Message<"dnd5e.api.v1alpha1.ListRacesResponse"> & {
  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.RaceInfo races = 1;
   */
  races: RaceInfo[];

  /**
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * @generated from field: int32 total_size = 3;
   */
  totalSize: number;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ListRacesResponse.
 * Use `create(ListRacesResponseSchema)` to create a new message.
 */
export const ListRacesResponseSchema: GenMessage<ListRacesResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 64);

/**
 * Request to list classes
 *
 * @generated from message dnd5e.api.v1alpha1.ListClassesRequest
 */
export type ListClassesRequest = Message<"dnd5e.api.v1alpha1.ListClassesRequest"> & {
  /**
   * Pagination
   *
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  /**
   * Optional filters
   *
   * @generated from field: bool include_spellcasters_only = 3;
   */
  includeSpellcastersOnly: boolean;

  /**
   * @generated from field: bool include_features = 4;
   */
  includeFeatures: boolean;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ListClassesRequest.
 * Use `create(ListClassesRequestSchema)` to create a new message.
 */
export const ListClassesRequestSchema: GenMessage<ListClassesRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 65);

/**
 * Response with class list
 *
 * @generated from message dnd5e.api.v1alpha1.ListClassesResponse
 */
export type ListClassesResponse = Message<"dnd5e.api.v1alpha1.ListClassesResponse"> & {
  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.ClassInfo classes = 1;
   */
  classes: ClassInfo[];

  /**
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * @generated from field: int32 total_size = 3;
   */
  totalSize: number;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ListClassesResponse.
 * Use `create(ListClassesResponseSchema)` to create a new message.
 */
export const ListClassesResponseSchema: GenMessage<ListClassesResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 66);

/**
 * Request to list backgrounds
 *
 * @generated from message dnd5e.api.v1alpha1.ListBackgroundsRequest
 */
export type ListBackgroundsRequest = Message<"dnd5e.api.v1alpha1.ListBackgroundsRequest"> & {
  /**
   * Pagination
   *
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * @generated from field: string page_token = 2;
   */
  pageToken: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ListBackgroundsRequest.
 * Use `create(ListBackgroundsRequestSchema)` to create a new message.
 */
export const ListBackgroundsRequestSchema: GenMessage<ListBackgroundsRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 67);

/**
 * Response with background list
 *
 * @generated from message dnd5e.api.v1alpha1.ListBackgroundsResponse
 */
export type ListBackgroundsResponse = Message<"dnd5e.api.v1alpha1.ListBackgroundsResponse"> & {
  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.BackgroundInfo backgrounds = 1;
   */
  backgrounds: BackgroundInfo[];

  /**
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * @generated from field: int32 total_size = 3;
   */
  totalSize: number;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ListBackgroundsResponse.
 * Use `create(ListBackgroundsResponseSchema)` to create a new message.
 */
export const ListBackgroundsResponseSchema: GenMessage<ListBackgroundsResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 68);

/**
 * Request to get detailed race information
 *
 * @generated from message dnd5e.api.v1alpha1.GetRaceDetailsRequest
 */
export type GetRaceDetailsRequest = Message<"dnd5e.api.v1alpha1.GetRaceDetailsRequest"> & {
  /**
   * @generated from field: string race_id = 1;
   */
  raceId: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.GetRaceDetailsRequest.
 * Use `create(GetRaceDetailsRequestSchema)` to create a new message.
 */
export const GetRaceDetailsRequestSchema: GenMessage<GetRaceDetailsRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 69);

/**
 * Response with detailed race information
 *
 * @generated from message dnd5e.api.v1alpha1.GetRaceDetailsResponse
 */
export type GetRaceDetailsResponse = Message<"dnd5e.api.v1alpha1.GetRaceDetailsResponse"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.RaceInfo race = 1;
   */
  race?: RaceInfo;
};

/**
 * Describes the message dnd5e.api.v1alpha1.GetRaceDetailsResponse.
 * Use `create(GetRaceDetailsResponseSchema)` to create a new message.
 */
export const GetRaceDetailsResponseSchema: GenMessage<GetRaceDetailsResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 70);

/**
 * Request to get detailed class information
 *
 * @generated from message dnd5e.api.v1alpha1.GetClassDetailsRequest
 */
export type GetClassDetailsRequest = Message<"dnd5e.api.v1alpha1.GetClassDetailsRequest"> & {
  /**
   * @generated from field: string class_id = 1;
   */
  classId: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.GetClassDetailsRequest.
 * Use `create(GetClassDetailsRequestSchema)` to create a new message.
 */
export const GetClassDetailsRequestSchema: GenMessage<GetClassDetailsRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 71);

/**
 * Response with detailed class information
 *
 * @generated from message dnd5e.api.v1alpha1.GetClassDetailsResponse
 */
export type GetClassDetailsResponse = Message<"dnd5e.api.v1alpha1.GetClassDetailsResponse"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.ClassInfo class = 1;
   */
  class?: ClassInfo;
};

/**
 * Describes the message dnd5e.api.v1alpha1.GetClassDetailsResponse.
 * Use `create(GetClassDetailsResponseSchema)` to create a new message.
 */
export const GetClassDetailsResponseSchema: GenMessage<GetClassDetailsResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 72);

/**
 * Request to get detailed background information
 *
 * @generated from message dnd5e.api.v1alpha1.GetBackgroundDetailsRequest
 */
export type GetBackgroundDetailsRequest = Message<"dnd5e.api.v1alpha1.GetBackgroundDetailsRequest"> & {
  /**
   * @generated from field: string background_id = 1;
   */
  backgroundId: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.GetBackgroundDetailsRequest.
 * Use `create(GetBackgroundDetailsRequestSchema)` to create a new message.
 */
export const GetBackgroundDetailsRequestSchema: GenMessage<GetBackgroundDetailsRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 73);

/**
 * Response with detailed background information
 *
 * @generated from message dnd5e.api.v1alpha1.GetBackgroundDetailsResponse
 */
export type GetBackgroundDetailsResponse = Message<"dnd5e.api.v1alpha1.GetBackgroundDetailsResponse"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.BackgroundInfo background = 1;
   */
  background?: BackgroundInfo;
};

/**
 * Describes the message dnd5e.api.v1alpha1.GetBackgroundDetailsResponse.
 * Use `create(GetBackgroundDetailsResponseSchema)` to create a new message.
 */
export const GetBackgroundDetailsResponseSchema: GenMessage<GetBackgroundDetailsResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 74);

/**
 * Request for a specific feature by its ID
 *
 * @generated from message dnd5e.api.v1alpha1.GetFeatureRequest
 */
export type GetFeatureRequest = Message<"dnd5e.api.v1alpha1.GetFeatureRequest"> & {
  /**
   * @generated from field: string feature_id = 1;
   */
  featureId: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.GetFeatureRequest.
 * Use `create(GetFeatureRequestSchema)` to create a new message.
 */
export const GetFeatureRequestSchema: GenMessage<GetFeatureRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 75);

/**
 * Response with detailed feature information
 *
 * @generated from message dnd5e.api.v1alpha1.GetFeatureResponse
 */
export type GetFeatureResponse = Message<"dnd5e.api.v1alpha1.GetFeatureResponse"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.FeatureInfo feature = 1;
   */
  feature?: FeatureInfo;
};

/**
 * Describes the message dnd5e.api.v1alpha1.GetFeatureResponse.
 * Use `create(GetFeatureResponseSchema)` to create a new message.
 */
export const GetFeatureResponseSchema: GenMessage<GetFeatureResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 76);

/**
 * Request to roll ability scores for a character draft
 *
 * @generated from message dnd5e.api.v1alpha1.RollAbilityScoresRequest
 */
export type RollAbilityScoresRequest = Message<"dnd5e.api.v1alpha1.RollAbilityScoresRequest"> & {
  /**
   * @generated from field: string draft_id = 1;
   */
  draftId: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.RollAbilityScoresRequest.
 * Use `create(RollAbilityScoresRequestSchema)` to create a new message.
 */
export const RollAbilityScoresRequestSchema: GenMessage<RollAbilityScoresRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 77);

/**
 * A single ability score roll (4d6 drop lowest)
 *
 * @generated from message dnd5e.api.v1alpha1.AbilityScoreRoll
 */
export type AbilityScoreRoll = Message<"dnd5e.api.v1alpha1.AbilityScoreRoll"> & {
  /**
   * Unique identifier for this roll (roll_1, roll_2, etc.)
   *
   * @generated from field: string roll_id = 1;
   */
  rollId: string;

  /**
   * The individual dice that were rolled (4 dice)
   *
   * @generated from field: repeated int32 dice = 2;
   */
  dice: number[];

  /**
   * The sum of the highest 3 dice (final ability score value)
   *
   * @generated from field: int32 total = 3;
   */
  total: number;

  /**
   * The dice value that was dropped (lowest)
   *
   * @generated from field: int32 dropped = 4;
   */
  dropped: number;

  /**
   * Human readable notation (e.g., "4d6 drop lowest: [6,5,4,1] = 15")
   *
   * @generated from field: string notation = 5;
   */
  notation: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.AbilityScoreRoll.
 * Use `create(AbilityScoreRollSchema)` to create a new message.
 */
export const AbilityScoreRollSchema: GenMessage<AbilityScoreRoll> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 78);

/**
 * Response containing 6 ability score rolls
 *
 * @generated from message dnd5e.api.v1alpha1.RollAbilityScoresResponse
 */
export type RollAbilityScoresResponse = Message<"dnd5e.api.v1alpha1.RollAbilityScoresResponse"> & {
  /**
   * Array of 6 rolls that can be assigned to abilities
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.AbilityScoreRoll rolls = 1;
   */
  rolls: AbilityScoreRoll[];

  /**
   * Unix timestamp when these rolls expire (15 minutes from creation)
   *
   * @generated from field: int64 expires_at = 2;
   */
  expiresAt: bigint;
};

/**
 * Describes the message dnd5e.api.v1alpha1.RollAbilityScoresResponse.
 * Use `create(RollAbilityScoresResponseSchema)` to create a new message.
 */
export const RollAbilityScoresResponseSchema: GenMessage<RollAbilityScoresResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 79);

/**
 * Roll assignment mapping for ability scores
 *
 * @generated from message dnd5e.api.v1alpha1.RollAssignments
 */
export type RollAssignments = Message<"dnd5e.api.v1alpha1.RollAssignments"> & {
  /**
   * @generated from field: string strength_roll_id = 1;
   */
  strengthRollId: string;

  /**
   * @generated from field: string dexterity_roll_id = 2;
   */
  dexterityRollId: string;

  /**
   * @generated from field: string constitution_roll_id = 3;
   */
  constitutionRollId: string;

  /**
   * @generated from field: string intelligence_roll_id = 4;
   */
  intelligenceRollId: string;

  /**
   * @generated from field: string wisdom_roll_id = 5;
   */
  wisdomRollId: string;

  /**
   * @generated from field: string charisma_roll_id = 6;
   */
  charismaRollId: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.RollAssignments.
 * Use `create(RollAssignmentsSchema)` to create a new message.
 */
export const RollAssignmentsSchema: GenMessage<RollAssignments> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 80);

/**
 * Cost information for equipment
 *
 * @generated from message dnd5e.api.v1alpha1.Cost
 */
export type Cost = Message<"dnd5e.api.v1alpha1.Cost"> & {
  /**
   * @generated from field: int32 quantity = 1;
   */
  quantity: number;

  /**
   * "gp", "sp", "cp", etc.
   *
   * @generated from field: string unit = 2;
   */
  unit: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.Cost.
 * Use `create(CostSchema)` to create a new message.
 */
export const CostSchema: GenMessage<Cost> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 81);

/**
 * Weight information for equipment
 *
 * @generated from message dnd5e.api.v1alpha1.Weight
 */
export type Weight = Message<"dnd5e.api.v1alpha1.Weight"> & {
  /**
   * Weight value in fixed-point representation (e.g., grams or ounces)
   *
   * @generated from field: int32 quantity = 1;
   */
  quantity: number;

  /**
   * Unit of measurement (e.g., "g", "oz", "lbs")
   *
   * @generated from field: string unit = 2;
   */
  unit: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.Weight.
 * Use `create(WeightSchema)` to create a new message.
 */
export const WeightSchema: GenMessage<Weight> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 82);

/**
 * Equipment item
 *
 * @generated from message dnd5e.api.v1alpha1.Equipment
 */
export type Equipment = Message<"dnd5e.api.v1alpha1.Equipment"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * "simple-weapon", "martial-weapon", etc.
   *
   * @generated from field: string category = 3;
   */
  category: string;

  /**
   * @generated from field: dnd5e.api.v1alpha1.Cost cost = 4;
   */
  cost?: Cost;

  /**
   * @generated from field: dnd5e.api.v1alpha1.Weight weight = 5;
   */
  weight?: Weight;

  /**
   * @generated from field: string description = 6;
   */
  description: string;

  /**
   * Equipment type-specific data
   *
   * @generated from oneof dnd5e.api.v1alpha1.Equipment.equipment_data
   */
  equipmentData: {
    /**
     * @generated from field: dnd5e.api.v1alpha1.WeaponData weapon_data = 7;
     */
    value: WeaponData;
    case: "weaponData";
  } | {
    /**
     * @generated from field: dnd5e.api.v1alpha1.ArmorData armor_data = 8;
     */
    value: ArmorData;
    case: "armorData";
  } | {
    /**
     * @generated from field: dnd5e.api.v1alpha1.GearData gear_data = 9;
     */
    value: GearData;
    case: "gearData";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message dnd5e.api.v1alpha1.Equipment.
 * Use `create(EquipmentSchema)` to create a new message.
 */
export const EquipmentSchema: GenMessage<Equipment> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 83);

/**
 * Weapon-specific data
 *
 * @generated from message dnd5e.api.v1alpha1.WeaponData
 */
export type WeaponData = Message<"dnd5e.api.v1alpha1.WeaponData"> & {
  /**
   * "simple", "martial"
   *
   * @generated from field: string weapon_category = 1;
   */
  weaponCategory: string;

  /**
   * "1d6", "1d8", etc.
   *
   * @generated from field: string damage_dice = 2;
   */
  damageDice: string;

  /**
   * "slashing", "piercing", etc.
   *
   * @generated from field: string damage_type = 3;
   */
  damageType: string;

  /**
   * "light", "finesse", etc.
   *
   * @generated from field: repeated string properties = 4;
   */
  properties: string[];

  /**
   * "melee", "ranged"
   *
   * @generated from field: string range = 5;
   */
  range: string;

  /**
   * range in feet for ranged weapons
   *
   * @generated from field: int32 normal_range = 6;
   */
  normalRange: number;

  /**
   * long range in feet for ranged weapons
   *
   * @generated from field: int32 long_range = 7;
   */
  longRange: number;
};

/**
 * Describes the message dnd5e.api.v1alpha1.WeaponData.
 * Use `create(WeaponDataSchema)` to create a new message.
 */
export const WeaponDataSchema: GenMessage<WeaponData> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 84);

/**
 * Armor-specific data
 *
 * @generated from message dnd5e.api.v1alpha1.ArmorData
 */
export type ArmorData = Message<"dnd5e.api.v1alpha1.ArmorData"> & {
  /**
   * "light", "medium", "heavy", "shield"
   *
   * @generated from field: string armor_category = 1;
   */
  armorCategory: string;

  /**
   * @generated from field: int32 base_ac = 2;
   */
  baseAc: number;

  /**
   * @generated from field: bool dex_bonus = 3;
   */
  dexBonus: boolean;

  /**
   * Indicates if max_dex_bonus is applicable
   *
   * @generated from field: bool has_dex_limit = 4;
   */
  hasDexLimit: boolean;

  /**
   * Maximum Dexterity bonus to AC, valid only if has_dex_limit is true
   *
   * @generated from field: int32 max_dex_bonus = 5;
   */
  maxDexBonus: number;

  /**
   * @generated from field: int32 str_minimum = 6;
   */
  strMinimum: number;

  /**
   * @generated from field: bool stealth_disadvantage = 7;
   */
  stealthDisadvantage: boolean;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ArmorData.
 * Use `create(ArmorDataSchema)` to create a new message.
 */
export const ArmorDataSchema: GenMessage<ArmorData> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 85);

/**
 * General gear data
 *
 * @generated from message dnd5e.api.v1alpha1.GearData
 */
export type GearData = Message<"dnd5e.api.v1alpha1.GearData"> & {
  /**
   * "adventuring-gear", "tools", etc.
   *
   * @generated from field: string gear_category = 1;
   */
  gearCategory: string;

  /**
   * @generated from field: repeated string properties = 2;
   */
  properties: string[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.GearData.
 * Use `create(GearDataSchema)` to create a new message.
 */
export const GearDataSchema: GenMessage<GearData> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 86);

/**
 * Spell item
 *
 * @generated from message dnd5e.api.v1alpha1.Spell
 */
export type Spell = Message<"dnd5e.api.v1alpha1.Spell"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * 0-9 (0 = cantrips)
   *
   * @generated from field: int32 level = 3;
   */
  level: number;

  /**
   * "evocation", "abjuration", etc.
   *
   * @generated from field: string school = 4;
   */
  school: string;

  /**
   * Classes that can cast this spell
   *
   * @generated from field: repeated string classes = 5;
   */
  classes: string[];

  /**
   * "1 action", "1 bonus action", etc.
   *
   * @generated from field: string casting_time = 6;
   */
  castingTime: string;

  /**
   * "Touch", "30 feet", etc.
   *
   * @generated from field: string range = 7;
   */
  range: string;

  /**
   * "Instantaneous", "1 minute", etc.
   *
   * @generated from field: string duration = 8;
   */
  duration: string;

  /**
   * @generated from field: bool ritual = 9;
   */
  ritual: boolean;

  /**
   * @generated from field: bool concentration = 10;
   */
  concentration: boolean;

  /**
   * "V, S, M", etc.
   *
   * @generated from field: string components = 11;
   */
  components: string;

  /**
   * @generated from field: string description = 12;
   */
  description: string;

  /**
   * Spell damage information
   *
   * @generated from field: dnd5e.api.v1alpha1.SpellDamage damage = 13;
   */
  damage?: SpellDamage;

  /**
   * Area of effect
   *
   * @generated from field: dnd5e.api.v1alpha1.AreaOfEffect area_of_effect = 14;
   */
  areaOfEffect?: AreaOfEffect;
};

/**
 * Describes the message dnd5e.api.v1alpha1.Spell.
 * Use `create(SpellSchema)` to create a new message.
 */
export const SpellSchema: GenMessage<Spell> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 87);

/**
 * Tracks a choice made during character creation
 *
 * @generated from message dnd5e.api.v1alpha1.ChoiceSelection
 */
export type ChoiceSelection = Message<"dnd5e.api.v1alpha1.ChoiceSelection"> & {
  /**
   * ID from Choice in RaceInfo/ClassInfo
   *
   * @generated from field: string choice_id = 1;
   */
  choiceId: string;

  /**
   * EQUIPMENT, SKILL, etc.
   *
   * @generated from field: dnd5e.api.v1alpha1.ChoiceType choice_type = 2;
   */
  choiceType: ChoiceType;

  /**
   * Where this choice came from
   *
   * @generated from field: dnd5e.api.v1alpha1.ChoiceSource source = 3;
   */
  source: ChoiceSource;

  /**
   * What was selected
   *
   * @generated from field: repeated string selected_keys = 4;
   */
  selectedKeys: string[];

  /**
   * For ability score choices
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.AbilityScoreChoice ability_score_choices = 5;
   */
  abilityScoreChoices: AbilityScoreChoice[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.ChoiceSelection.
 * Use `create(ChoiceSelectionSchema)` to create a new message.
 */
export const ChoiceSelectionSchema: GenMessage<ChoiceSelection> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 88);

/**
 * Represents an ability score bonus selection
 *
 * @generated from message dnd5e.api.v1alpha1.AbilityScoreChoice
 */
export type AbilityScoreChoice = Message<"dnd5e.api.v1alpha1.AbilityScoreChoice"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.Ability ability = 1;
   */
  ability: Ability;

  /**
   * @generated from field: int32 bonus = 2;
   */
  bonus: number;
};

/**
 * Describes the message dnd5e.api.v1alpha1.AbilityScoreChoice.
 * Use `create(AbilityScoreChoiceSchema)` to create a new message.
 */
export const AbilityScoreChoiceSchema: GenMessage<AbilityScoreChoice> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 89);

/**
 * Spell damage information
 *
 * @generated from message dnd5e.api.v1alpha1.SpellDamage
 */
export type SpellDamage = Message<"dnd5e.api.v1alpha1.SpellDamage"> & {
  /**
   * @generated from field: string damage_type = 1;
   */
  damageType: string;

  /**
   * List of damage dice by slot level
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.DamageAtSlotLevel damage_at_slot_level = 2;
   */
  damageAtSlotLevel: DamageAtSlotLevel[];
};

/**
 * Describes the message dnd5e.api.v1alpha1.SpellDamage.
 * Use `create(SpellDamageSchema)` to create a new message.
 */
export const SpellDamageSchema: GenMessage<SpellDamage> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 90);

/**
 * Damage at a specific slot level
 *
 * @generated from message dnd5e.api.v1alpha1.DamageAtSlotLevel
 */
export type DamageAtSlotLevel = Message<"dnd5e.api.v1alpha1.DamageAtSlotLevel"> & {
  /**
   * Spell slot level (0-9)
   *
   * @generated from field: int32 slot_level = 1;
   */
  slotLevel: number;

  /**
   * Damage dice (e.g., "2d6", "3d8")
   *
   * @generated from field: string damage_dice = 2;
   */
  damageDice: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.DamageAtSlotLevel.
 * Use `create(DamageAtSlotLevelSchema)` to create a new message.
 */
export const DamageAtSlotLevelSchema: GenMessage<DamageAtSlotLevel> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 91);

/**
 * Area of effect information
 *
 * @generated from message dnd5e.api.v1alpha1.AreaOfEffect
 */
export type AreaOfEffect = Message<"dnd5e.api.v1alpha1.AreaOfEffect"> & {
  /**
   * "sphere", "cone", "line", etc.
   *
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * radius, length, etc.
   *
   * @generated from field: int32 size = 2;
   */
  size: number;
};

/**
 * Describes the message dnd5e.api.v1alpha1.AreaOfEffect.
 * Use `create(AreaOfEffectSchema)` to create a new message.
 */
export const AreaOfEffectSchema: GenMessage<AreaOfEffect> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 92);

/**
 * Request to list equipment by type
 *
 * @generated from message dnd5e.api.v1alpha1.ListEquipmentByTypeRequest
 */
export type ListEquipmentByTypeRequest = Message<"dnd5e.api.v1alpha1.ListEquipmentByTypeRequest"> & {
  /**
   * Type of equipment to filter by
   *
   * @generated from field: dnd5e.api.v1alpha1.EquipmentType equipment_type = 1;
   */
  equipmentType: EquipmentType;

  /**
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ListEquipmentByTypeRequest.
 * Use `create(ListEquipmentByTypeRequestSchema)` to create a new message.
 */
export const ListEquipmentByTypeRequestSchema: GenMessage<ListEquipmentByTypeRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 93);

/**
 * Response with equipment list
 *
 * @generated from message dnd5e.api.v1alpha1.ListEquipmentByTypeResponse
 */
export type ListEquipmentByTypeResponse = Message<"dnd5e.api.v1alpha1.ListEquipmentByTypeResponse"> & {
  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.Equipment equipment = 1;
   */
  equipment: Equipment[];

  /**
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * @generated from field: int32 total_size = 3;
   */
  totalSize: number;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ListEquipmentByTypeResponse.
 * Use `create(ListEquipmentByTypeResponseSchema)` to create a new message.
 */
export const ListEquipmentByTypeResponseSchema: GenMessage<ListEquipmentByTypeResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 94);

/**
 * Request to list spells by level
 *
 * @generated from message dnd5e.api.v1alpha1.ListSpellsByLevelRequest
 */
export type ListSpellsByLevelRequest = Message<"dnd5e.api.v1alpha1.ListSpellsByLevelRequest"> & {
  /**
   * 0-9 (0 = cantrips)
   *
   * @generated from field: int32 level = 1;
   */
  level: number;

  /**
   * Optional: filter by class
   *
   * @generated from field: dnd5e.api.v1alpha1.Class class = 2;
   */
  class: Class;

  /**
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * @generated from field: string page_token = 4;
   */
  pageToken: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ListSpellsByLevelRequest.
 * Use `create(ListSpellsByLevelRequestSchema)` to create a new message.
 */
export const ListSpellsByLevelRequestSchema: GenMessage<ListSpellsByLevelRequest> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 95);

/**
 * Response with spell list
 *
 * @generated from message dnd5e.api.v1alpha1.ListSpellsByLevelResponse
 */
export type ListSpellsByLevelResponse = Message<"dnd5e.api.v1alpha1.ListSpellsByLevelResponse"> & {
  /**
   * @generated from field: repeated dnd5e.api.v1alpha1.Spell spells = 1;
   */
  spells: Spell[];

  /**
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * @generated from field: int32 total_size = 3;
   */
  totalSize: number;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ListSpellsByLevelResponse.
 * Use `create(ListSpellsByLevelResponseSchema)` to create a new message.
 */
export const ListSpellsByLevelResponseSchema: GenMessage<ListSpellsByLevelResponse> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_character, 96);

/**
 * Steps in character creation
 *
 * @generated from enum dnd5e.api.v1alpha1.CreationStep
 */
export enum CreationStep {
  /**
   * @generated from enum value: CREATION_STEP_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: CREATION_STEP_NAME = 1;
   */
  NAME = 1,

  /**
   * @generated from enum value: CREATION_STEP_RACE = 2;
   */
  RACE = 2,

  /**
   * @generated from enum value: CREATION_STEP_CLASS = 3;
   */
  CLASS = 3,

  /**
   * @generated from enum value: CREATION_STEP_BACKGROUND = 4;
   */
  BACKGROUND = 4,

  /**
   * @generated from enum value: CREATION_STEP_ABILITY_SCORES = 5;
   */
  ABILITY_SCORES = 5,

  /**
   * @generated from enum value: CREATION_STEP_SKILLS = 6;
   */
  SKILLS = 6,

  /**
   * @generated from enum value: CREATION_STEP_LANGUAGES = 7;
   */
  LANGUAGES = 7,

  /**
   * @generated from enum value: CREATION_STEP_REVIEW = 8;
   */
  REVIEW = 8,
}

/**
 * Describes the enum dnd5e.api.v1alpha1.CreationStep.
 */
export const CreationStepSchema: GenEnum<CreationStep> = /*@__PURE__*/
  enumDesc(file_dnd5e_api_v1alpha1_character, 0);

/**
 * @generated from enum dnd5e.api.v1alpha1.WarningType
 */
export enum WarningType {
  /**
   * @generated from enum value: WARNING_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: WARNING_TYPE_MISSING_REQUIRED = 1;
   */
  MISSING_REQUIRED = 1,

  /**
   * @generated from enum value: WARNING_TYPE_INVALID_COMBINATION = 2;
   */
  INVALID_COMBINATION = 2,

  /**
   * @generated from enum value: WARNING_TYPE_SUBOPTIMAL_CHOICE = 3;
   */
  SUBOPTIMAL_CHOICE = 3,
}

/**
 * Describes the enum dnd5e.api.v1alpha1.WarningType.
 */
export const WarningTypeSchema: GenEnum<WarningType> = /*@__PURE__*/
  enumDesc(file_dnd5e_api_v1alpha1_character, 1);

/**
 * Type of choice being made
 *
 * @generated from enum dnd5e.api.v1alpha1.ChoiceType
 */
export enum ChoiceType {
  /**
   * @generated from enum value: CHOICE_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: CHOICE_TYPE_EQUIPMENT = 1;
   */
  EQUIPMENT = 1,

  /**
   * Skill proficiencies
   *
   * @generated from enum value: CHOICE_TYPE_SKILL = 2;
   */
  SKILL = 2,

  /**
   * Tool proficiencies
   *
   * @generated from enum value: CHOICE_TYPE_TOOL = 3;
   */
  TOOL = 3,

  /**
   * Languages
   *
   * @generated from enum value: CHOICE_TYPE_LANGUAGE = 4;
   */
  LANGUAGE = 4,

  /**
   * Weapon proficiencies
   *
   * @generated from enum value: CHOICE_TYPE_WEAPON_PROFICIENCY = 5;
   */
  WEAPON_PROFICIENCY = 5,

  /**
   * Armor proficiencies
   *
   * @generated from enum value: CHOICE_TYPE_ARMOR_PROFICIENCY = 6;
   */
  ARMOR_PROFICIENCY = 6,

  /**
   * Spells known/prepared
   *
   * @generated from enum value: CHOICE_TYPE_SPELL = 7;
   */
  SPELL = 7,

  /**
   * Feats
   *
   * @generated from enum value: CHOICE_TYPE_FEAT = 8;
   */
  FEAT = 8,
}

/**
 * Describes the enum dnd5e.api.v1alpha1.ChoiceType.
 */
export const ChoiceTypeSchema: GenEnum<ChoiceType> = /*@__PURE__*/
  enumDesc(file_dnd5e_api_v1alpha1_character, 2);

/**
 * Character size category
 *
 * @generated from enum dnd5e.api.v1alpha1.Size
 */
export enum Size {
  /**
   * @generated from enum value: SIZE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: SIZE_TINY = 1;
   */
  TINY = 1,

  /**
   * @generated from enum value: SIZE_SMALL = 2;
   */
  SMALL = 2,

  /**
   * @generated from enum value: SIZE_MEDIUM = 3;
   */
  MEDIUM = 3,

  /**
   * @generated from enum value: SIZE_LARGE = 4;
   */
  LARGE = 4,

  /**
   * @generated from enum value: SIZE_HUGE = 5;
   */
  HUGE = 5,

  /**
   * @generated from enum value: SIZE_GARGANTUAN = 6;
   */
  GARGANTUAN = 6,
}

/**
 * Describes the enum dnd5e.api.v1alpha1.Size.
 */
export const SizeSchema: GenEnum<Size> = /*@__PURE__*/
  enumDesc(file_dnd5e_api_v1alpha1_character, 3);

/**
 * Types of spell selection systems
 *
 * @generated from enum dnd5e.api.v1alpha1.SpellSelectionType
 */
export enum SpellSelectionType {
  /**
   * @generated from enum value: SPELL_SELECTION_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Wizard spellbook system
   *
   * @generated from enum value: SPELL_SELECTION_TYPE_SPELLBOOK = 1;
   */
  SPELLBOOK = 1,

  /**
   * Fixed known spells (sorcerer, warlock)
   *
   * @generated from enum value: SPELL_SELECTION_TYPE_KNOWN = 2;
   */
  KNOWN = 2,

  /**
   * Prepared spells (cleric, druid)
   *
   * @generated from enum value: SPELL_SELECTION_TYPE_PREPARED = 3;
   */
  PREPARED = 3,
}

/**
 * Describes the enum dnd5e.api.v1alpha1.SpellSelectionType.
 */
export const SpellSelectionTypeSchema: GenEnum<SpellSelectionType> = /*@__PURE__*/
  enumDesc(file_dnd5e_api_v1alpha1_character, 4);

/**
 * Source of a choice during character creation
 *
 * @generated from enum dnd5e.api.v1alpha1.ChoiceSource
 */
export enum ChoiceSource {
  /**
   * @generated from enum value: CHOICE_SOURCE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: CHOICE_SOURCE_RACE = 1;
   */
  RACE = 1,

  /**
   * @generated from enum value: CHOICE_SOURCE_SUBRACE = 2;
   */
  SUBRACE = 2,

  /**
   * @generated from enum value: CHOICE_SOURCE_CLASS = 3;
   */
  CLASS = 3,

  /**
   * @generated from enum value: CHOICE_SOURCE_BACKGROUND = 4;
   */
  BACKGROUND = 4,
}

/**
 * Describes the enum dnd5e.api.v1alpha1.ChoiceSource.
 */
export const ChoiceSourceSchema: GenEnum<ChoiceSource> = /*@__PURE__*/
  enumDesc(file_dnd5e_api_v1alpha1_character, 5);

/**
 * Service for D&D 5e character creation and management
 * Supports both wizard-style step-by-step creation and free-form editing
 *
 * @generated from service dnd5e.api.v1alpha1.CharacterService
 */
export const CharacterService: GenService<{
  /**
   * Draft lifecycle
   *
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.CreateDraft
   */
  createDraft: {
    methodKind: "unary";
    input: typeof CreateDraftRequestSchema;
    output: typeof CreateDraftResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.GetDraft
   */
  getDraft: {
    methodKind: "unary";
    input: typeof GetDraftRequestSchema;
    output: typeof GetDraftResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.ListDrafts
   */
  listDrafts: {
    methodKind: "unary";
    input: typeof ListDraftsRequestSchema;
    output: typeof ListDraftsResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.DeleteDraft
   */
  deleteDraft: {
    methodKind: "unary";
    input: typeof DeleteDraftRequestSchema;
    output: typeof DeleteDraftResponseSchema;
  },
  /**
   * Section-based updates (supports skip-around editing)
   *
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.UpdateName
   */
  updateName: {
    methodKind: "unary";
    input: typeof UpdateNameRequestSchema;
    output: typeof UpdateNameResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.UpdateRace
   */
  updateRace: {
    methodKind: "unary";
    input: typeof UpdateRaceRequestSchema;
    output: typeof UpdateRaceResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.UpdateClass
   */
  updateClass: {
    methodKind: "unary";
    input: typeof UpdateClassRequestSchema;
    output: typeof UpdateClassResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.UpdateBackground
   */
  updateBackground: {
    methodKind: "unary";
    input: typeof UpdateBackgroundRequestSchema;
    output: typeof UpdateBackgroundResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.UpdateAbilityScores
   */
  updateAbilityScores: {
    methodKind: "unary";
    input: typeof UpdateAbilityScoresRequestSchema;
    output: typeof UpdateAbilityScoresResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.UpdateSkills
   */
  updateSkills: {
    methodKind: "unary";
    input: typeof UpdateSkillsRequestSchema;
    output: typeof UpdateSkillsResponseSchema;
  },
  /**
   * Validation
   *
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.ValidateDraft
   */
  validateDraft: {
    methodKind: "unary";
    input: typeof ValidateDraftRequestSchema;
    output: typeof ValidateDraftResponseSchema;
  },
  /**
   * Get a preview of what the character would look like if finalized
   *
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.GetDraftPreview
   */
  getDraftPreview: {
    methodKind: "unary";
    input: typeof GetDraftPreviewRequestSchema;
    output: typeof GetDraftPreviewResponseSchema;
  },
  /**
   * Character finalization
   *
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.FinalizeDraft
   */
  finalizeDraft: {
    methodKind: "unary";
    input: typeof FinalizeDraftRequestSchema;
    output: typeof FinalizeDraftResponseSchema;
  },
  /**
   * Completed character operations
   *
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.GetCharacter
   */
  getCharacter: {
    methodKind: "unary";
    input: typeof GetCharacterRequestSchema;
    output: typeof GetCharacterResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.ListCharacters
   */
  listCharacters: {
    methodKind: "unary";
    input: typeof ListCharactersRequestSchema;
    output: typeof ListCharactersResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.DeleteCharacter
   */
  deleteCharacter: {
    methodKind: "unary";
    input: typeof DeleteCharacterRequestSchema;
    output: typeof DeleteCharacterResponseSchema;
  },
  /**
   * Data loading for character creation UI
   *
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.ListRaces
   */
  listRaces: {
    methodKind: "unary";
    input: typeof ListRacesRequestSchema;
    output: typeof ListRacesResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.ListClasses
   */
  listClasses: {
    methodKind: "unary";
    input: typeof ListClassesRequestSchema;
    output: typeof ListClassesResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.ListBackgrounds
   */
  listBackgrounds: {
    methodKind: "unary";
    input: typeof ListBackgroundsRequestSchema;
    output: typeof ListBackgroundsResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.GetRaceDetails
   */
  getRaceDetails: {
    methodKind: "unary";
    input: typeof GetRaceDetailsRequestSchema;
    output: typeof GetRaceDetailsResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.GetClassDetails
   */
  getClassDetails: {
    methodKind: "unary";
    input: typeof GetClassDetailsRequestSchema;
    output: typeof GetClassDetailsResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.GetBackgroundDetails
   */
  getBackgroundDetails: {
    methodKind: "unary";
    input: typeof GetBackgroundDetailsRequestSchema;
    output: typeof GetBackgroundDetailsResponseSchema;
  },
  /**
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.GetFeature
   */
  getFeature: {
    methodKind: "unary";
    input: typeof GetFeatureRequestSchema;
    output: typeof GetFeatureResponseSchema;
  },
  /**
   * Dice rolling for character creation
   *
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.RollAbilityScores
   */
  rollAbilityScores: {
    methodKind: "unary";
    input: typeof RollAbilityScoresRequestSchema;
    output: typeof RollAbilityScoresResponseSchema;
  },
  /**
   * Equipment listing by type
   *
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.ListEquipmentByType
   */
  listEquipmentByType: {
    methodKind: "unary";
    input: typeof ListEquipmentByTypeRequestSchema;
    output: typeof ListEquipmentByTypeResponseSchema;
  },
  /**
   * Spell listing by level
   *
   * @generated from rpc dnd5e.api.v1alpha1.CharacterService.ListSpellsByLevel
   */
  listSpellsByLevel: {
    methodKind: "unary";
    input: typeof ListSpellsByLevelRequestSchema;
    output: typeof ListSpellsByLevelResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_dnd5e_api_v1alpha1_character, 0);

