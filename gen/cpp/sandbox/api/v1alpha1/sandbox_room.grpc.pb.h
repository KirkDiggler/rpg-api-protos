// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: sandbox/api/v1alpha1/sandbox_room.proto
#ifndef GRPC_sandbox_2fapi_2fv1alpha1_2fsandbox_5froom_2eproto__INCLUDED
#define GRPC_sandbox_2fapi_2fv1alpha1_2fsandbox_5froom_2eproto__INCLUDED

#include "sandbox/api/v1alpha1/sandbox_room.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>
#include <grpcpp/ports_def.inc>

namespace sandbox {
namespace api {
namespace v1alpha1 {

class SandboxRoomService final {
 public:
  static constexpr char const* service_full_name() {
    return "sandbox.api.v1alpha1.SandboxRoomService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Room Creation & Management
    virtual ::grpc::Status GenerateRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GenerateRoomRequest& request, ::sandbox::api::v1alpha1::GenerateRoomResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::GenerateRoomResponse>> AsyncGenerateRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GenerateRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::GenerateRoomResponse>>(AsyncGenerateRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::GenerateRoomResponse>> PrepareAsyncGenerateRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GenerateRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::GenerateRoomResponse>>(PrepareAsyncGenerateRoomRaw(context, request, cq));
    }
    virtual ::grpc::Status BuildStaticRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::BuildStaticRoomRequest& request, ::sandbox::api::v1alpha1::BuildStaticRoomResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::BuildStaticRoomResponse>> AsyncBuildStaticRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::BuildStaticRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::BuildStaticRoomResponse>>(AsyncBuildStaticRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::BuildStaticRoomResponse>> PrepareAsyncBuildStaticRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::BuildStaticRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::BuildStaticRoomResponse>>(PrepareAsyncBuildStaticRoomRaw(context, request, cq));
    }
    virtual ::grpc::Status GetRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetRoomRequest& request, ::sandbox::api::v1alpha1::GetRoomResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::GetRoomResponse>> AsyncGetRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::GetRoomResponse>>(AsyncGetRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::GetRoomResponse>> PrepareAsyncGetRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::GetRoomResponse>>(PrepareAsyncGetRoomRaw(context, request, cq));
    }
    virtual ::grpc::Status ListRooms(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::ListRoomsRequest& request, ::sandbox::api::v1alpha1::ListRoomsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::ListRoomsResponse>> AsyncListRooms(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::ListRoomsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::ListRoomsResponse>>(AsyncListRoomsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::ListRoomsResponse>> PrepareAsyncListRooms(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::ListRoomsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::ListRoomsResponse>>(PrepareAsyncListRoomsRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::DeleteRoomRequest& request, ::sandbox::api::v1alpha1::DeleteRoomResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::DeleteRoomResponse>> AsyncDeleteRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::DeleteRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::DeleteRoomResponse>>(AsyncDeleteRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::DeleteRoomResponse>> PrepareAsyncDeleteRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::DeleteRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::DeleteRoomResponse>>(PrepareAsyncDeleteRoomRaw(context, request, cq));
    }
    // Spatial Queries
    virtual ::grpc::Status CheckLineOfSight(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CheckLineOfSightRequest& request, ::sandbox::api::v1alpha1::CheckLineOfSightResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::CheckLineOfSightResponse>> AsyncCheckLineOfSight(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CheckLineOfSightRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::CheckLineOfSightResponse>>(AsyncCheckLineOfSightRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::CheckLineOfSightResponse>> PrepareAsyncCheckLineOfSight(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CheckLineOfSightRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::CheckLineOfSightResponse>>(PrepareAsyncCheckLineOfSightRaw(context, request, cq));
    }
    virtual ::grpc::Status FindPath(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::FindPathRequest& request, ::sandbox::api::v1alpha1::FindPathResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::FindPathResponse>> AsyncFindPath(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::FindPathRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::FindPathResponse>>(AsyncFindPathRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::FindPathResponse>> PrepareAsyncFindPath(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::FindPathRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::FindPathResponse>>(PrepareAsyncFindPathRaw(context, request, cq));
    }
    virtual ::grpc::Status CalculateDistance(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CalculateDistanceRequest& request, ::sandbox::api::v1alpha1::CalculateDistanceResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::CalculateDistanceResponse>> AsyncCalculateDistance(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CalculateDistanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::CalculateDistanceResponse>>(AsyncCalculateDistanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::CalculateDistanceResponse>> PrepareAsyncCalculateDistance(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CalculateDistanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::CalculateDistanceResponse>>(PrepareAsyncCalculateDistanceRaw(context, request, cq));
    }
    virtual ::grpc::Status GetPositionsInRange(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetPositionsInRangeRequest& request, ::sandbox::api::v1alpha1::GetPositionsInRangeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::GetPositionsInRangeResponse>> AsyncGetPositionsInRange(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetPositionsInRangeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::GetPositionsInRangeResponse>>(AsyncGetPositionsInRangeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::GetPositionsInRangeResponse>> PrepareAsyncGetPositionsInRange(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetPositionsInRangeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::GetPositionsInRangeResponse>>(PrepareAsyncGetPositionsInRangeRaw(context, request, cq));
    }
    // Entity Management
    virtual ::grpc::Status PlaceEntity(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::PlaceEntityRequest& request, ::sandbox::api::v1alpha1::PlaceEntityResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::PlaceEntityResponse>> AsyncPlaceEntity(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::PlaceEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::PlaceEntityResponse>>(AsyncPlaceEntityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::PlaceEntityResponse>> PrepareAsyncPlaceEntity(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::PlaceEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::PlaceEntityResponse>>(PrepareAsyncPlaceEntityRaw(context, request, cq));
    }
    virtual ::grpc::Status MoveEntity(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::MoveEntityRequest& request, ::sandbox::api::v1alpha1::MoveEntityResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::MoveEntityResponse>> AsyncMoveEntity(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::MoveEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::MoveEntityResponse>>(AsyncMoveEntityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::MoveEntityResponse>> PrepareAsyncMoveEntity(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::MoveEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::MoveEntityResponse>>(PrepareAsyncMoveEntityRaw(context, request, cq));
    }
    virtual ::grpc::Status RemoveEntity(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::RemoveEntityRequest& request, ::sandbox::api::v1alpha1::RemoveEntityResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::RemoveEntityResponse>> AsyncRemoveEntity(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::RemoveEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::RemoveEntityResponse>>(AsyncRemoveEntityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::RemoveEntityResponse>> PrepareAsyncRemoveEntity(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::RemoveEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::RemoveEntityResponse>>(PrepareAsyncRemoveEntityRaw(context, request, cq));
    }
    virtual ::grpc::Status GetEntitiesInRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetEntitiesInRoomRequest& request, ::sandbox::api::v1alpha1::GetEntitiesInRoomResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::GetEntitiesInRoomResponse>> AsyncGetEntitiesInRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetEntitiesInRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::GetEntitiesInRoomResponse>>(AsyncGetEntitiesInRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::GetEntitiesInRoomResponse>> PrepareAsyncGetEntitiesInRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetEntitiesInRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::GetEntitiesInRoomResponse>>(PrepareAsyncGetEntitiesInRoomRaw(context, request, cq));
    }
    // Sandbox Lifecycle
    virtual ::grpc::Status CreateSandbox(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CreateSandboxRequest& request, ::sandbox::api::v1alpha1::CreateSandboxResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::CreateSandboxResponse>> AsyncCreateSandbox(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CreateSandboxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::CreateSandboxResponse>>(AsyncCreateSandboxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::CreateSandboxResponse>> PrepareAsyncCreateSandbox(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CreateSandboxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::CreateSandboxResponse>>(PrepareAsyncCreateSandboxRaw(context, request, cq));
    }
    virtual ::grpc::Status GetSandbox(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetSandboxRequest& request, ::sandbox::api::v1alpha1::GetSandboxResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::GetSandboxResponse>> AsyncGetSandbox(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetSandboxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::GetSandboxResponse>>(AsyncGetSandboxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::GetSandboxResponse>> PrepareAsyncGetSandbox(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetSandboxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::GetSandboxResponse>>(PrepareAsyncGetSandboxRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteSandbox(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::DeleteSandboxRequest& request, ::sandbox::api::v1alpha1::DeleteSandboxResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::DeleteSandboxResponse>> AsyncDeleteSandbox(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::DeleteSandboxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::DeleteSandboxResponse>>(AsyncDeleteSandboxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::DeleteSandboxResponse>> PrepareAsyncDeleteSandbox(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::DeleteSandboxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::DeleteSandboxResponse>>(PrepareAsyncDeleteSandboxRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Room Creation & Management
      virtual void GenerateRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GenerateRoomRequest* request, ::sandbox::api::v1alpha1::GenerateRoomResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GenerateRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GenerateRoomRequest* request, ::sandbox::api::v1alpha1::GenerateRoomResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void BuildStaticRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::BuildStaticRoomRequest* request, ::sandbox::api::v1alpha1::BuildStaticRoomResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void BuildStaticRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::BuildStaticRoomRequest* request, ::sandbox::api::v1alpha1::BuildStaticRoomResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetRoomRequest* request, ::sandbox::api::v1alpha1::GetRoomResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetRoomRequest* request, ::sandbox::api::v1alpha1::GetRoomResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListRooms(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::ListRoomsRequest* request, ::sandbox::api::v1alpha1::ListRoomsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListRooms(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::ListRoomsRequest* request, ::sandbox::api::v1alpha1::ListRoomsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::DeleteRoomRequest* request, ::sandbox::api::v1alpha1::DeleteRoomResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::DeleteRoomRequest* request, ::sandbox::api::v1alpha1::DeleteRoomResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Spatial Queries
      virtual void CheckLineOfSight(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CheckLineOfSightRequest* request, ::sandbox::api::v1alpha1::CheckLineOfSightResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CheckLineOfSight(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CheckLineOfSightRequest* request, ::sandbox::api::v1alpha1::CheckLineOfSightResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void FindPath(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::FindPathRequest* request, ::sandbox::api::v1alpha1::FindPathResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FindPath(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::FindPathRequest* request, ::sandbox::api::v1alpha1::FindPathResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CalculateDistance(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CalculateDistanceRequest* request, ::sandbox::api::v1alpha1::CalculateDistanceResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CalculateDistance(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CalculateDistanceRequest* request, ::sandbox::api::v1alpha1::CalculateDistanceResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetPositionsInRange(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetPositionsInRangeRequest* request, ::sandbox::api::v1alpha1::GetPositionsInRangeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetPositionsInRange(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetPositionsInRangeRequest* request, ::sandbox::api::v1alpha1::GetPositionsInRangeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Entity Management
      virtual void PlaceEntity(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::PlaceEntityRequest* request, ::sandbox::api::v1alpha1::PlaceEntityResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PlaceEntity(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::PlaceEntityRequest* request, ::sandbox::api::v1alpha1::PlaceEntityResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void MoveEntity(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::MoveEntityRequest* request, ::sandbox::api::v1alpha1::MoveEntityResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void MoveEntity(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::MoveEntityRequest* request, ::sandbox::api::v1alpha1::MoveEntityResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void RemoveEntity(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::RemoveEntityRequest* request, ::sandbox::api::v1alpha1::RemoveEntityResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RemoveEntity(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::RemoveEntityRequest* request, ::sandbox::api::v1alpha1::RemoveEntityResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetEntitiesInRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetEntitiesInRoomRequest* request, ::sandbox::api::v1alpha1::GetEntitiesInRoomResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetEntitiesInRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetEntitiesInRoomRequest* request, ::sandbox::api::v1alpha1::GetEntitiesInRoomResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Sandbox Lifecycle
      virtual void CreateSandbox(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CreateSandboxRequest* request, ::sandbox::api::v1alpha1::CreateSandboxResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateSandbox(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CreateSandboxRequest* request, ::sandbox::api::v1alpha1::CreateSandboxResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetSandbox(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetSandboxRequest* request, ::sandbox::api::v1alpha1::GetSandboxResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetSandbox(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetSandboxRequest* request, ::sandbox::api::v1alpha1::GetSandboxResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteSandbox(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::DeleteSandboxRequest* request, ::sandbox::api::v1alpha1::DeleteSandboxResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteSandbox(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::DeleteSandboxRequest* request, ::sandbox::api::v1alpha1::DeleteSandboxResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::GenerateRoomResponse>* AsyncGenerateRoomRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GenerateRoomRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::GenerateRoomResponse>* PrepareAsyncGenerateRoomRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GenerateRoomRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::BuildStaticRoomResponse>* AsyncBuildStaticRoomRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::BuildStaticRoomRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::BuildStaticRoomResponse>* PrepareAsyncBuildStaticRoomRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::BuildStaticRoomRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::GetRoomResponse>* AsyncGetRoomRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetRoomRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::GetRoomResponse>* PrepareAsyncGetRoomRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetRoomRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::ListRoomsResponse>* AsyncListRoomsRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::ListRoomsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::ListRoomsResponse>* PrepareAsyncListRoomsRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::ListRoomsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::DeleteRoomResponse>* AsyncDeleteRoomRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::DeleteRoomRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::DeleteRoomResponse>* PrepareAsyncDeleteRoomRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::DeleteRoomRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::CheckLineOfSightResponse>* AsyncCheckLineOfSightRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CheckLineOfSightRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::CheckLineOfSightResponse>* PrepareAsyncCheckLineOfSightRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CheckLineOfSightRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::FindPathResponse>* AsyncFindPathRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::FindPathRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::FindPathResponse>* PrepareAsyncFindPathRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::FindPathRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::CalculateDistanceResponse>* AsyncCalculateDistanceRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CalculateDistanceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::CalculateDistanceResponse>* PrepareAsyncCalculateDistanceRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CalculateDistanceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::GetPositionsInRangeResponse>* AsyncGetPositionsInRangeRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetPositionsInRangeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::GetPositionsInRangeResponse>* PrepareAsyncGetPositionsInRangeRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetPositionsInRangeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::PlaceEntityResponse>* AsyncPlaceEntityRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::PlaceEntityRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::PlaceEntityResponse>* PrepareAsyncPlaceEntityRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::PlaceEntityRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::MoveEntityResponse>* AsyncMoveEntityRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::MoveEntityRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::MoveEntityResponse>* PrepareAsyncMoveEntityRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::MoveEntityRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::RemoveEntityResponse>* AsyncRemoveEntityRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::RemoveEntityRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::RemoveEntityResponse>* PrepareAsyncRemoveEntityRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::RemoveEntityRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::GetEntitiesInRoomResponse>* AsyncGetEntitiesInRoomRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetEntitiesInRoomRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::GetEntitiesInRoomResponse>* PrepareAsyncGetEntitiesInRoomRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetEntitiesInRoomRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::CreateSandboxResponse>* AsyncCreateSandboxRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CreateSandboxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::CreateSandboxResponse>* PrepareAsyncCreateSandboxRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CreateSandboxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::GetSandboxResponse>* AsyncGetSandboxRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetSandboxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::GetSandboxResponse>* PrepareAsyncGetSandboxRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetSandboxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::DeleteSandboxResponse>* AsyncDeleteSandboxRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::DeleteSandboxRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sandbox::api::v1alpha1::DeleteSandboxResponse>* PrepareAsyncDeleteSandboxRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::DeleteSandboxRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status GenerateRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GenerateRoomRequest& request, ::sandbox::api::v1alpha1::GenerateRoomResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::GenerateRoomResponse>> AsyncGenerateRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GenerateRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::GenerateRoomResponse>>(AsyncGenerateRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::GenerateRoomResponse>> PrepareAsyncGenerateRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GenerateRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::GenerateRoomResponse>>(PrepareAsyncGenerateRoomRaw(context, request, cq));
    }
    ::grpc::Status BuildStaticRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::BuildStaticRoomRequest& request, ::sandbox::api::v1alpha1::BuildStaticRoomResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::BuildStaticRoomResponse>> AsyncBuildStaticRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::BuildStaticRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::BuildStaticRoomResponse>>(AsyncBuildStaticRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::BuildStaticRoomResponse>> PrepareAsyncBuildStaticRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::BuildStaticRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::BuildStaticRoomResponse>>(PrepareAsyncBuildStaticRoomRaw(context, request, cq));
    }
    ::grpc::Status GetRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetRoomRequest& request, ::sandbox::api::v1alpha1::GetRoomResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::GetRoomResponse>> AsyncGetRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::GetRoomResponse>>(AsyncGetRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::GetRoomResponse>> PrepareAsyncGetRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::GetRoomResponse>>(PrepareAsyncGetRoomRaw(context, request, cq));
    }
    ::grpc::Status ListRooms(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::ListRoomsRequest& request, ::sandbox::api::v1alpha1::ListRoomsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::ListRoomsResponse>> AsyncListRooms(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::ListRoomsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::ListRoomsResponse>>(AsyncListRoomsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::ListRoomsResponse>> PrepareAsyncListRooms(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::ListRoomsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::ListRoomsResponse>>(PrepareAsyncListRoomsRaw(context, request, cq));
    }
    ::grpc::Status DeleteRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::DeleteRoomRequest& request, ::sandbox::api::v1alpha1::DeleteRoomResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::DeleteRoomResponse>> AsyncDeleteRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::DeleteRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::DeleteRoomResponse>>(AsyncDeleteRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::DeleteRoomResponse>> PrepareAsyncDeleteRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::DeleteRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::DeleteRoomResponse>>(PrepareAsyncDeleteRoomRaw(context, request, cq));
    }
    ::grpc::Status CheckLineOfSight(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CheckLineOfSightRequest& request, ::sandbox::api::v1alpha1::CheckLineOfSightResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::CheckLineOfSightResponse>> AsyncCheckLineOfSight(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CheckLineOfSightRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::CheckLineOfSightResponse>>(AsyncCheckLineOfSightRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::CheckLineOfSightResponse>> PrepareAsyncCheckLineOfSight(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CheckLineOfSightRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::CheckLineOfSightResponse>>(PrepareAsyncCheckLineOfSightRaw(context, request, cq));
    }
    ::grpc::Status FindPath(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::FindPathRequest& request, ::sandbox::api::v1alpha1::FindPathResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::FindPathResponse>> AsyncFindPath(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::FindPathRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::FindPathResponse>>(AsyncFindPathRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::FindPathResponse>> PrepareAsyncFindPath(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::FindPathRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::FindPathResponse>>(PrepareAsyncFindPathRaw(context, request, cq));
    }
    ::grpc::Status CalculateDistance(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CalculateDistanceRequest& request, ::sandbox::api::v1alpha1::CalculateDistanceResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::CalculateDistanceResponse>> AsyncCalculateDistance(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CalculateDistanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::CalculateDistanceResponse>>(AsyncCalculateDistanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::CalculateDistanceResponse>> PrepareAsyncCalculateDistance(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CalculateDistanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::CalculateDistanceResponse>>(PrepareAsyncCalculateDistanceRaw(context, request, cq));
    }
    ::grpc::Status GetPositionsInRange(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetPositionsInRangeRequest& request, ::sandbox::api::v1alpha1::GetPositionsInRangeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::GetPositionsInRangeResponse>> AsyncGetPositionsInRange(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetPositionsInRangeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::GetPositionsInRangeResponse>>(AsyncGetPositionsInRangeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::GetPositionsInRangeResponse>> PrepareAsyncGetPositionsInRange(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetPositionsInRangeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::GetPositionsInRangeResponse>>(PrepareAsyncGetPositionsInRangeRaw(context, request, cq));
    }
    ::grpc::Status PlaceEntity(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::PlaceEntityRequest& request, ::sandbox::api::v1alpha1::PlaceEntityResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::PlaceEntityResponse>> AsyncPlaceEntity(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::PlaceEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::PlaceEntityResponse>>(AsyncPlaceEntityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::PlaceEntityResponse>> PrepareAsyncPlaceEntity(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::PlaceEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::PlaceEntityResponse>>(PrepareAsyncPlaceEntityRaw(context, request, cq));
    }
    ::grpc::Status MoveEntity(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::MoveEntityRequest& request, ::sandbox::api::v1alpha1::MoveEntityResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::MoveEntityResponse>> AsyncMoveEntity(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::MoveEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::MoveEntityResponse>>(AsyncMoveEntityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::MoveEntityResponse>> PrepareAsyncMoveEntity(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::MoveEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::MoveEntityResponse>>(PrepareAsyncMoveEntityRaw(context, request, cq));
    }
    ::grpc::Status RemoveEntity(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::RemoveEntityRequest& request, ::sandbox::api::v1alpha1::RemoveEntityResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::RemoveEntityResponse>> AsyncRemoveEntity(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::RemoveEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::RemoveEntityResponse>>(AsyncRemoveEntityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::RemoveEntityResponse>> PrepareAsyncRemoveEntity(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::RemoveEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::RemoveEntityResponse>>(PrepareAsyncRemoveEntityRaw(context, request, cq));
    }
    ::grpc::Status GetEntitiesInRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetEntitiesInRoomRequest& request, ::sandbox::api::v1alpha1::GetEntitiesInRoomResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::GetEntitiesInRoomResponse>> AsyncGetEntitiesInRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetEntitiesInRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::GetEntitiesInRoomResponse>>(AsyncGetEntitiesInRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::GetEntitiesInRoomResponse>> PrepareAsyncGetEntitiesInRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetEntitiesInRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::GetEntitiesInRoomResponse>>(PrepareAsyncGetEntitiesInRoomRaw(context, request, cq));
    }
    ::grpc::Status CreateSandbox(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CreateSandboxRequest& request, ::sandbox::api::v1alpha1::CreateSandboxResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::CreateSandboxResponse>> AsyncCreateSandbox(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CreateSandboxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::CreateSandboxResponse>>(AsyncCreateSandboxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::CreateSandboxResponse>> PrepareAsyncCreateSandbox(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CreateSandboxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::CreateSandboxResponse>>(PrepareAsyncCreateSandboxRaw(context, request, cq));
    }
    ::grpc::Status GetSandbox(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetSandboxRequest& request, ::sandbox::api::v1alpha1::GetSandboxResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::GetSandboxResponse>> AsyncGetSandbox(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetSandboxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::GetSandboxResponse>>(AsyncGetSandboxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::GetSandboxResponse>> PrepareAsyncGetSandbox(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetSandboxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::GetSandboxResponse>>(PrepareAsyncGetSandboxRaw(context, request, cq));
    }
    ::grpc::Status DeleteSandbox(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::DeleteSandboxRequest& request, ::sandbox::api::v1alpha1::DeleteSandboxResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::DeleteSandboxResponse>> AsyncDeleteSandbox(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::DeleteSandboxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::DeleteSandboxResponse>>(AsyncDeleteSandboxRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::DeleteSandboxResponse>> PrepareAsyncDeleteSandbox(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::DeleteSandboxRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::DeleteSandboxResponse>>(PrepareAsyncDeleteSandboxRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void GenerateRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GenerateRoomRequest* request, ::sandbox::api::v1alpha1::GenerateRoomResponse* response, std::function<void(::grpc::Status)>) override;
      void GenerateRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GenerateRoomRequest* request, ::sandbox::api::v1alpha1::GenerateRoomResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void BuildStaticRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::BuildStaticRoomRequest* request, ::sandbox::api::v1alpha1::BuildStaticRoomResponse* response, std::function<void(::grpc::Status)>) override;
      void BuildStaticRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::BuildStaticRoomRequest* request, ::sandbox::api::v1alpha1::BuildStaticRoomResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetRoomRequest* request, ::sandbox::api::v1alpha1::GetRoomResponse* response, std::function<void(::grpc::Status)>) override;
      void GetRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetRoomRequest* request, ::sandbox::api::v1alpha1::GetRoomResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListRooms(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::ListRoomsRequest* request, ::sandbox::api::v1alpha1::ListRoomsResponse* response, std::function<void(::grpc::Status)>) override;
      void ListRooms(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::ListRoomsRequest* request, ::sandbox::api::v1alpha1::ListRoomsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::DeleteRoomRequest* request, ::sandbox::api::v1alpha1::DeleteRoomResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::DeleteRoomRequest* request, ::sandbox::api::v1alpha1::DeleteRoomResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CheckLineOfSight(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CheckLineOfSightRequest* request, ::sandbox::api::v1alpha1::CheckLineOfSightResponse* response, std::function<void(::grpc::Status)>) override;
      void CheckLineOfSight(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CheckLineOfSightRequest* request, ::sandbox::api::v1alpha1::CheckLineOfSightResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void FindPath(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::FindPathRequest* request, ::sandbox::api::v1alpha1::FindPathResponse* response, std::function<void(::grpc::Status)>) override;
      void FindPath(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::FindPathRequest* request, ::sandbox::api::v1alpha1::FindPathResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CalculateDistance(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CalculateDistanceRequest* request, ::sandbox::api::v1alpha1::CalculateDistanceResponse* response, std::function<void(::grpc::Status)>) override;
      void CalculateDistance(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CalculateDistanceRequest* request, ::sandbox::api::v1alpha1::CalculateDistanceResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetPositionsInRange(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetPositionsInRangeRequest* request, ::sandbox::api::v1alpha1::GetPositionsInRangeResponse* response, std::function<void(::grpc::Status)>) override;
      void GetPositionsInRange(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetPositionsInRangeRequest* request, ::sandbox::api::v1alpha1::GetPositionsInRangeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void PlaceEntity(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::PlaceEntityRequest* request, ::sandbox::api::v1alpha1::PlaceEntityResponse* response, std::function<void(::grpc::Status)>) override;
      void PlaceEntity(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::PlaceEntityRequest* request, ::sandbox::api::v1alpha1::PlaceEntityResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void MoveEntity(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::MoveEntityRequest* request, ::sandbox::api::v1alpha1::MoveEntityResponse* response, std::function<void(::grpc::Status)>) override;
      void MoveEntity(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::MoveEntityRequest* request, ::sandbox::api::v1alpha1::MoveEntityResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RemoveEntity(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::RemoveEntityRequest* request, ::sandbox::api::v1alpha1::RemoveEntityResponse* response, std::function<void(::grpc::Status)>) override;
      void RemoveEntity(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::RemoveEntityRequest* request, ::sandbox::api::v1alpha1::RemoveEntityResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetEntitiesInRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetEntitiesInRoomRequest* request, ::sandbox::api::v1alpha1::GetEntitiesInRoomResponse* response, std::function<void(::grpc::Status)>) override;
      void GetEntitiesInRoom(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetEntitiesInRoomRequest* request, ::sandbox::api::v1alpha1::GetEntitiesInRoomResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateSandbox(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CreateSandboxRequest* request, ::sandbox::api::v1alpha1::CreateSandboxResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateSandbox(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CreateSandboxRequest* request, ::sandbox::api::v1alpha1::CreateSandboxResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetSandbox(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetSandboxRequest* request, ::sandbox::api::v1alpha1::GetSandboxResponse* response, std::function<void(::grpc::Status)>) override;
      void GetSandbox(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetSandboxRequest* request, ::sandbox::api::v1alpha1::GetSandboxResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteSandbox(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::DeleteSandboxRequest* request, ::sandbox::api::v1alpha1::DeleteSandboxResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteSandbox(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::DeleteSandboxRequest* request, ::sandbox::api::v1alpha1::DeleteSandboxResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::GenerateRoomResponse>* AsyncGenerateRoomRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GenerateRoomRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::GenerateRoomResponse>* PrepareAsyncGenerateRoomRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GenerateRoomRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::BuildStaticRoomResponse>* AsyncBuildStaticRoomRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::BuildStaticRoomRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::BuildStaticRoomResponse>* PrepareAsyncBuildStaticRoomRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::BuildStaticRoomRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::GetRoomResponse>* AsyncGetRoomRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetRoomRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::GetRoomResponse>* PrepareAsyncGetRoomRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetRoomRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::ListRoomsResponse>* AsyncListRoomsRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::ListRoomsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::ListRoomsResponse>* PrepareAsyncListRoomsRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::ListRoomsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::DeleteRoomResponse>* AsyncDeleteRoomRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::DeleteRoomRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::DeleteRoomResponse>* PrepareAsyncDeleteRoomRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::DeleteRoomRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::CheckLineOfSightResponse>* AsyncCheckLineOfSightRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CheckLineOfSightRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::CheckLineOfSightResponse>* PrepareAsyncCheckLineOfSightRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CheckLineOfSightRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::FindPathResponse>* AsyncFindPathRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::FindPathRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::FindPathResponse>* PrepareAsyncFindPathRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::FindPathRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::CalculateDistanceResponse>* AsyncCalculateDistanceRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CalculateDistanceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::CalculateDistanceResponse>* PrepareAsyncCalculateDistanceRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CalculateDistanceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::GetPositionsInRangeResponse>* AsyncGetPositionsInRangeRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetPositionsInRangeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::GetPositionsInRangeResponse>* PrepareAsyncGetPositionsInRangeRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetPositionsInRangeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::PlaceEntityResponse>* AsyncPlaceEntityRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::PlaceEntityRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::PlaceEntityResponse>* PrepareAsyncPlaceEntityRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::PlaceEntityRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::MoveEntityResponse>* AsyncMoveEntityRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::MoveEntityRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::MoveEntityResponse>* PrepareAsyncMoveEntityRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::MoveEntityRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::RemoveEntityResponse>* AsyncRemoveEntityRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::RemoveEntityRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::RemoveEntityResponse>* PrepareAsyncRemoveEntityRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::RemoveEntityRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::GetEntitiesInRoomResponse>* AsyncGetEntitiesInRoomRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetEntitiesInRoomRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::GetEntitiesInRoomResponse>* PrepareAsyncGetEntitiesInRoomRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetEntitiesInRoomRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::CreateSandboxResponse>* AsyncCreateSandboxRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CreateSandboxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::CreateSandboxResponse>* PrepareAsyncCreateSandboxRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::CreateSandboxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::GetSandboxResponse>* AsyncGetSandboxRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetSandboxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::GetSandboxResponse>* PrepareAsyncGetSandboxRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::GetSandboxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::DeleteSandboxResponse>* AsyncDeleteSandboxRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::DeleteSandboxRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sandbox::api::v1alpha1::DeleteSandboxResponse>* PrepareAsyncDeleteSandboxRaw(::grpc::ClientContext* context, const ::sandbox::api::v1alpha1::DeleteSandboxRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_GenerateRoom_;
    const ::grpc::internal::RpcMethod rpcmethod_BuildStaticRoom_;
    const ::grpc::internal::RpcMethod rpcmethod_GetRoom_;
    const ::grpc::internal::RpcMethod rpcmethod_ListRooms_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteRoom_;
    const ::grpc::internal::RpcMethod rpcmethod_CheckLineOfSight_;
    const ::grpc::internal::RpcMethod rpcmethod_FindPath_;
    const ::grpc::internal::RpcMethod rpcmethod_CalculateDistance_;
    const ::grpc::internal::RpcMethod rpcmethod_GetPositionsInRange_;
    const ::grpc::internal::RpcMethod rpcmethod_PlaceEntity_;
    const ::grpc::internal::RpcMethod rpcmethod_MoveEntity_;
    const ::grpc::internal::RpcMethod rpcmethod_RemoveEntity_;
    const ::grpc::internal::RpcMethod rpcmethod_GetEntitiesInRoom_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateSandbox_;
    const ::grpc::internal::RpcMethod rpcmethod_GetSandbox_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteSandbox_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Room Creation & Management
    virtual ::grpc::Status GenerateRoom(::grpc::ServerContext* context, const ::sandbox::api::v1alpha1::GenerateRoomRequest* request, ::sandbox::api::v1alpha1::GenerateRoomResponse* response);
    virtual ::grpc::Status BuildStaticRoom(::grpc::ServerContext* context, const ::sandbox::api::v1alpha1::BuildStaticRoomRequest* request, ::sandbox::api::v1alpha1::BuildStaticRoomResponse* response);
    virtual ::grpc::Status GetRoom(::grpc::ServerContext* context, const ::sandbox::api::v1alpha1::GetRoomRequest* request, ::sandbox::api::v1alpha1::GetRoomResponse* response);
    virtual ::grpc::Status ListRooms(::grpc::ServerContext* context, const ::sandbox::api::v1alpha1::ListRoomsRequest* request, ::sandbox::api::v1alpha1::ListRoomsResponse* response);
    virtual ::grpc::Status DeleteRoom(::grpc::ServerContext* context, const ::sandbox::api::v1alpha1::DeleteRoomRequest* request, ::sandbox::api::v1alpha1::DeleteRoomResponse* response);
    // Spatial Queries
    virtual ::grpc::Status CheckLineOfSight(::grpc::ServerContext* context, const ::sandbox::api::v1alpha1::CheckLineOfSightRequest* request, ::sandbox::api::v1alpha1::CheckLineOfSightResponse* response);
    virtual ::grpc::Status FindPath(::grpc::ServerContext* context, const ::sandbox::api::v1alpha1::FindPathRequest* request, ::sandbox::api::v1alpha1::FindPathResponse* response);
    virtual ::grpc::Status CalculateDistance(::grpc::ServerContext* context, const ::sandbox::api::v1alpha1::CalculateDistanceRequest* request, ::sandbox::api::v1alpha1::CalculateDistanceResponse* response);
    virtual ::grpc::Status GetPositionsInRange(::grpc::ServerContext* context, const ::sandbox::api::v1alpha1::GetPositionsInRangeRequest* request, ::sandbox::api::v1alpha1::GetPositionsInRangeResponse* response);
    // Entity Management
    virtual ::grpc::Status PlaceEntity(::grpc::ServerContext* context, const ::sandbox::api::v1alpha1::PlaceEntityRequest* request, ::sandbox::api::v1alpha1::PlaceEntityResponse* response);
    virtual ::grpc::Status MoveEntity(::grpc::ServerContext* context, const ::sandbox::api::v1alpha1::MoveEntityRequest* request, ::sandbox::api::v1alpha1::MoveEntityResponse* response);
    virtual ::grpc::Status RemoveEntity(::grpc::ServerContext* context, const ::sandbox::api::v1alpha1::RemoveEntityRequest* request, ::sandbox::api::v1alpha1::RemoveEntityResponse* response);
    virtual ::grpc::Status GetEntitiesInRoom(::grpc::ServerContext* context, const ::sandbox::api::v1alpha1::GetEntitiesInRoomRequest* request, ::sandbox::api::v1alpha1::GetEntitiesInRoomResponse* response);
    // Sandbox Lifecycle
    virtual ::grpc::Status CreateSandbox(::grpc::ServerContext* context, const ::sandbox::api::v1alpha1::CreateSandboxRequest* request, ::sandbox::api::v1alpha1::CreateSandboxResponse* response);
    virtual ::grpc::Status GetSandbox(::grpc::ServerContext* context, const ::sandbox::api::v1alpha1::GetSandboxRequest* request, ::sandbox::api::v1alpha1::GetSandboxResponse* response);
    virtual ::grpc::Status DeleteSandbox(::grpc::ServerContext* context, const ::sandbox::api::v1alpha1::DeleteSandboxRequest* request, ::sandbox::api::v1alpha1::DeleteSandboxResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_GenerateRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GenerateRoom() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_GenerateRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GenerateRoom(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::GenerateRoomRequest* /*request*/, ::sandbox::api::v1alpha1::GenerateRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGenerateRoom(::grpc::ServerContext* context, ::sandbox::api::v1alpha1::GenerateRoomRequest* request, ::grpc::ServerAsyncResponseWriter< ::sandbox::api::v1alpha1::GenerateRoomResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_BuildStaticRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_BuildStaticRoom() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_BuildStaticRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BuildStaticRoom(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::BuildStaticRoomRequest* /*request*/, ::sandbox::api::v1alpha1::BuildStaticRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBuildStaticRoom(::grpc::ServerContext* context, ::sandbox::api::v1alpha1::BuildStaticRoomRequest* request, ::grpc::ServerAsyncResponseWriter< ::sandbox::api::v1alpha1::BuildStaticRoomResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetRoom() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRoom(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::GetRoomRequest* /*request*/, ::sandbox::api::v1alpha1::GetRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRoom(::grpc::ServerContext* context, ::sandbox::api::v1alpha1::GetRoomRequest* request, ::grpc::ServerAsyncResponseWriter< ::sandbox::api::v1alpha1::GetRoomResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListRooms : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListRooms() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_ListRooms() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRooms(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::ListRoomsRequest* /*request*/, ::sandbox::api::v1alpha1::ListRoomsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListRooms(::grpc::ServerContext* context, ::sandbox::api::v1alpha1::ListRoomsRequest* request, ::grpc::ServerAsyncResponseWriter< ::sandbox::api::v1alpha1::ListRoomsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteRoom() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_DeleteRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRoom(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::DeleteRoomRequest* /*request*/, ::sandbox::api::v1alpha1::DeleteRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteRoom(::grpc::ServerContext* context, ::sandbox::api::v1alpha1::DeleteRoomRequest* request, ::grpc::ServerAsyncResponseWriter< ::sandbox::api::v1alpha1::DeleteRoomResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CheckLineOfSight : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CheckLineOfSight() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_CheckLineOfSight() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckLineOfSight(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::CheckLineOfSightRequest* /*request*/, ::sandbox::api::v1alpha1::CheckLineOfSightResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCheckLineOfSight(::grpc::ServerContext* context, ::sandbox::api::v1alpha1::CheckLineOfSightRequest* request, ::grpc::ServerAsyncResponseWriter< ::sandbox::api::v1alpha1::CheckLineOfSightResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_FindPath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_FindPath() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_FindPath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPath(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::FindPathRequest* /*request*/, ::sandbox::api::v1alpha1::FindPathResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindPath(::grpc::ServerContext* context, ::sandbox::api::v1alpha1::FindPathRequest* request, ::grpc::ServerAsyncResponseWriter< ::sandbox::api::v1alpha1::FindPathResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CalculateDistance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CalculateDistance() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_CalculateDistance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateDistance(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::CalculateDistanceRequest* /*request*/, ::sandbox::api::v1alpha1::CalculateDistanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCalculateDistance(::grpc::ServerContext* context, ::sandbox::api::v1alpha1::CalculateDistanceRequest* request, ::grpc::ServerAsyncResponseWriter< ::sandbox::api::v1alpha1::CalculateDistanceResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetPositionsInRange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetPositionsInRange() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_GetPositionsInRange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPositionsInRange(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::GetPositionsInRangeRequest* /*request*/, ::sandbox::api::v1alpha1::GetPositionsInRangeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPositionsInRange(::grpc::ServerContext* context, ::sandbox::api::v1alpha1::GetPositionsInRangeRequest* request, ::grpc::ServerAsyncResponseWriter< ::sandbox::api::v1alpha1::GetPositionsInRangeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PlaceEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PlaceEntity() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_PlaceEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PlaceEntity(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::PlaceEntityRequest* /*request*/, ::sandbox::api::v1alpha1::PlaceEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPlaceEntity(::grpc::ServerContext* context, ::sandbox::api::v1alpha1::PlaceEntityRequest* request, ::grpc::ServerAsyncResponseWriter< ::sandbox::api::v1alpha1::PlaceEntityResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_MoveEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_MoveEntity() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_MoveEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveEntity(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::MoveEntityRequest* /*request*/, ::sandbox::api::v1alpha1::MoveEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMoveEntity(::grpc::ServerContext* context, ::sandbox::api::v1alpha1::MoveEntityRequest* request, ::grpc::ServerAsyncResponseWriter< ::sandbox::api::v1alpha1::MoveEntityResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RemoveEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RemoveEntity() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_RemoveEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveEntity(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::RemoveEntityRequest* /*request*/, ::sandbox::api::v1alpha1::RemoveEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveEntity(::grpc::ServerContext* context, ::sandbox::api::v1alpha1::RemoveEntityRequest* request, ::grpc::ServerAsyncResponseWriter< ::sandbox::api::v1alpha1::RemoveEntityResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetEntitiesInRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetEntitiesInRoom() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_GetEntitiesInRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntitiesInRoom(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::GetEntitiesInRoomRequest* /*request*/, ::sandbox::api::v1alpha1::GetEntitiesInRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEntitiesInRoom(::grpc::ServerContext* context, ::sandbox::api::v1alpha1::GetEntitiesInRoomRequest* request, ::grpc::ServerAsyncResponseWriter< ::sandbox::api::v1alpha1::GetEntitiesInRoomResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateSandbox : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateSandbox() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_CreateSandbox() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSandbox(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::CreateSandboxRequest* /*request*/, ::sandbox::api::v1alpha1::CreateSandboxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateSandbox(::grpc::ServerContext* context, ::sandbox::api::v1alpha1::CreateSandboxRequest* request, ::grpc::ServerAsyncResponseWriter< ::sandbox::api::v1alpha1::CreateSandboxResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetSandbox : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetSandbox() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_GetSandbox() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSandbox(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::GetSandboxRequest* /*request*/, ::sandbox::api::v1alpha1::GetSandboxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSandbox(::grpc::ServerContext* context, ::sandbox::api::v1alpha1::GetSandboxRequest* request, ::grpc::ServerAsyncResponseWriter< ::sandbox::api::v1alpha1::GetSandboxResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteSandbox : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteSandbox() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_DeleteSandbox() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSandbox(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::DeleteSandboxRequest* /*request*/, ::sandbox::api::v1alpha1::DeleteSandboxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteSandbox(::grpc::ServerContext* context, ::sandbox::api::v1alpha1::DeleteSandboxRequest* request, ::grpc::ServerAsyncResponseWriter< ::sandbox::api::v1alpha1::DeleteSandboxResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_GenerateRoom<WithAsyncMethod_BuildStaticRoom<WithAsyncMethod_GetRoom<WithAsyncMethod_ListRooms<WithAsyncMethod_DeleteRoom<WithAsyncMethod_CheckLineOfSight<WithAsyncMethod_FindPath<WithAsyncMethod_CalculateDistance<WithAsyncMethod_GetPositionsInRange<WithAsyncMethod_PlaceEntity<WithAsyncMethod_MoveEntity<WithAsyncMethod_RemoveEntity<WithAsyncMethod_GetEntitiesInRoom<WithAsyncMethod_CreateSandbox<WithAsyncMethod_GetSandbox<WithAsyncMethod_DeleteSandbox<Service > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_GenerateRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GenerateRoom() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::sandbox::api::v1alpha1::GenerateRoomRequest, ::sandbox::api::v1alpha1::GenerateRoomResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sandbox::api::v1alpha1::GenerateRoomRequest* request, ::sandbox::api::v1alpha1::GenerateRoomResponse* response) { return this->GenerateRoom(context, request, response); }));}
    void SetMessageAllocatorFor_GenerateRoom(
        ::grpc::MessageAllocator< ::sandbox::api::v1alpha1::GenerateRoomRequest, ::sandbox::api::v1alpha1::GenerateRoomResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sandbox::api::v1alpha1::GenerateRoomRequest, ::sandbox::api::v1alpha1::GenerateRoomResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GenerateRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GenerateRoom(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::GenerateRoomRequest* /*request*/, ::sandbox::api::v1alpha1::GenerateRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GenerateRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::sandbox::api::v1alpha1::GenerateRoomRequest* /*request*/, ::sandbox::api::v1alpha1::GenerateRoomResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_BuildStaticRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_BuildStaticRoom() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::sandbox::api::v1alpha1::BuildStaticRoomRequest, ::sandbox::api::v1alpha1::BuildStaticRoomResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sandbox::api::v1alpha1::BuildStaticRoomRequest* request, ::sandbox::api::v1alpha1::BuildStaticRoomResponse* response) { return this->BuildStaticRoom(context, request, response); }));}
    void SetMessageAllocatorFor_BuildStaticRoom(
        ::grpc::MessageAllocator< ::sandbox::api::v1alpha1::BuildStaticRoomRequest, ::sandbox::api::v1alpha1::BuildStaticRoomResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sandbox::api::v1alpha1::BuildStaticRoomRequest, ::sandbox::api::v1alpha1::BuildStaticRoomResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_BuildStaticRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BuildStaticRoom(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::BuildStaticRoomRequest* /*request*/, ::sandbox::api::v1alpha1::BuildStaticRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* BuildStaticRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::sandbox::api::v1alpha1::BuildStaticRoomRequest* /*request*/, ::sandbox::api::v1alpha1::BuildStaticRoomResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetRoom() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::sandbox::api::v1alpha1::GetRoomRequest, ::sandbox::api::v1alpha1::GetRoomResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sandbox::api::v1alpha1::GetRoomRequest* request, ::sandbox::api::v1alpha1::GetRoomResponse* response) { return this->GetRoom(context, request, response); }));}
    void SetMessageAllocatorFor_GetRoom(
        ::grpc::MessageAllocator< ::sandbox::api::v1alpha1::GetRoomRequest, ::sandbox::api::v1alpha1::GetRoomResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sandbox::api::v1alpha1::GetRoomRequest, ::sandbox::api::v1alpha1::GetRoomResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRoom(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::GetRoomRequest* /*request*/, ::sandbox::api::v1alpha1::GetRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::sandbox::api::v1alpha1::GetRoomRequest* /*request*/, ::sandbox::api::v1alpha1::GetRoomResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListRooms : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListRooms() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::sandbox::api::v1alpha1::ListRoomsRequest, ::sandbox::api::v1alpha1::ListRoomsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sandbox::api::v1alpha1::ListRoomsRequest* request, ::sandbox::api::v1alpha1::ListRoomsResponse* response) { return this->ListRooms(context, request, response); }));}
    void SetMessageAllocatorFor_ListRooms(
        ::grpc::MessageAllocator< ::sandbox::api::v1alpha1::ListRoomsRequest, ::sandbox::api::v1alpha1::ListRoomsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sandbox::api::v1alpha1::ListRoomsRequest, ::sandbox::api::v1alpha1::ListRoomsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListRooms() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRooms(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::ListRoomsRequest* /*request*/, ::sandbox::api::v1alpha1::ListRoomsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListRooms(
      ::grpc::CallbackServerContext* /*context*/, const ::sandbox::api::v1alpha1::ListRoomsRequest* /*request*/, ::sandbox::api::v1alpha1::ListRoomsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteRoom() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::sandbox::api::v1alpha1::DeleteRoomRequest, ::sandbox::api::v1alpha1::DeleteRoomResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sandbox::api::v1alpha1::DeleteRoomRequest* request, ::sandbox::api::v1alpha1::DeleteRoomResponse* response) { return this->DeleteRoom(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteRoom(
        ::grpc::MessageAllocator< ::sandbox::api::v1alpha1::DeleteRoomRequest, ::sandbox::api::v1alpha1::DeleteRoomResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sandbox::api::v1alpha1::DeleteRoomRequest, ::sandbox::api::v1alpha1::DeleteRoomResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRoom(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::DeleteRoomRequest* /*request*/, ::sandbox::api::v1alpha1::DeleteRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::sandbox::api::v1alpha1::DeleteRoomRequest* /*request*/, ::sandbox::api::v1alpha1::DeleteRoomResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CheckLineOfSight : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CheckLineOfSight() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::sandbox::api::v1alpha1::CheckLineOfSightRequest, ::sandbox::api::v1alpha1::CheckLineOfSightResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sandbox::api::v1alpha1::CheckLineOfSightRequest* request, ::sandbox::api::v1alpha1::CheckLineOfSightResponse* response) { return this->CheckLineOfSight(context, request, response); }));}
    void SetMessageAllocatorFor_CheckLineOfSight(
        ::grpc::MessageAllocator< ::sandbox::api::v1alpha1::CheckLineOfSightRequest, ::sandbox::api::v1alpha1::CheckLineOfSightResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sandbox::api::v1alpha1::CheckLineOfSightRequest, ::sandbox::api::v1alpha1::CheckLineOfSightResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CheckLineOfSight() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckLineOfSight(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::CheckLineOfSightRequest* /*request*/, ::sandbox::api::v1alpha1::CheckLineOfSightResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CheckLineOfSight(
      ::grpc::CallbackServerContext* /*context*/, const ::sandbox::api::v1alpha1::CheckLineOfSightRequest* /*request*/, ::sandbox::api::v1alpha1::CheckLineOfSightResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_FindPath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_FindPath() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::sandbox::api::v1alpha1::FindPathRequest, ::sandbox::api::v1alpha1::FindPathResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sandbox::api::v1alpha1::FindPathRequest* request, ::sandbox::api::v1alpha1::FindPathResponse* response) { return this->FindPath(context, request, response); }));}
    void SetMessageAllocatorFor_FindPath(
        ::grpc::MessageAllocator< ::sandbox::api::v1alpha1::FindPathRequest, ::sandbox::api::v1alpha1::FindPathResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sandbox::api::v1alpha1::FindPathRequest, ::sandbox::api::v1alpha1::FindPathResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_FindPath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPath(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::FindPathRequest* /*request*/, ::sandbox::api::v1alpha1::FindPathResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindPath(
      ::grpc::CallbackServerContext* /*context*/, const ::sandbox::api::v1alpha1::FindPathRequest* /*request*/, ::sandbox::api::v1alpha1::FindPathResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CalculateDistance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CalculateDistance() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::sandbox::api::v1alpha1::CalculateDistanceRequest, ::sandbox::api::v1alpha1::CalculateDistanceResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sandbox::api::v1alpha1::CalculateDistanceRequest* request, ::sandbox::api::v1alpha1::CalculateDistanceResponse* response) { return this->CalculateDistance(context, request, response); }));}
    void SetMessageAllocatorFor_CalculateDistance(
        ::grpc::MessageAllocator< ::sandbox::api::v1alpha1::CalculateDistanceRequest, ::sandbox::api::v1alpha1::CalculateDistanceResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sandbox::api::v1alpha1::CalculateDistanceRequest, ::sandbox::api::v1alpha1::CalculateDistanceResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CalculateDistance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateDistance(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::CalculateDistanceRequest* /*request*/, ::sandbox::api::v1alpha1::CalculateDistanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CalculateDistance(
      ::grpc::CallbackServerContext* /*context*/, const ::sandbox::api::v1alpha1::CalculateDistanceRequest* /*request*/, ::sandbox::api::v1alpha1::CalculateDistanceResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetPositionsInRange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetPositionsInRange() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::sandbox::api::v1alpha1::GetPositionsInRangeRequest, ::sandbox::api::v1alpha1::GetPositionsInRangeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sandbox::api::v1alpha1::GetPositionsInRangeRequest* request, ::sandbox::api::v1alpha1::GetPositionsInRangeResponse* response) { return this->GetPositionsInRange(context, request, response); }));}
    void SetMessageAllocatorFor_GetPositionsInRange(
        ::grpc::MessageAllocator< ::sandbox::api::v1alpha1::GetPositionsInRangeRequest, ::sandbox::api::v1alpha1::GetPositionsInRangeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sandbox::api::v1alpha1::GetPositionsInRangeRequest, ::sandbox::api::v1alpha1::GetPositionsInRangeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetPositionsInRange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPositionsInRange(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::GetPositionsInRangeRequest* /*request*/, ::sandbox::api::v1alpha1::GetPositionsInRangeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetPositionsInRange(
      ::grpc::CallbackServerContext* /*context*/, const ::sandbox::api::v1alpha1::GetPositionsInRangeRequest* /*request*/, ::sandbox::api::v1alpha1::GetPositionsInRangeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_PlaceEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_PlaceEntity() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::sandbox::api::v1alpha1::PlaceEntityRequest, ::sandbox::api::v1alpha1::PlaceEntityResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sandbox::api::v1alpha1::PlaceEntityRequest* request, ::sandbox::api::v1alpha1::PlaceEntityResponse* response) { return this->PlaceEntity(context, request, response); }));}
    void SetMessageAllocatorFor_PlaceEntity(
        ::grpc::MessageAllocator< ::sandbox::api::v1alpha1::PlaceEntityRequest, ::sandbox::api::v1alpha1::PlaceEntityResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sandbox::api::v1alpha1::PlaceEntityRequest, ::sandbox::api::v1alpha1::PlaceEntityResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_PlaceEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PlaceEntity(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::PlaceEntityRequest* /*request*/, ::sandbox::api::v1alpha1::PlaceEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PlaceEntity(
      ::grpc::CallbackServerContext* /*context*/, const ::sandbox::api::v1alpha1::PlaceEntityRequest* /*request*/, ::sandbox::api::v1alpha1::PlaceEntityResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_MoveEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_MoveEntity() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::sandbox::api::v1alpha1::MoveEntityRequest, ::sandbox::api::v1alpha1::MoveEntityResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sandbox::api::v1alpha1::MoveEntityRequest* request, ::sandbox::api::v1alpha1::MoveEntityResponse* response) { return this->MoveEntity(context, request, response); }));}
    void SetMessageAllocatorFor_MoveEntity(
        ::grpc::MessageAllocator< ::sandbox::api::v1alpha1::MoveEntityRequest, ::sandbox::api::v1alpha1::MoveEntityResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sandbox::api::v1alpha1::MoveEntityRequest, ::sandbox::api::v1alpha1::MoveEntityResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_MoveEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveEntity(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::MoveEntityRequest* /*request*/, ::sandbox::api::v1alpha1::MoveEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* MoveEntity(
      ::grpc::CallbackServerContext* /*context*/, const ::sandbox::api::v1alpha1::MoveEntityRequest* /*request*/, ::sandbox::api::v1alpha1::MoveEntityResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RemoveEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RemoveEntity() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::sandbox::api::v1alpha1::RemoveEntityRequest, ::sandbox::api::v1alpha1::RemoveEntityResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sandbox::api::v1alpha1::RemoveEntityRequest* request, ::sandbox::api::v1alpha1::RemoveEntityResponse* response) { return this->RemoveEntity(context, request, response); }));}
    void SetMessageAllocatorFor_RemoveEntity(
        ::grpc::MessageAllocator< ::sandbox::api::v1alpha1::RemoveEntityRequest, ::sandbox::api::v1alpha1::RemoveEntityResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sandbox::api::v1alpha1::RemoveEntityRequest, ::sandbox::api::v1alpha1::RemoveEntityResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RemoveEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveEntity(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::RemoveEntityRequest* /*request*/, ::sandbox::api::v1alpha1::RemoveEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveEntity(
      ::grpc::CallbackServerContext* /*context*/, const ::sandbox::api::v1alpha1::RemoveEntityRequest* /*request*/, ::sandbox::api::v1alpha1::RemoveEntityResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetEntitiesInRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetEntitiesInRoom() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::sandbox::api::v1alpha1::GetEntitiesInRoomRequest, ::sandbox::api::v1alpha1::GetEntitiesInRoomResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sandbox::api::v1alpha1::GetEntitiesInRoomRequest* request, ::sandbox::api::v1alpha1::GetEntitiesInRoomResponse* response) { return this->GetEntitiesInRoom(context, request, response); }));}
    void SetMessageAllocatorFor_GetEntitiesInRoom(
        ::grpc::MessageAllocator< ::sandbox::api::v1alpha1::GetEntitiesInRoomRequest, ::sandbox::api::v1alpha1::GetEntitiesInRoomResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sandbox::api::v1alpha1::GetEntitiesInRoomRequest, ::sandbox::api::v1alpha1::GetEntitiesInRoomResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetEntitiesInRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntitiesInRoom(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::GetEntitiesInRoomRequest* /*request*/, ::sandbox::api::v1alpha1::GetEntitiesInRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEntitiesInRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::sandbox::api::v1alpha1::GetEntitiesInRoomRequest* /*request*/, ::sandbox::api::v1alpha1::GetEntitiesInRoomResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateSandbox : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateSandbox() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::sandbox::api::v1alpha1::CreateSandboxRequest, ::sandbox::api::v1alpha1::CreateSandboxResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sandbox::api::v1alpha1::CreateSandboxRequest* request, ::sandbox::api::v1alpha1::CreateSandboxResponse* response) { return this->CreateSandbox(context, request, response); }));}
    void SetMessageAllocatorFor_CreateSandbox(
        ::grpc::MessageAllocator< ::sandbox::api::v1alpha1::CreateSandboxRequest, ::sandbox::api::v1alpha1::CreateSandboxResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sandbox::api::v1alpha1::CreateSandboxRequest, ::sandbox::api::v1alpha1::CreateSandboxResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateSandbox() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSandbox(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::CreateSandboxRequest* /*request*/, ::sandbox::api::v1alpha1::CreateSandboxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateSandbox(
      ::grpc::CallbackServerContext* /*context*/, const ::sandbox::api::v1alpha1::CreateSandboxRequest* /*request*/, ::sandbox::api::v1alpha1::CreateSandboxResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetSandbox : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetSandbox() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::sandbox::api::v1alpha1::GetSandboxRequest, ::sandbox::api::v1alpha1::GetSandboxResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sandbox::api::v1alpha1::GetSandboxRequest* request, ::sandbox::api::v1alpha1::GetSandboxResponse* response) { return this->GetSandbox(context, request, response); }));}
    void SetMessageAllocatorFor_GetSandbox(
        ::grpc::MessageAllocator< ::sandbox::api::v1alpha1::GetSandboxRequest, ::sandbox::api::v1alpha1::GetSandboxResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sandbox::api::v1alpha1::GetSandboxRequest, ::sandbox::api::v1alpha1::GetSandboxResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetSandbox() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSandbox(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::GetSandboxRequest* /*request*/, ::sandbox::api::v1alpha1::GetSandboxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSandbox(
      ::grpc::CallbackServerContext* /*context*/, const ::sandbox::api::v1alpha1::GetSandboxRequest* /*request*/, ::sandbox::api::v1alpha1::GetSandboxResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteSandbox : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteSandbox() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::sandbox::api::v1alpha1::DeleteSandboxRequest, ::sandbox::api::v1alpha1::DeleteSandboxResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sandbox::api::v1alpha1::DeleteSandboxRequest* request, ::sandbox::api::v1alpha1::DeleteSandboxResponse* response) { return this->DeleteSandbox(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteSandbox(
        ::grpc::MessageAllocator< ::sandbox::api::v1alpha1::DeleteSandboxRequest, ::sandbox::api::v1alpha1::DeleteSandboxResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sandbox::api::v1alpha1::DeleteSandboxRequest, ::sandbox::api::v1alpha1::DeleteSandboxResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteSandbox() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSandbox(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::DeleteSandboxRequest* /*request*/, ::sandbox::api::v1alpha1::DeleteSandboxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteSandbox(
      ::grpc::CallbackServerContext* /*context*/, const ::sandbox::api::v1alpha1::DeleteSandboxRequest* /*request*/, ::sandbox::api::v1alpha1::DeleteSandboxResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_GenerateRoom<WithCallbackMethod_BuildStaticRoom<WithCallbackMethod_GetRoom<WithCallbackMethod_ListRooms<WithCallbackMethod_DeleteRoom<WithCallbackMethod_CheckLineOfSight<WithCallbackMethod_FindPath<WithCallbackMethod_CalculateDistance<WithCallbackMethod_GetPositionsInRange<WithCallbackMethod_PlaceEntity<WithCallbackMethod_MoveEntity<WithCallbackMethod_RemoveEntity<WithCallbackMethod_GetEntitiesInRoom<WithCallbackMethod_CreateSandbox<WithCallbackMethod_GetSandbox<WithCallbackMethod_DeleteSandbox<Service > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_GenerateRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GenerateRoom() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_GenerateRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GenerateRoom(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::GenerateRoomRequest* /*request*/, ::sandbox::api::v1alpha1::GenerateRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_BuildStaticRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_BuildStaticRoom() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_BuildStaticRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BuildStaticRoom(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::BuildStaticRoomRequest* /*request*/, ::sandbox::api::v1alpha1::BuildStaticRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetRoom() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRoom(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::GetRoomRequest* /*request*/, ::sandbox::api::v1alpha1::GetRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListRooms : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListRooms() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_ListRooms() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRooms(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::ListRoomsRequest* /*request*/, ::sandbox::api::v1alpha1::ListRoomsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteRoom() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_DeleteRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRoom(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::DeleteRoomRequest* /*request*/, ::sandbox::api::v1alpha1::DeleteRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CheckLineOfSight : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CheckLineOfSight() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_CheckLineOfSight() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckLineOfSight(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::CheckLineOfSightRequest* /*request*/, ::sandbox::api::v1alpha1::CheckLineOfSightResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_FindPath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_FindPath() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_FindPath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPath(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::FindPathRequest* /*request*/, ::sandbox::api::v1alpha1::FindPathResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CalculateDistance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CalculateDistance() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_CalculateDistance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateDistance(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::CalculateDistanceRequest* /*request*/, ::sandbox::api::v1alpha1::CalculateDistanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetPositionsInRange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetPositionsInRange() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_GetPositionsInRange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPositionsInRange(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::GetPositionsInRangeRequest* /*request*/, ::sandbox::api::v1alpha1::GetPositionsInRangeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PlaceEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PlaceEntity() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_PlaceEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PlaceEntity(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::PlaceEntityRequest* /*request*/, ::sandbox::api::v1alpha1::PlaceEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_MoveEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_MoveEntity() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_MoveEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveEntity(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::MoveEntityRequest* /*request*/, ::sandbox::api::v1alpha1::MoveEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RemoveEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RemoveEntity() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_RemoveEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveEntity(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::RemoveEntityRequest* /*request*/, ::sandbox::api::v1alpha1::RemoveEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetEntitiesInRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetEntitiesInRoom() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_GetEntitiesInRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntitiesInRoom(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::GetEntitiesInRoomRequest* /*request*/, ::sandbox::api::v1alpha1::GetEntitiesInRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateSandbox : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateSandbox() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_CreateSandbox() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSandbox(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::CreateSandboxRequest* /*request*/, ::sandbox::api::v1alpha1::CreateSandboxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetSandbox : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetSandbox() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_GetSandbox() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSandbox(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::GetSandboxRequest* /*request*/, ::sandbox::api::v1alpha1::GetSandboxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteSandbox : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteSandbox() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_DeleteSandbox() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSandbox(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::DeleteSandboxRequest* /*request*/, ::sandbox::api::v1alpha1::DeleteSandboxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_GenerateRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GenerateRoom() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_GenerateRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GenerateRoom(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::GenerateRoomRequest* /*request*/, ::sandbox::api::v1alpha1::GenerateRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGenerateRoom(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_BuildStaticRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_BuildStaticRoom() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_BuildStaticRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BuildStaticRoom(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::BuildStaticRoomRequest* /*request*/, ::sandbox::api::v1alpha1::BuildStaticRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBuildStaticRoom(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetRoom() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRoom(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::GetRoomRequest* /*request*/, ::sandbox::api::v1alpha1::GetRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRoom(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListRooms : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListRooms() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_ListRooms() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRooms(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::ListRoomsRequest* /*request*/, ::sandbox::api::v1alpha1::ListRoomsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListRooms(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteRoom() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_DeleteRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRoom(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::DeleteRoomRequest* /*request*/, ::sandbox::api::v1alpha1::DeleteRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteRoom(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CheckLineOfSight : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CheckLineOfSight() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_CheckLineOfSight() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckLineOfSight(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::CheckLineOfSightRequest* /*request*/, ::sandbox::api::v1alpha1::CheckLineOfSightResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCheckLineOfSight(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_FindPath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_FindPath() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_FindPath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPath(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::FindPathRequest* /*request*/, ::sandbox::api::v1alpha1::FindPathResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindPath(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CalculateDistance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CalculateDistance() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_CalculateDistance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateDistance(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::CalculateDistanceRequest* /*request*/, ::sandbox::api::v1alpha1::CalculateDistanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCalculateDistance(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetPositionsInRange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetPositionsInRange() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_GetPositionsInRange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPositionsInRange(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::GetPositionsInRangeRequest* /*request*/, ::sandbox::api::v1alpha1::GetPositionsInRangeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPositionsInRange(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PlaceEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PlaceEntity() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_PlaceEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PlaceEntity(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::PlaceEntityRequest* /*request*/, ::sandbox::api::v1alpha1::PlaceEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPlaceEntity(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_MoveEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_MoveEntity() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_MoveEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveEntity(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::MoveEntityRequest* /*request*/, ::sandbox::api::v1alpha1::MoveEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMoveEntity(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RemoveEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RemoveEntity() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_RemoveEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveEntity(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::RemoveEntityRequest* /*request*/, ::sandbox::api::v1alpha1::RemoveEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveEntity(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetEntitiesInRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetEntitiesInRoom() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_GetEntitiesInRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntitiesInRoom(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::GetEntitiesInRoomRequest* /*request*/, ::sandbox::api::v1alpha1::GetEntitiesInRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEntitiesInRoom(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateSandbox : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateSandbox() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_CreateSandbox() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSandbox(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::CreateSandboxRequest* /*request*/, ::sandbox::api::v1alpha1::CreateSandboxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateSandbox(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetSandbox : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetSandbox() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_GetSandbox() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSandbox(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::GetSandboxRequest* /*request*/, ::sandbox::api::v1alpha1::GetSandboxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSandbox(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteSandbox : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteSandbox() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_DeleteSandbox() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSandbox(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::DeleteSandboxRequest* /*request*/, ::sandbox::api::v1alpha1::DeleteSandboxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteSandbox(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GenerateRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GenerateRoom() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GenerateRoom(context, request, response); }));
    }
    ~WithRawCallbackMethod_GenerateRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GenerateRoom(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::GenerateRoomRequest* /*request*/, ::sandbox::api::v1alpha1::GenerateRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GenerateRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_BuildStaticRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_BuildStaticRoom() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->BuildStaticRoom(context, request, response); }));
    }
    ~WithRawCallbackMethod_BuildStaticRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BuildStaticRoom(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::BuildStaticRoomRequest* /*request*/, ::sandbox::api::v1alpha1::BuildStaticRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* BuildStaticRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetRoom() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetRoom(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRoom(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::GetRoomRequest* /*request*/, ::sandbox::api::v1alpha1::GetRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListRooms : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListRooms() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListRooms(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListRooms() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRooms(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::ListRoomsRequest* /*request*/, ::sandbox::api::v1alpha1::ListRoomsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListRooms(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteRoom() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteRoom(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRoom(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::DeleteRoomRequest* /*request*/, ::sandbox::api::v1alpha1::DeleteRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CheckLineOfSight : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CheckLineOfSight() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CheckLineOfSight(context, request, response); }));
    }
    ~WithRawCallbackMethod_CheckLineOfSight() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckLineOfSight(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::CheckLineOfSightRequest* /*request*/, ::sandbox::api::v1alpha1::CheckLineOfSightResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CheckLineOfSight(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_FindPath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_FindPath() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->FindPath(context, request, response); }));
    }
    ~WithRawCallbackMethod_FindPath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPath(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::FindPathRequest* /*request*/, ::sandbox::api::v1alpha1::FindPathResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindPath(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CalculateDistance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CalculateDistance() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CalculateDistance(context, request, response); }));
    }
    ~WithRawCallbackMethod_CalculateDistance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CalculateDistance(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::CalculateDistanceRequest* /*request*/, ::sandbox::api::v1alpha1::CalculateDistanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CalculateDistance(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetPositionsInRange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetPositionsInRange() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetPositionsInRange(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetPositionsInRange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPositionsInRange(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::GetPositionsInRangeRequest* /*request*/, ::sandbox::api::v1alpha1::GetPositionsInRangeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetPositionsInRange(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_PlaceEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_PlaceEntity() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PlaceEntity(context, request, response); }));
    }
    ~WithRawCallbackMethod_PlaceEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PlaceEntity(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::PlaceEntityRequest* /*request*/, ::sandbox::api::v1alpha1::PlaceEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PlaceEntity(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_MoveEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_MoveEntity() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->MoveEntity(context, request, response); }));
    }
    ~WithRawCallbackMethod_MoveEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveEntity(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::MoveEntityRequest* /*request*/, ::sandbox::api::v1alpha1::MoveEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* MoveEntity(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RemoveEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RemoveEntity() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RemoveEntity(context, request, response); }));
    }
    ~WithRawCallbackMethod_RemoveEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveEntity(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::RemoveEntityRequest* /*request*/, ::sandbox::api::v1alpha1::RemoveEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveEntity(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetEntitiesInRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetEntitiesInRoom() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetEntitiesInRoom(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetEntitiesInRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntitiesInRoom(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::GetEntitiesInRoomRequest* /*request*/, ::sandbox::api::v1alpha1::GetEntitiesInRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEntitiesInRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateSandbox : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateSandbox() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateSandbox(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateSandbox() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSandbox(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::CreateSandboxRequest* /*request*/, ::sandbox::api::v1alpha1::CreateSandboxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateSandbox(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetSandbox : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetSandbox() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetSandbox(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetSandbox() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSandbox(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::GetSandboxRequest* /*request*/, ::sandbox::api::v1alpha1::GetSandboxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSandbox(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteSandbox : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteSandbox() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteSandbox(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteSandbox() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSandbox(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::DeleteSandboxRequest* /*request*/, ::sandbox::api::v1alpha1::DeleteSandboxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteSandbox(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GenerateRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GenerateRoom() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sandbox::api::v1alpha1::GenerateRoomRequest, ::sandbox::api::v1alpha1::GenerateRoomResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sandbox::api::v1alpha1::GenerateRoomRequest, ::sandbox::api::v1alpha1::GenerateRoomResponse>* streamer) {
                       return this->StreamedGenerateRoom(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GenerateRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GenerateRoom(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::GenerateRoomRequest* /*request*/, ::sandbox::api::v1alpha1::GenerateRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGenerateRoom(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sandbox::api::v1alpha1::GenerateRoomRequest,::sandbox::api::v1alpha1::GenerateRoomResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_BuildStaticRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_BuildStaticRoom() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sandbox::api::v1alpha1::BuildStaticRoomRequest, ::sandbox::api::v1alpha1::BuildStaticRoomResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sandbox::api::v1alpha1::BuildStaticRoomRequest, ::sandbox::api::v1alpha1::BuildStaticRoomResponse>* streamer) {
                       return this->StreamedBuildStaticRoom(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_BuildStaticRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status BuildStaticRoom(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::BuildStaticRoomRequest* /*request*/, ::sandbox::api::v1alpha1::BuildStaticRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedBuildStaticRoom(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sandbox::api::v1alpha1::BuildStaticRoomRequest,::sandbox::api::v1alpha1::BuildStaticRoomResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetRoom() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sandbox::api::v1alpha1::GetRoomRequest, ::sandbox::api::v1alpha1::GetRoomResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sandbox::api::v1alpha1::GetRoomRequest, ::sandbox::api::v1alpha1::GetRoomResponse>* streamer) {
                       return this->StreamedGetRoom(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRoom(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::GetRoomRequest* /*request*/, ::sandbox::api::v1alpha1::GetRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRoom(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sandbox::api::v1alpha1::GetRoomRequest,::sandbox::api::v1alpha1::GetRoomResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListRooms : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListRooms() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sandbox::api::v1alpha1::ListRoomsRequest, ::sandbox::api::v1alpha1::ListRoomsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sandbox::api::v1alpha1::ListRoomsRequest, ::sandbox::api::v1alpha1::ListRoomsResponse>* streamer) {
                       return this->StreamedListRooms(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListRooms() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListRooms(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::ListRoomsRequest* /*request*/, ::sandbox::api::v1alpha1::ListRoomsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListRooms(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sandbox::api::v1alpha1::ListRoomsRequest,::sandbox::api::v1alpha1::ListRoomsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteRoom() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sandbox::api::v1alpha1::DeleteRoomRequest, ::sandbox::api::v1alpha1::DeleteRoomResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sandbox::api::v1alpha1::DeleteRoomRequest, ::sandbox::api::v1alpha1::DeleteRoomResponse>* streamer) {
                       return this->StreamedDeleteRoom(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteRoom(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::DeleteRoomRequest* /*request*/, ::sandbox::api::v1alpha1::DeleteRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteRoom(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sandbox::api::v1alpha1::DeleteRoomRequest,::sandbox::api::v1alpha1::DeleteRoomResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CheckLineOfSight : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CheckLineOfSight() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sandbox::api::v1alpha1::CheckLineOfSightRequest, ::sandbox::api::v1alpha1::CheckLineOfSightResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sandbox::api::v1alpha1::CheckLineOfSightRequest, ::sandbox::api::v1alpha1::CheckLineOfSightResponse>* streamer) {
                       return this->StreamedCheckLineOfSight(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CheckLineOfSight() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CheckLineOfSight(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::CheckLineOfSightRequest* /*request*/, ::sandbox::api::v1alpha1::CheckLineOfSightResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCheckLineOfSight(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sandbox::api::v1alpha1::CheckLineOfSightRequest,::sandbox::api::v1alpha1::CheckLineOfSightResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_FindPath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_FindPath() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sandbox::api::v1alpha1::FindPathRequest, ::sandbox::api::v1alpha1::FindPathResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sandbox::api::v1alpha1::FindPathRequest, ::sandbox::api::v1alpha1::FindPathResponse>* streamer) {
                       return this->StreamedFindPath(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_FindPath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status FindPath(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::FindPathRequest* /*request*/, ::sandbox::api::v1alpha1::FindPathResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFindPath(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sandbox::api::v1alpha1::FindPathRequest,::sandbox::api::v1alpha1::FindPathResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CalculateDistance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CalculateDistance() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sandbox::api::v1alpha1::CalculateDistanceRequest, ::sandbox::api::v1alpha1::CalculateDistanceResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sandbox::api::v1alpha1::CalculateDistanceRequest, ::sandbox::api::v1alpha1::CalculateDistanceResponse>* streamer) {
                       return this->StreamedCalculateDistance(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CalculateDistance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CalculateDistance(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::CalculateDistanceRequest* /*request*/, ::sandbox::api::v1alpha1::CalculateDistanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCalculateDistance(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sandbox::api::v1alpha1::CalculateDistanceRequest,::sandbox::api::v1alpha1::CalculateDistanceResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetPositionsInRange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetPositionsInRange() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sandbox::api::v1alpha1::GetPositionsInRangeRequest, ::sandbox::api::v1alpha1::GetPositionsInRangeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sandbox::api::v1alpha1::GetPositionsInRangeRequest, ::sandbox::api::v1alpha1::GetPositionsInRangeResponse>* streamer) {
                       return this->StreamedGetPositionsInRange(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetPositionsInRange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetPositionsInRange(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::GetPositionsInRangeRequest* /*request*/, ::sandbox::api::v1alpha1::GetPositionsInRangeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetPositionsInRange(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sandbox::api::v1alpha1::GetPositionsInRangeRequest,::sandbox::api::v1alpha1::GetPositionsInRangeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PlaceEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PlaceEntity() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sandbox::api::v1alpha1::PlaceEntityRequest, ::sandbox::api::v1alpha1::PlaceEntityResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sandbox::api::v1alpha1::PlaceEntityRequest, ::sandbox::api::v1alpha1::PlaceEntityResponse>* streamer) {
                       return this->StreamedPlaceEntity(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PlaceEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PlaceEntity(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::PlaceEntityRequest* /*request*/, ::sandbox::api::v1alpha1::PlaceEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPlaceEntity(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sandbox::api::v1alpha1::PlaceEntityRequest,::sandbox::api::v1alpha1::PlaceEntityResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_MoveEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_MoveEntity() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sandbox::api::v1alpha1::MoveEntityRequest, ::sandbox::api::v1alpha1::MoveEntityResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sandbox::api::v1alpha1::MoveEntityRequest, ::sandbox::api::v1alpha1::MoveEntityResponse>* streamer) {
                       return this->StreamedMoveEntity(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_MoveEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status MoveEntity(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::MoveEntityRequest* /*request*/, ::sandbox::api::v1alpha1::MoveEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedMoveEntity(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sandbox::api::v1alpha1::MoveEntityRequest,::sandbox::api::v1alpha1::MoveEntityResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RemoveEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RemoveEntity() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sandbox::api::v1alpha1::RemoveEntityRequest, ::sandbox::api::v1alpha1::RemoveEntityResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sandbox::api::v1alpha1::RemoveEntityRequest, ::sandbox::api::v1alpha1::RemoveEntityResponse>* streamer) {
                       return this->StreamedRemoveEntity(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RemoveEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RemoveEntity(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::RemoveEntityRequest* /*request*/, ::sandbox::api::v1alpha1::RemoveEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRemoveEntity(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sandbox::api::v1alpha1::RemoveEntityRequest,::sandbox::api::v1alpha1::RemoveEntityResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetEntitiesInRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetEntitiesInRoom() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sandbox::api::v1alpha1::GetEntitiesInRoomRequest, ::sandbox::api::v1alpha1::GetEntitiesInRoomResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sandbox::api::v1alpha1::GetEntitiesInRoomRequest, ::sandbox::api::v1alpha1::GetEntitiesInRoomResponse>* streamer) {
                       return this->StreamedGetEntitiesInRoom(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetEntitiesInRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetEntitiesInRoom(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::GetEntitiesInRoomRequest* /*request*/, ::sandbox::api::v1alpha1::GetEntitiesInRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetEntitiesInRoom(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sandbox::api::v1alpha1::GetEntitiesInRoomRequest,::sandbox::api::v1alpha1::GetEntitiesInRoomResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateSandbox : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateSandbox() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sandbox::api::v1alpha1::CreateSandboxRequest, ::sandbox::api::v1alpha1::CreateSandboxResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sandbox::api::v1alpha1::CreateSandboxRequest, ::sandbox::api::v1alpha1::CreateSandboxResponse>* streamer) {
                       return this->StreamedCreateSandbox(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateSandbox() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateSandbox(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::CreateSandboxRequest* /*request*/, ::sandbox::api::v1alpha1::CreateSandboxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateSandbox(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sandbox::api::v1alpha1::CreateSandboxRequest,::sandbox::api::v1alpha1::CreateSandboxResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetSandbox : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetSandbox() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sandbox::api::v1alpha1::GetSandboxRequest, ::sandbox::api::v1alpha1::GetSandboxResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sandbox::api::v1alpha1::GetSandboxRequest, ::sandbox::api::v1alpha1::GetSandboxResponse>* streamer) {
                       return this->StreamedGetSandbox(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetSandbox() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetSandbox(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::GetSandboxRequest* /*request*/, ::sandbox::api::v1alpha1::GetSandboxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetSandbox(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sandbox::api::v1alpha1::GetSandboxRequest,::sandbox::api::v1alpha1::GetSandboxResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteSandbox : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteSandbox() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sandbox::api::v1alpha1::DeleteSandboxRequest, ::sandbox::api::v1alpha1::DeleteSandboxResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sandbox::api::v1alpha1::DeleteSandboxRequest, ::sandbox::api::v1alpha1::DeleteSandboxResponse>* streamer) {
                       return this->StreamedDeleteSandbox(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteSandbox() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteSandbox(::grpc::ServerContext* /*context*/, const ::sandbox::api::v1alpha1::DeleteSandboxRequest* /*request*/, ::sandbox::api::v1alpha1::DeleteSandboxResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteSandbox(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sandbox::api::v1alpha1::DeleteSandboxRequest,::sandbox::api::v1alpha1::DeleteSandboxResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_GenerateRoom<WithStreamedUnaryMethod_BuildStaticRoom<WithStreamedUnaryMethod_GetRoom<WithStreamedUnaryMethod_ListRooms<WithStreamedUnaryMethod_DeleteRoom<WithStreamedUnaryMethod_CheckLineOfSight<WithStreamedUnaryMethod_FindPath<WithStreamedUnaryMethod_CalculateDistance<WithStreamedUnaryMethod_GetPositionsInRange<WithStreamedUnaryMethod_PlaceEntity<WithStreamedUnaryMethod_MoveEntity<WithStreamedUnaryMethod_RemoveEntity<WithStreamedUnaryMethod_GetEntitiesInRoom<WithStreamedUnaryMethod_CreateSandbox<WithStreamedUnaryMethod_GetSandbox<WithStreamedUnaryMethod_DeleteSandbox<Service > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_GenerateRoom<WithStreamedUnaryMethod_BuildStaticRoom<WithStreamedUnaryMethod_GetRoom<WithStreamedUnaryMethod_ListRooms<WithStreamedUnaryMethod_DeleteRoom<WithStreamedUnaryMethod_CheckLineOfSight<WithStreamedUnaryMethod_FindPath<WithStreamedUnaryMethod_CalculateDistance<WithStreamedUnaryMethod_GetPositionsInRange<WithStreamedUnaryMethod_PlaceEntity<WithStreamedUnaryMethod_MoveEntity<WithStreamedUnaryMethod_RemoveEntity<WithStreamedUnaryMethod_GetEntitiesInRoom<WithStreamedUnaryMethod_CreateSandbox<WithStreamedUnaryMethod_GetSandbox<WithStreamedUnaryMethod_DeleteSandbox<Service > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace v1alpha1
}  // namespace api
}  // namespace sandbox


#include <grpcpp/ports_undef.inc>
#endif  // GRPC_sandbox_2fapi_2fv1alpha1_2fsandbox_5froom_2eproto__INCLUDED
