// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: dnd5e/api/v1alpha1/character.proto
// Protobuf C++ Version: 6.32.0

#include "dnd5e/api/v1alpha1/character.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace dnd5e {
namespace api {
namespace v1alpha1 {

inline constexpr Weight::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        unit_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        quantity_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Weight::Weight(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Weight_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WeightDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WeightDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WeightDefaultTypeInternal() {}
  union {
    Weight _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WeightDefaultTypeInternal _Weight_default_instance_;

inline constexpr WeaponProficiencySelection::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : weapons_{},
        _weapons_cached_byte_size_{0},
        categories_{},
        _categories_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WeaponProficiencySelection::WeaponProficiencySelection(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(WeaponProficiencySelection_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WeaponProficiencySelectionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WeaponProficiencySelectionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WeaponProficiencySelectionDefaultTypeInternal() {}
  union {
    WeaponProficiencySelection _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WeaponProficiencySelectionDefaultTypeInternal _WeaponProficiencySelection_default_instance_;

inline constexpr WeaponData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        properties_{},
        _properties_cached_byte_size_{0},
        damage_dice_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        range_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        weapon_category_{static_cast< ::dnd5e::api::v1alpha1::WeaponCategory >(0)},
        damage_type_{static_cast< ::dnd5e::api::v1alpha1::DamageType >(0)},
        normal_range_{0},
        long_range_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WeaponData::WeaponData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(WeaponData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WeaponDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WeaponDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WeaponDataDefaultTypeInternal() {}
  union {
    WeaponData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WeaponDataDefaultTypeInternal _WeaponData_default_instance_;

inline constexpr ValidateDraftRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        draft_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR ValidateDraftRequest::ValidateDraftRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ValidateDraftRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValidateDraftRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidateDraftRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidateDraftRequestDefaultTypeInternal() {}
  union {
    ValidateDraftRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidateDraftRequestDefaultTypeInternal _ValidateDraftRequest_default_instance_;

inline constexpr UpdateSkillsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        skills_{},
        _skills_cached_byte_size_{0},
        draft_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR UpdateSkillsRequest::UpdateSkillsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UpdateSkillsRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateSkillsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateSkillsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateSkillsRequestDefaultTypeInternal() {}
  union {
    UpdateSkillsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateSkillsRequestDefaultTypeInternal _UpdateSkillsRequest_default_instance_;

inline constexpr UpdateNameRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        draft_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR UpdateNameRequest::UpdateNameRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UpdateNameRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateNameRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateNameRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateNameRequestDefaultTypeInternal() {}
  union {
    UpdateNameRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateNameRequestDefaultTypeInternal _UpdateNameRequest_default_instance_;

inline constexpr UnequipItemRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        character_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        slot_{static_cast< ::dnd5e::api::v1alpha1::EquipmentSlot >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR UnequipItemRequest::UnequipItemRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UnequipItemRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UnequipItemRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnequipItemRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnequipItemRequestDefaultTypeInternal() {}
  union {
    UnequipItemRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnequipItemRequestDefaultTypeInternal _UnequipItemRequest_default_instance_;

inline constexpr TraitList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : traits_{},
        _traits_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TraitList::TraitList(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TraitList_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TraitListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TraitListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TraitListDefaultTypeInternal() {}
  union {
    TraitList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TraitListDefaultTypeInternal _TraitList_default_instance_;

inline constexpr ToolSelection::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tools_{},
        _tools_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ToolSelection::ToolSelection(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ToolSelection_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ToolSelectionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ToolSelectionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ToolSelectionDefaultTypeInternal() {}
  union {
    ToolSelection _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ToolSelectionDefaultTypeInternal _ToolSelection_default_instance_;

inline constexpr ToolProficiencyList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tools_{},
        _tools_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ToolProficiencyList::ToolProficiencyList(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ToolProficiencyList_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ToolProficiencyListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ToolProficiencyListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ToolProficiencyListDefaultTypeInternal() {}
  union {
    ToolProficiencyList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ToolProficiencyListDefaultTypeInternal _ToolProficiencyList_default_instance_;

inline constexpr ToolOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : available_{},
        _available_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ToolOptions::ToolOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ToolOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ToolOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ToolOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ToolOptionsDefaultTypeInternal() {}
  union {
    ToolOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ToolOptionsDefaultTypeInternal _ToolOptions_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR SubraceInfo_AbilityBonusesEntry_DoNotUse::SubraceInfo_AbilityBonusesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : SubraceInfo_AbilityBonusesEntry_DoNotUse::MapEntry(SubraceInfo_AbilityBonusesEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : SubraceInfo_AbilityBonusesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SubraceInfo_AbilityBonusesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubraceInfo_AbilityBonusesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubraceInfo_AbilityBonusesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SubraceInfo_AbilityBonusesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubraceInfo_AbilityBonusesEntry_DoNotUseDefaultTypeInternal _SubraceInfo_AbilityBonusesEntry_DoNotUse_default_instance_;

inline constexpr SpellcastingInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        spellcasting_ability_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        spellcasting_focus_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ritual_casting_{false},
        cantrips_known_{0},
        spells_known_{0},
        spell_slots_level_1_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SpellcastingInfo::SpellcastingInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SpellcastingInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SpellcastingInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpellcastingInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpellcastingInfoDefaultTypeInternal() {}
  union {
    SpellcastingInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpellcastingInfoDefaultTypeInternal _SpellcastingInfo_default_instance_;

inline constexpr SpellSlots::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        level_1_{0},
        level_2_{0},
        level_3_{0},
        level_4_{0},
        level_5_{0},
        level_6_{0},
        level_7_{0},
        level_8_{0},
        level_9_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SpellSlots::SpellSlots(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SpellSlots_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SpellSlotsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpellSlotsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpellSlotsDefaultTypeInternal() {}
  union {
    SpellSlots _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpellSlotsDefaultTypeInternal _SpellSlots_default_instance_;

inline constexpr SpellSelectionInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        spell_levels_{},
        _spell_levels_cached_byte_size_{0},
        spell_lists_{},
        spells_to_select_{0},
        selection_type_{static_cast< ::dnd5e::api::v1alpha1::SpellSelectionType >(0)},
        requires_replace_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SpellSelectionInfo::SpellSelectionInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SpellSelectionInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SpellSelectionInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpellSelectionInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpellSelectionInfoDefaultTypeInternal() {}
  union {
    SpellSelectionInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpellSelectionInfoDefaultTypeInternal _SpellSelectionInfo_default_instance_;

inline constexpr SpellList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : spells_{},
        _spells_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SpellList::SpellList(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SpellList_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SpellListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpellListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpellListDefaultTypeInternal() {}
  union {
    SpellList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpellListDefaultTypeInternal _SpellList_default_instance_;

inline constexpr SkillSelection::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : skills_{},
        _skills_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SkillSelection::SkillSelection(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SkillSelection_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SkillSelectionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SkillSelectionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SkillSelectionDefaultTypeInternal() {}
  union {
    SkillSelection _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SkillSelectionDefaultTypeInternal _SkillSelection_default_instance_;

inline constexpr SkillOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : available_{},
        _available_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SkillOptions::SkillOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SkillOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SkillOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SkillOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SkillOptionsDefaultTypeInternal() {}
  union {
    SkillOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SkillOptionsDefaultTypeInternal _SkillOptions_default_instance_;

inline constexpr SkillList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : skills_{},
        _skills_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SkillList::SkillList(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SkillList_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SkillListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SkillListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SkillListDefaultTypeInternal() {}
  union {
    SkillList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SkillListDefaultTypeInternal _SkillList_default_instance_;

inline constexpr RollAssignments::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        strength_roll_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dexterity_roll_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        constitution_roll_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        intelligence_roll_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        wisdom_roll_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        charisma_roll_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR RollAssignments::RollAssignments(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RollAssignments_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RollAssignmentsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollAssignmentsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollAssignmentsDefaultTypeInternal() {}
  union {
    RollAssignments _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollAssignmentsDefaultTypeInternal _RollAssignments_default_instance_;

inline constexpr RollAbilityScoresRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        draft_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR RollAbilityScoresRequest::RollAbilityScoresRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RollAbilityScoresRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RollAbilityScoresRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollAbilityScoresRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollAbilityScoresRequestDefaultTypeInternal() {}
  union {
    RollAbilityScoresRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollAbilityScoresRequestDefaultTypeInternal _RollAbilityScoresRequest_default_instance_;

inline constexpr RemoveFromInventoryRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        character_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        item_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        removal_amount_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR RemoveFromInventoryRequest::RemoveFromInventoryRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RemoveFromInventoryRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RemoveFromInventoryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveFromInventoryRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveFromInventoryRequestDefaultTypeInternal() {}
  union {
    RemoveFromInventoryRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveFromInventoryRequestDefaultTypeInternal _RemoveFromInventoryRequest_default_instance_;

inline constexpr RacialTrait::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        options_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        is_choice_{false} {}

template <typename>
PROTOBUF_CONSTEXPR RacialTrait::RacialTrait(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RacialTrait_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RacialTraitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RacialTraitDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RacialTraitDefaultTypeInternal() {}
  union {
    RacialTrait _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RacialTraitDefaultTypeInternal _RacialTrait_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR RaceInfo_AbilityBonusesEntry_DoNotUse::RaceInfo_AbilityBonusesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : RaceInfo_AbilityBonusesEntry_DoNotUse::MapEntry(RaceInfo_AbilityBonusesEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : RaceInfo_AbilityBonusesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct RaceInfo_AbilityBonusesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RaceInfo_AbilityBonusesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RaceInfo_AbilityBonusesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    RaceInfo_AbilityBonusesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RaceInfo_AbilityBonusesEntry_DoNotUseDefaultTypeInternal _RaceInfo_AbilityBonusesEntry_DoNotUse_default_instance_;

inline constexpr RaceChoice::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        race_{static_cast< ::dnd5e::api::v1alpha1::Race >(0)},
        subrace_{static_cast< ::dnd5e::api::v1alpha1::Subrace >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR RaceChoice::RaceChoice(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RaceChoice_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RaceChoiceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RaceChoiceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RaceChoiceDefaultTypeInternal() {}
  union {
    RaceChoice _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RaceChoiceDefaultTypeInternal _RaceChoice_default_instance_;

inline constexpr ProficiencyGrants::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : armor_{},
        _armor_cached_byte_size_{0},
        weapons_{},
        _weapons_cached_byte_size_{0},
        tools_{},
        _tools_cached_byte_size_{0},
        skills_{},
        _skills_cached_byte_size_{0},
        languages_{},
        _languages_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ProficiencyGrants::ProficiencyGrants(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ProficiencyGrants_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ProficiencyGrantsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProficiencyGrantsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProficiencyGrantsDefaultTypeInternal() {}
  union {
    ProficiencyGrants _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProficiencyGrantsDefaultTypeInternal _ProficiencyGrants_default_instance_;

inline constexpr Proficiencies::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : skills_{},
        _skills_cached_byte_size_{0},
        saving_throws_{},
        _saving_throws_cached_byte_size_{0},
        armor_{},
        _armor_cached_byte_size_{0},
        weapons_{},
        _weapons_cached_byte_size_{0},
        tools_{},
        _tools_cached_byte_size_{0},
        armor_strings_{},
        weapon_strings_{},
        tool_strings_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Proficiencies::Proficiencies(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Proficiencies_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ProficienciesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProficienciesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProficienciesDefaultTypeInternal() {}
  union {
    Proficiencies _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProficienciesDefaultTypeInternal _Proficiencies_default_instance_;

inline constexpr ListSpellsByLevelResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        spells_{},
        _spells_cached_byte_size_{0},
        next_page_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        total_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListSpellsByLevelResponse::ListSpellsByLevelResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ListSpellsByLevelResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListSpellsByLevelResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListSpellsByLevelResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListSpellsByLevelResponseDefaultTypeInternal() {}
  union {
    ListSpellsByLevelResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListSpellsByLevelResponseDefaultTypeInternal _ListSpellsByLevelResponse_default_instance_;

inline constexpr ListSpellsByLevelRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        page_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        level_{0},
        class__{static_cast< ::dnd5e::api::v1alpha1::Class >(0)},
        page_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListSpellsByLevelRequest::ListSpellsByLevelRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ListSpellsByLevelRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListSpellsByLevelRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListSpellsByLevelRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListSpellsByLevelRequestDefaultTypeInternal() {}
  union {
    ListSpellsByLevelRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListSpellsByLevelRequestDefaultTypeInternal _ListSpellsByLevelRequest_default_instance_;

inline constexpr ListRacesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        page_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        page_size_{0},
        include_subraces_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ListRacesRequest::ListRacesRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ListRacesRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListRacesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListRacesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListRacesRequestDefaultTypeInternal() {}
  union {
    ListRacesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListRacesRequestDefaultTypeInternal _ListRacesRequest_default_instance_;

inline constexpr ListEquipmentByTypeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        page_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        equipment_type_{static_cast< ::dnd5e::api::v1alpha1::EquipmentType >(0)},
        page_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListEquipmentByTypeRequest::ListEquipmentByTypeRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ListEquipmentByTypeRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListEquipmentByTypeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListEquipmentByTypeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListEquipmentByTypeRequestDefaultTypeInternal() {}
  union {
    ListEquipmentByTypeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListEquipmentByTypeRequestDefaultTypeInternal _ListEquipmentByTypeRequest_default_instance_;

inline constexpr ListDraftsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        player_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        session_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        page_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        page_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListDraftsRequest::ListDraftsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ListDraftsRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListDraftsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListDraftsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListDraftsRequestDefaultTypeInternal() {}
  union {
    ListDraftsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListDraftsRequestDefaultTypeInternal _ListDraftsRequest_default_instance_;

inline constexpr ListClassesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        page_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        page_size_{0},
        include_spellcasters_only_{false},
        include_features_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ListClassesRequest::ListClassesRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ListClassesRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListClassesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListClassesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListClassesRequestDefaultTypeInternal() {}
  union {
    ListClassesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListClassesRequestDefaultTypeInternal _ListClassesRequest_default_instance_;

inline constexpr ListCharactersRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        page_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        session_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        page_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListCharactersRequest::ListCharactersRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ListCharactersRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListCharactersRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListCharactersRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListCharactersRequestDefaultTypeInternal() {}
  union {
    ListCharactersRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListCharactersRequestDefaultTypeInternal _ListCharactersRequest_default_instance_;

inline constexpr ListBackgroundsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        page_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        page_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListBackgroundsRequest::ListBackgroundsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ListBackgroundsRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListBackgroundsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListBackgroundsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListBackgroundsRequestDefaultTypeInternal() {}
  union {
    ListBackgroundsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListBackgroundsRequestDefaultTypeInternal _ListBackgroundsRequest_default_instance_;

inline constexpr LanguageSelection::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : languages_{},
        _languages_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LanguageSelection::LanguageSelection(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LanguageSelection_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LanguageSelectionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LanguageSelectionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LanguageSelectionDefaultTypeInternal() {}
  union {
    LanguageSelection _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LanguageSelectionDefaultTypeInternal _LanguageSelection_default_instance_;

inline constexpr LanguageOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : available_{},
        _available_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LanguageOptions::LanguageOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LanguageOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LanguageOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LanguageOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LanguageOptionsDefaultTypeInternal() {}
  union {
    LanguageOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LanguageOptionsDefaultTypeInternal _LanguageOptions_default_instance_;

inline constexpr LanguageList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : languages_{},
        _languages_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LanguageList::LanguageList(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LanguageList_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LanguageListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LanguageListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LanguageListDefaultTypeInternal() {}
  union {
    LanguageList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LanguageListDefaultTypeInternal _LanguageList_default_instance_;

inline constexpr ItemReference::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        item_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ItemReference::ItemReference(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ItemReference_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ItemReferenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ItemReferenceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ItemReferenceDefaultTypeInternal() {}
  union {
    ItemReference _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ItemReferenceDefaultTypeInternal _ItemReference_default_instance_;

inline constexpr InventoryAddition::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        item_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        quantity_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InventoryAddition::InventoryAddition(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(InventoryAddition_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InventoryAdditionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InventoryAdditionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InventoryAdditionDefaultTypeInternal() {}
  union {
    InventoryAddition _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InventoryAdditionDefaultTypeInternal _InventoryAddition_default_instance_;

inline constexpr GetRequirementsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        draft_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        class__{static_cast< ::dnd5e::api::v1alpha1::Class >(0)},
        race_{static_cast< ::dnd5e::api::v1alpha1::Race >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR GetRequirementsRequest::GetRequirementsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetRequirementsRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetRequirementsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRequirementsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRequirementsRequestDefaultTypeInternal() {}
  union {
    GetRequirementsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRequirementsRequestDefaultTypeInternal _GetRequirementsRequest_default_instance_;

inline constexpr GetRaceDetailsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        race_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR GetRaceDetailsRequest::GetRaceDetailsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetRaceDetailsRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetRaceDetailsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRaceDetailsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRaceDetailsRequestDefaultTypeInternal() {}
  union {
    GetRaceDetailsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRaceDetailsRequestDefaultTypeInternal _GetRaceDetailsRequest_default_instance_;

inline constexpr GetFeatureRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        feature_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR GetFeatureRequest::GetFeatureRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetFeatureRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetFeatureRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetFeatureRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetFeatureRequestDefaultTypeInternal() {}
  union {
    GetFeatureRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetFeatureRequestDefaultTypeInternal _GetFeatureRequest_default_instance_;

inline constexpr GetDraftRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        draft_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR GetDraftRequest::GetDraftRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetDraftRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetDraftRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetDraftRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetDraftRequestDefaultTypeInternal() {}
  union {
    GetDraftRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetDraftRequestDefaultTypeInternal _GetDraftRequest_default_instance_;

inline constexpr GetDraftPreviewRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        draft_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR GetDraftPreviewRequest::GetDraftPreviewRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetDraftPreviewRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetDraftPreviewRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetDraftPreviewRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetDraftPreviewRequestDefaultTypeInternal() {}
  union {
    GetDraftPreviewRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetDraftPreviewRequestDefaultTypeInternal _GetDraftPreviewRequest_default_instance_;

inline constexpr GetClassDetailsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        class_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR GetClassDetailsRequest::GetClassDetailsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetClassDetailsRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetClassDetailsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetClassDetailsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetClassDetailsRequestDefaultTypeInternal() {}
  union {
    GetClassDetailsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetClassDetailsRequestDefaultTypeInternal _GetClassDetailsRequest_default_instance_;

inline constexpr GetCharacterRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        character_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR GetCharacterRequest::GetCharacterRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetCharacterRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetCharacterRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCharacterRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCharacterRequestDefaultTypeInternal() {}
  union {
    GetCharacterRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCharacterRequestDefaultTypeInternal _GetCharacterRequest_default_instance_;

inline constexpr GetCharacterInventoryRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        character_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR GetCharacterInventoryRequest::GetCharacterInventoryRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetCharacterInventoryRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetCharacterInventoryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCharacterInventoryRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCharacterInventoryRequestDefaultTypeInternal() {}
  union {
    GetCharacterInventoryRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCharacterInventoryRequestDefaultTypeInternal _GetCharacterInventoryRequest_default_instance_;

inline constexpr GetBackgroundDetailsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        background_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR GetBackgroundDetailsRequest::GetBackgroundDetailsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetBackgroundDetailsRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetBackgroundDetailsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBackgroundDetailsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBackgroundDetailsRequestDefaultTypeInternal() {}
  union {
    GetBackgroundDetailsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBackgroundDetailsRequestDefaultTypeInternal _GetBackgroundDetailsRequest_default_instance_;

inline constexpr GearData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        properties_{},
        gear_category_{static_cast< ::dnd5e::api::v1alpha1::GearCategory >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR GearData::GearData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GearData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GearDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GearDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GearDataDefaultTypeInternal() {}
  union {
    GearData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GearDataDefaultTypeInternal _GearData_default_instance_;

inline constexpr FinalizeDraftRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        draft_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR FinalizeDraftRequest::FinalizeDraftRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(FinalizeDraftRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FinalizeDraftRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FinalizeDraftRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FinalizeDraftRequestDefaultTypeInternal() {}
  union {
    FinalizeDraftRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FinalizeDraftRequestDefaultTypeInternal _FinalizeDraftRequest_default_instance_;

inline constexpr FightingStyleSelection::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        style_{static_cast< ::dnd5e::api::v1alpha1::FightingStyle >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR FightingStyleSelection::FightingStyleSelection(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(FightingStyleSelection_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FightingStyleSelectionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FightingStyleSelectionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FightingStyleSelectionDefaultTypeInternal() {}
  union {
    FightingStyleSelection _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FightingStyleSelectionDefaultTypeInternal _FightingStyleSelection_default_instance_;

inline constexpr FightingStyleOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : available_{},
        _available_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FightingStyleOptions::FightingStyleOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(FightingStyleOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FightingStyleOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FightingStyleOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FightingStyleOptionsDefaultTypeInternal() {}
  union {
    FightingStyleOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FightingStyleOptionsDefaultTypeInternal _FightingStyleOptions_default_instance_;

inline constexpr ExpertiseList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : skills_{},
        _skills_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ExpertiseList::ExpertiseList(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ExpertiseList_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ExpertiseListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExpertiseListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExpertiseListDefaultTypeInternal() {}
  union {
    ExpertiseList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExpertiseListDefaultTypeInternal _ExpertiseList_default_instance_;

inline constexpr EquipmentSelection::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        quantity_{0},
        equipment_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR EquipmentSelection::EquipmentSelection(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EquipmentSelection_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EquipmentSelectionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EquipmentSelectionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EquipmentSelectionDefaultTypeInternal() {}
  union {
    EquipmentSelection _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EquipmentSelectionDefaultTypeInternal _EquipmentSelection_default_instance_;

inline constexpr EquipItemRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        character_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        item_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        slot_{static_cast< ::dnd5e::api::v1alpha1::EquipmentSlot >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR EquipItemRequest::EquipItemRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EquipItemRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EquipItemRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EquipItemRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EquipItemRequestDefaultTypeInternal() {}
  union {
    EquipItemRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EquipItemRequestDefaultTypeInternal _EquipItemRequest_default_instance_;

inline constexpr EncumbranceInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        current_weight_{0},
        carrying_capacity_{0},
        max_capacity_{0},
        level_{static_cast< ::dnd5e::api::v1alpha1::EncumbranceLevel >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR EncumbranceInfo::EncumbranceInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EncumbranceInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EncumbranceInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EncumbranceInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EncumbranceInfoDefaultTypeInternal() {}
  union {
    EncumbranceInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EncumbranceInfoDefaultTypeInternal _EncumbranceInfo_default_instance_;

inline constexpr DraftMetadata::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        discord_channel_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        discord_message_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        created_at_{::int64_t{0}},
        updated_at_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR DraftMetadata::DraftMetadata(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DraftMetadata_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DraftMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DraftMetadataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DraftMetadataDefaultTypeInternal() {}
  union {
    DraftMetadata _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DraftMetadataDefaultTypeInternal _DraftMetadata_default_instance_;

inline constexpr DeleteDraftResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR DeleteDraftResponse::DeleteDraftResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DeleteDraftResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeleteDraftResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteDraftResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteDraftResponseDefaultTypeInternal() {}
  union {
    DeleteDraftResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteDraftResponseDefaultTypeInternal _DeleteDraftResponse_default_instance_;

inline constexpr DeleteDraftRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        draft_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR DeleteDraftRequest::DeleteDraftRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DeleteDraftRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeleteDraftRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteDraftRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteDraftRequestDefaultTypeInternal() {}
  union {
    DeleteDraftRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteDraftRequestDefaultTypeInternal _DeleteDraftRequest_default_instance_;

inline constexpr DeleteCharacterResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR DeleteCharacterResponse::DeleteCharacterResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DeleteCharacterResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeleteCharacterResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteCharacterResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteCharacterResponseDefaultTypeInternal() {}
  union {
    DeleteCharacterResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteCharacterResponseDefaultTypeInternal _DeleteCharacterResponse_default_instance_;

inline constexpr DeleteCharacterRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        character_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR DeleteCharacterRequest::DeleteCharacterRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DeleteCharacterRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeleteCharacterRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteCharacterRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteCharacterRequestDefaultTypeInternal() {}
  union {
    DeleteCharacterRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteCharacterRequestDefaultTypeInternal _DeleteCharacterRequest_default_instance_;

inline constexpr DamageAtSlotLevel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        damage_dice_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        slot_level_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DamageAtSlotLevel::DamageAtSlotLevel(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DamageAtSlotLevel_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DamageAtSlotLevelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DamageAtSlotLevelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DamageAtSlotLevelDefaultTypeInternal() {}
  union {
    DamageAtSlotLevel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DamageAtSlotLevelDefaultTypeInternal _DamageAtSlotLevel_default_instance_;

inline constexpr CreationProgress::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        has_name_{false},
        has_race_{false},
        has_class_{false},
        has_background_{false},
        has_ability_scores_{false},
        has_skills_{false},
        has_languages_{false},
        completion_percentage_{0},
        current_step_{static_cast< ::dnd5e::api::v1alpha1::CreationStep >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR CreationProgress::CreationProgress(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CreationProgress_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreationProgressDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreationProgressDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreationProgressDefaultTypeInternal() {}
  union {
    CreationProgress _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreationProgressDefaultTypeInternal _CreationProgress_default_instance_;

inline constexpr CountedItemReference::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        quantity_{0},
        item_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR CountedItemReference::CountedItemReference(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CountedItemReference_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CountedItemReferenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CountedItemReferenceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CountedItemReferenceDefaultTypeInternal() {}
  union {
    CountedItemReference _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CountedItemReferenceDefaultTypeInternal _CountedItemReference_default_instance_;

inline constexpr Cost::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        unit_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        quantity_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Cost::Cost(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Cost_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CostDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CostDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CostDefaultTypeInternal() {}
  union {
    Cost _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CostDefaultTypeInternal _Cost_default_instance_;

inline constexpr CombatStats::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        hit_dice_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        hit_point_maximum_{0},
        armor_class_{0},
        initiative_{0},
        speed_{0},
        proficiency_bonus_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CombatStats::CombatStats(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CombatStats_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CombatStatsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CombatStatsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CombatStatsDefaultTypeInternal() {}
  union {
    CombatStats _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CombatStatsDefaultTypeInternal _CombatStats_default_instance_;

inline constexpr ClassResource::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::dnd5e::api::v1alpha1::ClassResourceType >(0)},
        current_{0},
        maximum_{0},
        recharge_{static_cast< ::dnd5e::api::v1alpha1::RechargeType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR ClassResource::ClassResource(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ClassResource_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ClassResourceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClassResourceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClassResourceDefaultTypeInternal() {}
  union {
    ClassResource _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClassResourceDefaultTypeInternal _ClassResource_default_instance_;

inline constexpr ClassChoice::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        class__{static_cast< ::dnd5e::api::v1alpha1::Class >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR ClassChoice::ClassChoice(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ClassChoice_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ClassChoiceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClassChoiceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClassChoiceDefaultTypeInternal() {}
  union {
    ClassChoice _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClassChoiceDefaultTypeInternal _ClassChoice_default_instance_;

inline constexpr CharacterMetadata::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        player_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        created_at_{::int64_t{0}},
        updated_at_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR CharacterMetadata::CharacterMetadata(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CharacterMetadata_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CharacterMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CharacterMetadataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CharacterMetadataDefaultTypeInternal() {}
  union {
    CharacterMetadata _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CharacterMetadataDefaultTypeInternal _CharacterMetadata_default_instance_;

inline constexpr CharacterFeature::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        level_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CharacterFeature::CharacterFeature(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CharacterFeature_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CharacterFeatureDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CharacterFeatureDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CharacterFeatureDefaultTypeInternal() {}
  union {
    CharacterFeature _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CharacterFeatureDefaultTypeInternal _CharacterFeature_default_instance_;

inline constexpr CategoryReference::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        exclude_ids_{},
        category_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR CategoryReference::CategoryReference(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CategoryReference_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CategoryReferenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CategoryReferenceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CategoryReferenceDefaultTypeInternal() {}
  union {
    CategoryReference _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CategoryReferenceDefaultTypeInternal _CategoryReference_default_instance_;

inline constexpr CantripList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : cantrips_{},
        _cantrips_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CantripList::CantripList(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CantripList_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CantripListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CantripListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CantripListDefaultTypeInternal() {}
  union {
    CantripList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CantripListDefaultTypeInternal _CantripList_default_instance_;

inline constexpr ArmorProficiencySelection::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : armors_{},
        _armors_cached_byte_size_{0},
        categories_{},
        _categories_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ArmorProficiencySelection::ArmorProficiencySelection(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ArmorProficiencySelection_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ArmorProficiencySelectionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ArmorProficiencySelectionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ArmorProficiencySelectionDefaultTypeInternal() {}
  union {
    ArmorProficiencySelection _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ArmorProficiencySelectionDefaultTypeInternal _ArmorProficiencySelection_default_instance_;

inline constexpr ArmorData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        armor_category_{static_cast< ::dnd5e::api::v1alpha1::ArmorCategory >(0)},
        base_ac_{0},
        dex_bonus_{false},
        has_dex_limit_{false},
        stealth_disadvantage_{false},
        max_dex_bonus_{0},
        str_minimum_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ArmorData::ArmorData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ArmorData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ArmorDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ArmorDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ArmorDataDefaultTypeInternal() {}
  union {
    ArmorData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ArmorDataDefaultTypeInternal _ArmorData_default_instance_;

inline constexpr AreaOfEffect::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AreaOfEffect::AreaOfEffect(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AreaOfEffect_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AreaOfEffectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AreaOfEffectDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AreaOfEffectDefaultTypeInternal() {}
  union {
    AreaOfEffect _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AreaOfEffectDefaultTypeInternal _AreaOfEffect_default_instance_;

inline constexpr AbilityScores::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        strength_{0},
        dexterity_{0},
        constitution_{0},
        intelligence_{0},
        wisdom_{0},
        charisma_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AbilityScores::AbilityScores(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AbilityScores_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AbilityScoresDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AbilityScoresDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AbilityScoresDefaultTypeInternal() {}
  union {
    AbilityScores _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AbilityScoresDefaultTypeInternal _AbilityScores_default_instance_;

inline constexpr AbilityScoreRoll::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        dice_{},
        _dice_cached_byte_size_{0},
        roll_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        notation_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        total_{0},
        dropped_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AbilityScoreRoll::AbilityScoreRoll(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AbilityScoreRoll_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AbilityScoreRollDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AbilityScoreRollDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AbilityScoreRollDefaultTypeInternal() {}
  union {
    AbilityScoreRoll _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AbilityScoreRollDefaultTypeInternal _AbilityScoreRoll_default_instance_;

inline constexpr AbilityModifiers::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        strength_{0},
        dexterity_{0},
        constitution_{0},
        intelligence_{0},
        wisdom_{0},
        charisma_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AbilityModifiers::AbilityModifiers(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AbilityModifiers_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AbilityModifiersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AbilityModifiersDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AbilityModifiersDefaultTypeInternal() {}
  union {
    AbilityModifiers _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AbilityModifiersDefaultTypeInternal _AbilityModifiers_default_instance_;

inline constexpr UpdateAbilityScoresRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        draft_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        scores_input_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateAbilityScoresRequest::UpdateAbilityScoresRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UpdateAbilityScoresRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateAbilityScoresRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateAbilityScoresRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateAbilityScoresRequestDefaultTypeInternal() {}
  union {
    UpdateAbilityScoresRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateAbilityScoresRequestDefaultTypeInternal _UpdateAbilityScoresRequest_default_instance_;

inline constexpr SubraceInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ability_bonuses_{},
        traits_{},
        languages_{},
        _languages_cached_byte_size_{0},
        proficiencies_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        proficiency_grants_{nullptr},
        subrace_id_{static_cast< ::dnd5e::api::v1alpha1::Subrace >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR SubraceInfo::SubraceInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SubraceInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubraceInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubraceInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubraceInfoDefaultTypeInternal() {}
  union {
    SubraceInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubraceInfoDefaultTypeInternal _SubraceInfo_default_instance_;

inline constexpr SpellDamage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        damage_at_slot_level_{},
        damage_type_{static_cast< ::dnd5e::api::v1alpha1::DamageType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR SpellDamage::SpellDamage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SpellDamage_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SpellDamageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpellDamageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpellDamageDefaultTypeInternal() {}
  union {
    SpellDamage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpellDamageDefaultTypeInternal _SpellDamage_default_instance_;

inline constexpr RollAbilityScoresResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rolls_{},
        expires_at_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR RollAbilityScoresResponse::RollAbilityScoresResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RollAbilityScoresResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RollAbilityScoresResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RollAbilityScoresResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RollAbilityScoresResponseDefaultTypeInternal() {}
  union {
    RollAbilityScoresResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RollAbilityScoresResponseDefaultTypeInternal _RollAbilityScoresResponse_default_instance_;

inline constexpr EquipmentOption::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        items_{},
        option_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR EquipmentOption::EquipmentOption(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EquipmentOption_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EquipmentOptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EquipmentOptionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EquipmentOptionDefaultTypeInternal() {}
  union {
    EquipmentOption _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EquipmentOptionDefaultTypeInternal _EquipmentOption_default_instance_;

inline constexpr EquipmentList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : items_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EquipmentList::EquipmentList(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EquipmentList_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EquipmentListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EquipmentListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EquipmentListDefaultTypeInternal() {}
  union {
    EquipmentList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EquipmentListDefaultTypeInternal _EquipmentList_default_instance_;

inline constexpr Equipment::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cost_{nullptr},
        weight_{nullptr},
        category_{static_cast< ::dnd5e::api::v1alpha1::EquipmentCategory >(0)},
        equipment_data_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Equipment::Equipment(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Equipment_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EquipmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EquipmentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EquipmentDefaultTypeInternal() {}
  union {
    Equipment _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EquipmentDefaultTypeInternal _Equipment_default_instance_;

inline constexpr ChoiceSubmission::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        choice_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        option_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        category_{static_cast< ::dnd5e::api::v1alpha1::ChoiceCategory >(0)},
        source_{static_cast< ::dnd5e::api::v1alpha1::ChoiceSource >(0)},
        values_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ChoiceSubmission::ChoiceSubmission(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ChoiceSubmission_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ChoiceSubmissionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChoiceSubmissionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChoiceSubmissionDefaultTypeInternal() {}
  union {
    ChoiceSubmission _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChoiceSubmissionDefaultTypeInternal _ChoiceSubmission_default_instance_;

inline constexpr BundleItem::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : item_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR BundleItem::BundleItem(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(BundleItem_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BundleItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BundleItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BundleItemDefaultTypeInternal() {}
  union {
    BundleItem _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BundleItemDefaultTypeInternal _BundleItem_default_instance_;

inline constexpr Choice::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        choose_count_{0},
        choice_type_{static_cast< ::dnd5e::api::v1alpha1::ChoiceCategory >(0)},
        option_set_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Choice::Choice(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Choice_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ChoiceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChoiceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChoiceDefaultTypeInternal() {}
  union {
    Choice _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChoiceDefaultTypeInternal _Choice_default_instance_;

inline constexpr ChoiceOption::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : option_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ChoiceOption::ChoiceOption(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ChoiceOption_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ChoiceOptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChoiceOptionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChoiceOptionDefaultTypeInternal() {}
  union {
    ChoiceOption _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChoiceOptionDefaultTypeInternal _ChoiceOption_default_instance_;

inline constexpr ExplicitOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : options_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ExplicitOptions::ExplicitOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ExplicitOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ExplicitOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExplicitOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExplicitOptionsDefaultTypeInternal() {}
  union {
    ExplicitOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExplicitOptionsDefaultTypeInternal _ExplicitOptions_default_instance_;

inline constexpr ItemBundle::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : items_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ItemBundle::ItemBundle(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ItemBundle_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ItemBundleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ItemBundleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ItemBundleDefaultTypeInternal() {}
  union {
    ItemBundle _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ItemBundleDefaultTypeInternal _ItemBundle_default_instance_;

inline constexpr NestedChoice::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        choice_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR NestedChoice::NestedChoice(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(NestedChoice_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NestedChoiceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NestedChoiceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NestedChoiceDefaultTypeInternal() {}
  union {
    NestedChoice _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NestedChoiceDefaultTypeInternal _NestedChoice_default_instance_;

inline constexpr BackgroundInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        skill_proficiencies_{},
        _skill_proficiencies_cached_byte_size_{0},
        tool_proficiencies_{},
        _tool_proficiencies_cached_byte_size_{0},
        languages_{},
        _languages_cached_byte_size_{0},
        starting_equipment_{},
        personality_traits_{},
        ideals_{},
        bonds_{},
        flaws_{},
        skill_proficiency_strings_{},
        tool_proficiency_strings_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        feature_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        feature_description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        background_id_{static_cast< ::dnd5e::api::v1alpha1::Background >(0)},
        additional_languages_{0},
        starting_gold_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BackgroundInfo::BackgroundInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(BackgroundInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BackgroundInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BackgroundInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BackgroundInfoDefaultTypeInternal() {}
  union {
    BackgroundInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BackgroundInfoDefaultTypeInternal _BackgroundInfo_default_instance_;

inline constexpr AddToInventoryRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        items_{},
        character_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR AddToInventoryRequest::AddToInventoryRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AddToInventoryRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AddToInventoryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddToInventoryRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddToInventoryRequestDefaultTypeInternal() {}
  union {
    AddToInventoryRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddToInventoryRequestDefaultTypeInternal _AddToInventoryRequest_default_instance_;

inline constexpr ValidateDraftResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        missing_steps_{},
        _missing_steps_cached_byte_size_{0},
        errors_{},
        warnings_{},
        validation_{nullptr},
        is_complete_{false},
        is_valid_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ValidateDraftResponse::ValidateDraftResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ValidateDraftResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValidateDraftResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidateDraftResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidateDraftResponseDefaultTypeInternal() {}
  union {
    ValidateDraftResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidateDraftResponseDefaultTypeInternal _ValidateDraftResponse_default_instance_;

inline constexpr SubmitChoicesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        submissions_{},
        draft_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR SubmitChoicesRequest::SubmitChoicesRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SubmitChoicesRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubmitChoicesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubmitChoicesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubmitChoicesRequestDefaultTypeInternal() {}
  union {
    SubmitChoicesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubmitChoicesRequestDefaultTypeInternal _SubmitChoicesRequest_default_instance_;

inline constexpr RaceInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ability_bonuses_{},
        traits_{},
        subraces_{},
        languages_{},
        _languages_cached_byte_size_{0},
        choices_{},
        proficiencies_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        age_description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        alignment_description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        size_description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        proficiency_grants_{nullptr},
        race_id_{static_cast< ::dnd5e::api::v1alpha1::Race >(0)},
        speed_{0},
        size_{static_cast< ::dnd5e::api::v1alpha1::Size >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR RaceInfo::RaceInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RaceInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RaceInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RaceInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RaceInfoDefaultTypeInternal() {}
  union {
    RaceInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RaceInfoDefaultTypeInternal _RaceInfo_default_instance_;

inline constexpr ListEquipmentByTypeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        equipment_{},
        next_page_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        total_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListEquipmentByTypeResponse::ListEquipmentByTypeResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ListEquipmentByTypeResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListEquipmentByTypeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListEquipmentByTypeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListEquipmentByTypeResponseDefaultTypeInternal() {}
  union {
    ListEquipmentByTypeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListEquipmentByTypeResponseDefaultTypeInternal _ListEquipmentByTypeResponse_default_instance_;

inline constexpr ListBackgroundsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        backgrounds_{},
        next_page_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        total_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListBackgroundsResponse::ListBackgroundsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ListBackgroundsResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListBackgroundsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListBackgroundsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListBackgroundsResponseDefaultTypeInternal() {}
  union {
    ListBackgroundsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListBackgroundsResponseDefaultTypeInternal _ListBackgroundsResponse_default_instance_;

inline constexpr InventoryItem::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        item_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        custom_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        equipment_{nullptr},
        quantity_{0},
        is_attuned_{false} {}

template <typename>
PROTOBUF_CONSTEXPR InventoryItem::InventoryItem(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(InventoryItem_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InventoryItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InventoryItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InventoryItemDefaultTypeInternal() {}
  union {
    InventoryItem _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InventoryItemDefaultTypeInternal _InventoryItem_default_instance_;

inline constexpr GetBackgroundDetailsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        background_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetBackgroundDetailsResponse::GetBackgroundDetailsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetBackgroundDetailsResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetBackgroundDetailsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBackgroundDetailsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBackgroundDetailsResponseDefaultTypeInternal() {}
  union {
    GetBackgroundDetailsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBackgroundDetailsResponseDefaultTypeInternal _GetBackgroundDetailsResponse_default_instance_;

inline constexpr FeatureInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        choices_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        class_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        spell_selection_{nullptr},
        level_{0},
        has_choices_{false} {}

template <typename>
PROTOBUF_CONSTEXPR FeatureInfo::FeatureInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(FeatureInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FeatureInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FeatureInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FeatureInfoDefaultTypeInternal() {}
  union {
    FeatureInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FeatureInfoDefaultTypeInternal _FeatureInfo_default_instance_;

inline constexpr EquipmentChoice::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        options_{},
        choice_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR EquipmentChoice::EquipmentChoice(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EquipmentChoice_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EquipmentChoiceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EquipmentChoiceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EquipmentChoiceDefaultTypeInternal() {}
  union {
    EquipmentChoice _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EquipmentChoiceDefaultTypeInternal _EquipmentChoice_default_instance_;

inline constexpr ChoiceData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        choice_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        category_{static_cast< ::dnd5e::api::v1alpha1::ChoiceCategory >(0)},
        source_{static_cast< ::dnd5e::api::v1alpha1::ChoiceSource >(0)},
        selection_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ChoiceData::ChoiceData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ChoiceData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ChoiceDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChoiceDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChoiceDataDefaultTypeInternal() {}
  union {
    ChoiceData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChoiceDataDefaultTypeInternal _ChoiceData_default_instance_;

inline constexpr UpdateRaceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        race_choices_{},
        draft_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        race_{static_cast< ::dnd5e::api::v1alpha1::Race >(0)},
        subrace_{static_cast< ::dnd5e::api::v1alpha1::Subrace >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateRaceRequest::UpdateRaceRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UpdateRaceRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateRaceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateRaceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateRaceRequestDefaultTypeInternal() {}
  union {
    UpdateRaceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateRaceRequestDefaultTypeInternal _UpdateRaceRequest_default_instance_;

inline constexpr UpdateClassRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        class_choices_{},
        draft_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        class__{static_cast< ::dnd5e::api::v1alpha1::Class >(0)},
        subclass_{static_cast< ::dnd5e::api::v1alpha1::Subclass >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateClassRequest::UpdateClassRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UpdateClassRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateClassRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateClassRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateClassRequestDefaultTypeInternal() {}
  union {
    UpdateClassRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateClassRequestDefaultTypeInternal _UpdateClassRequest_default_instance_;

inline constexpr UpdateBackgroundRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        background_choices_{},
        draft_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        background_{static_cast< ::dnd5e::api::v1alpha1::Background >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateBackgroundRequest::UpdateBackgroundRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UpdateBackgroundRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateBackgroundRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateBackgroundRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateBackgroundRequestDefaultTypeInternal() {}
  union {
    UpdateBackgroundRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateBackgroundRequestDefaultTypeInternal _UpdateBackgroundRequest_default_instance_;

inline constexpr SubclassInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        armor_proficiencies_{},
        _armor_proficiencies_cached_byte_size_{0},
        weapon_proficiencies_{},
        _weapon_proficiencies_cached_byte_size_{0},
        tool_proficiencies_{},
        _tool_proficiencies_cached_byte_size_{0},
        additional_choices_{},
        features_{},
        armor_proficiency_strings_{},
        weapon_proficiency_strings_{},
        tool_proficiency_strings_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subclass_id_{static_cast< ::dnd5e::api::v1alpha1::Subclass >(0)},
        level_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SubclassInfo::SubclassInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SubclassInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubclassInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubclassInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubclassInfoDefaultTypeInternal() {}
  union {
    SubclassInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubclassInfoDefaultTypeInternal _SubclassInfo_default_instance_;

inline constexpr RequiredChoice::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        choice_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        category_{static_cast< ::dnd5e::api::v1alpha1::ChoiceCategory >(0)},
        source_{static_cast< ::dnd5e::api::v1alpha1::ChoiceSource >(0)},
        count_{0},
        options_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR RequiredChoice::RequiredChoice(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RequiredChoice_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RequiredChoiceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequiredChoiceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequiredChoiceDefaultTypeInternal() {}
  union {
    RequiredChoice _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequiredChoiceDefaultTypeInternal _RequiredChoice_default_instance_;

inline constexpr ListRacesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        races_{},
        next_page_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        total_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListRacesResponse::ListRacesResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ListRacesResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListRacesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListRacesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListRacesResponseDefaultTypeInternal() {}
  union {
    ListRacesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListRacesResponseDefaultTypeInternal _ListRacesResponse_default_instance_;

inline constexpr GetRaceDetailsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        race_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetRaceDetailsResponse::GetRaceDetailsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetRaceDetailsResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetRaceDetailsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRaceDetailsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRaceDetailsResponseDefaultTypeInternal() {}
  union {
    GetRaceDetailsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRaceDetailsResponseDefaultTypeInternal _GetRaceDetailsResponse_default_instance_;

inline constexpr GetFeatureResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        feature_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetFeatureResponse::GetFeatureResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetFeatureResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetFeatureResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetFeatureResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetFeatureResponseDefaultTypeInternal() {}
  union {
    GetFeatureResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetFeatureResponseDefaultTypeInternal _GetFeatureResponse_default_instance_;

inline constexpr EquipmentSlots::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        main_hand_{nullptr},
        off_hand_{nullptr},
        armor_{nullptr},
        helmet_{nullptr},
        boots_{nullptr},
        gloves_{nullptr},
        cloak_{nullptr},
        amulet_{nullptr},
        ring_1_{nullptr},
        ring_2_{nullptr},
        belt_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR EquipmentSlots::EquipmentSlots(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EquipmentSlots_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EquipmentSlotsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EquipmentSlotsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EquipmentSlotsDefaultTypeInternal() {}
  union {
    EquipmentSlots _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EquipmentSlotsDefaultTypeInternal _EquipmentSlots_default_instance_;

inline constexpr CharacterDraftData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        choices_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        session_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        base_ability_scores_{nullptr},
        progress_{nullptr},
        race_{static_cast< ::dnd5e::api::v1alpha1::Race >(0)},
        subrace_{static_cast< ::dnd5e::api::v1alpha1::Subrace >(0)},
        class__{static_cast< ::dnd5e::api::v1alpha1::Class >(0)},
        subclass_{static_cast< ::dnd5e::api::v1alpha1::Subclass >(0)},
        background_{static_cast< ::dnd5e::api::v1alpha1::Background >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR CharacterDraftData::CharacterDraftData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CharacterDraftData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CharacterDraftDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CharacterDraftDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CharacterDraftDataDefaultTypeInternal() {}
  union {
    CharacterDraftData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CharacterDraftDataDefaultTypeInternal _CharacterDraftData_default_instance_;

inline constexpr UpdateDraftRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        update_mask_{},
        draft_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        updates_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateDraftRequest::UpdateDraftRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UpdateDraftRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateDraftRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateDraftRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateDraftRequestDefaultTypeInternal() {}
  union {
    UpdateDraftRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateDraftRequestDefaultTypeInternal _UpdateDraftRequest_default_instance_;

inline constexpr GetCharacterInventoryResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        inventory_{},
        equipment_slots_{nullptr},
        encumbrance_{nullptr},
        attunement_slots_used_{0},
        attunement_slots_max_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetCharacterInventoryResponse::GetCharacterInventoryResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetCharacterInventoryResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetCharacterInventoryResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCharacterInventoryResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCharacterInventoryResponseDefaultTypeInternal() {}
  union {
    GetCharacterInventoryResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCharacterInventoryResponseDefaultTypeInternal _GetCharacterInventoryResponse_default_instance_;

inline constexpr CreateDraftRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        player_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        session_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        initial_data_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateDraftRequest::CreateDraftRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CreateDraftRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateDraftRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateDraftRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateDraftRequestDefaultTypeInternal() {}
  union {
    CreateDraftRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateDraftRequestDefaultTypeInternal _CreateDraftRequest_default_instance_;

inline constexpr ClassInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        armor_proficiency_categories_{},
        _armor_proficiency_categories_cached_byte_size_{0},
        weapon_proficiency_categories_{},
        _weapon_proficiency_categories_cached_byte_size_{0},
        tool_proficiencies_{},
        _tool_proficiencies_cached_byte_size_{0},
        saving_throw_proficiencies_{},
        _saving_throw_proficiencies_cached_byte_size_{0},
        available_skills_{},
        _available_skills_cached_byte_size_{0},
        equipment_choices_{},
        level_1_features_{},
        choices_{},
        subclasses_{},
        proficiencies_{},
        specific_weapon_proficiencies_{},
        _specific_weapon_proficiencies_cached_byte_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        spellcasting_{nullptr},
        class_id_{static_cast< ::dnd5e::api::v1alpha1::Class >(0)},
        hit_die_{0},
        primary_ability_{static_cast< ::dnd5e::api::v1alpha1::Ability >(0)},
        skill_choices_count_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ClassInfo::ClassInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ClassInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ClassInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClassInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClassInfoDefaultTypeInternal() {}
  union {
    ClassInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClassInfoDefaultTypeInternal _ClassInfo_default_instance_;

inline constexpr CharacterRequirements::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        choices_{},
        missing_choices_{},
        all_choices_made_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CharacterRequirements::CharacterRequirements(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CharacterRequirements_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CharacterRequirementsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CharacterRequirementsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CharacterRequirementsDefaultTypeInternal() {}
  union {
    CharacterRequirements _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CharacterRequirementsDefaultTypeInternal _CharacterRequirements_default_instance_;

inline constexpr Character::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        languages_{},
        _languages_cached_byte_size_{0},
        inventory_{},
        features_{},
        fighting_styles_{},
        _fighting_styles_cached_byte_size_{0},
        racial_traits_{},
        class_resources_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        session_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ability_scores_{nullptr},
        ability_modifiers_{nullptr},
        combat_stats_{nullptr},
        proficiencies_{nullptr},
        metadata_{nullptr},
        equipment_slots_{nullptr},
        encumbrance_{nullptr},
        background_feature_{nullptr},
        spell_slots_{nullptr},
        level_{0},
        experience_points_{0},
        race_{static_cast< ::dnd5e::api::v1alpha1::Race >(0)},
        subrace_{static_cast< ::dnd5e::api::v1alpha1::Subrace >(0)},
        class__{static_cast< ::dnd5e::api::v1alpha1::Class >(0)},
        background_{static_cast< ::dnd5e::api::v1alpha1::Background >(0)},
        alignment_{static_cast< ::dnd5e::api::v1alpha1::Alignment >(0)},
        current_hit_points_{0},
        temporary_hit_points_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Character::Character(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Character_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CharacterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CharacterDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CharacterDefaultTypeInternal() {}
  union {
    Character _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CharacterDefaultTypeInternal _Character_default_instance_;

inline constexpr UpdateCharacterResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        character_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateCharacterResponse::UpdateCharacterResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UpdateCharacterResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateCharacterResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateCharacterResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateCharacterResponseDefaultTypeInternal() {}
  union {
    UpdateCharacterResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateCharacterResponseDefaultTypeInternal _UpdateCharacterResponse_default_instance_;

inline constexpr UpdateCharacterRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        update_mask_{},
        character_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateCharacterRequest::UpdateCharacterRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UpdateCharacterRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateCharacterRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateCharacterRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateCharacterRequestDefaultTypeInternal() {}
  union {
    UpdateCharacterRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateCharacterRequestDefaultTypeInternal _UpdateCharacterRequest_default_instance_;

inline constexpr UnequipItemResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        character_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UnequipItemResponse::UnequipItemResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UnequipItemResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UnequipItemResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnequipItemResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnequipItemResponseDefaultTypeInternal() {}
  union {
    UnequipItemResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnequipItemResponseDefaultTypeInternal _UnequipItemResponse_default_instance_;

inline constexpr RemoveFromInventoryResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        character_{nullptr},
        quantity_removed_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RemoveFromInventoryResponse::RemoveFromInventoryResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RemoveFromInventoryResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RemoveFromInventoryResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveFromInventoryResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveFromInventoryResponseDefaultTypeInternal() {}
  union {
    RemoveFromInventoryResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveFromInventoryResponseDefaultTypeInternal _RemoveFromInventoryResponse_default_instance_;

inline constexpr ListClassesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        classes_{},
        next_page_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        total_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListClassesResponse::ListClassesResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ListClassesResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListClassesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListClassesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListClassesResponseDefaultTypeInternal() {}
  union {
    ListClassesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListClassesResponseDefaultTypeInternal _ListClassesResponse_default_instance_;

inline constexpr ListCharactersResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        characters_{},
        next_page_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        total_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListCharactersResponse::ListCharactersResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ListCharactersResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListCharactersResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListCharactersResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListCharactersResponseDefaultTypeInternal() {}
  union {
    ListCharactersResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListCharactersResponseDefaultTypeInternal _ListCharactersResponse_default_instance_;

inline constexpr GetRequirementsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        requirements_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetRequirementsResponse::GetRequirementsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetRequirementsResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetRequirementsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRequirementsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRequirementsResponseDefaultTypeInternal() {}
  union {
    GetRequirementsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRequirementsResponseDefaultTypeInternal _GetRequirementsResponse_default_instance_;

inline constexpr GetClassDetailsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        class__{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetClassDetailsResponse::GetClassDetailsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetClassDetailsResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetClassDetailsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetClassDetailsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetClassDetailsResponseDefaultTypeInternal() {}
  union {
    GetClassDetailsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetClassDetailsResponseDefaultTypeInternal _GetClassDetailsResponse_default_instance_;

inline constexpr GetCharacterResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        character_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetCharacterResponse::GetCharacterResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetCharacterResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetCharacterResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCharacterResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCharacterResponseDefaultTypeInternal() {}
  union {
    GetCharacterResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCharacterResponseDefaultTypeInternal _GetCharacterResponse_default_instance_;

inline constexpr FinalizeDraftResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        character_{nullptr},
        final_validation_{nullptr},
        draft_deleted_{false} {}

template <typename>
PROTOBUF_CONSTEXPR FinalizeDraftResponse::FinalizeDraftResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(FinalizeDraftResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FinalizeDraftResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FinalizeDraftResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FinalizeDraftResponseDefaultTypeInternal() {}
  union {
    FinalizeDraftResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FinalizeDraftResponseDefaultTypeInternal _FinalizeDraftResponse_default_instance_;

inline constexpr EquipItemResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        character_{nullptr},
        previously_equipped_item_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR EquipItemResponse::EquipItemResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EquipItemResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EquipItemResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EquipItemResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EquipItemResponseDefaultTypeInternal() {}
  union {
    EquipItemResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EquipItemResponseDefaultTypeInternal _EquipItemResponse_default_instance_;

inline constexpr CharacterDraft::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        choices_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        session_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        base_ability_scores_{nullptr},
        progress_{nullptr},
        validation_{nullptr},
        race_info_{nullptr},
        subrace_info_{nullptr},
        class_info_{nullptr},
        background_info_{nullptr},
        race_{static_cast< ::dnd5e::api::v1alpha1::Race >(0)},
        subrace_{static_cast< ::dnd5e::api::v1alpha1::Subrace >(0)},
        class__{static_cast< ::dnd5e::api::v1alpha1::Class >(0)},
        subclass_{static_cast< ::dnd5e::api::v1alpha1::Subclass >(0)},
        background_{static_cast< ::dnd5e::api::v1alpha1::Background >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR CharacterDraft::CharacterDraft(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CharacterDraft_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CharacterDraftDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CharacterDraftDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CharacterDraftDefaultTypeInternal() {}
  union {
    CharacterDraft _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CharacterDraftDefaultTypeInternal _CharacterDraft_default_instance_;

inline constexpr AddToInventoryResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        errors_{},
        character_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR AddToInventoryResponse::AddToInventoryResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AddToInventoryResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AddToInventoryResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddToInventoryResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddToInventoryResponseDefaultTypeInternal() {}
  union {
    AddToInventoryResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddToInventoryResponseDefaultTypeInternal _AddToInventoryResponse_default_instance_;

inline constexpr UpdateSkillsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        warnings_{},
        draft_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateSkillsResponse::UpdateSkillsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UpdateSkillsResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateSkillsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateSkillsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateSkillsResponseDefaultTypeInternal() {}
  union {
    UpdateSkillsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateSkillsResponseDefaultTypeInternal _UpdateSkillsResponse_default_instance_;

inline constexpr UpdateRaceResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        warnings_{},
        draft_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateRaceResponse::UpdateRaceResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UpdateRaceResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateRaceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateRaceResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateRaceResponseDefaultTypeInternal() {}
  union {
    UpdateRaceResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateRaceResponseDefaultTypeInternal _UpdateRaceResponse_default_instance_;

inline constexpr UpdateNameResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        warnings_{},
        draft_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateNameResponse::UpdateNameResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UpdateNameResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateNameResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateNameResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateNameResponseDefaultTypeInternal() {}
  union {
    UpdateNameResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateNameResponseDefaultTypeInternal _UpdateNameResponse_default_instance_;

inline constexpr UpdateDraftResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        warnings_{},
        draft_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateDraftResponse::UpdateDraftResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UpdateDraftResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateDraftResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateDraftResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateDraftResponseDefaultTypeInternal() {}
  union {
    UpdateDraftResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateDraftResponseDefaultTypeInternal _UpdateDraftResponse_default_instance_;

inline constexpr UpdateClassResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        warnings_{},
        draft_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateClassResponse::UpdateClassResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UpdateClassResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateClassResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateClassResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateClassResponseDefaultTypeInternal() {}
  union {
    UpdateClassResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateClassResponseDefaultTypeInternal _UpdateClassResponse_default_instance_;

inline constexpr UpdateBackgroundResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        warnings_{},
        draft_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateBackgroundResponse::UpdateBackgroundResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UpdateBackgroundResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateBackgroundResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateBackgroundResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateBackgroundResponseDefaultTypeInternal() {}
  union {
    UpdateBackgroundResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateBackgroundResponseDefaultTypeInternal _UpdateBackgroundResponse_default_instance_;

inline constexpr UpdateAbilityScoresResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        warnings_{},
        draft_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateAbilityScoresResponse::UpdateAbilityScoresResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UpdateAbilityScoresResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateAbilityScoresResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateAbilityScoresResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateAbilityScoresResponseDefaultTypeInternal() {}
  union {
    UpdateAbilityScoresResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateAbilityScoresResponseDefaultTypeInternal _UpdateAbilityScoresResponse_default_instance_;

inline constexpr SubmitChoicesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        draft_{nullptr},
        validation_{nullptr},
        remaining_requirements_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SubmitChoicesResponse::SubmitChoicesResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SubmitChoicesResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubmitChoicesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubmitChoicesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubmitChoicesResponseDefaultTypeInternal() {}
  union {
    SubmitChoicesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubmitChoicesResponseDefaultTypeInternal _SubmitChoicesResponse_default_instance_;

inline constexpr ListDraftsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        drafts_{},
        next_page_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR ListDraftsResponse::ListDraftsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ListDraftsResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListDraftsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListDraftsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListDraftsResponseDefaultTypeInternal() {}
  union {
    ListDraftsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListDraftsResponseDefaultTypeInternal _ListDraftsResponse_default_instance_;

inline constexpr GetDraftResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        draft_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetDraftResponse::GetDraftResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetDraftResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetDraftResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetDraftResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetDraftResponseDefaultTypeInternal() {}
  union {
    GetDraftResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetDraftResponseDefaultTypeInternal _GetDraftResponse_default_instance_;

inline constexpr GetDraftPreviewResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        warnings_{},
        errors_{},
        draft_{nullptr},
        preview_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetDraftPreviewResponse::GetDraftPreviewResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetDraftPreviewResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetDraftPreviewResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetDraftPreviewResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetDraftPreviewResponseDefaultTypeInternal() {}
  union {
    GetDraftPreviewResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetDraftPreviewResponseDefaultTypeInternal _GetDraftPreviewResponse_default_instance_;

inline constexpr CreateDraftResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        draft_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateDraftResponse::CreateDraftResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CreateDraftResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateDraftResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateDraftResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateDraftResponseDefaultTypeInternal() {}
  union {
    CreateDraftResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateDraftResponseDefaultTypeInternal _CreateDraftResponse_default_instance_;
}  // namespace v1alpha1
}  // namespace api
}  // namespace dnd5e
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto[10];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto = nullptr;
const ::uint32_t
    TableStruct_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterFeature, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterFeature, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterFeature, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterFeature, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterFeature, _impl_.source_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterFeature, _impl_.level_),
        0,
        1,
        2,
        3,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ClassResource, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ClassResource, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ClassResource, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ClassResource, _impl_.current_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ClassResource, _impl_.maximum_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ClassResource, _impl_.recharge_),
        1,
        0,
        2,
        3,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SpellSlots, _impl_._has_bits_),
        12, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SpellSlots, _impl_.level_1_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SpellSlots, _impl_.level_2_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SpellSlots, _impl_.level_3_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SpellSlots, _impl_.level_4_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SpellSlots, _impl_.level_5_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SpellSlots, _impl_.level_6_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SpellSlots, _impl_.level_7_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SpellSlots, _impl_.level_8_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SpellSlots, _impl_.level_9_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::AbilityScores, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::AbilityScores, _impl_.strength_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::AbilityScores, _impl_.dexterity_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::AbilityScores, _impl_.constitution_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::AbilityScores, _impl_.intelligence_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::AbilityScores, _impl_.wisdom_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::AbilityScores, _impl_.charisma_),
        0,
        1,
        2,
        3,
        4,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Character, _impl_._has_bits_),
        30, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Character, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Character, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Character, _impl_.level_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Character, _impl_.experience_points_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Character, _impl_.race_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Character, _impl_.subrace_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Character, _impl_.class__),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Character, _impl_.background_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Character, _impl_.alignment_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Character, _impl_.ability_scores_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Character, _impl_.ability_modifiers_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Character, _impl_.combat_stats_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Character, _impl_.proficiencies_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Character, _impl_.languages_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Character, _impl_.current_hit_points_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Character, _impl_.temporary_hit_points_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Character, _impl_.session_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Character, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Character, _impl_.equipment_slots_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Character, _impl_.inventory_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Character, _impl_.encumbrance_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Character, _impl_.features_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Character, _impl_.fighting_styles_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Character, _impl_.racial_traits_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Character, _impl_.background_feature_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Character, _impl_.class_resources_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Character, _impl_.spell_slots_),
        0,
        1,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        3,
        4,
        5,
        6,
        ~0u,
        19,
        20,
        2,
        7,
        8,
        ~0u,
        9,
        ~0u,
        ~0u,
        ~0u,
        10,
        ~0u,
        11,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::AbilityModifiers, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::AbilityModifiers, _impl_.strength_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::AbilityModifiers, _impl_.dexterity_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::AbilityModifiers, _impl_.constitution_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::AbilityModifiers, _impl_.intelligence_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::AbilityModifiers, _impl_.wisdom_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::AbilityModifiers, _impl_.charisma_),
        0,
        1,
        2,
        3,
        4,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CombatStats, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CombatStats, _impl_.hit_point_maximum_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CombatStats, _impl_.armor_class_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CombatStats, _impl_.initiative_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CombatStats, _impl_.speed_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CombatStats, _impl_.proficiency_bonus_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CombatStats, _impl_.hit_dice_),
        1,
        2,
        3,
        4,
        5,
        0,
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ProficiencyGrants, _impl_.armor_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ProficiencyGrants, _impl_.weapons_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ProficiencyGrants, _impl_.tools_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ProficiencyGrants, _impl_.skills_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ProficiencyGrants, _impl_.languages_),
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Proficiencies, _impl_.skills_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Proficiencies, _impl_.saving_throws_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Proficiencies, _impl_.armor_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Proficiencies, _impl_.weapons_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Proficiencies, _impl_.tools_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Proficiencies, _impl_.armor_strings_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Proficiencies, _impl_.weapon_strings_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Proficiencies, _impl_.tool_strings_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterMetadata, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterMetadata, _impl_.created_at_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterMetadata, _impl_.updated_at_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterMetadata, _impl_.player_id_),
        1,
        2,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetCharacterRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetCharacterRequest, _impl_.character_id_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetCharacterResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetCharacterResponse, _impl_.character_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListCharactersRequest, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListCharactersRequest, _impl_.page_size_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListCharactersRequest, _impl_.page_token_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListCharactersRequest, _impl_.session_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListCharactersRequest, _impl_.player_id_),
        3,
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListCharactersResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListCharactersResponse, _impl_.characters_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListCharactersResponse, _impl_.next_page_token_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListCharactersResponse, _impl_.total_size_),
        ~0u,
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateCharacterRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateCharacterRequest, _impl_.character_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateCharacterRequest, _impl_.update_mask_),
        0,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateCharacterResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateCharacterResponse, _impl_.character_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::DeleteCharacterRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::DeleteCharacterRequest, _impl_.character_id_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::DeleteCharacterResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::DeleteCharacterResponse, _impl_.message_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterDraftData, _impl_._has_bits_),
        15, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterDraftData, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterDraftData, _impl_.player_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterDraftData, _impl_.session_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterDraftData, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterDraftData, _impl_.race_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterDraftData, _impl_.subrace_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterDraftData, _impl_.class__),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterDraftData, _impl_.subclass_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterDraftData, _impl_.background_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterDraftData, _impl_.base_ability_scores_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterDraftData, _impl_.choices_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterDraftData, _impl_.progress_),
        0,
        1,
        2,
        3,
        6,
        7,
        8,
        9,
        10,
        4,
        ~0u,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CreationProgress, _impl_._has_bits_),
        12, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CreationProgress, _impl_.has_name_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CreationProgress, _impl_.has_race_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CreationProgress, _impl_.has_class_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CreationProgress, _impl_.has_background_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CreationProgress, _impl_.has_ability_scores_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CreationProgress, _impl_.has_skills_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CreationProgress, _impl_.has_languages_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CreationProgress, _impl_.completion_percentage_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CreationProgress, _impl_.current_step_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::DraftMetadata, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::DraftMetadata, _impl_.created_at_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::DraftMetadata, _impl_.updated_at_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::DraftMetadata, _impl_.discord_channel_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::DraftMetadata, _impl_.discord_message_id_),
        2,
        3,
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterDraft, _impl_._has_bits_),
        20, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterDraft, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterDraft, _impl_.player_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterDraft, _impl_.session_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterDraft, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterDraft, _impl_.race_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterDraft, _impl_.subrace_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterDraft, _impl_.class__),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterDraft, _impl_.subclass_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterDraft, _impl_.background_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterDraft, _impl_.base_ability_scores_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterDraft, _impl_.choices_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterDraft, _impl_.progress_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterDraft, _impl_.validation_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterDraft, _impl_.race_info_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterDraft, _impl_.subrace_info_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterDraft, _impl_.class_info_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterDraft, _impl_.background_info_),
        0,
        1,
        2,
        3,
        11,
        12,
        13,
        14,
        15,
        4,
        ~0u,
        5,
        6,
        7,
        8,
        9,
        10,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CreateDraftRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CreateDraftRequest, _impl_.player_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CreateDraftRequest, _impl_.session_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CreateDraftRequest, _impl_.initial_data_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CreateDraftResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CreateDraftResponse, _impl_.draft_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetDraftRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetDraftRequest, _impl_.draft_id_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetDraftResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetDraftResponse, _impl_.draft_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateDraftRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateDraftRequest, _impl_.draft_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateDraftRequest, _impl_.updates_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateDraftRequest, _impl_.update_mask_),
        0,
        1,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateDraftResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateDraftResponse, _impl_.draft_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateDraftResponse, _impl_.warnings_),
        0,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateNameRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateNameRequest, _impl_.draft_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateNameRequest, _impl_.name_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateRaceRequest, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateRaceRequest, _impl_.draft_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateRaceRequest, _impl_.race_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateRaceRequest, _impl_.subrace_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateRaceRequest, _impl_.race_choices_),
        0,
        1,
        2,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateClassRequest, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateClassRequest, _impl_.draft_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateClassRequest, _impl_.class__),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateClassRequest, _impl_.class_choices_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateClassRequest, _impl_.subclass_),
        0,
        1,
        ~0u,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateBackgroundRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateBackgroundRequest, _impl_.draft_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateBackgroundRequest, _impl_.background_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateBackgroundRequest, _impl_.background_choices_),
        0,
        1,
        ~0u,
        0x085, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest, _impl_._oneof_case_[0]),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest, _impl_.draft_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest, _impl_.scores_input_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest, _impl_.scores_input_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest, _impl_.scores_input_),
        0,
        ~0u,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateSkillsRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateSkillsRequest, _impl_.draft_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateSkillsRequest, _impl_.skills_),
        0,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateNameResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateNameResponse, _impl_.draft_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateNameResponse, _impl_.warnings_),
        0,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateRaceResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateRaceResponse, _impl_.draft_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateRaceResponse, _impl_.warnings_),
        0,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateClassResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateClassResponse, _impl_.draft_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateClassResponse, _impl_.warnings_),
        0,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateBackgroundResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateBackgroundResponse, _impl_.draft_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateBackgroundResponse, _impl_.warnings_),
        0,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse, _impl_.draft_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse, _impl_.warnings_),
        0,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateSkillsResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateSkillsResponse, _impl_.draft_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateSkillsResponse, _impl_.warnings_),
        0,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListDraftsRequest, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListDraftsRequest, _impl_.player_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListDraftsRequest, _impl_.session_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListDraftsRequest, _impl_.page_size_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListDraftsRequest, _impl_.page_token_),
        0,
        1,
        3,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListDraftsResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListDraftsResponse, _impl_.drafts_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListDraftsResponse, _impl_.next_page_token_),
        ~0u,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ValidateDraftRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ValidateDraftRequest, _impl_.draft_id_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ValidateDraftResponse, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ValidateDraftResponse, _impl_.validation_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ValidateDraftResponse, _impl_.is_complete_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ValidateDraftResponse, _impl_.is_valid_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ValidateDraftResponse, _impl_.missing_steps_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ValidateDraftResponse, _impl_.errors_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ValidateDraftResponse, _impl_.warnings_),
        0,
        1,
        2,
        ~0u,
        ~0u,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetDraftPreviewRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetDraftPreviewRequest, _impl_.draft_id_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetDraftPreviewResponse, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetDraftPreviewResponse, _impl_.draft_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetDraftPreviewResponse, _impl_.preview_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetDraftPreviewResponse, _impl_.warnings_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetDraftPreviewResponse, _impl_.errors_),
        0,
        1,
        ~0u,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::FinalizeDraftRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::FinalizeDraftRequest, _impl_.draft_id_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::FinalizeDraftResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::FinalizeDraftResponse, _impl_.character_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::FinalizeDraftResponse, _impl_.draft_deleted_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::FinalizeDraftResponse, _impl_.final_validation_),
        0,
        2,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::DeleteDraftRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::DeleteDraftRequest, _impl_.draft_id_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::DeleteDraftResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::DeleteDraftResponse, _impl_.message_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RaceInfo_AbilityBonusesEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RaceInfo_AbilityBonusesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RaceInfo_AbilityBonusesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RaceInfo, _impl_._has_bits_),
        18, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RaceInfo, _impl_.race_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RaceInfo, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RaceInfo, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RaceInfo, _impl_.speed_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RaceInfo, _impl_.size_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RaceInfo, _impl_.ability_bonuses_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RaceInfo, _impl_.traits_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RaceInfo, _impl_.subraces_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RaceInfo, _impl_.proficiency_grants_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RaceInfo, _impl_.languages_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RaceInfo, _impl_.choices_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RaceInfo, _impl_.age_description_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RaceInfo, _impl_.alignment_description_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RaceInfo, _impl_.size_description_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RaceInfo, _impl_.proficiencies_),
        6,
        0,
        1,
        7,
        8,
        ~0u,
        ~0u,
        ~0u,
        5,
        ~0u,
        ~0u,
        2,
        3,
        4,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SubraceInfo_AbilityBonusesEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SubraceInfo_AbilityBonusesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SubraceInfo_AbilityBonusesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SubraceInfo, _impl_._has_bits_),
        11, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SubraceInfo, _impl_.subrace_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SubraceInfo, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SubraceInfo, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SubraceInfo, _impl_.ability_bonuses_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SubraceInfo, _impl_.traits_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SubraceInfo, _impl_.languages_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SubraceInfo, _impl_.proficiency_grants_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SubraceInfo, _impl_.proficiencies_),
        3,
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        2,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RacialTrait, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RacialTrait, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RacialTrait, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RacialTrait, _impl_.is_choice_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RacialTrait, _impl_.options_),
        0,
        1,
        2,
        ~0u,
        0x085, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Choice, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Choice, _impl_._oneof_case_[0]),
        11, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Choice, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Choice, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Choice, _impl_.choose_count_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Choice, _impl_.choice_type_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Choice, _impl_.option_set_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Choice, _impl_.option_set_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Choice, _impl_.option_set_),
        0,
        1,
        2,
        3,
        ~0u,
        ~0u,
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ExplicitOptions, _impl_.options_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CategoryReference, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CategoryReference, _impl_.category_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CategoryReference, _impl_.exclude_ids_),
        0,
        ~0u,
        0x004, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceOption, _impl_._oneof_case_[0]),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceOption, _impl_.option_type_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceOption, _impl_.option_type_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceOption, _impl_.option_type_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceOption, _impl_.option_type_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceOption, _impl_.option_type_),
        0x085, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ItemReference, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ItemReference, _impl_._oneof_case_[0]),
        12, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ItemReference, _impl_.item_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ItemReference, _impl_.item_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ItemReference, _impl_.item_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ItemReference, _impl_.item_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ItemReference, _impl_.item_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ItemReference, _impl_.item_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ItemReference, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ItemReference, _impl_.item_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        0x085, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CountedItemReference, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CountedItemReference, _impl_._oneof_case_[0]),
        13, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CountedItemReference, _impl_.item_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CountedItemReference, _impl_.item_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CountedItemReference, _impl_.item_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CountedItemReference, _impl_.item_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CountedItemReference, _impl_.item_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CountedItemReference, _impl_.item_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CountedItemReference, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CountedItemReference, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CountedItemReference, _impl_.item_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ItemBundle, _impl_.items_),
        0x004, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::BundleItem, _impl_._oneof_case_[0]),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::BundleItem, _impl_.item_type_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::BundleItem, _impl_.item_type_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::BundleItem, _impl_.item_type_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::NestedChoice, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::NestedChoice, _impl_.choice_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ClassInfo, _impl_._has_bits_),
        21, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ClassInfo, _impl_.class_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ClassInfo, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ClassInfo, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ClassInfo, _impl_.hit_die_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ClassInfo, _impl_.primary_ability_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ClassInfo, _impl_.armor_proficiency_categories_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ClassInfo, _impl_.weapon_proficiency_categories_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ClassInfo, _impl_.specific_weapon_proficiencies_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ClassInfo, _impl_.tool_proficiencies_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ClassInfo, _impl_.saving_throw_proficiencies_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ClassInfo, _impl_.proficiencies_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ClassInfo, _impl_.skill_choices_count_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ClassInfo, _impl_.available_skills_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ClassInfo, _impl_.equipment_choices_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ClassInfo, _impl_.level_1_features_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ClassInfo, _impl_.spellcasting_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ClassInfo, _impl_.choices_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ClassInfo, _impl_.subclasses_),
        3,
        0,
        1,
        4,
        5,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        6,
        ~0u,
        ~0u,
        ~0u,
        2,
        ~0u,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SubclassInfo, _impl_._has_bits_),
        15, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SubclassInfo, _impl_.subclass_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SubclassInfo, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SubclassInfo, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SubclassInfo, _impl_.level_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SubclassInfo, _impl_.armor_proficiencies_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SubclassInfo, _impl_.weapon_proficiencies_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SubclassInfo, _impl_.tool_proficiencies_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SubclassInfo, _impl_.additional_choices_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SubclassInfo, _impl_.features_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SubclassInfo, _impl_.armor_proficiency_strings_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SubclassInfo, _impl_.weapon_proficiency_strings_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SubclassInfo, _impl_.tool_proficiency_strings_),
        2,
        0,
        1,
        3,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SpellcastingInfo, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SpellcastingInfo, _impl_.spellcasting_ability_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SpellcastingInfo, _impl_.ritual_casting_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SpellcastingInfo, _impl_.spellcasting_focus_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SpellcastingInfo, _impl_.cantrips_known_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SpellcastingInfo, _impl_.spells_known_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SpellcastingInfo, _impl_.spell_slots_level_1_),
        0,
        2,
        1,
        3,
        4,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::BackgroundInfo, _impl_._has_bits_),
        20, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::BackgroundInfo, _impl_.background_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::BackgroundInfo, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::BackgroundInfo, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::BackgroundInfo, _impl_.skill_proficiencies_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::BackgroundInfo, _impl_.tool_proficiencies_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::BackgroundInfo, _impl_.languages_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::BackgroundInfo, _impl_.additional_languages_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::BackgroundInfo, _impl_.starting_equipment_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::BackgroundInfo, _impl_.starting_gold_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::BackgroundInfo, _impl_.feature_name_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::BackgroundInfo, _impl_.feature_description_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::BackgroundInfo, _impl_.personality_traits_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::BackgroundInfo, _impl_.ideals_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::BackgroundInfo, _impl_.bonds_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::BackgroundInfo, _impl_.flaws_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::BackgroundInfo, _impl_.skill_proficiency_strings_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::BackgroundInfo, _impl_.tool_proficiency_strings_),
        4,
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        5,
        ~0u,
        6,
        2,
        3,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::FeatureInfo, _impl_._has_bits_),
        11, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::FeatureInfo, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::FeatureInfo, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::FeatureInfo, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::FeatureInfo, _impl_.level_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::FeatureInfo, _impl_.class_name_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::FeatureInfo, _impl_.choices_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::FeatureInfo, _impl_.has_choices_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::FeatureInfo, _impl_.spell_selection_),
        0,
        1,
        2,
        5,
        3,
        ~0u,
        6,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SpellSelectionInfo, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SpellSelectionInfo, _impl_.spells_to_select_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SpellSelectionInfo, _impl_.spell_levels_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SpellSelectionInfo, _impl_.spell_lists_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SpellSelectionInfo, _impl_.selection_type_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SpellSelectionInfo, _impl_.requires_replace_),
        0,
        ~0u,
        ~0u,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListRacesRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListRacesRequest, _impl_.page_size_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListRacesRequest, _impl_.page_token_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListRacesRequest, _impl_.include_subraces_),
        1,
        0,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListRacesResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListRacesResponse, _impl_.races_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListRacesResponse, _impl_.next_page_token_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListRacesResponse, _impl_.total_size_),
        ~0u,
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListClassesRequest, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListClassesRequest, _impl_.page_size_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListClassesRequest, _impl_.page_token_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListClassesRequest, _impl_.include_spellcasters_only_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListClassesRequest, _impl_.include_features_),
        1,
        0,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListClassesResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListClassesResponse, _impl_.classes_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListClassesResponse, _impl_.next_page_token_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListClassesResponse, _impl_.total_size_),
        ~0u,
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListBackgroundsRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListBackgroundsRequest, _impl_.page_size_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListBackgroundsRequest, _impl_.page_token_),
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListBackgroundsResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListBackgroundsResponse, _impl_.backgrounds_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListBackgroundsResponse, _impl_.next_page_token_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListBackgroundsResponse, _impl_.total_size_),
        ~0u,
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetRaceDetailsRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetRaceDetailsRequest, _impl_.race_id_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetRaceDetailsResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetRaceDetailsResponse, _impl_.race_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetClassDetailsRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetClassDetailsRequest, _impl_.class_id_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetClassDetailsResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetClassDetailsResponse, _impl_.class__),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest, _impl_.background_id_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse, _impl_.background_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetFeatureRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetFeatureRequest, _impl_.feature_id_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetFeatureResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetFeatureResponse, _impl_.feature_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RollAbilityScoresRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RollAbilityScoresRequest, _impl_.draft_id_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::AbilityScoreRoll, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::AbilityScoreRoll, _impl_.roll_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::AbilityScoreRoll, _impl_.dice_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::AbilityScoreRoll, _impl_.total_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::AbilityScoreRoll, _impl_.dropped_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::AbilityScoreRoll, _impl_.notation_),
        0,
        ~0u,
        2,
        3,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RollAbilityScoresResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RollAbilityScoresResponse, _impl_.rolls_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RollAbilityScoresResponse, _impl_.expires_at_),
        ~0u,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetRequirementsRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetRequirementsRequest, _impl_.draft_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetRequirementsRequest, _impl_.class__),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetRequirementsRequest, _impl_.race_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetRequirementsResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetRequirementsResponse, _impl_.requirements_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SubmitChoicesRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SubmitChoicesRequest, _impl_.draft_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SubmitChoicesRequest, _impl_.submissions_),
        0,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SubmitChoicesResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SubmitChoicesResponse, _impl_.draft_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SubmitChoicesResponse, _impl_.validation_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SubmitChoicesResponse, _impl_.remaining_requirements_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RollAssignments, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RollAssignments, _impl_.strength_roll_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RollAssignments, _impl_.dexterity_roll_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RollAssignments, _impl_.constitution_roll_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RollAssignments, _impl_.intelligence_roll_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RollAssignments, _impl_.wisdom_roll_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RollAssignments, _impl_.charisma_roll_id_),
        0,
        1,
        2,
        3,
        4,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Cost, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Cost, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Cost, _impl_.unit_),
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Weight, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Weight, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Weight, _impl_.unit_),
        1,
        0,
        0x085, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Equipment, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Equipment, _impl_._oneof_case_[0]),
        14, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Equipment, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Equipment, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Equipment, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Equipment, _impl_.cost_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Equipment, _impl_.weight_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Equipment, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Equipment, _impl_.equipment_data_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Equipment, _impl_.equipment_data_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Equipment, _impl_.equipment_data_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Equipment, _impl_.equipment_data_),
        0,
        1,
        5,
        3,
        4,
        2,
        ~0u,
        ~0u,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::WeaponData, _impl_._has_bits_),
        10, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::WeaponData, _impl_.weapon_category_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::WeaponData, _impl_.damage_dice_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::WeaponData, _impl_.damage_type_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::WeaponData, _impl_.properties_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::WeaponData, _impl_.range_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::WeaponData, _impl_.normal_range_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::WeaponData, _impl_.long_range_),
        2,
        0,
        3,
        ~0u,
        1,
        4,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ArmorData, _impl_._has_bits_),
        10, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ArmorData, _impl_.armor_category_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ArmorData, _impl_.base_ac_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ArmorData, _impl_.dex_bonus_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ArmorData, _impl_.has_dex_limit_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ArmorData, _impl_.max_dex_bonus_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ArmorData, _impl_.str_minimum_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ArmorData, _impl_.stealth_disadvantage_),
        0,
        1,
        2,
        3,
        5,
        6,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GearData, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GearData, _impl_.gear_category_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GearData, _impl_.properties_),
        0,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipmentSlots, _impl_._has_bits_),
        14, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipmentSlots, _impl_.main_hand_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipmentSlots, _impl_.off_hand_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipmentSlots, _impl_.armor_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipmentSlots, _impl_.helmet_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipmentSlots, _impl_.boots_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipmentSlots, _impl_.gloves_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipmentSlots, _impl_.cloak_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipmentSlots, _impl_.amulet_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipmentSlots, _impl_.ring_1_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipmentSlots, _impl_.ring_2_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipmentSlots, _impl_.belt_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::InventoryItem, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::InventoryItem, _impl_.item_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::InventoryItem, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::InventoryItem, _impl_.is_attuned_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::InventoryItem, _impl_.custom_name_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::InventoryItem, _impl_.equipment_),
        0,
        3,
        4,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EncumbranceInfo, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EncumbranceInfo, _impl_.current_weight_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EncumbranceInfo, _impl_.carrying_capacity_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EncumbranceInfo, _impl_.max_capacity_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EncumbranceInfo, _impl_.level_),
        0,
        1,
        2,
        3,
        0x085, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceData, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceData, _impl_._oneof_case_[0]),
        22, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceData, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceData, _impl_.source_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceData, _impl_.choice_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceData, _impl_.selection_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceData, _impl_.selection_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceData, _impl_.selection_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceData, _impl_.selection_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceData, _impl_.selection_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceData, _impl_.selection_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceData, _impl_.selection_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceData, _impl_.selection_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceData, _impl_.selection_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceData, _impl_.selection_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceData, _impl_.selection_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceData, _impl_.selection_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceData, _impl_.selection_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceData, _impl_.selection_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceData, _impl_.selection_),
        1,
        2,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SkillList, _impl_.skills_),
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::LanguageList, _impl_.languages_),
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipmentList, _impl_.items_),
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SpellList, _impl_.spells_),
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CantripList, _impl_.cantrips_),
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ExpertiseList, _impl_.skills_),
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::TraitList, _impl_.traits_),
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ToolProficiencyList, _impl_.tools_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RaceChoice, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RaceChoice, _impl_.race_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RaceChoice, _impl_.subrace_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ClassChoice, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ClassChoice, _impl_.class__),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipmentChoice, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipmentChoice, _impl_.choice_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipmentChoice, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipmentChoice, _impl_.options_),
        0,
        1,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipmentOption, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipmentOption, _impl_.option_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipmentOption, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipmentOption, _impl_.items_),
        0,
        1,
        ~0u,
        0x085, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipmentSelection, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipmentSelection, _impl_._oneof_case_[0]),
        12, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipmentSelection, _impl_.equipment_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipmentSelection, _impl_.equipment_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipmentSelection, _impl_.equipment_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipmentSelection, _impl_.equipment_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipmentSelection, _impl_.equipment_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipmentSelection, _impl_.equipment_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipmentSelection, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipmentSelection, _impl_.equipment_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        0x085, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceSubmission, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceSubmission, _impl_._oneof_case_[0]),
        16, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceSubmission, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceSubmission, _impl_.source_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceSubmission, _impl_.choice_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceSubmission, _impl_.option_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceSubmission, _impl_.values_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceSubmission, _impl_.values_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceSubmission, _impl_.values_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceSubmission, _impl_.values_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceSubmission, _impl_.values_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceSubmission, _impl_.values_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceSubmission, _impl_.values_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceSubmission, _impl_.values_),
        2,
        3,
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SkillSelection, _impl_.skills_),
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::LanguageSelection, _impl_.languages_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::FightingStyleSelection, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::FightingStyleSelection, _impl_.style_),
        0,
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ToolSelection, _impl_.tools_),
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::WeaponProficiencySelection, _impl_.weapons_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::WeaponProficiencySelection, _impl_.categories_),
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ArmorProficiencySelection, _impl_.armors_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ArmorProficiencySelection, _impl_.categories_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterRequirements, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterRequirements, _impl_.choices_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterRequirements, _impl_.all_choices_made_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CharacterRequirements, _impl_.missing_choices_),
        ~0u,
        0,
        ~0u,
        0x085, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RequiredChoice, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RequiredChoice, _impl_._oneof_case_[0]),
        15, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RequiredChoice, _impl_.choice_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RequiredChoice, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RequiredChoice, _impl_.source_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RequiredChoice, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RequiredChoice, _impl_.count_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RequiredChoice, _impl_.options_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RequiredChoice, _impl_.options_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RequiredChoice, _impl_.options_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RequiredChoice, _impl_.options_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RequiredChoice, _impl_.options_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RequiredChoice, _impl_.options_),
        0,
        2,
        3,
        1,
        4,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SkillOptions, _impl_.available_),
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::LanguageOptions, _impl_.available_),
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::FightingStyleOptions, _impl_.available_),
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ToolOptions, _impl_.available_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SpellDamage, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SpellDamage, _impl_.damage_type_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::SpellDamage, _impl_.damage_at_slot_level_),
        0,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::DamageAtSlotLevel, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::DamageAtSlotLevel, _impl_.slot_level_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::DamageAtSlotLevel, _impl_.damage_dice_),
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::AreaOfEffect, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::AreaOfEffect, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::AreaOfEffect, _impl_.size_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest, _impl_.equipment_type_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest, _impl_.page_size_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest, _impl_.page_token_),
        1,
        2,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse, _impl_.equipment_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse, _impl_.next_page_token_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse, _impl_.total_size_),
        ~0u,
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListSpellsByLevelRequest, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListSpellsByLevelRequest, _impl_.level_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListSpellsByLevelRequest, _impl_.class__),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListSpellsByLevelRequest, _impl_.page_size_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListSpellsByLevelRequest, _impl_.page_token_),
        1,
        2,
        3,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListSpellsByLevelResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListSpellsByLevelResponse, _impl_.spells_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListSpellsByLevelResponse, _impl_.next_page_token_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ListSpellsByLevelResponse, _impl_.total_size_),
        ~0u,
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetCharacterInventoryRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetCharacterInventoryRequest, _impl_.character_id_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetCharacterInventoryResponse, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetCharacterInventoryResponse, _impl_.equipment_slots_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetCharacterInventoryResponse, _impl_.inventory_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetCharacterInventoryResponse, _impl_.encumbrance_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetCharacterInventoryResponse, _impl_.attunement_slots_used_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::GetCharacterInventoryResponse, _impl_.attunement_slots_max_),
        0,
        ~0u,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipItemRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipItemRequest, _impl_.character_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipItemRequest, _impl_.item_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipItemRequest, _impl_.slot_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipItemResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipItemResponse, _impl_.character_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipItemResponse, _impl_.previously_equipped_item_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UnequipItemRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UnequipItemRequest, _impl_.character_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UnequipItemRequest, _impl_.slot_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UnequipItemResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UnequipItemResponse, _impl_.character_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::AddToInventoryRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::AddToInventoryRequest, _impl_.character_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::AddToInventoryRequest, _impl_.items_),
        0,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::InventoryAddition, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::InventoryAddition, _impl_.item_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::InventoryAddition, _impl_.quantity_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::AddToInventoryResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::AddToInventoryResponse, _impl_.character_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::AddToInventoryResponse, _impl_.errors_),
        0,
        ~0u,
        0x085, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RemoveFromInventoryRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RemoveFromInventoryRequest, _impl_._oneof_case_[0]),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RemoveFromInventoryRequest, _impl_.character_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RemoveFromInventoryRequest, _impl_.item_id_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RemoveFromInventoryRequest, _impl_.removal_amount_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RemoveFromInventoryRequest, _impl_.removal_amount_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RemoveFromInventoryRequest, _impl_.removal_amount_),
        0,
        1,
        ~0u,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RemoveFromInventoryResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RemoveFromInventoryResponse, _impl_.character_),
        PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RemoveFromInventoryResponse, _impl_.quantity_removed_),
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::dnd5e::api::v1alpha1::CharacterFeature)},
        {13, sizeof(::dnd5e::api::v1alpha1::ClassResource)},
        {26, sizeof(::dnd5e::api::v1alpha1::SpellSlots)},
        {47, sizeof(::dnd5e::api::v1alpha1::AbilityScores)},
        {62, sizeof(::dnd5e::api::v1alpha1::Character)},
        {119, sizeof(::dnd5e::api::v1alpha1::AbilityModifiers)},
        {134, sizeof(::dnd5e::api::v1alpha1::CombatStats)},
        {149, sizeof(::dnd5e::api::v1alpha1::ProficiencyGrants)},
        {155, sizeof(::dnd5e::api::v1alpha1::Proficiencies)},
        {164, sizeof(::dnd5e::api::v1alpha1::CharacterMetadata)},
        {173, sizeof(::dnd5e::api::v1alpha1::GetCharacterRequest)},
        {178, sizeof(::dnd5e::api::v1alpha1::GetCharacterResponse)},
        {183, sizeof(::dnd5e::api::v1alpha1::ListCharactersRequest)},
        {194, sizeof(::dnd5e::api::v1alpha1::ListCharactersResponse)},
        {203, sizeof(::dnd5e::api::v1alpha1::UpdateCharacterRequest)},
        {210, sizeof(::dnd5e::api::v1alpha1::UpdateCharacterResponse)},
        {215, sizeof(::dnd5e::api::v1alpha1::DeleteCharacterRequest)},
        {220, sizeof(::dnd5e::api::v1alpha1::DeleteCharacterResponse)},
        {225, sizeof(::dnd5e::api::v1alpha1::CharacterDraftData)},
        {252, sizeof(::dnd5e::api::v1alpha1::CreationProgress)},
        {273, sizeof(::dnd5e::api::v1alpha1::DraftMetadata)},
        {284, sizeof(::dnd5e::api::v1alpha1::CharacterDraft)},
        {321, sizeof(::dnd5e::api::v1alpha1::CreateDraftRequest)},
        {330, sizeof(::dnd5e::api::v1alpha1::CreateDraftResponse)},
        {335, sizeof(::dnd5e::api::v1alpha1::GetDraftRequest)},
        {340, sizeof(::dnd5e::api::v1alpha1::GetDraftResponse)},
        {345, sizeof(::dnd5e::api::v1alpha1::UpdateDraftRequest)},
        {354, sizeof(::dnd5e::api::v1alpha1::UpdateDraftResponse)},
        {361, sizeof(::dnd5e::api::v1alpha1::UpdateNameRequest)},
        {368, sizeof(::dnd5e::api::v1alpha1::UpdateRaceRequest)},
        {379, sizeof(::dnd5e::api::v1alpha1::UpdateClassRequest)},
        {390, sizeof(::dnd5e::api::v1alpha1::UpdateBackgroundRequest)},
        {399, sizeof(::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest)},
        {410, sizeof(::dnd5e::api::v1alpha1::UpdateSkillsRequest)},
        {417, sizeof(::dnd5e::api::v1alpha1::UpdateNameResponse)},
        {424, sizeof(::dnd5e::api::v1alpha1::UpdateRaceResponse)},
        {431, sizeof(::dnd5e::api::v1alpha1::UpdateClassResponse)},
        {438, sizeof(::dnd5e::api::v1alpha1::UpdateBackgroundResponse)},
        {445, sizeof(::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse)},
        {452, sizeof(::dnd5e::api::v1alpha1::UpdateSkillsResponse)},
        {459, sizeof(::dnd5e::api::v1alpha1::ListDraftsRequest)},
        {470, sizeof(::dnd5e::api::v1alpha1::ListDraftsResponse)},
        {477, sizeof(::dnd5e::api::v1alpha1::ValidateDraftRequest)},
        {482, sizeof(::dnd5e::api::v1alpha1::ValidateDraftResponse)},
        {497, sizeof(::dnd5e::api::v1alpha1::GetDraftPreviewRequest)},
        {502, sizeof(::dnd5e::api::v1alpha1::GetDraftPreviewResponse)},
        {513, sizeof(::dnd5e::api::v1alpha1::FinalizeDraftRequest)},
        {518, sizeof(::dnd5e::api::v1alpha1::FinalizeDraftResponse)},
        {527, sizeof(::dnd5e::api::v1alpha1::DeleteDraftRequest)},
        {532, sizeof(::dnd5e::api::v1alpha1::DeleteDraftResponse)},
        {537, sizeof(::dnd5e::api::v1alpha1::RaceInfo_AbilityBonusesEntry_DoNotUse)},
        {544, sizeof(::dnd5e::api::v1alpha1::RaceInfo)},
        {577, sizeof(::dnd5e::api::v1alpha1::SubraceInfo_AbilityBonusesEntry_DoNotUse)},
        {584, sizeof(::dnd5e::api::v1alpha1::SubraceInfo)},
        {603, sizeof(::dnd5e::api::v1alpha1::RacialTrait)},
        {614, sizeof(::dnd5e::api::v1alpha1::Choice)},
        {631, sizeof(::dnd5e::api::v1alpha1::ExplicitOptions)},
        {633, sizeof(::dnd5e::api::v1alpha1::CategoryReference)},
        {640, sizeof(::dnd5e::api::v1alpha1::ChoiceOption)},
        {647, sizeof(::dnd5e::api::v1alpha1::ItemReference)},
        {666, sizeof(::dnd5e::api::v1alpha1::CountedItemReference)},
        {687, sizeof(::dnd5e::api::v1alpha1::ItemBundle)},
        {689, sizeof(::dnd5e::api::v1alpha1::BundleItem)},
        {694, sizeof(::dnd5e::api::v1alpha1::NestedChoice)},
        {699, sizeof(::dnd5e::api::v1alpha1::ClassInfo)},
        {738, sizeof(::dnd5e::api::v1alpha1::SubclassInfo)},
        {765, sizeof(::dnd5e::api::v1alpha1::SpellcastingInfo)},
        {780, sizeof(::dnd5e::api::v1alpha1::BackgroundInfo)},
        {817, sizeof(::dnd5e::api::v1alpha1::FeatureInfo)},
        {836, sizeof(::dnd5e::api::v1alpha1::SpellSelectionInfo)},
        {849, sizeof(::dnd5e::api::v1alpha1::ListRacesRequest)},
        {858, sizeof(::dnd5e::api::v1alpha1::ListRacesResponse)},
        {867, sizeof(::dnd5e::api::v1alpha1::ListClassesRequest)},
        {878, sizeof(::dnd5e::api::v1alpha1::ListClassesResponse)},
        {887, sizeof(::dnd5e::api::v1alpha1::ListBackgroundsRequest)},
        {894, sizeof(::dnd5e::api::v1alpha1::ListBackgroundsResponse)},
        {903, sizeof(::dnd5e::api::v1alpha1::GetRaceDetailsRequest)},
        {908, sizeof(::dnd5e::api::v1alpha1::GetRaceDetailsResponse)},
        {913, sizeof(::dnd5e::api::v1alpha1::GetClassDetailsRequest)},
        {918, sizeof(::dnd5e::api::v1alpha1::GetClassDetailsResponse)},
        {923, sizeof(::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest)},
        {928, sizeof(::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse)},
        {933, sizeof(::dnd5e::api::v1alpha1::GetFeatureRequest)},
        {938, sizeof(::dnd5e::api::v1alpha1::GetFeatureResponse)},
        {943, sizeof(::dnd5e::api::v1alpha1::RollAbilityScoresRequest)},
        {948, sizeof(::dnd5e::api::v1alpha1::AbilityScoreRoll)},
        {961, sizeof(::dnd5e::api::v1alpha1::RollAbilityScoresResponse)},
        {968, sizeof(::dnd5e::api::v1alpha1::GetRequirementsRequest)},
        {977, sizeof(::dnd5e::api::v1alpha1::GetRequirementsResponse)},
        {982, sizeof(::dnd5e::api::v1alpha1::SubmitChoicesRequest)},
        {989, sizeof(::dnd5e::api::v1alpha1::SubmitChoicesResponse)},
        {998, sizeof(::dnd5e::api::v1alpha1::RollAssignments)},
        {1013, sizeof(::dnd5e::api::v1alpha1::Cost)},
        {1020, sizeof(::dnd5e::api::v1alpha1::Weight)},
        {1027, sizeof(::dnd5e::api::v1alpha1::Equipment)},
        {1050, sizeof(::dnd5e::api::v1alpha1::WeaponData)},
        {1067, sizeof(::dnd5e::api::v1alpha1::ArmorData)},
        {1084, sizeof(::dnd5e::api::v1alpha1::GearData)},
        {1091, sizeof(::dnd5e::api::v1alpha1::EquipmentSlots)},
        {1116, sizeof(::dnd5e::api::v1alpha1::InventoryItem)},
        {1129, sizeof(::dnd5e::api::v1alpha1::EncumbranceInfo)},
        {1140, sizeof(::dnd5e::api::v1alpha1::ChoiceData)},
        {1179, sizeof(::dnd5e::api::v1alpha1::SkillList)},
        {1181, sizeof(::dnd5e::api::v1alpha1::LanguageList)},
        {1183, sizeof(::dnd5e::api::v1alpha1::EquipmentList)},
        {1185, sizeof(::dnd5e::api::v1alpha1::SpellList)},
        {1187, sizeof(::dnd5e::api::v1alpha1::CantripList)},
        {1189, sizeof(::dnd5e::api::v1alpha1::ExpertiseList)},
        {1191, sizeof(::dnd5e::api::v1alpha1::TraitList)},
        {1193, sizeof(::dnd5e::api::v1alpha1::ToolProficiencyList)},
        {1195, sizeof(::dnd5e::api::v1alpha1::RaceChoice)},
        {1202, sizeof(::dnd5e::api::v1alpha1::ClassChoice)},
        {1207, sizeof(::dnd5e::api::v1alpha1::EquipmentChoice)},
        {1216, sizeof(::dnd5e::api::v1alpha1::EquipmentOption)},
        {1225, sizeof(::dnd5e::api::v1alpha1::EquipmentSelection)},
        {1244, sizeof(::dnd5e::api::v1alpha1::ChoiceSubmission)},
        {1271, sizeof(::dnd5e::api::v1alpha1::SkillSelection)},
        {1273, sizeof(::dnd5e::api::v1alpha1::LanguageSelection)},
        {1275, sizeof(::dnd5e::api::v1alpha1::FightingStyleSelection)},
        {1280, sizeof(::dnd5e::api::v1alpha1::ToolSelection)},
        {1282, sizeof(::dnd5e::api::v1alpha1::WeaponProficiencySelection)},
        {1285, sizeof(::dnd5e::api::v1alpha1::ArmorProficiencySelection)},
        {1288, sizeof(::dnd5e::api::v1alpha1::CharacterRequirements)},
        {1297, sizeof(::dnd5e::api::v1alpha1::RequiredChoice)},
        {1322, sizeof(::dnd5e::api::v1alpha1::SkillOptions)},
        {1324, sizeof(::dnd5e::api::v1alpha1::LanguageOptions)},
        {1326, sizeof(::dnd5e::api::v1alpha1::FightingStyleOptions)},
        {1328, sizeof(::dnd5e::api::v1alpha1::ToolOptions)},
        {1330, sizeof(::dnd5e::api::v1alpha1::SpellDamage)},
        {1337, sizeof(::dnd5e::api::v1alpha1::DamageAtSlotLevel)},
        {1344, sizeof(::dnd5e::api::v1alpha1::AreaOfEffect)},
        {1351, sizeof(::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest)},
        {1360, sizeof(::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse)},
        {1369, sizeof(::dnd5e::api::v1alpha1::ListSpellsByLevelRequest)},
        {1380, sizeof(::dnd5e::api::v1alpha1::ListSpellsByLevelResponse)},
        {1389, sizeof(::dnd5e::api::v1alpha1::GetCharacterInventoryRequest)},
        {1394, sizeof(::dnd5e::api::v1alpha1::GetCharacterInventoryResponse)},
        {1407, sizeof(::dnd5e::api::v1alpha1::EquipItemRequest)},
        {1416, sizeof(::dnd5e::api::v1alpha1::EquipItemResponse)},
        {1423, sizeof(::dnd5e::api::v1alpha1::UnequipItemRequest)},
        {1430, sizeof(::dnd5e::api::v1alpha1::UnequipItemResponse)},
        {1435, sizeof(::dnd5e::api::v1alpha1::AddToInventoryRequest)},
        {1442, sizeof(::dnd5e::api::v1alpha1::InventoryAddition)},
        {1449, sizeof(::dnd5e::api::v1alpha1::AddToInventoryResponse)},
        {1456, sizeof(::dnd5e::api::v1alpha1::RemoveFromInventoryRequest)},
        {1469, sizeof(::dnd5e::api::v1alpha1::RemoveFromInventoryResponse)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::dnd5e::api::v1alpha1::_CharacterFeature_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_ClassResource_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_SpellSlots_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_AbilityScores_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_Character_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_AbilityModifiers_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_CombatStats_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_ProficiencyGrants_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_Proficiencies_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_CharacterMetadata_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_GetCharacterRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_GetCharacterResponse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_ListCharactersRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_ListCharactersResponse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_UpdateCharacterRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_UpdateCharacterResponse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_DeleteCharacterRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_DeleteCharacterResponse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_CharacterDraftData_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_CreationProgress_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_DraftMetadata_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_CharacterDraft_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_CreateDraftRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_CreateDraftResponse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_GetDraftRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_GetDraftResponse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_UpdateDraftRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_UpdateDraftResponse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_UpdateNameRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_UpdateRaceRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_UpdateClassRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_UpdateBackgroundRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_UpdateAbilityScoresRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_UpdateSkillsRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_UpdateNameResponse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_UpdateRaceResponse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_UpdateClassResponse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_UpdateBackgroundResponse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_UpdateAbilityScoresResponse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_UpdateSkillsResponse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_ListDraftsRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_ListDraftsResponse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_ValidateDraftRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_ValidateDraftResponse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_GetDraftPreviewRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_GetDraftPreviewResponse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_FinalizeDraftRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_FinalizeDraftResponse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_DeleteDraftRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_DeleteDraftResponse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_RaceInfo_AbilityBonusesEntry_DoNotUse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_RaceInfo_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_SubraceInfo_AbilityBonusesEntry_DoNotUse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_SubraceInfo_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_RacialTrait_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_Choice_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_ExplicitOptions_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_CategoryReference_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_ChoiceOption_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_ItemReference_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_CountedItemReference_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_ItemBundle_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_BundleItem_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_NestedChoice_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_ClassInfo_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_SubclassInfo_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_SpellcastingInfo_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_BackgroundInfo_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_FeatureInfo_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_SpellSelectionInfo_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_ListRacesRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_ListRacesResponse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_ListClassesRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_ListClassesResponse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_ListBackgroundsRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_ListBackgroundsResponse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_GetRaceDetailsRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_GetRaceDetailsResponse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_GetClassDetailsRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_GetClassDetailsResponse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_GetBackgroundDetailsRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_GetBackgroundDetailsResponse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_GetFeatureRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_GetFeatureResponse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_RollAbilityScoresRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_AbilityScoreRoll_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_RollAbilityScoresResponse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_GetRequirementsRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_GetRequirementsResponse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_SubmitChoicesRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_SubmitChoicesResponse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_RollAssignments_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_Cost_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_Weight_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_Equipment_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_WeaponData_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_ArmorData_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_GearData_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_EquipmentSlots_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_InventoryItem_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_EncumbranceInfo_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_ChoiceData_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_SkillList_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_LanguageList_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_EquipmentList_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_SpellList_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_CantripList_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_ExpertiseList_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_TraitList_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_ToolProficiencyList_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_RaceChoice_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_ClassChoice_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_EquipmentChoice_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_EquipmentOption_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_EquipmentSelection_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_ChoiceSubmission_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_SkillSelection_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_LanguageSelection_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_FightingStyleSelection_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_ToolSelection_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_WeaponProficiencySelection_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_ArmorProficiencySelection_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_CharacterRequirements_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_RequiredChoice_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_SkillOptions_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_LanguageOptions_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_FightingStyleOptions_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_ToolOptions_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_SpellDamage_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_DamageAtSlotLevel_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_AreaOfEffect_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_ListEquipmentByTypeRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_ListEquipmentByTypeResponse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_ListSpellsByLevelRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_ListSpellsByLevelResponse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_GetCharacterInventoryRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_GetCharacterInventoryResponse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_EquipItemRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_EquipItemResponse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_UnequipItemRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_UnequipItemResponse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_AddToInventoryRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_InventoryAddition_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_AddToInventoryResponse_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_RemoveFromInventoryRequest_default_instance_._instance,
    &::dnd5e::api::v1alpha1::_RemoveFromInventoryResponse_default_instance_._instance,
};
const char descriptor_table_protodef_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\"dnd5e/api/v1alpha1/character.proto\022\022dn"
    "d5e.api.v1alpha1\032\037dnd5e/api/v1alpha1/com"
    "mon.proto\032\036dnd5e/api/v1alpha1/enums.prot"
    "o\"\206\001\n\020CharacterFeature\022\016\n\002id\030\001 \001(\tR\002id\022\022"
    "\n\004name\030\002 \001(\tR\004name\022 \n\013description\030\003 \001(\tR"
    "\013description\022\026\n\006source\030\004 \001(\tR\006source\022\024\n\005"
    "level\030\005 \001(\005R\005level\"\320\001\n\rClassResource\0229\n\004"
    "type\030\001 \001(\0162%.dnd5e.api.v1alpha1.ClassRes"
    "ourceTypeR\004type\022\022\n\004name\030\002 \001(\tR\004name\022\030\n\007c"
    "urrent\030\003 \001(\005R\007current\022\030\n\007maximum\030\004 \001(\005R\007"
    "maximum\022<\n\010recharge\030\005 \001(\0162 .dnd5e.api.v1"
    "alpha1.RechargeTypeR\010recharge\"\355\001\n\nSpellS"
    "lots\022\027\n\007level_1\030\001 \001(\005R\006level1\022\027\n\007level_2"
    "\030\002 \001(\005R\006level2\022\027\n\007level_3\030\003 \001(\005R\006level3\022"
    "\027\n\007level_4\030\004 \001(\005R\006level4\022\027\n\007level_5\030\005 \001("
    "\005R\006level5\022\027\n\007level_6\030\006 \001(\005R\006level6\022\027\n\007le"
    "vel_7\030\007 \001(\005R\006level7\022\027\n\007level_8\030\010 \001(\005R\006le"
    "vel8\022\027\n\007level_9\030\t \001(\005R\006level9\"\305\001\n\rAbilit"
    "yScores\022\032\n\010strength\030\001 \001(\005R\010strength\022\034\n\td"
    "exterity\030\002 \001(\005R\tdexterity\022\"\n\014constitutio"
    "n\030\003 \001(\005R\014constitution\022\"\n\014intelligence\030\004 "
    "\001(\005R\014intelligence\022\026\n\006wisdom\030\005 \001(\005R\006wisdo"
    "m\022\032\n\010charisma\030\006 \001(\005R\010charisma\"\275\014\n\tCharac"
    "ter\022\016\n\002id\030\001 \001(\tR\002id\022\022\n\004name\030\002 \001(\tR\004name\022"
    "\024\n\005level\030\003 \001(\005R\005level\022+\n\021experience_poin"
    "ts\030\004 \001(\005R\020experiencePoints\022,\n\004race\030\005 \001(\016"
    "2\030.dnd5e.api.v1alpha1.RaceR\004race\0225\n\007subr"
    "ace\030\006 \001(\0162\033.dnd5e.api.v1alpha1.SubraceR\007"
    "subrace\022/\n\005class\030\007 \001(\0162\031.dnd5e.api.v1alp"
    "ha1.ClassR\005class\022>\n\nbackground\030\010 \001(\0162\036.d"
    "nd5e.api.v1alpha1.BackgroundR\nbackground"
    "\022;\n\talignment\030\t \001(\0162\035.dnd5e.api.v1alpha1"
    ".AlignmentR\talignment\022H\n\016ability_scores\030"
    "\n \001(\0132!.dnd5e.api.v1alpha1.AbilityScores"
    "R\rabilityScores\022Q\n\021ability_modifiers\030\013 \001"
    "(\0132$.dnd5e.api.v1alpha1.AbilityModifiers"
    "R\020abilityModifiers\022B\n\014combat_stats\030\014 \001(\013"
    "2\037.dnd5e.api.v1alpha1.CombatStatsR\013comba"
    "tStats\022G\n\rproficiencies\030\r \001(\0132!.dnd5e.ap"
    "i.v1alpha1.ProficienciesR\rproficiencies\022"
    ":\n\tlanguages\030\016 \003(\0162\034.dnd5e.api.v1alpha1."
    "LanguageR\tlanguages\022,\n\022current_hit_point"
    "s\030\017 \001(\005R\020currentHitPoints\0220\n\024temporary_h"
    "it_points\030\020 \001(\005R\022temporaryHitPoints\022\035\n\ns"
    "ession_id\030\021 \001(\tR\tsessionId\022A\n\010metadata\030\022"
    " \001(\0132%.dnd5e.api.v1alpha1.CharacterMetad"
    "ataR\010metadata\022K\n\017equipment_slots\030\023 \001(\0132\""
    ".dnd5e.api.v1alpha1.EquipmentSlotsR\016equi"
    "pmentSlots\022\?\n\tinventory\030\024 \003(\0132!.dnd5e.ap"
    "i.v1alpha1.InventoryItemR\tinventory\022E\n\013e"
    "ncumbrance\030\025 \001(\0132#.dnd5e.api.v1alpha1.En"
    "cumbranceInfoR\013encumbrance\022@\n\010features\030\026"
    " \003(\0132$.dnd5e.api.v1alpha1.CharacterFeatu"
    "reR\010features\022J\n\017fighting_styles\030\027 \003(\0162!."
    "dnd5e.api.v1alpha1.FightingStyleR\016fighti"
    "ngStyles\022I\n\rracial_traits\030\030 \003(\0132$.dnd5e."
    "api.v1alpha1.CharacterFeatureR\014racialTra"
    "its\022S\n\022background_feature\030\031 \001(\0132$.dnd5e."
    "api.v1alpha1.CharacterFeatureR\021backgroun"
    "dFeature\022J\n\017class_resources\030\032 \003(\0132!.dnd5"
    "e.api.v1alpha1.ClassResourceR\016classResou"
    "rces\022\?\n\013spell_slots\030\033 \001(\0132\036.dnd5e.api.v1"
    "alpha1.SpellSlotsR\nspellSlots\"\310\001\n\020Abilit"
    "yModifiers\022\032\n\010strength\030\001 \001(\005R\010strength\022\034"
    "\n\tdexterity\030\002 \001(\005R\tdexterity\022\"\n\014constitu"
    "tion\030\003 \001(\005R\014constitution\022\"\n\014intelligence"
    "\030\004 \001(\005R\014intelligence\022\026\n\006wisdom\030\005 \001(\005R\006wi"
    "sdom\022\032\n\010charisma\030\006 \001(\005R\010charisma\"\330\001\n\013Com"
    "batStats\022*\n\021hit_point_maximum\030\001 \001(\005R\017hit"
    "PointMaximum\022\037\n\013armor_class\030\002 \001(\005R\narmor"
    "Class\022\036\n\ninitiative\030\003 \001(\005R\ninitiative\022\024\n"
    "\005speed\030\004 \001(\005R\005speed\022+\n\021proficiency_bonus"
    "\030\005 \001(\005R\020proficiencyBonus\022\031\n\010hit_dice\030\006 \001"
    "(\tR\007hitDice\"\231\002\n\021ProficiencyGrants\022/\n\005arm"
    "or\030\001 \003(\0162\031.dnd5e.api.v1alpha1.ArmorR\005arm"
    "or\0224\n\007weapons\030\002 \003(\0162\032.dnd5e.api.v1alpha1"
    ".WeaponR\007weapons\022.\n\005tools\030\003 \003(\0162\030.dnd5e."
    "api.v1alpha1.ToolR\005tools\0221\n\006skills\030\004 \003(\016"
    "2\031.dnd5e.api.v1alpha1.SkillR\006skills\022:\n\tl"
    "anguages\030\005 \003(\0162\034.dnd5e.api.v1alpha1.Lang"
    "uageR\tlanguages\"\226\003\n\rProficiencies\0221\n\006ski"
    "lls\030\001 \003(\0162\031.dnd5e.api.v1alpha1.SkillR\006sk"
    "ills\022@\n\rsaving_throws\030\002 \003(\0162\033.dnd5e.api."
    "v1alpha1.AbilityR\014savingThrows\022/\n\005armor\030"
    "\003 \003(\0162\031.dnd5e.api.v1alpha1.ArmorR\005armor\022"
    "4\n\007weapons\030\004 \003(\0162\032.dnd5e.api.v1alpha1.We"
    "aponR\007weapons\022.\n\005tools\030\005 \003(\0162\030.dnd5e.api"
    ".v1alpha1.ToolR\005tools\022\'\n\rarmor_strings\030\006"
    " \003(\tB\002\030\001R\014armorStrings\022)\n\016weapon_strings"
    "\030\007 \003(\tB\002\030\001R\rweaponStrings\022%\n\014tool_string"
    "s\030\010 \003(\tB\002\030\001R\013toolStrings\"n\n\021CharacterMet"
    "adata\022\035\n\ncreated_at\030\001 \001(\003R\tcreatedAt\022\035\n\n"
    "updated_at\030\002 \001(\003R\tupdatedAt\022\033\n\tplayer_id"
    "\030\003 \001(\tR\010playerId\"8\n\023GetCharacterRequest\022"
    "!\n\014character_id\030\001 \001(\tR\013characterId\"S\n\024Ge"
    "tCharacterResponse\022;\n\tcharacter\030\001 \001(\0132\035."
    "dnd5e.api.v1alpha1.CharacterR\tcharacter\""
    "\217\001\n\025ListCharactersRequest\022\033\n\tpage_size\030\001"
    " \001(\005R\010pageSize\022\035\n\npage_token\030\002 \001(\tR\tpage"
    "Token\022\035\n\nsession_id\030\003 \001(\tR\tsessionId\022\033\n\t"
    "player_id\030\004 \001(\tR\010playerId\"\236\001\n\026ListCharac"
    "tersResponse\022=\n\ncharacters\030\001 \003(\0132\035.dnd5e"
    ".api.v1alpha1.CharacterR\ncharacters\022&\n\017n"
    "ext_page_token\030\002 \001(\tR\rnextPageToken\022\035\n\nt"
    "otal_size\030\003 \001(\005R\ttotalSize\"v\n\026UpdateChar"
    "acterRequest\022;\n\tcharacter\030\001 \001(\0132\035.dnd5e."
    "api.v1alpha1.CharacterR\tcharacter\022\037\n\013upd"
    "ate_mask\030\002 \003(\tR\nupdateMask\"V\n\027UpdateChar"
    "acterResponse\022;\n\tcharacter\030\001 \001(\0132\035.dnd5e"
    ".api.v1alpha1.CharacterR\tcharacter\";\n\026De"
    "leteCharacterRequest\022!\n\014character_id\030\001 \001"
    "(\tR\013characterId\"3\n\027DeleteCharacterRespon"
    "se\022\030\n\007message\030\001 \001(\tR\007message\"\323\004\n\022Charact"
    "erDraftData\022\016\n\002id\030\001 \001(\tR\002id\022\033\n\tplayer_id"
    "\030\002 \001(\tR\010playerId\022\035\n\nsession_id\030\003 \001(\tR\tse"
    "ssionId\022\022\n\004name\030\004 \001(\tR\004name\022,\n\004race\030\005 \001("
    "\0162\030.dnd5e.api.v1alpha1.RaceR\004race\0225\n\007sub"
    "race\030\006 \001(\0162\033.dnd5e.api.v1alpha1.SubraceR"
    "\007subrace\022/\n\005class\030\007 \001(\0162\031.dnd5e.api.v1al"
    "pha1.ClassR\005class\0228\n\010subclass\030\010 \001(\0162\034.dn"
    "d5e.api.v1alpha1.SubclassR\010subclass\022>\n\nb"
    "ackground\030\t \001(\0162\036.dnd5e.api.v1alpha1.Bac"
    "kgroundR\nbackground\022Q\n\023base_ability_scor"
    "es\030\n \001(\0132!.dnd5e.api.v1alpha1.AbilitySco"
    "resR\021baseAbilityScores\0228\n\007choices\030\013 \003(\0132"
    "\036.dnd5e.api.v1alpha1.ChoiceDataR\007choices"
    "\022@\n\010progress\030\014 \001(\0132$.dnd5e.api.v1alpha1."
    "CreationProgressR\010progress\"\204\003\n\020CreationP"
    "rogress\022\031\n\010has_name\030\001 \001(\010R\007hasName\022\031\n\010ha"
    "s_race\030\002 \001(\010R\007hasRace\022\033\n\thas_class\030\003 \001(\010"
    "R\010hasClass\022%\n\016has_background\030\004 \001(\010R\rhasB"
    "ackground\022,\n\022has_ability_scores\030\005 \001(\010R\020h"
    "asAbilityScores\022!\n\nhas_skills\030\006 \001(\010B\002\030\001R"
    "\thasSkills\022\'\n\rhas_languages\030\007 \001(\010B\002\030\001R\014h"
    "asLanguages\0223\n\025completion_percentage\030\010 \001"
    "(\005R\024completionPercentage\022G\n\014current_step"
    "\030\t \001(\0162 .dnd5e.api.v1alpha1.CreationStep"
    "B\002\030\001R\013currentStep\"\251\001\n\rDraftMetadata\022\035\n\nc"
    "reated_at\030\001 \001(\003R\tcreatedAt\022\035\n\nupdated_at"
    "\030\002 \001(\003R\tupdatedAt\022,\n\022discord_channel_id\030"
    "\003 \001(\tR\020discordChannelId\022,\n\022discord_messa"
    "ge_id\030\004 \001(\tR\020discordMessageId\"\237\007\n\016Charac"
    "terDraft\022\016\n\002id\030\001 \001(\tR\002id\022\033\n\tplayer_id\030\002 "
    "\001(\tR\010playerId\022\035\n\nsession_id\030\003 \001(\tR\tsessi"
    "onId\022\022\n\004name\030\004 \001(\tR\004name\022,\n\004race\030\005 \001(\0162\030"
    ".dnd5e.api.v1alpha1.RaceR\004race\0225\n\007subrac"
    "e\030\006 \001(\0162\033.dnd5e.api.v1alpha1.SubraceR\007su"
    "brace\022/\n\005class\030\007 \001(\0162\031.dnd5e.api.v1alpha"
    "1.ClassR\005class\0228\n\010subclass\030\010 \001(\0162\034.dnd5e"
    ".api.v1alpha1.SubclassR\010subclass\022>\n\nback"
    "ground\030\t \001(\0162\036.dnd5e.api.v1alpha1.Backgr"
    "oundR\nbackground\022Q\n\023base_ability_scores\030"
    "\n \001(\0132!.dnd5e.api.v1alpha1.AbilityScores"
    "R\021baseAbilityScores\0228\n\007choices\030\013 \003(\0132\036.d"
    "nd5e.api.v1alpha1.ChoiceDataR\007choices\022@\n"
    "\010progress\030\014 \001(\0132$.dnd5e.api.v1alpha1.Cre"
    "ationProgressR\010progress\022D\n\nvalidation\030\r "
    "\001(\0132$.dnd5e.api.v1alpha1.ValidationResul"
    "tR\nvalidation\0229\n\trace_info\030\016 \001(\0132\034.dnd5e"
    ".api.v1alpha1.RaceInfoR\010raceInfo\022B\n\014subr"
    "ace_info\030\017 \001(\0132\037.dnd5e.api.v1alpha1.Subr"
    "aceInfoR\013subraceInfo\022<\n\nclass_info\030\020 \001(\013"
    "2\035.dnd5e.api.v1alpha1.ClassInfoR\tclassIn"
    "fo\022K\n\017background_info\030\021 \001(\0132\".dnd5e.api."
    "v1alpha1.BackgroundInfoR\016backgroundInfo\""
    "\233\001\n\022CreateDraftRequest\022\033\n\tplayer_id\030\001 \001("
    "\tR\010playerId\022\035\n\nsession_id\030\002 \001(\tR\tsession"
    "Id\022I\n\014initial_data\030\003 \001(\0132&.dnd5e.api.v1a"
    "lpha1.CharacterDraftDataR\013initialData\"O\n"
    "\023CreateDraftResponse\0228\n\005draft\030\001 \001(\0132\".dn"
    "d5e.api.v1alpha1.CharacterDraftR\005draft\","
    "\n\017GetDraftRequest\022\031\n\010draft_id\030\001 \001(\tR\007dra"
    "ftId\"L\n\020GetDraftResponse\0228\n\005draft\030\001 \001(\0132"
    "\".dnd5e.api.v1alpha1.CharacterDraftR\005dra"
    "ft\"\222\001\n\022UpdateDraftRequest\022\031\n\010draft_id\030\001 "
    "\001(\tR\007draftId\022@\n\007updates\030\002 \001(\0132&.dnd5e.ap"
    "i.v1alpha1.CharacterDraftDataR\007updates\022\037"
    "\n\013update_mask\030\003 \003(\tR\nupdateMask\"\226\001\n\023Upda"
    "teDraftResponse\0228\n\005draft\030\001 \001(\0132\".dnd5e.a"
    "pi.v1alpha1.CharacterDraftR\005draft\022E\n\010war"
    "nings\030\002 \003(\0132%.dnd5e.api.v1alpha1.Validat"
    "ionWarningB\002\030\001R\010warnings\"B\n\021UpdateNameRe"
    "quest\022\031\n\010draft_id\030\001 \001(\tR\007draftId\022\022\n\004name"
    "\030\002 \001(\tR\004name\"\326\001\n\021UpdateRaceRequest\022\031\n\010dr"
    "aft_id\030\001 \001(\tR\007draftId\022,\n\004race\030\002 \001(\0162\030.dn"
    "d5e.api.v1alpha1.RaceR\004race\0225\n\007subrace\030\003"
    " \001(\0162\033.dnd5e.api.v1alpha1.SubraceR\007subra"
    "ce\022A\n\014race_choices\030\004 \003(\0132\036.dnd5e.api.v1a"
    "lpha1.ChoiceDataR\013raceChoices\"\337\001\n\022Update"
    "ClassRequest\022\031\n\010draft_id\030\001 \001(\tR\007draftId\022"
    "/\n\005class\030\002 \001(\0162\031.dnd5e.api.v1alpha1.Clas"
    "sR\005class\022C\n\rclass_choices\030\003 \003(\0132\036.dnd5e."
    "api.v1alpha1.ChoiceDataR\014classChoices\0228\n"
    "\010subclass\030\004 \001(\0162\034.dnd5e.api.v1alpha1.Sub"
    "classR\010subclass\"\303\001\n\027UpdateBackgroundRequ"
    "est\022\031\n\010draft_id\030\001 \001(\tR\007draftId\022>\n\nbackgr"
    "ound\030\002 \001(\0162\036.dnd5e.api.v1alpha1.Backgrou"
    "ndR\nbackground\022M\n\022background_choices\030\003 \003"
    "(\0132\036.dnd5e.api.v1alpha1.ChoiceDataR\021back"
    "groundChoices\"\345\001\n\032UpdateAbilityScoresReq"
    "uest\022\031\n\010draft_id\030\001 \001(\tR\007draftId\022J\n\016abili"
    "ty_scores\030\002 \001(\0132!.dnd5e.api.v1alpha1.Abi"
    "lityScoresH\000R\rabilityScores\022P\n\020roll_assi"
    "gnments\030\003 \001(\0132#.dnd5e.api.v1alpha1.RollA"
    "ssignmentsH\000R\017rollAssignmentsB\016\n\014scores_"
    "input\"c\n\023UpdateSkillsRequest\022\031\n\010draft_id"
    "\030\001 \001(\tR\007draftId\0221\n\006skills\030\002 \003(\0162\031.dnd5e."
    "api.v1alpha1.SkillR\006skills\"\225\001\n\022UpdateNam"
    "eResponse\0228\n\005draft\030\001 \001(\0132\".dnd5e.api.v1a"
    "lpha1.CharacterDraftR\005draft\022E\n\010warnings\030"
    "\002 \003(\0132%.dnd5e.api.v1alpha1.ValidationWar"
    "ningB\002\030\001R\010warnings\"\225\001\n\022UpdateRaceRespons"
    "e\0228\n\005draft\030\001 \001(\0132\".dnd5e.api.v1alpha1.Ch"
    "aracterDraftR\005draft\022E\n\010warnings\030\002 \003(\0132%."
    "dnd5e.api.v1alpha1.ValidationWarningB\002\030\001"
    "R\010warnings\"\226\001\n\023UpdateClassResponse\0228\n\005dr"
    "aft\030\001 \001(\0132\".dnd5e.api.v1alpha1.Character"
    "DraftR\005draft\022E\n\010warnings\030\002 \003(\0132%.dnd5e.a"
    "pi.v1alpha1.ValidationWarningB\002\030\001R\010warni"
    "ngs\"\233\001\n\030UpdateBackgroundResponse\0228\n\005draf"
    "t\030\001 \001(\0132\".dnd5e.api.v1alpha1.CharacterDr"
    "aftR\005draft\022E\n\010warnings\030\002 \003(\0132%.dnd5e.api"
    ".v1alpha1.ValidationWarningB\002\030\001R\010warning"
    "s\"\236\001\n\033UpdateAbilityScoresResponse\0228\n\005dra"
    "ft\030\001 \001(\0132\".dnd5e.api.v1alpha1.CharacterD"
    "raftR\005draft\022E\n\010warnings\030\002 \003(\0132%.dnd5e.ap"
    "i.v1alpha1.ValidationWarningB\002\030\001R\010warnin"
    "gs\"\227\001\n\024UpdateSkillsResponse\0228\n\005draft\030\001 \001"
    "(\0132\".dnd5e.api.v1alpha1.CharacterDraftR\005"
    "draft\022E\n\010warnings\030\002 \003(\0132%.dnd5e.api.v1al"
    "pha1.ValidationWarningB\002\030\001R\010warnings\"\213\001\n"
    "\021ListDraftsRequest\022\033\n\tplayer_id\030\001 \001(\tR\010p"
    "layerId\022\035\n\nsession_id\030\002 \001(\tR\tsessionId\022\033"
    "\n\tpage_size\030\003 \001(\005R\010pageSize\022\035\n\npage_toke"
    "n\030\004 \001(\tR\tpageToken\"x\n\022ListDraftsResponse"
    "\022:\n\006drafts\030\001 \003(\0132\".dnd5e.api.v1alpha1.Ch"
    "aracterDraftR\006drafts\022&\n\017next_page_token\030"
    "\002 \001(\tR\rnextPageToken\"1\n\024ValidateDraftReq"
    "uest\022\031\n\010draft_id\030\001 \001(\tR\007draftId\"\350\002\n\025Vali"
    "dateDraftResponse\022D\n\nvalidation\030\001 \001(\0132$."
    "dnd5e.api.v1alpha1.ValidationResultR\nval"
    "idation\022\037\n\013is_complete\030\002 \001(\010R\nisComplete"
    "\022\031\n\010is_valid\030\003 \001(\010R\007isValid\022E\n\rmissing_s"
    "teps\030\004 \003(\0162 .dnd5e.api.v1alpha1.Creation"
    "StepR\014missingSteps\022\?\n\006errors\030\005 \003(\0132#.dnd"
    "5e.api.v1alpha1.ValidationErrorB\002\030\001R\006err"
    "ors\022E\n\010warnings\030\006 \003(\0132%.dnd5e.api.v1alph"
    "a1.ValidationWarningB\002\030\001R\010warnings\"3\n\026Ge"
    "tDraftPreviewRequest\022\031\n\010draft_id\030\001 \001(\tR\007"
    "draftId\"\224\002\n\027GetDraftPreviewResponse\0228\n\005d"
    "raft\030\001 \001(\0132\".dnd5e.api.v1alpha1.Characte"
    "rDraftR\005draft\0227\n\007preview\030\002 \001(\0132\035.dnd5e.a"
    "pi.v1alpha1.CharacterR\007preview\022E\n\010warnin"
    "gs\030\003 \003(\0132%.dnd5e.api.v1alpha1.Validation"
    "WarningB\002\030\001R\010warnings\022\?\n\006errors\030\004 \003(\0132#."
    "dnd5e.api.v1alpha1.ValidationErrorB\002\030\001R\006"
    "errors\"1\n\024FinalizeDraftRequest\022\031\n\010draft_"
    "id\030\001 \001(\tR\007draftId\"\312\001\n\025FinalizeDraftRespo"
    "nse\022;\n\tcharacter\030\001 \001(\0132\035.dnd5e.api.v1alp"
    "ha1.CharacterR\tcharacter\022#\n\rdraft_delete"
    "d\030\002 \001(\010R\014draftDeleted\022O\n\020final_validatio"
    "n\030\003 \001(\0132$.dnd5e.api.v1alpha1.ValidationR"
    "esultR\017finalValidation\"/\n\022DeleteDraftReq"
    "uest\022\031\n\010draft_id\030\001 \001(\tR\007draftId\"/\n\023Delet"
    "eDraftResponse\022\030\n\007message\030\001 \001(\tR\007message"
    "\"\322\006\n\010RaceInfo\0221\n\007race_id\030\001 \001(\0162\030.dnd5e.a"
    "pi.v1alpha1.RaceR\006raceId\022\022\n\004name\030\002 \001(\tR\004"
    "name\022 \n\013description\030\003 \001(\tR\013description\022\024"
    "\n\005speed\030\004 \001(\005R\005speed\022,\n\004size\030\005 \001(\0162\030.dnd"
    "5e.api.v1alpha1.SizeR\004size\022Y\n\017ability_bo"
    "nuses\030\006 \003(\01320.dnd5e.api.v1alpha1.RaceInf"
    "o.AbilityBonusesEntryR\016abilityBonuses\0227\n"
    "\006traits\030\007 \003(\0132\037.dnd5e.api.v1alpha1.Racia"
    "lTraitR\006traits\022;\n\010subraces\030\010 \003(\0132\037.dnd5e"
    ".api.v1alpha1.SubraceInfoR\010subraces\022T\n\022p"
    "roficiency_grants\030\t \001(\0132%.dnd5e.api.v1al"
    "pha1.ProficiencyGrantsR\021proficiencyGrant"
    "s\022:\n\tlanguages\030\n \003(\0162\034.dnd5e.api.v1alpha"
    "1.LanguageR\tlanguages\0224\n\007choices\030\013 \003(\0132\032"
    ".dnd5e.api.v1alpha1.ChoiceR\007choices\022+\n\017a"
    "ge_description\030\014 \001(\tB\002\030\001R\016ageDescription"
    "\0227\n\025alignment_description\030\r \001(\tB\002\030\001R\024ali"
    "gnmentDescription\022-\n\020size_description\030\016 "
    "\001(\tB\002\030\001R\017sizeDescription\022(\n\rproficiencie"
    "s\030\017 \003(\tB\002\030\001R\rproficiencies\032A\n\023AbilityBon"
    "usesEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001"
    "(\005R\005value:\0028\001\"\225\004\n\013SubraceInfo\022:\n\nsubrace"
    "_id\030\001 \001(\0162\033.dnd5e.api.v1alpha1.SubraceR\t"
    "subraceId\022\022\n\004name\030\002 \001(\tR\004name\022 \n\013descrip"
    "tion\030\003 \001(\tR\013description\022\\\n\017ability_bonus"
    "es\030\004 \003(\01323.dnd5e.api.v1alpha1.SubraceInf"
    "o.AbilityBonusesEntryR\016abilityBonuses\0227\n"
    "\006traits\030\005 \003(\0132\037.dnd5e.api.v1alpha1.Racia"
    "lTraitR\006traits\022:\n\tlanguages\030\006 \003(\0162\034.dnd5"
    "e.api.v1alpha1.LanguageR\tlanguages\022T\n\022pr"
    "oficiency_grants\030\007 \001(\0132%.dnd5e.api.v1alp"
    "ha1.ProficiencyGrantsR\021proficiencyGrants"
    "\022(\n\rproficiencies\030\010 \003(\tB\002\030\001R\rproficienci"
    "es\032A\n\023AbilityBonusesEntry\022\020\n\003key\030\001 \001(\tR\003"
    "key\022\024\n\005value\030\002 \001(\005R\005value:\0028\001\"z\n\013RacialT"
    "rait\022\022\n\004name\030\001 \001(\tR\004name\022 \n\013description\030"
    "\002 \001(\tR\013description\022\033\n\tis_choice\030\003 \001(\010R\010i"
    "sChoice\022\030\n\007options\030\004 \003(\tR\007options\"\332\002\n\006Ch"
    "oice\022\016\n\002id\030\001 \001(\tR\002id\022 \n\013description\030\002 \001("
    "\tR\013description\022!\n\014choose_count\030\003 \001(\005R\013ch"
    "ooseCount\022C\n\013choice_type\030\004 \001(\0162\".dnd5e.a"
    "pi.v1alpha1.ChoiceCategoryR\nchoiceType\022P"
    "\n\020explicit_options\030\005 \001(\0132#.dnd5e.api.v1a"
    "lpha1.ExplicitOptionsH\000R\017explicitOptions"
    "\022V\n\022category_reference\030\006 \001(\0132%.dnd5e.api"
    ".v1alpha1.CategoryReferenceH\000R\021categoryR"
    "eferenceB\014\n\noption_set\"M\n\017ExplicitOption"
    "s\022:\n\007options\030\001 \003(\0132 .dnd5e.api.v1alpha1."
    "ChoiceOptionR\007options\"U\n\021CategoryReferen"
    "ce\022\037\n\013category_id\030\001 \001(\tR\ncategoryId\022\037\n\013e"
    "xclude_ids\030\002 \003(\tR\nexcludeIds\"\250\002\n\014ChoiceO"
    "ption\0227\n\004item\030\001 \001(\0132!.dnd5e.api.v1alpha1"
    ".ItemReferenceH\000R\004item\022M\n\014counted_item\030\002"
    " \001(\0132(.dnd5e.api.v1alpha1.CountedItemRef"
    "erenceH\000R\013countedItem\0228\n\006bundle\030\003 \001(\0132\036."
    "dnd5e.api.v1alpha1.ItemBundleH\000R\006bundle\022"
    "G\n\rnested_choice\030\004 \001(\0132 .dnd5e.api.v1alp"
    "ha1.NestedChoiceH\000R\014nestedChoiceB\r\n\013opti"
    "on_type\"\334\002\n\rItemReference\0224\n\006weapon\030\001 \001("
    "\0162\032.dnd5e.api.v1alpha1.WeaponH\000R\006weapon\022"
    "1\n\005armor\030\002 \001(\0162\031.dnd5e.api.v1alpha1.Armo"
    "rH\000R\005armor\022.\n\004tool\030\003 \001(\0162\030.dnd5e.api.v1a"
    "lpha1.ToolH\000R\004tool\022.\n\004pack\030\004 \001(\0162\030.dnd5e"
    ".api.v1alpha1.PackH\000R\004pack\022@\n\nammunition"
    "\030\005 \001(\0162\036.dnd5e.api.v1alpha1.AmmunitionH\000"
    "R\nammunition\022$\n\rother_item_id\030\006 \001(\tH\000R\013o"
    "therItemId\022\022\n\004name\030\007 \001(\tR\004nameB\006\n\004item\"\377"
    "\002\n\024CountedItemReference\0224\n\006weapon\030\001 \001(\0162"
    "\032.dnd5e.api.v1alpha1.WeaponH\000R\006weapon\0221\n"
    "\005armor\030\002 \001(\0162\031.dnd5e.api.v1alpha1.ArmorH"
    "\000R\005armor\022.\n\004tool\030\003 \001(\0162\030.dnd5e.api.v1alp"
    "ha1.ToolH\000R\004tool\022.\n\004pack\030\004 \001(\0162\030.dnd5e.a"
    "pi.v1alpha1.PackH\000R\004pack\022@\n\nammunition\030\005"
    " \001(\0162\036.dnd5e.api.v1alpha1.AmmunitionH\000R\n"
    "ammunition\022$\n\rother_item_id\030\006 \001(\tH\000R\013oth"
    "erItemId\022\022\n\004name\030\007 \001(\tR\004name\022\032\n\010quantity"
    "\030\010 \001(\005R\010quantityB\006\n\004item\"B\n\nItemBundle\0224"
    "\n\005items\030\001 \003(\0132\036.dnd5e.api.v1alpha1.Bundl"
    "eItemR\005items\"\257\001\n\nBundleItem\022O\n\rconcrete_"
    "item\030\001 \001(\0132(.dnd5e.api.v1alpha1.CountedI"
    "temReferenceH\000R\014concreteItem\022C\n\013choice_i"
    "tem\030\002 \001(\0132 .dnd5e.api.v1alpha1.NestedCho"
    "iceH\000R\nchoiceItemB\013\n\titem_type\"B\n\014Nested"
    "Choice\0222\n\006choice\030\001 \001(\0132\032.dnd5e.api.v1alp"
    "ha1.ChoiceR\006choice\"\263\t\n\tClassInfo\0224\n\010clas"
    "s_id\030\001 \001(\0162\031.dnd5e.api.v1alpha1.ClassR\007c"
    "lassId\022\022\n\004name\030\002 \001(\tR\004name\022 \n\013descriptio"
    "n\030\003 \001(\tR\013description\022\027\n\007hit_die\030\004 \001(\005R\006h"
    "itDie\022D\n\017primary_ability\030\005 \001(\0162\033.dnd5e.a"
    "pi.v1alpha1.AbilityR\016primaryAbility\022n\n\034a"
    "rmor_proficiency_categories\030\006 \003(\0162,.dnd5"
    "e.api.v1alpha1.ArmorProficiencyCategoryR"
    "\032armorProficiencyCategories\022q\n\035weapon_pr"
    "oficiency_categories\030\007 \003(\0162-.dnd5e.api.v"
    "1alpha1.WeaponProficiencyCategoryR\033weapo"
    "nProficiencyCategories\022^\n\035specific_weapo"
    "n_proficiencies\030\034 \003(\0162\032.dnd5e.api.v1alph"
    "a1.WeaponR\033specificWeaponProficiencies\022G"
    "\n\022tool_proficiencies\030\010 \003(\0162\030.dnd5e.api.v"
    "1alpha1.ToolR\021toolProficiencies\022Y\n\032savin"
    "g_throw_proficiencies\030\t \003(\0162\033.dnd5e.api."
    "v1alpha1.AbilityR\030savingThrowProficienci"
    "es\022(\n\rproficiencies\030\033 \003(\tB\002\030\001R\rproficien"
    "cies\022.\n\023skill_choices_count\030\n \001(\005R\021skill"
    "ChoicesCount\022D\n\020available_skills\030\013 \003(\0162\031"
    ".dnd5e.api.v1alpha1.SkillR\017availableSkil"
    "ls\022G\n\021equipment_choices\030\014 \003(\0132\032.dnd5e.ap"
    "i.v1alpha1.ChoiceR\020equipmentChoices\022I\n\020l"
    "evel_1_features\030\r \003(\0132\037.dnd5e.api.v1alph"
    "a1.FeatureInfoR\016level1Features\022H\n\014spellc"
    "asting\030\016 \001(\0132$.dnd5e.api.v1alpha1.Spellc"
    "astingInfoR\014spellcasting\0224\n\007choices\030\017 \003("
    "\0132\032.dnd5e.api.v1alpha1.ChoiceR\007choices\022@"
    "\n\nsubclasses\030\020 \003(\0132 .dnd5e.api.v1alpha1."
    "SubclassInfoR\nsubclasses\"\305\005\n\014SubclassInf"
    "o\022=\n\013subclass_id\030\001 \001(\0162\034.dnd5e.api.v1alp"
    "ha1.SubclassR\nsubclassId\022\022\n\004name\030\002 \001(\tR\004"
    "name\022 \n\013description\030\003 \001(\tR\013description\022\024"
    "\n\005level\030\004 \001(\005R\005level\022J\n\023armor_proficienc"
    "ies\030\005 \003(\0162\031.dnd5e.api.v1alpha1.ArmorR\022ar"
    "morProficiencies\022M\n\024weapon_proficiencies"
    "\030\006 \003(\0162\032.dnd5e.api.v1alpha1.WeaponR\023weap"
    "onProficiencies\022G\n\022tool_proficiencies\030\007 "
    "\003(\0162\030.dnd5e.api.v1alpha1.ToolR\021toolProfi"
    "ciencies\022I\n\022additional_choices\030\010 \003(\0132\032.d"
    "nd5e.api.v1alpha1.ChoiceR\021additionalChoi"
    "ces\022;\n\010features\030\t \003(\0132\037.dnd5e.api.v1alph"
    "a1.FeatureInfoR\010features\022>\n\031armor_profic"
    "iency_strings\030\n \003(\tB\002\030\001R\027armorProficienc"
    "yStrings\022@\n\032weapon_proficiency_strings\030\013"
    " \003(\tB\002\030\001R\030weaponProficiencyStrings\022<\n\030to"
    "ol_proficiency_strings\030\014 \003(\tB\002\030\001R\026toolPr"
    "oficiencyStrings\"\224\002\n\020SpellcastingInfo\0221\n"
    "\024spellcasting_ability\030\001 \001(\tR\023spellcastin"
    "gAbility\022%\n\016ritual_casting\030\002 \001(\010R\rritual"
    "Casting\022-\n\022spellcasting_focus\030\003 \001(\tR\021spe"
    "llcastingFocus\022%\n\016cantrips_known\030\004 \001(\005R\r"
    "cantripsKnown\022!\n\014spells_known\030\005 \001(\005R\013spe"
    "llsKnown\022-\n\023spell_slots_level_1\030\006 \001(\005R\020s"
    "pellSlotsLevel1\"\320\006\n\016BackgroundInfo\022C\n\rba"
    "ckground_id\030\001 \001(\0162\036.dnd5e.api.v1alpha1.B"
    "ackgroundR\014backgroundId\022\022\n\004name\030\002 \001(\tR\004n"
    "ame\022 \n\013description\030\003 \001(\tR\013description\022J\n"
    "\023skill_proficiencies\030\004 \003(\0162\031.dnd5e.api.v"
    "1alpha1.SkillR\022skillProficiencies\022G\n\022too"
    "l_proficiencies\030\005 \003(\0162\030.dnd5e.api.v1alph"
    "a1.ToolR\021toolProficiencies\022:\n\tlanguages\030"
    "\006 \003(\0162\034.dnd5e.api.v1alpha1.LanguageR\tlan"
    "guages\0221\n\024additional_languages\030\007 \001(\005R\023ad"
    "ditionalLanguages\022U\n\022starting_equipment\030"
    "\010 \003(\0132&.dnd5e.api.v1alpha1.EquipmentSele"
    "ctionR\021startingEquipment\022#\n\rstarting_gol"
    "d\030\t \001(\005R\014startingGold\022!\n\014feature_name\030\n "
    "\001(\tR\013featureName\022/\n\023feature_description\030"
    "\013 \001(\tR\022featureDescription\022-\n\022personality"
    "_traits\030\014 \003(\tR\021personalityTraits\022\026\n\006idea"
    "ls\030\r \003(\tR\006ideals\022\024\n\005bonds\030\016 \003(\tR\005bonds\022\024"
    "\n\005flaws\030\017 \003(\tR\005flaws\022>\n\031skill_proficienc"
    "y_strings\030\020 \003(\tB\002\030\001R\027skillProficiencyStr"
    "ings\022<\n\030tool_proficiency_strings\030\021 \003(\tB\002"
    "\030\001R\026toolProficiencyStrings\"\260\002\n\013FeatureIn"
    "fo\022\016\n\002id\030\001 \001(\tR\002id\022\022\n\004name\030\002 \001(\tR\004name\022 "
    "\n\013description\030\003 \001(\tR\013description\022\024\n\005leve"
    "l\030\004 \001(\005R\005level\022\035\n\nclass_name\030\005 \001(\tR\tclas"
    "sName\0224\n\007choices\030\006 \003(\0132\032.dnd5e.api.v1alp"
    "ha1.ChoiceR\007choices\022\037\n\013has_choices\030\007 \001(\010"
    "R\nhasChoices\022O\n\017spell_selection\030\010 \001(\0132&."
    "dnd5e.api.v1alpha1.SpellSelectionInfoR\016s"
    "pellSelection\"\374\001\n\022SpellSelectionInfo\022(\n\020"
    "spells_to_select\030\001 \001(\005R\016spellsToSelect\022!"
    "\n\014spell_levels\030\002 \003(\005R\013spellLevels\022\037\n\013spe"
    "ll_lists\030\003 \003(\tR\nspellLists\022M\n\016selection_"
    "type\030\004 \001(\0162&.dnd5e.api.v1alpha1.SpellSel"
    "ectionTypeR\rselectionType\022)\n\020requires_re"
    "place\030\005 \001(\010R\017requiresReplace\"y\n\020ListRace"
    "sRequest\022\033\n\tpage_size\030\001 \001(\005R\010pageSize\022\035\n"
    "\npage_token\030\002 \001(\tR\tpageToken\022)\n\020include_"
    "subraces\030\003 \001(\010R\017includeSubraces\"\216\001\n\021List"
    "RacesResponse\0222\n\005races\030\001 \003(\0132\034.dnd5e.api"
    ".v1alpha1.RaceInfoR\005races\022&\n\017next_page_t"
    "oken\030\002 \001(\tR\rnextPageToken\022\035\n\ntotal_size\030"
    "\003 \001(\005R\ttotalSize\"\267\001\n\022ListClassesRequest\022"
    "\033\n\tpage_size\030\001 \001(\005R\010pageSize\022\035\n\npage_tok"
    "en\030\002 \001(\tR\tpageToken\022:\n\031include_spellcast"
    "ers_only\030\003 \001(\010R\027includeSpellcastersOnly\022"
    ")\n\020include_features\030\004 \001(\010R\017includeFeatur"
    "es\"\225\001\n\023ListClassesResponse\0227\n\007classes\030\001 "
    "\003(\0132\035.dnd5e.api.v1alpha1.ClassInfoR\007clas"
    "ses\022&\n\017next_page_token\030\002 \001(\tR\rnextPageTo"
    "ken\022\035\n\ntotal_size\030\003 \001(\005R\ttotalSize\"T\n\026Li"
    "stBackgroundsRequest\022\033\n\tpage_size\030\001 \001(\005R"
    "\010pageSize\022\035\n\npage_token\030\002 \001(\tR\tpageToken"
    "\"\246\001\n\027ListBackgroundsResponse\022D\n\013backgrou"
    "nds\030\001 \003(\0132\".dnd5e.api.v1alpha1.Backgroun"
    "dInfoR\013backgrounds\022&\n\017next_page_token\030\002 "
    "\001(\tR\rnextPageToken\022\035\n\ntotal_size\030\003 \001(\005R\t"
    "totalSize\"0\n\025GetRaceDetailsRequest\022\027\n\007ra"
    "ce_id\030\001 \001(\tR\006raceId\"J\n\026GetRaceDetailsRes"
    "ponse\0220\n\004race\030\001 \001(\0132\034.dnd5e.api.v1alpha1"
    ".RaceInfoR\004race\"3\n\026GetClassDetailsReques"
    "t\022\031\n\010class_id\030\001 \001(\tR\007classId\"N\n\027GetClass"
    "DetailsResponse\0223\n\005class\030\001 \001(\0132\035.dnd5e.a"
    "pi.v1alpha1.ClassInfoR\005class\"B\n\033GetBackg"
    "roundDetailsRequest\022#\n\rbackground_id\030\001 \001"
    "(\tR\014backgroundId\"b\n\034GetBackgroundDetails"
    "Response\022B\n\nbackground\030\001 \001(\0132\".dnd5e.api"
    ".v1alpha1.BackgroundInfoR\nbackground\"2\n\021"
    "GetFeatureRequest\022\035\n\nfeature_id\030\001 \001(\tR\tf"
    "eatureId\"O\n\022GetFeatureResponse\0229\n\007featur"
    "e\030\001 \001(\0132\037.dnd5e.api.v1alpha1.FeatureInfo"
    "R\007feature\"5\n\030RollAbilityScoresRequest\022\031\n"
    "\010draft_id\030\001 \001(\tR\007draftId\"\213\001\n\020AbilityScor"
    "eRoll\022\027\n\007roll_id\030\001 \001(\tR\006rollId\022\022\n\004dice\030\002"
    " \003(\005R\004dice\022\024\n\005total\030\003 \001(\005R\005total\022\030\n\007drop"
    "ped\030\004 \001(\005R\007dropped\022\032\n\010notation\030\005 \001(\tR\010no"
    "tation\"v\n\031RollAbilityScoresResponse\022:\n\005r"
    "olls\030\001 \003(\0132$.dnd5e.api.v1alpha1.AbilityS"
    "coreRollR\005rolls\022\035\n\nexpires_at\030\002 \001(\003R\texp"
    "iresAt\"\222\001\n\026GetRequirementsRequest\022\031\n\010dra"
    "ft_id\030\001 \001(\tR\007draftId\022/\n\005class\030\002 \001(\0162\031.dn"
    "d5e.api.v1alpha1.ClassR\005class\022,\n\004race\030\003 "
    "\001(\0162\030.dnd5e.api.v1alpha1.RaceR\004race\"h\n\027G"
    "etRequirementsResponse\022M\n\014requirements\030\001"
    " \001(\0132).dnd5e.api.v1alpha1.CharacterRequi"
    "rementsR\014requirements\"y\n\024SubmitChoicesRe"
    "quest\022\031\n\010draft_id\030\001 \001(\tR\007draftId\022F\n\013subm"
    "issions\030\002 \003(\0132$.dnd5e.api.v1alpha1.Choic"
    "eSubmissionR\013submissions\"\371\001\n\025SubmitChoic"
    "esResponse\0228\n\005draft\030\001 \001(\0132\".dnd5e.api.v1"
    "alpha1.CharacterDraftR\005draft\022D\n\nvalidati"
    "on\030\002 \001(\0132$.dnd5e.api.v1alpha1.Validation"
    "ResultR\nvalidation\022`\n\026remaining_requirem"
    "ents\030\003 \001(\0132).dnd5e.api.v1alpha1.Characte"
    "rRequirementsR\025remainingRequirements\"\233\002\n"
    "\017RollAssignments\022(\n\020strength_roll_id\030\001 \001"
    "(\tR\016strengthRollId\022*\n\021dexterity_roll_id\030"
    "\002 \001(\tR\017dexterityRollId\0220\n\024constitution_r"
    "oll_id\030\003 \001(\tR\022constitutionRollId\0220\n\024inte"
    "lligence_roll_id\030\004 \001(\tR\022intelligenceRoll"
    "Id\022$\n\016wisdom_roll_id\030\005 \001(\tR\014wisdomRollId"
    "\022(\n\020charisma_roll_id\030\006 \001(\tR\016charismaRoll"
    "Id\"6\n\004Cost\022\032\n\010quantity\030\001 \001(\005R\010quantity\022\022"
    "\n\004unit\030\002 \001(\tR\004unit\"8\n\006Weight\022\032\n\010quantity"
    "\030\001 \001(\005R\010quantity\022\022\n\004unit\030\002 \001(\tR\004unit\"\310\003\n"
    "\tEquipment\022\016\n\002id\030\001 \001(\tR\002id\022\022\n\004name\030\002 \001(\t"
    "R\004name\022A\n\010category\030\003 \001(\0162%.dnd5e.api.v1a"
    "lpha1.EquipmentCategoryR\010category\022,\n\004cos"
    "t\030\004 \001(\0132\030.dnd5e.api.v1alpha1.CostR\004cost\022"
    "2\n\006weight\030\005 \001(\0132\032.dnd5e.api.v1alpha1.Wei"
    "ghtR\006weight\022 \n\013description\030\006 \001(\tR\013descri"
    "ption\022A\n\013weapon_data\030\007 \001(\0132\036.dnd5e.api.v"
    "1alpha1.WeaponDataH\000R\nweaponData\022>\n\narmo"
    "r_data\030\010 \001(\0132\035.dnd5e.api.v1alpha1.ArmorD"
    "ataH\000R\tarmorData\022;\n\tgear_data\030\t \001(\0132\034.dn"
    "d5e.api.v1alpha1.GearDataH\000R\010gearDataB\020\n"
    "\016equipment_data\"\327\002\n\nWeaponData\022K\n\017weapon"
    "_category\030\001 \001(\0162\".dnd5e.api.v1alpha1.Wea"
    "ponCategoryR\016weaponCategory\022\037\n\013damage_di"
    "ce\030\002 \001(\tR\ndamageDice\022\?\n\013damage_type\030\003 \001("
    "\0162\036.dnd5e.api.v1alpha1.DamageTypeR\ndamag"
    "eType\022B\n\nproperties\030\004 \003(\0162\".dnd5e.api.v1"
    "alpha1.WeaponPropertyR\nproperties\022\024\n\005ran"
    "ge\030\005 \001(\tR\005range\022!\n\014normal_range\030\006 \001(\005R\013n"
    "ormalRange\022\035\n\nlong_range\030\007 \001(\005R\tlongRang"
    "e\"\247\002\n\tArmorData\022H\n\016armor_category\030\001 \001(\0162"
    "!.dnd5e.api.v1alpha1.ArmorCategoryR\rarmo"
    "rCategory\022\027\n\007base_ac\030\002 \001(\005R\006baseAc\022\033\n\tde"
    "x_bonus\030\003 \001(\010R\010dexBonus\022\"\n\rhas_dex_limit"
    "\030\004 \001(\010R\013hasDexLimit\022\"\n\rmax_dex_bonus\030\005 \001"
    "(\005R\013maxDexBonus\022\037\n\013str_minimum\030\006 \001(\005R\nst"
    "rMinimum\0221\n\024stealth_disadvantage\030\007 \001(\010R\023"
    "stealthDisadvantage\"q\n\010GearData\022E\n\rgear_"
    "category\030\001 \001(\0162 .dnd5e.api.v1alpha1.Gear"
    "CategoryR\014gearCategory\022\036\n\nproperties\030\002 \003"
    "(\tR\nproperties\"\225\005\n\016EquipmentSlots\022>\n\tmai"
    "n_hand\030\001 \001(\0132!.dnd5e.api.v1alpha1.Invent"
    "oryItemR\010mainHand\022<\n\010off_hand\030\002 \001(\0132!.dn"
    "d5e.api.v1alpha1.InventoryItemR\007offHand\022"
    "7\n\005armor\030\003 \001(\0132!.dnd5e.api.v1alpha1.Inve"
    "ntoryItemR\005armor\0229\n\006helmet\030\004 \001(\0132!.dnd5e"
    ".api.v1alpha1.InventoryItemR\006helmet\0227\n\005b"
    "oots\030\005 \001(\0132!.dnd5e.api.v1alpha1.Inventor"
    "yItemR\005boots\0229\n\006gloves\030\006 \001(\0132!.dnd5e.api"
    ".v1alpha1.InventoryItemR\006gloves\0227\n\005cloak"
    "\030\007 \001(\0132!.dnd5e.api.v1alpha1.InventoryIte"
    "mR\005cloak\0229\n\006amulet\030\010 \001(\0132!.dnd5e.api.v1a"
    "lpha1.InventoryItemR\006amulet\0228\n\006ring_1\030\t "
    "\001(\0132!.dnd5e.api.v1alpha1.InventoryItemR\005"
    "ring1\0228\n\006ring_2\030\n \001(\0132!.dnd5e.api.v1alph"
    "a1.InventoryItemR\005ring2\0225\n\004belt\030\013 \001(\0132!."
    "dnd5e.api.v1alpha1.InventoryItemR\004belt\"\301"
    "\001\n\rInventoryItem\022\027\n\007item_id\030\001 \001(\tR\006itemI"
    "d\022\032\n\010quantity\030\002 \001(\005R\010quantity\022\035\n\nis_attu"
    "ned\030\003 \001(\010R\tisAttuned\022\037\n\013custom_name\030\004 \001("
    "\tR\ncustomName\022;\n\tequipment\030\005 \001(\0132\035.dnd5e"
    ".api.v1alpha1.EquipmentR\tequipment\"\304\001\n\017E"
    "ncumbranceInfo\022%\n\016current_weight\030\001 \001(\005R\r"
    "currentWeight\022+\n\021carrying_capacity\030\002 \001(\005"
    "R\020carryingCapacity\022!\n\014max_capacity\030\003 \001(\005"
    "R\013maxCapacity\022:\n\005level\030\004 \001(\0162$.dnd5e.api"
    ".v1alpha1.EncumbranceLevelR\005level\"\233\010\n\nCh"
    "oiceData\022>\n\010category\030\001 \001(\0162\".dnd5e.api.v"
    "1alpha1.ChoiceCategoryR\010category\0228\n\006sour"
    "ce\030\002 \001(\0162 .dnd5e.api.v1alpha1.ChoiceSour"
    "ceR\006source\022\033\n\tchoice_id\030\003 \001(\tR\010choiceId\022"
    "\024\n\004name\030\004 \001(\tH\000R\004name\0227\n\006skills\030\005 \001(\0132\035."
    "dnd5e.api.v1alpha1.SkillListH\000R\006skills\022@"
    "\n\tlanguages\030\006 \001(\0132 .dnd5e.api.v1alpha1.L"
    "anguageListH\000R\tlanguages\022J\n\016ability_scor"
    "es\030\007 \001(\0132!.dnd5e.api.v1alpha1.AbilitySco"
    "resH\000R\rabilityScores\022J\n\016fighting_style\030\010"
    " \001(\0162!.dnd5e.api.v1alpha1.FightingStyleH"
    "\000R\rfightingStyle\022A\n\tequipment\030\t \001(\0132!.dn"
    "d5e.api.v1alpha1.EquipmentListH\000R\tequipm"
    "ent\0224\n\004race\030\n \001(\0132\036.dnd5e.api.v1alpha1.R"
    "aceChoiceH\000R\004race\0227\n\005class\030\013 \001(\0132\037.dnd5e"
    ".api.v1alpha1.ClassChoiceH\000R\005class\022@\n\nba"
    "ckground\030\014 \001(\0162\036.dnd5e.api.v1alpha1.Back"
    "groundH\000R\nbackground\0227\n\006spells\030\r \001(\0132\035.d"
    "nd5e.api.v1alpha1.SpellListH\000R\006spells\022=\n"
    "\010cantrips\030\016 \001(\0132\037.dnd5e.api.v1alpha1.Can"
    "tripListH\000R\010cantrips\022A\n\texpertise\030\017 \001(\0132"
    "!.dnd5e.api.v1alpha1.ExpertiseListH\000R\tex"
    "pertise\0227\n\006traits\030\020 \001(\0132\035.dnd5e.api.v1al"
    "pha1.TraitListH\000R\006traits\022X\n\022tool_profici"
    "encies\030\021 \001(\0132\'.dnd5e.api.v1alpha1.ToolPr"
    "oficiencyListH\000R\021toolProficienciesB\013\n\tse"
    "lection\">\n\tSkillList\0221\n\006skills\030\001 \003(\0162\031.d"
    "nd5e.api.v1alpha1.SkillR\006skills\"J\n\014Langu"
    "ageList\022:\n\tlanguages\030\001 \003(\0162\034.dnd5e.api.v"
    "1alpha1.LanguageR\tlanguages\"M\n\rEquipment"
    "List\022<\n\005items\030\001 \003(\0132&.dnd5e.api.v1alpha1"
    ".EquipmentSelectionR\005items\">\n\tSpellList\022"
    "1\n\006spells\030\001 \003(\0162\031.dnd5e.api.v1alpha1.Spe"
    "llR\006spells\"D\n\013CantripList\0225\n\010cantrips\030\001 "
    "\003(\0162\031.dnd5e.api.v1alpha1.SpellR\010cantrips"
    "\"B\n\rExpertiseList\0221\n\006skills\030\001 \003(\0162\031.dnd5"
    "e.api.v1alpha1.SkillR\006skills\">\n\tTraitLis"
    "t\0221\n\006traits\030\001 \003(\0162\031.dnd5e.api.v1alpha1.T"
    "raitR\006traits\"E\n\023ToolProficiencyList\022.\n\005t"
    "ools\030\001 \003(\0162\030.dnd5e.api.v1alpha1.ToolR\005to"
    "ols\"q\n\nRaceChoice\022,\n\004race\030\001 \001(\0162\030.dnd5e."
    "api.v1alpha1.RaceR\004race\0225\n\007subrace\030\002 \001(\016"
    "2\033.dnd5e.api.v1alpha1.SubraceR\007subrace\">"
    "\n\013ClassChoice\022/\n\005class\030\001 \001(\0162\031.dnd5e.api"
    ".v1alpha1.ClassR\005class\"\217\001\n\017EquipmentChoi"
    "ce\022\033\n\tchoice_id\030\001 \001(\tR\010choiceId\022 \n\013descr"
    "iption\030\002 \001(\tR\013description\022=\n\007options\030\003 \003"
    "(\0132#.dnd5e.api.v1alpha1.EquipmentOptionR"
    "\007options\"\216\001\n\017EquipmentOption\022\033\n\toption_i"
    "d\030\001 \001(\tR\010optionId\022 \n\013description\030\002 \001(\tR\013"
    "description\022<\n\005items\030\003 \003(\0132&.dnd5e.api.v"
    "1alpha1.EquipmentSelectionR\005items\"\370\002\n\022Eq"
    "uipmentSelection\0224\n\006weapon\030\001 \001(\0162\032.dnd5e"
    ".api.v1alpha1.WeaponH\000R\006weapon\0221\n\005armor\030"
    "\002 \001(\0162\031.dnd5e.api.v1alpha1.ArmorH\000R\005armo"
    "r\022.\n\004tool\030\003 \001(\0162\030.dnd5e.api.v1alpha1.Too"
    "lH\000R\004tool\022.\n\004pack\030\004 \001(\0162\030.dnd5e.api.v1al"
    "pha1.PackH\000R\004pack\022@\n\nammunition\030\005 \001(\0162\036."
    "dnd5e.api.v1alpha1.AmmunitionH\000R\nammunit"
    "ion\022.\n\022other_equipment_id\030\006 \001(\tH\000R\020other"
    "EquipmentId\022\032\n\010quantity\030\007 \001(\005R\010quantityB"
    "\013\n\tequipment\"\364\005\n\020ChoiceSubmission\022>\n\010cat"
    "egory\030\001 \001(\0162\".dnd5e.api.v1alpha1.ChoiceC"
    "ategoryR\010category\0228\n\006source\030\002 \001(\0162 .dnd5"
    "e.api.v1alpha1.ChoiceSourceR\006source\022\033\n\tc"
    "hoice_id\030\003 \001(\tR\010choiceId\022\033\n\toption_id\030\004 "
    "\001(\tR\010optionId\022<\n\006skills\030\005 \001(\0132\".dnd5e.ap"
    "i.v1alpha1.SkillSelectionH\000R\006skills\022E\n\tl"
    "anguages\030\006 \001(\0132%.dnd5e.api.v1alpha1.Lang"
    "uageSelectionH\000R\tlanguages\022F\n\tequipment\030"
    "\007 \001(\0132&.dnd5e.api.v1alpha1.EquipmentSele"
    "ctionH\000R\tequipment\022S\n\016fighting_style\030\010 \001"
    "(\0132*.dnd5e.api.v1alpha1.FightingStyleSel"
    "ectionH\000R\rfightingStyle\0229\n\005tools\030\t \001(\0132!"
    ".dnd5e.api.v1alpha1.ToolSelectionH\000R\005too"
    "ls\022c\n\024weapon_proficiencies\030\n \001(\0132..dnd5e"
    ".api.v1alpha1.WeaponProficiencySelection"
    "H\000R\023weaponProficiencies\022`\n\023armor_profici"
    "encies\030\013 \001(\0132-.dnd5e.api.v1alpha1.ArmorP"
    "roficiencySelectionH\000R\022armorProficiencie"
    "sB\010\n\006values\"C\n\016SkillSelection\0221\n\006skills\030"
    "\001 \003(\0162\031.dnd5e.api.v1alpha1.SkillR\006skills"
    "\"O\n\021LanguageSelection\022:\n\tlanguages\030\001 \003(\016"
    "2\034.dnd5e.api.v1alpha1.LanguageR\tlanguage"
    "s\"Q\n\026FightingStyleSelection\0227\n\005style\030\001 \001"
    "(\0162!.dnd5e.api.v1alpha1.FightingStyleR\005s"
    "tyle\"\?\n\rToolSelection\022.\n\005tools\030\001 \003(\0162\030.d"
    "nd5e.api.v1alpha1.ToolR\005tools\"\225\001\n\032Weapon"
    "ProficiencySelection\0224\n\007weapons\030\001 \003(\0162\032."
    "dnd5e.api.v1alpha1.WeaponR\007weapons\022A\n\nca"
    "tegories\030\002 \003(\0162!.dnd5e.api.v1alpha1.Equi"
    "pmentTypeR\ncategories\"\221\001\n\031ArmorProficien"
    "cySelection\0221\n\006armors\030\001 \003(\0162\031.dnd5e.api."
    "v1alpha1.ArmorR\006armors\022A\n\ncategories\030\002 \003"
    "(\0162!.dnd5e.api.v1alpha1.EquipmentTypeR\nc"
    "ategories\"\250\001\n\025CharacterRequirements\022<\n\007c"
    "hoices\030\001 \003(\0132\".dnd5e.api.v1alpha1.Requir"
    "edChoiceR\007choices\022(\n\020all_choices_made\030\002 "
    "\001(\010R\016allChoicesMade\022\'\n\017missing_choices\030\003"
    " \003(\tR\016missingChoices\"\201\005\n\016RequiredChoice\022"
    "\033\n\tchoice_id\030\001 \001(\tR\010choiceId\022>\n\010category"
    "\030\002 \001(\0162\".dnd5e.api.v1alpha1.ChoiceCatego"
    "ryR\010category\0228\n\006source\030\003 \001(\0162 .dnd5e.api"
    ".v1alpha1.ChoiceSourceR\006source\022 \n\013descri"
    "ption\030\004 \001(\tR\013description\022\024\n\005count\030\005 \001(\005R"
    "\005count\022G\n\rskill_options\030\006 \001(\0132 .dnd5e.ap"
    "i.v1alpha1.SkillOptionsH\000R\014skillOptions\022"
    "P\n\020language_options\030\007 \001(\0132#.dnd5e.api.v1"
    "alpha1.LanguageOptionsH\000R\017languageOption"
    "s\022R\n\021equipment_options\030\010 \001(\0132#.dnd5e.api"
    ".v1alpha1.EquipmentChoiceH\000R\020equipmentOp"
    "tions\022`\n\026fighting_style_options\030\t \001(\0132(."
    "dnd5e.api.v1alpha1.FightingStyleOptionsH"
    "\000R\024fightingStyleOptions\022D\n\014tool_options\030"
    "\n \001(\0132\037.dnd5e.api.v1alpha1.ToolOptionsH\000"
    "R\013toolOptionsB\t\n\007options\"G\n\014SkillOptions"
    "\0227\n\tavailable\030\001 \003(\0162\031.dnd5e.api.v1alpha1"
    ".SkillR\tavailable\"M\n\017LanguageOptions\022:\n\t"
    "available\030\001 \003(\0162\034.dnd5e.api.v1alpha1.Lan"
    "guageR\tavailable\"W\n\024FightingStyleOptions"
    "\022\?\n\tavailable\030\001 \003(\0162!.dnd5e.api.v1alpha1"
    ".FightingStyleR\tavailable\"E\n\013ToolOptions"
    "\0226\n\tavailable\030\001 \003(\0162\030.dnd5e.api.v1alpha1"
    ".ToolR\tavailable\"\246\001\n\013SpellDamage\022\?\n\013dama"
    "ge_type\030\001 \001(\0162\036.dnd5e.api.v1alpha1.Damag"
    "eTypeR\ndamageType\022V\n\024damage_at_slot_leve"
    "l\030\002 \003(\0132%.dnd5e.api.v1alpha1.DamageAtSlo"
    "tLevelR\021damageAtSlotLevel\"S\n\021DamageAtSlo"
    "tLevel\022\035\n\nslot_level\030\001 \001(\005R\tslotLevel\022\037\n"
    "\013damage_dice\030\002 \001(\tR\ndamageDice\"6\n\014AreaOf"
    "Effect\022\022\n\004type\030\001 \001(\tR\004type\022\022\n\004size\030\002 \001(\005"
    "R\004size\"\242\001\n\032ListEquipmentByTypeRequest\022H\n"
    "\016equipment_type\030\001 \001(\0162!.dnd5e.api.v1alph"
    "a1.EquipmentTypeR\requipmentType\022\033\n\tpage_"
    "size\030\002 \001(\005R\010pageSize\022\035\n\npage_token\030\003 \001(\t"
    "R\tpageToken\"\241\001\n\033ListEquipmentByTypeRespo"
    "nse\022;\n\tequipment\030\001 \003(\0132\035.dnd5e.api.v1alp"
    "ha1.EquipmentR\tequipment\022&\n\017next_page_to"
    "ken\030\002 \001(\tR\rnextPageToken\022\035\n\ntotal_size\030\003"
    " \001(\005R\ttotalSize\"\235\001\n\030ListSpellsByLevelReq"
    "uest\022\024\n\005level\030\001 \001(\005R\005level\022/\n\005class\030\002 \001("
    "\0162\031.dnd5e.api.v1alpha1.ClassR\005class\022\033\n\tp"
    "age_size\030\003 \001(\005R\010pageSize\022\035\n\npage_token\030\004"
    " \001(\tR\tpageToken\"\225\001\n\031ListSpellsByLevelRes"
    "ponse\0221\n\006spells\030\001 \003(\0162\031.dnd5e.api.v1alph"
    "a1.SpellR\006spells\022&\n\017next_page_token\030\002 \001("
    "\tR\rnextPageToken\022\035\n\ntotal_size\030\003 \001(\005R\tto"
    "talSize\"A\n\034GetCharacterInventoryRequest\022"
    "!\n\014character_id\030\001 \001(\tR\013characterId\"\332\002\n\035G"
    "etCharacterInventoryResponse\022K\n\017equipmen"
    "t_slots\030\001 \001(\0132\".dnd5e.api.v1alpha1.Equip"
    "mentSlotsR\016equipmentSlots\022\?\n\tinventory\030\002"
    " \003(\0132!.dnd5e.api.v1alpha1.InventoryItemR"
    "\tinventory\022E\n\013encumbrance\030\003 \001(\0132#.dnd5e."
    "api.v1alpha1.EncumbranceInfoR\013encumbranc"
    "e\0222\n\025attunement_slots_used\030\004 \001(\005R\023attune"
    "mentSlotsUsed\0220\n\024attunement_slots_max\030\005 "
    "\001(\005R\022attunementSlotsMax\"\205\001\n\020EquipItemReq"
    "uest\022!\n\014character_id\030\001 \001(\tR\013characterId\022"
    "\027\n\007item_id\030\002 \001(\tR\006itemId\0225\n\004slot\030\003 \001(\0162!"
    ".dnd5e.api.v1alpha1.EquipmentSlotR\004slot\""
    "\255\001\n\021EquipItemResponse\022;\n\tcharacter\030\001 \001(\013"
    "2\035.dnd5e.api.v1alpha1.CharacterR\tcharact"
    "er\022[\n\030previously_equipped_item\030\002 \001(\0132!.d"
    "nd5e.api.v1alpha1.InventoryItemR\026previou"
    "slyEquippedItem\"n\n\022UnequipItemRequest\022!\n"
    "\014character_id\030\001 \001(\tR\013characterId\0225\n\004slot"
    "\030\002 \001(\0162!.dnd5e.api.v1alpha1.EquipmentSlo"
    "tR\004slot\"R\n\023UnequipItemResponse\022;\n\tcharac"
    "ter\030\001 \001(\0132\035.dnd5e.api.v1alpha1.Character"
    "R\tcharacter\"w\n\025AddToInventoryRequest\022!\n\014"
    "character_id\030\001 \001(\tR\013characterId\022;\n\005items"
    "\030\002 \003(\0132%.dnd5e.api.v1alpha1.InventoryAdd"
    "itionR\005items\"H\n\021InventoryAddition\022\027\n\007ite"
    "m_id\030\001 \001(\tR\006itemId\022\032\n\010quantity\030\002 \001(\005R\010qu"
    "antity\"m\n\026AddToInventoryResponse\022;\n\tchar"
    "acter\030\001 \001(\0132\035.dnd5e.api.v1alpha1.Charact"
    "erR\tcharacter\022\026\n\006errors\030\002 \003(\tR\006errors\"\251\001"
    "\n\032RemoveFromInventoryRequest\022!\n\014characte"
    "r_id\030\001 \001(\tR\013characterId\022\027\n\007item_id\030\002 \001(\t"
    "R\006itemId\022\034\n\010quantity\030\003 \001(\005H\000R\010quantity\022\037"
    "\n\nremove_all\030\004 \001(\010H\000R\tremoveAllB\020\n\016remov"
    "al_amount\"\205\001\n\033RemoveFromInventoryRespons"
    "e\022;\n\tcharacter\030\001 \001(\0132\035.dnd5e.api.v1alpha"
    "1.CharacterR\tcharacter\022)\n\020quantity_remov"
    "ed\030\002 \001(\005R\017quantityRemoved*\252\004\n\021ClassResou"
    "rceType\022#\n\037CLASS_RESOURCE_TYPE_UNSPECIFI"
    "ED\020\000\022\034\n\030CLASS_RESOURCE_TYPE_RAGE\020\001\022*\n&CL"
    "ASS_RESOURCE_TYPE_BARDIC_INSPIRATION\020\002\022("
    "\n$CLASS_RESOURCE_TYPE_CHANNEL_DIVINITY\020\003"
    "\022\"\n\036CLASS_RESOURCE_TYPE_WILD_SHAPE\020\004\022#\n\037"
    "CLASS_RESOURCE_TYPE_SECOND_WIND\020\005\022$\n CLA"
    "SS_RESOURCE_TYPE_ACTION_SURGE\020\006\022!\n\035CLASS"
    "_RESOURCE_TYPE_KI_POINTS\020\007\022$\n CLASS_RESO"
    "URCE_TYPE_DIVINE_SENSE\020\010\022$\n CLASS_RESOUR"
    "CE_TYPE_LAY_ON_HANDS\020\t\022&\n\"CLASS_RESOURCE"
    "_TYPE_SORCERY_POINTS\020\n\022\'\n#CLASS_RESOURCE"
    "_TYPE_ARCANE_RECOVERY\020\013\022#\n\037CLASS_RESOURC"
    "E_TYPE_INDOMITABLE\020\014\022(\n$CLASS_RESOURCE_T"
    "YPE_SUPERIORITY_DICE\020\r*\230\001\n\014RechargeType\022"
    "\035\n\031RECHARGE_TYPE_UNSPECIFIED\020\000\022\034\n\030RECHAR"
    "GE_TYPE_SHORT_REST\020\001\022\033\n\027RECHARGE_TYPE_LO"
    "NG_REST\020\002\022\026\n\022RECHARGE_TYPE_DAWN\020\003\022\026\n\022REC"
    "HARGE_TYPE_NONE\020\004*\213\002\n\014CreationStep\022\035\n\031CR"
    "EATION_STEP_UNSPECIFIED\020\000\022\026\n\022CREATION_ST"
    "EP_NAME\020\001\022\026\n\022CREATION_STEP_RACE\020\002\022\027\n\023CRE"
    "ATION_STEP_CLASS\020\003\022\034\n\030CREATION_STEP_BACK"
    "GROUND\020\004\022 \n\034CREATION_STEP_ABILITY_SCORES"
    "\020\005\022\030\n\024CREATION_STEP_SKILLS\020\006\022\033\n\027CREATION"
    "_STEP_LANGUAGES\020\007\022\030\n\024CREATION_STEP_REVIE"
    "W\020\010\032\002\030\001*\230\001\n\013WarningType\022\034\n\030WARNING_TYPE_"
    "UNSPECIFIED\020\000\022!\n\035WARNING_TYPE_MISSING_RE"
    "QUIRED\020\001\022$\n WARNING_TYPE_INVALID_COMBINA"
    "TION\020\002\022\"\n\036WARNING_TYPE_SUBOPTIMAL_CHOICE"
    "\020\003*\335\004\n\016ChoiceCategory\022\037\n\033CHOICE_CATEGORY"
    "_UNSPECIFIED\020\000\022\035\n\031CHOICE_CATEGORY_EQUIPM"
    "ENT\020\001\022\032\n\026CHOICE_CATEGORY_SKILLS\020\002\022\031\n\025CHO"
    "ICE_CATEGORY_TOOLS\020\003\022\035\n\031CHOICE_CATEGORY_"
    "LANGUAGES\020\004\022(\n$CHOICE_CATEGORY_WEAPON_PR"
    "OFICIENCIES\020\005\022\'\n#CHOICE_CATEGORY_ARMOR_P"
    "ROFICIENCIES\020\006\022\032\n\026CHOICE_CATEGORY_SPELLS"
    "\020\007\022\031\n\025CHOICE_CATEGORY_FEATS\020\010\022\"\n\036CHOICE_"
    "CATEGORY_ABILITY_SCORES\020\t\022\030\n\024CHOICE_CATE"
    "GORY_NAME\020\n\022\"\n\036CHOICE_CATEGORY_FIGHTING_"
    "STYLE\020\013\022\030\n\024CHOICE_CATEGORY_RACE\020\014\022\031\n\025CHO"
    "ICE_CATEGORY_CLASS\020\r\022\036\n\032CHOICE_CATEGORY_"
    "BACKGROUND\020\016\022\034\n\030CHOICE_CATEGORY_CANTRIPS"
    "\020\017\022\035\n\031CHOICE_CATEGORY_EXPERTISE\020\020\022\033\n\027CHO"
    "ICE_CATEGORY_SUBRACE\020\021\022\032\n\026CHOICE_CATEGOR"
    "Y_TRAITS\020\022*\200\001\n\004Size\022\024\n\020SIZE_UNSPECIFIED\020"
    "\000\022\r\n\tSIZE_TINY\020\001\022\016\n\nSIZE_SMALL\020\002\022\017\n\013SIZE"
    "_MEDIUM\020\003\022\016\n\nSIZE_LARGE\020\004\022\r\n\tSIZE_HUGE\020\005"
    "\022\023\n\017SIZE_GARGANTUAN\020\006*\241\001\n\022SpellSelection"
    "Type\022$\n SPELL_SELECTION_TYPE_UNSPECIFIED"
    "\020\000\022\"\n\036SPELL_SELECTION_TYPE_SPELLBOOK\020\001\022\036"
    "\n\032SPELL_SELECTION_TYPE_KNOWN\020\002\022!\n\035SPELL_"
    "SELECTION_TYPE_PREPARED\020\003*\310\001\n\020Encumbranc"
    "eLevel\022!\n\035ENCUMBRANCE_LEVEL_UNSPECIFIED\020"
    "\000\022\"\n\036ENCUMBRANCE_LEVEL_UNENCUMBERED\020\001\022 \n"
    "\034ENCUMBRANCE_LEVEL_ENCUMBERED\020\002\022(\n$ENCUM"
    "BRANCE_LEVEL_HEAVILY_ENCUMBERED\020\003\022!\n\035ENC"
    "UMBRANCE_LEVEL_IMMOBILIZED\020\004*\315\001\n\014ChoiceS"
    "ource\022\035\n\031CHOICE_SOURCE_UNSPECIFIED\020\000\022\030\n\024"
    "CHOICE_SOURCE_PLAYER\020\001\022\026\n\022CHOICE_SOURCE_"
    "RACE\020\002\022\031\n\025CHOICE_SOURCE_SUBRACE\020\003\022\027\n\023CHO"
    "ICE_SOURCE_CLASS\020\004\022\034\n\030CHOICE_SOURCE_BACK"
    "GROUND\020\005\022\032\n\026CHOICE_SOURCE_LEVEL_UP\020\006*\330\002\n"
    "\rEquipmentSlot\022\036\n\032EQUIPMENT_SLOT_UNSPECI"
    "FIED\020\000\022\034\n\030EQUIPMENT_SLOT_MAIN_HAND\020\001\022\033\n\027"
    "EQUIPMENT_SLOT_OFF_HAND\020\002\022\030\n\024EQUIPMENT_S"
    "LOT_ARMOR\020\003\022\031\n\025EQUIPMENT_SLOT_HELMET\020\004\022\030"
    "\n\024EQUIPMENT_SLOT_BOOTS\020\005\022\031\n\025EQUIPMENT_SL"
    "OT_GLOVES\020\006\022\030\n\024EQUIPMENT_SLOT_CLOAK\020\007\022\031\n"
    "\025EQUIPMENT_SLOT_AMULET\020\010\022\031\n\025EQUIPMENT_SL"
    "OT_RING_1\020\t\022\031\n\025EQUIPMENT_SLOT_RING_2\020\n\022\027"
    "\n\023EQUIPMENT_SLOT_BELT\020\0132\364\032\n\020CharacterSer"
    "vice\022^\n\013CreateDraft\022&.dnd5e.api.v1alpha1"
    ".CreateDraftRequest\032\'.dnd5e.api.v1alpha1"
    ".CreateDraftResponse\022U\n\010GetDraft\022#.dnd5e"
    ".api.v1alpha1.GetDraftRequest\032$.dnd5e.ap"
    "i.v1alpha1.GetDraftResponse\022[\n\nListDraft"
    "s\022%.dnd5e.api.v1alpha1.ListDraftsRequest"
    "\032&.dnd5e.api.v1alpha1.ListDraftsResponse"
    "\022^\n\013DeleteDraft\022&.dnd5e.api.v1alpha1.Del"
    "eteDraftRequest\032\'.dnd5e.api.v1alpha1.Del"
    "eteDraftResponse\022[\n\nUpdateName\022%.dnd5e.a"
    "pi.v1alpha1.UpdateNameRequest\032&.dnd5e.ap"
    "i.v1alpha1.UpdateNameResponse\022[\n\nUpdateR"
    "ace\022%.dnd5e.api.v1alpha1.UpdateRaceReque"
    "st\032&.dnd5e.api.v1alpha1.UpdateRaceRespon"
    "se\022^\n\013UpdateClass\022&.dnd5e.api.v1alpha1.U"
    "pdateClassRequest\032\'.dnd5e.api.v1alpha1.U"
    "pdateClassResponse\022m\n\020UpdateBackground\022+"
    ".dnd5e.api.v1alpha1.UpdateBackgroundRequ"
    "est\032,.dnd5e.api.v1alpha1.UpdateBackgroun"
    "dResponse\022v\n\023UpdateAbilityScores\022..dnd5e"
    ".api.v1alpha1.UpdateAbilityScoresRequest"
    "\032/.dnd5e.api.v1alpha1.UpdateAbilityScore"
    "sResponse\022a\n\014UpdateSkills\022\'.dnd5e.api.v1"
    "alpha1.UpdateSkillsRequest\032(.dnd5e.api.v"
    "1alpha1.UpdateSkillsResponse\022d\n\rValidate"
    "Draft\022(.dnd5e.api.v1alpha1.ValidateDraft"
    "Request\032).dnd5e.api.v1alpha1.ValidateDra"
    "ftResponse\022j\n\017GetDraftPreview\022*.dnd5e.ap"
    "i.v1alpha1.GetDraftPreviewRequest\032+.dnd5"
    "e.api.v1alpha1.GetDraftPreviewResponse\022d"
    "\n\rFinalizeDraft\022(.dnd5e.api.v1alpha1.Fin"
    "alizeDraftRequest\032).dnd5e.api.v1alpha1.F"
    "inalizeDraftResponse\022a\n\014GetCharacter\022\'.d"
    "nd5e.api.v1alpha1.GetCharacterRequest\032(."
    "dnd5e.api.v1alpha1.GetCharacterResponse\022"
    "g\n\016ListCharacters\022).dnd5e.api.v1alpha1.L"
    "istCharactersRequest\032*.dnd5e.api.v1alpha"
    "1.ListCharactersResponse\022j\n\017DeleteCharac"
    "ter\022*.dnd5e.api.v1alpha1.DeleteCharacter"
    "Request\032+.dnd5e.api.v1alpha1.DeleteChara"
    "cterResponse\022X\n\tListRaces\022$.dnd5e.api.v1"
    "alpha1.ListRacesRequest\032%.dnd5e.api.v1al"
    "pha1.ListRacesResponse\022^\n\013ListClasses\022&."
    "dnd5e.api.v1alpha1.ListClassesRequest\032\'."
    "dnd5e.api.v1alpha1.ListClassesResponse\022j"
    "\n\017ListBackgrounds\022*.dnd5e.api.v1alpha1.L"
    "istBackgroundsRequest\032+.dnd5e.api.v1alph"
    "a1.ListBackgroundsResponse\022g\n\016GetRaceDet"
    "ails\022).dnd5e.api.v1alpha1.GetRaceDetails"
    "Request\032*.dnd5e.api.v1alpha1.GetRaceDeta"
    "ilsResponse\022j\n\017GetClassDetails\022*.dnd5e.a"
    "pi.v1alpha1.GetClassDetailsRequest\032+.dnd"
    "5e.api.v1alpha1.GetClassDetailsResponse\022"
    "y\n\024GetBackgroundDetails\022/.dnd5e.api.v1al"
    "pha1.GetBackgroundDetailsRequest\0320.dnd5e"
    ".api.v1alpha1.GetBackgroundDetailsRespon"
    "se\022[\n\nGetFeature\022%.dnd5e.api.v1alpha1.Ge"
    "tFeatureRequest\032&.dnd5e.api.v1alpha1.Get"
    "FeatureResponse\022p\n\021RollAbilityScores\022,.d"
    "nd5e.api.v1alpha1.RollAbilityScoresReque"
    "st\032-.dnd5e.api.v1alpha1.RollAbilityScore"
    "sResponse\022j\n\017GetRequirements\022*.dnd5e.api"
    ".v1alpha1.GetRequirementsRequest\032+.dnd5e"
    ".api.v1alpha1.GetRequirementsResponse\022d\n"
    "\rSubmitChoices\022(.dnd5e.api.v1alpha1.Subm"
    "itChoicesRequest\032).dnd5e.api.v1alpha1.Su"
    "bmitChoicesResponse\022v\n\023ListEquipmentByTy"
    "pe\022..dnd5e.api.v1alpha1.ListEquipmentByT"
    "ypeRequest\032/.dnd5e.api.v1alpha1.ListEqui"
    "pmentByTypeResponse\022p\n\021ListSpellsByLevel"
    "\022,.dnd5e.api.v1alpha1.ListSpellsByLevelR"
    "equest\032-.dnd5e.api.v1alpha1.ListSpellsBy"
    "LevelResponse\022|\n\025GetCharacterInventory\0220"
    ".dnd5e.api.v1alpha1.GetCharacterInventor"
    "yRequest\0321.dnd5e.api.v1alpha1.GetCharact"
    "erInventoryResponse\022X\n\tEquipItem\022$.dnd5e"
    ".api.v1alpha1.EquipItemRequest\032%.dnd5e.a"
    "pi.v1alpha1.EquipItemResponse\022^\n\013Unequip"
    "Item\022&.dnd5e.api.v1alpha1.UnequipItemReq"
    "uest\032\'.dnd5e.api.v1alpha1.UnequipItemRes"
    "ponse\022g\n\016AddToInventory\022).dnd5e.api.v1al"
    "pha1.AddToInventoryRequest\032*.dnd5e.api.v"
    "1alpha1.AddToInventoryResponse\022v\n\023Remove"
    "FromInventory\022..dnd5e.api.v1alpha1.Remov"
    "eFromInventoryRequest\032/.dnd5e.api.v1alph"
    "a1.RemoveFromInventoryResponseB\337\001\n\026com.d"
    "nd5e.api.v1alpha1B\016CharacterProtoP\001ZKgit"
    "hub.com/KirkDiggler/rpg-api-protos/gen/g"
    "o/dnd5e/api/v1alpha1;apiv1alpha1\242\002\003DAX\252\002"
    "\022Dnd5e.Api.V1alpha1\312\002\022Dnd5e\\Api\\V1alpha1"
    "\342\002\036Dnd5e\\Api\\V1alpha1\\GPBMetadata\352\002\024Dnd5"
    "e::Api::V1alpha1b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto_deps[2] = {
        &::descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcommon_2eproto,
        &::descriptor_table_dnd5e_2fapi_2fv1alpha1_2fenums_2eproto,
};
static ::absl::once_flag descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto = {
    false,
    false,
    36544,
    descriptor_table_protodef_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
    "dnd5e/api/v1alpha1/character.proto",
    &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto_once,
    descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto_deps,
    2,
    146,
    schemas,
    file_default_instances,
    TableStruct_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto::offsets,
    file_level_enum_descriptors_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
    file_level_service_descriptors_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
};
namespace dnd5e {
namespace api {
namespace v1alpha1 {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ClassResourceType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto);
  return file_level_enum_descriptors_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t ClassResourceType_internal_data_[] = {
    917504u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL RechargeType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto);
  return file_level_enum_descriptors_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t RechargeType_internal_data_[] = {
    327680u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL CreationStep_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto);
  return file_level_enum_descriptors_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t CreationStep_internal_data_[] = {
    589824u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL WarningType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto);
  return file_level_enum_descriptors_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t WarningType_internal_data_[] = {
    262144u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ChoiceCategory_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto);
  return file_level_enum_descriptors_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t ChoiceCategory_internal_data_[] = {
    1245184u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Size_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto);
  return file_level_enum_descriptors_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto[5];
}
PROTOBUF_CONSTINIT const uint32_t Size_internal_data_[] = {
    458752u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL SpellSelectionType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto);
  return file_level_enum_descriptors_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto[6];
}
PROTOBUF_CONSTINIT const uint32_t SpellSelectionType_internal_data_[] = {
    262144u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL EncumbranceLevel_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto);
  return file_level_enum_descriptors_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto[7];
}
PROTOBUF_CONSTINIT const uint32_t EncumbranceLevel_internal_data_[] = {
    327680u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ChoiceSource_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto);
  return file_level_enum_descriptors_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto[8];
}
PROTOBUF_CONSTINIT const uint32_t ChoiceSource_internal_data_[] = {
    458752u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL EquipmentSlot_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto);
  return file_level_enum_descriptors_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto[9];
}
PROTOBUF_CONSTINIT const uint32_t EquipmentSlot_internal_data_[] = {
    786432u, 0u, };
// ===================================================================

class CharacterFeature::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CharacterFeature>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CharacterFeature, _impl_._has_bits_);
};

CharacterFeature::CharacterFeature(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CharacterFeature_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.CharacterFeature)
}
PROTOBUF_NDEBUG_INLINE CharacterFeature::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::CharacterFeature& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_),
        name_(arena, from.name_),
        description_(arena, from.description_),
        source_(arena, from.source_) {}

CharacterFeature::CharacterFeature(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CharacterFeature& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CharacterFeature_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CharacterFeature* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.level_ = from._impl_.level_;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.CharacterFeature)
}
PROTOBUF_NDEBUG_INLINE CharacterFeature::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        id_(arena),
        name_(arena),
        description_(arena),
        source_(arena) {}

inline void CharacterFeature::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.level_ = {};
}
CharacterFeature::~CharacterFeature() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.CharacterFeature)
  SharedDtor(*this);
}
inline void CharacterFeature::SharedDtor(MessageLite& self) {
  CharacterFeature& this_ = static_cast<CharacterFeature&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.source_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CharacterFeature::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CharacterFeature(arena);
}
constexpr auto CharacterFeature::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CharacterFeature),
                                            alignof(CharacterFeature));
}
constexpr auto CharacterFeature::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CharacterFeature_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CharacterFeature::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CharacterFeature>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CharacterFeature::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CharacterFeature>(), &CharacterFeature::ByteSizeLong,
              &CharacterFeature::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CharacterFeature, _impl_._cached_size_),
          false,
      },
      &CharacterFeature::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CharacterFeature_class_data_ =
        CharacterFeature::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CharacterFeature::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CharacterFeature_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CharacterFeature_class_data_.tc_table);
  return CharacterFeature_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 67, 2>
CharacterFeature::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CharacterFeature, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CharacterFeature_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CharacterFeature>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CharacterFeature, _impl_.id_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CharacterFeature, _impl_.name_)}},
    // string description = 3 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(CharacterFeature, _impl_.description_)}},
    // string source = 4 [json_name = "source"];
    {::_pbi::TcParser::FastUS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(CharacterFeature, _impl_.source_)}},
    // int32 level = 5 [json_name = "level"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CharacterFeature, _impl_.level_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(CharacterFeature, _impl_.level_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(CharacterFeature, _impl_.id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(CharacterFeature, _impl_.name_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 3 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(CharacterFeature, _impl_.description_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string source = 4 [json_name = "source"];
    {PROTOBUF_FIELD_OFFSET(CharacterFeature, _impl_.source_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 level = 5 [json_name = "level"];
    {PROTOBUF_FIELD_OFFSET(CharacterFeature, _impl_.level_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\43\2\4\13\6\0\0\0"
    "dnd5e.api.v1alpha1.CharacterFeature"
    "id"
    "name"
    "description"
    "source"
  }},
};
PROTOBUF_NOINLINE void CharacterFeature::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.CharacterFeature)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.source_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.level_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CharacterFeature::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CharacterFeature& this_ = static_cast<const CharacterFeature&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CharacterFeature::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CharacterFeature& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.CharacterFeature)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1 [json_name = "id"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_id().empty()) {
      const ::std::string& _s = this_._internal_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.CharacterFeature.id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string name = 2 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.CharacterFeature.name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string description = 3 [json_name = "description"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.CharacterFeature.description");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string source = 4 [json_name = "source"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (!this_._internal_source().empty()) {
      const ::std::string& _s = this_._internal_source();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.CharacterFeature.source");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // int32 level = 5 [json_name = "level"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_level() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
              stream, this_._internal_level(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.CharacterFeature)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CharacterFeature::ByteSizeLong(const MessageLite& base) {
  const CharacterFeature& this_ = static_cast<const CharacterFeature&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CharacterFeature::ByteSizeLong() const {
  const CharacterFeature& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.CharacterFeature)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // string id = 1 [json_name = "id"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_id());
      }
    }
    // string name = 2 [json_name = "name"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string description = 3 [json_name = "description"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // string source = 4 [json_name = "source"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_source().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_source());
      }
    }
    // int32 level = 5 [json_name = "level"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_level() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_level());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CharacterFeature::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CharacterFeature*>(&to_msg);
  auto& from = static_cast<const CharacterFeature&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.CharacterFeature)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_id().empty()) {
        _this->_internal_set_id(from._internal_id());
      } else {
        if (_this->_impl_.id_.IsDefault()) {
          _this->_internal_set_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_source().empty()) {
        _this->_internal_set_source(from._internal_source());
      } else {
        if (_this->_impl_.source_.IsDefault()) {
          _this->_internal_set_source("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_level() != 0) {
        _this->_impl_.level_ = from._impl_.level_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CharacterFeature::CopyFrom(const CharacterFeature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.CharacterFeature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CharacterFeature::InternalSwap(CharacterFeature* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_, &other->_impl_.source_, arena);
  swap(_impl_.level_, other->_impl_.level_);
}

::google::protobuf::Metadata CharacterFeature::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ClassResource::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ClassResource>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ClassResource, _impl_._has_bits_);
};

ClassResource::ClassResource(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ClassResource_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.ClassResource)
}
PROTOBUF_NDEBUG_INLINE ClassResource::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::ClassResource& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_) {}

ClassResource::ClassResource(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ClassResource& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ClassResource_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ClassResource* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, recharge_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::recharge_));

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.ClassResource)
}
PROTOBUF_NDEBUG_INLINE ClassResource::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        name_(arena) {}

inline void ClassResource::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           0,
           offsetof(Impl_, recharge_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::recharge_));
}
ClassResource::~ClassResource() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.ClassResource)
  SharedDtor(*this);
}
inline void ClassResource::SharedDtor(MessageLite& self) {
  ClassResource& this_ = static_cast<ClassResource&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ClassResource::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ClassResource(arena);
}
constexpr auto ClassResource::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ClassResource),
                                            alignof(ClassResource));
}
constexpr auto ClassResource::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ClassResource_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ClassResource::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ClassResource>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ClassResource::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ClassResource>(), &ClassResource::ByteSizeLong,
              &ClassResource::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ClassResource, _impl_._cached_size_),
          false,
      },
      &ClassResource::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ClassResource_class_data_ =
        ClassResource::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ClassResource::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ClassResource_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ClassResource_class_data_.tc_table);
  return ClassResource_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 45, 2>
ClassResource::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ClassResource, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ClassResource_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ClassResource>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .dnd5e.api.v1alpha1.ClassResourceType type = 1 [json_name = "type"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ClassResource, _impl_.type_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(ClassResource, _impl_.type_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ClassResource, _impl_.name_)}},
    // int32 current = 3 [json_name = "current"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ClassResource, _impl_.current_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(ClassResource, _impl_.current_)}},
    // int32 maximum = 4 [json_name = "maximum"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ClassResource, _impl_.maximum_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(ClassResource, _impl_.maximum_)}},
    // .dnd5e.api.v1alpha1.RechargeType recharge = 5 [json_name = "recharge"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ClassResource, _impl_.recharge_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(ClassResource, _impl_.recharge_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.ClassResourceType type = 1 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(ClassResource, _impl_.type_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(ClassResource, _impl_.name_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 current = 3 [json_name = "current"];
    {PROTOBUF_FIELD_OFFSET(ClassResource, _impl_.current_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 maximum = 4 [json_name = "maximum"];
    {PROTOBUF_FIELD_OFFSET(ClassResource, _impl_.maximum_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .dnd5e.api.v1alpha1.RechargeType recharge = 5 [json_name = "recharge"];
    {PROTOBUF_FIELD_OFFSET(ClassResource, _impl_.recharge_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\40\0\4\0\0\0\0\0"
    "dnd5e.api.v1alpha1.ClassResource"
    "name"
  }},
};
PROTOBUF_NOINLINE void ClassResource::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.ClassResource)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x0000001eU) != 0) {
    ::memset(&_impl_.type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.recharge_) -
        reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.recharge_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ClassResource::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ClassResource& this_ = static_cast<const ClassResource&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ClassResource::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ClassResource& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.ClassResource)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .dnd5e.api.v1alpha1.ClassResourceType type = 1 [json_name = "type"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_type(), target);
    }
  }

  // string name = 2 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.ClassResource.name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int32 current = 3 [json_name = "current"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_current() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_current(), target);
    }
  }

  // int32 maximum = 4 [json_name = "maximum"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_maximum() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_maximum(), target);
    }
  }

  // .dnd5e.api.v1alpha1.RechargeType recharge = 5 [json_name = "recharge"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_recharge() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          5, this_._internal_recharge(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.ClassResource)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ClassResource::ByteSizeLong(const MessageLite& base) {
  const ClassResource& this_ = static_cast<const ClassResource&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ClassResource::ByteSizeLong() const {
  const ClassResource& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.ClassResource)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // string name = 2 [json_name = "name"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // .dnd5e.api.v1alpha1.ClassResourceType type = 1 [json_name = "type"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
      }
    }
    // int32 current = 3 [json_name = "current"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_current() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_current());
      }
    }
    // int32 maximum = 4 [json_name = "maximum"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_maximum() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_maximum());
      }
    }
    // .dnd5e.api.v1alpha1.RechargeType recharge = 5 [json_name = "recharge"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_recharge() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_recharge());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ClassResource::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ClassResource*>(&to_msg);
  auto& from = static_cast<const ClassResource&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.ClassResource)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_type() != 0) {
        _this->_impl_.type_ = from._impl_.type_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_current() != 0) {
        _this->_impl_.current_ = from._impl_.current_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_maximum() != 0) {
        _this->_impl_.maximum_ = from._impl_.maximum_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_recharge() != 0) {
        _this->_impl_.recharge_ = from._impl_.recharge_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClassResource::CopyFrom(const ClassResource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.ClassResource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ClassResource::InternalSwap(ClassResource* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ClassResource, _impl_.recharge_)
      + sizeof(ClassResource::_impl_.recharge_)
      - PROTOBUF_FIELD_OFFSET(ClassResource, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::google::protobuf::Metadata ClassResource::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SpellSlots::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SpellSlots>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SpellSlots, _impl_._has_bits_);
};

SpellSlots::SpellSlots(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SpellSlots_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.SpellSlots)
}
SpellSlots::SpellSlots(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SpellSlots& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SpellSlots_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE SpellSlots::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SpellSlots::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, level_1_),
           0,
           offsetof(Impl_, level_9_) -
               offsetof(Impl_, level_1_) +
               sizeof(Impl_::level_9_));
}
SpellSlots::~SpellSlots() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.SpellSlots)
  SharedDtor(*this);
}
inline void SpellSlots::SharedDtor(MessageLite& self) {
  SpellSlots& this_ = static_cast<SpellSlots&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SpellSlots::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SpellSlots(arena);
}
constexpr auto SpellSlots::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SpellSlots),
                                            alignof(SpellSlots));
}
constexpr auto SpellSlots::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SpellSlots_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SpellSlots::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SpellSlots>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SpellSlots::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SpellSlots>(), &SpellSlots::ByteSizeLong,
              &SpellSlots::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SpellSlots, _impl_._cached_size_),
          false,
      },
      &SpellSlots::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SpellSlots_class_data_ =
        SpellSlots::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SpellSlots::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SpellSlots_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SpellSlots_class_data_.tc_table);
  return SpellSlots_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 0, 2>
SpellSlots::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SpellSlots, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SpellSlots_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::SpellSlots>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 level_1 = 1 [json_name = "level1"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpellSlots, _impl_.level_1_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SpellSlots, _impl_.level_1_)}},
    // int32 level_2 = 2 [json_name = "level2"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpellSlots, _impl_.level_2_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(SpellSlots, _impl_.level_2_)}},
    // int32 level_3 = 3 [json_name = "level3"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpellSlots, _impl_.level_3_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(SpellSlots, _impl_.level_3_)}},
    // int32 level_4 = 4 [json_name = "level4"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpellSlots, _impl_.level_4_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(SpellSlots, _impl_.level_4_)}},
    // int32 level_5 = 5 [json_name = "level5"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpellSlots, _impl_.level_5_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(SpellSlots, _impl_.level_5_)}},
    // int32 level_6 = 6 [json_name = "level6"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpellSlots, _impl_.level_6_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(SpellSlots, _impl_.level_6_)}},
    // int32 level_7 = 7 [json_name = "level7"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpellSlots, _impl_.level_7_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(SpellSlots, _impl_.level_7_)}},
    // int32 level_8 = 8 [json_name = "level8"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpellSlots, _impl_.level_8_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(SpellSlots, _impl_.level_8_)}},
    // int32 level_9 = 9 [json_name = "level9"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpellSlots, _impl_.level_9_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(SpellSlots, _impl_.level_9_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 level_1 = 1 [json_name = "level1"];
    {PROTOBUF_FIELD_OFFSET(SpellSlots, _impl_.level_1_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 level_2 = 2 [json_name = "level2"];
    {PROTOBUF_FIELD_OFFSET(SpellSlots, _impl_.level_2_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 level_3 = 3 [json_name = "level3"];
    {PROTOBUF_FIELD_OFFSET(SpellSlots, _impl_.level_3_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 level_4 = 4 [json_name = "level4"];
    {PROTOBUF_FIELD_OFFSET(SpellSlots, _impl_.level_4_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 level_5 = 5 [json_name = "level5"];
    {PROTOBUF_FIELD_OFFSET(SpellSlots, _impl_.level_5_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 level_6 = 6 [json_name = "level6"];
    {PROTOBUF_FIELD_OFFSET(SpellSlots, _impl_.level_6_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 level_7 = 7 [json_name = "level7"];
    {PROTOBUF_FIELD_OFFSET(SpellSlots, _impl_.level_7_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 level_8 = 8 [json_name = "level8"];
    {PROTOBUF_FIELD_OFFSET(SpellSlots, _impl_.level_8_), _Internal::kHasBitsOffset + 7, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 level_9 = 9 [json_name = "level9"];
    {PROTOBUF_FIELD_OFFSET(SpellSlots, _impl_.level_9_), _Internal::kHasBitsOffset + 8, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void SpellSlots::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.SpellSlots)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    ::memset(&_impl_.level_1_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.level_8_) -
        reinterpret_cast<char*>(&_impl_.level_1_)) + sizeof(_impl_.level_8_));
  }
  _impl_.level_9_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SpellSlots::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SpellSlots& this_ = static_cast<const SpellSlots&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SpellSlots::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SpellSlots& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.SpellSlots)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 level_1 = 1 [json_name = "level1"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_level_1() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_level_1(), target);
    }
  }

  // int32 level_2 = 2 [json_name = "level2"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_level_2() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_level_2(), target);
    }
  }

  // int32 level_3 = 3 [json_name = "level3"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_level_3() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_level_3(), target);
    }
  }

  // int32 level_4 = 4 [json_name = "level4"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_level_4() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_level_4(), target);
    }
  }

  // int32 level_5 = 5 [json_name = "level5"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_level_5() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
              stream, this_._internal_level_5(), target);
    }
  }

  // int32 level_6 = 6 [json_name = "level6"];
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (this_._internal_level_6() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<6>(
              stream, this_._internal_level_6(), target);
    }
  }

  // int32 level_7 = 7 [json_name = "level7"];
  if ((this_._impl_._has_bits_[0] & 0x00000040U) != 0) {
    if (this_._internal_level_7() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<7>(
              stream, this_._internal_level_7(), target);
    }
  }

  // int32 level_8 = 8 [json_name = "level8"];
  if ((this_._impl_._has_bits_[0] & 0x00000080U) != 0) {
    if (this_._internal_level_8() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<8>(
              stream, this_._internal_level_8(), target);
    }
  }

  // int32 level_9 = 9 [json_name = "level9"];
  if ((this_._impl_._has_bits_[0] & 0x00000100U) != 0) {
    if (this_._internal_level_9() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<9>(
              stream, this_._internal_level_9(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.SpellSlots)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SpellSlots::ByteSizeLong(const MessageLite& base) {
  const SpellSlots& this_ = static_cast<const SpellSlots&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SpellSlots::ByteSizeLong() const {
  const SpellSlots& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.SpellSlots)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    // int32 level_1 = 1 [json_name = "level1"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_level_1() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_level_1());
      }
    }
    // int32 level_2 = 2 [json_name = "level2"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_level_2() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_level_2());
      }
    }
    // int32 level_3 = 3 [json_name = "level3"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_level_3() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_level_3());
      }
    }
    // int32 level_4 = 4 [json_name = "level4"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_level_4() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_level_4());
      }
    }
    // int32 level_5 = 5 [json_name = "level5"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_level_5() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_level_5());
      }
    }
    // int32 level_6 = 6 [json_name = "level6"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_level_6() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_level_6());
      }
    }
    // int32 level_7 = 7 [json_name = "level7"];
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (this_._internal_level_7() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_level_7());
      }
    }
    // int32 level_8 = 8 [json_name = "level8"];
    if ((cached_has_bits & 0x00000080U) != 0) {
      if (this_._internal_level_8() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_level_8());
      }
    }
  }
   {
    // int32 level_9 = 9 [json_name = "level9"];
    if ((cached_has_bits & 0x00000100U) != 0) {
      if (this_._internal_level_9() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_level_9());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SpellSlots::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SpellSlots*>(&to_msg);
  auto& from = static_cast<const SpellSlots&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.SpellSlots)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (from._internal_level_1() != 0) {
        _this->_impl_.level_1_ = from._impl_.level_1_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_level_2() != 0) {
        _this->_impl_.level_2_ = from._impl_.level_2_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_level_3() != 0) {
        _this->_impl_.level_3_ = from._impl_.level_3_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_level_4() != 0) {
        _this->_impl_.level_4_ = from._impl_.level_4_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_level_5() != 0) {
        _this->_impl_.level_5_ = from._impl_.level_5_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_level_6() != 0) {
        _this->_impl_.level_6_ = from._impl_.level_6_;
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (from._internal_level_7() != 0) {
        _this->_impl_.level_7_ = from._impl_.level_7_;
      }
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      if (from._internal_level_8() != 0) {
        _this->_impl_.level_8_ = from._impl_.level_8_;
      }
    }
  }
  if ((cached_has_bits & 0x00000100U) != 0) {
    if (from._internal_level_9() != 0) {
      _this->_impl_.level_9_ = from._impl_.level_9_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SpellSlots::CopyFrom(const SpellSlots& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.SpellSlots)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SpellSlots::InternalSwap(SpellSlots* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpellSlots, _impl_.level_9_)
      + sizeof(SpellSlots::_impl_.level_9_)
      - PROTOBUF_FIELD_OFFSET(SpellSlots, _impl_.level_1_)>(
          reinterpret_cast<char*>(&_impl_.level_1_),
          reinterpret_cast<char*>(&other->_impl_.level_1_));
}

::google::protobuf::Metadata SpellSlots::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AbilityScores::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<AbilityScores>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AbilityScores, _impl_._has_bits_);
};

AbilityScores::AbilityScores(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AbilityScores_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.AbilityScores)
}
AbilityScores::AbilityScores(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const AbilityScores& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AbilityScores_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE AbilityScores::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void AbilityScores::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, strength_),
           0,
           offsetof(Impl_, charisma_) -
               offsetof(Impl_, strength_) +
               sizeof(Impl_::charisma_));
}
AbilityScores::~AbilityScores() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.AbilityScores)
  SharedDtor(*this);
}
inline void AbilityScores::SharedDtor(MessageLite& self) {
  AbilityScores& this_ = static_cast<AbilityScores&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL AbilityScores::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AbilityScores(arena);
}
constexpr auto AbilityScores::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AbilityScores),
                                            alignof(AbilityScores));
}
constexpr auto AbilityScores::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AbilityScores_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AbilityScores::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AbilityScores>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AbilityScores::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AbilityScores>(), &AbilityScores::ByteSizeLong,
              &AbilityScores::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AbilityScores, _impl_._cached_size_),
          false,
      },
      &AbilityScores::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull AbilityScores_class_data_ =
        AbilityScores::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
AbilityScores::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AbilityScores_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AbilityScores_class_data_.tc_table);
  return AbilityScores_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2>
AbilityScores::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AbilityScores, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    AbilityScores_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::AbilityScores>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 strength = 1 [json_name = "strength"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AbilityScores, _impl_.strength_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AbilityScores, _impl_.strength_)}},
    // int32 dexterity = 2 [json_name = "dexterity"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AbilityScores, _impl_.dexterity_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(AbilityScores, _impl_.dexterity_)}},
    // int32 constitution = 3 [json_name = "constitution"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AbilityScores, _impl_.constitution_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(AbilityScores, _impl_.constitution_)}},
    // int32 intelligence = 4 [json_name = "intelligence"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AbilityScores, _impl_.intelligence_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(AbilityScores, _impl_.intelligence_)}},
    // int32 wisdom = 5 [json_name = "wisdom"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AbilityScores, _impl_.wisdom_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(AbilityScores, _impl_.wisdom_)}},
    // int32 charisma = 6 [json_name = "charisma"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AbilityScores, _impl_.charisma_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(AbilityScores, _impl_.charisma_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 strength = 1 [json_name = "strength"];
    {PROTOBUF_FIELD_OFFSET(AbilityScores, _impl_.strength_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 dexterity = 2 [json_name = "dexterity"];
    {PROTOBUF_FIELD_OFFSET(AbilityScores, _impl_.dexterity_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 constitution = 3 [json_name = "constitution"];
    {PROTOBUF_FIELD_OFFSET(AbilityScores, _impl_.constitution_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 intelligence = 4 [json_name = "intelligence"];
    {PROTOBUF_FIELD_OFFSET(AbilityScores, _impl_.intelligence_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 wisdom = 5 [json_name = "wisdom"];
    {PROTOBUF_FIELD_OFFSET(AbilityScores, _impl_.wisdom_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 charisma = 6 [json_name = "charisma"];
    {PROTOBUF_FIELD_OFFSET(AbilityScores, _impl_.charisma_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void AbilityScores::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.AbilityScores)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    ::memset(&_impl_.strength_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.charisma_) -
        reinterpret_cast<char*>(&_impl_.strength_)) + sizeof(_impl_.charisma_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL AbilityScores::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const AbilityScores& this_ = static_cast<const AbilityScores&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL AbilityScores::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const AbilityScores& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.AbilityScores)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 strength = 1 [json_name = "strength"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_strength() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_strength(), target);
    }
  }

  // int32 dexterity = 2 [json_name = "dexterity"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_dexterity() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_dexterity(), target);
    }
  }

  // int32 constitution = 3 [json_name = "constitution"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_constitution() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_constitution(), target);
    }
  }

  // int32 intelligence = 4 [json_name = "intelligence"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_intelligence() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_intelligence(), target);
    }
  }

  // int32 wisdom = 5 [json_name = "wisdom"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_wisdom() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
              stream, this_._internal_wisdom(), target);
    }
  }

  // int32 charisma = 6 [json_name = "charisma"];
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (this_._internal_charisma() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<6>(
              stream, this_._internal_charisma(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.AbilityScores)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AbilityScores::ByteSizeLong(const MessageLite& base) {
  const AbilityScores& this_ = static_cast<const AbilityScores&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AbilityScores::ByteSizeLong() const {
  const AbilityScores& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.AbilityScores)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    // int32 strength = 1 [json_name = "strength"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_strength() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_strength());
      }
    }
    // int32 dexterity = 2 [json_name = "dexterity"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_dexterity() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_dexterity());
      }
    }
    // int32 constitution = 3 [json_name = "constitution"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_constitution() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_constitution());
      }
    }
    // int32 intelligence = 4 [json_name = "intelligence"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_intelligence() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_intelligence());
      }
    }
    // int32 wisdom = 5 [json_name = "wisdom"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_wisdom() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_wisdom());
      }
    }
    // int32 charisma = 6 [json_name = "charisma"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_charisma() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_charisma());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void AbilityScores::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AbilityScores*>(&to_msg);
  auto& from = static_cast<const AbilityScores&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.AbilityScores)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (from._internal_strength() != 0) {
        _this->_impl_.strength_ = from._impl_.strength_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_dexterity() != 0) {
        _this->_impl_.dexterity_ = from._impl_.dexterity_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_constitution() != 0) {
        _this->_impl_.constitution_ = from._impl_.constitution_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_intelligence() != 0) {
        _this->_impl_.intelligence_ = from._impl_.intelligence_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_wisdom() != 0) {
        _this->_impl_.wisdom_ = from._impl_.wisdom_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_charisma() != 0) {
        _this->_impl_.charisma_ = from._impl_.charisma_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AbilityScores::CopyFrom(const AbilityScores& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.AbilityScores)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AbilityScores::InternalSwap(AbilityScores* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AbilityScores, _impl_.charisma_)
      + sizeof(AbilityScores::_impl_.charisma_)
      - PROTOBUF_FIELD_OFFSET(AbilityScores, _impl_.strength_)>(
          reinterpret_cast<char*>(&_impl_.strength_),
          reinterpret_cast<char*>(&other->_impl_.strength_));
}

::google::protobuf::Metadata AbilityScores::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Character::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Character>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Character, _impl_._has_bits_);
};

Character::Character(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Character_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.Character)
}
PROTOBUF_NDEBUG_INLINE Character::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::Character& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        languages_{visibility, arena, from.languages_},
        _languages_cached_byte_size_{0},
        inventory_{visibility, arena, from.inventory_},
        features_{visibility, arena, from.features_},
        fighting_styles_{visibility, arena, from.fighting_styles_},
        _fighting_styles_cached_byte_size_{0},
        racial_traits_{visibility, arena, from.racial_traits_},
        class_resources_{visibility, arena, from.class_resources_},
        id_(arena, from.id_),
        name_(arena, from.name_),
        session_id_(arena, from.session_id_) {}

Character::Character(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Character& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Character_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Character* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.ability_scores_ = ((cached_has_bits & 0x00000008U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ability_scores_)
                : nullptr;
  _impl_.ability_modifiers_ = ((cached_has_bits & 0x00000010U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ability_modifiers_)
                : nullptr;
  _impl_.combat_stats_ = ((cached_has_bits & 0x00000020U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.combat_stats_)
                : nullptr;
  _impl_.proficiencies_ = ((cached_has_bits & 0x00000040U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.proficiencies_)
                : nullptr;
  _impl_.metadata_ = ((cached_has_bits & 0x00000080U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.metadata_)
                : nullptr;
  _impl_.equipment_slots_ = ((cached_has_bits & 0x00000100U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.equipment_slots_)
                : nullptr;
  _impl_.encumbrance_ = ((cached_has_bits & 0x00000200U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.encumbrance_)
                : nullptr;
  _impl_.background_feature_ = ((cached_has_bits & 0x00000400U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.background_feature_)
                : nullptr;
  _impl_.spell_slots_ = ((cached_has_bits & 0x00000800U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.spell_slots_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, level_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, level_),
           offsetof(Impl_, temporary_hit_points_) -
               offsetof(Impl_, level_) +
               sizeof(Impl_::temporary_hit_points_));

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.Character)
}
PROTOBUF_NDEBUG_INLINE Character::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        languages_{visibility, arena},
        _languages_cached_byte_size_{0},
        inventory_{visibility, arena},
        features_{visibility, arena},
        fighting_styles_{visibility, arena},
        _fighting_styles_cached_byte_size_{0},
        racial_traits_{visibility, arena},
        class_resources_{visibility, arena},
        id_(arena),
        name_(arena),
        session_id_(arena) {}

inline void Character::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ability_scores_),
           0,
           offsetof(Impl_, temporary_hit_points_) -
               offsetof(Impl_, ability_scores_) +
               sizeof(Impl_::temporary_hit_points_));
}
Character::~Character() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.Character)
  SharedDtor(*this);
}
inline void Character::SharedDtor(MessageLite& self) {
  Character& this_ = static_cast<Character&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.session_id_.Destroy();
  delete this_._impl_.ability_scores_;
  delete this_._impl_.ability_modifiers_;
  delete this_._impl_.combat_stats_;
  delete this_._impl_.proficiencies_;
  delete this_._impl_.metadata_;
  delete this_._impl_.equipment_slots_;
  delete this_._impl_.encumbrance_;
  delete this_._impl_.background_feature_;
  delete this_._impl_.spell_slots_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Character::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Character(arena);
}
constexpr auto Character::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Character, _impl_.languages_) +
          decltype(Character::_impl_.languages_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Character, _impl_.inventory_) +
          decltype(Character::_impl_.inventory_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Character, _impl_.features_) +
          decltype(Character::_impl_.features_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Character, _impl_.fighting_styles_) +
          decltype(Character::_impl_.fighting_styles_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Character, _impl_.racial_traits_) +
          decltype(Character::_impl_.racial_traits_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Character, _impl_.class_resources_) +
          decltype(Character::_impl_.class_resources_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Character), alignof(Character), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Character::PlacementNew_,
                                 sizeof(Character),
                                 alignof(Character));
  }
}
constexpr auto Character::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Character_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Character::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Character>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Character::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Character>(), &Character::ByteSizeLong,
              &Character::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Character, _impl_._cached_size_),
          false,
      },
      &Character::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Character_class_data_ =
        Character::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Character::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Character_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Character_class_data_.tc_table);
  return Character_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 27, 13, 77, 2>
Character::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Character, _impl_._has_bits_),
    0, // no _extensions_
    27, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4160749568,  // skipmap
    offsetof(decltype(_table_), field_entries),
    27,  // num_field_entries
    13,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Character_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::Character>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Character, _impl_.id_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Character, _impl_.name_)}},
    // int32 level = 3 [json_name = "level"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Character, _impl_.level_), 12>(),
     {24, 12, 0, PROTOBUF_FIELD_OFFSET(Character, _impl_.level_)}},
    // int32 experience_points = 4 [json_name = "experiencePoints"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Character, _impl_.experience_points_), 13>(),
     {32, 13, 0, PROTOBUF_FIELD_OFFSET(Character, _impl_.experience_points_)}},
    // .dnd5e.api.v1alpha1.Race race = 5 [json_name = "race"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Character, _impl_.race_), 14>(),
     {40, 14, 0, PROTOBUF_FIELD_OFFSET(Character, _impl_.race_)}},
    // .dnd5e.api.v1alpha1.Subrace subrace = 6 [json_name = "subrace"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Character, _impl_.subrace_), 15>(),
     {48, 15, 0, PROTOBUF_FIELD_OFFSET(Character, _impl_.subrace_)}},
    // .dnd5e.api.v1alpha1.Class class = 7 [json_name = "class"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Character, _impl_.class__), 16>(),
     {56, 16, 0, PROTOBUF_FIELD_OFFSET(Character, _impl_.class__)}},
    // .dnd5e.api.v1alpha1.Background background = 8 [json_name = "background"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Character, _impl_.background_), 17>(),
     {64, 17, 0, PROTOBUF_FIELD_OFFSET(Character, _impl_.background_)}},
    // .dnd5e.api.v1alpha1.Alignment alignment = 9 [json_name = "alignment"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Character, _impl_.alignment_), 18>(),
     {72, 18, 0, PROTOBUF_FIELD_OFFSET(Character, _impl_.alignment_)}},
    // .dnd5e.api.v1alpha1.AbilityScores ability_scores = 10 [json_name = "abilityScores"];
    {::_pbi::TcParser::FastMtS1,
     {82, 3, 0, PROTOBUF_FIELD_OFFSET(Character, _impl_.ability_scores_)}},
    // .dnd5e.api.v1alpha1.AbilityModifiers ability_modifiers = 11 [json_name = "abilityModifiers"];
    {::_pbi::TcParser::FastMtS1,
     {90, 4, 1, PROTOBUF_FIELD_OFFSET(Character, _impl_.ability_modifiers_)}},
    // .dnd5e.api.v1alpha1.CombatStats combat_stats = 12 [json_name = "combatStats"];
    {::_pbi::TcParser::FastMtS1,
     {98, 5, 2, PROTOBUF_FIELD_OFFSET(Character, _impl_.combat_stats_)}},
    // .dnd5e.api.v1alpha1.Proficiencies proficiencies = 13 [json_name = "proficiencies"];
    {::_pbi::TcParser::FastMtS1,
     {106, 6, 3, PROTOBUF_FIELD_OFFSET(Character, _impl_.proficiencies_)}},
    // repeated .dnd5e.api.v1alpha1.Language languages = 14 [json_name = "languages"];
    {::_pbi::TcParser::FastV32P1,
     {114, 63, 0, PROTOBUF_FIELD_OFFSET(Character, _impl_.languages_)}},
    // int32 current_hit_points = 15 [json_name = "currentHitPoints"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Character, _impl_.current_hit_points_), 19>(),
     {120, 19, 0, PROTOBUF_FIELD_OFFSET(Character, _impl_.current_hit_points_)}},
    // int32 temporary_hit_points = 16 [json_name = "temporaryHitPoints"];
    {::_pbi::TcParser::FastV32S2,
     {384, 20, 0, PROTOBUF_FIELD_OFFSET(Character, _impl_.temporary_hit_points_)}},
    // string session_id = 17 [json_name = "sessionId"];
    {::_pbi::TcParser::FastUS2,
     {394, 2, 0, PROTOBUF_FIELD_OFFSET(Character, _impl_.session_id_)}},
    // .dnd5e.api.v1alpha1.CharacterMetadata metadata = 18 [json_name = "metadata"];
    {::_pbi::TcParser::FastMtS2,
     {402, 7, 4, PROTOBUF_FIELD_OFFSET(Character, _impl_.metadata_)}},
    // .dnd5e.api.v1alpha1.EquipmentSlots equipment_slots = 19 [json_name = "equipmentSlots"];
    {::_pbi::TcParser::FastMtS2,
     {410, 8, 5, PROTOBUF_FIELD_OFFSET(Character, _impl_.equipment_slots_)}},
    // repeated .dnd5e.api.v1alpha1.InventoryItem inventory = 20 [json_name = "inventory"];
    {::_pbi::TcParser::FastMtR2,
     {418, 63, 6, PROTOBUF_FIELD_OFFSET(Character, _impl_.inventory_)}},
    // .dnd5e.api.v1alpha1.EncumbranceInfo encumbrance = 21 [json_name = "encumbrance"];
    {::_pbi::TcParser::FastMtS2,
     {426, 9, 7, PROTOBUF_FIELD_OFFSET(Character, _impl_.encumbrance_)}},
    // repeated .dnd5e.api.v1alpha1.CharacterFeature features = 22 [json_name = "features"];
    {::_pbi::TcParser::FastMtR2,
     {434, 63, 8, PROTOBUF_FIELD_OFFSET(Character, _impl_.features_)}},
    // repeated .dnd5e.api.v1alpha1.FightingStyle fighting_styles = 23 [json_name = "fightingStyles"];
    {::_pbi::TcParser::FastV32P2,
     {442, 63, 0, PROTOBUF_FIELD_OFFSET(Character, _impl_.fighting_styles_)}},
    // repeated .dnd5e.api.v1alpha1.CharacterFeature racial_traits = 24 [json_name = "racialTraits"];
    {::_pbi::TcParser::FastMtR2,
     {450, 63, 9, PROTOBUF_FIELD_OFFSET(Character, _impl_.racial_traits_)}},
    // .dnd5e.api.v1alpha1.CharacterFeature background_feature = 25 [json_name = "backgroundFeature"];
    {::_pbi::TcParser::FastMtS2,
     {458, 10, 10, PROTOBUF_FIELD_OFFSET(Character, _impl_.background_feature_)}},
    // repeated .dnd5e.api.v1alpha1.ClassResource class_resources = 26 [json_name = "classResources"];
    {::_pbi::TcParser::FastMtR2,
     {466, 63, 11, PROTOBUF_FIELD_OFFSET(Character, _impl_.class_resources_)}},
    // .dnd5e.api.v1alpha1.SpellSlots spell_slots = 27 [json_name = "spellSlots"];
    {::_pbi::TcParser::FastMtS2,
     {474, 11, 12, PROTOBUF_FIELD_OFFSET(Character, _impl_.spell_slots_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(Character, _impl_.id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(Character, _impl_.name_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 level = 3 [json_name = "level"];
    {PROTOBUF_FIELD_OFFSET(Character, _impl_.level_), _Internal::kHasBitsOffset + 12, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 experience_points = 4 [json_name = "experiencePoints"];
    {PROTOBUF_FIELD_OFFSET(Character, _impl_.experience_points_), _Internal::kHasBitsOffset + 13, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .dnd5e.api.v1alpha1.Race race = 5 [json_name = "race"];
    {PROTOBUF_FIELD_OFFSET(Character, _impl_.race_), _Internal::kHasBitsOffset + 14, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.Subrace subrace = 6 [json_name = "subrace"];
    {PROTOBUF_FIELD_OFFSET(Character, _impl_.subrace_), _Internal::kHasBitsOffset + 15, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.Class class = 7 [json_name = "class"];
    {PROTOBUF_FIELD_OFFSET(Character, _impl_.class__), _Internal::kHasBitsOffset + 16, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.Background background = 8 [json_name = "background"];
    {PROTOBUF_FIELD_OFFSET(Character, _impl_.background_), _Internal::kHasBitsOffset + 17, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.Alignment alignment = 9 [json_name = "alignment"];
    {PROTOBUF_FIELD_OFFSET(Character, _impl_.alignment_), _Internal::kHasBitsOffset + 18, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.AbilityScores ability_scores = 10 [json_name = "abilityScores"];
    {PROTOBUF_FIELD_OFFSET(Character, _impl_.ability_scores_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.AbilityModifiers ability_modifiers = 11 [json_name = "abilityModifiers"];
    {PROTOBUF_FIELD_OFFSET(Character, _impl_.ability_modifiers_), _Internal::kHasBitsOffset + 4, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.CombatStats combat_stats = 12 [json_name = "combatStats"];
    {PROTOBUF_FIELD_OFFSET(Character, _impl_.combat_stats_), _Internal::kHasBitsOffset + 5, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.Proficiencies proficiencies = 13 [json_name = "proficiencies"];
    {PROTOBUF_FIELD_OFFSET(Character, _impl_.proficiencies_), _Internal::kHasBitsOffset + 6, 3, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dnd5e.api.v1alpha1.Language languages = 14 [json_name = "languages"];
    {PROTOBUF_FIELD_OFFSET(Character, _impl_.languages_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // int32 current_hit_points = 15 [json_name = "currentHitPoints"];
    {PROTOBUF_FIELD_OFFSET(Character, _impl_.current_hit_points_), _Internal::kHasBitsOffset + 19, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 temporary_hit_points = 16 [json_name = "temporaryHitPoints"];
    {PROTOBUF_FIELD_OFFSET(Character, _impl_.temporary_hit_points_), _Internal::kHasBitsOffset + 20, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string session_id = 17 [json_name = "sessionId"];
    {PROTOBUF_FIELD_OFFSET(Character, _impl_.session_id_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .dnd5e.api.v1alpha1.CharacterMetadata metadata = 18 [json_name = "metadata"];
    {PROTOBUF_FIELD_OFFSET(Character, _impl_.metadata_), _Internal::kHasBitsOffset + 7, 4, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.EquipmentSlots equipment_slots = 19 [json_name = "equipmentSlots"];
    {PROTOBUF_FIELD_OFFSET(Character, _impl_.equipment_slots_), _Internal::kHasBitsOffset + 8, 5, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dnd5e.api.v1alpha1.InventoryItem inventory = 20 [json_name = "inventory"];
    {PROTOBUF_FIELD_OFFSET(Character, _impl_.inventory_), -1, 6, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.EncumbranceInfo encumbrance = 21 [json_name = "encumbrance"];
    {PROTOBUF_FIELD_OFFSET(Character, _impl_.encumbrance_), _Internal::kHasBitsOffset + 9, 7, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dnd5e.api.v1alpha1.CharacterFeature features = 22 [json_name = "features"];
    {PROTOBUF_FIELD_OFFSET(Character, _impl_.features_), -1, 8, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dnd5e.api.v1alpha1.FightingStyle fighting_styles = 23 [json_name = "fightingStyles"];
    {PROTOBUF_FIELD_OFFSET(Character, _impl_.fighting_styles_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated .dnd5e.api.v1alpha1.CharacterFeature racial_traits = 24 [json_name = "racialTraits"];
    {PROTOBUF_FIELD_OFFSET(Character, _impl_.racial_traits_), -1, 9, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.CharacterFeature background_feature = 25 [json_name = "backgroundFeature"];
    {PROTOBUF_FIELD_OFFSET(Character, _impl_.background_feature_), _Internal::kHasBitsOffset + 10, 10, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dnd5e.api.v1alpha1.ClassResource class_resources = 26 [json_name = "classResources"];
    {PROTOBUF_FIELD_OFFSET(Character, _impl_.class_resources_), -1, 11, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.SpellSlots spell_slots = 27 [json_name = "spellSlots"];
    {PROTOBUF_FIELD_OFFSET(Character, _impl_.spell_slots_), _Internal::kHasBitsOffset + 11, 12, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::AbilityScores>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::AbilityModifiers>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CombatStats>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::Proficiencies>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CharacterMetadata>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::EquipmentSlots>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::InventoryItem>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::EncumbranceInfo>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CharacterFeature>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CharacterFeature>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CharacterFeature>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ClassResource>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::SpellSlots>()},
  }},
  {{
    "\34\2\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\12\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.Character"
    "id"
    "name"
    "session_id"
  }},
};
PROTOBUF_NOINLINE void Character::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.Character)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.languages_.Clear();
  _impl_.inventory_.Clear();
  _impl_.features_.Clear();
  _impl_.fighting_styles_.Clear();
  _impl_.racial_traits_.Clear();
  _impl_.class_resources_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.session_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(_impl_.ability_scores_ != nullptr);
      _impl_.ability_scores_->Clear();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(_impl_.ability_modifiers_ != nullptr);
      _impl_.ability_modifiers_->Clear();
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      ABSL_DCHECK(_impl_.combat_stats_ != nullptr);
      _impl_.combat_stats_->Clear();
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      ABSL_DCHECK(_impl_.proficiencies_ != nullptr);
      _impl_.proficiencies_->Clear();
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      ABSL_DCHECK(_impl_.metadata_ != nullptr);
      _impl_.metadata_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000f00U) != 0) {
    if ((cached_has_bits & 0x00000100U) != 0) {
      ABSL_DCHECK(_impl_.equipment_slots_ != nullptr);
      _impl_.equipment_slots_->Clear();
    }
    if ((cached_has_bits & 0x00000200U) != 0) {
      ABSL_DCHECK(_impl_.encumbrance_ != nullptr);
      _impl_.encumbrance_->Clear();
    }
    if ((cached_has_bits & 0x00000400U) != 0) {
      ABSL_DCHECK(_impl_.background_feature_ != nullptr);
      _impl_.background_feature_->Clear();
    }
    if ((cached_has_bits & 0x00000800U) != 0) {
      ABSL_DCHECK(_impl_.spell_slots_ != nullptr);
      _impl_.spell_slots_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000f000U) != 0) {
    ::memset(&_impl_.level_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.subrace_) -
        reinterpret_cast<char*>(&_impl_.level_)) + sizeof(_impl_.subrace_));
  }
  if ((cached_has_bits & 0x001f0000U) != 0) {
    ::memset(&_impl_.class__, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.temporary_hit_points_) -
        reinterpret_cast<char*>(&_impl_.class__)) + sizeof(_impl_.temporary_hit_points_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Character::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Character& this_ = static_cast<const Character&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Character::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Character& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.Character)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1 [json_name = "id"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_id().empty()) {
      const ::std::string& _s = this_._internal_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.Character.id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string name = 2 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.Character.name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int32 level = 3 [json_name = "level"];
  if ((this_._impl_._has_bits_[0] & 0x00001000U) != 0) {
    if (this_._internal_level() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_level(), target);
    }
  }

  // int32 experience_points = 4 [json_name = "experiencePoints"];
  if ((this_._impl_._has_bits_[0] & 0x00002000U) != 0) {
    if (this_._internal_experience_points() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_experience_points(), target);
    }
  }

  // .dnd5e.api.v1alpha1.Race race = 5 [json_name = "race"];
  if ((this_._impl_._has_bits_[0] & 0x00004000U) != 0) {
    if (this_._internal_race() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          5, this_._internal_race(), target);
    }
  }

  // .dnd5e.api.v1alpha1.Subrace subrace = 6 [json_name = "subrace"];
  if ((this_._impl_._has_bits_[0] & 0x00008000U) != 0) {
    if (this_._internal_subrace() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          6, this_._internal_subrace(), target);
    }
  }

  // .dnd5e.api.v1alpha1.Class class = 7 [json_name = "class"];
  if ((this_._impl_._has_bits_[0] & 0x00010000U) != 0) {
    if (this_._internal_class_() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          7, this_._internal_class_(), target);
    }
  }

  // .dnd5e.api.v1alpha1.Background background = 8 [json_name = "background"];
  if ((this_._impl_._has_bits_[0] & 0x00020000U) != 0) {
    if (this_._internal_background() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          8, this_._internal_background(), target);
    }
  }

  // .dnd5e.api.v1alpha1.Alignment alignment = 9 [json_name = "alignment"];
  if ((this_._impl_._has_bits_[0] & 0x00040000U) != 0) {
    if (this_._internal_alignment() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          9, this_._internal_alignment(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.AbilityScores ability_scores = 10 [json_name = "abilityScores"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        10, *this_._impl_.ability_scores_, this_._impl_.ability_scores_->GetCachedSize(), target,
        stream);
  }

  // .dnd5e.api.v1alpha1.AbilityModifiers ability_modifiers = 11 [json_name = "abilityModifiers"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        11, *this_._impl_.ability_modifiers_, this_._impl_.ability_modifiers_->GetCachedSize(), target,
        stream);
  }

  // .dnd5e.api.v1alpha1.CombatStats combat_stats = 12 [json_name = "combatStats"];
  if ((cached_has_bits & 0x00000020U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        12, *this_._impl_.combat_stats_, this_._impl_.combat_stats_->GetCachedSize(), target,
        stream);
  }

  // .dnd5e.api.v1alpha1.Proficiencies proficiencies = 13 [json_name = "proficiencies"];
  if ((cached_has_bits & 0x00000040U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        13, *this_._impl_.proficiencies_, this_._impl_.proficiencies_->GetCachedSize(), target,
        stream);
  }

  // repeated .dnd5e.api.v1alpha1.Language languages = 14 [json_name = "languages"];
  {
    ::size_t byte_size = this_._impl_._languages_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          14, this_._internal_languages(), byte_size, target);
    }
  }

  // int32 current_hit_points = 15 [json_name = "currentHitPoints"];
  if ((cached_has_bits & 0x00080000U) != 0) {
    if (this_._internal_current_hit_points() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<15>(
              stream, this_._internal_current_hit_points(), target);
    }
  }

  // int32 temporary_hit_points = 16 [json_name = "temporaryHitPoints"];
  if ((cached_has_bits & 0x00100000U) != 0) {
    if (this_._internal_temporary_hit_points() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteInt32ToArray(
          16, this_._internal_temporary_hit_points(), target);
    }
  }

  // string session_id = 17 [json_name = "sessionId"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    if (!this_._internal_session_id().empty()) {
      const ::std::string& _s = this_._internal_session_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.Character.session_id");
      target = stream->WriteStringMaybeAliased(17, _s, target);
    }
  }

  // .dnd5e.api.v1alpha1.CharacterMetadata metadata = 18 [json_name = "metadata"];
  if ((cached_has_bits & 0x00000080U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        18, *this_._impl_.metadata_, this_._impl_.metadata_->GetCachedSize(), target,
        stream);
  }

  // .dnd5e.api.v1alpha1.EquipmentSlots equipment_slots = 19 [json_name = "equipmentSlots"];
  if ((cached_has_bits & 0x00000100U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        19, *this_._impl_.equipment_slots_, this_._impl_.equipment_slots_->GetCachedSize(), target,
        stream);
  }

  // repeated .dnd5e.api.v1alpha1.InventoryItem inventory = 20 [json_name = "inventory"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_inventory_size());
       i < n; i++) {
    const auto& repfield = this_._internal_inventory().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            20, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // .dnd5e.api.v1alpha1.EncumbranceInfo encumbrance = 21 [json_name = "encumbrance"];
  if ((cached_has_bits & 0x00000200U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        21, *this_._impl_.encumbrance_, this_._impl_.encumbrance_->GetCachedSize(), target,
        stream);
  }

  // repeated .dnd5e.api.v1alpha1.CharacterFeature features = 22 [json_name = "features"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_features_size());
       i < n; i++) {
    const auto& repfield = this_._internal_features().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            22, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .dnd5e.api.v1alpha1.FightingStyle fighting_styles = 23 [json_name = "fightingStyles"];
  {
    ::size_t byte_size = this_._impl_._fighting_styles_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          23, this_._internal_fighting_styles(), byte_size, target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.CharacterFeature racial_traits = 24 [json_name = "racialTraits"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_racial_traits_size());
       i < n; i++) {
    const auto& repfield = this_._internal_racial_traits().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            24, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // .dnd5e.api.v1alpha1.CharacterFeature background_feature = 25 [json_name = "backgroundFeature"];
  if ((cached_has_bits & 0x00000400U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        25, *this_._impl_.background_feature_, this_._impl_.background_feature_->GetCachedSize(), target,
        stream);
  }

  // repeated .dnd5e.api.v1alpha1.ClassResource class_resources = 26 [json_name = "classResources"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_class_resources_size());
       i < n; i++) {
    const auto& repfield = this_._internal_class_resources().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            26, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // .dnd5e.api.v1alpha1.SpellSlots spell_slots = 27 [json_name = "spellSlots"];
  if ((cached_has_bits & 0x00000800U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        27, *this_._impl_.spell_slots_, this_._impl_.spell_slots_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.Character)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Character::ByteSizeLong(const MessageLite& base) {
  const Character& this_ = static_cast<const Character&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Character::ByteSizeLong() const {
  const Character& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.Character)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.Language languages = 14 [json_name = "languages"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_languages(), 1, this_._impl_._languages_cached_byte_size_);
    }
    // repeated .dnd5e.api.v1alpha1.InventoryItem inventory = 20 [json_name = "inventory"];
    {
      total_size += 2UL * this_._internal_inventory_size();
      for (const auto& msg : this_._internal_inventory()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .dnd5e.api.v1alpha1.CharacterFeature features = 22 [json_name = "features"];
    {
      total_size += 2UL * this_._internal_features_size();
      for (const auto& msg : this_._internal_features()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .dnd5e.api.v1alpha1.FightingStyle fighting_styles = 23 [json_name = "fightingStyles"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_fighting_styles(), 2, this_._impl_._fighting_styles_cached_byte_size_);
    }
    // repeated .dnd5e.api.v1alpha1.CharacterFeature racial_traits = 24 [json_name = "racialTraits"];
    {
      total_size += 2UL * this_._internal_racial_traits_size();
      for (const auto& msg : this_._internal_racial_traits()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .dnd5e.api.v1alpha1.ClassResource class_resources = 26 [json_name = "classResources"];
    {
      total_size += 2UL * this_._internal_class_resources_size();
      for (const auto& msg : this_._internal_class_resources()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    // string id = 1 [json_name = "id"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_id());
      }
    }
    // string name = 2 [json_name = "name"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string session_id = 17 [json_name = "sessionId"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_session_id().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_session_id());
      }
    }
    // .dnd5e.api.v1alpha1.AbilityScores ability_scores = 10 [json_name = "abilityScores"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ability_scores_);
    }
    // .dnd5e.api.v1alpha1.AbilityModifiers ability_modifiers = 11 [json_name = "abilityModifiers"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ability_modifiers_);
    }
    // .dnd5e.api.v1alpha1.CombatStats combat_stats = 12 [json_name = "combatStats"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.combat_stats_);
    }
    // .dnd5e.api.v1alpha1.Proficiencies proficiencies = 13 [json_name = "proficiencies"];
    if ((cached_has_bits & 0x00000040U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.proficiencies_);
    }
    // .dnd5e.api.v1alpha1.CharacterMetadata metadata = 18 [json_name = "metadata"];
    if ((cached_has_bits & 0x00000080U) != 0) {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.metadata_);
    }
  }
  if ((cached_has_bits & 0x0000ff00U) != 0) {
    // .dnd5e.api.v1alpha1.EquipmentSlots equipment_slots = 19 [json_name = "equipmentSlots"];
    if ((cached_has_bits & 0x00000100U) != 0) {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.equipment_slots_);
    }
    // .dnd5e.api.v1alpha1.EncumbranceInfo encumbrance = 21 [json_name = "encumbrance"];
    if ((cached_has_bits & 0x00000200U) != 0) {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.encumbrance_);
    }
    // .dnd5e.api.v1alpha1.CharacterFeature background_feature = 25 [json_name = "backgroundFeature"];
    if ((cached_has_bits & 0x00000400U) != 0) {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.background_feature_);
    }
    // .dnd5e.api.v1alpha1.SpellSlots spell_slots = 27 [json_name = "spellSlots"];
    if ((cached_has_bits & 0x00000800U) != 0) {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.spell_slots_);
    }
    // int32 level = 3 [json_name = "level"];
    if ((cached_has_bits & 0x00001000U) != 0) {
      if (this_._internal_level() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_level());
      }
    }
    // int32 experience_points = 4 [json_name = "experiencePoints"];
    if ((cached_has_bits & 0x00002000U) != 0) {
      if (this_._internal_experience_points() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_experience_points());
      }
    }
    // .dnd5e.api.v1alpha1.Race race = 5 [json_name = "race"];
    if ((cached_has_bits & 0x00004000U) != 0) {
      if (this_._internal_race() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_race());
      }
    }
    // .dnd5e.api.v1alpha1.Subrace subrace = 6 [json_name = "subrace"];
    if ((cached_has_bits & 0x00008000U) != 0) {
      if (this_._internal_subrace() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_subrace());
      }
    }
  }
  if ((cached_has_bits & 0x001f0000U) != 0) {
    // .dnd5e.api.v1alpha1.Class class = 7 [json_name = "class"];
    if ((cached_has_bits & 0x00010000U) != 0) {
      if (this_._internal_class_() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_class_());
      }
    }
    // .dnd5e.api.v1alpha1.Background background = 8 [json_name = "background"];
    if ((cached_has_bits & 0x00020000U) != 0) {
      if (this_._internal_background() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_background());
      }
    }
    // .dnd5e.api.v1alpha1.Alignment alignment = 9 [json_name = "alignment"];
    if ((cached_has_bits & 0x00040000U) != 0) {
      if (this_._internal_alignment() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_alignment());
      }
    }
    // int32 current_hit_points = 15 [json_name = "currentHitPoints"];
    if ((cached_has_bits & 0x00080000U) != 0) {
      if (this_._internal_current_hit_points() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_current_hit_points());
      }
    }
    // int32 temporary_hit_points = 16 [json_name = "temporaryHitPoints"];
    if ((cached_has_bits & 0x00100000U) != 0) {
      if (this_._internal_temporary_hit_points() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                        this_._internal_temporary_hit_points());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Character::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Character*>(&to_msg);
  auto& from = static_cast<const Character&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.Character)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_languages()->MergeFrom(from._internal_languages());
  _this->_internal_mutable_inventory()->MergeFrom(
      from._internal_inventory());
  _this->_internal_mutable_features()->MergeFrom(
      from._internal_features());
  _this->_internal_mutable_fighting_styles()->MergeFrom(from._internal_fighting_styles());
  _this->_internal_mutable_racial_traits()->MergeFrom(
      from._internal_racial_traits());
  _this->_internal_mutable_class_resources()->MergeFrom(
      from._internal_class_resources());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_id().empty()) {
        _this->_internal_set_id(from._internal_id());
      } else {
        if (_this->_impl_.id_.IsDefault()) {
          _this->_internal_set_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_session_id().empty()) {
        _this->_internal_set_session_id(from._internal_session_id());
      } else {
        if (_this->_impl_.session_id_.IsDefault()) {
          _this->_internal_set_session_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(from._impl_.ability_scores_ != nullptr);
      if (_this->_impl_.ability_scores_ == nullptr) {
        _this->_impl_.ability_scores_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ability_scores_);
      } else {
        _this->_impl_.ability_scores_->MergeFrom(*from._impl_.ability_scores_);
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(from._impl_.ability_modifiers_ != nullptr);
      if (_this->_impl_.ability_modifiers_ == nullptr) {
        _this->_impl_.ability_modifiers_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ability_modifiers_);
      } else {
        _this->_impl_.ability_modifiers_->MergeFrom(*from._impl_.ability_modifiers_);
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      ABSL_DCHECK(from._impl_.combat_stats_ != nullptr);
      if (_this->_impl_.combat_stats_ == nullptr) {
        _this->_impl_.combat_stats_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.combat_stats_);
      } else {
        _this->_impl_.combat_stats_->MergeFrom(*from._impl_.combat_stats_);
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      ABSL_DCHECK(from._impl_.proficiencies_ != nullptr);
      if (_this->_impl_.proficiencies_ == nullptr) {
        _this->_impl_.proficiencies_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.proficiencies_);
      } else {
        _this->_impl_.proficiencies_->MergeFrom(*from._impl_.proficiencies_);
      }
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      ABSL_DCHECK(from._impl_.metadata_ != nullptr);
      if (_this->_impl_.metadata_ == nullptr) {
        _this->_impl_.metadata_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.metadata_);
      } else {
        _this->_impl_.metadata_->MergeFrom(*from._impl_.metadata_);
      }
    }
  }
  if ((cached_has_bits & 0x0000ff00U) != 0) {
    if ((cached_has_bits & 0x00000100U) != 0) {
      ABSL_DCHECK(from._impl_.equipment_slots_ != nullptr);
      if (_this->_impl_.equipment_slots_ == nullptr) {
        _this->_impl_.equipment_slots_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.equipment_slots_);
      } else {
        _this->_impl_.equipment_slots_->MergeFrom(*from._impl_.equipment_slots_);
      }
    }
    if ((cached_has_bits & 0x00000200U) != 0) {
      ABSL_DCHECK(from._impl_.encumbrance_ != nullptr);
      if (_this->_impl_.encumbrance_ == nullptr) {
        _this->_impl_.encumbrance_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.encumbrance_);
      } else {
        _this->_impl_.encumbrance_->MergeFrom(*from._impl_.encumbrance_);
      }
    }
    if ((cached_has_bits & 0x00000400U) != 0) {
      ABSL_DCHECK(from._impl_.background_feature_ != nullptr);
      if (_this->_impl_.background_feature_ == nullptr) {
        _this->_impl_.background_feature_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.background_feature_);
      } else {
        _this->_impl_.background_feature_->MergeFrom(*from._impl_.background_feature_);
      }
    }
    if ((cached_has_bits & 0x00000800U) != 0) {
      ABSL_DCHECK(from._impl_.spell_slots_ != nullptr);
      if (_this->_impl_.spell_slots_ == nullptr) {
        _this->_impl_.spell_slots_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.spell_slots_);
      } else {
        _this->_impl_.spell_slots_->MergeFrom(*from._impl_.spell_slots_);
      }
    }
    if ((cached_has_bits & 0x00001000U) != 0) {
      if (from._internal_level() != 0) {
        _this->_impl_.level_ = from._impl_.level_;
      }
    }
    if ((cached_has_bits & 0x00002000U) != 0) {
      if (from._internal_experience_points() != 0) {
        _this->_impl_.experience_points_ = from._impl_.experience_points_;
      }
    }
    if ((cached_has_bits & 0x00004000U) != 0) {
      if (from._internal_race() != 0) {
        _this->_impl_.race_ = from._impl_.race_;
      }
    }
    if ((cached_has_bits & 0x00008000U) != 0) {
      if (from._internal_subrace() != 0) {
        _this->_impl_.subrace_ = from._impl_.subrace_;
      }
    }
  }
  if ((cached_has_bits & 0x001f0000U) != 0) {
    if ((cached_has_bits & 0x00010000U) != 0) {
      if (from._internal_class_() != 0) {
        _this->_impl_.class__ = from._impl_.class__;
      }
    }
    if ((cached_has_bits & 0x00020000U) != 0) {
      if (from._internal_background() != 0) {
        _this->_impl_.background_ = from._impl_.background_;
      }
    }
    if ((cached_has_bits & 0x00040000U) != 0) {
      if (from._internal_alignment() != 0) {
        _this->_impl_.alignment_ = from._impl_.alignment_;
      }
    }
    if ((cached_has_bits & 0x00080000U) != 0) {
      if (from._internal_current_hit_points() != 0) {
        _this->_impl_.current_hit_points_ = from._impl_.current_hit_points_;
      }
    }
    if ((cached_has_bits & 0x00100000U) != 0) {
      if (from._internal_temporary_hit_points() != 0) {
        _this->_impl_.temporary_hit_points_ = from._impl_.temporary_hit_points_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Character::CopyFrom(const Character& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.Character)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Character::InternalSwap(Character* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.languages_.InternalSwap(&other->_impl_.languages_);
  _impl_.inventory_.InternalSwap(&other->_impl_.inventory_);
  _impl_.features_.InternalSwap(&other->_impl_.features_);
  _impl_.fighting_styles_.InternalSwap(&other->_impl_.fighting_styles_);
  _impl_.racial_traits_.InternalSwap(&other->_impl_.racial_traits_);
  _impl_.class_resources_.InternalSwap(&other->_impl_.class_resources_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_id_, &other->_impl_.session_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Character, _impl_.temporary_hit_points_)
      + sizeof(Character::_impl_.temporary_hit_points_)
      - PROTOBUF_FIELD_OFFSET(Character, _impl_.ability_scores_)>(
          reinterpret_cast<char*>(&_impl_.ability_scores_),
          reinterpret_cast<char*>(&other->_impl_.ability_scores_));
}

::google::protobuf::Metadata Character::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AbilityModifiers::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<AbilityModifiers>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AbilityModifiers, _impl_._has_bits_);
};

AbilityModifiers::AbilityModifiers(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AbilityModifiers_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.AbilityModifiers)
}
AbilityModifiers::AbilityModifiers(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const AbilityModifiers& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AbilityModifiers_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE AbilityModifiers::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void AbilityModifiers::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, strength_),
           0,
           offsetof(Impl_, charisma_) -
               offsetof(Impl_, strength_) +
               sizeof(Impl_::charisma_));
}
AbilityModifiers::~AbilityModifiers() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.AbilityModifiers)
  SharedDtor(*this);
}
inline void AbilityModifiers::SharedDtor(MessageLite& self) {
  AbilityModifiers& this_ = static_cast<AbilityModifiers&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL AbilityModifiers::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AbilityModifiers(arena);
}
constexpr auto AbilityModifiers::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AbilityModifiers),
                                            alignof(AbilityModifiers));
}
constexpr auto AbilityModifiers::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AbilityModifiers_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AbilityModifiers::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AbilityModifiers>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AbilityModifiers::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AbilityModifiers>(), &AbilityModifiers::ByteSizeLong,
              &AbilityModifiers::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AbilityModifiers, _impl_._cached_size_),
          false,
      },
      &AbilityModifiers::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull AbilityModifiers_class_data_ =
        AbilityModifiers::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
AbilityModifiers::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AbilityModifiers_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AbilityModifiers_class_data_.tc_table);
  return AbilityModifiers_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2>
AbilityModifiers::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AbilityModifiers, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    AbilityModifiers_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::AbilityModifiers>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 strength = 1 [json_name = "strength"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AbilityModifiers, _impl_.strength_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AbilityModifiers, _impl_.strength_)}},
    // int32 dexterity = 2 [json_name = "dexterity"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AbilityModifiers, _impl_.dexterity_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(AbilityModifiers, _impl_.dexterity_)}},
    // int32 constitution = 3 [json_name = "constitution"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AbilityModifiers, _impl_.constitution_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(AbilityModifiers, _impl_.constitution_)}},
    // int32 intelligence = 4 [json_name = "intelligence"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AbilityModifiers, _impl_.intelligence_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(AbilityModifiers, _impl_.intelligence_)}},
    // int32 wisdom = 5 [json_name = "wisdom"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AbilityModifiers, _impl_.wisdom_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(AbilityModifiers, _impl_.wisdom_)}},
    // int32 charisma = 6 [json_name = "charisma"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AbilityModifiers, _impl_.charisma_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(AbilityModifiers, _impl_.charisma_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 strength = 1 [json_name = "strength"];
    {PROTOBUF_FIELD_OFFSET(AbilityModifiers, _impl_.strength_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 dexterity = 2 [json_name = "dexterity"];
    {PROTOBUF_FIELD_OFFSET(AbilityModifiers, _impl_.dexterity_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 constitution = 3 [json_name = "constitution"];
    {PROTOBUF_FIELD_OFFSET(AbilityModifiers, _impl_.constitution_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 intelligence = 4 [json_name = "intelligence"];
    {PROTOBUF_FIELD_OFFSET(AbilityModifiers, _impl_.intelligence_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 wisdom = 5 [json_name = "wisdom"];
    {PROTOBUF_FIELD_OFFSET(AbilityModifiers, _impl_.wisdom_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 charisma = 6 [json_name = "charisma"];
    {PROTOBUF_FIELD_OFFSET(AbilityModifiers, _impl_.charisma_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void AbilityModifiers::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.AbilityModifiers)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    ::memset(&_impl_.strength_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.charisma_) -
        reinterpret_cast<char*>(&_impl_.strength_)) + sizeof(_impl_.charisma_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL AbilityModifiers::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const AbilityModifiers& this_ = static_cast<const AbilityModifiers&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL AbilityModifiers::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const AbilityModifiers& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.AbilityModifiers)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 strength = 1 [json_name = "strength"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_strength() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_strength(), target);
    }
  }

  // int32 dexterity = 2 [json_name = "dexterity"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_dexterity() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_dexterity(), target);
    }
  }

  // int32 constitution = 3 [json_name = "constitution"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_constitution() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_constitution(), target);
    }
  }

  // int32 intelligence = 4 [json_name = "intelligence"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_intelligence() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_intelligence(), target);
    }
  }

  // int32 wisdom = 5 [json_name = "wisdom"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_wisdom() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
              stream, this_._internal_wisdom(), target);
    }
  }

  // int32 charisma = 6 [json_name = "charisma"];
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (this_._internal_charisma() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<6>(
              stream, this_._internal_charisma(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.AbilityModifiers)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AbilityModifiers::ByteSizeLong(const MessageLite& base) {
  const AbilityModifiers& this_ = static_cast<const AbilityModifiers&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AbilityModifiers::ByteSizeLong() const {
  const AbilityModifiers& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.AbilityModifiers)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    // int32 strength = 1 [json_name = "strength"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_strength() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_strength());
      }
    }
    // int32 dexterity = 2 [json_name = "dexterity"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_dexterity() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_dexterity());
      }
    }
    // int32 constitution = 3 [json_name = "constitution"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_constitution() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_constitution());
      }
    }
    // int32 intelligence = 4 [json_name = "intelligence"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_intelligence() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_intelligence());
      }
    }
    // int32 wisdom = 5 [json_name = "wisdom"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_wisdom() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_wisdom());
      }
    }
    // int32 charisma = 6 [json_name = "charisma"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_charisma() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_charisma());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void AbilityModifiers::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AbilityModifiers*>(&to_msg);
  auto& from = static_cast<const AbilityModifiers&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.AbilityModifiers)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (from._internal_strength() != 0) {
        _this->_impl_.strength_ = from._impl_.strength_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_dexterity() != 0) {
        _this->_impl_.dexterity_ = from._impl_.dexterity_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_constitution() != 0) {
        _this->_impl_.constitution_ = from._impl_.constitution_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_intelligence() != 0) {
        _this->_impl_.intelligence_ = from._impl_.intelligence_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_wisdom() != 0) {
        _this->_impl_.wisdom_ = from._impl_.wisdom_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_charisma() != 0) {
        _this->_impl_.charisma_ = from._impl_.charisma_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AbilityModifiers::CopyFrom(const AbilityModifiers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.AbilityModifiers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AbilityModifiers::InternalSwap(AbilityModifiers* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AbilityModifiers, _impl_.charisma_)
      + sizeof(AbilityModifiers::_impl_.charisma_)
      - PROTOBUF_FIELD_OFFSET(AbilityModifiers, _impl_.strength_)>(
          reinterpret_cast<char*>(&_impl_.strength_),
          reinterpret_cast<char*>(&other->_impl_.strength_));
}

::google::protobuf::Metadata AbilityModifiers::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CombatStats::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CombatStats>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CombatStats, _impl_._has_bits_);
};

CombatStats::CombatStats(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CombatStats_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.CombatStats)
}
PROTOBUF_NDEBUG_INLINE CombatStats::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::CombatStats& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        hit_dice_(arena, from.hit_dice_) {}

CombatStats::CombatStats(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CombatStats& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CombatStats_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CombatStats* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, hit_point_maximum_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, hit_point_maximum_),
           offsetof(Impl_, proficiency_bonus_) -
               offsetof(Impl_, hit_point_maximum_) +
               sizeof(Impl_::proficiency_bonus_));

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.CombatStats)
}
PROTOBUF_NDEBUG_INLINE CombatStats::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        hit_dice_(arena) {}

inline void CombatStats::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, hit_point_maximum_),
           0,
           offsetof(Impl_, proficiency_bonus_) -
               offsetof(Impl_, hit_point_maximum_) +
               sizeof(Impl_::proficiency_bonus_));
}
CombatStats::~CombatStats() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.CombatStats)
  SharedDtor(*this);
}
inline void CombatStats::SharedDtor(MessageLite& self) {
  CombatStats& this_ = static_cast<CombatStats&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.hit_dice_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CombatStats::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CombatStats(arena);
}
constexpr auto CombatStats::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CombatStats),
                                            alignof(CombatStats));
}
constexpr auto CombatStats::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CombatStats_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CombatStats::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CombatStats>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CombatStats::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CombatStats>(), &CombatStats::ByteSizeLong,
              &CombatStats::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CombatStats, _impl_._cached_size_),
          false,
      },
      &CombatStats::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CombatStats_class_data_ =
        CombatStats::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CombatStats::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CombatStats_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CombatStats_class_data_.tc_table);
  return CombatStats_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 47, 2>
CombatStats::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CombatStats, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CombatStats_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CombatStats>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 hit_point_maximum = 1 [json_name = "hitPointMaximum"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CombatStats, _impl_.hit_point_maximum_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CombatStats, _impl_.hit_point_maximum_)}},
    // int32 armor_class = 2 [json_name = "armorClass"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CombatStats, _impl_.armor_class_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(CombatStats, _impl_.armor_class_)}},
    // int32 initiative = 3 [json_name = "initiative"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CombatStats, _impl_.initiative_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(CombatStats, _impl_.initiative_)}},
    // int32 speed = 4 [json_name = "speed"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CombatStats, _impl_.speed_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(CombatStats, _impl_.speed_)}},
    // int32 proficiency_bonus = 5 [json_name = "proficiencyBonus"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CombatStats, _impl_.proficiency_bonus_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(CombatStats, _impl_.proficiency_bonus_)}},
    // string hit_dice = 6 [json_name = "hitDice"];
    {::_pbi::TcParser::FastUS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(CombatStats, _impl_.hit_dice_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 hit_point_maximum = 1 [json_name = "hitPointMaximum"];
    {PROTOBUF_FIELD_OFFSET(CombatStats, _impl_.hit_point_maximum_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 armor_class = 2 [json_name = "armorClass"];
    {PROTOBUF_FIELD_OFFSET(CombatStats, _impl_.armor_class_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 initiative = 3 [json_name = "initiative"];
    {PROTOBUF_FIELD_OFFSET(CombatStats, _impl_.initiative_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 speed = 4 [json_name = "speed"];
    {PROTOBUF_FIELD_OFFSET(CombatStats, _impl_.speed_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 proficiency_bonus = 5 [json_name = "proficiencyBonus"];
    {PROTOBUF_FIELD_OFFSET(CombatStats, _impl_.proficiency_bonus_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string hit_dice = 6 [json_name = "hitDice"];
    {PROTOBUF_FIELD_OFFSET(CombatStats, _impl_.hit_dice_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\0\0\0\0\0\10\0"
    "dnd5e.api.v1alpha1.CombatStats"
    "hit_dice"
  }},
};
PROTOBUF_NOINLINE void CombatStats::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.CombatStats)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.hit_dice_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x0000003eU) != 0) {
    ::memset(&_impl_.hit_point_maximum_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.proficiency_bonus_) -
        reinterpret_cast<char*>(&_impl_.hit_point_maximum_)) + sizeof(_impl_.proficiency_bonus_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CombatStats::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CombatStats& this_ = static_cast<const CombatStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CombatStats::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CombatStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.CombatStats)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 hit_point_maximum = 1 [json_name = "hitPointMaximum"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_hit_point_maximum() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_hit_point_maximum(), target);
    }
  }

  // int32 armor_class = 2 [json_name = "armorClass"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_armor_class() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_armor_class(), target);
    }
  }

  // int32 initiative = 3 [json_name = "initiative"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_initiative() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_initiative(), target);
    }
  }

  // int32 speed = 4 [json_name = "speed"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_speed() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_speed(), target);
    }
  }

  // int32 proficiency_bonus = 5 [json_name = "proficiencyBonus"];
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (this_._internal_proficiency_bonus() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
              stream, this_._internal_proficiency_bonus(), target);
    }
  }

  // string hit_dice = 6 [json_name = "hitDice"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_hit_dice().empty()) {
      const ::std::string& _s = this_._internal_hit_dice();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.CombatStats.hit_dice");
      target = stream->WriteStringMaybeAliased(6, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.CombatStats)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CombatStats::ByteSizeLong(const MessageLite& base) {
  const CombatStats& this_ = static_cast<const CombatStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CombatStats::ByteSizeLong() const {
  const CombatStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.CombatStats)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    // string hit_dice = 6 [json_name = "hitDice"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_hit_dice().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_hit_dice());
      }
    }
    // int32 hit_point_maximum = 1 [json_name = "hitPointMaximum"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_hit_point_maximum() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_hit_point_maximum());
      }
    }
    // int32 armor_class = 2 [json_name = "armorClass"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_armor_class() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_armor_class());
      }
    }
    // int32 initiative = 3 [json_name = "initiative"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_initiative() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_initiative());
      }
    }
    // int32 speed = 4 [json_name = "speed"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_speed() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_speed());
      }
    }
    // int32 proficiency_bonus = 5 [json_name = "proficiencyBonus"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_proficiency_bonus() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_proficiency_bonus());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CombatStats::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CombatStats*>(&to_msg);
  auto& from = static_cast<const CombatStats&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.CombatStats)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_hit_dice().empty()) {
        _this->_internal_set_hit_dice(from._internal_hit_dice());
      } else {
        if (_this->_impl_.hit_dice_.IsDefault()) {
          _this->_internal_set_hit_dice("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_hit_point_maximum() != 0) {
        _this->_impl_.hit_point_maximum_ = from._impl_.hit_point_maximum_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_armor_class() != 0) {
        _this->_impl_.armor_class_ = from._impl_.armor_class_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_initiative() != 0) {
        _this->_impl_.initiative_ = from._impl_.initiative_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_speed() != 0) {
        _this->_impl_.speed_ = from._impl_.speed_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_proficiency_bonus() != 0) {
        _this->_impl_.proficiency_bonus_ = from._impl_.proficiency_bonus_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CombatStats::CopyFrom(const CombatStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.CombatStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CombatStats::InternalSwap(CombatStats* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hit_dice_, &other->_impl_.hit_dice_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CombatStats, _impl_.proficiency_bonus_)
      + sizeof(CombatStats::_impl_.proficiency_bonus_)
      - PROTOBUF_FIELD_OFFSET(CombatStats, _impl_.hit_point_maximum_)>(
          reinterpret_cast<char*>(&_impl_.hit_point_maximum_),
          reinterpret_cast<char*>(&other->_impl_.hit_point_maximum_));
}

::google::protobuf::Metadata CombatStats::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ProficiencyGrants::_Internal {
 public:
};

ProficiencyGrants::ProficiencyGrants(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ProficiencyGrants_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.ProficiencyGrants)
}
PROTOBUF_NDEBUG_INLINE ProficiencyGrants::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::ProficiencyGrants& from_msg)
      : armor_{visibility, arena, from.armor_},
        _armor_cached_byte_size_{0},
        weapons_{visibility, arena, from.weapons_},
        _weapons_cached_byte_size_{0},
        tools_{visibility, arena, from.tools_},
        _tools_cached_byte_size_{0},
        skills_{visibility, arena, from.skills_},
        _skills_cached_byte_size_{0},
        languages_{visibility, arena, from.languages_},
        _languages_cached_byte_size_{0},
        _cached_size_{0} {}

ProficiencyGrants::ProficiencyGrants(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ProficiencyGrants& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ProficiencyGrants_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ProficiencyGrants* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.ProficiencyGrants)
}
PROTOBUF_NDEBUG_INLINE ProficiencyGrants::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : armor_{visibility, arena},
        _armor_cached_byte_size_{0},
        weapons_{visibility, arena},
        _weapons_cached_byte_size_{0},
        tools_{visibility, arena},
        _tools_cached_byte_size_{0},
        skills_{visibility, arena},
        _skills_cached_byte_size_{0},
        languages_{visibility, arena},
        _languages_cached_byte_size_{0},
        _cached_size_{0} {}

inline void ProficiencyGrants::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ProficiencyGrants::~ProficiencyGrants() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.ProficiencyGrants)
  SharedDtor(*this);
}
inline void ProficiencyGrants::SharedDtor(MessageLite& self) {
  ProficiencyGrants& this_ = static_cast<ProficiencyGrants&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ProficiencyGrants::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ProficiencyGrants(arena);
}
constexpr auto ProficiencyGrants::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ProficiencyGrants, _impl_.armor_) +
          decltype(ProficiencyGrants::_impl_.armor_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ProficiencyGrants, _impl_.weapons_) +
          decltype(ProficiencyGrants::_impl_.weapons_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ProficiencyGrants, _impl_.tools_) +
          decltype(ProficiencyGrants::_impl_.tools_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ProficiencyGrants, _impl_.skills_) +
          decltype(ProficiencyGrants::_impl_.skills_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ProficiencyGrants, _impl_.languages_) +
          decltype(ProficiencyGrants::_impl_.languages_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ProficiencyGrants), alignof(ProficiencyGrants), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ProficiencyGrants::PlacementNew_,
                                 sizeof(ProficiencyGrants),
                                 alignof(ProficiencyGrants));
  }
}
constexpr auto ProficiencyGrants::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ProficiencyGrants_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ProficiencyGrants::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ProficiencyGrants>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ProficiencyGrants::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ProficiencyGrants>(), &ProficiencyGrants::ByteSizeLong,
              &ProficiencyGrants::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ProficiencyGrants, _impl_._cached_size_),
          false,
      },
      &ProficiencyGrants::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ProficiencyGrants_class_data_ =
        ProficiencyGrants::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ProficiencyGrants::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ProficiencyGrants_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ProficiencyGrants_class_data_.tc_table);
  return ProficiencyGrants_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2>
ProficiencyGrants::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ProficiencyGrants_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ProficiencyGrants>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .dnd5e.api.v1alpha1.Armor armor = 1 [json_name = "armor"];
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ProficiencyGrants, _impl_.armor_)}},
    // repeated .dnd5e.api.v1alpha1.Weapon weapons = 2 [json_name = "weapons"];
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ProficiencyGrants, _impl_.weapons_)}},
    // repeated .dnd5e.api.v1alpha1.Tool tools = 3 [json_name = "tools"];
    {::_pbi::TcParser::FastV32P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ProficiencyGrants, _impl_.tools_)}},
    // repeated .dnd5e.api.v1alpha1.Skill skills = 4 [json_name = "skills"];
    {::_pbi::TcParser::FastV32P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ProficiencyGrants, _impl_.skills_)}},
    // repeated .dnd5e.api.v1alpha1.Language languages = 5 [json_name = "languages"];
    {::_pbi::TcParser::FastV32P1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(ProficiencyGrants, _impl_.languages_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dnd5e.api.v1alpha1.Armor armor = 1 [json_name = "armor"];
    {PROTOBUF_FIELD_OFFSET(ProficiencyGrants, _impl_.armor_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated .dnd5e.api.v1alpha1.Weapon weapons = 2 [json_name = "weapons"];
    {PROTOBUF_FIELD_OFFSET(ProficiencyGrants, _impl_.weapons_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated .dnd5e.api.v1alpha1.Tool tools = 3 [json_name = "tools"];
    {PROTOBUF_FIELD_OFFSET(ProficiencyGrants, _impl_.tools_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated .dnd5e.api.v1alpha1.Skill skills = 4 [json_name = "skills"];
    {PROTOBUF_FIELD_OFFSET(ProficiencyGrants, _impl_.skills_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated .dnd5e.api.v1alpha1.Language languages = 5 [json_name = "languages"];
    {PROTOBUF_FIELD_OFFSET(ProficiencyGrants, _impl_.languages_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void ProficiencyGrants::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.ProficiencyGrants)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.armor_.Clear();
  _impl_.weapons_.Clear();
  _impl_.tools_.Clear();
  _impl_.skills_.Clear();
  _impl_.languages_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ProficiencyGrants::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ProficiencyGrants& this_ = static_cast<const ProficiencyGrants&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ProficiencyGrants::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ProficiencyGrants& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.ProficiencyGrants)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dnd5e.api.v1alpha1.Armor armor = 1 [json_name = "armor"];
  {
    ::size_t byte_size = this_._impl_._armor_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          1, this_._internal_armor(), byte_size, target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.Weapon weapons = 2 [json_name = "weapons"];
  {
    ::size_t byte_size = this_._impl_._weapons_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          2, this_._internal_weapons(), byte_size, target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.Tool tools = 3 [json_name = "tools"];
  {
    ::size_t byte_size = this_._impl_._tools_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          3, this_._internal_tools(), byte_size, target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.Skill skills = 4 [json_name = "skills"];
  {
    ::size_t byte_size = this_._impl_._skills_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          4, this_._internal_skills(), byte_size, target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.Language languages = 5 [json_name = "languages"];
  {
    ::size_t byte_size = this_._impl_._languages_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          5, this_._internal_languages(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.ProficiencyGrants)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ProficiencyGrants::ByteSizeLong(const MessageLite& base) {
  const ProficiencyGrants& this_ = static_cast<const ProficiencyGrants&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ProficiencyGrants::ByteSizeLong() const {
  const ProficiencyGrants& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.ProficiencyGrants)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.Armor armor = 1 [json_name = "armor"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_armor(), 1, this_._impl_._armor_cached_byte_size_);
    }
    // repeated .dnd5e.api.v1alpha1.Weapon weapons = 2 [json_name = "weapons"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_weapons(), 1, this_._impl_._weapons_cached_byte_size_);
    }
    // repeated .dnd5e.api.v1alpha1.Tool tools = 3 [json_name = "tools"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_tools(), 1, this_._impl_._tools_cached_byte_size_);
    }
    // repeated .dnd5e.api.v1alpha1.Skill skills = 4 [json_name = "skills"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_skills(), 1, this_._impl_._skills_cached_byte_size_);
    }
    // repeated .dnd5e.api.v1alpha1.Language languages = 5 [json_name = "languages"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_languages(), 1, this_._impl_._languages_cached_byte_size_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ProficiencyGrants::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ProficiencyGrants*>(&to_msg);
  auto& from = static_cast<const ProficiencyGrants&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.ProficiencyGrants)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_armor()->MergeFrom(from._internal_armor());
  _this->_internal_mutable_weapons()->MergeFrom(from._internal_weapons());
  _this->_internal_mutable_tools()->MergeFrom(from._internal_tools());
  _this->_internal_mutable_skills()->MergeFrom(from._internal_skills());
  _this->_internal_mutable_languages()->MergeFrom(from._internal_languages());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProficiencyGrants::CopyFrom(const ProficiencyGrants& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.ProficiencyGrants)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ProficiencyGrants::InternalSwap(ProficiencyGrants* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.armor_.InternalSwap(&other->_impl_.armor_);
  _impl_.weapons_.InternalSwap(&other->_impl_.weapons_);
  _impl_.tools_.InternalSwap(&other->_impl_.tools_);
  _impl_.skills_.InternalSwap(&other->_impl_.skills_);
  _impl_.languages_.InternalSwap(&other->_impl_.languages_);
}

::google::protobuf::Metadata ProficiencyGrants::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Proficiencies::_Internal {
 public:
};

Proficiencies::Proficiencies(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Proficiencies_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.Proficiencies)
}
PROTOBUF_NDEBUG_INLINE Proficiencies::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::Proficiencies& from_msg)
      : skills_{visibility, arena, from.skills_},
        _skills_cached_byte_size_{0},
        saving_throws_{visibility, arena, from.saving_throws_},
        _saving_throws_cached_byte_size_{0},
        armor_{visibility, arena, from.armor_},
        _armor_cached_byte_size_{0},
        weapons_{visibility, arena, from.weapons_},
        _weapons_cached_byte_size_{0},
        tools_{visibility, arena, from.tools_},
        _tools_cached_byte_size_{0},
        armor_strings_{visibility, arena, from.armor_strings_},
        weapon_strings_{visibility, arena, from.weapon_strings_},
        tool_strings_{visibility, arena, from.tool_strings_},
        _cached_size_{0} {}

Proficiencies::Proficiencies(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Proficiencies& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Proficiencies_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Proficiencies* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.Proficiencies)
}
PROTOBUF_NDEBUG_INLINE Proficiencies::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : skills_{visibility, arena},
        _skills_cached_byte_size_{0},
        saving_throws_{visibility, arena},
        _saving_throws_cached_byte_size_{0},
        armor_{visibility, arena},
        _armor_cached_byte_size_{0},
        weapons_{visibility, arena},
        _weapons_cached_byte_size_{0},
        tools_{visibility, arena},
        _tools_cached_byte_size_{0},
        armor_strings_{visibility, arena},
        weapon_strings_{visibility, arena},
        tool_strings_{visibility, arena},
        _cached_size_{0} {}

inline void Proficiencies::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Proficiencies::~Proficiencies() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.Proficiencies)
  SharedDtor(*this);
}
inline void Proficiencies::SharedDtor(MessageLite& self) {
  Proficiencies& this_ = static_cast<Proficiencies&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Proficiencies::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Proficiencies(arena);
}
constexpr auto Proficiencies::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Proficiencies, _impl_.skills_) +
          decltype(Proficiencies::_impl_.skills_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Proficiencies, _impl_.saving_throws_) +
          decltype(Proficiencies::_impl_.saving_throws_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Proficiencies, _impl_.armor_) +
          decltype(Proficiencies::_impl_.armor_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Proficiencies, _impl_.weapons_) +
          decltype(Proficiencies::_impl_.weapons_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Proficiencies, _impl_.tools_) +
          decltype(Proficiencies::_impl_.tools_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Proficiencies, _impl_.armor_strings_) +
          decltype(Proficiencies::_impl_.armor_strings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Proficiencies, _impl_.weapon_strings_) +
          decltype(Proficiencies::_impl_.weapon_strings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Proficiencies, _impl_.tool_strings_) +
          decltype(Proficiencies::_impl_.tool_strings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Proficiencies), alignof(Proficiencies), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Proficiencies::PlacementNew_,
                                 sizeof(Proficiencies),
                                 alignof(Proficiencies));
  }
}
constexpr auto Proficiencies::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Proficiencies_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Proficiencies::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Proficiencies>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Proficiencies::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Proficiencies>(), &Proficiencies::ByteSizeLong,
              &Proficiencies::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Proficiencies, _impl_._cached_size_),
          false,
      },
      &Proficiencies::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Proficiencies_class_data_ =
        Proficiencies::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Proficiencies::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Proficiencies_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Proficiencies_class_data_.tc_table);
  return Proficiencies_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 88, 2>
Proficiencies::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Proficiencies_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::Proficiencies>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string tool_strings = 8 [json_name = "toolStrings", deprecated = true];
    {::_pbi::TcParser::FastUR1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(Proficiencies, _impl_.tool_strings_)}},
    // repeated .dnd5e.api.v1alpha1.Skill skills = 1 [json_name = "skills"];
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Proficiencies, _impl_.skills_)}},
    // repeated .dnd5e.api.v1alpha1.Ability saving_throws = 2 [json_name = "savingThrows"];
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Proficiencies, _impl_.saving_throws_)}},
    // repeated .dnd5e.api.v1alpha1.Armor armor = 3 [json_name = "armor"];
    {::_pbi::TcParser::FastV32P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Proficiencies, _impl_.armor_)}},
    // repeated .dnd5e.api.v1alpha1.Weapon weapons = 4 [json_name = "weapons"];
    {::_pbi::TcParser::FastV32P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Proficiencies, _impl_.weapons_)}},
    // repeated .dnd5e.api.v1alpha1.Tool tools = 5 [json_name = "tools"];
    {::_pbi::TcParser::FastV32P1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Proficiencies, _impl_.tools_)}},
    // repeated string armor_strings = 6 [json_name = "armorStrings", deprecated = true];
    {::_pbi::TcParser::FastUR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Proficiencies, _impl_.armor_strings_)}},
    // repeated string weapon_strings = 7 [json_name = "weaponStrings", deprecated = true];
    {::_pbi::TcParser::FastUR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Proficiencies, _impl_.weapon_strings_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dnd5e.api.v1alpha1.Skill skills = 1 [json_name = "skills"];
    {PROTOBUF_FIELD_OFFSET(Proficiencies, _impl_.skills_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated .dnd5e.api.v1alpha1.Ability saving_throws = 2 [json_name = "savingThrows"];
    {PROTOBUF_FIELD_OFFSET(Proficiencies, _impl_.saving_throws_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated .dnd5e.api.v1alpha1.Armor armor = 3 [json_name = "armor"];
    {PROTOBUF_FIELD_OFFSET(Proficiencies, _impl_.armor_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated .dnd5e.api.v1alpha1.Weapon weapons = 4 [json_name = "weapons"];
    {PROTOBUF_FIELD_OFFSET(Proficiencies, _impl_.weapons_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated .dnd5e.api.v1alpha1.Tool tools = 5 [json_name = "tools"];
    {PROTOBUF_FIELD_OFFSET(Proficiencies, _impl_.tools_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated string armor_strings = 6 [json_name = "armorStrings", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(Proficiencies, _impl_.armor_strings_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string weapon_strings = 7 [json_name = "weaponStrings", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(Proficiencies, _impl_.weapon_strings_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string tool_strings = 8 [json_name = "toolStrings", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(Proficiencies, _impl_.tool_strings_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\40\0\0\0\0\0\15\16\14\0\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.Proficiencies"
    "armor_strings"
    "weapon_strings"
    "tool_strings"
  }},
};
PROTOBUF_NOINLINE void Proficiencies::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.Proficiencies)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.skills_.Clear();
  _impl_.saving_throws_.Clear();
  _impl_.armor_.Clear();
  _impl_.weapons_.Clear();
  _impl_.tools_.Clear();
  _impl_.armor_strings_.Clear();
  _impl_.weapon_strings_.Clear();
  _impl_.tool_strings_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Proficiencies::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Proficiencies& this_ = static_cast<const Proficiencies&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Proficiencies::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Proficiencies& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.Proficiencies)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dnd5e.api.v1alpha1.Skill skills = 1 [json_name = "skills"];
  {
    ::size_t byte_size = this_._impl_._skills_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          1, this_._internal_skills(), byte_size, target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.Ability saving_throws = 2 [json_name = "savingThrows"];
  {
    ::size_t byte_size = this_._impl_._saving_throws_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          2, this_._internal_saving_throws(), byte_size, target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.Armor armor = 3 [json_name = "armor"];
  {
    ::size_t byte_size = this_._impl_._armor_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          3, this_._internal_armor(), byte_size, target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.Weapon weapons = 4 [json_name = "weapons"];
  {
    ::size_t byte_size = this_._impl_._weapons_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          4, this_._internal_weapons(), byte_size, target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.Tool tools = 5 [json_name = "tools"];
  {
    ::size_t byte_size = this_._impl_._tools_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          5, this_._internal_tools(), byte_size, target);
    }
  }

  // repeated string armor_strings = 6 [json_name = "armorStrings", deprecated = true];
  for (int i = 0, n = this_._internal_armor_strings_size(); i < n; ++i) {
    const auto& s = this_._internal_armor_strings().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.Proficiencies.armor_strings");
    target = stream->WriteString(6, s, target);
  }

  // repeated string weapon_strings = 7 [json_name = "weaponStrings", deprecated = true];
  for (int i = 0, n = this_._internal_weapon_strings_size(); i < n; ++i) {
    const auto& s = this_._internal_weapon_strings().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.Proficiencies.weapon_strings");
    target = stream->WriteString(7, s, target);
  }

  // repeated string tool_strings = 8 [json_name = "toolStrings", deprecated = true];
  for (int i = 0, n = this_._internal_tool_strings_size(); i < n; ++i) {
    const auto& s = this_._internal_tool_strings().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.Proficiencies.tool_strings");
    target = stream->WriteString(8, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.Proficiencies)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Proficiencies::ByteSizeLong(const MessageLite& base) {
  const Proficiencies& this_ = static_cast<const Proficiencies&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Proficiencies::ByteSizeLong() const {
  const Proficiencies& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.Proficiencies)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.Skill skills = 1 [json_name = "skills"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_skills(), 1, this_._impl_._skills_cached_byte_size_);
    }
    // repeated .dnd5e.api.v1alpha1.Ability saving_throws = 2 [json_name = "savingThrows"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_saving_throws(), 1, this_._impl_._saving_throws_cached_byte_size_);
    }
    // repeated .dnd5e.api.v1alpha1.Armor armor = 3 [json_name = "armor"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_armor(), 1, this_._impl_._armor_cached_byte_size_);
    }
    // repeated .dnd5e.api.v1alpha1.Weapon weapons = 4 [json_name = "weapons"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_weapons(), 1, this_._impl_._weapons_cached_byte_size_);
    }
    // repeated .dnd5e.api.v1alpha1.Tool tools = 5 [json_name = "tools"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_tools(), 1, this_._impl_._tools_cached_byte_size_);
    }
    // repeated string armor_strings = 6 [json_name = "armorStrings", deprecated = true];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_armor_strings().size());
      for (int i = 0, n = this_._internal_armor_strings().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_armor_strings().Get(i));
      }
    }
    // repeated string weapon_strings = 7 [json_name = "weaponStrings", deprecated = true];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_weapon_strings().size());
      for (int i = 0, n = this_._internal_weapon_strings().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_weapon_strings().Get(i));
      }
    }
    // repeated string tool_strings = 8 [json_name = "toolStrings", deprecated = true];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_tool_strings().size());
      for (int i = 0, n = this_._internal_tool_strings().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_tool_strings().Get(i));
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Proficiencies::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Proficiencies*>(&to_msg);
  auto& from = static_cast<const Proficiencies&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.Proficiencies)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_skills()->MergeFrom(from._internal_skills());
  _this->_internal_mutable_saving_throws()->MergeFrom(from._internal_saving_throws());
  _this->_internal_mutable_armor()->MergeFrom(from._internal_armor());
  _this->_internal_mutable_weapons()->MergeFrom(from._internal_weapons());
  _this->_internal_mutable_tools()->MergeFrom(from._internal_tools());
  _this->_internal_mutable_armor_strings()->MergeFrom(from._internal_armor_strings());
  _this->_internal_mutable_weapon_strings()->MergeFrom(from._internal_weapon_strings());
  _this->_internal_mutable_tool_strings()->MergeFrom(from._internal_tool_strings());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Proficiencies::CopyFrom(const Proficiencies& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.Proficiencies)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Proficiencies::InternalSwap(Proficiencies* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.skills_.InternalSwap(&other->_impl_.skills_);
  _impl_.saving_throws_.InternalSwap(&other->_impl_.saving_throws_);
  _impl_.armor_.InternalSwap(&other->_impl_.armor_);
  _impl_.weapons_.InternalSwap(&other->_impl_.weapons_);
  _impl_.tools_.InternalSwap(&other->_impl_.tools_);
  _impl_.armor_strings_.InternalSwap(&other->_impl_.armor_strings_);
  _impl_.weapon_strings_.InternalSwap(&other->_impl_.weapon_strings_);
  _impl_.tool_strings_.InternalSwap(&other->_impl_.tool_strings_);
}

::google::protobuf::Metadata Proficiencies::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CharacterMetadata::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CharacterMetadata>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CharacterMetadata, _impl_._has_bits_);
};

CharacterMetadata::CharacterMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CharacterMetadata_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.CharacterMetadata)
}
PROTOBUF_NDEBUG_INLINE CharacterMetadata::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::CharacterMetadata& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        player_id_(arena, from.player_id_) {}

CharacterMetadata::CharacterMetadata(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CharacterMetadata& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CharacterMetadata_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CharacterMetadata* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, created_at_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, created_at_),
           offsetof(Impl_, updated_at_) -
               offsetof(Impl_, created_at_) +
               sizeof(Impl_::updated_at_));

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.CharacterMetadata)
}
PROTOBUF_NDEBUG_INLINE CharacterMetadata::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        player_id_(arena) {}

inline void CharacterMetadata::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, created_at_),
           0,
           offsetof(Impl_, updated_at_) -
               offsetof(Impl_, created_at_) +
               sizeof(Impl_::updated_at_));
}
CharacterMetadata::~CharacterMetadata() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.CharacterMetadata)
  SharedDtor(*this);
}
inline void CharacterMetadata::SharedDtor(MessageLite& self) {
  CharacterMetadata& this_ = static_cast<CharacterMetadata&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.player_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CharacterMetadata::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CharacterMetadata(arena);
}
constexpr auto CharacterMetadata::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CharacterMetadata),
                                            alignof(CharacterMetadata));
}
constexpr auto CharacterMetadata::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CharacterMetadata_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CharacterMetadata::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CharacterMetadata>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CharacterMetadata::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CharacterMetadata>(), &CharacterMetadata::ByteSizeLong,
              &CharacterMetadata::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CharacterMetadata, _impl_._cached_size_),
          false,
      },
      &CharacterMetadata::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CharacterMetadata_class_data_ =
        CharacterMetadata::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CharacterMetadata::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CharacterMetadata_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CharacterMetadata_class_data_.tc_table);
  return CharacterMetadata_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 54, 2>
CharacterMetadata::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CharacterMetadata, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CharacterMetadata_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CharacterMetadata>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 created_at = 1 [json_name = "createdAt"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CharacterMetadata, _impl_.created_at_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CharacterMetadata, _impl_.created_at_)}},
    // int64 updated_at = 2 [json_name = "updatedAt"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CharacterMetadata, _impl_.updated_at_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(CharacterMetadata, _impl_.updated_at_)}},
    // string player_id = 3 [json_name = "playerId"];
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CharacterMetadata, _impl_.player_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 created_at = 1 [json_name = "createdAt"];
    {PROTOBUF_FIELD_OFFSET(CharacterMetadata, _impl_.created_at_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 updated_at = 2 [json_name = "updatedAt"];
    {PROTOBUF_FIELD_OFFSET(CharacterMetadata, _impl_.updated_at_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // string player_id = 3 [json_name = "playerId"];
    {PROTOBUF_FIELD_OFFSET(CharacterMetadata, _impl_.player_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\0\0\11\0\0\0\0"
    "dnd5e.api.v1alpha1.CharacterMetadata"
    "player_id"
  }},
};
PROTOBUF_NOINLINE void CharacterMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.CharacterMetadata)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.player_id_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x00000006U) != 0) {
    ::memset(&_impl_.created_at_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.updated_at_) -
        reinterpret_cast<char*>(&_impl_.created_at_)) + sizeof(_impl_.updated_at_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CharacterMetadata::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CharacterMetadata& this_ = static_cast<const CharacterMetadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CharacterMetadata::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CharacterMetadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.CharacterMetadata)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 created_at = 1 [json_name = "createdAt"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_created_at() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_created_at(), target);
    }
  }

  // int64 updated_at = 2 [json_name = "updatedAt"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_updated_at() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
              stream, this_._internal_updated_at(), target);
    }
  }

  // string player_id = 3 [json_name = "playerId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_player_id().empty()) {
      const ::std::string& _s = this_._internal_player_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.CharacterMetadata.player_id");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.CharacterMetadata)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CharacterMetadata::ByteSizeLong(const MessageLite& base) {
  const CharacterMetadata& this_ = static_cast<const CharacterMetadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CharacterMetadata::ByteSizeLong() const {
  const CharacterMetadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.CharacterMetadata)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string player_id = 3 [json_name = "playerId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_player_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_player_id());
      }
    }
    // int64 created_at = 1 [json_name = "createdAt"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_created_at() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_created_at());
      }
    }
    // int64 updated_at = 2 [json_name = "updatedAt"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_updated_at() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_updated_at());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CharacterMetadata::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CharacterMetadata*>(&to_msg);
  auto& from = static_cast<const CharacterMetadata&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.CharacterMetadata)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_player_id().empty()) {
        _this->_internal_set_player_id(from._internal_player_id());
      } else {
        if (_this->_impl_.player_id_.IsDefault()) {
          _this->_internal_set_player_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_created_at() != 0) {
        _this->_impl_.created_at_ = from._impl_.created_at_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_updated_at() != 0) {
        _this->_impl_.updated_at_ = from._impl_.updated_at_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CharacterMetadata::CopyFrom(const CharacterMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.CharacterMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CharacterMetadata::InternalSwap(CharacterMetadata* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.player_id_, &other->_impl_.player_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CharacterMetadata, _impl_.updated_at_)
      + sizeof(CharacterMetadata::_impl_.updated_at_)
      - PROTOBUF_FIELD_OFFSET(CharacterMetadata, _impl_.created_at_)>(
          reinterpret_cast<char*>(&_impl_.created_at_),
          reinterpret_cast<char*>(&other->_impl_.created_at_));
}

::google::protobuf::Metadata CharacterMetadata::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetCharacterRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetCharacterRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetCharacterRequest, _impl_._has_bits_);
};

GetCharacterRequest::GetCharacterRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetCharacterRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.GetCharacterRequest)
}
PROTOBUF_NDEBUG_INLINE GetCharacterRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::GetCharacterRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        character_id_(arena, from.character_id_) {}

GetCharacterRequest::GetCharacterRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetCharacterRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetCharacterRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetCharacterRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.GetCharacterRequest)
}
PROTOBUF_NDEBUG_INLINE GetCharacterRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        character_id_(arena) {}

inline void GetCharacterRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetCharacterRequest::~GetCharacterRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.GetCharacterRequest)
  SharedDtor(*this);
}
inline void GetCharacterRequest::SharedDtor(MessageLite& self) {
  GetCharacterRequest& this_ = static_cast<GetCharacterRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.character_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetCharacterRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetCharacterRequest(arena);
}
constexpr auto GetCharacterRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetCharacterRequest),
                                            alignof(GetCharacterRequest));
}
constexpr auto GetCharacterRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetCharacterRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetCharacterRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetCharacterRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetCharacterRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetCharacterRequest>(), &GetCharacterRequest::ByteSizeLong,
              &GetCharacterRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetCharacterRequest, _impl_._cached_size_),
          false,
      },
      &GetCharacterRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetCharacterRequest_class_data_ =
        GetCharacterRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetCharacterRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetCharacterRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetCharacterRequest_class_data_.tc_table);
  return GetCharacterRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 59, 2>
GetCharacterRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetCharacterRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetCharacterRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::GetCharacterRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string character_id = 1 [json_name = "characterId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetCharacterRequest, _impl_.character_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string character_id = 1 [json_name = "characterId"];
    {PROTOBUF_FIELD_OFFSET(GetCharacterRequest, _impl_.character_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\46\14\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.GetCharacterRequest"
    "character_id"
  }},
};
PROTOBUF_NOINLINE void GetCharacterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.GetCharacterRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.character_id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetCharacterRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetCharacterRequest& this_ = static_cast<const GetCharacterRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetCharacterRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetCharacterRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.GetCharacterRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string character_id = 1 [json_name = "characterId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_character_id().empty()) {
      const ::std::string& _s = this_._internal_character_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.GetCharacterRequest.character_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.GetCharacterRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetCharacterRequest::ByteSizeLong(const MessageLite& base) {
  const GetCharacterRequest& this_ = static_cast<const GetCharacterRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetCharacterRequest::ByteSizeLong() const {
  const GetCharacterRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.GetCharacterRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string character_id = 1 [json_name = "characterId"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_character_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_character_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetCharacterRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetCharacterRequest*>(&to_msg);
  auto& from = static_cast<const GetCharacterRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.GetCharacterRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!from._internal_character_id().empty()) {
      _this->_internal_set_character_id(from._internal_character_id());
    } else {
      if (_this->_impl_.character_id_.IsDefault()) {
        _this->_internal_set_character_id("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetCharacterRequest::CopyFrom(const GetCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.GetCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetCharacterRequest::InternalSwap(GetCharacterRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.character_id_, &other->_impl_.character_id_, arena);
}

::google::protobuf::Metadata GetCharacterRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetCharacterResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetCharacterResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetCharacterResponse, _impl_._has_bits_);
};

GetCharacterResponse::GetCharacterResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetCharacterResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.GetCharacterResponse)
}
PROTOBUF_NDEBUG_INLINE GetCharacterResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::GetCharacterResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetCharacterResponse::GetCharacterResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetCharacterResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetCharacterResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetCharacterResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.character_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.character_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.GetCharacterResponse)
}
PROTOBUF_NDEBUG_INLINE GetCharacterResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void GetCharacterResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.character_ = {};
}
GetCharacterResponse::~GetCharacterResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.GetCharacterResponse)
  SharedDtor(*this);
}
inline void GetCharacterResponse::SharedDtor(MessageLite& self) {
  GetCharacterResponse& this_ = static_cast<GetCharacterResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.character_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetCharacterResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetCharacterResponse(arena);
}
constexpr auto GetCharacterResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetCharacterResponse),
                                            alignof(GetCharacterResponse));
}
constexpr auto GetCharacterResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetCharacterResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetCharacterResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetCharacterResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetCharacterResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetCharacterResponse>(), &GetCharacterResponse::ByteSizeLong,
              &GetCharacterResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetCharacterResponse, _impl_._cached_size_),
          false,
      },
      &GetCharacterResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetCharacterResponse_class_data_ =
        GetCharacterResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetCharacterResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetCharacterResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetCharacterResponse_class_data_.tc_table);
  return GetCharacterResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
GetCharacterResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetCharacterResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetCharacterResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::GetCharacterResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .dnd5e.api.v1alpha1.Character character = 1 [json_name = "character"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetCharacterResponse, _impl_.character_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.Character character = 1 [json_name = "character"];
    {PROTOBUF_FIELD_OFFSET(GetCharacterResponse, _impl_.character_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::Character>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void GetCharacterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.GetCharacterResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.character_ != nullptr);
    _impl_.character_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetCharacterResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetCharacterResponse& this_ = static_cast<const GetCharacterResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetCharacterResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetCharacterResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.GetCharacterResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.Character character = 1 [json_name = "character"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.character_, this_._impl_.character_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.GetCharacterResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetCharacterResponse::ByteSizeLong(const MessageLite& base) {
  const GetCharacterResponse& this_ = static_cast<const GetCharacterResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetCharacterResponse::ByteSizeLong() const {
  const GetCharacterResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.GetCharacterResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .dnd5e.api.v1alpha1.Character character = 1 [json_name = "character"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.character_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetCharacterResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetCharacterResponse*>(&to_msg);
  auto& from = static_cast<const GetCharacterResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.GetCharacterResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(from._impl_.character_ != nullptr);
    if (_this->_impl_.character_ == nullptr) {
      _this->_impl_.character_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.character_);
    } else {
      _this->_impl_.character_->MergeFrom(*from._impl_.character_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetCharacterResponse::CopyFrom(const GetCharacterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.GetCharacterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetCharacterResponse::InternalSwap(GetCharacterResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.character_, other->_impl_.character_);
}

::google::protobuf::Metadata GetCharacterResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListCharactersRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ListCharactersRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ListCharactersRequest, _impl_._has_bits_);
};

ListCharactersRequest::ListCharactersRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListCharactersRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.ListCharactersRequest)
}
PROTOBUF_NDEBUG_INLINE ListCharactersRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::ListCharactersRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        page_token_(arena, from.page_token_),
        session_id_(arena, from.session_id_),
        player_id_(arena, from.player_id_) {}

ListCharactersRequest::ListCharactersRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ListCharactersRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListCharactersRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListCharactersRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.page_size_ = from._impl_.page_size_;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.ListCharactersRequest)
}
PROTOBUF_NDEBUG_INLINE ListCharactersRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        page_token_(arena),
        session_id_(arena),
        player_id_(arena) {}

inline void ListCharactersRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.page_size_ = {};
}
ListCharactersRequest::~ListCharactersRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.ListCharactersRequest)
  SharedDtor(*this);
}
inline void ListCharactersRequest::SharedDtor(MessageLite& self) {
  ListCharactersRequest& this_ = static_cast<ListCharactersRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.page_token_.Destroy();
  this_._impl_.session_id_.Destroy();
  this_._impl_.player_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ListCharactersRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ListCharactersRequest(arena);
}
constexpr auto ListCharactersRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ListCharactersRequest),
                                            alignof(ListCharactersRequest));
}
constexpr auto ListCharactersRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ListCharactersRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ListCharactersRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ListCharactersRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ListCharactersRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ListCharactersRequest>(), &ListCharactersRequest::ByteSizeLong,
              &ListCharactersRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ListCharactersRequest, _impl_._cached_size_),
          false,
      },
      &ListCharactersRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ListCharactersRequest_class_data_ =
        ListCharactersRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ListCharactersRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ListCharactersRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ListCharactersRequest_class_data_.tc_table);
  return ListCharactersRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 78, 2>
ListCharactersRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ListCharactersRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ListCharactersRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ListCharactersRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string player_id = 4 [json_name = "playerId"];
    {::_pbi::TcParser::FastUS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(ListCharactersRequest, _impl_.player_id_)}},
    // int32 page_size = 1 [json_name = "pageSize"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListCharactersRequest, _impl_.page_size_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(ListCharactersRequest, _impl_.page_size_)}},
    // string page_token = 2 [json_name = "pageToken"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ListCharactersRequest, _impl_.page_token_)}},
    // string session_id = 3 [json_name = "sessionId"];
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(ListCharactersRequest, _impl_.session_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 page_size = 1 [json_name = "pageSize"];
    {PROTOBUF_FIELD_OFFSET(ListCharactersRequest, _impl_.page_size_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string page_token = 2 [json_name = "pageToken"];
    {PROTOBUF_FIELD_OFFSET(ListCharactersRequest, _impl_.page_token_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string session_id = 3 [json_name = "sessionId"];
    {PROTOBUF_FIELD_OFFSET(ListCharactersRequest, _impl_.session_id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string player_id = 4 [json_name = "playerId"];
    {PROTOBUF_FIELD_OFFSET(ListCharactersRequest, _impl_.player_id_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\50\0\12\12\11\0\0\0"
    "dnd5e.api.v1alpha1.ListCharactersRequest"
    "page_token"
    "session_id"
    "player_id"
  }},
};
PROTOBUF_NOINLINE void ListCharactersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.ListCharactersRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.page_token_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.session_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.player_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.page_size_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ListCharactersRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ListCharactersRequest& this_ = static_cast<const ListCharactersRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ListCharactersRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ListCharactersRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.ListCharactersRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 page_size = 1 [json_name = "pageSize"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_page_size() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_page_size(), target);
    }
  }

  // string page_token = 2 [json_name = "pageToken"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_page_token().empty()) {
      const ::std::string& _s = this_._internal_page_token();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.ListCharactersRequest.page_token");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string session_id = 3 [json_name = "sessionId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_session_id().empty()) {
      const ::std::string& _s = this_._internal_session_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.ListCharactersRequest.session_id");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string player_id = 4 [json_name = "playerId"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_player_id().empty()) {
      const ::std::string& _s = this_._internal_player_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.ListCharactersRequest.player_id");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.ListCharactersRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ListCharactersRequest::ByteSizeLong(const MessageLite& base) {
  const ListCharactersRequest& this_ = static_cast<const ListCharactersRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ListCharactersRequest::ByteSizeLong() const {
  const ListCharactersRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.ListCharactersRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string page_token = 2 [json_name = "pageToken"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_page_token().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_page_token());
      }
    }
    // string session_id = 3 [json_name = "sessionId"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_session_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_session_id());
      }
    }
    // string player_id = 4 [json_name = "playerId"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_player_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_player_id());
      }
    }
    // int32 page_size = 1 [json_name = "pageSize"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_page_size() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_page_size());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ListCharactersRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListCharactersRequest*>(&to_msg);
  auto& from = static_cast<const ListCharactersRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.ListCharactersRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_page_token().empty()) {
        _this->_internal_set_page_token(from._internal_page_token());
      } else {
        if (_this->_impl_.page_token_.IsDefault()) {
          _this->_internal_set_page_token("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_session_id().empty()) {
        _this->_internal_set_session_id(from._internal_session_id());
      } else {
        if (_this->_impl_.session_id_.IsDefault()) {
          _this->_internal_set_session_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_player_id().empty()) {
        _this->_internal_set_player_id(from._internal_player_id());
      } else {
        if (_this->_impl_.player_id_.IsDefault()) {
          _this->_internal_set_player_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_page_size() != 0) {
        _this->_impl_.page_size_ = from._impl_.page_size_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListCharactersRequest::CopyFrom(const ListCharactersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.ListCharactersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListCharactersRequest::InternalSwap(ListCharactersRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.page_token_, &other->_impl_.page_token_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_id_, &other->_impl_.session_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.player_id_, &other->_impl_.player_id_, arena);
  swap(_impl_.page_size_, other->_impl_.page_size_);
}

::google::protobuf::Metadata ListCharactersRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListCharactersResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ListCharactersResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ListCharactersResponse, _impl_._has_bits_);
};

ListCharactersResponse::ListCharactersResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListCharactersResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.ListCharactersResponse)
}
PROTOBUF_NDEBUG_INLINE ListCharactersResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::ListCharactersResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        characters_{visibility, arena, from.characters_},
        next_page_token_(arena, from.next_page_token_) {}

ListCharactersResponse::ListCharactersResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ListCharactersResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListCharactersResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListCharactersResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.total_size_ = from._impl_.total_size_;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.ListCharactersResponse)
}
PROTOBUF_NDEBUG_INLINE ListCharactersResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        characters_{visibility, arena},
        next_page_token_(arena) {}

inline void ListCharactersResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.total_size_ = {};
}
ListCharactersResponse::~ListCharactersResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.ListCharactersResponse)
  SharedDtor(*this);
}
inline void ListCharactersResponse::SharedDtor(MessageLite& self) {
  ListCharactersResponse& this_ = static_cast<ListCharactersResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.next_page_token_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ListCharactersResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ListCharactersResponse(arena);
}
constexpr auto ListCharactersResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ListCharactersResponse, _impl_.characters_) +
          decltype(ListCharactersResponse::_impl_.characters_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ListCharactersResponse), alignof(ListCharactersResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ListCharactersResponse::PlacementNew_,
                                 sizeof(ListCharactersResponse),
                                 alignof(ListCharactersResponse));
  }
}
constexpr auto ListCharactersResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ListCharactersResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ListCharactersResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ListCharactersResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ListCharactersResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ListCharactersResponse>(), &ListCharactersResponse::ByteSizeLong,
              &ListCharactersResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ListCharactersResponse, _impl_._cached_size_),
          false,
      },
      &ListCharactersResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ListCharactersResponse_class_data_ =
        ListCharactersResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ListCharactersResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ListCharactersResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ListCharactersResponse_class_data_.tc_table);
  return ListCharactersResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 65, 2>
ListCharactersResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ListCharactersResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ListCharactersResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ListCharactersResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .dnd5e.api.v1alpha1.Character characters = 1 [json_name = "characters"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListCharactersResponse, _impl_.characters_)}},
    // string next_page_token = 2 [json_name = "nextPageToken"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ListCharactersResponse, _impl_.next_page_token_)}},
    // int32 total_size = 3 [json_name = "totalSize"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListCharactersResponse, _impl_.total_size_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(ListCharactersResponse, _impl_.total_size_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dnd5e.api.v1alpha1.Character characters = 1 [json_name = "characters"];
    {PROTOBUF_FIELD_OFFSET(ListCharactersResponse, _impl_.characters_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string next_page_token = 2 [json_name = "nextPageToken"];
    {PROTOBUF_FIELD_OFFSET(ListCharactersResponse, _impl_.next_page_token_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 total_size = 3 [json_name = "totalSize"];
    {PROTOBUF_FIELD_OFFSET(ListCharactersResponse, _impl_.total_size_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::Character>()},
  }},
  {{
    "\51\0\17\0\0\0\0\0"
    "dnd5e.api.v1alpha1.ListCharactersResponse"
    "next_page_token"
  }},
};
PROTOBUF_NOINLINE void ListCharactersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.ListCharactersResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.characters_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.next_page_token_.ClearNonDefaultToEmpty();
  }
  _impl_.total_size_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ListCharactersResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ListCharactersResponse& this_ = static_cast<const ListCharactersResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ListCharactersResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ListCharactersResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.ListCharactersResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dnd5e.api.v1alpha1.Character characters = 1 [json_name = "characters"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_characters_size());
       i < n; i++) {
    const auto& repfield = this_._internal_characters().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // string next_page_token = 2 [json_name = "nextPageToken"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_next_page_token().empty()) {
      const ::std::string& _s = this_._internal_next_page_token();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.ListCharactersResponse.next_page_token");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int32 total_size = 3 [json_name = "totalSize"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_total_size() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_total_size(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.ListCharactersResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ListCharactersResponse::ByteSizeLong(const MessageLite& base) {
  const ListCharactersResponse& this_ = static_cast<const ListCharactersResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ListCharactersResponse::ByteSizeLong() const {
  const ListCharactersResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.ListCharactersResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.Character characters = 1 [json_name = "characters"];
    {
      total_size += 1UL * this_._internal_characters_size();
      for (const auto& msg : this_._internal_characters()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string next_page_token = 2 [json_name = "nextPageToken"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_next_page_token().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_next_page_token());
      }
    }
    // int32 total_size = 3 [json_name = "totalSize"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_total_size() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_total_size());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ListCharactersResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListCharactersResponse*>(&to_msg);
  auto& from = static_cast<const ListCharactersResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.ListCharactersResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_characters()->MergeFrom(
      from._internal_characters());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_next_page_token().empty()) {
        _this->_internal_set_next_page_token(from._internal_next_page_token());
      } else {
        if (_this->_impl_.next_page_token_.IsDefault()) {
          _this->_internal_set_next_page_token("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_total_size() != 0) {
        _this->_impl_.total_size_ = from._impl_.total_size_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListCharactersResponse::CopyFrom(const ListCharactersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.ListCharactersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListCharactersResponse::InternalSwap(ListCharactersResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.characters_.InternalSwap(&other->_impl_.characters_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.next_page_token_, &other->_impl_.next_page_token_, arena);
  swap(_impl_.total_size_, other->_impl_.total_size_);
}

::google::protobuf::Metadata ListCharactersResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateCharacterRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<UpdateCharacterRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateCharacterRequest, _impl_._has_bits_);
};

UpdateCharacterRequest::UpdateCharacterRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateCharacterRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.UpdateCharacterRequest)
}
PROTOBUF_NDEBUG_INLINE UpdateCharacterRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::UpdateCharacterRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        update_mask_{visibility, arena, from.update_mask_} {}

UpdateCharacterRequest::UpdateCharacterRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const UpdateCharacterRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateCharacterRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateCharacterRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.character_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.character_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.UpdateCharacterRequest)
}
PROTOBUF_NDEBUG_INLINE UpdateCharacterRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        update_mask_{visibility, arena} {}

inline void UpdateCharacterRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.character_ = {};
}
UpdateCharacterRequest::~UpdateCharacterRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.UpdateCharacterRequest)
  SharedDtor(*this);
}
inline void UpdateCharacterRequest::SharedDtor(MessageLite& self) {
  UpdateCharacterRequest& this_ = static_cast<UpdateCharacterRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.character_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL UpdateCharacterRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UpdateCharacterRequest(arena);
}
constexpr auto UpdateCharacterRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(UpdateCharacterRequest, _impl_.update_mask_) +
          decltype(UpdateCharacterRequest::_impl_.update_mask_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(UpdateCharacterRequest), alignof(UpdateCharacterRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&UpdateCharacterRequest::PlacementNew_,
                                 sizeof(UpdateCharacterRequest),
                                 alignof(UpdateCharacterRequest));
  }
}
constexpr auto UpdateCharacterRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UpdateCharacterRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UpdateCharacterRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UpdateCharacterRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UpdateCharacterRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UpdateCharacterRequest>(), &UpdateCharacterRequest::ByteSizeLong,
              &UpdateCharacterRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UpdateCharacterRequest, _impl_._cached_size_),
          false,
      },
      &UpdateCharacterRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull UpdateCharacterRequest_class_data_ =
        UpdateCharacterRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
UpdateCharacterRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UpdateCharacterRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UpdateCharacterRequest_class_data_.tc_table);
  return UpdateCharacterRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 61, 2>
UpdateCharacterRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateCharacterRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    UpdateCharacterRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::UpdateCharacterRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string update_mask = 2 [json_name = "updateMask"];
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateCharacterRequest, _impl_.update_mask_)}},
    // .dnd5e.api.v1alpha1.Character character = 1 [json_name = "character"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateCharacterRequest, _impl_.character_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.Character character = 1 [json_name = "character"];
    {PROTOBUF_FIELD_OFFSET(UpdateCharacterRequest, _impl_.character_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string update_mask = 2 [json_name = "updateMask"];
    {PROTOBUF_FIELD_OFFSET(UpdateCharacterRequest, _impl_.update_mask_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::Character>()},
  }},
  {{
    "\51\0\13\0\0\0\0\0"
    "dnd5e.api.v1alpha1.UpdateCharacterRequest"
    "update_mask"
  }},
};
PROTOBUF_NOINLINE void UpdateCharacterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.UpdateCharacterRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.update_mask_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.character_ != nullptr);
    _impl_.character_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UpdateCharacterRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UpdateCharacterRequest& this_ = static_cast<const UpdateCharacterRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UpdateCharacterRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UpdateCharacterRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.UpdateCharacterRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.Character character = 1 [json_name = "character"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.character_, this_._impl_.character_->GetCachedSize(), target,
        stream);
  }

  // repeated string update_mask = 2 [json_name = "updateMask"];
  for (int i = 0, n = this_._internal_update_mask_size(); i < n; ++i) {
    const auto& s = this_._internal_update_mask().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.UpdateCharacterRequest.update_mask");
    target = stream->WriteString(2, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.UpdateCharacterRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UpdateCharacterRequest::ByteSizeLong(const MessageLite& base) {
  const UpdateCharacterRequest& this_ = static_cast<const UpdateCharacterRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UpdateCharacterRequest::ByteSizeLong() const {
  const UpdateCharacterRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.UpdateCharacterRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string update_mask = 2 [json_name = "updateMask"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_update_mask().size());
      for (int i = 0, n = this_._internal_update_mask().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_update_mask().Get(i));
      }
    }
  }
   {
    // .dnd5e.api.v1alpha1.Character character = 1 [json_name = "character"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.character_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UpdateCharacterRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateCharacterRequest*>(&to_msg);
  auto& from = static_cast<const UpdateCharacterRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.UpdateCharacterRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_update_mask()->MergeFrom(from._internal_update_mask());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(from._impl_.character_ != nullptr);
    if (_this->_impl_.character_ == nullptr) {
      _this->_impl_.character_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.character_);
    } else {
      _this->_impl_.character_->MergeFrom(*from._impl_.character_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateCharacterRequest::CopyFrom(const UpdateCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.UpdateCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateCharacterRequest::InternalSwap(UpdateCharacterRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.update_mask_.InternalSwap(&other->_impl_.update_mask_);
  swap(_impl_.character_, other->_impl_.character_);
}

::google::protobuf::Metadata UpdateCharacterRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateCharacterResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<UpdateCharacterResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateCharacterResponse, _impl_._has_bits_);
};

UpdateCharacterResponse::UpdateCharacterResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateCharacterResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.UpdateCharacterResponse)
}
PROTOBUF_NDEBUG_INLINE UpdateCharacterResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::UpdateCharacterResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdateCharacterResponse::UpdateCharacterResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const UpdateCharacterResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateCharacterResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateCharacterResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.character_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.character_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.UpdateCharacterResponse)
}
PROTOBUF_NDEBUG_INLINE UpdateCharacterResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void UpdateCharacterResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.character_ = {};
}
UpdateCharacterResponse::~UpdateCharacterResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.UpdateCharacterResponse)
  SharedDtor(*this);
}
inline void UpdateCharacterResponse::SharedDtor(MessageLite& self) {
  UpdateCharacterResponse& this_ = static_cast<UpdateCharacterResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.character_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL UpdateCharacterResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UpdateCharacterResponse(arena);
}
constexpr auto UpdateCharacterResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UpdateCharacterResponse),
                                            alignof(UpdateCharacterResponse));
}
constexpr auto UpdateCharacterResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UpdateCharacterResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UpdateCharacterResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UpdateCharacterResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UpdateCharacterResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UpdateCharacterResponse>(), &UpdateCharacterResponse::ByteSizeLong,
              &UpdateCharacterResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UpdateCharacterResponse, _impl_._cached_size_),
          false,
      },
      &UpdateCharacterResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull UpdateCharacterResponse_class_data_ =
        UpdateCharacterResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
UpdateCharacterResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UpdateCharacterResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UpdateCharacterResponse_class_data_.tc_table);
  return UpdateCharacterResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
UpdateCharacterResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateCharacterResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    UpdateCharacterResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::UpdateCharacterResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .dnd5e.api.v1alpha1.Character character = 1 [json_name = "character"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateCharacterResponse, _impl_.character_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.Character character = 1 [json_name = "character"];
    {PROTOBUF_FIELD_OFFSET(UpdateCharacterResponse, _impl_.character_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::Character>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void UpdateCharacterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.UpdateCharacterResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.character_ != nullptr);
    _impl_.character_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UpdateCharacterResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UpdateCharacterResponse& this_ = static_cast<const UpdateCharacterResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UpdateCharacterResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UpdateCharacterResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.UpdateCharacterResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.Character character = 1 [json_name = "character"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.character_, this_._impl_.character_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.UpdateCharacterResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UpdateCharacterResponse::ByteSizeLong(const MessageLite& base) {
  const UpdateCharacterResponse& this_ = static_cast<const UpdateCharacterResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UpdateCharacterResponse::ByteSizeLong() const {
  const UpdateCharacterResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.UpdateCharacterResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .dnd5e.api.v1alpha1.Character character = 1 [json_name = "character"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.character_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UpdateCharacterResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateCharacterResponse*>(&to_msg);
  auto& from = static_cast<const UpdateCharacterResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.UpdateCharacterResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(from._impl_.character_ != nullptr);
    if (_this->_impl_.character_ == nullptr) {
      _this->_impl_.character_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.character_);
    } else {
      _this->_impl_.character_->MergeFrom(*from._impl_.character_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateCharacterResponse::CopyFrom(const UpdateCharacterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.UpdateCharacterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateCharacterResponse::InternalSwap(UpdateCharacterResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.character_, other->_impl_.character_);
}

::google::protobuf::Metadata UpdateCharacterResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeleteCharacterRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<DeleteCharacterRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DeleteCharacterRequest, _impl_._has_bits_);
};

DeleteCharacterRequest::DeleteCharacterRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DeleteCharacterRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.DeleteCharacterRequest)
}
PROTOBUF_NDEBUG_INLINE DeleteCharacterRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::DeleteCharacterRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        character_id_(arena, from.character_id_) {}

DeleteCharacterRequest::DeleteCharacterRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DeleteCharacterRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DeleteCharacterRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeleteCharacterRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.DeleteCharacterRequest)
}
PROTOBUF_NDEBUG_INLINE DeleteCharacterRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        character_id_(arena) {}

inline void DeleteCharacterRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeleteCharacterRequest::~DeleteCharacterRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.DeleteCharacterRequest)
  SharedDtor(*this);
}
inline void DeleteCharacterRequest::SharedDtor(MessageLite& self) {
  DeleteCharacterRequest& this_ = static_cast<DeleteCharacterRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.character_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DeleteCharacterRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DeleteCharacterRequest(arena);
}
constexpr auto DeleteCharacterRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DeleteCharacterRequest),
                                            alignof(DeleteCharacterRequest));
}
constexpr auto DeleteCharacterRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DeleteCharacterRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DeleteCharacterRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DeleteCharacterRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DeleteCharacterRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DeleteCharacterRequest>(), &DeleteCharacterRequest::ByteSizeLong,
              &DeleteCharacterRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DeleteCharacterRequest, _impl_._cached_size_),
          false,
      },
      &DeleteCharacterRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull DeleteCharacterRequest_class_data_ =
        DeleteCharacterRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
DeleteCharacterRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DeleteCharacterRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DeleteCharacterRequest_class_data_.tc_table);
  return DeleteCharacterRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 62, 2>
DeleteCharacterRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeleteCharacterRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    DeleteCharacterRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::DeleteCharacterRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string character_id = 1 [json_name = "characterId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DeleteCharacterRequest, _impl_.character_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string character_id = 1 [json_name = "characterId"];
    {PROTOBUF_FIELD_OFFSET(DeleteCharacterRequest, _impl_.character_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\14\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.DeleteCharacterRequest"
    "character_id"
  }},
};
PROTOBUF_NOINLINE void DeleteCharacterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.DeleteCharacterRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.character_id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DeleteCharacterRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DeleteCharacterRequest& this_ = static_cast<const DeleteCharacterRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DeleteCharacterRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DeleteCharacterRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.DeleteCharacterRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string character_id = 1 [json_name = "characterId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_character_id().empty()) {
      const ::std::string& _s = this_._internal_character_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.DeleteCharacterRequest.character_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.DeleteCharacterRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DeleteCharacterRequest::ByteSizeLong(const MessageLite& base) {
  const DeleteCharacterRequest& this_ = static_cast<const DeleteCharacterRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DeleteCharacterRequest::ByteSizeLong() const {
  const DeleteCharacterRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.DeleteCharacterRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string character_id = 1 [json_name = "characterId"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_character_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_character_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DeleteCharacterRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeleteCharacterRequest*>(&to_msg);
  auto& from = static_cast<const DeleteCharacterRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.DeleteCharacterRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!from._internal_character_id().empty()) {
      _this->_internal_set_character_id(from._internal_character_id());
    } else {
      if (_this->_impl_.character_id_.IsDefault()) {
        _this->_internal_set_character_id("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteCharacterRequest::CopyFrom(const DeleteCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.DeleteCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeleteCharacterRequest::InternalSwap(DeleteCharacterRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.character_id_, &other->_impl_.character_id_, arena);
}

::google::protobuf::Metadata DeleteCharacterRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeleteCharacterResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<DeleteCharacterResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DeleteCharacterResponse, _impl_._has_bits_);
};

DeleteCharacterResponse::DeleteCharacterResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DeleteCharacterResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.DeleteCharacterResponse)
}
PROTOBUF_NDEBUG_INLINE DeleteCharacterResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::DeleteCharacterResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        message_(arena, from.message_) {}

DeleteCharacterResponse::DeleteCharacterResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DeleteCharacterResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DeleteCharacterResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeleteCharacterResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.DeleteCharacterResponse)
}
PROTOBUF_NDEBUG_INLINE DeleteCharacterResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        message_(arena) {}

inline void DeleteCharacterResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeleteCharacterResponse::~DeleteCharacterResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.DeleteCharacterResponse)
  SharedDtor(*this);
}
inline void DeleteCharacterResponse::SharedDtor(MessageLite& self) {
  DeleteCharacterResponse& this_ = static_cast<DeleteCharacterResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DeleteCharacterResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DeleteCharacterResponse(arena);
}
constexpr auto DeleteCharacterResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DeleteCharacterResponse),
                                            alignof(DeleteCharacterResponse));
}
constexpr auto DeleteCharacterResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DeleteCharacterResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DeleteCharacterResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DeleteCharacterResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DeleteCharacterResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DeleteCharacterResponse>(), &DeleteCharacterResponse::ByteSizeLong,
              &DeleteCharacterResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DeleteCharacterResponse, _impl_._cached_size_),
          false,
      },
      &DeleteCharacterResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull DeleteCharacterResponse_class_data_ =
        DeleteCharacterResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
DeleteCharacterResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DeleteCharacterResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DeleteCharacterResponse_class_data_.tc_table);
  return DeleteCharacterResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 58, 2>
DeleteCharacterResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeleteCharacterResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    DeleteCharacterResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::DeleteCharacterResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string message = 1 [json_name = "message"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DeleteCharacterResponse, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string message = 1 [json_name = "message"];
    {PROTOBUF_FIELD_OFFSET(DeleteCharacterResponse, _impl_.message_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\52\7\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.DeleteCharacterResponse"
    "message"
  }},
};
PROTOBUF_NOINLINE void DeleteCharacterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.DeleteCharacterResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.message_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DeleteCharacterResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DeleteCharacterResponse& this_ = static_cast<const DeleteCharacterResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DeleteCharacterResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DeleteCharacterResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.DeleteCharacterResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string message = 1 [json_name = "message"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_message().empty()) {
      const ::std::string& _s = this_._internal_message();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.DeleteCharacterResponse.message");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.DeleteCharacterResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DeleteCharacterResponse::ByteSizeLong(const MessageLite& base) {
  const DeleteCharacterResponse& this_ = static_cast<const DeleteCharacterResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DeleteCharacterResponse::ByteSizeLong() const {
  const DeleteCharacterResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.DeleteCharacterResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string message = 1 [json_name = "message"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_message().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_message());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DeleteCharacterResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeleteCharacterResponse*>(&to_msg);
  auto& from = static_cast<const DeleteCharacterResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.DeleteCharacterResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!from._internal_message().empty()) {
      _this->_internal_set_message(from._internal_message());
    } else {
      if (_this->_impl_.message_.IsDefault()) {
        _this->_internal_set_message("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteCharacterResponse::CopyFrom(const DeleteCharacterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.DeleteCharacterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeleteCharacterResponse::InternalSwap(DeleteCharacterResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
}

::google::protobuf::Metadata DeleteCharacterResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CharacterDraftData::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CharacterDraftData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CharacterDraftData, _impl_._has_bits_);
};

CharacterDraftData::CharacterDraftData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CharacterDraftData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.CharacterDraftData)
}
PROTOBUF_NDEBUG_INLINE CharacterDraftData::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::CharacterDraftData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        choices_{visibility, arena, from.choices_},
        id_(arena, from.id_),
        player_id_(arena, from.player_id_),
        session_id_(arena, from.session_id_),
        name_(arena, from.name_) {}

CharacterDraftData::CharacterDraftData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CharacterDraftData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CharacterDraftData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CharacterDraftData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.base_ability_scores_ = ((cached_has_bits & 0x00000010U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.base_ability_scores_)
                : nullptr;
  _impl_.progress_ = ((cached_has_bits & 0x00000020U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.progress_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, race_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, race_),
           offsetof(Impl_, background_) -
               offsetof(Impl_, race_) +
               sizeof(Impl_::background_));

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.CharacterDraftData)
}
PROTOBUF_NDEBUG_INLINE CharacterDraftData::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        choices_{visibility, arena},
        id_(arena),
        player_id_(arena),
        session_id_(arena),
        name_(arena) {}

inline void CharacterDraftData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, base_ability_scores_),
           0,
           offsetof(Impl_, background_) -
               offsetof(Impl_, base_ability_scores_) +
               sizeof(Impl_::background_));
}
CharacterDraftData::~CharacterDraftData() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.CharacterDraftData)
  SharedDtor(*this);
}
inline void CharacterDraftData::SharedDtor(MessageLite& self) {
  CharacterDraftData& this_ = static_cast<CharacterDraftData&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.player_id_.Destroy();
  this_._impl_.session_id_.Destroy();
  this_._impl_.name_.Destroy();
  delete this_._impl_.base_ability_scores_;
  delete this_._impl_.progress_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CharacterDraftData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CharacterDraftData(arena);
}
constexpr auto CharacterDraftData::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CharacterDraftData, _impl_.choices_) +
          decltype(CharacterDraftData::_impl_.choices_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CharacterDraftData), alignof(CharacterDraftData), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CharacterDraftData::PlacementNew_,
                                 sizeof(CharacterDraftData),
                                 alignof(CharacterDraftData));
  }
}
constexpr auto CharacterDraftData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CharacterDraftData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CharacterDraftData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CharacterDraftData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CharacterDraftData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CharacterDraftData>(), &CharacterDraftData::ByteSizeLong,
              &CharacterDraftData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CharacterDraftData, _impl_._cached_size_),
          false,
      },
      &CharacterDraftData::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CharacterDraftData_class_data_ =
        CharacterDraftData::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CharacterDraftData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CharacterDraftData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CharacterDraftData_class_data_.tc_table);
  return CharacterDraftData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 3, 79, 2>
CharacterDraftData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CharacterDraftData, _impl_._has_bits_),
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CharacterDraftData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CharacterDraftData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CharacterDraftData, _impl_.id_)}},
    // string player_id = 2 [json_name = "playerId"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CharacterDraftData, _impl_.player_id_)}},
    // string session_id = 3 [json_name = "sessionId"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(CharacterDraftData, _impl_.session_id_)}},
    // string name = 4 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(CharacterDraftData, _impl_.name_)}},
    // .dnd5e.api.v1alpha1.Race race = 5 [json_name = "race"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CharacterDraftData, _impl_.race_), 6>(),
     {40, 6, 0, PROTOBUF_FIELD_OFFSET(CharacterDraftData, _impl_.race_)}},
    // .dnd5e.api.v1alpha1.Subrace subrace = 6 [json_name = "subrace"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CharacterDraftData, _impl_.subrace_), 7>(),
     {48, 7, 0, PROTOBUF_FIELD_OFFSET(CharacterDraftData, _impl_.subrace_)}},
    // .dnd5e.api.v1alpha1.Class class = 7 [json_name = "class"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CharacterDraftData, _impl_.class__), 8>(),
     {56, 8, 0, PROTOBUF_FIELD_OFFSET(CharacterDraftData, _impl_.class__)}},
    // .dnd5e.api.v1alpha1.Subclass subclass = 8 [json_name = "subclass"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CharacterDraftData, _impl_.subclass_), 9>(),
     {64, 9, 0, PROTOBUF_FIELD_OFFSET(CharacterDraftData, _impl_.subclass_)}},
    // .dnd5e.api.v1alpha1.Background background = 9 [json_name = "background"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CharacterDraftData, _impl_.background_), 10>(),
     {72, 10, 0, PROTOBUF_FIELD_OFFSET(CharacterDraftData, _impl_.background_)}},
    // .dnd5e.api.v1alpha1.AbilityScores base_ability_scores = 10 [json_name = "baseAbilityScores"];
    {::_pbi::TcParser::FastMtS1,
     {82, 4, 0, PROTOBUF_FIELD_OFFSET(CharacterDraftData, _impl_.base_ability_scores_)}},
    // repeated .dnd5e.api.v1alpha1.ChoiceData choices = 11 [json_name = "choices"];
    {::_pbi::TcParser::FastMtR1,
     {90, 63, 1, PROTOBUF_FIELD_OFFSET(CharacterDraftData, _impl_.choices_)}},
    // .dnd5e.api.v1alpha1.CreationProgress progress = 12 [json_name = "progress"];
    {::_pbi::TcParser::FastMtS1,
     {98, 5, 2, PROTOBUF_FIELD_OFFSET(CharacterDraftData, _impl_.progress_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(CharacterDraftData, _impl_.id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string player_id = 2 [json_name = "playerId"];
    {PROTOBUF_FIELD_OFFSET(CharacterDraftData, _impl_.player_id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string session_id = 3 [json_name = "sessionId"];
    {PROTOBUF_FIELD_OFFSET(CharacterDraftData, _impl_.session_id_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 4 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(CharacterDraftData, _impl_.name_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .dnd5e.api.v1alpha1.Race race = 5 [json_name = "race"];
    {PROTOBUF_FIELD_OFFSET(CharacterDraftData, _impl_.race_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.Subrace subrace = 6 [json_name = "subrace"];
    {PROTOBUF_FIELD_OFFSET(CharacterDraftData, _impl_.subrace_), _Internal::kHasBitsOffset + 7, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.Class class = 7 [json_name = "class"];
    {PROTOBUF_FIELD_OFFSET(CharacterDraftData, _impl_.class__), _Internal::kHasBitsOffset + 8, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.Subclass subclass = 8 [json_name = "subclass"];
    {PROTOBUF_FIELD_OFFSET(CharacterDraftData, _impl_.subclass_), _Internal::kHasBitsOffset + 9, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.Background background = 9 [json_name = "background"];
    {PROTOBUF_FIELD_OFFSET(CharacterDraftData, _impl_.background_), _Internal::kHasBitsOffset + 10, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.AbilityScores base_ability_scores = 10 [json_name = "baseAbilityScores"];
    {PROTOBUF_FIELD_OFFSET(CharacterDraftData, _impl_.base_ability_scores_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dnd5e.api.v1alpha1.ChoiceData choices = 11 [json_name = "choices"];
    {PROTOBUF_FIELD_OFFSET(CharacterDraftData, _impl_.choices_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.CreationProgress progress = 12 [json_name = "progress"];
    {PROTOBUF_FIELD_OFFSET(CharacterDraftData, _impl_.progress_), _Internal::kHasBitsOffset + 5, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::AbilityScores>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ChoiceData>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CreationProgress>()},
  }},
  {{
    "\45\2\11\12\4\0\0\0\0\0\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.CharacterDraftData"
    "id"
    "player_id"
    "session_id"
    "name"
  }},
};
PROTOBUF_NOINLINE void CharacterDraftData::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.CharacterDraftData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.choices_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.player_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.session_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(_impl_.base_ability_scores_ != nullptr);
      _impl_.base_ability_scores_->Clear();
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      ABSL_DCHECK(_impl_.progress_ != nullptr);
      _impl_.progress_->Clear();
    }
  }
  if ((cached_has_bits & 0x000000c0U) != 0) {
    ::memset(&_impl_.race_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.subrace_) -
        reinterpret_cast<char*>(&_impl_.race_)) + sizeof(_impl_.subrace_));
  }
  if ((cached_has_bits & 0x00000700U) != 0) {
    ::memset(&_impl_.class__, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.background_) -
        reinterpret_cast<char*>(&_impl_.class__)) + sizeof(_impl_.background_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CharacterDraftData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CharacterDraftData& this_ = static_cast<const CharacterDraftData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CharacterDraftData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CharacterDraftData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.CharacterDraftData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1 [json_name = "id"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_id().empty()) {
      const ::std::string& _s = this_._internal_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.CharacterDraftData.id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string player_id = 2 [json_name = "playerId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_player_id().empty()) {
      const ::std::string& _s = this_._internal_player_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.CharacterDraftData.player_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string session_id = 3 [json_name = "sessionId"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_session_id().empty()) {
      const ::std::string& _s = this_._internal_session_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.CharacterDraftData.session_id");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string name = 4 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.CharacterDraftData.name");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // .dnd5e.api.v1alpha1.Race race = 5 [json_name = "race"];
  if ((this_._impl_._has_bits_[0] & 0x00000040U) != 0) {
    if (this_._internal_race() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          5, this_._internal_race(), target);
    }
  }

  // .dnd5e.api.v1alpha1.Subrace subrace = 6 [json_name = "subrace"];
  if ((this_._impl_._has_bits_[0] & 0x00000080U) != 0) {
    if (this_._internal_subrace() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          6, this_._internal_subrace(), target);
    }
  }

  // .dnd5e.api.v1alpha1.Class class = 7 [json_name = "class"];
  if ((this_._impl_._has_bits_[0] & 0x00000100U) != 0) {
    if (this_._internal_class_() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          7, this_._internal_class_(), target);
    }
  }

  // .dnd5e.api.v1alpha1.Subclass subclass = 8 [json_name = "subclass"];
  if ((this_._impl_._has_bits_[0] & 0x00000200U) != 0) {
    if (this_._internal_subclass() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          8, this_._internal_subclass(), target);
    }
  }

  // .dnd5e.api.v1alpha1.Background background = 9 [json_name = "background"];
  if ((this_._impl_._has_bits_[0] & 0x00000400U) != 0) {
    if (this_._internal_background() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          9, this_._internal_background(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.AbilityScores base_ability_scores = 10 [json_name = "baseAbilityScores"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        10, *this_._impl_.base_ability_scores_, this_._impl_.base_ability_scores_->GetCachedSize(), target,
        stream);
  }

  // repeated .dnd5e.api.v1alpha1.ChoiceData choices = 11 [json_name = "choices"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_choices_size());
       i < n; i++) {
    const auto& repfield = this_._internal_choices().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            11, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // .dnd5e.api.v1alpha1.CreationProgress progress = 12 [json_name = "progress"];
  if ((cached_has_bits & 0x00000020U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        12, *this_._impl_.progress_, this_._impl_.progress_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.CharacterDraftData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CharacterDraftData::ByteSizeLong(const MessageLite& base) {
  const CharacterDraftData& this_ = static_cast<const CharacterDraftData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CharacterDraftData::ByteSizeLong() const {
  const CharacterDraftData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.CharacterDraftData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.ChoiceData choices = 11 [json_name = "choices"];
    {
      total_size += 1UL * this_._internal_choices_size();
      for (const auto& msg : this_._internal_choices()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    // string id = 1 [json_name = "id"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_id());
      }
    }
    // string player_id = 2 [json_name = "playerId"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_player_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_player_id());
      }
    }
    // string session_id = 3 [json_name = "sessionId"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_session_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_session_id());
      }
    }
    // string name = 4 [json_name = "name"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // .dnd5e.api.v1alpha1.AbilityScores base_ability_scores = 10 [json_name = "baseAbilityScores"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.base_ability_scores_);
    }
    // .dnd5e.api.v1alpha1.CreationProgress progress = 12 [json_name = "progress"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.progress_);
    }
    // .dnd5e.api.v1alpha1.Race race = 5 [json_name = "race"];
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (this_._internal_race() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_race());
      }
    }
    // .dnd5e.api.v1alpha1.Subrace subrace = 6 [json_name = "subrace"];
    if ((cached_has_bits & 0x00000080U) != 0) {
      if (this_._internal_subrace() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_subrace());
      }
    }
  }
  if ((cached_has_bits & 0x00000700U) != 0) {
    // .dnd5e.api.v1alpha1.Class class = 7 [json_name = "class"];
    if ((cached_has_bits & 0x00000100U) != 0) {
      if (this_._internal_class_() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_class_());
      }
    }
    // .dnd5e.api.v1alpha1.Subclass subclass = 8 [json_name = "subclass"];
    if ((cached_has_bits & 0x00000200U) != 0) {
      if (this_._internal_subclass() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_subclass());
      }
    }
    // .dnd5e.api.v1alpha1.Background background = 9 [json_name = "background"];
    if ((cached_has_bits & 0x00000400U) != 0) {
      if (this_._internal_background() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_background());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CharacterDraftData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CharacterDraftData*>(&to_msg);
  auto& from = static_cast<const CharacterDraftData&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.CharacterDraftData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_choices()->MergeFrom(
      from._internal_choices());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_id().empty()) {
        _this->_internal_set_id(from._internal_id());
      } else {
        if (_this->_impl_.id_.IsDefault()) {
          _this->_internal_set_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_player_id().empty()) {
        _this->_internal_set_player_id(from._internal_player_id());
      } else {
        if (_this->_impl_.player_id_.IsDefault()) {
          _this->_internal_set_player_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_session_id().empty()) {
        _this->_internal_set_session_id(from._internal_session_id());
      } else {
        if (_this->_impl_.session_id_.IsDefault()) {
          _this->_internal_set_session_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(from._impl_.base_ability_scores_ != nullptr);
      if (_this->_impl_.base_ability_scores_ == nullptr) {
        _this->_impl_.base_ability_scores_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.base_ability_scores_);
      } else {
        _this->_impl_.base_ability_scores_->MergeFrom(*from._impl_.base_ability_scores_);
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      ABSL_DCHECK(from._impl_.progress_ != nullptr);
      if (_this->_impl_.progress_ == nullptr) {
        _this->_impl_.progress_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.progress_);
      } else {
        _this->_impl_.progress_->MergeFrom(*from._impl_.progress_);
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (from._internal_race() != 0) {
        _this->_impl_.race_ = from._impl_.race_;
      }
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      if (from._internal_subrace() != 0) {
        _this->_impl_.subrace_ = from._impl_.subrace_;
      }
    }
  }
  if ((cached_has_bits & 0x00000700U) != 0) {
    if ((cached_has_bits & 0x00000100U) != 0) {
      if (from._internal_class_() != 0) {
        _this->_impl_.class__ = from._impl_.class__;
      }
    }
    if ((cached_has_bits & 0x00000200U) != 0) {
      if (from._internal_subclass() != 0) {
        _this->_impl_.subclass_ = from._impl_.subclass_;
      }
    }
    if ((cached_has_bits & 0x00000400U) != 0) {
      if (from._internal_background() != 0) {
        _this->_impl_.background_ = from._impl_.background_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CharacterDraftData::CopyFrom(const CharacterDraftData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.CharacterDraftData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CharacterDraftData::InternalSwap(CharacterDraftData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.choices_.InternalSwap(&other->_impl_.choices_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.player_id_, &other->_impl_.player_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_id_, &other->_impl_.session_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CharacterDraftData, _impl_.background_)
      + sizeof(CharacterDraftData::_impl_.background_)
      - PROTOBUF_FIELD_OFFSET(CharacterDraftData, _impl_.base_ability_scores_)>(
          reinterpret_cast<char*>(&_impl_.base_ability_scores_),
          reinterpret_cast<char*>(&other->_impl_.base_ability_scores_));
}

::google::protobuf::Metadata CharacterDraftData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreationProgress::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CreationProgress>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreationProgress, _impl_._has_bits_);
};

CreationProgress::CreationProgress(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CreationProgress_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.CreationProgress)
}
CreationProgress::CreationProgress(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CreationProgress& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CreationProgress_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CreationProgress::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CreationProgress::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, has_name_),
           0,
           offsetof(Impl_, current_step_) -
               offsetof(Impl_, has_name_) +
               sizeof(Impl_::current_step_));
}
CreationProgress::~CreationProgress() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.CreationProgress)
  SharedDtor(*this);
}
inline void CreationProgress::SharedDtor(MessageLite& self) {
  CreationProgress& this_ = static_cast<CreationProgress&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CreationProgress::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CreationProgress(arena);
}
constexpr auto CreationProgress::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CreationProgress),
                                            alignof(CreationProgress));
}
constexpr auto CreationProgress::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CreationProgress_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CreationProgress::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CreationProgress>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CreationProgress::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CreationProgress>(), &CreationProgress::ByteSizeLong,
              &CreationProgress::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CreationProgress, _impl_._cached_size_),
          false,
      },
      &CreationProgress::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CreationProgress_class_data_ =
        CreationProgress::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CreationProgress::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CreationProgress_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CreationProgress_class_data_.tc_table);
  return CreationProgress_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 0, 2>
CreationProgress::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreationProgress, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CreationProgress_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CreationProgress>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool has_name = 1 [json_name = "hasName"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CreationProgress, _impl_.has_name_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CreationProgress, _impl_.has_name_)}},
    // bool has_race = 2 [json_name = "hasRace"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CreationProgress, _impl_.has_race_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CreationProgress, _impl_.has_race_)}},
    // bool has_class = 3 [json_name = "hasClass"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CreationProgress, _impl_.has_class_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CreationProgress, _impl_.has_class_)}},
    // bool has_background = 4 [json_name = "hasBackground"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CreationProgress, _impl_.has_background_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CreationProgress, _impl_.has_background_)}},
    // bool has_ability_scores = 5 [json_name = "hasAbilityScores"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CreationProgress, _impl_.has_ability_scores_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(CreationProgress, _impl_.has_ability_scores_)}},
    // bool has_skills = 6 [json_name = "hasSkills", deprecated = true];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CreationProgress, _impl_.has_skills_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(CreationProgress, _impl_.has_skills_)}},
    // bool has_languages = 7 [json_name = "hasLanguages", deprecated = true];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CreationProgress, _impl_.has_languages_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(CreationProgress, _impl_.has_languages_)}},
    // int32 completion_percentage = 8 [json_name = "completionPercentage"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CreationProgress, _impl_.completion_percentage_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(CreationProgress, _impl_.completion_percentage_)}},
    // .dnd5e.api.v1alpha1.CreationStep current_step = 9 [json_name = "currentStep", deprecated = true];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CreationProgress, _impl_.current_step_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(CreationProgress, _impl_.current_step_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bool has_name = 1 [json_name = "hasName"];
    {PROTOBUF_FIELD_OFFSET(CreationProgress, _impl_.has_name_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool has_race = 2 [json_name = "hasRace"];
    {PROTOBUF_FIELD_OFFSET(CreationProgress, _impl_.has_race_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool has_class = 3 [json_name = "hasClass"];
    {PROTOBUF_FIELD_OFFSET(CreationProgress, _impl_.has_class_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool has_background = 4 [json_name = "hasBackground"];
    {PROTOBUF_FIELD_OFFSET(CreationProgress, _impl_.has_background_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool has_ability_scores = 5 [json_name = "hasAbilityScores"];
    {PROTOBUF_FIELD_OFFSET(CreationProgress, _impl_.has_ability_scores_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool has_skills = 6 [json_name = "hasSkills", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(CreationProgress, _impl_.has_skills_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool has_languages = 7 [json_name = "hasLanguages", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(CreationProgress, _impl_.has_languages_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // int32 completion_percentage = 8 [json_name = "completionPercentage"];
    {PROTOBUF_FIELD_OFFSET(CreationProgress, _impl_.completion_percentage_), _Internal::kHasBitsOffset + 7, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .dnd5e.api.v1alpha1.CreationStep current_step = 9 [json_name = "currentStep", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(CreationProgress, _impl_.current_step_), _Internal::kHasBitsOffset + 8, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CreationProgress::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.CreationProgress)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    ::memset(&_impl_.has_name_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.completion_percentage_) -
        reinterpret_cast<char*>(&_impl_.has_name_)) + sizeof(_impl_.completion_percentage_));
  }
  _impl_.current_step_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CreationProgress::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CreationProgress& this_ = static_cast<const CreationProgress&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CreationProgress::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CreationProgress& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.CreationProgress)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool has_name = 1 [json_name = "hasName"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_has_name() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_has_name(), target);
    }
  }

  // bool has_race = 2 [json_name = "hasRace"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_has_race() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_has_race(), target);
    }
  }

  // bool has_class = 3 [json_name = "hasClass"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_has_class() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_has_class(), target);
    }
  }

  // bool has_background = 4 [json_name = "hasBackground"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_has_background() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_has_background(), target);
    }
  }

  // bool has_ability_scores = 5 [json_name = "hasAbilityScores"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_has_ability_scores() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          5, this_._internal_has_ability_scores(), target);
    }
  }

  // bool has_skills = 6 [json_name = "hasSkills", deprecated = true];
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (this_._internal_has_skills() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          6, this_._internal_has_skills(), target);
    }
  }

  // bool has_languages = 7 [json_name = "hasLanguages", deprecated = true];
  if ((this_._impl_._has_bits_[0] & 0x00000040U) != 0) {
    if (this_._internal_has_languages() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          7, this_._internal_has_languages(), target);
    }
  }

  // int32 completion_percentage = 8 [json_name = "completionPercentage"];
  if ((this_._impl_._has_bits_[0] & 0x00000080U) != 0) {
    if (this_._internal_completion_percentage() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<8>(
              stream, this_._internal_completion_percentage(), target);
    }
  }

  // .dnd5e.api.v1alpha1.CreationStep current_step = 9 [json_name = "currentStep", deprecated = true];
  if ((this_._impl_._has_bits_[0] & 0x00000100U) != 0) {
    if (this_._internal_current_step() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          9, this_._internal_current_step(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.CreationProgress)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CreationProgress::ByteSizeLong(const MessageLite& base) {
  const CreationProgress& this_ = static_cast<const CreationProgress&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CreationProgress::ByteSizeLong() const {
  const CreationProgress& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.CreationProgress)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    // bool has_name = 1 [json_name = "hasName"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_has_name() != 0) {
        total_size += 2;
      }
    }
    // bool has_race = 2 [json_name = "hasRace"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_has_race() != 0) {
        total_size += 2;
      }
    }
    // bool has_class = 3 [json_name = "hasClass"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_has_class() != 0) {
        total_size += 2;
      }
    }
    // bool has_background = 4 [json_name = "hasBackground"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_has_background() != 0) {
        total_size += 2;
      }
    }
    // bool has_ability_scores = 5 [json_name = "hasAbilityScores"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_has_ability_scores() != 0) {
        total_size += 2;
      }
    }
    // bool has_skills = 6 [json_name = "hasSkills", deprecated = true];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_has_skills() != 0) {
        total_size += 2;
      }
    }
    // bool has_languages = 7 [json_name = "hasLanguages", deprecated = true];
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (this_._internal_has_languages() != 0) {
        total_size += 2;
      }
    }
    // int32 completion_percentage = 8 [json_name = "completionPercentage"];
    if ((cached_has_bits & 0x00000080U) != 0) {
      if (this_._internal_completion_percentage() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_completion_percentage());
      }
    }
  }
   {
    // .dnd5e.api.v1alpha1.CreationStep current_step = 9 [json_name = "currentStep", deprecated = true];
    if ((cached_has_bits & 0x00000100U) != 0) {
      if (this_._internal_current_step() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_current_step());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CreationProgress::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreationProgress*>(&to_msg);
  auto& from = static_cast<const CreationProgress&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.CreationProgress)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (from._internal_has_name() != 0) {
        _this->_impl_.has_name_ = from._impl_.has_name_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_has_race() != 0) {
        _this->_impl_.has_race_ = from._impl_.has_race_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_has_class() != 0) {
        _this->_impl_.has_class_ = from._impl_.has_class_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_has_background() != 0) {
        _this->_impl_.has_background_ = from._impl_.has_background_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_has_ability_scores() != 0) {
        _this->_impl_.has_ability_scores_ = from._impl_.has_ability_scores_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_has_skills() != 0) {
        _this->_impl_.has_skills_ = from._impl_.has_skills_;
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (from._internal_has_languages() != 0) {
        _this->_impl_.has_languages_ = from._impl_.has_languages_;
      }
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      if (from._internal_completion_percentage() != 0) {
        _this->_impl_.completion_percentage_ = from._impl_.completion_percentage_;
      }
    }
  }
  if ((cached_has_bits & 0x00000100U) != 0) {
    if (from._internal_current_step() != 0) {
      _this->_impl_.current_step_ = from._impl_.current_step_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreationProgress::CopyFrom(const CreationProgress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.CreationProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreationProgress::InternalSwap(CreationProgress* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreationProgress, _impl_.current_step_)
      + sizeof(CreationProgress::_impl_.current_step_)
      - PROTOBUF_FIELD_OFFSET(CreationProgress, _impl_.has_name_)>(
          reinterpret_cast<char*>(&_impl_.has_name_),
          reinterpret_cast<char*>(&other->_impl_.has_name_));
}

::google::protobuf::Metadata CreationProgress::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DraftMetadata::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<DraftMetadata>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DraftMetadata, _impl_._has_bits_);
};

DraftMetadata::DraftMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DraftMetadata_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.DraftMetadata)
}
PROTOBUF_NDEBUG_INLINE DraftMetadata::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::DraftMetadata& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        discord_channel_id_(arena, from.discord_channel_id_),
        discord_message_id_(arena, from.discord_message_id_) {}

DraftMetadata::DraftMetadata(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DraftMetadata& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DraftMetadata_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DraftMetadata* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, created_at_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, created_at_),
           offsetof(Impl_, updated_at_) -
               offsetof(Impl_, created_at_) +
               sizeof(Impl_::updated_at_));

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.DraftMetadata)
}
PROTOBUF_NDEBUG_INLINE DraftMetadata::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        discord_channel_id_(arena),
        discord_message_id_(arena) {}

inline void DraftMetadata::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, created_at_),
           0,
           offsetof(Impl_, updated_at_) -
               offsetof(Impl_, created_at_) +
               sizeof(Impl_::updated_at_));
}
DraftMetadata::~DraftMetadata() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.DraftMetadata)
  SharedDtor(*this);
}
inline void DraftMetadata::SharedDtor(MessageLite& self) {
  DraftMetadata& this_ = static_cast<DraftMetadata&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.discord_channel_id_.Destroy();
  this_._impl_.discord_message_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DraftMetadata::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DraftMetadata(arena);
}
constexpr auto DraftMetadata::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DraftMetadata),
                                            alignof(DraftMetadata));
}
constexpr auto DraftMetadata::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DraftMetadata_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DraftMetadata::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DraftMetadata>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DraftMetadata::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DraftMetadata>(), &DraftMetadata::ByteSizeLong,
              &DraftMetadata::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DraftMetadata, _impl_._cached_size_),
          false,
      },
      &DraftMetadata::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull DraftMetadata_class_data_ =
        DraftMetadata::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
DraftMetadata::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DraftMetadata_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DraftMetadata_class_data_.tc_table);
  return DraftMetadata_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 77, 2>
DraftMetadata::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DraftMetadata, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    DraftMetadata_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::DraftMetadata>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string discord_message_id = 4 [json_name = "discordMessageId"];
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(DraftMetadata, _impl_.discord_message_id_)}},
    // int64 created_at = 1 [json_name = "createdAt"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DraftMetadata, _impl_.created_at_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(DraftMetadata, _impl_.created_at_)}},
    // int64 updated_at = 2 [json_name = "updatedAt"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DraftMetadata, _impl_.updated_at_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(DraftMetadata, _impl_.updated_at_)}},
    // string discord_channel_id = 3 [json_name = "discordChannelId"];
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(DraftMetadata, _impl_.discord_channel_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 created_at = 1 [json_name = "createdAt"];
    {PROTOBUF_FIELD_OFFSET(DraftMetadata, _impl_.created_at_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 updated_at = 2 [json_name = "updatedAt"];
    {PROTOBUF_FIELD_OFFSET(DraftMetadata, _impl_.updated_at_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // string discord_channel_id = 3 [json_name = "discordChannelId"];
    {PROTOBUF_FIELD_OFFSET(DraftMetadata, _impl_.discord_channel_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string discord_message_id = 4 [json_name = "discordMessageId"];
    {PROTOBUF_FIELD_OFFSET(DraftMetadata, _impl_.discord_message_id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\0\0\22\22\0\0\0"
    "dnd5e.api.v1alpha1.DraftMetadata"
    "discord_channel_id"
    "discord_message_id"
  }},
};
PROTOBUF_NOINLINE void DraftMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.DraftMetadata)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.discord_channel_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.discord_message_id_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000000cU) != 0) {
    ::memset(&_impl_.created_at_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.updated_at_) -
        reinterpret_cast<char*>(&_impl_.created_at_)) + sizeof(_impl_.updated_at_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DraftMetadata::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DraftMetadata& this_ = static_cast<const DraftMetadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DraftMetadata::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DraftMetadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.DraftMetadata)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 created_at = 1 [json_name = "createdAt"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_created_at() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_created_at(), target);
    }
  }

  // int64 updated_at = 2 [json_name = "updatedAt"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_updated_at() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
              stream, this_._internal_updated_at(), target);
    }
  }

  // string discord_channel_id = 3 [json_name = "discordChannelId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_discord_channel_id().empty()) {
      const ::std::string& _s = this_._internal_discord_channel_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.DraftMetadata.discord_channel_id");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string discord_message_id = 4 [json_name = "discordMessageId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_discord_message_id().empty()) {
      const ::std::string& _s = this_._internal_discord_message_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.DraftMetadata.discord_message_id");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.DraftMetadata)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DraftMetadata::ByteSizeLong(const MessageLite& base) {
  const DraftMetadata& this_ = static_cast<const DraftMetadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DraftMetadata::ByteSizeLong() const {
  const DraftMetadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.DraftMetadata)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string discord_channel_id = 3 [json_name = "discordChannelId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_discord_channel_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_discord_channel_id());
      }
    }
    // string discord_message_id = 4 [json_name = "discordMessageId"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_discord_message_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_discord_message_id());
      }
    }
    // int64 created_at = 1 [json_name = "createdAt"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_created_at() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_created_at());
      }
    }
    // int64 updated_at = 2 [json_name = "updatedAt"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_updated_at() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_updated_at());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DraftMetadata::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DraftMetadata*>(&to_msg);
  auto& from = static_cast<const DraftMetadata&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.DraftMetadata)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_discord_channel_id().empty()) {
        _this->_internal_set_discord_channel_id(from._internal_discord_channel_id());
      } else {
        if (_this->_impl_.discord_channel_id_.IsDefault()) {
          _this->_internal_set_discord_channel_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_discord_message_id().empty()) {
        _this->_internal_set_discord_message_id(from._internal_discord_message_id());
      } else {
        if (_this->_impl_.discord_message_id_.IsDefault()) {
          _this->_internal_set_discord_message_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_created_at() != 0) {
        _this->_impl_.created_at_ = from._impl_.created_at_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_updated_at() != 0) {
        _this->_impl_.updated_at_ = from._impl_.updated_at_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DraftMetadata::CopyFrom(const DraftMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.DraftMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DraftMetadata::InternalSwap(DraftMetadata* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.discord_channel_id_, &other->_impl_.discord_channel_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.discord_message_id_, &other->_impl_.discord_message_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DraftMetadata, _impl_.updated_at_)
      + sizeof(DraftMetadata::_impl_.updated_at_)
      - PROTOBUF_FIELD_OFFSET(DraftMetadata, _impl_.created_at_)>(
          reinterpret_cast<char*>(&_impl_.created_at_),
          reinterpret_cast<char*>(&other->_impl_.created_at_));
}

::google::protobuf::Metadata DraftMetadata::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CharacterDraft::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CharacterDraft>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_._has_bits_);
};

void CharacterDraft::clear_validation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.validation_ != nullptr) _impl_.validation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040U;
}
CharacterDraft::CharacterDraft(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CharacterDraft_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.CharacterDraft)
}
PROTOBUF_NDEBUG_INLINE CharacterDraft::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::CharacterDraft& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        choices_{visibility, arena, from.choices_},
        id_(arena, from.id_),
        player_id_(arena, from.player_id_),
        session_id_(arena, from.session_id_),
        name_(arena, from.name_) {}

CharacterDraft::CharacterDraft(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CharacterDraft& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CharacterDraft_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CharacterDraft* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.base_ability_scores_ = ((cached_has_bits & 0x00000010U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.base_ability_scores_)
                : nullptr;
  _impl_.progress_ = ((cached_has_bits & 0x00000020U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.progress_)
                : nullptr;
  _impl_.validation_ = ((cached_has_bits & 0x00000040U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.validation_)
                : nullptr;
  _impl_.race_info_ = ((cached_has_bits & 0x00000080U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.race_info_)
                : nullptr;
  _impl_.subrace_info_ = ((cached_has_bits & 0x00000100U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.subrace_info_)
                : nullptr;
  _impl_.class_info_ = ((cached_has_bits & 0x00000200U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.class_info_)
                : nullptr;
  _impl_.background_info_ = ((cached_has_bits & 0x00000400U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.background_info_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, race_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, race_),
           offsetof(Impl_, background_) -
               offsetof(Impl_, race_) +
               sizeof(Impl_::background_));

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.CharacterDraft)
}
PROTOBUF_NDEBUG_INLINE CharacterDraft::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        choices_{visibility, arena},
        id_(arena),
        player_id_(arena),
        session_id_(arena),
        name_(arena) {}

inline void CharacterDraft::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, base_ability_scores_),
           0,
           offsetof(Impl_, background_) -
               offsetof(Impl_, base_ability_scores_) +
               sizeof(Impl_::background_));
}
CharacterDraft::~CharacterDraft() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.CharacterDraft)
  SharedDtor(*this);
}
inline void CharacterDraft::SharedDtor(MessageLite& self) {
  CharacterDraft& this_ = static_cast<CharacterDraft&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.player_id_.Destroy();
  this_._impl_.session_id_.Destroy();
  this_._impl_.name_.Destroy();
  delete this_._impl_.base_ability_scores_;
  delete this_._impl_.progress_;
  delete this_._impl_.validation_;
  delete this_._impl_.race_info_;
  delete this_._impl_.subrace_info_;
  delete this_._impl_.class_info_;
  delete this_._impl_.background_info_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CharacterDraft::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CharacterDraft(arena);
}
constexpr auto CharacterDraft::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.choices_) +
          decltype(CharacterDraft::_impl_.choices_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CharacterDraft), alignof(CharacterDraft), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CharacterDraft::PlacementNew_,
                                 sizeof(CharacterDraft),
                                 alignof(CharacterDraft));
  }
}
constexpr auto CharacterDraft::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CharacterDraft_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CharacterDraft::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CharacterDraft>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CharacterDraft::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CharacterDraft>(), &CharacterDraft::ByteSizeLong,
              &CharacterDraft::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_._cached_size_),
          false,
      },
      &CharacterDraft::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CharacterDraft_class_data_ =
        CharacterDraft::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CharacterDraft::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CharacterDraft_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CharacterDraft_class_data_.tc_table);
  return CharacterDraft_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 17, 8, 83, 2>
CharacterDraft::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_._has_bits_),
    0, // no _extensions_
    17, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294836224,  // skipmap
    offsetof(decltype(_table_), field_entries),
    17,  // num_field_entries
    8,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CharacterDraft_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CharacterDraft>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.id_)}},
    // string player_id = 2 [json_name = "playerId"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.player_id_)}},
    // string session_id = 3 [json_name = "sessionId"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.session_id_)}},
    // string name = 4 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.name_)}},
    // .dnd5e.api.v1alpha1.Race race = 5 [json_name = "race"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CharacterDraft, _impl_.race_), 11>(),
     {40, 11, 0, PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.race_)}},
    // .dnd5e.api.v1alpha1.Subrace subrace = 6 [json_name = "subrace"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CharacterDraft, _impl_.subrace_), 12>(),
     {48, 12, 0, PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.subrace_)}},
    // .dnd5e.api.v1alpha1.Class class = 7 [json_name = "class"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CharacterDraft, _impl_.class__), 13>(),
     {56, 13, 0, PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.class__)}},
    // .dnd5e.api.v1alpha1.Subclass subclass = 8 [json_name = "subclass"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CharacterDraft, _impl_.subclass_), 14>(),
     {64, 14, 0, PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.subclass_)}},
    // .dnd5e.api.v1alpha1.Background background = 9 [json_name = "background"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CharacterDraft, _impl_.background_), 15>(),
     {72, 15, 0, PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.background_)}},
    // .dnd5e.api.v1alpha1.AbilityScores base_ability_scores = 10 [json_name = "baseAbilityScores"];
    {::_pbi::TcParser::FastMtS1,
     {82, 4, 0, PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.base_ability_scores_)}},
    // repeated .dnd5e.api.v1alpha1.ChoiceData choices = 11 [json_name = "choices"];
    {::_pbi::TcParser::FastMtR1,
     {90, 63, 1, PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.choices_)}},
    // .dnd5e.api.v1alpha1.CreationProgress progress = 12 [json_name = "progress"];
    {::_pbi::TcParser::FastMtS1,
     {98, 5, 2, PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.progress_)}},
    // .dnd5e.api.v1alpha1.ValidationResult validation = 13 [json_name = "validation"];
    {::_pbi::TcParser::FastMtS1,
     {106, 6, 3, PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.validation_)}},
    // .dnd5e.api.v1alpha1.RaceInfo race_info = 14 [json_name = "raceInfo"];
    {::_pbi::TcParser::FastMtS1,
     {114, 7, 4, PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.race_info_)}},
    // .dnd5e.api.v1alpha1.SubraceInfo subrace_info = 15 [json_name = "subraceInfo"];
    {::_pbi::TcParser::FastMtS1,
     {122, 8, 5, PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.subrace_info_)}},
    // .dnd5e.api.v1alpha1.ClassInfo class_info = 16 [json_name = "classInfo"];
    {::_pbi::TcParser::FastMtS2,
     {386, 9, 6, PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.class_info_)}},
    // .dnd5e.api.v1alpha1.BackgroundInfo background_info = 17 [json_name = "backgroundInfo"];
    {::_pbi::TcParser::FastMtS2,
     {394, 10, 7, PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.background_info_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string player_id = 2 [json_name = "playerId"];
    {PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.player_id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string session_id = 3 [json_name = "sessionId"];
    {PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.session_id_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 4 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.name_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .dnd5e.api.v1alpha1.Race race = 5 [json_name = "race"];
    {PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.race_), _Internal::kHasBitsOffset + 11, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.Subrace subrace = 6 [json_name = "subrace"];
    {PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.subrace_), _Internal::kHasBitsOffset + 12, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.Class class = 7 [json_name = "class"];
    {PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.class__), _Internal::kHasBitsOffset + 13, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.Subclass subclass = 8 [json_name = "subclass"];
    {PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.subclass_), _Internal::kHasBitsOffset + 14, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.Background background = 9 [json_name = "background"];
    {PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.background_), _Internal::kHasBitsOffset + 15, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.AbilityScores base_ability_scores = 10 [json_name = "baseAbilityScores"];
    {PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.base_ability_scores_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dnd5e.api.v1alpha1.ChoiceData choices = 11 [json_name = "choices"];
    {PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.choices_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.CreationProgress progress = 12 [json_name = "progress"];
    {PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.progress_), _Internal::kHasBitsOffset + 5, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.ValidationResult validation = 13 [json_name = "validation"];
    {PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.validation_), _Internal::kHasBitsOffset + 6, 3, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.RaceInfo race_info = 14 [json_name = "raceInfo"];
    {PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.race_info_), _Internal::kHasBitsOffset + 7, 4, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.SubraceInfo subrace_info = 15 [json_name = "subraceInfo"];
    {PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.subrace_info_), _Internal::kHasBitsOffset + 8, 5, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.ClassInfo class_info = 16 [json_name = "classInfo"];
    {PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.class_info_), _Internal::kHasBitsOffset + 9, 6, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.BackgroundInfo background_info = 17 [json_name = "backgroundInfo"];
    {PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.background_info_), _Internal::kHasBitsOffset + 10, 7, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::AbilityScores>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ChoiceData>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CreationProgress>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ValidationResult>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::RaceInfo>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::SubraceInfo>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ClassInfo>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::BackgroundInfo>()},
  }},
  {{
    "\41\2\11\12\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.CharacterDraft"
    "id"
    "player_id"
    "session_id"
    "name"
  }},
};
PROTOBUF_NOINLINE void CharacterDraft::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.CharacterDraft)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.choices_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.player_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.session_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(_impl_.base_ability_scores_ != nullptr);
      _impl_.base_ability_scores_->Clear();
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      ABSL_DCHECK(_impl_.progress_ != nullptr);
      _impl_.progress_->Clear();
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      ABSL_DCHECK(_impl_.validation_ != nullptr);
      _impl_.validation_->Clear();
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      ABSL_DCHECK(_impl_.race_info_ != nullptr);
      _impl_.race_info_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000700U) != 0) {
    if ((cached_has_bits & 0x00000100U) != 0) {
      ABSL_DCHECK(_impl_.subrace_info_ != nullptr);
      _impl_.subrace_info_->Clear();
    }
    if ((cached_has_bits & 0x00000200U) != 0) {
      ABSL_DCHECK(_impl_.class_info_ != nullptr);
      _impl_.class_info_->Clear();
    }
    if ((cached_has_bits & 0x00000400U) != 0) {
      ABSL_DCHECK(_impl_.background_info_ != nullptr);
      _impl_.background_info_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000f800U) != 0) {
    ::memset(&_impl_.race_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.background_) -
        reinterpret_cast<char*>(&_impl_.race_)) + sizeof(_impl_.background_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CharacterDraft::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CharacterDraft& this_ = static_cast<const CharacterDraft&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CharacterDraft::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CharacterDraft& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.CharacterDraft)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1 [json_name = "id"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_id().empty()) {
      const ::std::string& _s = this_._internal_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.CharacterDraft.id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string player_id = 2 [json_name = "playerId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_player_id().empty()) {
      const ::std::string& _s = this_._internal_player_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.CharacterDraft.player_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string session_id = 3 [json_name = "sessionId"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_session_id().empty()) {
      const ::std::string& _s = this_._internal_session_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.CharacterDraft.session_id");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string name = 4 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.CharacterDraft.name");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // .dnd5e.api.v1alpha1.Race race = 5 [json_name = "race"];
  if ((this_._impl_._has_bits_[0] & 0x00000800U) != 0) {
    if (this_._internal_race() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          5, this_._internal_race(), target);
    }
  }

  // .dnd5e.api.v1alpha1.Subrace subrace = 6 [json_name = "subrace"];
  if ((this_._impl_._has_bits_[0] & 0x00001000U) != 0) {
    if (this_._internal_subrace() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          6, this_._internal_subrace(), target);
    }
  }

  // .dnd5e.api.v1alpha1.Class class = 7 [json_name = "class"];
  if ((this_._impl_._has_bits_[0] & 0x00002000U) != 0) {
    if (this_._internal_class_() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          7, this_._internal_class_(), target);
    }
  }

  // .dnd5e.api.v1alpha1.Subclass subclass = 8 [json_name = "subclass"];
  if ((this_._impl_._has_bits_[0] & 0x00004000U) != 0) {
    if (this_._internal_subclass() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          8, this_._internal_subclass(), target);
    }
  }

  // .dnd5e.api.v1alpha1.Background background = 9 [json_name = "background"];
  if ((this_._impl_._has_bits_[0] & 0x00008000U) != 0) {
    if (this_._internal_background() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          9, this_._internal_background(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.AbilityScores base_ability_scores = 10 [json_name = "baseAbilityScores"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        10, *this_._impl_.base_ability_scores_, this_._impl_.base_ability_scores_->GetCachedSize(), target,
        stream);
  }

  // repeated .dnd5e.api.v1alpha1.ChoiceData choices = 11 [json_name = "choices"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_choices_size());
       i < n; i++) {
    const auto& repfield = this_._internal_choices().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            11, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // .dnd5e.api.v1alpha1.CreationProgress progress = 12 [json_name = "progress"];
  if ((cached_has_bits & 0x00000020U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        12, *this_._impl_.progress_, this_._impl_.progress_->GetCachedSize(), target,
        stream);
  }

  // .dnd5e.api.v1alpha1.ValidationResult validation = 13 [json_name = "validation"];
  if ((cached_has_bits & 0x00000040U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        13, *this_._impl_.validation_, this_._impl_.validation_->GetCachedSize(), target,
        stream);
  }

  // .dnd5e.api.v1alpha1.RaceInfo race_info = 14 [json_name = "raceInfo"];
  if ((cached_has_bits & 0x00000080U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        14, *this_._impl_.race_info_, this_._impl_.race_info_->GetCachedSize(), target,
        stream);
  }

  // .dnd5e.api.v1alpha1.SubraceInfo subrace_info = 15 [json_name = "subraceInfo"];
  if ((cached_has_bits & 0x00000100U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        15, *this_._impl_.subrace_info_, this_._impl_.subrace_info_->GetCachedSize(), target,
        stream);
  }

  // .dnd5e.api.v1alpha1.ClassInfo class_info = 16 [json_name = "classInfo"];
  if ((cached_has_bits & 0x00000200U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        16, *this_._impl_.class_info_, this_._impl_.class_info_->GetCachedSize(), target,
        stream);
  }

  // .dnd5e.api.v1alpha1.BackgroundInfo background_info = 17 [json_name = "backgroundInfo"];
  if ((cached_has_bits & 0x00000400U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        17, *this_._impl_.background_info_, this_._impl_.background_info_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.CharacterDraft)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CharacterDraft::ByteSizeLong(const MessageLite& base) {
  const CharacterDraft& this_ = static_cast<const CharacterDraft&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CharacterDraft::ByteSizeLong() const {
  const CharacterDraft& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.CharacterDraft)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.ChoiceData choices = 11 [json_name = "choices"];
    {
      total_size += 1UL * this_._internal_choices_size();
      for (const auto& msg : this_._internal_choices()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    // string id = 1 [json_name = "id"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_id());
      }
    }
    // string player_id = 2 [json_name = "playerId"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_player_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_player_id());
      }
    }
    // string session_id = 3 [json_name = "sessionId"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_session_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_session_id());
      }
    }
    // string name = 4 [json_name = "name"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // .dnd5e.api.v1alpha1.AbilityScores base_ability_scores = 10 [json_name = "baseAbilityScores"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.base_ability_scores_);
    }
    // .dnd5e.api.v1alpha1.CreationProgress progress = 12 [json_name = "progress"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.progress_);
    }
    // .dnd5e.api.v1alpha1.ValidationResult validation = 13 [json_name = "validation"];
    if ((cached_has_bits & 0x00000040U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.validation_);
    }
    // .dnd5e.api.v1alpha1.RaceInfo race_info = 14 [json_name = "raceInfo"];
    if ((cached_has_bits & 0x00000080U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.race_info_);
    }
  }
  if ((cached_has_bits & 0x0000ff00U) != 0) {
    // .dnd5e.api.v1alpha1.SubraceInfo subrace_info = 15 [json_name = "subraceInfo"];
    if ((cached_has_bits & 0x00000100U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.subrace_info_);
    }
    // .dnd5e.api.v1alpha1.ClassInfo class_info = 16 [json_name = "classInfo"];
    if ((cached_has_bits & 0x00000200U) != 0) {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.class_info_);
    }
    // .dnd5e.api.v1alpha1.BackgroundInfo background_info = 17 [json_name = "backgroundInfo"];
    if ((cached_has_bits & 0x00000400U) != 0) {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.background_info_);
    }
    // .dnd5e.api.v1alpha1.Race race = 5 [json_name = "race"];
    if ((cached_has_bits & 0x00000800U) != 0) {
      if (this_._internal_race() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_race());
      }
    }
    // .dnd5e.api.v1alpha1.Subrace subrace = 6 [json_name = "subrace"];
    if ((cached_has_bits & 0x00001000U) != 0) {
      if (this_._internal_subrace() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_subrace());
      }
    }
    // .dnd5e.api.v1alpha1.Class class = 7 [json_name = "class"];
    if ((cached_has_bits & 0x00002000U) != 0) {
      if (this_._internal_class_() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_class_());
      }
    }
    // .dnd5e.api.v1alpha1.Subclass subclass = 8 [json_name = "subclass"];
    if ((cached_has_bits & 0x00004000U) != 0) {
      if (this_._internal_subclass() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_subclass());
      }
    }
    // .dnd5e.api.v1alpha1.Background background = 9 [json_name = "background"];
    if ((cached_has_bits & 0x00008000U) != 0) {
      if (this_._internal_background() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_background());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CharacterDraft::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CharacterDraft*>(&to_msg);
  auto& from = static_cast<const CharacterDraft&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.CharacterDraft)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_choices()->MergeFrom(
      from._internal_choices());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_id().empty()) {
        _this->_internal_set_id(from._internal_id());
      } else {
        if (_this->_impl_.id_.IsDefault()) {
          _this->_internal_set_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_player_id().empty()) {
        _this->_internal_set_player_id(from._internal_player_id());
      } else {
        if (_this->_impl_.player_id_.IsDefault()) {
          _this->_internal_set_player_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_session_id().empty()) {
        _this->_internal_set_session_id(from._internal_session_id());
      } else {
        if (_this->_impl_.session_id_.IsDefault()) {
          _this->_internal_set_session_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(from._impl_.base_ability_scores_ != nullptr);
      if (_this->_impl_.base_ability_scores_ == nullptr) {
        _this->_impl_.base_ability_scores_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.base_ability_scores_);
      } else {
        _this->_impl_.base_ability_scores_->MergeFrom(*from._impl_.base_ability_scores_);
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      ABSL_DCHECK(from._impl_.progress_ != nullptr);
      if (_this->_impl_.progress_ == nullptr) {
        _this->_impl_.progress_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.progress_);
      } else {
        _this->_impl_.progress_->MergeFrom(*from._impl_.progress_);
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      ABSL_DCHECK(from._impl_.validation_ != nullptr);
      if (_this->_impl_.validation_ == nullptr) {
        _this->_impl_.validation_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.validation_);
      } else {
        _this->_impl_.validation_->MergeFrom(*from._impl_.validation_);
      }
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      ABSL_DCHECK(from._impl_.race_info_ != nullptr);
      if (_this->_impl_.race_info_ == nullptr) {
        _this->_impl_.race_info_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.race_info_);
      } else {
        _this->_impl_.race_info_->MergeFrom(*from._impl_.race_info_);
      }
    }
  }
  if ((cached_has_bits & 0x0000ff00U) != 0) {
    if ((cached_has_bits & 0x00000100U) != 0) {
      ABSL_DCHECK(from._impl_.subrace_info_ != nullptr);
      if (_this->_impl_.subrace_info_ == nullptr) {
        _this->_impl_.subrace_info_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.subrace_info_);
      } else {
        _this->_impl_.subrace_info_->MergeFrom(*from._impl_.subrace_info_);
      }
    }
    if ((cached_has_bits & 0x00000200U) != 0) {
      ABSL_DCHECK(from._impl_.class_info_ != nullptr);
      if (_this->_impl_.class_info_ == nullptr) {
        _this->_impl_.class_info_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.class_info_);
      } else {
        _this->_impl_.class_info_->MergeFrom(*from._impl_.class_info_);
      }
    }
    if ((cached_has_bits & 0x00000400U) != 0) {
      ABSL_DCHECK(from._impl_.background_info_ != nullptr);
      if (_this->_impl_.background_info_ == nullptr) {
        _this->_impl_.background_info_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.background_info_);
      } else {
        _this->_impl_.background_info_->MergeFrom(*from._impl_.background_info_);
      }
    }
    if ((cached_has_bits & 0x00000800U) != 0) {
      if (from._internal_race() != 0) {
        _this->_impl_.race_ = from._impl_.race_;
      }
    }
    if ((cached_has_bits & 0x00001000U) != 0) {
      if (from._internal_subrace() != 0) {
        _this->_impl_.subrace_ = from._impl_.subrace_;
      }
    }
    if ((cached_has_bits & 0x00002000U) != 0) {
      if (from._internal_class_() != 0) {
        _this->_impl_.class__ = from._impl_.class__;
      }
    }
    if ((cached_has_bits & 0x00004000U) != 0) {
      if (from._internal_subclass() != 0) {
        _this->_impl_.subclass_ = from._impl_.subclass_;
      }
    }
    if ((cached_has_bits & 0x00008000U) != 0) {
      if (from._internal_background() != 0) {
        _this->_impl_.background_ = from._impl_.background_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CharacterDraft::CopyFrom(const CharacterDraft& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.CharacterDraft)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CharacterDraft::InternalSwap(CharacterDraft* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.choices_.InternalSwap(&other->_impl_.choices_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.player_id_, &other->_impl_.player_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_id_, &other->_impl_.session_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.background_)
      + sizeof(CharacterDraft::_impl_.background_)
      - PROTOBUF_FIELD_OFFSET(CharacterDraft, _impl_.base_ability_scores_)>(
          reinterpret_cast<char*>(&_impl_.base_ability_scores_),
          reinterpret_cast<char*>(&other->_impl_.base_ability_scores_));
}

::google::protobuf::Metadata CharacterDraft::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateDraftRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CreateDraftRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateDraftRequest, _impl_._has_bits_);
};

CreateDraftRequest::CreateDraftRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CreateDraftRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.CreateDraftRequest)
}
PROTOBUF_NDEBUG_INLINE CreateDraftRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::CreateDraftRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        player_id_(arena, from.player_id_),
        session_id_(arena, from.session_id_) {}

CreateDraftRequest::CreateDraftRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CreateDraftRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CreateDraftRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateDraftRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.initial_data_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.initial_data_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.CreateDraftRequest)
}
PROTOBUF_NDEBUG_INLINE CreateDraftRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        player_id_(arena),
        session_id_(arena) {}

inline void CreateDraftRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.initial_data_ = {};
}
CreateDraftRequest::~CreateDraftRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.CreateDraftRequest)
  SharedDtor(*this);
}
inline void CreateDraftRequest::SharedDtor(MessageLite& self) {
  CreateDraftRequest& this_ = static_cast<CreateDraftRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.player_id_.Destroy();
  this_._impl_.session_id_.Destroy();
  delete this_._impl_.initial_data_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CreateDraftRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CreateDraftRequest(arena);
}
constexpr auto CreateDraftRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CreateDraftRequest),
                                            alignof(CreateDraftRequest));
}
constexpr auto CreateDraftRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CreateDraftRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CreateDraftRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CreateDraftRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CreateDraftRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CreateDraftRequest>(), &CreateDraftRequest::ByteSizeLong,
              &CreateDraftRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CreateDraftRequest, _impl_._cached_size_),
          false,
      },
      &CreateDraftRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CreateDraftRequest_class_data_ =
        CreateDraftRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CreateDraftRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CreateDraftRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CreateDraftRequest_class_data_.tc_table);
  return CreateDraftRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 65, 2>
CreateDraftRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateDraftRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CreateDraftRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CreateDraftRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string player_id = 1 [json_name = "playerId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateDraftRequest, _impl_.player_id_)}},
    // string session_id = 2 [json_name = "sessionId"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CreateDraftRequest, _impl_.session_id_)}},
    // .dnd5e.api.v1alpha1.CharacterDraftData initial_data = 3 [json_name = "initialData"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(CreateDraftRequest, _impl_.initial_data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string player_id = 1 [json_name = "playerId"];
    {PROTOBUF_FIELD_OFFSET(CreateDraftRequest, _impl_.player_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string session_id = 2 [json_name = "sessionId"];
    {PROTOBUF_FIELD_OFFSET(CreateDraftRequest, _impl_.session_id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .dnd5e.api.v1alpha1.CharacterDraftData initial_data = 3 [json_name = "initialData"];
    {PROTOBUF_FIELD_OFFSET(CreateDraftRequest, _impl_.initial_data_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CharacterDraftData>()},
  }},
  {{
    "\45\11\12\0\0\0\0\0"
    "dnd5e.api.v1alpha1.CreateDraftRequest"
    "player_id"
    "session_id"
  }},
};
PROTOBUF_NOINLINE void CreateDraftRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.CreateDraftRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.player_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.session_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.initial_data_ != nullptr);
      _impl_.initial_data_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CreateDraftRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CreateDraftRequest& this_ = static_cast<const CreateDraftRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CreateDraftRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CreateDraftRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.CreateDraftRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string player_id = 1 [json_name = "playerId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_player_id().empty()) {
      const ::std::string& _s = this_._internal_player_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.CreateDraftRequest.player_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string session_id = 2 [json_name = "sessionId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_session_id().empty()) {
      const ::std::string& _s = this_._internal_session_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.CreateDraftRequest.session_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.CharacterDraftData initial_data = 3 [json_name = "initialData"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.initial_data_, this_._impl_.initial_data_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.CreateDraftRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CreateDraftRequest::ByteSizeLong(const MessageLite& base) {
  const CreateDraftRequest& this_ = static_cast<const CreateDraftRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CreateDraftRequest::ByteSizeLong() const {
  const CreateDraftRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.CreateDraftRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string player_id = 1 [json_name = "playerId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_player_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_player_id());
      }
    }
    // string session_id = 2 [json_name = "sessionId"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_session_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_session_id());
      }
    }
    // .dnd5e.api.v1alpha1.CharacterDraftData initial_data = 3 [json_name = "initialData"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.initial_data_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CreateDraftRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateDraftRequest*>(&to_msg);
  auto& from = static_cast<const CreateDraftRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.CreateDraftRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_player_id().empty()) {
        _this->_internal_set_player_id(from._internal_player_id());
      } else {
        if (_this->_impl_.player_id_.IsDefault()) {
          _this->_internal_set_player_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_session_id().empty()) {
        _this->_internal_set_session_id(from._internal_session_id());
      } else {
        if (_this->_impl_.session_id_.IsDefault()) {
          _this->_internal_set_session_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.initial_data_ != nullptr);
      if (_this->_impl_.initial_data_ == nullptr) {
        _this->_impl_.initial_data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.initial_data_);
      } else {
        _this->_impl_.initial_data_->MergeFrom(*from._impl_.initial_data_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateDraftRequest::CopyFrom(const CreateDraftRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.CreateDraftRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateDraftRequest::InternalSwap(CreateDraftRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.player_id_, &other->_impl_.player_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_id_, &other->_impl_.session_id_, arena);
  swap(_impl_.initial_data_, other->_impl_.initial_data_);
}

::google::protobuf::Metadata CreateDraftRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateDraftResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CreateDraftResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateDraftResponse, _impl_._has_bits_);
};

CreateDraftResponse::CreateDraftResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CreateDraftResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.CreateDraftResponse)
}
PROTOBUF_NDEBUG_INLINE CreateDraftResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::CreateDraftResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CreateDraftResponse::CreateDraftResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CreateDraftResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CreateDraftResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateDraftResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.draft_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.draft_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.CreateDraftResponse)
}
PROTOBUF_NDEBUG_INLINE CreateDraftResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CreateDraftResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.draft_ = {};
}
CreateDraftResponse::~CreateDraftResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.CreateDraftResponse)
  SharedDtor(*this);
}
inline void CreateDraftResponse::SharedDtor(MessageLite& self) {
  CreateDraftResponse& this_ = static_cast<CreateDraftResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.draft_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CreateDraftResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CreateDraftResponse(arena);
}
constexpr auto CreateDraftResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CreateDraftResponse),
                                            alignof(CreateDraftResponse));
}
constexpr auto CreateDraftResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CreateDraftResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CreateDraftResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CreateDraftResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CreateDraftResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CreateDraftResponse>(), &CreateDraftResponse::ByteSizeLong,
              &CreateDraftResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CreateDraftResponse, _impl_._cached_size_),
          false,
      },
      &CreateDraftResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CreateDraftResponse_class_data_ =
        CreateDraftResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CreateDraftResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CreateDraftResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CreateDraftResponse_class_data_.tc_table);
  return CreateDraftResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
CreateDraftResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateDraftResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CreateDraftResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CreateDraftResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateDraftResponse, _impl_.draft_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
    {PROTOBUF_FIELD_OFFSET(CreateDraftResponse, _impl_.draft_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CharacterDraft>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CreateDraftResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.CreateDraftResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.draft_ != nullptr);
    _impl_.draft_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CreateDraftResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CreateDraftResponse& this_ = static_cast<const CreateDraftResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CreateDraftResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CreateDraftResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.CreateDraftResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.draft_, this_._impl_.draft_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.CreateDraftResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CreateDraftResponse::ByteSizeLong(const MessageLite& base) {
  const CreateDraftResponse& this_ = static_cast<const CreateDraftResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CreateDraftResponse::ByteSizeLong() const {
  const CreateDraftResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.CreateDraftResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.draft_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CreateDraftResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateDraftResponse*>(&to_msg);
  auto& from = static_cast<const CreateDraftResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.CreateDraftResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(from._impl_.draft_ != nullptr);
    if (_this->_impl_.draft_ == nullptr) {
      _this->_impl_.draft_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.draft_);
    } else {
      _this->_impl_.draft_->MergeFrom(*from._impl_.draft_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateDraftResponse::CopyFrom(const CreateDraftResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.CreateDraftResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateDraftResponse::InternalSwap(CreateDraftResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.draft_, other->_impl_.draft_);
}

::google::protobuf::Metadata CreateDraftResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetDraftRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetDraftRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetDraftRequest, _impl_._has_bits_);
};

GetDraftRequest::GetDraftRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetDraftRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.GetDraftRequest)
}
PROTOBUF_NDEBUG_INLINE GetDraftRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::GetDraftRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        draft_id_(arena, from.draft_id_) {}

GetDraftRequest::GetDraftRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetDraftRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetDraftRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetDraftRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.GetDraftRequest)
}
PROTOBUF_NDEBUG_INLINE GetDraftRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        draft_id_(arena) {}

inline void GetDraftRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetDraftRequest::~GetDraftRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.GetDraftRequest)
  SharedDtor(*this);
}
inline void GetDraftRequest::SharedDtor(MessageLite& self) {
  GetDraftRequest& this_ = static_cast<GetDraftRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.draft_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetDraftRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetDraftRequest(arena);
}
constexpr auto GetDraftRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetDraftRequest),
                                            alignof(GetDraftRequest));
}
constexpr auto GetDraftRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetDraftRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetDraftRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetDraftRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetDraftRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetDraftRequest>(), &GetDraftRequest::ByteSizeLong,
              &GetDraftRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetDraftRequest, _impl_._cached_size_),
          false,
      },
      &GetDraftRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetDraftRequest_class_data_ =
        GetDraftRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetDraftRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetDraftRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetDraftRequest_class_data_.tc_table);
  return GetDraftRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 51, 2>
GetDraftRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetDraftRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetDraftRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::GetDraftRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string draft_id = 1 [json_name = "draftId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetDraftRequest, _impl_.draft_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string draft_id = 1 [json_name = "draftId"];
    {PROTOBUF_FIELD_OFFSET(GetDraftRequest, _impl_.draft_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\10\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.GetDraftRequest"
    "draft_id"
  }},
};
PROTOBUF_NOINLINE void GetDraftRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.GetDraftRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.draft_id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetDraftRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetDraftRequest& this_ = static_cast<const GetDraftRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetDraftRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetDraftRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.GetDraftRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string draft_id = 1 [json_name = "draftId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_draft_id().empty()) {
      const ::std::string& _s = this_._internal_draft_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.GetDraftRequest.draft_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.GetDraftRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetDraftRequest::ByteSizeLong(const MessageLite& base) {
  const GetDraftRequest& this_ = static_cast<const GetDraftRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetDraftRequest::ByteSizeLong() const {
  const GetDraftRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.GetDraftRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string draft_id = 1 [json_name = "draftId"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_draft_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_draft_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetDraftRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetDraftRequest*>(&to_msg);
  auto& from = static_cast<const GetDraftRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.GetDraftRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!from._internal_draft_id().empty()) {
      _this->_internal_set_draft_id(from._internal_draft_id());
    } else {
      if (_this->_impl_.draft_id_.IsDefault()) {
        _this->_internal_set_draft_id("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetDraftRequest::CopyFrom(const GetDraftRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.GetDraftRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetDraftRequest::InternalSwap(GetDraftRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.draft_id_, &other->_impl_.draft_id_, arena);
}

::google::protobuf::Metadata GetDraftRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetDraftResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetDraftResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetDraftResponse, _impl_._has_bits_);
};

GetDraftResponse::GetDraftResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetDraftResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.GetDraftResponse)
}
PROTOBUF_NDEBUG_INLINE GetDraftResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::GetDraftResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetDraftResponse::GetDraftResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetDraftResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetDraftResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetDraftResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.draft_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.draft_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.GetDraftResponse)
}
PROTOBUF_NDEBUG_INLINE GetDraftResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void GetDraftResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.draft_ = {};
}
GetDraftResponse::~GetDraftResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.GetDraftResponse)
  SharedDtor(*this);
}
inline void GetDraftResponse::SharedDtor(MessageLite& self) {
  GetDraftResponse& this_ = static_cast<GetDraftResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.draft_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetDraftResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetDraftResponse(arena);
}
constexpr auto GetDraftResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetDraftResponse),
                                            alignof(GetDraftResponse));
}
constexpr auto GetDraftResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetDraftResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetDraftResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetDraftResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetDraftResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetDraftResponse>(), &GetDraftResponse::ByteSizeLong,
              &GetDraftResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetDraftResponse, _impl_._cached_size_),
          false,
      },
      &GetDraftResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetDraftResponse_class_data_ =
        GetDraftResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetDraftResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetDraftResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetDraftResponse_class_data_.tc_table);
  return GetDraftResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
GetDraftResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetDraftResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetDraftResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::GetDraftResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetDraftResponse, _impl_.draft_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
    {PROTOBUF_FIELD_OFFSET(GetDraftResponse, _impl_.draft_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CharacterDraft>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void GetDraftResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.GetDraftResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.draft_ != nullptr);
    _impl_.draft_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetDraftResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetDraftResponse& this_ = static_cast<const GetDraftResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetDraftResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetDraftResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.GetDraftResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.draft_, this_._impl_.draft_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.GetDraftResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetDraftResponse::ByteSizeLong(const MessageLite& base) {
  const GetDraftResponse& this_ = static_cast<const GetDraftResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetDraftResponse::ByteSizeLong() const {
  const GetDraftResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.GetDraftResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.draft_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetDraftResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetDraftResponse*>(&to_msg);
  auto& from = static_cast<const GetDraftResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.GetDraftResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(from._impl_.draft_ != nullptr);
    if (_this->_impl_.draft_ == nullptr) {
      _this->_impl_.draft_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.draft_);
    } else {
      _this->_impl_.draft_->MergeFrom(*from._impl_.draft_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetDraftResponse::CopyFrom(const GetDraftResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.GetDraftResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetDraftResponse::InternalSwap(GetDraftResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.draft_, other->_impl_.draft_);
}

::google::protobuf::Metadata GetDraftResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateDraftRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<UpdateDraftRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateDraftRequest, _impl_._has_bits_);
};

UpdateDraftRequest::UpdateDraftRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateDraftRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.UpdateDraftRequest)
}
PROTOBUF_NDEBUG_INLINE UpdateDraftRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::UpdateDraftRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        update_mask_{visibility, arena, from.update_mask_},
        draft_id_(arena, from.draft_id_) {}

UpdateDraftRequest::UpdateDraftRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const UpdateDraftRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateDraftRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateDraftRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.updates_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.updates_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.UpdateDraftRequest)
}
PROTOBUF_NDEBUG_INLINE UpdateDraftRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        update_mask_{visibility, arena},
        draft_id_(arena) {}

inline void UpdateDraftRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.updates_ = {};
}
UpdateDraftRequest::~UpdateDraftRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.UpdateDraftRequest)
  SharedDtor(*this);
}
inline void UpdateDraftRequest::SharedDtor(MessageLite& self) {
  UpdateDraftRequest& this_ = static_cast<UpdateDraftRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.draft_id_.Destroy();
  delete this_._impl_.updates_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL UpdateDraftRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UpdateDraftRequest(arena);
}
constexpr auto UpdateDraftRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(UpdateDraftRequest, _impl_.update_mask_) +
          decltype(UpdateDraftRequest::_impl_.update_mask_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(UpdateDraftRequest), alignof(UpdateDraftRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&UpdateDraftRequest::PlacementNew_,
                                 sizeof(UpdateDraftRequest),
                                 alignof(UpdateDraftRequest));
  }
}
constexpr auto UpdateDraftRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UpdateDraftRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UpdateDraftRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UpdateDraftRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UpdateDraftRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UpdateDraftRequest>(), &UpdateDraftRequest::ByteSizeLong,
              &UpdateDraftRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UpdateDraftRequest, _impl_._cached_size_),
          false,
      },
      &UpdateDraftRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull UpdateDraftRequest_class_data_ =
        UpdateDraftRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
UpdateDraftRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UpdateDraftRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UpdateDraftRequest_class_data_.tc_table);
  return UpdateDraftRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 65, 2>
UpdateDraftRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateDraftRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    UpdateDraftRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::UpdateDraftRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string draft_id = 1 [json_name = "draftId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateDraftRequest, _impl_.draft_id_)}},
    // .dnd5e.api.v1alpha1.CharacterDraftData updates = 2 [json_name = "updates"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(UpdateDraftRequest, _impl_.updates_)}},
    // repeated string update_mask = 3 [json_name = "updateMask"];
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateDraftRequest, _impl_.update_mask_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string draft_id = 1 [json_name = "draftId"];
    {PROTOBUF_FIELD_OFFSET(UpdateDraftRequest, _impl_.draft_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .dnd5e.api.v1alpha1.CharacterDraftData updates = 2 [json_name = "updates"];
    {PROTOBUF_FIELD_OFFSET(UpdateDraftRequest, _impl_.updates_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string update_mask = 3 [json_name = "updateMask"];
    {PROTOBUF_FIELD_OFFSET(UpdateDraftRequest, _impl_.update_mask_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CharacterDraftData>()},
  }},
  {{
    "\45\10\0\13\0\0\0\0"
    "dnd5e.api.v1alpha1.UpdateDraftRequest"
    "draft_id"
    "update_mask"
  }},
};
PROTOBUF_NOINLINE void UpdateDraftRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.UpdateDraftRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.update_mask_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.draft_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.updates_ != nullptr);
      _impl_.updates_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UpdateDraftRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UpdateDraftRequest& this_ = static_cast<const UpdateDraftRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UpdateDraftRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UpdateDraftRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.UpdateDraftRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string draft_id = 1 [json_name = "draftId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_draft_id().empty()) {
      const ::std::string& _s = this_._internal_draft_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.UpdateDraftRequest.draft_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.CharacterDraftData updates = 2 [json_name = "updates"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.updates_, this_._impl_.updates_->GetCachedSize(), target,
        stream);
  }

  // repeated string update_mask = 3 [json_name = "updateMask"];
  for (int i = 0, n = this_._internal_update_mask_size(); i < n; ++i) {
    const auto& s = this_._internal_update_mask().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.UpdateDraftRequest.update_mask");
    target = stream->WriteString(3, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.UpdateDraftRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UpdateDraftRequest::ByteSizeLong(const MessageLite& base) {
  const UpdateDraftRequest& this_ = static_cast<const UpdateDraftRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UpdateDraftRequest::ByteSizeLong() const {
  const UpdateDraftRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.UpdateDraftRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string update_mask = 3 [json_name = "updateMask"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_update_mask().size());
      for (int i = 0, n = this_._internal_update_mask().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_update_mask().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string draft_id = 1 [json_name = "draftId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_draft_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_draft_id());
      }
    }
    // .dnd5e.api.v1alpha1.CharacterDraftData updates = 2 [json_name = "updates"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.updates_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UpdateDraftRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateDraftRequest*>(&to_msg);
  auto& from = static_cast<const UpdateDraftRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.UpdateDraftRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_update_mask()->MergeFrom(from._internal_update_mask());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_draft_id().empty()) {
        _this->_internal_set_draft_id(from._internal_draft_id());
      } else {
        if (_this->_impl_.draft_id_.IsDefault()) {
          _this->_internal_set_draft_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.updates_ != nullptr);
      if (_this->_impl_.updates_ == nullptr) {
        _this->_impl_.updates_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.updates_);
      } else {
        _this->_impl_.updates_->MergeFrom(*from._impl_.updates_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateDraftRequest::CopyFrom(const UpdateDraftRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.UpdateDraftRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateDraftRequest::InternalSwap(UpdateDraftRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.update_mask_.InternalSwap(&other->_impl_.update_mask_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.draft_id_, &other->_impl_.draft_id_, arena);
  swap(_impl_.updates_, other->_impl_.updates_);
}

::google::protobuf::Metadata UpdateDraftRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateDraftResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<UpdateDraftResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateDraftResponse, _impl_._has_bits_);
};

void UpdateDraftResponse::clear_warnings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.warnings_.Clear();
}
UpdateDraftResponse::UpdateDraftResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateDraftResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.UpdateDraftResponse)
}
PROTOBUF_NDEBUG_INLINE UpdateDraftResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::UpdateDraftResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        warnings_{visibility, arena, from.warnings_} {}

UpdateDraftResponse::UpdateDraftResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const UpdateDraftResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateDraftResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateDraftResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.draft_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.draft_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.UpdateDraftResponse)
}
PROTOBUF_NDEBUG_INLINE UpdateDraftResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        warnings_{visibility, arena} {}

inline void UpdateDraftResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.draft_ = {};
}
UpdateDraftResponse::~UpdateDraftResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.UpdateDraftResponse)
  SharedDtor(*this);
}
inline void UpdateDraftResponse::SharedDtor(MessageLite& self) {
  UpdateDraftResponse& this_ = static_cast<UpdateDraftResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.draft_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL UpdateDraftResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UpdateDraftResponse(arena);
}
constexpr auto UpdateDraftResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(UpdateDraftResponse, _impl_.warnings_) +
          decltype(UpdateDraftResponse::_impl_.warnings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(UpdateDraftResponse), alignof(UpdateDraftResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&UpdateDraftResponse::PlacementNew_,
                                 sizeof(UpdateDraftResponse),
                                 alignof(UpdateDraftResponse));
  }
}
constexpr auto UpdateDraftResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UpdateDraftResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UpdateDraftResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UpdateDraftResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UpdateDraftResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UpdateDraftResponse>(), &UpdateDraftResponse::ByteSizeLong,
              &UpdateDraftResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UpdateDraftResponse, _impl_._cached_size_),
          false,
      },
      &UpdateDraftResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull UpdateDraftResponse_class_data_ =
        UpdateDraftResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
UpdateDraftResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UpdateDraftResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UpdateDraftResponse_class_data_.tc_table);
  return UpdateDraftResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
UpdateDraftResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateDraftResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    UpdateDraftResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::UpdateDraftResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [json_name = "warnings", deprecated = true];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(UpdateDraftResponse, _impl_.warnings_)}},
    // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateDraftResponse, _impl_.draft_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
    {PROTOBUF_FIELD_OFFSET(UpdateDraftResponse, _impl_.draft_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [json_name = "warnings", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(UpdateDraftResponse, _impl_.warnings_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CharacterDraft>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ValidationWarning>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void UpdateDraftResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.UpdateDraftResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.warnings_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.draft_ != nullptr);
    _impl_.draft_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UpdateDraftResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UpdateDraftResponse& this_ = static_cast<const UpdateDraftResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UpdateDraftResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UpdateDraftResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.UpdateDraftResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.draft_, this_._impl_.draft_->GetCachedSize(), target,
        stream);
  }

  // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [json_name = "warnings", deprecated = true];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_warnings_size());
       i < n; i++) {
    const auto& repfield = this_._internal_warnings().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.UpdateDraftResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UpdateDraftResponse::ByteSizeLong(const MessageLite& base) {
  const UpdateDraftResponse& this_ = static_cast<const UpdateDraftResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UpdateDraftResponse::ByteSizeLong() const {
  const UpdateDraftResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.UpdateDraftResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [json_name = "warnings", deprecated = true];
    {
      total_size += 1UL * this_._internal_warnings_size();
      for (const auto& msg : this_._internal_warnings()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.draft_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UpdateDraftResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateDraftResponse*>(&to_msg);
  auto& from = static_cast<const UpdateDraftResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.UpdateDraftResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_warnings()->MergeFrom(
      from._internal_warnings());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(from._impl_.draft_ != nullptr);
    if (_this->_impl_.draft_ == nullptr) {
      _this->_impl_.draft_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.draft_);
    } else {
      _this->_impl_.draft_->MergeFrom(*from._impl_.draft_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateDraftResponse::CopyFrom(const UpdateDraftResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.UpdateDraftResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateDraftResponse::InternalSwap(UpdateDraftResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.warnings_.InternalSwap(&other->_impl_.warnings_);
  swap(_impl_.draft_, other->_impl_.draft_);
}

::google::protobuf::Metadata UpdateDraftResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateNameRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<UpdateNameRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateNameRequest, _impl_._has_bits_);
};

UpdateNameRequest::UpdateNameRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateNameRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.UpdateNameRequest)
}
PROTOBUF_NDEBUG_INLINE UpdateNameRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::UpdateNameRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        draft_id_(arena, from.draft_id_),
        name_(arena, from.name_) {}

UpdateNameRequest::UpdateNameRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const UpdateNameRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateNameRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateNameRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.UpdateNameRequest)
}
PROTOBUF_NDEBUG_INLINE UpdateNameRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        draft_id_(arena),
        name_(arena) {}

inline void UpdateNameRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UpdateNameRequest::~UpdateNameRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.UpdateNameRequest)
  SharedDtor(*this);
}
inline void UpdateNameRequest::SharedDtor(MessageLite& self) {
  UpdateNameRequest& this_ = static_cast<UpdateNameRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.draft_id_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL UpdateNameRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UpdateNameRequest(arena);
}
constexpr auto UpdateNameRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(UpdateNameRequest),
                                            alignof(UpdateNameRequest));
}
constexpr auto UpdateNameRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UpdateNameRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UpdateNameRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UpdateNameRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UpdateNameRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UpdateNameRequest>(), &UpdateNameRequest::ByteSizeLong,
              &UpdateNameRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UpdateNameRequest, _impl_._cached_size_),
          false,
      },
      &UpdateNameRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull UpdateNameRequest_class_data_ =
        UpdateNameRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
UpdateNameRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UpdateNameRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UpdateNameRequest_class_data_.tc_table);
  return UpdateNameRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 57, 2>
UpdateNameRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateNameRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    UpdateNameRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::UpdateNameRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(UpdateNameRequest, _impl_.name_)}},
    // string draft_id = 1 [json_name = "draftId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateNameRequest, _impl_.draft_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string draft_id = 1 [json_name = "draftId"];
    {PROTOBUF_FIELD_OFFSET(UpdateNameRequest, _impl_.draft_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(UpdateNameRequest, _impl_.name_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\10\4\0\0\0\0\0"
    "dnd5e.api.v1alpha1.UpdateNameRequest"
    "draft_id"
    "name"
  }},
};
PROTOBUF_NOINLINE void UpdateNameRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.UpdateNameRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.draft_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UpdateNameRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UpdateNameRequest& this_ = static_cast<const UpdateNameRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UpdateNameRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UpdateNameRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.UpdateNameRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string draft_id = 1 [json_name = "draftId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_draft_id().empty()) {
      const ::std::string& _s = this_._internal_draft_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.UpdateNameRequest.draft_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string name = 2 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.UpdateNameRequest.name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.UpdateNameRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UpdateNameRequest::ByteSizeLong(const MessageLite& base) {
  const UpdateNameRequest& this_ = static_cast<const UpdateNameRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UpdateNameRequest::ByteSizeLong() const {
  const UpdateNameRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.UpdateNameRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string draft_id = 1 [json_name = "draftId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_draft_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_draft_id());
      }
    }
    // string name = 2 [json_name = "name"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UpdateNameRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateNameRequest*>(&to_msg);
  auto& from = static_cast<const UpdateNameRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.UpdateNameRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_draft_id().empty()) {
        _this->_internal_set_draft_id(from._internal_draft_id());
      } else {
        if (_this->_impl_.draft_id_.IsDefault()) {
          _this->_internal_set_draft_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateNameRequest::CopyFrom(const UpdateNameRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.UpdateNameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateNameRequest::InternalSwap(UpdateNameRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.draft_id_, &other->_impl_.draft_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata UpdateNameRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateRaceRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<UpdateRaceRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateRaceRequest, _impl_._has_bits_);
};

UpdateRaceRequest::UpdateRaceRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateRaceRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.UpdateRaceRequest)
}
PROTOBUF_NDEBUG_INLINE UpdateRaceRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::UpdateRaceRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        race_choices_{visibility, arena, from.race_choices_},
        draft_id_(arena, from.draft_id_) {}

UpdateRaceRequest::UpdateRaceRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const UpdateRaceRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateRaceRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateRaceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, race_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, race_),
           offsetof(Impl_, subrace_) -
               offsetof(Impl_, race_) +
               sizeof(Impl_::subrace_));

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.UpdateRaceRequest)
}
PROTOBUF_NDEBUG_INLINE UpdateRaceRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        race_choices_{visibility, arena},
        draft_id_(arena) {}

inline void UpdateRaceRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, race_),
           0,
           offsetof(Impl_, subrace_) -
               offsetof(Impl_, race_) +
               sizeof(Impl_::subrace_));
}
UpdateRaceRequest::~UpdateRaceRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.UpdateRaceRequest)
  SharedDtor(*this);
}
inline void UpdateRaceRequest::SharedDtor(MessageLite& self) {
  UpdateRaceRequest& this_ = static_cast<UpdateRaceRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.draft_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL UpdateRaceRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UpdateRaceRequest(arena);
}
constexpr auto UpdateRaceRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(UpdateRaceRequest, _impl_.race_choices_) +
          decltype(UpdateRaceRequest::_impl_.race_choices_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(UpdateRaceRequest), alignof(UpdateRaceRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&UpdateRaceRequest::PlacementNew_,
                                 sizeof(UpdateRaceRequest),
                                 alignof(UpdateRaceRequest));
  }
}
constexpr auto UpdateRaceRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UpdateRaceRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UpdateRaceRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UpdateRaceRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UpdateRaceRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UpdateRaceRequest>(), &UpdateRaceRequest::ByteSizeLong,
              &UpdateRaceRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UpdateRaceRequest, _impl_._cached_size_),
          false,
      },
      &UpdateRaceRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull UpdateRaceRequest_class_data_ =
        UpdateRaceRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
UpdateRaceRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UpdateRaceRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UpdateRaceRequest_class_data_.tc_table);
  return UpdateRaceRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 53, 2>
UpdateRaceRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateRaceRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    UpdateRaceRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::UpdateRaceRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dnd5e.api.v1alpha1.ChoiceData race_choices = 4 [json_name = "raceChoices"];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateRaceRequest, _impl_.race_choices_)}},
    // string draft_id = 1 [json_name = "draftId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateRaceRequest, _impl_.draft_id_)}},
    // .dnd5e.api.v1alpha1.Race race = 2 [json_name = "race"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UpdateRaceRequest, _impl_.race_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(UpdateRaceRequest, _impl_.race_)}},
    // .dnd5e.api.v1alpha1.Subrace subrace = 3 [json_name = "subrace"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UpdateRaceRequest, _impl_.subrace_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(UpdateRaceRequest, _impl_.subrace_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string draft_id = 1 [json_name = "draftId"];
    {PROTOBUF_FIELD_OFFSET(UpdateRaceRequest, _impl_.draft_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .dnd5e.api.v1alpha1.Race race = 2 [json_name = "race"];
    {PROTOBUF_FIELD_OFFSET(UpdateRaceRequest, _impl_.race_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.Subrace subrace = 3 [json_name = "subrace"];
    {PROTOBUF_FIELD_OFFSET(UpdateRaceRequest, _impl_.subrace_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // repeated .dnd5e.api.v1alpha1.ChoiceData race_choices = 4 [json_name = "raceChoices"];
    {PROTOBUF_FIELD_OFFSET(UpdateRaceRequest, _impl_.race_choices_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ChoiceData>()},
  }},
  {{
    "\44\10\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.UpdateRaceRequest"
    "draft_id"
  }},
};
PROTOBUF_NOINLINE void UpdateRaceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.UpdateRaceRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.race_choices_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.draft_id_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x00000006U) != 0) {
    ::memset(&_impl_.race_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.subrace_) -
        reinterpret_cast<char*>(&_impl_.race_)) + sizeof(_impl_.subrace_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UpdateRaceRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UpdateRaceRequest& this_ = static_cast<const UpdateRaceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UpdateRaceRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UpdateRaceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.UpdateRaceRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string draft_id = 1 [json_name = "draftId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_draft_id().empty()) {
      const ::std::string& _s = this_._internal_draft_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.UpdateRaceRequest.draft_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // .dnd5e.api.v1alpha1.Race race = 2 [json_name = "race"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_race() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_race(), target);
    }
  }

  // .dnd5e.api.v1alpha1.Subrace subrace = 3 [json_name = "subrace"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_subrace() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_subrace(), target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.ChoiceData race_choices = 4 [json_name = "raceChoices"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_race_choices_size());
       i < n; i++) {
    const auto& repfield = this_._internal_race_choices().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.UpdateRaceRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UpdateRaceRequest::ByteSizeLong(const MessageLite& base) {
  const UpdateRaceRequest& this_ = static_cast<const UpdateRaceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UpdateRaceRequest::ByteSizeLong() const {
  const UpdateRaceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.UpdateRaceRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.ChoiceData race_choices = 4 [json_name = "raceChoices"];
    {
      total_size += 1UL * this_._internal_race_choices_size();
      for (const auto& msg : this_._internal_race_choices()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string draft_id = 1 [json_name = "draftId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_draft_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_draft_id());
      }
    }
    // .dnd5e.api.v1alpha1.Race race = 2 [json_name = "race"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_race() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_race());
      }
    }
    // .dnd5e.api.v1alpha1.Subrace subrace = 3 [json_name = "subrace"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_subrace() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_subrace());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UpdateRaceRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateRaceRequest*>(&to_msg);
  auto& from = static_cast<const UpdateRaceRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.UpdateRaceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_race_choices()->MergeFrom(
      from._internal_race_choices());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_draft_id().empty()) {
        _this->_internal_set_draft_id(from._internal_draft_id());
      } else {
        if (_this->_impl_.draft_id_.IsDefault()) {
          _this->_internal_set_draft_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_race() != 0) {
        _this->_impl_.race_ = from._impl_.race_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_subrace() != 0) {
        _this->_impl_.subrace_ = from._impl_.subrace_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateRaceRequest::CopyFrom(const UpdateRaceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.UpdateRaceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateRaceRequest::InternalSwap(UpdateRaceRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.race_choices_.InternalSwap(&other->_impl_.race_choices_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.draft_id_, &other->_impl_.draft_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateRaceRequest, _impl_.subrace_)
      + sizeof(UpdateRaceRequest::_impl_.subrace_)
      - PROTOBUF_FIELD_OFFSET(UpdateRaceRequest, _impl_.race_)>(
          reinterpret_cast<char*>(&_impl_.race_),
          reinterpret_cast<char*>(&other->_impl_.race_));
}

::google::protobuf::Metadata UpdateRaceRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateClassRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<UpdateClassRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateClassRequest, _impl_._has_bits_);
};

UpdateClassRequest::UpdateClassRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateClassRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.UpdateClassRequest)
}
PROTOBUF_NDEBUG_INLINE UpdateClassRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::UpdateClassRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        class_choices_{visibility, arena, from.class_choices_},
        draft_id_(arena, from.draft_id_) {}

UpdateClassRequest::UpdateClassRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const UpdateClassRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateClassRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateClassRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, class__),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, class__),
           offsetof(Impl_, subclass_) -
               offsetof(Impl_, class__) +
               sizeof(Impl_::subclass_));

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.UpdateClassRequest)
}
PROTOBUF_NDEBUG_INLINE UpdateClassRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        class_choices_{visibility, arena},
        draft_id_(arena) {}

inline void UpdateClassRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, class__),
           0,
           offsetof(Impl_, subclass_) -
               offsetof(Impl_, class__) +
               sizeof(Impl_::subclass_));
}
UpdateClassRequest::~UpdateClassRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.UpdateClassRequest)
  SharedDtor(*this);
}
inline void UpdateClassRequest::SharedDtor(MessageLite& self) {
  UpdateClassRequest& this_ = static_cast<UpdateClassRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.draft_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL UpdateClassRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UpdateClassRequest(arena);
}
constexpr auto UpdateClassRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(UpdateClassRequest, _impl_.class_choices_) +
          decltype(UpdateClassRequest::_impl_.class_choices_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(UpdateClassRequest), alignof(UpdateClassRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&UpdateClassRequest::PlacementNew_,
                                 sizeof(UpdateClassRequest),
                                 alignof(UpdateClassRequest));
  }
}
constexpr auto UpdateClassRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UpdateClassRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UpdateClassRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UpdateClassRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UpdateClassRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UpdateClassRequest>(), &UpdateClassRequest::ByteSizeLong,
              &UpdateClassRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UpdateClassRequest, _impl_._cached_size_),
          false,
      },
      &UpdateClassRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull UpdateClassRequest_class_data_ =
        UpdateClassRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
UpdateClassRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UpdateClassRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UpdateClassRequest_class_data_.tc_table);
  return UpdateClassRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 54, 2>
UpdateClassRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateClassRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    UpdateClassRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::UpdateClassRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .dnd5e.api.v1alpha1.Subclass subclass = 4 [json_name = "subclass"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UpdateClassRequest, _impl_.subclass_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(UpdateClassRequest, _impl_.subclass_)}},
    // string draft_id = 1 [json_name = "draftId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateClassRequest, _impl_.draft_id_)}},
    // .dnd5e.api.v1alpha1.Class class = 2 [json_name = "class"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UpdateClassRequest, _impl_.class__), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(UpdateClassRequest, _impl_.class__)}},
    // repeated .dnd5e.api.v1alpha1.ChoiceData class_choices = 3 [json_name = "classChoices"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateClassRequest, _impl_.class_choices_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string draft_id = 1 [json_name = "draftId"];
    {PROTOBUF_FIELD_OFFSET(UpdateClassRequest, _impl_.draft_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .dnd5e.api.v1alpha1.Class class = 2 [json_name = "class"];
    {PROTOBUF_FIELD_OFFSET(UpdateClassRequest, _impl_.class__), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // repeated .dnd5e.api.v1alpha1.ChoiceData class_choices = 3 [json_name = "classChoices"];
    {PROTOBUF_FIELD_OFFSET(UpdateClassRequest, _impl_.class_choices_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.Subclass subclass = 4 [json_name = "subclass"];
    {PROTOBUF_FIELD_OFFSET(UpdateClassRequest, _impl_.subclass_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ChoiceData>()},
  }},
  {{
    "\45\10\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.UpdateClassRequest"
    "draft_id"
  }},
};
PROTOBUF_NOINLINE void UpdateClassRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.UpdateClassRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.class_choices_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.draft_id_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x00000006U) != 0) {
    ::memset(&_impl_.class__, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.subclass_) -
        reinterpret_cast<char*>(&_impl_.class__)) + sizeof(_impl_.subclass_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UpdateClassRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UpdateClassRequest& this_ = static_cast<const UpdateClassRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UpdateClassRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UpdateClassRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.UpdateClassRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string draft_id = 1 [json_name = "draftId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_draft_id().empty()) {
      const ::std::string& _s = this_._internal_draft_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.UpdateClassRequest.draft_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // .dnd5e.api.v1alpha1.Class class = 2 [json_name = "class"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_class_() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_class_(), target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.ChoiceData class_choices = 3 [json_name = "classChoices"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_class_choices_size());
       i < n; i++) {
    const auto& repfield = this_._internal_class_choices().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // .dnd5e.api.v1alpha1.Subclass subclass = 4 [json_name = "subclass"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_subclass() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          4, this_._internal_subclass(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.UpdateClassRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UpdateClassRequest::ByteSizeLong(const MessageLite& base) {
  const UpdateClassRequest& this_ = static_cast<const UpdateClassRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UpdateClassRequest::ByteSizeLong() const {
  const UpdateClassRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.UpdateClassRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.ChoiceData class_choices = 3 [json_name = "classChoices"];
    {
      total_size += 1UL * this_._internal_class_choices_size();
      for (const auto& msg : this_._internal_class_choices()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string draft_id = 1 [json_name = "draftId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_draft_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_draft_id());
      }
    }
    // .dnd5e.api.v1alpha1.Class class = 2 [json_name = "class"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_class_() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_class_());
      }
    }
    // .dnd5e.api.v1alpha1.Subclass subclass = 4 [json_name = "subclass"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_subclass() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_subclass());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UpdateClassRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateClassRequest*>(&to_msg);
  auto& from = static_cast<const UpdateClassRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.UpdateClassRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_class_choices()->MergeFrom(
      from._internal_class_choices());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_draft_id().empty()) {
        _this->_internal_set_draft_id(from._internal_draft_id());
      } else {
        if (_this->_impl_.draft_id_.IsDefault()) {
          _this->_internal_set_draft_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_class_() != 0) {
        _this->_impl_.class__ = from._impl_.class__;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_subclass() != 0) {
        _this->_impl_.subclass_ = from._impl_.subclass_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateClassRequest::CopyFrom(const UpdateClassRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.UpdateClassRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateClassRequest::InternalSwap(UpdateClassRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.class_choices_.InternalSwap(&other->_impl_.class_choices_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.draft_id_, &other->_impl_.draft_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateClassRequest, _impl_.subclass_)
      + sizeof(UpdateClassRequest::_impl_.subclass_)
      - PROTOBUF_FIELD_OFFSET(UpdateClassRequest, _impl_.class__)>(
          reinterpret_cast<char*>(&_impl_.class__),
          reinterpret_cast<char*>(&other->_impl_.class__));
}

::google::protobuf::Metadata UpdateClassRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateBackgroundRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<UpdateBackgroundRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateBackgroundRequest, _impl_._has_bits_);
};

UpdateBackgroundRequest::UpdateBackgroundRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateBackgroundRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.UpdateBackgroundRequest)
}
PROTOBUF_NDEBUG_INLINE UpdateBackgroundRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::UpdateBackgroundRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        background_choices_{visibility, arena, from.background_choices_},
        draft_id_(arena, from.draft_id_) {}

UpdateBackgroundRequest::UpdateBackgroundRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const UpdateBackgroundRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateBackgroundRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateBackgroundRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.background_ = from._impl_.background_;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.UpdateBackgroundRequest)
}
PROTOBUF_NDEBUG_INLINE UpdateBackgroundRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        background_choices_{visibility, arena},
        draft_id_(arena) {}

inline void UpdateBackgroundRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.background_ = {};
}
UpdateBackgroundRequest::~UpdateBackgroundRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.UpdateBackgroundRequest)
  SharedDtor(*this);
}
inline void UpdateBackgroundRequest::SharedDtor(MessageLite& self) {
  UpdateBackgroundRequest& this_ = static_cast<UpdateBackgroundRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.draft_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL UpdateBackgroundRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UpdateBackgroundRequest(arena);
}
constexpr auto UpdateBackgroundRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(UpdateBackgroundRequest, _impl_.background_choices_) +
          decltype(UpdateBackgroundRequest::_impl_.background_choices_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(UpdateBackgroundRequest), alignof(UpdateBackgroundRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&UpdateBackgroundRequest::PlacementNew_,
                                 sizeof(UpdateBackgroundRequest),
                                 alignof(UpdateBackgroundRequest));
  }
}
constexpr auto UpdateBackgroundRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UpdateBackgroundRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UpdateBackgroundRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UpdateBackgroundRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UpdateBackgroundRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UpdateBackgroundRequest>(), &UpdateBackgroundRequest::ByteSizeLong,
              &UpdateBackgroundRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UpdateBackgroundRequest, _impl_._cached_size_),
          false,
      },
      &UpdateBackgroundRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull UpdateBackgroundRequest_class_data_ =
        UpdateBackgroundRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
UpdateBackgroundRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UpdateBackgroundRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UpdateBackgroundRequest_class_data_.tc_table);
  return UpdateBackgroundRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 59, 2>
UpdateBackgroundRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateBackgroundRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    UpdateBackgroundRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::UpdateBackgroundRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string draft_id = 1 [json_name = "draftId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateBackgroundRequest, _impl_.draft_id_)}},
    // .dnd5e.api.v1alpha1.Background background = 2 [json_name = "background"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UpdateBackgroundRequest, _impl_.background_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(UpdateBackgroundRequest, _impl_.background_)}},
    // repeated .dnd5e.api.v1alpha1.ChoiceData background_choices = 3 [json_name = "backgroundChoices"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateBackgroundRequest, _impl_.background_choices_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string draft_id = 1 [json_name = "draftId"];
    {PROTOBUF_FIELD_OFFSET(UpdateBackgroundRequest, _impl_.draft_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .dnd5e.api.v1alpha1.Background background = 2 [json_name = "background"];
    {PROTOBUF_FIELD_OFFSET(UpdateBackgroundRequest, _impl_.background_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // repeated .dnd5e.api.v1alpha1.ChoiceData background_choices = 3 [json_name = "backgroundChoices"];
    {PROTOBUF_FIELD_OFFSET(UpdateBackgroundRequest, _impl_.background_choices_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ChoiceData>()},
  }},
  {{
    "\52\10\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.UpdateBackgroundRequest"
    "draft_id"
  }},
};
PROTOBUF_NOINLINE void UpdateBackgroundRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.UpdateBackgroundRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.background_choices_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.draft_id_.ClearNonDefaultToEmpty();
  }
  _impl_.background_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UpdateBackgroundRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UpdateBackgroundRequest& this_ = static_cast<const UpdateBackgroundRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UpdateBackgroundRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UpdateBackgroundRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.UpdateBackgroundRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string draft_id = 1 [json_name = "draftId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_draft_id().empty()) {
      const ::std::string& _s = this_._internal_draft_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.UpdateBackgroundRequest.draft_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // .dnd5e.api.v1alpha1.Background background = 2 [json_name = "background"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_background() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_background(), target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.ChoiceData background_choices = 3 [json_name = "backgroundChoices"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_background_choices_size());
       i < n; i++) {
    const auto& repfield = this_._internal_background_choices().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.UpdateBackgroundRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UpdateBackgroundRequest::ByteSizeLong(const MessageLite& base) {
  const UpdateBackgroundRequest& this_ = static_cast<const UpdateBackgroundRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UpdateBackgroundRequest::ByteSizeLong() const {
  const UpdateBackgroundRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.UpdateBackgroundRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.ChoiceData background_choices = 3 [json_name = "backgroundChoices"];
    {
      total_size += 1UL * this_._internal_background_choices_size();
      for (const auto& msg : this_._internal_background_choices()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string draft_id = 1 [json_name = "draftId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_draft_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_draft_id());
      }
    }
    // .dnd5e.api.v1alpha1.Background background = 2 [json_name = "background"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_background() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_background());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UpdateBackgroundRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateBackgroundRequest*>(&to_msg);
  auto& from = static_cast<const UpdateBackgroundRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.UpdateBackgroundRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_background_choices()->MergeFrom(
      from._internal_background_choices());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_draft_id().empty()) {
        _this->_internal_set_draft_id(from._internal_draft_id());
      } else {
        if (_this->_impl_.draft_id_.IsDefault()) {
          _this->_internal_set_draft_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_background() != 0) {
        _this->_impl_.background_ = from._impl_.background_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateBackgroundRequest::CopyFrom(const UpdateBackgroundRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.UpdateBackgroundRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateBackgroundRequest::InternalSwap(UpdateBackgroundRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.background_choices_.InternalSwap(&other->_impl_.background_choices_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.draft_id_, &other->_impl_.draft_id_, arena);
  swap(_impl_.background_, other->_impl_.background_);
}

::google::protobuf::Metadata UpdateBackgroundRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateAbilityScoresRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<UpdateAbilityScoresRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateAbilityScoresRequest, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest, _impl_._oneof_case_);
};

void UpdateAbilityScoresRequest::set_allocated_ability_scores(::dnd5e::api::v1alpha1::AbilityScores* PROTOBUF_NULLABLE ability_scores) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_scores_input();
  if (ability_scores) {
    ::google::protobuf::Arena* submessage_arena = ability_scores->GetArena();
    if (message_arena != submessage_arena) {
      ability_scores = ::google::protobuf::internal::GetOwnedMessage(message_arena, ability_scores, submessage_arena);
    }
    set_has_ability_scores();
    _impl_.scores_input_.ability_scores_ = ability_scores;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.UpdateAbilityScoresRequest.ability_scores)
}
void UpdateAbilityScoresRequest::set_allocated_roll_assignments(::dnd5e::api::v1alpha1::RollAssignments* PROTOBUF_NULLABLE roll_assignments) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_scores_input();
  if (roll_assignments) {
    ::google::protobuf::Arena* submessage_arena = roll_assignments->GetArena();
    if (message_arena != submessage_arena) {
      roll_assignments = ::google::protobuf::internal::GetOwnedMessage(message_arena, roll_assignments, submessage_arena);
    }
    set_has_roll_assignments();
    _impl_.scores_input_.roll_assignments_ = roll_assignments;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.UpdateAbilityScoresRequest.roll_assignments)
}
UpdateAbilityScoresRequest::UpdateAbilityScoresRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateAbilityScoresRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.UpdateAbilityScoresRequest)
}
PROTOBUF_NDEBUG_INLINE UpdateAbilityScoresRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        draft_id_(arena, from.draft_id_),
        scores_input_{},
        _oneof_case_{from._oneof_case_[0]} {}

UpdateAbilityScoresRequest::UpdateAbilityScoresRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const UpdateAbilityScoresRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateAbilityScoresRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateAbilityScoresRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (scores_input_case()) {
    case SCORES_INPUT_NOT_SET:
      break;
      case kAbilityScores:
        _impl_.scores_input_.ability_scores_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.scores_input_.ability_scores_);
        break;
      case kRollAssignments:
        _impl_.scores_input_.roll_assignments_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.scores_input_.roll_assignments_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.UpdateAbilityScoresRequest)
}
PROTOBUF_NDEBUG_INLINE UpdateAbilityScoresRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        draft_id_(arena),
        scores_input_{},
        _oneof_case_{} {}

inline void UpdateAbilityScoresRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UpdateAbilityScoresRequest::~UpdateAbilityScoresRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.UpdateAbilityScoresRequest)
  SharedDtor(*this);
}
inline void UpdateAbilityScoresRequest::SharedDtor(MessageLite& self) {
  UpdateAbilityScoresRequest& this_ = static_cast<UpdateAbilityScoresRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.draft_id_.Destroy();
  if (this_.has_scores_input()) {
    this_.clear_scores_input();
  }
  this_._impl_.~Impl_();
}

void UpdateAbilityScoresRequest::clear_scores_input() {
// @@protoc_insertion_point(one_of_clear_start:dnd5e.api.v1alpha1.UpdateAbilityScoresRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (scores_input_case()) {
    case kAbilityScores: {
      if (GetArena() == nullptr) {
        delete _impl_.scores_input_.ability_scores_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.scores_input_.ability_scores_);
      }
      break;
    }
    case kRollAssignments: {
      if (GetArena() == nullptr) {
        delete _impl_.scores_input_.roll_assignments_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.scores_input_.roll_assignments_);
      }
      break;
    }
    case SCORES_INPUT_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = SCORES_INPUT_NOT_SET;
}


inline void* PROTOBUF_NONNULL UpdateAbilityScoresRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UpdateAbilityScoresRequest(arena);
}
constexpr auto UpdateAbilityScoresRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(UpdateAbilityScoresRequest),
                                            alignof(UpdateAbilityScoresRequest));
}
constexpr auto UpdateAbilityScoresRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UpdateAbilityScoresRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UpdateAbilityScoresRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UpdateAbilityScoresRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UpdateAbilityScoresRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UpdateAbilityScoresRequest>(), &UpdateAbilityScoresRequest::ByteSizeLong,
              &UpdateAbilityScoresRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UpdateAbilityScoresRequest, _impl_._cached_size_),
          false,
      },
      &UpdateAbilityScoresRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull UpdateAbilityScoresRequest_class_data_ =
        UpdateAbilityScoresRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
UpdateAbilityScoresRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UpdateAbilityScoresRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UpdateAbilityScoresRequest_class_data_.tc_table);
  return UpdateAbilityScoresRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 2, 62, 2>
UpdateAbilityScoresRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateAbilityScoresRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    UpdateAbilityScoresRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::UpdateAbilityScoresRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string draft_id = 1 [json_name = "draftId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateAbilityScoresRequest, _impl_.draft_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string draft_id = 1 [json_name = "draftId"];
    {PROTOBUF_FIELD_OFFSET(UpdateAbilityScoresRequest, _impl_.draft_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .dnd5e.api.v1alpha1.AbilityScores ability_scores = 2 [json_name = "abilityScores"];
    {PROTOBUF_FIELD_OFFSET(UpdateAbilityScoresRequest, _impl_.scores_input_.ability_scores_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.RollAssignments roll_assignments = 3 [json_name = "rollAssignments"];
    {PROTOBUF_FIELD_OFFSET(UpdateAbilityScoresRequest, _impl_.scores_input_.roll_assignments_), _Internal::kOneofCaseOffset + 0, 1, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::AbilityScores>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::RollAssignments>()},
  }},
  {{
    "\55\10\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.UpdateAbilityScoresRequest"
    "draft_id"
  }},
};
PROTOBUF_NOINLINE void UpdateAbilityScoresRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.UpdateAbilityScoresRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.draft_id_.ClearNonDefaultToEmpty();
  }
  clear_scores_input();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UpdateAbilityScoresRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UpdateAbilityScoresRequest& this_ = static_cast<const UpdateAbilityScoresRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UpdateAbilityScoresRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UpdateAbilityScoresRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.UpdateAbilityScoresRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string draft_id = 1 [json_name = "draftId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_draft_id().empty()) {
      const ::std::string& _s = this_._internal_draft_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.UpdateAbilityScoresRequest.draft_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  switch (this_.scores_input_case()) {
    case kAbilityScores: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *this_._impl_.scores_input_.ability_scores_, this_._impl_.scores_input_.ability_scores_->GetCachedSize(), target,
          stream);
      break;
    }
    case kRollAssignments: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *this_._impl_.scores_input_.roll_assignments_, this_._impl_.scores_input_.roll_assignments_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.UpdateAbilityScoresRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UpdateAbilityScoresRequest::ByteSizeLong(const MessageLite& base) {
  const UpdateAbilityScoresRequest& this_ = static_cast<const UpdateAbilityScoresRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UpdateAbilityScoresRequest::ByteSizeLong() const {
  const UpdateAbilityScoresRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.UpdateAbilityScoresRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string draft_id = 1 [json_name = "draftId"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_draft_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_draft_id());
      }
    }
  }
  switch (this_.scores_input_case()) {
    // .dnd5e.api.v1alpha1.AbilityScores ability_scores = 2 [json_name = "abilityScores"];
    case kAbilityScores: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.scores_input_.ability_scores_);
      break;
    }
    // .dnd5e.api.v1alpha1.RollAssignments roll_assignments = 3 [json_name = "rollAssignments"];
    case kRollAssignments: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.scores_input_.roll_assignments_);
      break;
    }
    case SCORES_INPUT_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UpdateAbilityScoresRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateAbilityScoresRequest*>(&to_msg);
  auto& from = static_cast<const UpdateAbilityScoresRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.UpdateAbilityScoresRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!from._internal_draft_id().empty()) {
      _this->_internal_set_draft_id(from._internal_draft_id());
    } else {
      if (_this->_impl_.draft_id_.IsDefault()) {
        _this->_internal_set_draft_id("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_scores_input();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kAbilityScores: {
        if (oneof_needs_init) {
          _this->_impl_.scores_input_.ability_scores_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.scores_input_.ability_scores_);
        } else {
          _this->_impl_.scores_input_.ability_scores_->MergeFrom(*from._impl_.scores_input_.ability_scores_);
        }
        break;
      }
      case kRollAssignments: {
        if (oneof_needs_init) {
          _this->_impl_.scores_input_.roll_assignments_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.scores_input_.roll_assignments_);
        } else {
          _this->_impl_.scores_input_.roll_assignments_->MergeFrom(*from._impl_.scores_input_.roll_assignments_);
        }
        break;
      }
      case SCORES_INPUT_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateAbilityScoresRequest::CopyFrom(const UpdateAbilityScoresRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.UpdateAbilityScoresRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateAbilityScoresRequest::InternalSwap(UpdateAbilityScoresRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.draft_id_, &other->_impl_.draft_id_, arena);
  swap(_impl_.scores_input_, other->_impl_.scores_input_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata UpdateAbilityScoresRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateSkillsRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<UpdateSkillsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateSkillsRequest, _impl_._has_bits_);
};

UpdateSkillsRequest::UpdateSkillsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateSkillsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.UpdateSkillsRequest)
}
PROTOBUF_NDEBUG_INLINE UpdateSkillsRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::UpdateSkillsRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        skills_{visibility, arena, from.skills_},
        _skills_cached_byte_size_{0},
        draft_id_(arena, from.draft_id_) {}

UpdateSkillsRequest::UpdateSkillsRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const UpdateSkillsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateSkillsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateSkillsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.UpdateSkillsRequest)
}
PROTOBUF_NDEBUG_INLINE UpdateSkillsRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        skills_{visibility, arena},
        _skills_cached_byte_size_{0},
        draft_id_(arena) {}

inline void UpdateSkillsRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UpdateSkillsRequest::~UpdateSkillsRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.UpdateSkillsRequest)
  SharedDtor(*this);
}
inline void UpdateSkillsRequest::SharedDtor(MessageLite& self) {
  UpdateSkillsRequest& this_ = static_cast<UpdateSkillsRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.draft_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL UpdateSkillsRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UpdateSkillsRequest(arena);
}
constexpr auto UpdateSkillsRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(UpdateSkillsRequest, _impl_.skills_) +
          decltype(UpdateSkillsRequest::_impl_.skills_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(UpdateSkillsRequest), alignof(UpdateSkillsRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&UpdateSkillsRequest::PlacementNew_,
                                 sizeof(UpdateSkillsRequest),
                                 alignof(UpdateSkillsRequest));
  }
}
constexpr auto UpdateSkillsRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UpdateSkillsRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UpdateSkillsRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UpdateSkillsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UpdateSkillsRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UpdateSkillsRequest>(), &UpdateSkillsRequest::ByteSizeLong,
              &UpdateSkillsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UpdateSkillsRequest, _impl_._cached_size_),
          false,
      },
      &UpdateSkillsRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull UpdateSkillsRequest_class_data_ =
        UpdateSkillsRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
UpdateSkillsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UpdateSkillsRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UpdateSkillsRequest_class_data_.tc_table);
  return UpdateSkillsRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 55, 2>
UpdateSkillsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateSkillsRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    UpdateSkillsRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::UpdateSkillsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dnd5e.api.v1alpha1.Skill skills = 2 [json_name = "skills"];
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateSkillsRequest, _impl_.skills_)}},
    // string draft_id = 1 [json_name = "draftId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateSkillsRequest, _impl_.draft_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string draft_id = 1 [json_name = "draftId"];
    {PROTOBUF_FIELD_OFFSET(UpdateSkillsRequest, _impl_.draft_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .dnd5e.api.v1alpha1.Skill skills = 2 [json_name = "skills"];
    {PROTOBUF_FIELD_OFFSET(UpdateSkillsRequest, _impl_.skills_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
  }},
  // no aux_entries
  {{
    "\46\10\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.UpdateSkillsRequest"
    "draft_id"
  }},
};
PROTOBUF_NOINLINE void UpdateSkillsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.UpdateSkillsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.skills_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.draft_id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UpdateSkillsRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UpdateSkillsRequest& this_ = static_cast<const UpdateSkillsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UpdateSkillsRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UpdateSkillsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.UpdateSkillsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string draft_id = 1 [json_name = "draftId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_draft_id().empty()) {
      const ::std::string& _s = this_._internal_draft_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.UpdateSkillsRequest.draft_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.Skill skills = 2 [json_name = "skills"];
  {
    ::size_t byte_size = this_._impl_._skills_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          2, this_._internal_skills(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.UpdateSkillsRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UpdateSkillsRequest::ByteSizeLong(const MessageLite& base) {
  const UpdateSkillsRequest& this_ = static_cast<const UpdateSkillsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UpdateSkillsRequest::ByteSizeLong() const {
  const UpdateSkillsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.UpdateSkillsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.Skill skills = 2 [json_name = "skills"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_skills(), 1, this_._impl_._skills_cached_byte_size_);
    }
  }
   {
    // string draft_id = 1 [json_name = "draftId"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_draft_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_draft_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UpdateSkillsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateSkillsRequest*>(&to_msg);
  auto& from = static_cast<const UpdateSkillsRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.UpdateSkillsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_skills()->MergeFrom(from._internal_skills());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!from._internal_draft_id().empty()) {
      _this->_internal_set_draft_id(from._internal_draft_id());
    } else {
      if (_this->_impl_.draft_id_.IsDefault()) {
        _this->_internal_set_draft_id("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateSkillsRequest::CopyFrom(const UpdateSkillsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.UpdateSkillsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateSkillsRequest::InternalSwap(UpdateSkillsRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.skills_.InternalSwap(&other->_impl_.skills_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.draft_id_, &other->_impl_.draft_id_, arena);
}

::google::protobuf::Metadata UpdateSkillsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateNameResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<UpdateNameResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateNameResponse, _impl_._has_bits_);
};

void UpdateNameResponse::clear_warnings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.warnings_.Clear();
}
UpdateNameResponse::UpdateNameResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateNameResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.UpdateNameResponse)
}
PROTOBUF_NDEBUG_INLINE UpdateNameResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::UpdateNameResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        warnings_{visibility, arena, from.warnings_} {}

UpdateNameResponse::UpdateNameResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const UpdateNameResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateNameResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateNameResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.draft_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.draft_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.UpdateNameResponse)
}
PROTOBUF_NDEBUG_INLINE UpdateNameResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        warnings_{visibility, arena} {}

inline void UpdateNameResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.draft_ = {};
}
UpdateNameResponse::~UpdateNameResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.UpdateNameResponse)
  SharedDtor(*this);
}
inline void UpdateNameResponse::SharedDtor(MessageLite& self) {
  UpdateNameResponse& this_ = static_cast<UpdateNameResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.draft_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL UpdateNameResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UpdateNameResponse(arena);
}
constexpr auto UpdateNameResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(UpdateNameResponse, _impl_.warnings_) +
          decltype(UpdateNameResponse::_impl_.warnings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(UpdateNameResponse), alignof(UpdateNameResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&UpdateNameResponse::PlacementNew_,
                                 sizeof(UpdateNameResponse),
                                 alignof(UpdateNameResponse));
  }
}
constexpr auto UpdateNameResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UpdateNameResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UpdateNameResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UpdateNameResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UpdateNameResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UpdateNameResponse>(), &UpdateNameResponse::ByteSizeLong,
              &UpdateNameResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UpdateNameResponse, _impl_._cached_size_),
          false,
      },
      &UpdateNameResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull UpdateNameResponse_class_data_ =
        UpdateNameResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
UpdateNameResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UpdateNameResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UpdateNameResponse_class_data_.tc_table);
  return UpdateNameResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
UpdateNameResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateNameResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    UpdateNameResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::UpdateNameResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [json_name = "warnings", deprecated = true];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(UpdateNameResponse, _impl_.warnings_)}},
    // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateNameResponse, _impl_.draft_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
    {PROTOBUF_FIELD_OFFSET(UpdateNameResponse, _impl_.draft_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [json_name = "warnings", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(UpdateNameResponse, _impl_.warnings_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CharacterDraft>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ValidationWarning>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void UpdateNameResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.UpdateNameResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.warnings_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.draft_ != nullptr);
    _impl_.draft_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UpdateNameResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UpdateNameResponse& this_ = static_cast<const UpdateNameResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UpdateNameResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UpdateNameResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.UpdateNameResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.draft_, this_._impl_.draft_->GetCachedSize(), target,
        stream);
  }

  // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [json_name = "warnings", deprecated = true];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_warnings_size());
       i < n; i++) {
    const auto& repfield = this_._internal_warnings().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.UpdateNameResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UpdateNameResponse::ByteSizeLong(const MessageLite& base) {
  const UpdateNameResponse& this_ = static_cast<const UpdateNameResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UpdateNameResponse::ByteSizeLong() const {
  const UpdateNameResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.UpdateNameResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [json_name = "warnings", deprecated = true];
    {
      total_size += 1UL * this_._internal_warnings_size();
      for (const auto& msg : this_._internal_warnings()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.draft_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UpdateNameResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateNameResponse*>(&to_msg);
  auto& from = static_cast<const UpdateNameResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.UpdateNameResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_warnings()->MergeFrom(
      from._internal_warnings());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(from._impl_.draft_ != nullptr);
    if (_this->_impl_.draft_ == nullptr) {
      _this->_impl_.draft_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.draft_);
    } else {
      _this->_impl_.draft_->MergeFrom(*from._impl_.draft_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateNameResponse::CopyFrom(const UpdateNameResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.UpdateNameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateNameResponse::InternalSwap(UpdateNameResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.warnings_.InternalSwap(&other->_impl_.warnings_);
  swap(_impl_.draft_, other->_impl_.draft_);
}

::google::protobuf::Metadata UpdateNameResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateRaceResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<UpdateRaceResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateRaceResponse, _impl_._has_bits_);
};

void UpdateRaceResponse::clear_warnings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.warnings_.Clear();
}
UpdateRaceResponse::UpdateRaceResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateRaceResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.UpdateRaceResponse)
}
PROTOBUF_NDEBUG_INLINE UpdateRaceResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::UpdateRaceResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        warnings_{visibility, arena, from.warnings_} {}

UpdateRaceResponse::UpdateRaceResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const UpdateRaceResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateRaceResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateRaceResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.draft_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.draft_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.UpdateRaceResponse)
}
PROTOBUF_NDEBUG_INLINE UpdateRaceResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        warnings_{visibility, arena} {}

inline void UpdateRaceResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.draft_ = {};
}
UpdateRaceResponse::~UpdateRaceResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.UpdateRaceResponse)
  SharedDtor(*this);
}
inline void UpdateRaceResponse::SharedDtor(MessageLite& self) {
  UpdateRaceResponse& this_ = static_cast<UpdateRaceResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.draft_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL UpdateRaceResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UpdateRaceResponse(arena);
}
constexpr auto UpdateRaceResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(UpdateRaceResponse, _impl_.warnings_) +
          decltype(UpdateRaceResponse::_impl_.warnings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(UpdateRaceResponse), alignof(UpdateRaceResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&UpdateRaceResponse::PlacementNew_,
                                 sizeof(UpdateRaceResponse),
                                 alignof(UpdateRaceResponse));
  }
}
constexpr auto UpdateRaceResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UpdateRaceResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UpdateRaceResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UpdateRaceResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UpdateRaceResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UpdateRaceResponse>(), &UpdateRaceResponse::ByteSizeLong,
              &UpdateRaceResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UpdateRaceResponse, _impl_._cached_size_),
          false,
      },
      &UpdateRaceResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull UpdateRaceResponse_class_data_ =
        UpdateRaceResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
UpdateRaceResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UpdateRaceResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UpdateRaceResponse_class_data_.tc_table);
  return UpdateRaceResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
UpdateRaceResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateRaceResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    UpdateRaceResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::UpdateRaceResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [json_name = "warnings", deprecated = true];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(UpdateRaceResponse, _impl_.warnings_)}},
    // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateRaceResponse, _impl_.draft_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
    {PROTOBUF_FIELD_OFFSET(UpdateRaceResponse, _impl_.draft_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [json_name = "warnings", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(UpdateRaceResponse, _impl_.warnings_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CharacterDraft>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ValidationWarning>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void UpdateRaceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.UpdateRaceResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.warnings_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.draft_ != nullptr);
    _impl_.draft_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UpdateRaceResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UpdateRaceResponse& this_ = static_cast<const UpdateRaceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UpdateRaceResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UpdateRaceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.UpdateRaceResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.draft_, this_._impl_.draft_->GetCachedSize(), target,
        stream);
  }

  // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [json_name = "warnings", deprecated = true];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_warnings_size());
       i < n; i++) {
    const auto& repfield = this_._internal_warnings().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.UpdateRaceResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UpdateRaceResponse::ByteSizeLong(const MessageLite& base) {
  const UpdateRaceResponse& this_ = static_cast<const UpdateRaceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UpdateRaceResponse::ByteSizeLong() const {
  const UpdateRaceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.UpdateRaceResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [json_name = "warnings", deprecated = true];
    {
      total_size += 1UL * this_._internal_warnings_size();
      for (const auto& msg : this_._internal_warnings()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.draft_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UpdateRaceResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateRaceResponse*>(&to_msg);
  auto& from = static_cast<const UpdateRaceResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.UpdateRaceResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_warnings()->MergeFrom(
      from._internal_warnings());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(from._impl_.draft_ != nullptr);
    if (_this->_impl_.draft_ == nullptr) {
      _this->_impl_.draft_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.draft_);
    } else {
      _this->_impl_.draft_->MergeFrom(*from._impl_.draft_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateRaceResponse::CopyFrom(const UpdateRaceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.UpdateRaceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateRaceResponse::InternalSwap(UpdateRaceResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.warnings_.InternalSwap(&other->_impl_.warnings_);
  swap(_impl_.draft_, other->_impl_.draft_);
}

::google::protobuf::Metadata UpdateRaceResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateClassResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<UpdateClassResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateClassResponse, _impl_._has_bits_);
};

void UpdateClassResponse::clear_warnings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.warnings_.Clear();
}
UpdateClassResponse::UpdateClassResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateClassResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.UpdateClassResponse)
}
PROTOBUF_NDEBUG_INLINE UpdateClassResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::UpdateClassResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        warnings_{visibility, arena, from.warnings_} {}

UpdateClassResponse::UpdateClassResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const UpdateClassResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateClassResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateClassResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.draft_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.draft_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.UpdateClassResponse)
}
PROTOBUF_NDEBUG_INLINE UpdateClassResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        warnings_{visibility, arena} {}

inline void UpdateClassResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.draft_ = {};
}
UpdateClassResponse::~UpdateClassResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.UpdateClassResponse)
  SharedDtor(*this);
}
inline void UpdateClassResponse::SharedDtor(MessageLite& self) {
  UpdateClassResponse& this_ = static_cast<UpdateClassResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.draft_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL UpdateClassResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UpdateClassResponse(arena);
}
constexpr auto UpdateClassResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(UpdateClassResponse, _impl_.warnings_) +
          decltype(UpdateClassResponse::_impl_.warnings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(UpdateClassResponse), alignof(UpdateClassResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&UpdateClassResponse::PlacementNew_,
                                 sizeof(UpdateClassResponse),
                                 alignof(UpdateClassResponse));
  }
}
constexpr auto UpdateClassResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UpdateClassResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UpdateClassResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UpdateClassResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UpdateClassResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UpdateClassResponse>(), &UpdateClassResponse::ByteSizeLong,
              &UpdateClassResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UpdateClassResponse, _impl_._cached_size_),
          false,
      },
      &UpdateClassResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull UpdateClassResponse_class_data_ =
        UpdateClassResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
UpdateClassResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UpdateClassResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UpdateClassResponse_class_data_.tc_table);
  return UpdateClassResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
UpdateClassResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateClassResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    UpdateClassResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::UpdateClassResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [json_name = "warnings", deprecated = true];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(UpdateClassResponse, _impl_.warnings_)}},
    // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateClassResponse, _impl_.draft_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
    {PROTOBUF_FIELD_OFFSET(UpdateClassResponse, _impl_.draft_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [json_name = "warnings", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(UpdateClassResponse, _impl_.warnings_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CharacterDraft>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ValidationWarning>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void UpdateClassResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.UpdateClassResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.warnings_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.draft_ != nullptr);
    _impl_.draft_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UpdateClassResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UpdateClassResponse& this_ = static_cast<const UpdateClassResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UpdateClassResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UpdateClassResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.UpdateClassResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.draft_, this_._impl_.draft_->GetCachedSize(), target,
        stream);
  }

  // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [json_name = "warnings", deprecated = true];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_warnings_size());
       i < n; i++) {
    const auto& repfield = this_._internal_warnings().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.UpdateClassResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UpdateClassResponse::ByteSizeLong(const MessageLite& base) {
  const UpdateClassResponse& this_ = static_cast<const UpdateClassResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UpdateClassResponse::ByteSizeLong() const {
  const UpdateClassResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.UpdateClassResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [json_name = "warnings", deprecated = true];
    {
      total_size += 1UL * this_._internal_warnings_size();
      for (const auto& msg : this_._internal_warnings()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.draft_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UpdateClassResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateClassResponse*>(&to_msg);
  auto& from = static_cast<const UpdateClassResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.UpdateClassResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_warnings()->MergeFrom(
      from._internal_warnings());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(from._impl_.draft_ != nullptr);
    if (_this->_impl_.draft_ == nullptr) {
      _this->_impl_.draft_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.draft_);
    } else {
      _this->_impl_.draft_->MergeFrom(*from._impl_.draft_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateClassResponse::CopyFrom(const UpdateClassResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.UpdateClassResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateClassResponse::InternalSwap(UpdateClassResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.warnings_.InternalSwap(&other->_impl_.warnings_);
  swap(_impl_.draft_, other->_impl_.draft_);
}

::google::protobuf::Metadata UpdateClassResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateBackgroundResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<UpdateBackgroundResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateBackgroundResponse, _impl_._has_bits_);
};

void UpdateBackgroundResponse::clear_warnings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.warnings_.Clear();
}
UpdateBackgroundResponse::UpdateBackgroundResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateBackgroundResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.UpdateBackgroundResponse)
}
PROTOBUF_NDEBUG_INLINE UpdateBackgroundResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::UpdateBackgroundResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        warnings_{visibility, arena, from.warnings_} {}

UpdateBackgroundResponse::UpdateBackgroundResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const UpdateBackgroundResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateBackgroundResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateBackgroundResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.draft_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.draft_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.UpdateBackgroundResponse)
}
PROTOBUF_NDEBUG_INLINE UpdateBackgroundResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        warnings_{visibility, arena} {}

inline void UpdateBackgroundResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.draft_ = {};
}
UpdateBackgroundResponse::~UpdateBackgroundResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.UpdateBackgroundResponse)
  SharedDtor(*this);
}
inline void UpdateBackgroundResponse::SharedDtor(MessageLite& self) {
  UpdateBackgroundResponse& this_ = static_cast<UpdateBackgroundResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.draft_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL UpdateBackgroundResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UpdateBackgroundResponse(arena);
}
constexpr auto UpdateBackgroundResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(UpdateBackgroundResponse, _impl_.warnings_) +
          decltype(UpdateBackgroundResponse::_impl_.warnings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(UpdateBackgroundResponse), alignof(UpdateBackgroundResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&UpdateBackgroundResponse::PlacementNew_,
                                 sizeof(UpdateBackgroundResponse),
                                 alignof(UpdateBackgroundResponse));
  }
}
constexpr auto UpdateBackgroundResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UpdateBackgroundResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UpdateBackgroundResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UpdateBackgroundResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UpdateBackgroundResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UpdateBackgroundResponse>(), &UpdateBackgroundResponse::ByteSizeLong,
              &UpdateBackgroundResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UpdateBackgroundResponse, _impl_._cached_size_),
          false,
      },
      &UpdateBackgroundResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull UpdateBackgroundResponse_class_data_ =
        UpdateBackgroundResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
UpdateBackgroundResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UpdateBackgroundResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UpdateBackgroundResponse_class_data_.tc_table);
  return UpdateBackgroundResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
UpdateBackgroundResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateBackgroundResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    UpdateBackgroundResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::UpdateBackgroundResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [json_name = "warnings", deprecated = true];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(UpdateBackgroundResponse, _impl_.warnings_)}},
    // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateBackgroundResponse, _impl_.draft_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
    {PROTOBUF_FIELD_OFFSET(UpdateBackgroundResponse, _impl_.draft_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [json_name = "warnings", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(UpdateBackgroundResponse, _impl_.warnings_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CharacterDraft>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ValidationWarning>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void UpdateBackgroundResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.UpdateBackgroundResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.warnings_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.draft_ != nullptr);
    _impl_.draft_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UpdateBackgroundResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UpdateBackgroundResponse& this_ = static_cast<const UpdateBackgroundResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UpdateBackgroundResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UpdateBackgroundResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.UpdateBackgroundResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.draft_, this_._impl_.draft_->GetCachedSize(), target,
        stream);
  }

  // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [json_name = "warnings", deprecated = true];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_warnings_size());
       i < n; i++) {
    const auto& repfield = this_._internal_warnings().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.UpdateBackgroundResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UpdateBackgroundResponse::ByteSizeLong(const MessageLite& base) {
  const UpdateBackgroundResponse& this_ = static_cast<const UpdateBackgroundResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UpdateBackgroundResponse::ByteSizeLong() const {
  const UpdateBackgroundResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.UpdateBackgroundResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [json_name = "warnings", deprecated = true];
    {
      total_size += 1UL * this_._internal_warnings_size();
      for (const auto& msg : this_._internal_warnings()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.draft_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UpdateBackgroundResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateBackgroundResponse*>(&to_msg);
  auto& from = static_cast<const UpdateBackgroundResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.UpdateBackgroundResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_warnings()->MergeFrom(
      from._internal_warnings());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(from._impl_.draft_ != nullptr);
    if (_this->_impl_.draft_ == nullptr) {
      _this->_impl_.draft_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.draft_);
    } else {
      _this->_impl_.draft_->MergeFrom(*from._impl_.draft_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateBackgroundResponse::CopyFrom(const UpdateBackgroundResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.UpdateBackgroundResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateBackgroundResponse::InternalSwap(UpdateBackgroundResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.warnings_.InternalSwap(&other->_impl_.warnings_);
  swap(_impl_.draft_, other->_impl_.draft_);
}

::google::protobuf::Metadata UpdateBackgroundResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateAbilityScoresResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<UpdateAbilityScoresResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateAbilityScoresResponse, _impl_._has_bits_);
};

void UpdateAbilityScoresResponse::clear_warnings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.warnings_.Clear();
}
UpdateAbilityScoresResponse::UpdateAbilityScoresResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateAbilityScoresResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.UpdateAbilityScoresResponse)
}
PROTOBUF_NDEBUG_INLINE UpdateAbilityScoresResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        warnings_{visibility, arena, from.warnings_} {}

UpdateAbilityScoresResponse::UpdateAbilityScoresResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const UpdateAbilityScoresResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateAbilityScoresResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateAbilityScoresResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.draft_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.draft_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.UpdateAbilityScoresResponse)
}
PROTOBUF_NDEBUG_INLINE UpdateAbilityScoresResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        warnings_{visibility, arena} {}

inline void UpdateAbilityScoresResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.draft_ = {};
}
UpdateAbilityScoresResponse::~UpdateAbilityScoresResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.UpdateAbilityScoresResponse)
  SharedDtor(*this);
}
inline void UpdateAbilityScoresResponse::SharedDtor(MessageLite& self) {
  UpdateAbilityScoresResponse& this_ = static_cast<UpdateAbilityScoresResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.draft_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL UpdateAbilityScoresResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UpdateAbilityScoresResponse(arena);
}
constexpr auto UpdateAbilityScoresResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(UpdateAbilityScoresResponse, _impl_.warnings_) +
          decltype(UpdateAbilityScoresResponse::_impl_.warnings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(UpdateAbilityScoresResponse), alignof(UpdateAbilityScoresResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&UpdateAbilityScoresResponse::PlacementNew_,
                                 sizeof(UpdateAbilityScoresResponse),
                                 alignof(UpdateAbilityScoresResponse));
  }
}
constexpr auto UpdateAbilityScoresResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UpdateAbilityScoresResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UpdateAbilityScoresResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UpdateAbilityScoresResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UpdateAbilityScoresResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UpdateAbilityScoresResponse>(), &UpdateAbilityScoresResponse::ByteSizeLong,
              &UpdateAbilityScoresResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UpdateAbilityScoresResponse, _impl_._cached_size_),
          false,
      },
      &UpdateAbilityScoresResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull UpdateAbilityScoresResponse_class_data_ =
        UpdateAbilityScoresResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
UpdateAbilityScoresResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UpdateAbilityScoresResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UpdateAbilityScoresResponse_class_data_.tc_table);
  return UpdateAbilityScoresResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
UpdateAbilityScoresResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateAbilityScoresResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    UpdateAbilityScoresResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::UpdateAbilityScoresResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [json_name = "warnings", deprecated = true];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(UpdateAbilityScoresResponse, _impl_.warnings_)}},
    // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateAbilityScoresResponse, _impl_.draft_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
    {PROTOBUF_FIELD_OFFSET(UpdateAbilityScoresResponse, _impl_.draft_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [json_name = "warnings", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(UpdateAbilityScoresResponse, _impl_.warnings_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CharacterDraft>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ValidationWarning>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void UpdateAbilityScoresResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.UpdateAbilityScoresResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.warnings_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.draft_ != nullptr);
    _impl_.draft_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UpdateAbilityScoresResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UpdateAbilityScoresResponse& this_ = static_cast<const UpdateAbilityScoresResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UpdateAbilityScoresResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UpdateAbilityScoresResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.UpdateAbilityScoresResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.draft_, this_._impl_.draft_->GetCachedSize(), target,
        stream);
  }

  // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [json_name = "warnings", deprecated = true];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_warnings_size());
       i < n; i++) {
    const auto& repfield = this_._internal_warnings().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.UpdateAbilityScoresResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UpdateAbilityScoresResponse::ByteSizeLong(const MessageLite& base) {
  const UpdateAbilityScoresResponse& this_ = static_cast<const UpdateAbilityScoresResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UpdateAbilityScoresResponse::ByteSizeLong() const {
  const UpdateAbilityScoresResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.UpdateAbilityScoresResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [json_name = "warnings", deprecated = true];
    {
      total_size += 1UL * this_._internal_warnings_size();
      for (const auto& msg : this_._internal_warnings()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.draft_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UpdateAbilityScoresResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateAbilityScoresResponse*>(&to_msg);
  auto& from = static_cast<const UpdateAbilityScoresResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.UpdateAbilityScoresResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_warnings()->MergeFrom(
      from._internal_warnings());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(from._impl_.draft_ != nullptr);
    if (_this->_impl_.draft_ == nullptr) {
      _this->_impl_.draft_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.draft_);
    } else {
      _this->_impl_.draft_->MergeFrom(*from._impl_.draft_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateAbilityScoresResponse::CopyFrom(const UpdateAbilityScoresResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.UpdateAbilityScoresResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateAbilityScoresResponse::InternalSwap(UpdateAbilityScoresResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.warnings_.InternalSwap(&other->_impl_.warnings_);
  swap(_impl_.draft_, other->_impl_.draft_);
}

::google::protobuf::Metadata UpdateAbilityScoresResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateSkillsResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<UpdateSkillsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateSkillsResponse, _impl_._has_bits_);
};

void UpdateSkillsResponse::clear_warnings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.warnings_.Clear();
}
UpdateSkillsResponse::UpdateSkillsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateSkillsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.UpdateSkillsResponse)
}
PROTOBUF_NDEBUG_INLINE UpdateSkillsResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::UpdateSkillsResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        warnings_{visibility, arena, from.warnings_} {}

UpdateSkillsResponse::UpdateSkillsResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const UpdateSkillsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateSkillsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateSkillsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.draft_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.draft_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.UpdateSkillsResponse)
}
PROTOBUF_NDEBUG_INLINE UpdateSkillsResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        warnings_{visibility, arena} {}

inline void UpdateSkillsResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.draft_ = {};
}
UpdateSkillsResponse::~UpdateSkillsResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.UpdateSkillsResponse)
  SharedDtor(*this);
}
inline void UpdateSkillsResponse::SharedDtor(MessageLite& self) {
  UpdateSkillsResponse& this_ = static_cast<UpdateSkillsResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.draft_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL UpdateSkillsResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UpdateSkillsResponse(arena);
}
constexpr auto UpdateSkillsResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(UpdateSkillsResponse, _impl_.warnings_) +
          decltype(UpdateSkillsResponse::_impl_.warnings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(UpdateSkillsResponse), alignof(UpdateSkillsResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&UpdateSkillsResponse::PlacementNew_,
                                 sizeof(UpdateSkillsResponse),
                                 alignof(UpdateSkillsResponse));
  }
}
constexpr auto UpdateSkillsResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UpdateSkillsResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UpdateSkillsResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UpdateSkillsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UpdateSkillsResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UpdateSkillsResponse>(), &UpdateSkillsResponse::ByteSizeLong,
              &UpdateSkillsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UpdateSkillsResponse, _impl_._cached_size_),
          false,
      },
      &UpdateSkillsResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull UpdateSkillsResponse_class_data_ =
        UpdateSkillsResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
UpdateSkillsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UpdateSkillsResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UpdateSkillsResponse_class_data_.tc_table);
  return UpdateSkillsResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
UpdateSkillsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateSkillsResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    UpdateSkillsResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::UpdateSkillsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [json_name = "warnings", deprecated = true];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(UpdateSkillsResponse, _impl_.warnings_)}},
    // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateSkillsResponse, _impl_.draft_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
    {PROTOBUF_FIELD_OFFSET(UpdateSkillsResponse, _impl_.draft_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [json_name = "warnings", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(UpdateSkillsResponse, _impl_.warnings_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CharacterDraft>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ValidationWarning>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void UpdateSkillsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.UpdateSkillsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.warnings_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.draft_ != nullptr);
    _impl_.draft_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UpdateSkillsResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UpdateSkillsResponse& this_ = static_cast<const UpdateSkillsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UpdateSkillsResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UpdateSkillsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.UpdateSkillsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.draft_, this_._impl_.draft_->GetCachedSize(), target,
        stream);
  }

  // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [json_name = "warnings", deprecated = true];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_warnings_size());
       i < n; i++) {
    const auto& repfield = this_._internal_warnings().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.UpdateSkillsResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UpdateSkillsResponse::ByteSizeLong(const MessageLite& base) {
  const UpdateSkillsResponse& this_ = static_cast<const UpdateSkillsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UpdateSkillsResponse::ByteSizeLong() const {
  const UpdateSkillsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.UpdateSkillsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 2 [json_name = "warnings", deprecated = true];
    {
      total_size += 1UL * this_._internal_warnings_size();
      for (const auto& msg : this_._internal_warnings()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.draft_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UpdateSkillsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateSkillsResponse*>(&to_msg);
  auto& from = static_cast<const UpdateSkillsResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.UpdateSkillsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_warnings()->MergeFrom(
      from._internal_warnings());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(from._impl_.draft_ != nullptr);
    if (_this->_impl_.draft_ == nullptr) {
      _this->_impl_.draft_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.draft_);
    } else {
      _this->_impl_.draft_->MergeFrom(*from._impl_.draft_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateSkillsResponse::CopyFrom(const UpdateSkillsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.UpdateSkillsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateSkillsResponse::InternalSwap(UpdateSkillsResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.warnings_.InternalSwap(&other->_impl_.warnings_);
  swap(_impl_.draft_, other->_impl_.draft_);
}

::google::protobuf::Metadata UpdateSkillsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListDraftsRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ListDraftsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ListDraftsRequest, _impl_._has_bits_);
};

ListDraftsRequest::ListDraftsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListDraftsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.ListDraftsRequest)
}
PROTOBUF_NDEBUG_INLINE ListDraftsRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::ListDraftsRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        player_id_(arena, from.player_id_),
        session_id_(arena, from.session_id_),
        page_token_(arena, from.page_token_) {}

ListDraftsRequest::ListDraftsRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ListDraftsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListDraftsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListDraftsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.page_size_ = from._impl_.page_size_;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.ListDraftsRequest)
}
PROTOBUF_NDEBUG_INLINE ListDraftsRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        player_id_(arena),
        session_id_(arena),
        page_token_(arena) {}

inline void ListDraftsRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.page_size_ = {};
}
ListDraftsRequest::~ListDraftsRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.ListDraftsRequest)
  SharedDtor(*this);
}
inline void ListDraftsRequest::SharedDtor(MessageLite& self) {
  ListDraftsRequest& this_ = static_cast<ListDraftsRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.player_id_.Destroy();
  this_._impl_.session_id_.Destroy();
  this_._impl_.page_token_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ListDraftsRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ListDraftsRequest(arena);
}
constexpr auto ListDraftsRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ListDraftsRequest),
                                            alignof(ListDraftsRequest));
}
constexpr auto ListDraftsRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ListDraftsRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ListDraftsRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ListDraftsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ListDraftsRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ListDraftsRequest>(), &ListDraftsRequest::ByteSizeLong,
              &ListDraftsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ListDraftsRequest, _impl_._cached_size_),
          false,
      },
      &ListDraftsRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ListDraftsRequest_class_data_ =
        ListDraftsRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ListDraftsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ListDraftsRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ListDraftsRequest_class_data_.tc_table);
  return ListDraftsRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 74, 2>
ListDraftsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ListDraftsRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ListDraftsRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ListDraftsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string page_token = 4 [json_name = "pageToken"];
    {::_pbi::TcParser::FastUS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(ListDraftsRequest, _impl_.page_token_)}},
    // string player_id = 1 [json_name = "playerId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ListDraftsRequest, _impl_.player_id_)}},
    // string session_id = 2 [json_name = "sessionId"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(ListDraftsRequest, _impl_.session_id_)}},
    // int32 page_size = 3 [json_name = "pageSize"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListDraftsRequest, _impl_.page_size_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(ListDraftsRequest, _impl_.page_size_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string player_id = 1 [json_name = "playerId"];
    {PROTOBUF_FIELD_OFFSET(ListDraftsRequest, _impl_.player_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string session_id = 2 [json_name = "sessionId"];
    {PROTOBUF_FIELD_OFFSET(ListDraftsRequest, _impl_.session_id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 page_size = 3 [json_name = "pageSize"];
    {PROTOBUF_FIELD_OFFSET(ListDraftsRequest, _impl_.page_size_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string page_token = 4 [json_name = "pageToken"];
    {PROTOBUF_FIELD_OFFSET(ListDraftsRequest, _impl_.page_token_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\11\12\0\12\0\0\0"
    "dnd5e.api.v1alpha1.ListDraftsRequest"
    "player_id"
    "session_id"
    "page_token"
  }},
};
PROTOBUF_NOINLINE void ListDraftsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.ListDraftsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.player_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.session_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.page_token_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.page_size_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ListDraftsRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ListDraftsRequest& this_ = static_cast<const ListDraftsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ListDraftsRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ListDraftsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.ListDraftsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string player_id = 1 [json_name = "playerId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_player_id().empty()) {
      const ::std::string& _s = this_._internal_player_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.ListDraftsRequest.player_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string session_id = 2 [json_name = "sessionId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_session_id().empty()) {
      const ::std::string& _s = this_._internal_session_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.ListDraftsRequest.session_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int32 page_size = 3 [json_name = "pageSize"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_page_size() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_page_size(), target);
    }
  }

  // string page_token = 4 [json_name = "pageToken"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_page_token().empty()) {
      const ::std::string& _s = this_._internal_page_token();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.ListDraftsRequest.page_token");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.ListDraftsRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ListDraftsRequest::ByteSizeLong(const MessageLite& base) {
  const ListDraftsRequest& this_ = static_cast<const ListDraftsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ListDraftsRequest::ByteSizeLong() const {
  const ListDraftsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.ListDraftsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string player_id = 1 [json_name = "playerId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_player_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_player_id());
      }
    }
    // string session_id = 2 [json_name = "sessionId"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_session_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_session_id());
      }
    }
    // string page_token = 4 [json_name = "pageToken"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_page_token().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_page_token());
      }
    }
    // int32 page_size = 3 [json_name = "pageSize"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_page_size() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_page_size());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ListDraftsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListDraftsRequest*>(&to_msg);
  auto& from = static_cast<const ListDraftsRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.ListDraftsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_player_id().empty()) {
        _this->_internal_set_player_id(from._internal_player_id());
      } else {
        if (_this->_impl_.player_id_.IsDefault()) {
          _this->_internal_set_player_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_session_id().empty()) {
        _this->_internal_set_session_id(from._internal_session_id());
      } else {
        if (_this->_impl_.session_id_.IsDefault()) {
          _this->_internal_set_session_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_page_token().empty()) {
        _this->_internal_set_page_token(from._internal_page_token());
      } else {
        if (_this->_impl_.page_token_.IsDefault()) {
          _this->_internal_set_page_token("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_page_size() != 0) {
        _this->_impl_.page_size_ = from._impl_.page_size_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListDraftsRequest::CopyFrom(const ListDraftsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.ListDraftsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListDraftsRequest::InternalSwap(ListDraftsRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.player_id_, &other->_impl_.player_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_id_, &other->_impl_.session_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.page_token_, &other->_impl_.page_token_, arena);
  swap(_impl_.page_size_, other->_impl_.page_size_);
}

::google::protobuf::Metadata ListDraftsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListDraftsResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ListDraftsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ListDraftsResponse, _impl_._has_bits_);
};

ListDraftsResponse::ListDraftsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListDraftsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.ListDraftsResponse)
}
PROTOBUF_NDEBUG_INLINE ListDraftsResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::ListDraftsResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        drafts_{visibility, arena, from.drafts_},
        next_page_token_(arena, from.next_page_token_) {}

ListDraftsResponse::ListDraftsResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ListDraftsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListDraftsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListDraftsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.ListDraftsResponse)
}
PROTOBUF_NDEBUG_INLINE ListDraftsResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        drafts_{visibility, arena},
        next_page_token_(arena) {}

inline void ListDraftsResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ListDraftsResponse::~ListDraftsResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.ListDraftsResponse)
  SharedDtor(*this);
}
inline void ListDraftsResponse::SharedDtor(MessageLite& self) {
  ListDraftsResponse& this_ = static_cast<ListDraftsResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.next_page_token_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ListDraftsResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ListDraftsResponse(arena);
}
constexpr auto ListDraftsResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ListDraftsResponse, _impl_.drafts_) +
          decltype(ListDraftsResponse::_impl_.drafts_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ListDraftsResponse), alignof(ListDraftsResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ListDraftsResponse::PlacementNew_,
                                 sizeof(ListDraftsResponse),
                                 alignof(ListDraftsResponse));
  }
}
constexpr auto ListDraftsResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ListDraftsResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ListDraftsResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ListDraftsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ListDraftsResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ListDraftsResponse>(), &ListDraftsResponse::ByteSizeLong,
              &ListDraftsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ListDraftsResponse, _impl_._cached_size_),
          false,
      },
      &ListDraftsResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ListDraftsResponse_class_data_ =
        ListDraftsResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ListDraftsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ListDraftsResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ListDraftsResponse_class_data_.tc_table);
  return ListDraftsResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 61, 2>
ListDraftsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ListDraftsResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ListDraftsResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ListDraftsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string next_page_token = 2 [json_name = "nextPageToken"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ListDraftsResponse, _impl_.next_page_token_)}},
    // repeated .dnd5e.api.v1alpha1.CharacterDraft drafts = 1 [json_name = "drafts"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListDraftsResponse, _impl_.drafts_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dnd5e.api.v1alpha1.CharacterDraft drafts = 1 [json_name = "drafts"];
    {PROTOBUF_FIELD_OFFSET(ListDraftsResponse, _impl_.drafts_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string next_page_token = 2 [json_name = "nextPageToken"];
    {PROTOBUF_FIELD_OFFSET(ListDraftsResponse, _impl_.next_page_token_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CharacterDraft>()},
  }},
  {{
    "\45\0\17\0\0\0\0\0"
    "dnd5e.api.v1alpha1.ListDraftsResponse"
    "next_page_token"
  }},
};
PROTOBUF_NOINLINE void ListDraftsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.ListDraftsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.drafts_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.next_page_token_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ListDraftsResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ListDraftsResponse& this_ = static_cast<const ListDraftsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ListDraftsResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ListDraftsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.ListDraftsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dnd5e.api.v1alpha1.CharacterDraft drafts = 1 [json_name = "drafts"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_drafts_size());
       i < n; i++) {
    const auto& repfield = this_._internal_drafts().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // string next_page_token = 2 [json_name = "nextPageToken"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_next_page_token().empty()) {
      const ::std::string& _s = this_._internal_next_page_token();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.ListDraftsResponse.next_page_token");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.ListDraftsResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ListDraftsResponse::ByteSizeLong(const MessageLite& base) {
  const ListDraftsResponse& this_ = static_cast<const ListDraftsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ListDraftsResponse::ByteSizeLong() const {
  const ListDraftsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.ListDraftsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.CharacterDraft drafts = 1 [json_name = "drafts"];
    {
      total_size += 1UL * this_._internal_drafts_size();
      for (const auto& msg : this_._internal_drafts()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // string next_page_token = 2 [json_name = "nextPageToken"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_next_page_token().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_next_page_token());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ListDraftsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListDraftsResponse*>(&to_msg);
  auto& from = static_cast<const ListDraftsResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.ListDraftsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_drafts()->MergeFrom(
      from._internal_drafts());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!from._internal_next_page_token().empty()) {
      _this->_internal_set_next_page_token(from._internal_next_page_token());
    } else {
      if (_this->_impl_.next_page_token_.IsDefault()) {
        _this->_internal_set_next_page_token("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListDraftsResponse::CopyFrom(const ListDraftsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.ListDraftsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListDraftsResponse::InternalSwap(ListDraftsResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.drafts_.InternalSwap(&other->_impl_.drafts_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.next_page_token_, &other->_impl_.next_page_token_, arena);
}

::google::protobuf::Metadata ListDraftsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ValidateDraftRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ValidateDraftRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ValidateDraftRequest, _impl_._has_bits_);
};

ValidateDraftRequest::ValidateDraftRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ValidateDraftRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.ValidateDraftRequest)
}
PROTOBUF_NDEBUG_INLINE ValidateDraftRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::ValidateDraftRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        draft_id_(arena, from.draft_id_) {}

ValidateDraftRequest::ValidateDraftRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ValidateDraftRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ValidateDraftRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ValidateDraftRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.ValidateDraftRequest)
}
PROTOBUF_NDEBUG_INLINE ValidateDraftRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        draft_id_(arena) {}

inline void ValidateDraftRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ValidateDraftRequest::~ValidateDraftRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.ValidateDraftRequest)
  SharedDtor(*this);
}
inline void ValidateDraftRequest::SharedDtor(MessageLite& self) {
  ValidateDraftRequest& this_ = static_cast<ValidateDraftRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.draft_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ValidateDraftRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ValidateDraftRequest(arena);
}
constexpr auto ValidateDraftRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ValidateDraftRequest),
                                            alignof(ValidateDraftRequest));
}
constexpr auto ValidateDraftRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ValidateDraftRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ValidateDraftRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ValidateDraftRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ValidateDraftRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ValidateDraftRequest>(), &ValidateDraftRequest::ByteSizeLong,
              &ValidateDraftRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ValidateDraftRequest, _impl_._cached_size_),
          false,
      },
      &ValidateDraftRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ValidateDraftRequest_class_data_ =
        ValidateDraftRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ValidateDraftRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ValidateDraftRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ValidateDraftRequest_class_data_.tc_table);
  return ValidateDraftRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 56, 2>
ValidateDraftRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ValidateDraftRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ValidateDraftRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ValidateDraftRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string draft_id = 1 [json_name = "draftId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ValidateDraftRequest, _impl_.draft_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string draft_id = 1 [json_name = "draftId"];
    {PROTOBUF_FIELD_OFFSET(ValidateDraftRequest, _impl_.draft_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\47\10\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.ValidateDraftRequest"
    "draft_id"
  }},
};
PROTOBUF_NOINLINE void ValidateDraftRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.ValidateDraftRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.draft_id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ValidateDraftRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ValidateDraftRequest& this_ = static_cast<const ValidateDraftRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ValidateDraftRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ValidateDraftRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.ValidateDraftRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string draft_id = 1 [json_name = "draftId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_draft_id().empty()) {
      const ::std::string& _s = this_._internal_draft_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.ValidateDraftRequest.draft_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.ValidateDraftRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ValidateDraftRequest::ByteSizeLong(const MessageLite& base) {
  const ValidateDraftRequest& this_ = static_cast<const ValidateDraftRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ValidateDraftRequest::ByteSizeLong() const {
  const ValidateDraftRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.ValidateDraftRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string draft_id = 1 [json_name = "draftId"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_draft_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_draft_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ValidateDraftRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ValidateDraftRequest*>(&to_msg);
  auto& from = static_cast<const ValidateDraftRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.ValidateDraftRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!from._internal_draft_id().empty()) {
      _this->_internal_set_draft_id(from._internal_draft_id());
    } else {
      if (_this->_impl_.draft_id_.IsDefault()) {
        _this->_internal_set_draft_id("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValidateDraftRequest::CopyFrom(const ValidateDraftRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.ValidateDraftRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ValidateDraftRequest::InternalSwap(ValidateDraftRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.draft_id_, &other->_impl_.draft_id_, arena);
}

::google::protobuf::Metadata ValidateDraftRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ValidateDraftResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ValidateDraftResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ValidateDraftResponse, _impl_._has_bits_);
};

void ValidateDraftResponse::clear_validation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.validation_ != nullptr) _impl_.validation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
void ValidateDraftResponse::clear_errors() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errors_.Clear();
}
void ValidateDraftResponse::clear_warnings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.warnings_.Clear();
}
ValidateDraftResponse::ValidateDraftResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ValidateDraftResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.ValidateDraftResponse)
}
PROTOBUF_NDEBUG_INLINE ValidateDraftResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::ValidateDraftResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        missing_steps_{visibility, arena, from.missing_steps_},
        _missing_steps_cached_byte_size_{0},
        errors_{visibility, arena, from.errors_},
        warnings_{visibility, arena, from.warnings_} {}

ValidateDraftResponse::ValidateDraftResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ValidateDraftResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ValidateDraftResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ValidateDraftResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.validation_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.validation_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, is_complete_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, is_complete_),
           offsetof(Impl_, is_valid_) -
               offsetof(Impl_, is_complete_) +
               sizeof(Impl_::is_valid_));

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.ValidateDraftResponse)
}
PROTOBUF_NDEBUG_INLINE ValidateDraftResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        missing_steps_{visibility, arena},
        _missing_steps_cached_byte_size_{0},
        errors_{visibility, arena},
        warnings_{visibility, arena} {}

inline void ValidateDraftResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, validation_),
           0,
           offsetof(Impl_, is_valid_) -
               offsetof(Impl_, validation_) +
               sizeof(Impl_::is_valid_));
}
ValidateDraftResponse::~ValidateDraftResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.ValidateDraftResponse)
  SharedDtor(*this);
}
inline void ValidateDraftResponse::SharedDtor(MessageLite& self) {
  ValidateDraftResponse& this_ = static_cast<ValidateDraftResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.validation_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ValidateDraftResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ValidateDraftResponse(arena);
}
constexpr auto ValidateDraftResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ValidateDraftResponse, _impl_.missing_steps_) +
          decltype(ValidateDraftResponse::_impl_.missing_steps_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ValidateDraftResponse, _impl_.errors_) +
          decltype(ValidateDraftResponse::_impl_.errors_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ValidateDraftResponse, _impl_.warnings_) +
          decltype(ValidateDraftResponse::_impl_.warnings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ValidateDraftResponse), alignof(ValidateDraftResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ValidateDraftResponse::PlacementNew_,
                                 sizeof(ValidateDraftResponse),
                                 alignof(ValidateDraftResponse));
  }
}
constexpr auto ValidateDraftResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ValidateDraftResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ValidateDraftResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ValidateDraftResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ValidateDraftResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ValidateDraftResponse>(), &ValidateDraftResponse::ByteSizeLong,
              &ValidateDraftResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ValidateDraftResponse, _impl_._cached_size_),
          false,
      },
      &ValidateDraftResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ValidateDraftResponse_class_data_ =
        ValidateDraftResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ValidateDraftResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ValidateDraftResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ValidateDraftResponse_class_data_.tc_table);
  return ValidateDraftResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 3, 0, 2>
ValidateDraftResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ValidateDraftResponse, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ValidateDraftResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ValidateDraftResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .dnd5e.api.v1alpha1.ValidationResult validation = 1 [json_name = "validation"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ValidateDraftResponse, _impl_.validation_)}},
    // bool is_complete = 2 [json_name = "isComplete"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ValidateDraftResponse, _impl_.is_complete_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ValidateDraftResponse, _impl_.is_complete_)}},
    // bool is_valid = 3 [json_name = "isValid"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ValidateDraftResponse, _impl_.is_valid_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(ValidateDraftResponse, _impl_.is_valid_)}},
    // repeated .dnd5e.api.v1alpha1.CreationStep missing_steps = 4 [json_name = "missingSteps"];
    {::_pbi::TcParser::FastV32P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ValidateDraftResponse, _impl_.missing_steps_)}},
    // repeated .dnd5e.api.v1alpha1.ValidationError errors = 5 [json_name = "errors", deprecated = true];
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 1, PROTOBUF_FIELD_OFFSET(ValidateDraftResponse, _impl_.errors_)}},
    // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 6 [json_name = "warnings", deprecated = true];
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 2, PROTOBUF_FIELD_OFFSET(ValidateDraftResponse, _impl_.warnings_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.ValidationResult validation = 1 [json_name = "validation"];
    {PROTOBUF_FIELD_OFFSET(ValidateDraftResponse, _impl_.validation_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool is_complete = 2 [json_name = "isComplete"];
    {PROTOBUF_FIELD_OFFSET(ValidateDraftResponse, _impl_.is_complete_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool is_valid = 3 [json_name = "isValid"];
    {PROTOBUF_FIELD_OFFSET(ValidateDraftResponse, _impl_.is_valid_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated .dnd5e.api.v1alpha1.CreationStep missing_steps = 4 [json_name = "missingSteps"];
    {PROTOBUF_FIELD_OFFSET(ValidateDraftResponse, _impl_.missing_steps_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated .dnd5e.api.v1alpha1.ValidationError errors = 5 [json_name = "errors", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(ValidateDraftResponse, _impl_.errors_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 6 [json_name = "warnings", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(ValidateDraftResponse, _impl_.warnings_), -1, 2, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ValidationResult>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ValidationError>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ValidationWarning>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ValidateDraftResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.ValidateDraftResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.missing_steps_.Clear();
  _impl_.errors_.Clear();
  _impl_.warnings_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.validation_ != nullptr);
    _impl_.validation_->Clear();
  }
  ::memset(&_impl_.is_complete_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_valid_) -
      reinterpret_cast<char*>(&_impl_.is_complete_)) + sizeof(_impl_.is_valid_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ValidateDraftResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ValidateDraftResponse& this_ = static_cast<const ValidateDraftResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ValidateDraftResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ValidateDraftResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.ValidateDraftResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.ValidationResult validation = 1 [json_name = "validation"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.validation_, this_._impl_.validation_->GetCachedSize(), target,
        stream);
  }

  // bool is_complete = 2 [json_name = "isComplete"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    if (this_._internal_is_complete() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_is_complete(), target);
    }
  }

  // bool is_valid = 3 [json_name = "isValid"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    if (this_._internal_is_valid() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_is_valid(), target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.CreationStep missing_steps = 4 [json_name = "missingSteps"];
  {
    ::size_t byte_size = this_._impl_._missing_steps_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          4, this_._internal_missing_steps(), byte_size, target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.ValidationError errors = 5 [json_name = "errors", deprecated = true];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_errors_size());
       i < n; i++) {
    const auto& repfield = this_._internal_errors().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 6 [json_name = "warnings", deprecated = true];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_warnings_size());
       i < n; i++) {
    const auto& repfield = this_._internal_warnings().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            6, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.ValidateDraftResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ValidateDraftResponse::ByteSizeLong(const MessageLite& base) {
  const ValidateDraftResponse& this_ = static_cast<const ValidateDraftResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ValidateDraftResponse::ByteSizeLong() const {
  const ValidateDraftResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.ValidateDraftResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.CreationStep missing_steps = 4 [json_name = "missingSteps"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_missing_steps(), 1, this_._impl_._missing_steps_cached_byte_size_);
    }
    // repeated .dnd5e.api.v1alpha1.ValidationError errors = 5 [json_name = "errors", deprecated = true];
    {
      total_size += 1UL * this_._internal_errors_size();
      for (const auto& msg : this_._internal_errors()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 6 [json_name = "warnings", deprecated = true];
    {
      total_size += 1UL * this_._internal_warnings_size();
      for (const auto& msg : this_._internal_warnings()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // .dnd5e.api.v1alpha1.ValidationResult validation = 1 [json_name = "validation"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.validation_);
    }
    // bool is_complete = 2 [json_name = "isComplete"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_is_complete() != 0) {
        total_size += 2;
      }
    }
    // bool is_valid = 3 [json_name = "isValid"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_is_valid() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ValidateDraftResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ValidateDraftResponse*>(&to_msg);
  auto& from = static_cast<const ValidateDraftResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.ValidateDraftResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_missing_steps()->MergeFrom(from._internal_missing_steps());
  _this->_internal_mutable_errors()->MergeFrom(
      from._internal_errors());
  _this->_internal_mutable_warnings()->MergeFrom(
      from._internal_warnings());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.validation_ != nullptr);
      if (_this->_impl_.validation_ == nullptr) {
        _this->_impl_.validation_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.validation_);
      } else {
        _this->_impl_.validation_->MergeFrom(*from._impl_.validation_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_is_complete() != 0) {
        _this->_impl_.is_complete_ = from._impl_.is_complete_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_is_valid() != 0) {
        _this->_impl_.is_valid_ = from._impl_.is_valid_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValidateDraftResponse::CopyFrom(const ValidateDraftResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.ValidateDraftResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ValidateDraftResponse::InternalSwap(ValidateDraftResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.missing_steps_.InternalSwap(&other->_impl_.missing_steps_);
  _impl_.errors_.InternalSwap(&other->_impl_.errors_);
  _impl_.warnings_.InternalSwap(&other->_impl_.warnings_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ValidateDraftResponse, _impl_.is_valid_)
      + sizeof(ValidateDraftResponse::_impl_.is_valid_)
      - PROTOBUF_FIELD_OFFSET(ValidateDraftResponse, _impl_.validation_)>(
          reinterpret_cast<char*>(&_impl_.validation_),
          reinterpret_cast<char*>(&other->_impl_.validation_));
}

::google::protobuf::Metadata ValidateDraftResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetDraftPreviewRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetDraftPreviewRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetDraftPreviewRequest, _impl_._has_bits_);
};

GetDraftPreviewRequest::GetDraftPreviewRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetDraftPreviewRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.GetDraftPreviewRequest)
}
PROTOBUF_NDEBUG_INLINE GetDraftPreviewRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::GetDraftPreviewRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        draft_id_(arena, from.draft_id_) {}

GetDraftPreviewRequest::GetDraftPreviewRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetDraftPreviewRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetDraftPreviewRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetDraftPreviewRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.GetDraftPreviewRequest)
}
PROTOBUF_NDEBUG_INLINE GetDraftPreviewRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        draft_id_(arena) {}

inline void GetDraftPreviewRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetDraftPreviewRequest::~GetDraftPreviewRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.GetDraftPreviewRequest)
  SharedDtor(*this);
}
inline void GetDraftPreviewRequest::SharedDtor(MessageLite& self) {
  GetDraftPreviewRequest& this_ = static_cast<GetDraftPreviewRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.draft_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetDraftPreviewRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetDraftPreviewRequest(arena);
}
constexpr auto GetDraftPreviewRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetDraftPreviewRequest),
                                            alignof(GetDraftPreviewRequest));
}
constexpr auto GetDraftPreviewRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetDraftPreviewRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetDraftPreviewRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetDraftPreviewRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetDraftPreviewRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetDraftPreviewRequest>(), &GetDraftPreviewRequest::ByteSizeLong,
              &GetDraftPreviewRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetDraftPreviewRequest, _impl_._cached_size_),
          false,
      },
      &GetDraftPreviewRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetDraftPreviewRequest_class_data_ =
        GetDraftPreviewRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetDraftPreviewRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetDraftPreviewRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetDraftPreviewRequest_class_data_.tc_table);
  return GetDraftPreviewRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 58, 2>
GetDraftPreviewRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetDraftPreviewRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetDraftPreviewRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::GetDraftPreviewRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string draft_id = 1 [json_name = "draftId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetDraftPreviewRequest, _impl_.draft_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string draft_id = 1 [json_name = "draftId"];
    {PROTOBUF_FIELD_OFFSET(GetDraftPreviewRequest, _impl_.draft_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\10\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.GetDraftPreviewRequest"
    "draft_id"
  }},
};
PROTOBUF_NOINLINE void GetDraftPreviewRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.GetDraftPreviewRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.draft_id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetDraftPreviewRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetDraftPreviewRequest& this_ = static_cast<const GetDraftPreviewRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetDraftPreviewRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetDraftPreviewRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.GetDraftPreviewRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string draft_id = 1 [json_name = "draftId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_draft_id().empty()) {
      const ::std::string& _s = this_._internal_draft_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.GetDraftPreviewRequest.draft_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.GetDraftPreviewRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetDraftPreviewRequest::ByteSizeLong(const MessageLite& base) {
  const GetDraftPreviewRequest& this_ = static_cast<const GetDraftPreviewRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetDraftPreviewRequest::ByteSizeLong() const {
  const GetDraftPreviewRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.GetDraftPreviewRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string draft_id = 1 [json_name = "draftId"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_draft_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_draft_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetDraftPreviewRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetDraftPreviewRequest*>(&to_msg);
  auto& from = static_cast<const GetDraftPreviewRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.GetDraftPreviewRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!from._internal_draft_id().empty()) {
      _this->_internal_set_draft_id(from._internal_draft_id());
    } else {
      if (_this->_impl_.draft_id_.IsDefault()) {
        _this->_internal_set_draft_id("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetDraftPreviewRequest::CopyFrom(const GetDraftPreviewRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.GetDraftPreviewRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetDraftPreviewRequest::InternalSwap(GetDraftPreviewRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.draft_id_, &other->_impl_.draft_id_, arena);
}

::google::protobuf::Metadata GetDraftPreviewRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetDraftPreviewResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetDraftPreviewResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetDraftPreviewResponse, _impl_._has_bits_);
};

void GetDraftPreviewResponse::clear_warnings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.warnings_.Clear();
}
void GetDraftPreviewResponse::clear_errors() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errors_.Clear();
}
GetDraftPreviewResponse::GetDraftPreviewResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetDraftPreviewResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.GetDraftPreviewResponse)
}
PROTOBUF_NDEBUG_INLINE GetDraftPreviewResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::GetDraftPreviewResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        warnings_{visibility, arena, from.warnings_},
        errors_{visibility, arena, from.errors_} {}

GetDraftPreviewResponse::GetDraftPreviewResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetDraftPreviewResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetDraftPreviewResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetDraftPreviewResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.draft_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.draft_)
                : nullptr;
  _impl_.preview_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.preview_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.GetDraftPreviewResponse)
}
PROTOBUF_NDEBUG_INLINE GetDraftPreviewResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        warnings_{visibility, arena},
        errors_{visibility, arena} {}

inline void GetDraftPreviewResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, draft_),
           0,
           offsetof(Impl_, preview_) -
               offsetof(Impl_, draft_) +
               sizeof(Impl_::preview_));
}
GetDraftPreviewResponse::~GetDraftPreviewResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.GetDraftPreviewResponse)
  SharedDtor(*this);
}
inline void GetDraftPreviewResponse::SharedDtor(MessageLite& self) {
  GetDraftPreviewResponse& this_ = static_cast<GetDraftPreviewResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.draft_;
  delete this_._impl_.preview_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetDraftPreviewResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetDraftPreviewResponse(arena);
}
constexpr auto GetDraftPreviewResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetDraftPreviewResponse, _impl_.warnings_) +
          decltype(GetDraftPreviewResponse::_impl_.warnings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GetDraftPreviewResponse, _impl_.errors_) +
          decltype(GetDraftPreviewResponse::_impl_.errors_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetDraftPreviewResponse), alignof(GetDraftPreviewResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetDraftPreviewResponse::PlacementNew_,
                                 sizeof(GetDraftPreviewResponse),
                                 alignof(GetDraftPreviewResponse));
  }
}
constexpr auto GetDraftPreviewResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetDraftPreviewResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetDraftPreviewResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetDraftPreviewResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetDraftPreviewResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetDraftPreviewResponse>(), &GetDraftPreviewResponse::ByteSizeLong,
              &GetDraftPreviewResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetDraftPreviewResponse, _impl_._cached_size_),
          false,
      },
      &GetDraftPreviewResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetDraftPreviewResponse_class_data_ =
        GetDraftPreviewResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetDraftPreviewResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetDraftPreviewResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetDraftPreviewResponse_class_data_.tc_table);
  return GetDraftPreviewResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2>
GetDraftPreviewResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetDraftPreviewResponse, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetDraftPreviewResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::GetDraftPreviewResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dnd5e.api.v1alpha1.ValidationError errors = 4 [json_name = "errors", deprecated = true];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 3, PROTOBUF_FIELD_OFFSET(GetDraftPreviewResponse, _impl_.errors_)}},
    // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetDraftPreviewResponse, _impl_.draft_)}},
    // .dnd5e.api.v1alpha1.Character preview = 2 [json_name = "preview"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(GetDraftPreviewResponse, _impl_.preview_)}},
    // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 3 [json_name = "warnings", deprecated = true];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(GetDraftPreviewResponse, _impl_.warnings_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
    {PROTOBUF_FIELD_OFFSET(GetDraftPreviewResponse, _impl_.draft_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.Character preview = 2 [json_name = "preview"];
    {PROTOBUF_FIELD_OFFSET(GetDraftPreviewResponse, _impl_.preview_), _Internal::kHasBitsOffset + 1, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 3 [json_name = "warnings", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(GetDraftPreviewResponse, _impl_.warnings_), -1, 2, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dnd5e.api.v1alpha1.ValidationError errors = 4 [json_name = "errors", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(GetDraftPreviewResponse, _impl_.errors_), -1, 3, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CharacterDraft>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::Character>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ValidationWarning>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ValidationError>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void GetDraftPreviewResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.GetDraftPreviewResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.warnings_.Clear();
  _impl_.errors_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.draft_ != nullptr);
      _impl_.draft_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.preview_ != nullptr);
      _impl_.preview_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetDraftPreviewResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetDraftPreviewResponse& this_ = static_cast<const GetDraftPreviewResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetDraftPreviewResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetDraftPreviewResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.GetDraftPreviewResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.draft_, this_._impl_.draft_->GetCachedSize(), target,
        stream);
  }

  // .dnd5e.api.v1alpha1.Character preview = 2 [json_name = "preview"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.preview_, this_._impl_.preview_->GetCachedSize(), target,
        stream);
  }

  // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 3 [json_name = "warnings", deprecated = true];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_warnings_size());
       i < n; i++) {
    const auto& repfield = this_._internal_warnings().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .dnd5e.api.v1alpha1.ValidationError errors = 4 [json_name = "errors", deprecated = true];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_errors_size());
       i < n; i++) {
    const auto& repfield = this_._internal_errors().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.GetDraftPreviewResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetDraftPreviewResponse::ByteSizeLong(const MessageLite& base) {
  const GetDraftPreviewResponse& this_ = static_cast<const GetDraftPreviewResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetDraftPreviewResponse::ByteSizeLong() const {
  const GetDraftPreviewResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.GetDraftPreviewResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.ValidationWarning warnings = 3 [json_name = "warnings", deprecated = true];
    {
      total_size += 1UL * this_._internal_warnings_size();
      for (const auto& msg : this_._internal_warnings()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .dnd5e.api.v1alpha1.ValidationError errors = 4 [json_name = "errors", deprecated = true];
    {
      total_size += 1UL * this_._internal_errors_size();
      for (const auto& msg : this_._internal_errors()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.draft_);
    }
    // .dnd5e.api.v1alpha1.Character preview = 2 [json_name = "preview"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.preview_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetDraftPreviewResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetDraftPreviewResponse*>(&to_msg);
  auto& from = static_cast<const GetDraftPreviewResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.GetDraftPreviewResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_warnings()->MergeFrom(
      from._internal_warnings());
  _this->_internal_mutable_errors()->MergeFrom(
      from._internal_errors());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.draft_ != nullptr);
      if (_this->_impl_.draft_ == nullptr) {
        _this->_impl_.draft_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.draft_);
      } else {
        _this->_impl_.draft_->MergeFrom(*from._impl_.draft_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.preview_ != nullptr);
      if (_this->_impl_.preview_ == nullptr) {
        _this->_impl_.preview_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.preview_);
      } else {
        _this->_impl_.preview_->MergeFrom(*from._impl_.preview_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetDraftPreviewResponse::CopyFrom(const GetDraftPreviewResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.GetDraftPreviewResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetDraftPreviewResponse::InternalSwap(GetDraftPreviewResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.warnings_.InternalSwap(&other->_impl_.warnings_);
  _impl_.errors_.InternalSwap(&other->_impl_.errors_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetDraftPreviewResponse, _impl_.preview_)
      + sizeof(GetDraftPreviewResponse::_impl_.preview_)
      - PROTOBUF_FIELD_OFFSET(GetDraftPreviewResponse, _impl_.draft_)>(
          reinterpret_cast<char*>(&_impl_.draft_),
          reinterpret_cast<char*>(&other->_impl_.draft_));
}

::google::protobuf::Metadata GetDraftPreviewResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FinalizeDraftRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<FinalizeDraftRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(FinalizeDraftRequest, _impl_._has_bits_);
};

FinalizeDraftRequest::FinalizeDraftRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, FinalizeDraftRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.FinalizeDraftRequest)
}
PROTOBUF_NDEBUG_INLINE FinalizeDraftRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::FinalizeDraftRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        draft_id_(arena, from.draft_id_) {}

FinalizeDraftRequest::FinalizeDraftRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const FinalizeDraftRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, FinalizeDraftRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FinalizeDraftRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.FinalizeDraftRequest)
}
PROTOBUF_NDEBUG_INLINE FinalizeDraftRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        draft_id_(arena) {}

inline void FinalizeDraftRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
FinalizeDraftRequest::~FinalizeDraftRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.FinalizeDraftRequest)
  SharedDtor(*this);
}
inline void FinalizeDraftRequest::SharedDtor(MessageLite& self) {
  FinalizeDraftRequest& this_ = static_cast<FinalizeDraftRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.draft_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL FinalizeDraftRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) FinalizeDraftRequest(arena);
}
constexpr auto FinalizeDraftRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(FinalizeDraftRequest),
                                            alignof(FinalizeDraftRequest));
}
constexpr auto FinalizeDraftRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_FinalizeDraftRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &FinalizeDraftRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<FinalizeDraftRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &FinalizeDraftRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<FinalizeDraftRequest>(), &FinalizeDraftRequest::ByteSizeLong,
              &FinalizeDraftRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(FinalizeDraftRequest, _impl_._cached_size_),
          false,
      },
      &FinalizeDraftRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull FinalizeDraftRequest_class_data_ =
        FinalizeDraftRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
FinalizeDraftRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&FinalizeDraftRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(FinalizeDraftRequest_class_data_.tc_table);
  return FinalizeDraftRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 56, 2>
FinalizeDraftRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FinalizeDraftRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    FinalizeDraftRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::FinalizeDraftRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string draft_id = 1 [json_name = "draftId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(FinalizeDraftRequest, _impl_.draft_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string draft_id = 1 [json_name = "draftId"];
    {PROTOBUF_FIELD_OFFSET(FinalizeDraftRequest, _impl_.draft_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\47\10\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.FinalizeDraftRequest"
    "draft_id"
  }},
};
PROTOBUF_NOINLINE void FinalizeDraftRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.FinalizeDraftRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.draft_id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL FinalizeDraftRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const FinalizeDraftRequest& this_ = static_cast<const FinalizeDraftRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL FinalizeDraftRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const FinalizeDraftRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.FinalizeDraftRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string draft_id = 1 [json_name = "draftId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_draft_id().empty()) {
      const ::std::string& _s = this_._internal_draft_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.FinalizeDraftRequest.draft_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.FinalizeDraftRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t FinalizeDraftRequest::ByteSizeLong(const MessageLite& base) {
  const FinalizeDraftRequest& this_ = static_cast<const FinalizeDraftRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t FinalizeDraftRequest::ByteSizeLong() const {
  const FinalizeDraftRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.FinalizeDraftRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string draft_id = 1 [json_name = "draftId"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_draft_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_draft_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void FinalizeDraftRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FinalizeDraftRequest*>(&to_msg);
  auto& from = static_cast<const FinalizeDraftRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.FinalizeDraftRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!from._internal_draft_id().empty()) {
      _this->_internal_set_draft_id(from._internal_draft_id());
    } else {
      if (_this->_impl_.draft_id_.IsDefault()) {
        _this->_internal_set_draft_id("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FinalizeDraftRequest::CopyFrom(const FinalizeDraftRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.FinalizeDraftRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FinalizeDraftRequest::InternalSwap(FinalizeDraftRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.draft_id_, &other->_impl_.draft_id_, arena);
}

::google::protobuf::Metadata FinalizeDraftRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FinalizeDraftResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<FinalizeDraftResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(FinalizeDraftResponse, _impl_._has_bits_);
};

void FinalizeDraftResponse::clear_final_validation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.final_validation_ != nullptr) _impl_.final_validation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
FinalizeDraftResponse::FinalizeDraftResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, FinalizeDraftResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.FinalizeDraftResponse)
}
PROTOBUF_NDEBUG_INLINE FinalizeDraftResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::FinalizeDraftResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

FinalizeDraftResponse::FinalizeDraftResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const FinalizeDraftResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, FinalizeDraftResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FinalizeDraftResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.character_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.character_)
                : nullptr;
  _impl_.final_validation_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.final_validation_)
                : nullptr;
  _impl_.draft_deleted_ = from._impl_.draft_deleted_;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.FinalizeDraftResponse)
}
PROTOBUF_NDEBUG_INLINE FinalizeDraftResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void FinalizeDraftResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, character_),
           0,
           offsetof(Impl_, draft_deleted_) -
               offsetof(Impl_, character_) +
               sizeof(Impl_::draft_deleted_));
}
FinalizeDraftResponse::~FinalizeDraftResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.FinalizeDraftResponse)
  SharedDtor(*this);
}
inline void FinalizeDraftResponse::SharedDtor(MessageLite& self) {
  FinalizeDraftResponse& this_ = static_cast<FinalizeDraftResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.character_;
  delete this_._impl_.final_validation_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL FinalizeDraftResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) FinalizeDraftResponse(arena);
}
constexpr auto FinalizeDraftResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(FinalizeDraftResponse),
                                            alignof(FinalizeDraftResponse));
}
constexpr auto FinalizeDraftResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_FinalizeDraftResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &FinalizeDraftResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<FinalizeDraftResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &FinalizeDraftResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<FinalizeDraftResponse>(), &FinalizeDraftResponse::ByteSizeLong,
              &FinalizeDraftResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(FinalizeDraftResponse, _impl_._cached_size_),
          false,
      },
      &FinalizeDraftResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull FinalizeDraftResponse_class_data_ =
        FinalizeDraftResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
FinalizeDraftResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&FinalizeDraftResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(FinalizeDraftResponse_class_data_.tc_table);
  return FinalizeDraftResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2>
FinalizeDraftResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FinalizeDraftResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    FinalizeDraftResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::FinalizeDraftResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .dnd5e.api.v1alpha1.Character character = 1 [json_name = "character"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(FinalizeDraftResponse, _impl_.character_)}},
    // bool draft_deleted = 2 [json_name = "draftDeleted"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(FinalizeDraftResponse, _impl_.draft_deleted_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(FinalizeDraftResponse, _impl_.draft_deleted_)}},
    // .dnd5e.api.v1alpha1.ValidationResult final_validation = 3 [json_name = "finalValidation"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(FinalizeDraftResponse, _impl_.final_validation_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.Character character = 1 [json_name = "character"];
    {PROTOBUF_FIELD_OFFSET(FinalizeDraftResponse, _impl_.character_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool draft_deleted = 2 [json_name = "draftDeleted"];
    {PROTOBUF_FIELD_OFFSET(FinalizeDraftResponse, _impl_.draft_deleted_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // .dnd5e.api.v1alpha1.ValidationResult final_validation = 3 [json_name = "finalValidation"];
    {PROTOBUF_FIELD_OFFSET(FinalizeDraftResponse, _impl_.final_validation_), _Internal::kHasBitsOffset + 1, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::Character>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ValidationResult>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void FinalizeDraftResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.FinalizeDraftResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.character_ != nullptr);
      _impl_.character_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.final_validation_ != nullptr);
      _impl_.final_validation_->Clear();
    }
  }
  _impl_.draft_deleted_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL FinalizeDraftResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const FinalizeDraftResponse& this_ = static_cast<const FinalizeDraftResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL FinalizeDraftResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const FinalizeDraftResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.FinalizeDraftResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.Character character = 1 [json_name = "character"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.character_, this_._impl_.character_->GetCachedSize(), target,
        stream);
  }

  // bool draft_deleted = 2 [json_name = "draftDeleted"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    if (this_._internal_draft_deleted() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_draft_deleted(), target);
    }
  }

  // .dnd5e.api.v1alpha1.ValidationResult final_validation = 3 [json_name = "finalValidation"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.final_validation_, this_._impl_.final_validation_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.FinalizeDraftResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t FinalizeDraftResponse::ByteSizeLong(const MessageLite& base) {
  const FinalizeDraftResponse& this_ = static_cast<const FinalizeDraftResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t FinalizeDraftResponse::ByteSizeLong() const {
  const FinalizeDraftResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.FinalizeDraftResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // .dnd5e.api.v1alpha1.Character character = 1 [json_name = "character"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.character_);
    }
    // .dnd5e.api.v1alpha1.ValidationResult final_validation = 3 [json_name = "finalValidation"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.final_validation_);
    }
    // bool draft_deleted = 2 [json_name = "draftDeleted"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_draft_deleted() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void FinalizeDraftResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FinalizeDraftResponse*>(&to_msg);
  auto& from = static_cast<const FinalizeDraftResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.FinalizeDraftResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.character_ != nullptr);
      if (_this->_impl_.character_ == nullptr) {
        _this->_impl_.character_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.character_);
      } else {
        _this->_impl_.character_->MergeFrom(*from._impl_.character_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.final_validation_ != nullptr);
      if (_this->_impl_.final_validation_ == nullptr) {
        _this->_impl_.final_validation_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.final_validation_);
      } else {
        _this->_impl_.final_validation_->MergeFrom(*from._impl_.final_validation_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_draft_deleted() != 0) {
        _this->_impl_.draft_deleted_ = from._impl_.draft_deleted_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FinalizeDraftResponse::CopyFrom(const FinalizeDraftResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.FinalizeDraftResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FinalizeDraftResponse::InternalSwap(FinalizeDraftResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FinalizeDraftResponse, _impl_.draft_deleted_)
      + sizeof(FinalizeDraftResponse::_impl_.draft_deleted_)
      - PROTOBUF_FIELD_OFFSET(FinalizeDraftResponse, _impl_.character_)>(
          reinterpret_cast<char*>(&_impl_.character_),
          reinterpret_cast<char*>(&other->_impl_.character_));
}

::google::protobuf::Metadata FinalizeDraftResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeleteDraftRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<DeleteDraftRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DeleteDraftRequest, _impl_._has_bits_);
};

DeleteDraftRequest::DeleteDraftRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DeleteDraftRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.DeleteDraftRequest)
}
PROTOBUF_NDEBUG_INLINE DeleteDraftRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::DeleteDraftRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        draft_id_(arena, from.draft_id_) {}

DeleteDraftRequest::DeleteDraftRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DeleteDraftRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DeleteDraftRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeleteDraftRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.DeleteDraftRequest)
}
PROTOBUF_NDEBUG_INLINE DeleteDraftRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        draft_id_(arena) {}

inline void DeleteDraftRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeleteDraftRequest::~DeleteDraftRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.DeleteDraftRequest)
  SharedDtor(*this);
}
inline void DeleteDraftRequest::SharedDtor(MessageLite& self) {
  DeleteDraftRequest& this_ = static_cast<DeleteDraftRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.draft_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DeleteDraftRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DeleteDraftRequest(arena);
}
constexpr auto DeleteDraftRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DeleteDraftRequest),
                                            alignof(DeleteDraftRequest));
}
constexpr auto DeleteDraftRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DeleteDraftRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DeleteDraftRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DeleteDraftRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DeleteDraftRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DeleteDraftRequest>(), &DeleteDraftRequest::ByteSizeLong,
              &DeleteDraftRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DeleteDraftRequest, _impl_._cached_size_),
          false,
      },
      &DeleteDraftRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull DeleteDraftRequest_class_data_ =
        DeleteDraftRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
DeleteDraftRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DeleteDraftRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DeleteDraftRequest_class_data_.tc_table);
  return DeleteDraftRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 54, 2>
DeleteDraftRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeleteDraftRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    DeleteDraftRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::DeleteDraftRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string draft_id = 1 [json_name = "draftId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DeleteDraftRequest, _impl_.draft_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string draft_id = 1 [json_name = "draftId"];
    {PROTOBUF_FIELD_OFFSET(DeleteDraftRequest, _impl_.draft_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\10\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.DeleteDraftRequest"
    "draft_id"
  }},
};
PROTOBUF_NOINLINE void DeleteDraftRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.DeleteDraftRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.draft_id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DeleteDraftRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DeleteDraftRequest& this_ = static_cast<const DeleteDraftRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DeleteDraftRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DeleteDraftRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.DeleteDraftRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string draft_id = 1 [json_name = "draftId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_draft_id().empty()) {
      const ::std::string& _s = this_._internal_draft_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.DeleteDraftRequest.draft_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.DeleteDraftRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DeleteDraftRequest::ByteSizeLong(const MessageLite& base) {
  const DeleteDraftRequest& this_ = static_cast<const DeleteDraftRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DeleteDraftRequest::ByteSizeLong() const {
  const DeleteDraftRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.DeleteDraftRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string draft_id = 1 [json_name = "draftId"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_draft_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_draft_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DeleteDraftRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeleteDraftRequest*>(&to_msg);
  auto& from = static_cast<const DeleteDraftRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.DeleteDraftRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!from._internal_draft_id().empty()) {
      _this->_internal_set_draft_id(from._internal_draft_id());
    } else {
      if (_this->_impl_.draft_id_.IsDefault()) {
        _this->_internal_set_draft_id("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteDraftRequest::CopyFrom(const DeleteDraftRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.DeleteDraftRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeleteDraftRequest::InternalSwap(DeleteDraftRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.draft_id_, &other->_impl_.draft_id_, arena);
}

::google::protobuf::Metadata DeleteDraftRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeleteDraftResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<DeleteDraftResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DeleteDraftResponse, _impl_._has_bits_);
};

DeleteDraftResponse::DeleteDraftResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DeleteDraftResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.DeleteDraftResponse)
}
PROTOBUF_NDEBUG_INLINE DeleteDraftResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::DeleteDraftResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        message_(arena, from.message_) {}

DeleteDraftResponse::DeleteDraftResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DeleteDraftResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DeleteDraftResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeleteDraftResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.DeleteDraftResponse)
}
PROTOBUF_NDEBUG_INLINE DeleteDraftResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        message_(arena) {}

inline void DeleteDraftResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeleteDraftResponse::~DeleteDraftResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.DeleteDraftResponse)
  SharedDtor(*this);
}
inline void DeleteDraftResponse::SharedDtor(MessageLite& self) {
  DeleteDraftResponse& this_ = static_cast<DeleteDraftResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DeleteDraftResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DeleteDraftResponse(arena);
}
constexpr auto DeleteDraftResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DeleteDraftResponse),
                                            alignof(DeleteDraftResponse));
}
constexpr auto DeleteDraftResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DeleteDraftResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DeleteDraftResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DeleteDraftResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DeleteDraftResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DeleteDraftResponse>(), &DeleteDraftResponse::ByteSizeLong,
              &DeleteDraftResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DeleteDraftResponse, _impl_._cached_size_),
          false,
      },
      &DeleteDraftResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull DeleteDraftResponse_class_data_ =
        DeleteDraftResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
DeleteDraftResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DeleteDraftResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DeleteDraftResponse_class_data_.tc_table);
  return DeleteDraftResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 54, 2>
DeleteDraftResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeleteDraftResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    DeleteDraftResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::DeleteDraftResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string message = 1 [json_name = "message"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DeleteDraftResponse, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string message = 1 [json_name = "message"];
    {PROTOBUF_FIELD_OFFSET(DeleteDraftResponse, _impl_.message_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\46\7\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.DeleteDraftResponse"
    "message"
  }},
};
PROTOBUF_NOINLINE void DeleteDraftResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.DeleteDraftResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.message_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DeleteDraftResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DeleteDraftResponse& this_ = static_cast<const DeleteDraftResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DeleteDraftResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DeleteDraftResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.DeleteDraftResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string message = 1 [json_name = "message"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_message().empty()) {
      const ::std::string& _s = this_._internal_message();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.DeleteDraftResponse.message");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.DeleteDraftResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DeleteDraftResponse::ByteSizeLong(const MessageLite& base) {
  const DeleteDraftResponse& this_ = static_cast<const DeleteDraftResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DeleteDraftResponse::ByteSizeLong() const {
  const DeleteDraftResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.DeleteDraftResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string message = 1 [json_name = "message"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_message().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_message());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DeleteDraftResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeleteDraftResponse*>(&to_msg);
  auto& from = static_cast<const DeleteDraftResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.DeleteDraftResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!from._internal_message().empty()) {
      _this->_internal_set_message(from._internal_message());
    } else {
      if (_this->_impl_.message_.IsDefault()) {
        _this->_internal_set_message("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteDraftResponse::CopyFrom(const DeleteDraftResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.DeleteDraftResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeleteDraftResponse::InternalSwap(DeleteDraftResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
}

::google::protobuf::Metadata DeleteDraftResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
RaceInfo_AbilityBonusesEntry_DoNotUse::RaceInfo_AbilityBonusesEntry_DoNotUse()
    : SuperType(RaceInfo_AbilityBonusesEntry_DoNotUse_class_data_.base()) {}
RaceInfo_AbilityBonusesEntry_DoNotUse::RaceInfo_AbilityBonusesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, RaceInfo_AbilityBonusesEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
RaceInfo_AbilityBonusesEntry_DoNotUse::RaceInfo_AbilityBonusesEntry_DoNotUse() : SuperType() {}
RaceInfo_AbilityBonusesEntry_DoNotUse::RaceInfo_AbilityBonusesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL RaceInfo_AbilityBonusesEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RaceInfo_AbilityBonusesEntry_DoNotUse(arena);
}
constexpr auto RaceInfo_AbilityBonusesEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RaceInfo_AbilityBonusesEntry_DoNotUse),
                                            alignof(RaceInfo_AbilityBonusesEntry_DoNotUse));
}
constexpr auto RaceInfo_AbilityBonusesEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RaceInfo_AbilityBonusesEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RaceInfo_AbilityBonusesEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RaceInfo_AbilityBonusesEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RaceInfo_AbilityBonusesEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&RaceInfo_AbilityBonusesEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RaceInfo_AbilityBonusesEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &RaceInfo_AbilityBonusesEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RaceInfo_AbilityBonusesEntry_DoNotUse_class_data_ =
        RaceInfo_AbilityBonusesEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RaceInfo_AbilityBonusesEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RaceInfo_AbilityBonusesEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RaceInfo_AbilityBonusesEntry_DoNotUse_class_data_.tc_table);
  return RaceInfo_AbilityBonusesEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 59, 2>
RaceInfo_AbilityBonusesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RaceInfo_AbilityBonusesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RaceInfo_AbilityBonusesEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::RaceInfo_AbilityBonusesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 value = 2 [json_name = "value"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RaceInfo_AbilityBonusesEntry_DoNotUse, _impl_.value_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(RaceInfo_AbilityBonusesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RaceInfo_AbilityBonusesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(RaceInfo_AbilityBonusesEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(RaceInfo_AbilityBonusesEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\57\3\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.RaceInfo.AbilityBonusesEntry"
    "key"
  }},
};
// ===================================================================

class RaceInfo::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RaceInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_._has_bits_);
};

RaceInfo::RaceInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RaceInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.RaceInfo)
}
PROTOBUF_NDEBUG_INLINE RaceInfo::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::RaceInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        ability_bonuses_{visibility, arena, from.ability_bonuses_},
        traits_{visibility, arena, from.traits_},
        subraces_{visibility, arena, from.subraces_},
        languages_{visibility, arena, from.languages_},
        _languages_cached_byte_size_{0},
        choices_{visibility, arena, from.choices_},
        proficiencies_{visibility, arena, from.proficiencies_},
        name_(arena, from.name_),
        description_(arena, from.description_),
        age_description_(arena, from.age_description_),
        alignment_description_(arena, from.alignment_description_),
        size_description_(arena, from.size_description_) {}

RaceInfo::RaceInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RaceInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RaceInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RaceInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.proficiency_grants_ = ((cached_has_bits & 0x00000020U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.proficiency_grants_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, race_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, race_id_),
           offsetof(Impl_, size_) -
               offsetof(Impl_, race_id_) +
               sizeof(Impl_::size_));

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.RaceInfo)
}
PROTOBUF_NDEBUG_INLINE RaceInfo::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        ability_bonuses_{visibility, arena},
        traits_{visibility, arena},
        subraces_{visibility, arena},
        languages_{visibility, arena},
        _languages_cached_byte_size_{0},
        choices_{visibility, arena},
        proficiencies_{visibility, arena},
        name_(arena),
        description_(arena),
        age_description_(arena),
        alignment_description_(arena),
        size_description_(arena) {}

inline void RaceInfo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, proficiency_grants_),
           0,
           offsetof(Impl_, size_) -
               offsetof(Impl_, proficiency_grants_) +
               sizeof(Impl_::size_));
}
RaceInfo::~RaceInfo() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.RaceInfo)
  SharedDtor(*this);
}
inline void RaceInfo::SharedDtor(MessageLite& self) {
  RaceInfo& this_ = static_cast<RaceInfo&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.age_description_.Destroy();
  this_._impl_.alignment_description_.Destroy();
  this_._impl_.size_description_.Destroy();
  delete this_._impl_.proficiency_grants_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RaceInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RaceInfo(arena);
}
constexpr auto RaceInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.ability_bonuses_) +
          decltype(RaceInfo::_impl_.ability_bonuses_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.ability_bonuses_) +
          decltype(RaceInfo::_impl_.ability_bonuses_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.traits_) +
          decltype(RaceInfo::_impl_.traits_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.subraces_) +
          decltype(RaceInfo::_impl_.subraces_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.languages_) +
          decltype(RaceInfo::_impl_.languages_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.choices_) +
          decltype(RaceInfo::_impl_.choices_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.proficiencies_) +
          decltype(RaceInfo::_impl_.proficiencies_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RaceInfo), alignof(RaceInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RaceInfo::PlacementNew_,
                                 sizeof(RaceInfo),
                                 alignof(RaceInfo));
  }
}
constexpr auto RaceInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RaceInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RaceInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RaceInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RaceInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RaceInfo>(), &RaceInfo::ByteSizeLong,
              &RaceInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_._cached_size_),
          false,
      },
      &RaceInfo::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RaceInfo_class_data_ =
        RaceInfo::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RaceInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RaceInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RaceInfo_class_data_.tc_table);
  return RaceInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 15, 5, 139, 2>
RaceInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_._has_bits_),
    0, // no _extensions_
    15, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294934528,  // skipmap
    offsetof(decltype(_table_), field_entries),
    15,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RaceInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::RaceInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .dnd5e.api.v1alpha1.Race race_id = 1 [json_name = "raceId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RaceInfo, _impl_.race_id_), 6>(),
     {8, 6, 0, PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.race_id_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.name_)}},
    // string description = 3 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.description_)}},
    // int32 speed = 4 [json_name = "speed"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RaceInfo, _impl_.speed_), 7>(),
     {32, 7, 0, PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.speed_)}},
    // .dnd5e.api.v1alpha1.Size size = 5 [json_name = "size"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RaceInfo, _impl_.size_), 8>(),
     {40, 8, 0, PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.size_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .dnd5e.api.v1alpha1.RacialTrait traits = 7 [json_name = "traits"];
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.traits_)}},
    // repeated .dnd5e.api.v1alpha1.SubraceInfo subraces = 8 [json_name = "subraces"];
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 1, PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.subraces_)}},
    // .dnd5e.api.v1alpha1.ProficiencyGrants proficiency_grants = 9 [json_name = "proficiencyGrants"];
    {::_pbi::TcParser::FastMtS1,
     {74, 5, 2, PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.proficiency_grants_)}},
    // repeated .dnd5e.api.v1alpha1.Language languages = 10 [json_name = "languages"];
    {::_pbi::TcParser::FastV32P1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.languages_)}},
    // repeated .dnd5e.api.v1alpha1.Choice choices = 11 [json_name = "choices"];
    {::_pbi::TcParser::FastMtR1,
     {90, 63, 3, PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.choices_)}},
    // string age_description = 12 [json_name = "ageDescription", deprecated = true];
    {::_pbi::TcParser::FastUS1,
     {98, 2, 0, PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.age_description_)}},
    // string alignment_description = 13 [json_name = "alignmentDescription", deprecated = true];
    {::_pbi::TcParser::FastUS1,
     {106, 3, 0, PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.alignment_description_)}},
    // string size_description = 14 [json_name = "sizeDescription", deprecated = true];
    {::_pbi::TcParser::FastUS1,
     {114, 4, 0, PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.size_description_)}},
    // repeated string proficiencies = 15 [json_name = "proficiencies", deprecated = true];
    {::_pbi::TcParser::FastUR1,
     {122, 63, 0, PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.proficiencies_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.Race race_id = 1 [json_name = "raceId"];
    {PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.race_id_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.name_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 3 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.description_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 speed = 4 [json_name = "speed"];
    {PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.speed_), _Internal::kHasBitsOffset + 7, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .dnd5e.api.v1alpha1.Size size = 5 [json_name = "size"];
    {PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.size_), _Internal::kHasBitsOffset + 8, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // map<string, int32> ability_bonuses = 6 [json_name = "abilityBonuses"];
    {PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.ability_bonuses_), -1, 4, (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // repeated .dnd5e.api.v1alpha1.RacialTrait traits = 7 [json_name = "traits"];
    {PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.traits_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dnd5e.api.v1alpha1.SubraceInfo subraces = 8 [json_name = "subraces"];
    {PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.subraces_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.ProficiencyGrants proficiency_grants = 9 [json_name = "proficiencyGrants"];
    {PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.proficiency_grants_), _Internal::kHasBitsOffset + 5, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dnd5e.api.v1alpha1.Language languages = 10 [json_name = "languages"];
    {PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.languages_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated .dnd5e.api.v1alpha1.Choice choices = 11 [json_name = "choices"];
    {PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.choices_), -1, 3, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string age_description = 12 [json_name = "ageDescription", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.age_description_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string alignment_description = 13 [json_name = "alignmentDescription", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.alignment_description_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string size_description = 14 [json_name = "sizeDescription", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.size_description_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string proficiencies = 15 [json_name = "proficiencies", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.proficiencies_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::RacialTrait>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::SubraceInfo>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ProficiencyGrants>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::Choice>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 5,
                                       0)},
  }},
  {{
    "\33\0\4\13\0\0\17\0\0\0\0\0\17\25\20\15"
    "dnd5e.api.v1alpha1.RaceInfo"
    "name"
    "description"
    "ability_bonuses"
    "age_description"
    "alignment_description"
    "size_description"
    "proficiencies"
  }},
};
PROTOBUF_NOINLINE void RaceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.RaceInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ability_bonuses_.Clear();
  _impl_.traits_.Clear();
  _impl_.subraces_.Clear();
  _impl_.languages_.Clear();
  _impl_.choices_.Clear();
  _impl_.proficiencies_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.age_description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.alignment_description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      _impl_.size_description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      ABSL_DCHECK(_impl_.proficiency_grants_ != nullptr);
      _impl_.proficiency_grants_->Clear();
    }
  }
  if ((cached_has_bits & 0x000000c0U) != 0) {
    ::memset(&_impl_.race_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.speed_) -
        reinterpret_cast<char*>(&_impl_.race_id_)) + sizeof(_impl_.speed_));
  }
  _impl_.size_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RaceInfo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RaceInfo& this_ = static_cast<const RaceInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RaceInfo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RaceInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.RaceInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .dnd5e.api.v1alpha1.Race race_id = 1 [json_name = "raceId"];
  if ((this_._impl_._has_bits_[0] & 0x00000040U) != 0) {
    if (this_._internal_race_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_race_id(), target);
    }
  }

  // string name = 2 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.RaceInfo.name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string description = 3 [json_name = "description"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.RaceInfo.description");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // int32 speed = 4 [json_name = "speed"];
  if ((this_._impl_._has_bits_[0] & 0x00000080U) != 0) {
    if (this_._internal_speed() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_speed(), target);
    }
  }

  // .dnd5e.api.v1alpha1.Size size = 5 [json_name = "size"];
  if ((this_._impl_._has_bits_[0] & 0x00000100U) != 0) {
    if (this_._internal_size() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          5, this_._internal_size(), target);
    }
  }

  // map<string, int32> ability_bonuses = 6 [json_name = "abilityBonuses"];
  if (!this_._internal_ability_bonuses().empty()) {
    using MapType = ::google::protobuf::Map<::std::string, ::int32_t>;
    using WireHelper = _pbi::MapEntryFuncs<::std::string, ::int32_t,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_INT32>;
    const auto& field = this_._internal_ability_bonuses();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.RaceInfo.ability_bonuses");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.RaceInfo.ability_bonuses");
      }
    }
  }

  // repeated .dnd5e.api.v1alpha1.RacialTrait traits = 7 [json_name = "traits"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_traits_size());
       i < n; i++) {
    const auto& repfield = this_._internal_traits().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            7, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .dnd5e.api.v1alpha1.SubraceInfo subraces = 8 [json_name = "subraces"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_subraces_size());
       i < n; i++) {
    const auto& repfield = this_._internal_subraces().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            8, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.ProficiencyGrants proficiency_grants = 9 [json_name = "proficiencyGrants"];
  if ((cached_has_bits & 0x00000020U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        9, *this_._impl_.proficiency_grants_, this_._impl_.proficiency_grants_->GetCachedSize(), target,
        stream);
  }

  // repeated .dnd5e.api.v1alpha1.Language languages = 10 [json_name = "languages"];
  {
    ::size_t byte_size = this_._impl_._languages_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          10, this_._internal_languages(), byte_size, target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.Choice choices = 11 [json_name = "choices"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_choices_size());
       i < n; i++) {
    const auto& repfield = this_._internal_choices().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            11, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // string age_description = 12 [json_name = "ageDescription", deprecated = true];
  if ((cached_has_bits & 0x00000004U) != 0) {
    if (!this_._internal_age_description().empty()) {
      const ::std::string& _s = this_._internal_age_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.RaceInfo.age_description");
      target = stream->WriteStringMaybeAliased(12, _s, target);
    }
  }

  // string alignment_description = 13 [json_name = "alignmentDescription", deprecated = true];
  if ((cached_has_bits & 0x00000008U) != 0) {
    if (!this_._internal_alignment_description().empty()) {
      const ::std::string& _s = this_._internal_alignment_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.RaceInfo.alignment_description");
      target = stream->WriteStringMaybeAliased(13, _s, target);
    }
  }

  // string size_description = 14 [json_name = "sizeDescription", deprecated = true];
  if ((cached_has_bits & 0x00000010U) != 0) {
    if (!this_._internal_size_description().empty()) {
      const ::std::string& _s = this_._internal_size_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.RaceInfo.size_description");
      target = stream->WriteStringMaybeAliased(14, _s, target);
    }
  }

  // repeated string proficiencies = 15 [json_name = "proficiencies", deprecated = true];
  for (int i = 0, n = this_._internal_proficiencies_size(); i < n; ++i) {
    const auto& s = this_._internal_proficiencies().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.RaceInfo.proficiencies");
    target = stream->WriteString(15, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.RaceInfo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RaceInfo::ByteSizeLong(const MessageLite& base) {
  const RaceInfo& this_ = static_cast<const RaceInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RaceInfo::ByteSizeLong() const {
  const RaceInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.RaceInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, int32> ability_bonuses = 6 [json_name = "abilityBonuses"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_ability_bonuses_size());
      for (const auto& entry : this_._internal_ability_bonuses()) {
        total_size += _pbi::MapEntryFuncs<::std::string, ::int32_t,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_INT32>::ByteSizeLong(entry.first, entry.second);
      }
    }
    // repeated .dnd5e.api.v1alpha1.RacialTrait traits = 7 [json_name = "traits"];
    {
      total_size += 1UL * this_._internal_traits_size();
      for (const auto& msg : this_._internal_traits()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .dnd5e.api.v1alpha1.SubraceInfo subraces = 8 [json_name = "subraces"];
    {
      total_size += 1UL * this_._internal_subraces_size();
      for (const auto& msg : this_._internal_subraces()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .dnd5e.api.v1alpha1.Language languages = 10 [json_name = "languages"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_languages(), 1, this_._impl_._languages_cached_byte_size_);
    }
    // repeated .dnd5e.api.v1alpha1.Choice choices = 11 [json_name = "choices"];
    {
      total_size += 1UL * this_._internal_choices_size();
      for (const auto& msg : this_._internal_choices()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated string proficiencies = 15 [json_name = "proficiencies", deprecated = true];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_proficiencies().size());
      for (int i = 0, n = this_._internal_proficiencies().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_proficiencies().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    // string name = 2 [json_name = "name"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string description = 3 [json_name = "description"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // string age_description = 12 [json_name = "ageDescription", deprecated = true];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_age_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_age_description());
      }
    }
    // string alignment_description = 13 [json_name = "alignmentDescription", deprecated = true];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_alignment_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_alignment_description());
      }
    }
    // string size_description = 14 [json_name = "sizeDescription", deprecated = true];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (!this_._internal_size_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_size_description());
      }
    }
    // .dnd5e.api.v1alpha1.ProficiencyGrants proficiency_grants = 9 [json_name = "proficiencyGrants"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.proficiency_grants_);
    }
    // .dnd5e.api.v1alpha1.Race race_id = 1 [json_name = "raceId"];
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (this_._internal_race_id() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_race_id());
      }
    }
    // int32 speed = 4 [json_name = "speed"];
    if ((cached_has_bits & 0x00000080U) != 0) {
      if (this_._internal_speed() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_speed());
      }
    }
  }
   {
    // .dnd5e.api.v1alpha1.Size size = 5 [json_name = "size"];
    if ((cached_has_bits & 0x00000100U) != 0) {
      if (this_._internal_size() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_size());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RaceInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RaceInfo*>(&to_msg);
  auto& from = static_cast<const RaceInfo&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.RaceInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.ability_bonuses_.MergeFrom(from._impl_.ability_bonuses_);
  _this->_internal_mutable_traits()->MergeFrom(
      from._internal_traits());
  _this->_internal_mutable_subraces()->MergeFrom(
      from._internal_subraces());
  _this->_internal_mutable_languages()->MergeFrom(from._internal_languages());
  _this->_internal_mutable_choices()->MergeFrom(
      from._internal_choices());
  _this->_internal_mutable_proficiencies()->MergeFrom(from._internal_proficiencies());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_age_description().empty()) {
        _this->_internal_set_age_description(from._internal_age_description());
      } else {
        if (_this->_impl_.age_description_.IsDefault()) {
          _this->_internal_set_age_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_alignment_description().empty()) {
        _this->_internal_set_alignment_description(from._internal_alignment_description());
      } else {
        if (_this->_impl_.alignment_description_.IsDefault()) {
          _this->_internal_set_alignment_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (!from._internal_size_description().empty()) {
        _this->_internal_set_size_description(from._internal_size_description());
      } else {
        if (_this->_impl_.size_description_.IsDefault()) {
          _this->_internal_set_size_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      ABSL_DCHECK(from._impl_.proficiency_grants_ != nullptr);
      if (_this->_impl_.proficiency_grants_ == nullptr) {
        _this->_impl_.proficiency_grants_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.proficiency_grants_);
      } else {
        _this->_impl_.proficiency_grants_->MergeFrom(*from._impl_.proficiency_grants_);
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (from._internal_race_id() != 0) {
        _this->_impl_.race_id_ = from._impl_.race_id_;
      }
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      if (from._internal_speed() != 0) {
        _this->_impl_.speed_ = from._impl_.speed_;
      }
    }
  }
  if ((cached_has_bits & 0x00000100U) != 0) {
    if (from._internal_size() != 0) {
      _this->_impl_.size_ = from._impl_.size_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RaceInfo::CopyFrom(const RaceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.RaceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RaceInfo::InternalSwap(RaceInfo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.ability_bonuses_.InternalSwap(&other->_impl_.ability_bonuses_);
  _impl_.traits_.InternalSwap(&other->_impl_.traits_);
  _impl_.subraces_.InternalSwap(&other->_impl_.subraces_);
  _impl_.languages_.InternalSwap(&other->_impl_.languages_);
  _impl_.choices_.InternalSwap(&other->_impl_.choices_);
  _impl_.proficiencies_.InternalSwap(&other->_impl_.proficiencies_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.age_description_, &other->_impl_.age_description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.alignment_description_, &other->_impl_.alignment_description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.size_description_, &other->_impl_.size_description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.size_)
      + sizeof(RaceInfo::_impl_.size_)
      - PROTOBUF_FIELD_OFFSET(RaceInfo, _impl_.proficiency_grants_)>(
          reinterpret_cast<char*>(&_impl_.proficiency_grants_),
          reinterpret_cast<char*>(&other->_impl_.proficiency_grants_));
}

::google::protobuf::Metadata RaceInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
SubraceInfo_AbilityBonusesEntry_DoNotUse::SubraceInfo_AbilityBonusesEntry_DoNotUse()
    : SuperType(SubraceInfo_AbilityBonusesEntry_DoNotUse_class_data_.base()) {}
SubraceInfo_AbilityBonusesEntry_DoNotUse::SubraceInfo_AbilityBonusesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, SubraceInfo_AbilityBonusesEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
SubraceInfo_AbilityBonusesEntry_DoNotUse::SubraceInfo_AbilityBonusesEntry_DoNotUse() : SuperType() {}
SubraceInfo_AbilityBonusesEntry_DoNotUse::SubraceInfo_AbilityBonusesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL SubraceInfo_AbilityBonusesEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubraceInfo_AbilityBonusesEntry_DoNotUse(arena);
}
constexpr auto SubraceInfo_AbilityBonusesEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SubraceInfo_AbilityBonusesEntry_DoNotUse),
                                            alignof(SubraceInfo_AbilityBonusesEntry_DoNotUse));
}
constexpr auto SubraceInfo_AbilityBonusesEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubraceInfo_AbilityBonusesEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubraceInfo_AbilityBonusesEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubraceInfo_AbilityBonusesEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubraceInfo_AbilityBonusesEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&SubraceInfo_AbilityBonusesEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubraceInfo_AbilityBonusesEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &SubraceInfo_AbilityBonusesEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubraceInfo_AbilityBonusesEntry_DoNotUse_class_data_ =
        SubraceInfo_AbilityBonusesEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubraceInfo_AbilityBonusesEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubraceInfo_AbilityBonusesEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubraceInfo_AbilityBonusesEntry_DoNotUse_class_data_.tc_table);
  return SubraceInfo_AbilityBonusesEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 62, 2>
SubraceInfo_AbilityBonusesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubraceInfo_AbilityBonusesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SubraceInfo_AbilityBonusesEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::SubraceInfo_AbilityBonusesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 value = 2 [json_name = "value"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SubraceInfo_AbilityBonusesEntry_DoNotUse, _impl_.value_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(SubraceInfo_AbilityBonusesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SubraceInfo_AbilityBonusesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(SubraceInfo_AbilityBonusesEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(SubraceInfo_AbilityBonusesEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\62\3\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.SubraceInfo.AbilityBonusesEntry"
    "key"
  }},
};
// ===================================================================

class SubraceInfo::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SubraceInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubraceInfo, _impl_._has_bits_);
};

SubraceInfo::SubraceInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubraceInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.SubraceInfo)
}
PROTOBUF_NDEBUG_INLINE SubraceInfo::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::SubraceInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        ability_bonuses_{visibility, arena, from.ability_bonuses_},
        traits_{visibility, arena, from.traits_},
        languages_{visibility, arena, from.languages_},
        _languages_cached_byte_size_{0},
        proficiencies_{visibility, arena, from.proficiencies_},
        name_(arena, from.name_),
        description_(arena, from.description_) {}

SubraceInfo::SubraceInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SubraceInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubraceInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubraceInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.proficiency_grants_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.proficiency_grants_)
                : nullptr;
  _impl_.subrace_id_ = from._impl_.subrace_id_;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.SubraceInfo)
}
PROTOBUF_NDEBUG_INLINE SubraceInfo::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        ability_bonuses_{visibility, arena},
        traits_{visibility, arena},
        languages_{visibility, arena},
        _languages_cached_byte_size_{0},
        proficiencies_{visibility, arena},
        name_(arena),
        description_(arena) {}

inline void SubraceInfo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, proficiency_grants_),
           0,
           offsetof(Impl_, subrace_id_) -
               offsetof(Impl_, proficiency_grants_) +
               sizeof(Impl_::subrace_id_));
}
SubraceInfo::~SubraceInfo() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.SubraceInfo)
  SharedDtor(*this);
}
inline void SubraceInfo::SharedDtor(MessageLite& self) {
  SubraceInfo& this_ = static_cast<SubraceInfo&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.description_.Destroy();
  delete this_._impl_.proficiency_grants_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SubraceInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubraceInfo(arena);
}
constexpr auto SubraceInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SubraceInfo, _impl_.ability_bonuses_) +
          decltype(SubraceInfo::_impl_.ability_bonuses_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SubraceInfo, _impl_.ability_bonuses_) +
          decltype(SubraceInfo::_impl_.ability_bonuses_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SubraceInfo, _impl_.traits_) +
          decltype(SubraceInfo::_impl_.traits_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SubraceInfo, _impl_.languages_) +
          decltype(SubraceInfo::_impl_.languages_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SubraceInfo, _impl_.proficiencies_) +
          decltype(SubraceInfo::_impl_.proficiencies_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SubraceInfo), alignof(SubraceInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SubraceInfo::PlacementNew_,
                                 sizeof(SubraceInfo),
                                 alignof(SubraceInfo));
  }
}
constexpr auto SubraceInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubraceInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubraceInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubraceInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubraceInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SubraceInfo>(), &SubraceInfo::ByteSizeLong,
              &SubraceInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubraceInfo, _impl_._cached_size_),
          false,
      },
      &SubraceInfo::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubraceInfo_class_data_ =
        SubraceInfo::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubraceInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubraceInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubraceInfo_class_data_.tc_table);
  return SubraceInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 3, 90, 2>
SubraceInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubraceInfo, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SubraceInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::SubraceInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string proficiencies = 8 [json_name = "proficiencies", deprecated = true];
    {::_pbi::TcParser::FastUR1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(SubraceInfo, _impl_.proficiencies_)}},
    // .dnd5e.api.v1alpha1.Subrace subrace_id = 1 [json_name = "subraceId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SubraceInfo, _impl_.subrace_id_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(SubraceInfo, _impl_.subrace_id_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SubraceInfo, _impl_.name_)}},
    // string description = 3 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(SubraceInfo, _impl_.description_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .dnd5e.api.v1alpha1.RacialTrait traits = 5 [json_name = "traits"];
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(SubraceInfo, _impl_.traits_)}},
    // repeated .dnd5e.api.v1alpha1.Language languages = 6 [json_name = "languages"];
    {::_pbi::TcParser::FastV32P1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(SubraceInfo, _impl_.languages_)}},
    // .dnd5e.api.v1alpha1.ProficiencyGrants proficiency_grants = 7 [json_name = "proficiencyGrants"];
    {::_pbi::TcParser::FastMtS1,
     {58, 2, 1, PROTOBUF_FIELD_OFFSET(SubraceInfo, _impl_.proficiency_grants_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.Subrace subrace_id = 1 [json_name = "subraceId"];
    {PROTOBUF_FIELD_OFFSET(SubraceInfo, _impl_.subrace_id_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(SubraceInfo, _impl_.name_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 3 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(SubraceInfo, _impl_.description_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, int32> ability_bonuses = 4 [json_name = "abilityBonuses"];
    {PROTOBUF_FIELD_OFFSET(SubraceInfo, _impl_.ability_bonuses_), -1, 2, (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // repeated .dnd5e.api.v1alpha1.RacialTrait traits = 5 [json_name = "traits"];
    {PROTOBUF_FIELD_OFFSET(SubraceInfo, _impl_.traits_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dnd5e.api.v1alpha1.Language languages = 6 [json_name = "languages"];
    {PROTOBUF_FIELD_OFFSET(SubraceInfo, _impl_.languages_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // .dnd5e.api.v1alpha1.ProficiencyGrants proficiency_grants = 7 [json_name = "proficiencyGrants"];
    {PROTOBUF_FIELD_OFFSET(SubraceInfo, _impl_.proficiency_grants_), _Internal::kHasBitsOffset + 2, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string proficiencies = 8 [json_name = "proficiencies", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(SubraceInfo, _impl_.proficiencies_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::RacialTrait>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ProficiencyGrants>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 5,
                                       0)},
  }},
  {{
    "\36\0\4\13\17\0\0\0\15\0\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.SubraceInfo"
    "name"
    "description"
    "ability_bonuses"
    "proficiencies"
  }},
};
PROTOBUF_NOINLINE void SubraceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.SubraceInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ability_bonuses_.Clear();
  _impl_.traits_.Clear();
  _impl_.languages_.Clear();
  _impl_.proficiencies_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.proficiency_grants_ != nullptr);
      _impl_.proficiency_grants_->Clear();
    }
  }
  _impl_.subrace_id_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SubraceInfo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SubraceInfo& this_ = static_cast<const SubraceInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SubraceInfo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SubraceInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.SubraceInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .dnd5e.api.v1alpha1.Subrace subrace_id = 1 [json_name = "subraceId"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_subrace_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_subrace_id(), target);
    }
  }

  // string name = 2 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.SubraceInfo.name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string description = 3 [json_name = "description"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.SubraceInfo.description");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // map<string, int32> ability_bonuses = 4 [json_name = "abilityBonuses"];
  if (!this_._internal_ability_bonuses().empty()) {
    using MapType = ::google::protobuf::Map<::std::string, ::int32_t>;
    using WireHelper = _pbi::MapEntryFuncs<::std::string, ::int32_t,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_INT32>;
    const auto& field = this_._internal_ability_bonuses();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.SubraceInfo.ability_bonuses");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.SubraceInfo.ability_bonuses");
      }
    }
  }

  // repeated .dnd5e.api.v1alpha1.RacialTrait traits = 5 [json_name = "traits"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_traits_size());
       i < n; i++) {
    const auto& repfield = this_._internal_traits().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .dnd5e.api.v1alpha1.Language languages = 6 [json_name = "languages"];
  {
    ::size_t byte_size = this_._impl_._languages_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          6, this_._internal_languages(), byte_size, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.ProficiencyGrants proficiency_grants = 7 [json_name = "proficiencyGrants"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *this_._impl_.proficiency_grants_, this_._impl_.proficiency_grants_->GetCachedSize(), target,
        stream);
  }

  // repeated string proficiencies = 8 [json_name = "proficiencies", deprecated = true];
  for (int i = 0, n = this_._internal_proficiencies_size(); i < n; ++i) {
    const auto& s = this_._internal_proficiencies().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.SubraceInfo.proficiencies");
    target = stream->WriteString(8, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.SubraceInfo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SubraceInfo::ByteSizeLong(const MessageLite& base) {
  const SubraceInfo& this_ = static_cast<const SubraceInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SubraceInfo::ByteSizeLong() const {
  const SubraceInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.SubraceInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, int32> ability_bonuses = 4 [json_name = "abilityBonuses"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_ability_bonuses_size());
      for (const auto& entry : this_._internal_ability_bonuses()) {
        total_size += _pbi::MapEntryFuncs<::std::string, ::int32_t,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_INT32>::ByteSizeLong(entry.first, entry.second);
      }
    }
    // repeated .dnd5e.api.v1alpha1.RacialTrait traits = 5 [json_name = "traits"];
    {
      total_size += 1UL * this_._internal_traits_size();
      for (const auto& msg : this_._internal_traits()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .dnd5e.api.v1alpha1.Language languages = 6 [json_name = "languages"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_languages(), 1, this_._impl_._languages_cached_byte_size_);
    }
    // repeated string proficiencies = 8 [json_name = "proficiencies", deprecated = true];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_proficiencies().size());
      for (int i = 0, n = this_._internal_proficiencies().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_proficiencies().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string name = 2 [json_name = "name"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string description = 3 [json_name = "description"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // .dnd5e.api.v1alpha1.ProficiencyGrants proficiency_grants = 7 [json_name = "proficiencyGrants"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.proficiency_grants_);
    }
    // .dnd5e.api.v1alpha1.Subrace subrace_id = 1 [json_name = "subraceId"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_subrace_id() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_subrace_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SubraceInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubraceInfo*>(&to_msg);
  auto& from = static_cast<const SubraceInfo&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.SubraceInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.ability_bonuses_.MergeFrom(from._impl_.ability_bonuses_);
  _this->_internal_mutable_traits()->MergeFrom(
      from._internal_traits());
  _this->_internal_mutable_languages()->MergeFrom(from._internal_languages());
  _this->_internal_mutable_proficiencies()->MergeFrom(from._internal_proficiencies());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.proficiency_grants_ != nullptr);
      if (_this->_impl_.proficiency_grants_ == nullptr) {
        _this->_impl_.proficiency_grants_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.proficiency_grants_);
      } else {
        _this->_impl_.proficiency_grants_->MergeFrom(*from._impl_.proficiency_grants_);
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_subrace_id() != 0) {
        _this->_impl_.subrace_id_ = from._impl_.subrace_id_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubraceInfo::CopyFrom(const SubraceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.SubraceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubraceInfo::InternalSwap(SubraceInfo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.ability_bonuses_.InternalSwap(&other->_impl_.ability_bonuses_);
  _impl_.traits_.InternalSwap(&other->_impl_.traits_);
  _impl_.languages_.InternalSwap(&other->_impl_.languages_);
  _impl_.proficiencies_.InternalSwap(&other->_impl_.proficiencies_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubraceInfo, _impl_.subrace_id_)
      + sizeof(SubraceInfo::_impl_.subrace_id_)
      - PROTOBUF_FIELD_OFFSET(SubraceInfo, _impl_.proficiency_grants_)>(
          reinterpret_cast<char*>(&_impl_.proficiency_grants_),
          reinterpret_cast<char*>(&other->_impl_.proficiency_grants_));
}

::google::protobuf::Metadata SubraceInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RacialTrait::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RacialTrait>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RacialTrait, _impl_._has_bits_);
};

RacialTrait::RacialTrait(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RacialTrait_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.RacialTrait)
}
PROTOBUF_NDEBUG_INLINE RacialTrait::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::RacialTrait& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        options_{visibility, arena, from.options_},
        name_(arena, from.name_),
        description_(arena, from.description_) {}

RacialTrait::RacialTrait(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RacialTrait& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RacialTrait_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RacialTrait* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.is_choice_ = from._impl_.is_choice_;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.RacialTrait)
}
PROTOBUF_NDEBUG_INLINE RacialTrait::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        options_{visibility, arena},
        name_(arena),
        description_(arena) {}

inline void RacialTrait::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.is_choice_ = {};
}
RacialTrait::~RacialTrait() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.RacialTrait)
  SharedDtor(*this);
}
inline void RacialTrait::SharedDtor(MessageLite& self) {
  RacialTrait& this_ = static_cast<RacialTrait&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RacialTrait::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RacialTrait(arena);
}
constexpr auto RacialTrait::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RacialTrait, _impl_.options_) +
          decltype(RacialTrait::_impl_.options_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RacialTrait), alignof(RacialTrait), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RacialTrait::PlacementNew_,
                                 sizeof(RacialTrait),
                                 alignof(RacialTrait));
  }
}
constexpr auto RacialTrait::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RacialTrait_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RacialTrait::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RacialTrait>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RacialTrait::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RacialTrait>(), &RacialTrait::ByteSizeLong,
              &RacialTrait::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RacialTrait, _impl_._cached_size_),
          false,
      },
      &RacialTrait::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RacialTrait_class_data_ =
        RacialTrait::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RacialTrait::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RacialTrait_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RacialTrait_class_data_.tc_table);
  return RacialTrait_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 61, 2>
RacialTrait::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RacialTrait, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RacialTrait_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::RacialTrait>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string options = 4 [json_name = "options"];
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(RacialTrait, _impl_.options_)}},
    // string name = 1 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RacialTrait, _impl_.name_)}},
    // string description = 2 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(RacialTrait, _impl_.description_)}},
    // bool is_choice = 3 [json_name = "isChoice"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RacialTrait, _impl_.is_choice_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(RacialTrait, _impl_.is_choice_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(RacialTrait, _impl_.name_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 2 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(RacialTrait, _impl_.description_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool is_choice = 3 [json_name = "isChoice"];
    {PROTOBUF_FIELD_OFFSET(RacialTrait, _impl_.is_choice_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated string options = 4 [json_name = "options"];
    {PROTOBUF_FIELD_OFFSET(RacialTrait, _impl_.options_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\36\4\13\0\7\0\0\0"
    "dnd5e.api.v1alpha1.RacialTrait"
    "name"
    "description"
    "options"
  }},
};
PROTOBUF_NOINLINE void RacialTrait::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.RacialTrait)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.options_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.is_choice_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RacialTrait::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RacialTrait& this_ = static_cast<const RacialTrait&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RacialTrait::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RacialTrait& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.RacialTrait)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.RacialTrait.name");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string description = 2 [json_name = "description"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.RacialTrait.description");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // bool is_choice = 3 [json_name = "isChoice"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_is_choice() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_is_choice(), target);
    }
  }

  // repeated string options = 4 [json_name = "options"];
  for (int i = 0, n = this_._internal_options_size(); i < n; ++i) {
    const auto& s = this_._internal_options().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.RacialTrait.options");
    target = stream->WriteString(4, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.RacialTrait)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RacialTrait::ByteSizeLong(const MessageLite& base) {
  const RacialTrait& this_ = static_cast<const RacialTrait&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RacialTrait::ByteSizeLong() const {
  const RacialTrait& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.RacialTrait)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string options = 4 [json_name = "options"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_options().size());
      for (int i = 0, n = this_._internal_options().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_options().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string name = 1 [json_name = "name"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string description = 2 [json_name = "description"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // bool is_choice = 3 [json_name = "isChoice"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_is_choice() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RacialTrait::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RacialTrait*>(&to_msg);
  auto& from = static_cast<const RacialTrait&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.RacialTrait)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_options()->MergeFrom(from._internal_options());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_is_choice() != 0) {
        _this->_impl_.is_choice_ = from._impl_.is_choice_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RacialTrait::CopyFrom(const RacialTrait& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.RacialTrait)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RacialTrait::InternalSwap(RacialTrait* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.options_.InternalSwap(&other->_impl_.options_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  swap(_impl_.is_choice_, other->_impl_.is_choice_);
}

::google::protobuf::Metadata RacialTrait::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Choice::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Choice>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Choice, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Choice, _impl_._oneof_case_);
};

void Choice::set_allocated_explicit_options(::dnd5e::api::v1alpha1::ExplicitOptions* PROTOBUF_NULLABLE explicit_options) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_option_set();
  if (explicit_options) {
    ::google::protobuf::Arena* submessage_arena = explicit_options->GetArena();
    if (message_arena != submessage_arena) {
      explicit_options = ::google::protobuf::internal::GetOwnedMessage(message_arena, explicit_options, submessage_arena);
    }
    set_has_explicit_options();
    _impl_.option_set_.explicit_options_ = explicit_options;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.Choice.explicit_options)
}
void Choice::set_allocated_category_reference(::dnd5e::api::v1alpha1::CategoryReference* PROTOBUF_NULLABLE category_reference) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_option_set();
  if (category_reference) {
    ::google::protobuf::Arena* submessage_arena = category_reference->GetArena();
    if (message_arena != submessage_arena) {
      category_reference = ::google::protobuf::internal::GetOwnedMessage(message_arena, category_reference, submessage_arena);
    }
    set_has_category_reference();
    _impl_.option_set_.category_reference_ = category_reference;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.Choice.category_reference)
}
Choice::Choice(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Choice_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.Choice)
}
PROTOBUF_NDEBUG_INLINE Choice::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::Choice& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_),
        description_(arena, from.description_),
        option_set_{},
        _oneof_case_{from._oneof_case_[0]} {}

Choice::Choice(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Choice& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Choice_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Choice* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, choose_count_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, choose_count_),
           offsetof(Impl_, choice_type_) -
               offsetof(Impl_, choose_count_) +
               sizeof(Impl_::choice_type_));
  switch (option_set_case()) {
    case OPTION_SET_NOT_SET:
      break;
      case kExplicitOptions:
        _impl_.option_set_.explicit_options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.option_set_.explicit_options_);
        break;
      case kCategoryReference:
        _impl_.option_set_.category_reference_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.option_set_.category_reference_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.Choice)
}
PROTOBUF_NDEBUG_INLINE Choice::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        id_(arena),
        description_(arena),
        option_set_{},
        _oneof_case_{} {}

inline void Choice::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, choose_count_),
           0,
           offsetof(Impl_, choice_type_) -
               offsetof(Impl_, choose_count_) +
               sizeof(Impl_::choice_type_));
}
Choice::~Choice() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.Choice)
  SharedDtor(*this);
}
inline void Choice::SharedDtor(MessageLite& self) {
  Choice& this_ = static_cast<Choice&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.description_.Destroy();
  if (this_.has_option_set()) {
    this_.clear_option_set();
  }
  this_._impl_.~Impl_();
}

void Choice::clear_option_set() {
// @@protoc_insertion_point(one_of_clear_start:dnd5e.api.v1alpha1.Choice)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (option_set_case()) {
    case kExplicitOptions: {
      if (GetArena() == nullptr) {
        delete _impl_.option_set_.explicit_options_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.option_set_.explicit_options_);
      }
      break;
    }
    case kCategoryReference: {
      if (GetArena() == nullptr) {
        delete _impl_.option_set_.category_reference_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.option_set_.category_reference_);
      }
      break;
    }
    case OPTION_SET_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = OPTION_SET_NOT_SET;
}


inline void* PROTOBUF_NONNULL Choice::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Choice(arena);
}
constexpr auto Choice::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Choice),
                                            alignof(Choice));
}
constexpr auto Choice::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Choice_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Choice::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Choice>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Choice::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Choice>(), &Choice::ByteSizeLong,
              &Choice::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Choice, _impl_._cached_size_),
          false,
      },
      &Choice::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Choice_class_data_ =
        Choice::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Choice::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Choice_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Choice_class_data_.tc_table);
  return Choice_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 6, 2, 47, 2>
Choice::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Choice, _impl_._has_bits_),
    0, // no _extensions_
    6, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Choice_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::Choice>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .dnd5e.api.v1alpha1.ChoiceCategory choice_type = 4 [json_name = "choiceType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Choice, _impl_.choice_type_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(Choice, _impl_.choice_type_)}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Choice, _impl_.id_)}},
    // string description = 2 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Choice, _impl_.description_)}},
    // int32 choose_count = 3 [json_name = "chooseCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Choice, _impl_.choose_count_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(Choice, _impl_.choose_count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(Choice, _impl_.id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 2 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(Choice, _impl_.description_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 choose_count = 3 [json_name = "chooseCount"];
    {PROTOBUF_FIELD_OFFSET(Choice, _impl_.choose_count_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .dnd5e.api.v1alpha1.ChoiceCategory choice_type = 4 [json_name = "choiceType"];
    {PROTOBUF_FIELD_OFFSET(Choice, _impl_.choice_type_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.ExplicitOptions explicit_options = 5 [json_name = "explicitOptions"];
    {PROTOBUF_FIELD_OFFSET(Choice, _impl_.option_set_.explicit_options_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.CategoryReference category_reference = 6 [json_name = "categoryReference"];
    {PROTOBUF_FIELD_OFFSET(Choice, _impl_.option_set_.category_reference_), _Internal::kOneofCaseOffset + 0, 1, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ExplicitOptions>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CategoryReference>()},
  }},
  {{
    "\31\2\13\0\0\0\0\0"
    "dnd5e.api.v1alpha1.Choice"
    "id"
    "description"
  }},
};
PROTOBUF_NOINLINE void Choice::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.Choice)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000000cU) != 0) {
    ::memset(&_impl_.choose_count_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.choice_type_) -
        reinterpret_cast<char*>(&_impl_.choose_count_)) + sizeof(_impl_.choice_type_));
  }
  clear_option_set();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Choice::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Choice& this_ = static_cast<const Choice&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Choice::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Choice& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.Choice)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1 [json_name = "id"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_id().empty()) {
      const ::std::string& _s = this_._internal_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.Choice.id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string description = 2 [json_name = "description"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.Choice.description");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int32 choose_count = 3 [json_name = "chooseCount"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_choose_count() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_choose_count(), target);
    }
  }

  // .dnd5e.api.v1alpha1.ChoiceCategory choice_type = 4 [json_name = "choiceType"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_choice_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          4, this_._internal_choice_type(), target);
    }
  }

  switch (this_.option_set_case()) {
    case kExplicitOptions: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, *this_._impl_.option_set_.explicit_options_, this_._impl_.option_set_.explicit_options_->GetCachedSize(), target,
          stream);
      break;
    }
    case kCategoryReference: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, *this_._impl_.option_set_.category_reference_, this_._impl_.option_set_.category_reference_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.Choice)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Choice::ByteSizeLong(const MessageLite& base) {
  const Choice& this_ = static_cast<const Choice&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Choice::ByteSizeLong() const {
  const Choice& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.Choice)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string id = 1 [json_name = "id"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_id());
      }
    }
    // string description = 2 [json_name = "description"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // int32 choose_count = 3 [json_name = "chooseCount"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_choose_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_choose_count());
      }
    }
    // .dnd5e.api.v1alpha1.ChoiceCategory choice_type = 4 [json_name = "choiceType"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_choice_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_choice_type());
      }
    }
  }
  switch (this_.option_set_case()) {
    // .dnd5e.api.v1alpha1.ExplicitOptions explicit_options = 5 [json_name = "explicitOptions"];
    case kExplicitOptions: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.option_set_.explicit_options_);
      break;
    }
    // .dnd5e.api.v1alpha1.CategoryReference category_reference = 6 [json_name = "categoryReference"];
    case kCategoryReference: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.option_set_.category_reference_);
      break;
    }
    case OPTION_SET_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Choice::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Choice*>(&to_msg);
  auto& from = static_cast<const Choice&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.Choice)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_id().empty()) {
        _this->_internal_set_id(from._internal_id());
      } else {
        if (_this->_impl_.id_.IsDefault()) {
          _this->_internal_set_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_choose_count() != 0) {
        _this->_impl_.choose_count_ = from._impl_.choose_count_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_choice_type() != 0) {
        _this->_impl_.choice_type_ = from._impl_.choice_type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_option_set();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kExplicitOptions: {
        if (oneof_needs_init) {
          _this->_impl_.option_set_.explicit_options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.option_set_.explicit_options_);
        } else {
          _this->_impl_.option_set_.explicit_options_->MergeFrom(*from._impl_.option_set_.explicit_options_);
        }
        break;
      }
      case kCategoryReference: {
        if (oneof_needs_init) {
          _this->_impl_.option_set_.category_reference_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.option_set_.category_reference_);
        } else {
          _this->_impl_.option_set_.category_reference_->MergeFrom(*from._impl_.option_set_.category_reference_);
        }
        break;
      }
      case OPTION_SET_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Choice::CopyFrom(const Choice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.Choice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Choice::InternalSwap(Choice* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Choice, _impl_.choice_type_)
      + sizeof(Choice::_impl_.choice_type_)
      - PROTOBUF_FIELD_OFFSET(Choice, _impl_.choose_count_)>(
          reinterpret_cast<char*>(&_impl_.choose_count_),
          reinterpret_cast<char*>(&other->_impl_.choose_count_));
  swap(_impl_.option_set_, other->_impl_.option_set_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Choice::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ExplicitOptions::_Internal {
 public:
};

ExplicitOptions::ExplicitOptions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ExplicitOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.ExplicitOptions)
}
PROTOBUF_NDEBUG_INLINE ExplicitOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::ExplicitOptions& from_msg)
      : options_{visibility, arena, from.options_},
        _cached_size_{0} {}

ExplicitOptions::ExplicitOptions(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ExplicitOptions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ExplicitOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ExplicitOptions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.ExplicitOptions)
}
PROTOBUF_NDEBUG_INLINE ExplicitOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : options_{visibility, arena},
        _cached_size_{0} {}

inline void ExplicitOptions::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ExplicitOptions::~ExplicitOptions() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.ExplicitOptions)
  SharedDtor(*this);
}
inline void ExplicitOptions::SharedDtor(MessageLite& self) {
  ExplicitOptions& this_ = static_cast<ExplicitOptions&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ExplicitOptions::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ExplicitOptions(arena);
}
constexpr auto ExplicitOptions::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ExplicitOptions, _impl_.options_) +
          decltype(ExplicitOptions::_impl_.options_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ExplicitOptions), alignof(ExplicitOptions), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ExplicitOptions::PlacementNew_,
                                 sizeof(ExplicitOptions),
                                 alignof(ExplicitOptions));
  }
}
constexpr auto ExplicitOptions::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ExplicitOptions_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ExplicitOptions::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ExplicitOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ExplicitOptions::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ExplicitOptions>(), &ExplicitOptions::ByteSizeLong,
              &ExplicitOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ExplicitOptions, _impl_._cached_size_),
          false,
      },
      &ExplicitOptions::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ExplicitOptions_class_data_ =
        ExplicitOptions::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ExplicitOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ExplicitOptions_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ExplicitOptions_class_data_.tc_table);
  return ExplicitOptions_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
ExplicitOptions::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ExplicitOptions_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ExplicitOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dnd5e.api.v1alpha1.ChoiceOption options = 1 [json_name = "options"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ExplicitOptions, _impl_.options_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dnd5e.api.v1alpha1.ChoiceOption options = 1 [json_name = "options"];
    {PROTOBUF_FIELD_OFFSET(ExplicitOptions, _impl_.options_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ChoiceOption>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ExplicitOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.ExplicitOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.options_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ExplicitOptions::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ExplicitOptions& this_ = static_cast<const ExplicitOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ExplicitOptions::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ExplicitOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.ExplicitOptions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dnd5e.api.v1alpha1.ChoiceOption options = 1 [json_name = "options"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_options_size());
       i < n; i++) {
    const auto& repfield = this_._internal_options().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.ExplicitOptions)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ExplicitOptions::ByteSizeLong(const MessageLite& base) {
  const ExplicitOptions& this_ = static_cast<const ExplicitOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ExplicitOptions::ByteSizeLong() const {
  const ExplicitOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.ExplicitOptions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.ChoiceOption options = 1 [json_name = "options"];
    {
      total_size += 1UL * this_._internal_options_size();
      for (const auto& msg : this_._internal_options()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ExplicitOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExplicitOptions*>(&to_msg);
  auto& from = static_cast<const ExplicitOptions&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.ExplicitOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_options()->MergeFrom(
      from._internal_options());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExplicitOptions::CopyFrom(const ExplicitOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.ExplicitOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExplicitOptions::InternalSwap(ExplicitOptions* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.options_.InternalSwap(&other->_impl_.options_);
}

::google::protobuf::Metadata ExplicitOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CategoryReference::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CategoryReference>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CategoryReference, _impl_._has_bits_);
};

CategoryReference::CategoryReference(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CategoryReference_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.CategoryReference)
}
PROTOBUF_NDEBUG_INLINE CategoryReference::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::CategoryReference& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        exclude_ids_{visibility, arena, from.exclude_ids_},
        category_id_(arena, from.category_id_) {}

CategoryReference::CategoryReference(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CategoryReference& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CategoryReference_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CategoryReference* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.CategoryReference)
}
PROTOBUF_NDEBUG_INLINE CategoryReference::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        exclude_ids_{visibility, arena},
        category_id_(arena) {}

inline void CategoryReference::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CategoryReference::~CategoryReference() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.CategoryReference)
  SharedDtor(*this);
}
inline void CategoryReference::SharedDtor(MessageLite& self) {
  CategoryReference& this_ = static_cast<CategoryReference&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.category_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CategoryReference::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CategoryReference(arena);
}
constexpr auto CategoryReference::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CategoryReference, _impl_.exclude_ids_) +
          decltype(CategoryReference::_impl_.exclude_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CategoryReference), alignof(CategoryReference), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CategoryReference::PlacementNew_,
                                 sizeof(CategoryReference),
                                 alignof(CategoryReference));
  }
}
constexpr auto CategoryReference::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CategoryReference_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CategoryReference::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CategoryReference>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CategoryReference::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CategoryReference>(), &CategoryReference::ByteSizeLong,
              &CategoryReference::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CategoryReference, _impl_._cached_size_),
          false,
      },
      &CategoryReference::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CategoryReference_class_data_ =
        CategoryReference::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CategoryReference::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CategoryReference_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CategoryReference_class_data_.tc_table);
  return CategoryReference_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 67, 2>
CategoryReference::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CategoryReference, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CategoryReference_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CategoryReference>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string exclude_ids = 2 [json_name = "excludeIds"];
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CategoryReference, _impl_.exclude_ids_)}},
    // string category_id = 1 [json_name = "categoryId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CategoryReference, _impl_.category_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string category_id = 1 [json_name = "categoryId"];
    {PROTOBUF_FIELD_OFFSET(CategoryReference, _impl_.category_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string exclude_ids = 2 [json_name = "excludeIds"];
    {PROTOBUF_FIELD_OFFSET(CategoryReference, _impl_.exclude_ids_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\44\13\13\0\0\0\0\0"
    "dnd5e.api.v1alpha1.CategoryReference"
    "category_id"
    "exclude_ids"
  }},
};
PROTOBUF_NOINLINE void CategoryReference::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.CategoryReference)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.exclude_ids_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.category_id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CategoryReference::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CategoryReference& this_ = static_cast<const CategoryReference&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CategoryReference::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CategoryReference& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.CategoryReference)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string category_id = 1 [json_name = "categoryId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_category_id().empty()) {
      const ::std::string& _s = this_._internal_category_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.CategoryReference.category_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // repeated string exclude_ids = 2 [json_name = "excludeIds"];
  for (int i = 0, n = this_._internal_exclude_ids_size(); i < n; ++i) {
    const auto& s = this_._internal_exclude_ids().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.CategoryReference.exclude_ids");
    target = stream->WriteString(2, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.CategoryReference)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CategoryReference::ByteSizeLong(const MessageLite& base) {
  const CategoryReference& this_ = static_cast<const CategoryReference&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CategoryReference::ByteSizeLong() const {
  const CategoryReference& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.CategoryReference)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string exclude_ids = 2 [json_name = "excludeIds"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_exclude_ids().size());
      for (int i = 0, n = this_._internal_exclude_ids().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_exclude_ids().Get(i));
      }
    }
  }
   {
    // string category_id = 1 [json_name = "categoryId"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_category_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_category_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CategoryReference::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CategoryReference*>(&to_msg);
  auto& from = static_cast<const CategoryReference&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.CategoryReference)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_exclude_ids()->MergeFrom(from._internal_exclude_ids());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!from._internal_category_id().empty()) {
      _this->_internal_set_category_id(from._internal_category_id());
    } else {
      if (_this->_impl_.category_id_.IsDefault()) {
        _this->_internal_set_category_id("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CategoryReference::CopyFrom(const CategoryReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.CategoryReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CategoryReference::InternalSwap(CategoryReference* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.exclude_ids_.InternalSwap(&other->_impl_.exclude_ids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_id_, &other->_impl_.category_id_, arena);
}

::google::protobuf::Metadata CategoryReference::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ChoiceOption::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceOption, _impl_._oneof_case_);
};

void ChoiceOption::set_allocated_item(::dnd5e::api::v1alpha1::ItemReference* PROTOBUF_NULLABLE item) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_option_type();
  if (item) {
    ::google::protobuf::Arena* submessage_arena = item->GetArena();
    if (message_arena != submessage_arena) {
      item = ::google::protobuf::internal::GetOwnedMessage(message_arena, item, submessage_arena);
    }
    set_has_item();
    _impl_.option_type_.item_ = item;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.ChoiceOption.item)
}
void ChoiceOption::set_allocated_counted_item(::dnd5e::api::v1alpha1::CountedItemReference* PROTOBUF_NULLABLE counted_item) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_option_type();
  if (counted_item) {
    ::google::protobuf::Arena* submessage_arena = counted_item->GetArena();
    if (message_arena != submessage_arena) {
      counted_item = ::google::protobuf::internal::GetOwnedMessage(message_arena, counted_item, submessage_arena);
    }
    set_has_counted_item();
    _impl_.option_type_.counted_item_ = counted_item;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.ChoiceOption.counted_item)
}
void ChoiceOption::set_allocated_bundle(::dnd5e::api::v1alpha1::ItemBundle* PROTOBUF_NULLABLE bundle) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_option_type();
  if (bundle) {
    ::google::protobuf::Arena* submessage_arena = bundle->GetArena();
    if (message_arena != submessage_arena) {
      bundle = ::google::protobuf::internal::GetOwnedMessage(message_arena, bundle, submessage_arena);
    }
    set_has_bundle();
    _impl_.option_type_.bundle_ = bundle;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.ChoiceOption.bundle)
}
void ChoiceOption::set_allocated_nested_choice(::dnd5e::api::v1alpha1::NestedChoice* PROTOBUF_NULLABLE nested_choice) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_option_type();
  if (nested_choice) {
    ::google::protobuf::Arena* submessage_arena = nested_choice->GetArena();
    if (message_arena != submessage_arena) {
      nested_choice = ::google::protobuf::internal::GetOwnedMessage(message_arena, nested_choice, submessage_arena);
    }
    set_has_nested_choice();
    _impl_.option_type_.nested_choice_ = nested_choice;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.ChoiceOption.nested_choice)
}
ChoiceOption::ChoiceOption(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ChoiceOption_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.ChoiceOption)
}
PROTOBUF_NDEBUG_INLINE ChoiceOption::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::ChoiceOption& from_msg)
      : option_type_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

ChoiceOption::ChoiceOption(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ChoiceOption& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ChoiceOption_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ChoiceOption* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (option_type_case()) {
    case OPTION_TYPE_NOT_SET:
      break;
      case kItem:
        _impl_.option_type_.item_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.option_type_.item_);
        break;
      case kCountedItem:
        _impl_.option_type_.counted_item_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.option_type_.counted_item_);
        break;
      case kBundle:
        _impl_.option_type_.bundle_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.option_type_.bundle_);
        break;
      case kNestedChoice:
        _impl_.option_type_.nested_choice_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.option_type_.nested_choice_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.ChoiceOption)
}
PROTOBUF_NDEBUG_INLINE ChoiceOption::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : option_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void ChoiceOption::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ChoiceOption::~ChoiceOption() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.ChoiceOption)
  SharedDtor(*this);
}
inline void ChoiceOption::SharedDtor(MessageLite& self) {
  ChoiceOption& this_ = static_cast<ChoiceOption&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_option_type()) {
    this_.clear_option_type();
  }
  this_._impl_.~Impl_();
}

void ChoiceOption::clear_option_type() {
// @@protoc_insertion_point(one_of_clear_start:dnd5e.api.v1alpha1.ChoiceOption)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (option_type_case()) {
    case kItem: {
      if (GetArena() == nullptr) {
        delete _impl_.option_type_.item_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.option_type_.item_);
      }
      break;
    }
    case kCountedItem: {
      if (GetArena() == nullptr) {
        delete _impl_.option_type_.counted_item_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.option_type_.counted_item_);
      }
      break;
    }
    case kBundle: {
      if (GetArena() == nullptr) {
        delete _impl_.option_type_.bundle_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.option_type_.bundle_);
      }
      break;
    }
    case kNestedChoice: {
      if (GetArena() == nullptr) {
        delete _impl_.option_type_.nested_choice_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.option_type_.nested_choice_);
      }
      break;
    }
    case OPTION_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = OPTION_TYPE_NOT_SET;
}


inline void* PROTOBUF_NONNULL ChoiceOption::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ChoiceOption(arena);
}
constexpr auto ChoiceOption::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ChoiceOption),
                                            alignof(ChoiceOption));
}
constexpr auto ChoiceOption::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ChoiceOption_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ChoiceOption::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ChoiceOption>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ChoiceOption::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ChoiceOption>(), &ChoiceOption::ByteSizeLong,
              &ChoiceOption::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ChoiceOption, _impl_._cached_size_),
          false,
      },
      &ChoiceOption::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ChoiceOption_class_data_ =
        ChoiceOption::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ChoiceOption::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ChoiceOption_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ChoiceOption_class_data_.tc_table);
  return ChoiceOption_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 4, 4, 0, 2>
ChoiceOption::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ChoiceOption_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ChoiceOption>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.ItemReference item = 1 [json_name = "item"];
    {PROTOBUF_FIELD_OFFSET(ChoiceOption, _impl_.option_type_.item_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.CountedItemReference counted_item = 2 [json_name = "countedItem"];
    {PROTOBUF_FIELD_OFFSET(ChoiceOption, _impl_.option_type_.counted_item_), _Internal::kOneofCaseOffset + 0, 1, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.ItemBundle bundle = 3 [json_name = "bundle"];
    {PROTOBUF_FIELD_OFFSET(ChoiceOption, _impl_.option_type_.bundle_), _Internal::kOneofCaseOffset + 0, 2, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.NestedChoice nested_choice = 4 [json_name = "nestedChoice"];
    {PROTOBUF_FIELD_OFFSET(ChoiceOption, _impl_.option_type_.nested_choice_), _Internal::kOneofCaseOffset + 0, 3, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ItemReference>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CountedItemReference>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ItemBundle>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::NestedChoice>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ChoiceOption::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.ChoiceOption)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_option_type();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ChoiceOption::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ChoiceOption& this_ = static_cast<const ChoiceOption&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ChoiceOption::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ChoiceOption& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.ChoiceOption)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.option_type_case()) {
    case kItem: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *this_._impl_.option_type_.item_, this_._impl_.option_type_.item_->GetCachedSize(), target,
          stream);
      break;
    }
    case kCountedItem: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *this_._impl_.option_type_.counted_item_, this_._impl_.option_type_.counted_item_->GetCachedSize(), target,
          stream);
      break;
    }
    case kBundle: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *this_._impl_.option_type_.bundle_, this_._impl_.option_type_.bundle_->GetCachedSize(), target,
          stream);
      break;
    }
    case kNestedChoice: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *this_._impl_.option_type_.nested_choice_, this_._impl_.option_type_.nested_choice_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.ChoiceOption)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ChoiceOption::ByteSizeLong(const MessageLite& base) {
  const ChoiceOption& this_ = static_cast<const ChoiceOption&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ChoiceOption::ByteSizeLong() const {
  const ChoiceOption& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.ChoiceOption)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  switch (this_.option_type_case()) {
    // .dnd5e.api.v1alpha1.ItemReference item = 1 [json_name = "item"];
    case kItem: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.option_type_.item_);
      break;
    }
    // .dnd5e.api.v1alpha1.CountedItemReference counted_item = 2 [json_name = "countedItem"];
    case kCountedItem: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.option_type_.counted_item_);
      break;
    }
    // .dnd5e.api.v1alpha1.ItemBundle bundle = 3 [json_name = "bundle"];
    case kBundle: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.option_type_.bundle_);
      break;
    }
    // .dnd5e.api.v1alpha1.NestedChoice nested_choice = 4 [json_name = "nestedChoice"];
    case kNestedChoice: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.option_type_.nested_choice_);
      break;
    }
    case OPTION_TYPE_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ChoiceOption::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ChoiceOption*>(&to_msg);
  auto& from = static_cast<const ChoiceOption&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.ChoiceOption)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_option_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kItem: {
        if (oneof_needs_init) {
          _this->_impl_.option_type_.item_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.option_type_.item_);
        } else {
          _this->_impl_.option_type_.item_->MergeFrom(*from._impl_.option_type_.item_);
        }
        break;
      }
      case kCountedItem: {
        if (oneof_needs_init) {
          _this->_impl_.option_type_.counted_item_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.option_type_.counted_item_);
        } else {
          _this->_impl_.option_type_.counted_item_->MergeFrom(*from._impl_.option_type_.counted_item_);
        }
        break;
      }
      case kBundle: {
        if (oneof_needs_init) {
          _this->_impl_.option_type_.bundle_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.option_type_.bundle_);
        } else {
          _this->_impl_.option_type_.bundle_->MergeFrom(*from._impl_.option_type_.bundle_);
        }
        break;
      }
      case kNestedChoice: {
        if (oneof_needs_init) {
          _this->_impl_.option_type_.nested_choice_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.option_type_.nested_choice_);
        } else {
          _this->_impl_.option_type_.nested_choice_->MergeFrom(*from._impl_.option_type_.nested_choice_);
        }
        break;
      }
      case OPTION_TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChoiceOption::CopyFrom(const ChoiceOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.ChoiceOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ChoiceOption::InternalSwap(ChoiceOption* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.option_type_, other->_impl_.option_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ChoiceOption::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ItemReference::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ItemReference>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ItemReference, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ItemReference, _impl_._oneof_case_);
};

ItemReference::ItemReference(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ItemReference_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.ItemReference)
}
PROTOBUF_NDEBUG_INLINE ItemReference::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::ItemReference& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_),
        item_{},
        _oneof_case_{from._oneof_case_[0]} {}

ItemReference::ItemReference(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ItemReference& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ItemReference_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ItemReference* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (item_case()) {
    case ITEM_NOT_SET:
      break;
      case kWeapon:
        _impl_.item_.weapon_ = from._impl_.item_.weapon_;
        break;
      case kArmor:
        _impl_.item_.armor_ = from._impl_.item_.armor_;
        break;
      case kTool:
        _impl_.item_.tool_ = from._impl_.item_.tool_;
        break;
      case kPack:
        _impl_.item_.pack_ = from._impl_.item_.pack_;
        break;
      case kAmmunition:
        _impl_.item_.ammunition_ = from._impl_.item_.ammunition_;
        break;
      case kOtherItemId:
        new (&_impl_.item_.other_item_id_) decltype(_impl_.item_.other_item_id_){arena, from._impl_.item_.other_item_id_};
        break;
  }

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.ItemReference)
}
PROTOBUF_NDEBUG_INLINE ItemReference::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        name_(arena),
        item_{},
        _oneof_case_{} {}

inline void ItemReference::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ItemReference::~ItemReference() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.ItemReference)
  SharedDtor(*this);
}
inline void ItemReference::SharedDtor(MessageLite& self) {
  ItemReference& this_ = static_cast<ItemReference&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  if (this_.has_item()) {
    this_.clear_item();
  }
  this_._impl_.~Impl_();
}

void ItemReference::clear_item() {
// @@protoc_insertion_point(one_of_clear_start:dnd5e.api.v1alpha1.ItemReference)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (item_case()) {
    case kWeapon: {
      // No need to clear
      break;
    }
    case kArmor: {
      // No need to clear
      break;
    }
    case kTool: {
      // No need to clear
      break;
    }
    case kPack: {
      // No need to clear
      break;
    }
    case kAmmunition: {
      // No need to clear
      break;
    }
    case kOtherItemId: {
      _impl_.item_.other_item_id_.Destroy();
      break;
    }
    case ITEM_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = ITEM_NOT_SET;
}


inline void* PROTOBUF_NONNULL ItemReference::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ItemReference(arena);
}
constexpr auto ItemReference::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ItemReference),
                                            alignof(ItemReference));
}
constexpr auto ItemReference::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ItemReference_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ItemReference::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ItemReference>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ItemReference::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ItemReference>(), &ItemReference::ByteSizeLong,
              &ItemReference::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ItemReference, _impl_._cached_size_),
          false,
      },
      &ItemReference::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ItemReference_class_data_ =
        ItemReference::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ItemReference::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ItemReference_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ItemReference_class_data_.tc_table);
  return ItemReference_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 7, 0, 58, 2>
ItemReference::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ItemReference, _impl_._has_bits_),
    0, // no _extensions_
    7, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ItemReference_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ItemReference>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string name = 7 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {58, 0, 0, PROTOBUF_FIELD_OFFSET(ItemReference, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.Weapon weapon = 1 [json_name = "weapon"];
    {PROTOBUF_FIELD_OFFSET(ItemReference, _impl_.item_.weapon_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.Armor armor = 2 [json_name = "armor"];
    {PROTOBUF_FIELD_OFFSET(ItemReference, _impl_.item_.armor_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.Tool tool = 3 [json_name = "tool"];
    {PROTOBUF_FIELD_OFFSET(ItemReference, _impl_.item_.tool_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.Pack pack = 4 [json_name = "pack"];
    {PROTOBUF_FIELD_OFFSET(ItemReference, _impl_.item_.pack_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.Ammunition ammunition = 5 [json_name = "ammunition"];
    {PROTOBUF_FIELD_OFFSET(ItemReference, _impl_.item_.ammunition_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
    // string other_item_id = 6 [json_name = "otherItemId"];
    {PROTOBUF_FIELD_OFFSET(ItemReference, _impl_.item_.other_item_id_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 7 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(ItemReference, _impl_.name_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\0\0\0\0\0\15\4"
    "dnd5e.api.v1alpha1.ItemReference"
    "other_item_id"
    "name"
  }},
};
PROTOBUF_NOINLINE void ItemReference::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.ItemReference)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  clear_item();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ItemReference::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ItemReference& this_ = static_cast<const ItemReference&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ItemReference::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ItemReference& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.ItemReference)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.item_case()) {
    case kWeapon: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_weapon(), target);
      break;
    }
    case kArmor: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_armor(), target);
      break;
    }
    case kTool: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_tool(), target);
      break;
    }
    case kPack: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          4, this_._internal_pack(), target);
      break;
    }
    case kAmmunition: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          5, this_._internal_ammunition(), target);
      break;
    }
    case kOtherItemId: {
      const ::std::string& _s = this_._internal_other_item_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.ItemReference.other_item_id");
      target = stream->WriteStringMaybeAliased(6, _s, target);
      break;
    }
    default:
      break;
  }
  // string name = 7 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.ItemReference.name");
      target = stream->WriteStringMaybeAliased(7, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.ItemReference)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ItemReference::ByteSizeLong(const MessageLite& base) {
  const ItemReference& this_ = static_cast<const ItemReference&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ItemReference::ByteSizeLong() const {
  const ItemReference& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.ItemReference)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string name = 7 [json_name = "name"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
  }
  switch (this_.item_case()) {
    // .dnd5e.api.v1alpha1.Weapon weapon = 1 [json_name = "weapon"];
    case kWeapon: {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_weapon());
      break;
    }
    // .dnd5e.api.v1alpha1.Armor armor = 2 [json_name = "armor"];
    case kArmor: {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_armor());
      break;
    }
    // .dnd5e.api.v1alpha1.Tool tool = 3 [json_name = "tool"];
    case kTool: {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_tool());
      break;
    }
    // .dnd5e.api.v1alpha1.Pack pack = 4 [json_name = "pack"];
    case kPack: {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_pack());
      break;
    }
    // .dnd5e.api.v1alpha1.Ammunition ammunition = 5 [json_name = "ammunition"];
    case kAmmunition: {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_ammunition());
      break;
    }
    // string other_item_id = 6 [json_name = "otherItemId"];
    case kOtherItemId: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_other_item_id());
      break;
    }
    case ITEM_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ItemReference::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ItemReference*>(&to_msg);
  auto& from = static_cast<const ItemReference&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.ItemReference)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!from._internal_name().empty()) {
      _this->_internal_set_name(from._internal_name());
    } else {
      if (_this->_impl_.name_.IsDefault()) {
        _this->_internal_set_name("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_item();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kWeapon: {
        _this->_impl_.item_.weapon_ = from._impl_.item_.weapon_;
        break;
      }
      case kArmor: {
        _this->_impl_.item_.armor_ = from._impl_.item_.armor_;
        break;
      }
      case kTool: {
        _this->_impl_.item_.tool_ = from._impl_.item_.tool_;
        break;
      }
      case kPack: {
        _this->_impl_.item_.pack_ = from._impl_.item_.pack_;
        break;
      }
      case kAmmunition: {
        _this->_impl_.item_.ammunition_ = from._impl_.item_.ammunition_;
        break;
      }
      case kOtherItemId: {
        if (oneof_needs_init) {
          _this->_impl_.item_.other_item_id_.InitDefault();
        }
        _this->_impl_.item_.other_item_id_.Set(from._internal_other_item_id(), arena);
        break;
      }
      case ITEM_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ItemReference::CopyFrom(const ItemReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.ItemReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ItemReference::InternalSwap(ItemReference* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  swap(_impl_.item_, other->_impl_.item_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ItemReference::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CountedItemReference::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CountedItemReference>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CountedItemReference, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::CountedItemReference, _impl_._oneof_case_);
};

CountedItemReference::CountedItemReference(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CountedItemReference_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.CountedItemReference)
}
PROTOBUF_NDEBUG_INLINE CountedItemReference::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::CountedItemReference& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_),
        item_{},
        _oneof_case_{from._oneof_case_[0]} {}

CountedItemReference::CountedItemReference(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CountedItemReference& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CountedItemReference_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CountedItemReference* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.quantity_ = from._impl_.quantity_;
  switch (item_case()) {
    case ITEM_NOT_SET:
      break;
      case kWeapon:
        _impl_.item_.weapon_ = from._impl_.item_.weapon_;
        break;
      case kArmor:
        _impl_.item_.armor_ = from._impl_.item_.armor_;
        break;
      case kTool:
        _impl_.item_.tool_ = from._impl_.item_.tool_;
        break;
      case kPack:
        _impl_.item_.pack_ = from._impl_.item_.pack_;
        break;
      case kAmmunition:
        _impl_.item_.ammunition_ = from._impl_.item_.ammunition_;
        break;
      case kOtherItemId:
        new (&_impl_.item_.other_item_id_) decltype(_impl_.item_.other_item_id_){arena, from._impl_.item_.other_item_id_};
        break;
  }

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.CountedItemReference)
}
PROTOBUF_NDEBUG_INLINE CountedItemReference::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        name_(arena),
        item_{},
        _oneof_case_{} {}

inline void CountedItemReference::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.quantity_ = {};
}
CountedItemReference::~CountedItemReference() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.CountedItemReference)
  SharedDtor(*this);
}
inline void CountedItemReference::SharedDtor(MessageLite& self) {
  CountedItemReference& this_ = static_cast<CountedItemReference&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  if (this_.has_item()) {
    this_.clear_item();
  }
  this_._impl_.~Impl_();
}

void CountedItemReference::clear_item() {
// @@protoc_insertion_point(one_of_clear_start:dnd5e.api.v1alpha1.CountedItemReference)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (item_case()) {
    case kWeapon: {
      // No need to clear
      break;
    }
    case kArmor: {
      // No need to clear
      break;
    }
    case kTool: {
      // No need to clear
      break;
    }
    case kPack: {
      // No need to clear
      break;
    }
    case kAmmunition: {
      // No need to clear
      break;
    }
    case kOtherItemId: {
      _impl_.item_.other_item_id_.Destroy();
      break;
    }
    case ITEM_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = ITEM_NOT_SET;
}


inline void* PROTOBUF_NONNULL CountedItemReference::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CountedItemReference(arena);
}
constexpr auto CountedItemReference::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CountedItemReference),
                                            alignof(CountedItemReference));
}
constexpr auto CountedItemReference::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CountedItemReference_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CountedItemReference::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CountedItemReference>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CountedItemReference::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CountedItemReference>(), &CountedItemReference::ByteSizeLong,
              &CountedItemReference::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CountedItemReference, _impl_._cached_size_),
          false,
      },
      &CountedItemReference::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CountedItemReference_class_data_ =
        CountedItemReference::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CountedItemReference::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CountedItemReference_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CountedItemReference_class_data_.tc_table);
  return CountedItemReference_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 8, 0, 73, 2>
CountedItemReference::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CountedItemReference, _impl_._has_bits_),
    0, // no _extensions_
    8, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CountedItemReference_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CountedItemReference>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 quantity = 8 [json_name = "quantity"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CountedItemReference, _impl_.quantity_), 1>(),
     {64, 1, 0, PROTOBUF_FIELD_OFFSET(CountedItemReference, _impl_.quantity_)}},
    // string name = 7 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {58, 0, 0, PROTOBUF_FIELD_OFFSET(CountedItemReference, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.Weapon weapon = 1 [json_name = "weapon"];
    {PROTOBUF_FIELD_OFFSET(CountedItemReference, _impl_.item_.weapon_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.Armor armor = 2 [json_name = "armor"];
    {PROTOBUF_FIELD_OFFSET(CountedItemReference, _impl_.item_.armor_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.Tool tool = 3 [json_name = "tool"];
    {PROTOBUF_FIELD_OFFSET(CountedItemReference, _impl_.item_.tool_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.Pack pack = 4 [json_name = "pack"];
    {PROTOBUF_FIELD_OFFSET(CountedItemReference, _impl_.item_.pack_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.Ammunition ammunition = 5 [json_name = "ammunition"];
    {PROTOBUF_FIELD_OFFSET(CountedItemReference, _impl_.item_.ammunition_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
    // string other_item_id = 6 [json_name = "otherItemId"];
    {PROTOBUF_FIELD_OFFSET(CountedItemReference, _impl_.item_.other_item_id_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 7 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(CountedItemReference, _impl_.name_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 quantity = 8 [json_name = "quantity"];
    {PROTOBUF_FIELD_OFFSET(CountedItemReference, _impl_.quantity_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\47\0\0\0\0\0\15\4\0\0\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.CountedItemReference"
    "other_item_id"
    "name"
  }},
};
PROTOBUF_NOINLINE void CountedItemReference::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.CountedItemReference)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_.quantity_ = 0;
  clear_item();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CountedItemReference::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CountedItemReference& this_ = static_cast<const CountedItemReference&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CountedItemReference::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CountedItemReference& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.CountedItemReference)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.item_case()) {
    case kWeapon: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_weapon(), target);
      break;
    }
    case kArmor: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_armor(), target);
      break;
    }
    case kTool: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_tool(), target);
      break;
    }
    case kPack: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          4, this_._internal_pack(), target);
      break;
    }
    case kAmmunition: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          5, this_._internal_ammunition(), target);
      break;
    }
    case kOtherItemId: {
      const ::std::string& _s = this_._internal_other_item_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.CountedItemReference.other_item_id");
      target = stream->WriteStringMaybeAliased(6, _s, target);
      break;
    }
    default:
      break;
  }
  // string name = 7 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.CountedItemReference.name");
      target = stream->WriteStringMaybeAliased(7, _s, target);
    }
  }

  // int32 quantity = 8 [json_name = "quantity"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_quantity() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<8>(
              stream, this_._internal_quantity(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.CountedItemReference)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CountedItemReference::ByteSizeLong(const MessageLite& base) {
  const CountedItemReference& this_ = static_cast<const CountedItemReference&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CountedItemReference::ByteSizeLong() const {
  const CountedItemReference& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.CountedItemReference)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string name = 7 [json_name = "name"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // int32 quantity = 8 [json_name = "quantity"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_quantity() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_quantity());
      }
    }
  }
  switch (this_.item_case()) {
    // .dnd5e.api.v1alpha1.Weapon weapon = 1 [json_name = "weapon"];
    case kWeapon: {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_weapon());
      break;
    }
    // .dnd5e.api.v1alpha1.Armor armor = 2 [json_name = "armor"];
    case kArmor: {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_armor());
      break;
    }
    // .dnd5e.api.v1alpha1.Tool tool = 3 [json_name = "tool"];
    case kTool: {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_tool());
      break;
    }
    // .dnd5e.api.v1alpha1.Pack pack = 4 [json_name = "pack"];
    case kPack: {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_pack());
      break;
    }
    // .dnd5e.api.v1alpha1.Ammunition ammunition = 5 [json_name = "ammunition"];
    case kAmmunition: {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_ammunition());
      break;
    }
    // string other_item_id = 6 [json_name = "otherItemId"];
    case kOtherItemId: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_other_item_id());
      break;
    }
    case ITEM_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CountedItemReference::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CountedItemReference*>(&to_msg);
  auto& from = static_cast<const CountedItemReference&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.CountedItemReference)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_quantity() != 0) {
        _this->_impl_.quantity_ = from._impl_.quantity_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_item();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kWeapon: {
        _this->_impl_.item_.weapon_ = from._impl_.item_.weapon_;
        break;
      }
      case kArmor: {
        _this->_impl_.item_.armor_ = from._impl_.item_.armor_;
        break;
      }
      case kTool: {
        _this->_impl_.item_.tool_ = from._impl_.item_.tool_;
        break;
      }
      case kPack: {
        _this->_impl_.item_.pack_ = from._impl_.item_.pack_;
        break;
      }
      case kAmmunition: {
        _this->_impl_.item_.ammunition_ = from._impl_.item_.ammunition_;
        break;
      }
      case kOtherItemId: {
        if (oneof_needs_init) {
          _this->_impl_.item_.other_item_id_.InitDefault();
        }
        _this->_impl_.item_.other_item_id_.Set(from._internal_other_item_id(), arena);
        break;
      }
      case ITEM_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CountedItemReference::CopyFrom(const CountedItemReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.CountedItemReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CountedItemReference::InternalSwap(CountedItemReference* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  swap(_impl_.quantity_, other->_impl_.quantity_);
  swap(_impl_.item_, other->_impl_.item_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata CountedItemReference::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ItemBundle::_Internal {
 public:
};

ItemBundle::ItemBundle(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ItemBundle_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.ItemBundle)
}
PROTOBUF_NDEBUG_INLINE ItemBundle::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::ItemBundle& from_msg)
      : items_{visibility, arena, from.items_},
        _cached_size_{0} {}

ItemBundle::ItemBundle(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ItemBundle& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ItemBundle_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ItemBundle* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.ItemBundle)
}
PROTOBUF_NDEBUG_INLINE ItemBundle::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : items_{visibility, arena},
        _cached_size_{0} {}

inline void ItemBundle::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ItemBundle::~ItemBundle() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.ItemBundle)
  SharedDtor(*this);
}
inline void ItemBundle::SharedDtor(MessageLite& self) {
  ItemBundle& this_ = static_cast<ItemBundle&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ItemBundle::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ItemBundle(arena);
}
constexpr auto ItemBundle::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ItemBundle, _impl_.items_) +
          decltype(ItemBundle::_impl_.items_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ItemBundle), alignof(ItemBundle), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ItemBundle::PlacementNew_,
                                 sizeof(ItemBundle),
                                 alignof(ItemBundle));
  }
}
constexpr auto ItemBundle::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ItemBundle_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ItemBundle::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ItemBundle>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ItemBundle::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ItemBundle>(), &ItemBundle::ByteSizeLong,
              &ItemBundle::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ItemBundle, _impl_._cached_size_),
          false,
      },
      &ItemBundle::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ItemBundle_class_data_ =
        ItemBundle::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ItemBundle::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ItemBundle_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ItemBundle_class_data_.tc_table);
  return ItemBundle_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
ItemBundle::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ItemBundle_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ItemBundle>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dnd5e.api.v1alpha1.BundleItem items = 1 [json_name = "items"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ItemBundle, _impl_.items_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dnd5e.api.v1alpha1.BundleItem items = 1 [json_name = "items"];
    {PROTOBUF_FIELD_OFFSET(ItemBundle, _impl_.items_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::BundleItem>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ItemBundle::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.ItemBundle)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ItemBundle::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ItemBundle& this_ = static_cast<const ItemBundle&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ItemBundle::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ItemBundle& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.ItemBundle)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dnd5e.api.v1alpha1.BundleItem items = 1 [json_name = "items"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_items_size());
       i < n; i++) {
    const auto& repfield = this_._internal_items().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.ItemBundle)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ItemBundle::ByteSizeLong(const MessageLite& base) {
  const ItemBundle& this_ = static_cast<const ItemBundle&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ItemBundle::ByteSizeLong() const {
  const ItemBundle& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.ItemBundle)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.BundleItem items = 1 [json_name = "items"];
    {
      total_size += 1UL * this_._internal_items_size();
      for (const auto& msg : this_._internal_items()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ItemBundle::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ItemBundle*>(&to_msg);
  auto& from = static_cast<const ItemBundle&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.ItemBundle)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_items()->MergeFrom(
      from._internal_items());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ItemBundle::CopyFrom(const ItemBundle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.ItemBundle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ItemBundle::InternalSwap(ItemBundle* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
}

::google::protobuf::Metadata ItemBundle::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BundleItem::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::BundleItem, _impl_._oneof_case_);
};

void BundleItem::set_allocated_concrete_item(::dnd5e::api::v1alpha1::CountedItemReference* PROTOBUF_NULLABLE concrete_item) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_item_type();
  if (concrete_item) {
    ::google::protobuf::Arena* submessage_arena = concrete_item->GetArena();
    if (message_arena != submessage_arena) {
      concrete_item = ::google::protobuf::internal::GetOwnedMessage(message_arena, concrete_item, submessage_arena);
    }
    set_has_concrete_item();
    _impl_.item_type_.concrete_item_ = concrete_item;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.BundleItem.concrete_item)
}
void BundleItem::set_allocated_choice_item(::dnd5e::api::v1alpha1::NestedChoice* PROTOBUF_NULLABLE choice_item) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_item_type();
  if (choice_item) {
    ::google::protobuf::Arena* submessage_arena = choice_item->GetArena();
    if (message_arena != submessage_arena) {
      choice_item = ::google::protobuf::internal::GetOwnedMessage(message_arena, choice_item, submessage_arena);
    }
    set_has_choice_item();
    _impl_.item_type_.choice_item_ = choice_item;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.BundleItem.choice_item)
}
BundleItem::BundleItem(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BundleItem_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.BundleItem)
}
PROTOBUF_NDEBUG_INLINE BundleItem::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::BundleItem& from_msg)
      : item_type_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

BundleItem::BundleItem(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const BundleItem& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BundleItem_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BundleItem* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (item_type_case()) {
    case ITEM_TYPE_NOT_SET:
      break;
      case kConcreteItem:
        _impl_.item_type_.concrete_item_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.item_type_.concrete_item_);
        break;
      case kChoiceItem:
        _impl_.item_type_.choice_item_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.item_type_.choice_item_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.BundleItem)
}
PROTOBUF_NDEBUG_INLINE BundleItem::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : item_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void BundleItem::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BundleItem::~BundleItem() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.BundleItem)
  SharedDtor(*this);
}
inline void BundleItem::SharedDtor(MessageLite& self) {
  BundleItem& this_ = static_cast<BundleItem&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_item_type()) {
    this_.clear_item_type();
  }
  this_._impl_.~Impl_();
}

void BundleItem::clear_item_type() {
// @@protoc_insertion_point(one_of_clear_start:dnd5e.api.v1alpha1.BundleItem)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (item_type_case()) {
    case kConcreteItem: {
      if (GetArena() == nullptr) {
        delete _impl_.item_type_.concrete_item_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.item_type_.concrete_item_);
      }
      break;
    }
    case kChoiceItem: {
      if (GetArena() == nullptr) {
        delete _impl_.item_type_.choice_item_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.item_type_.choice_item_);
      }
      break;
    }
    case ITEM_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = ITEM_TYPE_NOT_SET;
}


inline void* PROTOBUF_NONNULL BundleItem::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) BundleItem(arena);
}
constexpr auto BundleItem::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BundleItem),
                                            alignof(BundleItem));
}
constexpr auto BundleItem::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_BundleItem_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &BundleItem::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<BundleItem>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &BundleItem::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<BundleItem>(), &BundleItem::ByteSizeLong,
              &BundleItem::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(BundleItem, _impl_._cached_size_),
          false,
      },
      &BundleItem::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull BundleItem_class_data_ =
        BundleItem::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
BundleItem::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&BundleItem_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(BundleItem_class_data_.tc_table);
  return BundleItem_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2>
BundleItem::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    BundleItem_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::BundleItem>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.CountedItemReference concrete_item = 1 [json_name = "concreteItem"];
    {PROTOBUF_FIELD_OFFSET(BundleItem, _impl_.item_type_.concrete_item_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.NestedChoice choice_item = 2 [json_name = "choiceItem"];
    {PROTOBUF_FIELD_OFFSET(BundleItem, _impl_.item_type_.choice_item_), _Internal::kOneofCaseOffset + 0, 1, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CountedItemReference>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::NestedChoice>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void BundleItem::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.BundleItem)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_item_type();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL BundleItem::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const BundleItem& this_ = static_cast<const BundleItem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL BundleItem::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const BundleItem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.BundleItem)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.item_type_case()) {
    case kConcreteItem: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *this_._impl_.item_type_.concrete_item_, this_._impl_.item_type_.concrete_item_->GetCachedSize(), target,
          stream);
      break;
    }
    case kChoiceItem: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *this_._impl_.item_type_.choice_item_, this_._impl_.item_type_.choice_item_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.BundleItem)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t BundleItem::ByteSizeLong(const MessageLite& base) {
  const BundleItem& this_ = static_cast<const BundleItem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t BundleItem::ByteSizeLong() const {
  const BundleItem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.BundleItem)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  switch (this_.item_type_case()) {
    // .dnd5e.api.v1alpha1.CountedItemReference concrete_item = 1 [json_name = "concreteItem"];
    case kConcreteItem: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.item_type_.concrete_item_);
      break;
    }
    // .dnd5e.api.v1alpha1.NestedChoice choice_item = 2 [json_name = "choiceItem"];
    case kChoiceItem: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.item_type_.choice_item_);
      break;
    }
    case ITEM_TYPE_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void BundleItem::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BundleItem*>(&to_msg);
  auto& from = static_cast<const BundleItem&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.BundleItem)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_item_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kConcreteItem: {
        if (oneof_needs_init) {
          _this->_impl_.item_type_.concrete_item_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.item_type_.concrete_item_);
        } else {
          _this->_impl_.item_type_.concrete_item_->MergeFrom(*from._impl_.item_type_.concrete_item_);
        }
        break;
      }
      case kChoiceItem: {
        if (oneof_needs_init) {
          _this->_impl_.item_type_.choice_item_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.item_type_.choice_item_);
        } else {
          _this->_impl_.item_type_.choice_item_->MergeFrom(*from._impl_.item_type_.choice_item_);
        }
        break;
      }
      case ITEM_TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BundleItem::CopyFrom(const BundleItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.BundleItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BundleItem::InternalSwap(BundleItem* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.item_type_, other->_impl_.item_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata BundleItem::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NestedChoice::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<NestedChoice>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NestedChoice, _impl_._has_bits_);
};

NestedChoice::NestedChoice(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NestedChoice_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.NestedChoice)
}
PROTOBUF_NDEBUG_INLINE NestedChoice::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::NestedChoice& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

NestedChoice::NestedChoice(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const NestedChoice& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NestedChoice_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NestedChoice* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.choice_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.choice_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.NestedChoice)
}
PROTOBUF_NDEBUG_INLINE NestedChoice::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void NestedChoice::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.choice_ = {};
}
NestedChoice::~NestedChoice() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.NestedChoice)
  SharedDtor(*this);
}
inline void NestedChoice::SharedDtor(MessageLite& self) {
  NestedChoice& this_ = static_cast<NestedChoice&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.choice_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL NestedChoice::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) NestedChoice(arena);
}
constexpr auto NestedChoice::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(NestedChoice),
                                            alignof(NestedChoice));
}
constexpr auto NestedChoice::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_NestedChoice_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &NestedChoice::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<NestedChoice>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &NestedChoice::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<NestedChoice>(), &NestedChoice::ByteSizeLong,
              &NestedChoice::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(NestedChoice, _impl_._cached_size_),
          false,
      },
      &NestedChoice::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull NestedChoice_class_data_ =
        NestedChoice::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
NestedChoice::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&NestedChoice_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(NestedChoice_class_data_.tc_table);
  return NestedChoice_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
NestedChoice::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NestedChoice, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    NestedChoice_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::NestedChoice>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .dnd5e.api.v1alpha1.Choice choice = 1 [json_name = "choice"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NestedChoice, _impl_.choice_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.Choice choice = 1 [json_name = "choice"];
    {PROTOBUF_FIELD_OFFSET(NestedChoice, _impl_.choice_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::Choice>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void NestedChoice::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.NestedChoice)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.choice_ != nullptr);
    _impl_.choice_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL NestedChoice::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const NestedChoice& this_ = static_cast<const NestedChoice&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL NestedChoice::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const NestedChoice& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.NestedChoice)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.Choice choice = 1 [json_name = "choice"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.choice_, this_._impl_.choice_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.NestedChoice)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t NestedChoice::ByteSizeLong(const MessageLite& base) {
  const NestedChoice& this_ = static_cast<const NestedChoice&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t NestedChoice::ByteSizeLong() const {
  const NestedChoice& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.NestedChoice)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .dnd5e.api.v1alpha1.Choice choice = 1 [json_name = "choice"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.choice_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void NestedChoice::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NestedChoice*>(&to_msg);
  auto& from = static_cast<const NestedChoice&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.NestedChoice)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(from._impl_.choice_ != nullptr);
    if (_this->_impl_.choice_ == nullptr) {
      _this->_impl_.choice_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.choice_);
    } else {
      _this->_impl_.choice_->MergeFrom(*from._impl_.choice_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NestedChoice::CopyFrom(const NestedChoice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.NestedChoice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NestedChoice::InternalSwap(NestedChoice* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.choice_, other->_impl_.choice_);
}

::google::protobuf::Metadata NestedChoice::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ClassInfo::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ClassInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_._has_bits_);
};

ClassInfo::ClassInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ClassInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.ClassInfo)
}
PROTOBUF_NDEBUG_INLINE ClassInfo::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::ClassInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        armor_proficiency_categories_{visibility, arena, from.armor_proficiency_categories_},
        _armor_proficiency_categories_cached_byte_size_{0},
        weapon_proficiency_categories_{visibility, arena, from.weapon_proficiency_categories_},
        _weapon_proficiency_categories_cached_byte_size_{0},
        tool_proficiencies_{visibility, arena, from.tool_proficiencies_},
        _tool_proficiencies_cached_byte_size_{0},
        saving_throw_proficiencies_{visibility, arena, from.saving_throw_proficiencies_},
        _saving_throw_proficiencies_cached_byte_size_{0},
        available_skills_{visibility, arena, from.available_skills_},
        _available_skills_cached_byte_size_{0},
        equipment_choices_{visibility, arena, from.equipment_choices_},
        level_1_features_{visibility, arena, from.level_1_features_},
        choices_{visibility, arena, from.choices_},
        subclasses_{visibility, arena, from.subclasses_},
        proficiencies_{visibility, arena, from.proficiencies_},
        specific_weapon_proficiencies_{visibility, arena, from.specific_weapon_proficiencies_},
        _specific_weapon_proficiencies_cached_byte_size_{0},
        name_(arena, from.name_),
        description_(arena, from.description_) {}

ClassInfo::ClassInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ClassInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ClassInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ClassInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.spellcasting_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.spellcasting_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, class_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, class_id_),
           offsetof(Impl_, skill_choices_count_) -
               offsetof(Impl_, class_id_) +
               sizeof(Impl_::skill_choices_count_));

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.ClassInfo)
}
PROTOBUF_NDEBUG_INLINE ClassInfo::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        armor_proficiency_categories_{visibility, arena},
        _armor_proficiency_categories_cached_byte_size_{0},
        weapon_proficiency_categories_{visibility, arena},
        _weapon_proficiency_categories_cached_byte_size_{0},
        tool_proficiencies_{visibility, arena},
        _tool_proficiencies_cached_byte_size_{0},
        saving_throw_proficiencies_{visibility, arena},
        _saving_throw_proficiencies_cached_byte_size_{0},
        available_skills_{visibility, arena},
        _available_skills_cached_byte_size_{0},
        equipment_choices_{visibility, arena},
        level_1_features_{visibility, arena},
        choices_{visibility, arena},
        subclasses_{visibility, arena},
        proficiencies_{visibility, arena},
        specific_weapon_proficiencies_{visibility, arena},
        _specific_weapon_proficiencies_cached_byte_size_{0},
        name_(arena),
        description_(arena) {}

inline void ClassInfo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, spellcasting_),
           0,
           offsetof(Impl_, skill_choices_count_) -
               offsetof(Impl_, spellcasting_) +
               sizeof(Impl_::skill_choices_count_));
}
ClassInfo::~ClassInfo() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.ClassInfo)
  SharedDtor(*this);
}
inline void ClassInfo::SharedDtor(MessageLite& self) {
  ClassInfo& this_ = static_cast<ClassInfo&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.description_.Destroy();
  delete this_._impl_.spellcasting_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ClassInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ClassInfo(arena);
}
constexpr auto ClassInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.armor_proficiency_categories_) +
          decltype(ClassInfo::_impl_.armor_proficiency_categories_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.weapon_proficiency_categories_) +
          decltype(ClassInfo::_impl_.weapon_proficiency_categories_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.specific_weapon_proficiencies_) +
          decltype(ClassInfo::_impl_.specific_weapon_proficiencies_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.tool_proficiencies_) +
          decltype(ClassInfo::_impl_.tool_proficiencies_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.saving_throw_proficiencies_) +
          decltype(ClassInfo::_impl_.saving_throw_proficiencies_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.proficiencies_) +
          decltype(ClassInfo::_impl_.proficiencies_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.available_skills_) +
          decltype(ClassInfo::_impl_.available_skills_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.equipment_choices_) +
          decltype(ClassInfo::_impl_.equipment_choices_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.level_1_features_) +
          decltype(ClassInfo::_impl_.level_1_features_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.choices_) +
          decltype(ClassInfo::_impl_.choices_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.subclasses_) +
          decltype(ClassInfo::_impl_.subclasses_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ClassInfo), alignof(ClassInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ClassInfo::PlacementNew_,
                                 sizeof(ClassInfo),
                                 alignof(ClassInfo));
  }
}
constexpr auto ClassInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ClassInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ClassInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ClassInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ClassInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ClassInfo>(), &ClassInfo::ByteSizeLong,
              &ClassInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_._cached_size_),
          false,
      },
      &ClassInfo::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ClassInfo_class_data_ =
        ClassInfo::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ClassInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ClassInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ClassInfo_class_data_.tc_table);
  return ClassInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 18, 5, 81, 2>
ClassInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_._has_bits_),
    0, // no _extensions_
    28, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4093575168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    18,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ClassInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ClassInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .dnd5e.api.v1alpha1.Class class_id = 1 [json_name = "classId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ClassInfo, _impl_.class_id_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.class_id_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.name_)}},
    // string description = 3 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.description_)}},
    // int32 hit_die = 4 [json_name = "hitDie"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ClassInfo, _impl_.hit_die_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.hit_die_)}},
    // .dnd5e.api.v1alpha1.Ability primary_ability = 5 [json_name = "primaryAbility"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ClassInfo, _impl_.primary_ability_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.primary_ability_)}},
    // repeated .dnd5e.api.v1alpha1.ArmorProficiencyCategory armor_proficiency_categories = 6 [json_name = "armorProficiencyCategories"];
    {::_pbi::TcParser::FastV32P1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.armor_proficiency_categories_)}},
    // repeated .dnd5e.api.v1alpha1.WeaponProficiencyCategory weapon_proficiency_categories = 7 [json_name = "weaponProficiencyCategories"];
    {::_pbi::TcParser::FastV32P1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.weapon_proficiency_categories_)}},
    // repeated .dnd5e.api.v1alpha1.Tool tool_proficiencies = 8 [json_name = "toolProficiencies"];
    {::_pbi::TcParser::FastV32P1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.tool_proficiencies_)}},
    // repeated .dnd5e.api.v1alpha1.Ability saving_throw_proficiencies = 9 [json_name = "savingThrowProficiencies"];
    {::_pbi::TcParser::FastV32P1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.saving_throw_proficiencies_)}},
    // int32 skill_choices_count = 10 [json_name = "skillChoicesCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ClassInfo, _impl_.skill_choices_count_), 6>(),
     {80, 6, 0, PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.skill_choices_count_)}},
    // repeated .dnd5e.api.v1alpha1.Skill available_skills = 11 [json_name = "availableSkills"];
    {::_pbi::TcParser::FastV32P1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.available_skills_)}},
    // repeated .dnd5e.api.v1alpha1.Choice equipment_choices = 12 [json_name = "equipmentChoices"];
    {::_pbi::TcParser::FastMtR1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.equipment_choices_)}},
    // repeated .dnd5e.api.v1alpha1.FeatureInfo level_1_features = 13 [json_name = "level1Features"];
    {::_pbi::TcParser::FastMtR1,
     {106, 63, 1, PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.level_1_features_)}},
    // .dnd5e.api.v1alpha1.SpellcastingInfo spellcasting = 14 [json_name = "spellcasting"];
    {::_pbi::TcParser::FastMtS1,
     {114, 2, 2, PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.spellcasting_)}},
    // repeated .dnd5e.api.v1alpha1.Choice choices = 15 [json_name = "choices"];
    {::_pbi::TcParser::FastMtR1,
     {122, 63, 3, PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.choices_)}},
    // repeated .dnd5e.api.v1alpha1.SubclassInfo subclasses = 16 [json_name = "subclasses"];
    {::_pbi::TcParser::FastMtR2,
     {386, 63, 4, PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.subclasses_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string proficiencies = 27 [json_name = "proficiencies", deprecated = true];
    {::_pbi::TcParser::FastUR2,
     {474, 63, 0, PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.proficiencies_)}},
    // repeated .dnd5e.api.v1alpha1.Weapon specific_weapon_proficiencies = 28 [json_name = "specificWeaponProficiencies"];
    {::_pbi::TcParser::FastV32P2,
     {482, 63, 0, PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.specific_weapon_proficiencies_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.Class class_id = 1 [json_name = "classId"];
    {PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.class_id_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.name_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 3 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.description_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 hit_die = 4 [json_name = "hitDie"];
    {PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.hit_die_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .dnd5e.api.v1alpha1.Ability primary_ability = 5 [json_name = "primaryAbility"];
    {PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.primary_ability_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // repeated .dnd5e.api.v1alpha1.ArmorProficiencyCategory armor_proficiency_categories = 6 [json_name = "armorProficiencyCategories"];
    {PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.armor_proficiency_categories_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated .dnd5e.api.v1alpha1.WeaponProficiencyCategory weapon_proficiency_categories = 7 [json_name = "weaponProficiencyCategories"];
    {PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.weapon_proficiency_categories_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated .dnd5e.api.v1alpha1.Tool tool_proficiencies = 8 [json_name = "toolProficiencies"];
    {PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.tool_proficiencies_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated .dnd5e.api.v1alpha1.Ability saving_throw_proficiencies = 9 [json_name = "savingThrowProficiencies"];
    {PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.saving_throw_proficiencies_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // int32 skill_choices_count = 10 [json_name = "skillChoicesCount"];
    {PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.skill_choices_count_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated .dnd5e.api.v1alpha1.Skill available_skills = 11 [json_name = "availableSkills"];
    {PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.available_skills_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated .dnd5e.api.v1alpha1.Choice equipment_choices = 12 [json_name = "equipmentChoices"];
    {PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.equipment_choices_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dnd5e.api.v1alpha1.FeatureInfo level_1_features = 13 [json_name = "level1Features"];
    {PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.level_1_features_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.SpellcastingInfo spellcasting = 14 [json_name = "spellcasting"];
    {PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.spellcasting_), _Internal::kHasBitsOffset + 2, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dnd5e.api.v1alpha1.Choice choices = 15 [json_name = "choices"];
    {PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.choices_), -1, 3, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dnd5e.api.v1alpha1.SubclassInfo subclasses = 16 [json_name = "subclasses"];
    {PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.subclasses_), -1, 4, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string proficiencies = 27 [json_name = "proficiencies", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.proficiencies_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated .dnd5e.api.v1alpha1.Weapon specific_weapon_proficiencies = 28 [json_name = "specificWeaponProficiencies"];
    {PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.specific_weapon_proficiencies_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::Choice>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::FeatureInfo>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::SpellcastingInfo>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::Choice>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::SubclassInfo>()},
  }},
  {{
    "\34\0\4\13\0\0\0\0\0\0\0\0\0\0\0\0\0\15\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.ClassInfo"
    "name"
    "description"
    "proficiencies"
  }},
};
PROTOBUF_NOINLINE void ClassInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.ClassInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.armor_proficiency_categories_.Clear();
  _impl_.weapon_proficiency_categories_.Clear();
  _impl_.tool_proficiencies_.Clear();
  _impl_.saving_throw_proficiencies_.Clear();
  _impl_.available_skills_.Clear();
  _impl_.equipment_choices_.Clear();
  _impl_.level_1_features_.Clear();
  _impl_.choices_.Clear();
  _impl_.subclasses_.Clear();
  _impl_.proficiencies_.Clear();
  _impl_.specific_weapon_proficiencies_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.spellcasting_ != nullptr);
      _impl_.spellcasting_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000078U) != 0) {
    ::memset(&_impl_.class_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.skill_choices_count_) -
        reinterpret_cast<char*>(&_impl_.class_id_)) + sizeof(_impl_.skill_choices_count_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ClassInfo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ClassInfo& this_ = static_cast<const ClassInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ClassInfo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ClassInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.ClassInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .dnd5e.api.v1alpha1.Class class_id = 1 [json_name = "classId"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_class_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_class_id(), target);
    }
  }

  // string name = 2 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.ClassInfo.name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string description = 3 [json_name = "description"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.ClassInfo.description");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // int32 hit_die = 4 [json_name = "hitDie"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_hit_die() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_hit_die(), target);
    }
  }

  // .dnd5e.api.v1alpha1.Ability primary_ability = 5 [json_name = "primaryAbility"];
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (this_._internal_primary_ability() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          5, this_._internal_primary_ability(), target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.ArmorProficiencyCategory armor_proficiency_categories = 6 [json_name = "armorProficiencyCategories"];
  {
    ::size_t byte_size = this_._impl_._armor_proficiency_categories_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          6, this_._internal_armor_proficiency_categories(), byte_size, target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.WeaponProficiencyCategory weapon_proficiency_categories = 7 [json_name = "weaponProficiencyCategories"];
  {
    ::size_t byte_size = this_._impl_._weapon_proficiency_categories_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          7, this_._internal_weapon_proficiency_categories(), byte_size, target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.Tool tool_proficiencies = 8 [json_name = "toolProficiencies"];
  {
    ::size_t byte_size = this_._impl_._tool_proficiencies_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          8, this_._internal_tool_proficiencies(), byte_size, target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.Ability saving_throw_proficiencies = 9 [json_name = "savingThrowProficiencies"];
  {
    ::size_t byte_size = this_._impl_._saving_throw_proficiencies_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          9, this_._internal_saving_throw_proficiencies(), byte_size, target);
    }
  }

  // int32 skill_choices_count = 10 [json_name = "skillChoicesCount"];
  if ((this_._impl_._has_bits_[0] & 0x00000040U) != 0) {
    if (this_._internal_skill_choices_count() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<10>(
              stream, this_._internal_skill_choices_count(), target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.Skill available_skills = 11 [json_name = "availableSkills"];
  {
    ::size_t byte_size = this_._impl_._available_skills_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          11, this_._internal_available_skills(), byte_size, target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.Choice equipment_choices = 12 [json_name = "equipmentChoices"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_equipment_choices_size());
       i < n; i++) {
    const auto& repfield = this_._internal_equipment_choices().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            12, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .dnd5e.api.v1alpha1.FeatureInfo level_1_features = 13 [json_name = "level1Features"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_level_1_features_size());
       i < n; i++) {
    const auto& repfield = this_._internal_level_1_features().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            13, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.SpellcastingInfo spellcasting = 14 [json_name = "spellcasting"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        14, *this_._impl_.spellcasting_, this_._impl_.spellcasting_->GetCachedSize(), target,
        stream);
  }

  // repeated .dnd5e.api.v1alpha1.Choice choices = 15 [json_name = "choices"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_choices_size());
       i < n; i++) {
    const auto& repfield = this_._internal_choices().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            15, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .dnd5e.api.v1alpha1.SubclassInfo subclasses = 16 [json_name = "subclasses"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_subclasses_size());
       i < n; i++) {
    const auto& repfield = this_._internal_subclasses().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            16, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated string proficiencies = 27 [json_name = "proficiencies", deprecated = true];
  for (int i = 0, n = this_._internal_proficiencies_size(); i < n; ++i) {
    const auto& s = this_._internal_proficiencies().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.ClassInfo.proficiencies");
    target = stream->WriteString(27, s, target);
  }

  // repeated .dnd5e.api.v1alpha1.Weapon specific_weapon_proficiencies = 28 [json_name = "specificWeaponProficiencies"];
  {
    ::size_t byte_size = this_._impl_._specific_weapon_proficiencies_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          28, this_._internal_specific_weapon_proficiencies(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.ClassInfo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ClassInfo::ByteSizeLong(const MessageLite& base) {
  const ClassInfo& this_ = static_cast<const ClassInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ClassInfo::ByteSizeLong() const {
  const ClassInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.ClassInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.ArmorProficiencyCategory armor_proficiency_categories = 6 [json_name = "armorProficiencyCategories"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_armor_proficiency_categories(), 1, this_._impl_._armor_proficiency_categories_cached_byte_size_);
    }
    // repeated .dnd5e.api.v1alpha1.WeaponProficiencyCategory weapon_proficiency_categories = 7 [json_name = "weaponProficiencyCategories"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_weapon_proficiency_categories(), 1, this_._impl_._weapon_proficiency_categories_cached_byte_size_);
    }
    // repeated .dnd5e.api.v1alpha1.Tool tool_proficiencies = 8 [json_name = "toolProficiencies"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_tool_proficiencies(), 1, this_._impl_._tool_proficiencies_cached_byte_size_);
    }
    // repeated .dnd5e.api.v1alpha1.Ability saving_throw_proficiencies = 9 [json_name = "savingThrowProficiencies"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_saving_throw_proficiencies(), 1, this_._impl_._saving_throw_proficiencies_cached_byte_size_);
    }
    // repeated .dnd5e.api.v1alpha1.Skill available_skills = 11 [json_name = "availableSkills"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_available_skills(), 1, this_._impl_._available_skills_cached_byte_size_);
    }
    // repeated .dnd5e.api.v1alpha1.Choice equipment_choices = 12 [json_name = "equipmentChoices"];
    {
      total_size += 1UL * this_._internal_equipment_choices_size();
      for (const auto& msg : this_._internal_equipment_choices()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .dnd5e.api.v1alpha1.FeatureInfo level_1_features = 13 [json_name = "level1Features"];
    {
      total_size += 1UL * this_._internal_level_1_features_size();
      for (const auto& msg : this_._internal_level_1_features()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .dnd5e.api.v1alpha1.Choice choices = 15 [json_name = "choices"];
    {
      total_size += 1UL * this_._internal_choices_size();
      for (const auto& msg : this_._internal_choices()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .dnd5e.api.v1alpha1.SubclassInfo subclasses = 16 [json_name = "subclasses"];
    {
      total_size += 2UL * this_._internal_subclasses_size();
      for (const auto& msg : this_._internal_subclasses()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated string proficiencies = 27 [json_name = "proficiencies", deprecated = true];
    {
      total_size +=
          2 * ::google::protobuf::internal::FromIntSize(this_._internal_proficiencies().size());
      for (int i = 0, n = this_._internal_proficiencies().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_proficiencies().Get(i));
      }
    }
    // repeated .dnd5e.api.v1alpha1.Weapon specific_weapon_proficiencies = 28 [json_name = "specificWeaponProficiencies"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_specific_weapon_proficiencies(), 2, this_._impl_._specific_weapon_proficiencies_cached_byte_size_);
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    // string name = 2 [json_name = "name"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string description = 3 [json_name = "description"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // .dnd5e.api.v1alpha1.SpellcastingInfo spellcasting = 14 [json_name = "spellcasting"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.spellcasting_);
    }
    // .dnd5e.api.v1alpha1.Class class_id = 1 [json_name = "classId"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_class_id() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_class_id());
      }
    }
    // int32 hit_die = 4 [json_name = "hitDie"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_hit_die() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_hit_die());
      }
    }
    // .dnd5e.api.v1alpha1.Ability primary_ability = 5 [json_name = "primaryAbility"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_primary_ability() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_primary_ability());
      }
    }
    // int32 skill_choices_count = 10 [json_name = "skillChoicesCount"];
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (this_._internal_skill_choices_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_skill_choices_count());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ClassInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ClassInfo*>(&to_msg);
  auto& from = static_cast<const ClassInfo&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.ClassInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_armor_proficiency_categories()->MergeFrom(from._internal_armor_proficiency_categories());
  _this->_internal_mutable_weapon_proficiency_categories()->MergeFrom(from._internal_weapon_proficiency_categories());
  _this->_internal_mutable_tool_proficiencies()->MergeFrom(from._internal_tool_proficiencies());
  _this->_internal_mutable_saving_throw_proficiencies()->MergeFrom(from._internal_saving_throw_proficiencies());
  _this->_internal_mutable_available_skills()->MergeFrom(from._internal_available_skills());
  _this->_internal_mutable_equipment_choices()->MergeFrom(
      from._internal_equipment_choices());
  _this->_internal_mutable_level_1_features()->MergeFrom(
      from._internal_level_1_features());
  _this->_internal_mutable_choices()->MergeFrom(
      from._internal_choices());
  _this->_internal_mutable_subclasses()->MergeFrom(
      from._internal_subclasses());
  _this->_internal_mutable_proficiencies()->MergeFrom(from._internal_proficiencies());
  _this->_internal_mutable_specific_weapon_proficiencies()->MergeFrom(from._internal_specific_weapon_proficiencies());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.spellcasting_ != nullptr);
      if (_this->_impl_.spellcasting_ == nullptr) {
        _this->_impl_.spellcasting_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.spellcasting_);
      } else {
        _this->_impl_.spellcasting_->MergeFrom(*from._impl_.spellcasting_);
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_class_id() != 0) {
        _this->_impl_.class_id_ = from._impl_.class_id_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_hit_die() != 0) {
        _this->_impl_.hit_die_ = from._impl_.hit_die_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_primary_ability() != 0) {
        _this->_impl_.primary_ability_ = from._impl_.primary_ability_;
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (from._internal_skill_choices_count() != 0) {
        _this->_impl_.skill_choices_count_ = from._impl_.skill_choices_count_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClassInfo::CopyFrom(const ClassInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.ClassInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ClassInfo::InternalSwap(ClassInfo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.armor_proficiency_categories_.InternalSwap(&other->_impl_.armor_proficiency_categories_);
  _impl_.weapon_proficiency_categories_.InternalSwap(&other->_impl_.weapon_proficiency_categories_);
  _impl_.tool_proficiencies_.InternalSwap(&other->_impl_.tool_proficiencies_);
  _impl_.saving_throw_proficiencies_.InternalSwap(&other->_impl_.saving_throw_proficiencies_);
  _impl_.available_skills_.InternalSwap(&other->_impl_.available_skills_);
  _impl_.equipment_choices_.InternalSwap(&other->_impl_.equipment_choices_);
  _impl_.level_1_features_.InternalSwap(&other->_impl_.level_1_features_);
  _impl_.choices_.InternalSwap(&other->_impl_.choices_);
  _impl_.subclasses_.InternalSwap(&other->_impl_.subclasses_);
  _impl_.proficiencies_.InternalSwap(&other->_impl_.proficiencies_);
  _impl_.specific_weapon_proficiencies_.InternalSwap(&other->_impl_.specific_weapon_proficiencies_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.skill_choices_count_)
      + sizeof(ClassInfo::_impl_.skill_choices_count_)
      - PROTOBUF_FIELD_OFFSET(ClassInfo, _impl_.spellcasting_)>(
          reinterpret_cast<char*>(&_impl_.spellcasting_),
          reinterpret_cast<char*>(&other->_impl_.spellcasting_));
}

::google::protobuf::Metadata ClassInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubclassInfo::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SubclassInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_._has_bits_);
};

SubclassInfo::SubclassInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubclassInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.SubclassInfo)
}
PROTOBUF_NDEBUG_INLINE SubclassInfo::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::SubclassInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        armor_proficiencies_{visibility, arena, from.armor_proficiencies_},
        _armor_proficiencies_cached_byte_size_{0},
        weapon_proficiencies_{visibility, arena, from.weapon_proficiencies_},
        _weapon_proficiencies_cached_byte_size_{0},
        tool_proficiencies_{visibility, arena, from.tool_proficiencies_},
        _tool_proficiencies_cached_byte_size_{0},
        additional_choices_{visibility, arena, from.additional_choices_},
        features_{visibility, arena, from.features_},
        armor_proficiency_strings_{visibility, arena, from.armor_proficiency_strings_},
        weapon_proficiency_strings_{visibility, arena, from.weapon_proficiency_strings_},
        tool_proficiency_strings_{visibility, arena, from.tool_proficiency_strings_},
        name_(arena, from.name_),
        description_(arena, from.description_) {}

SubclassInfo::SubclassInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SubclassInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubclassInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubclassInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, subclass_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, subclass_id_),
           offsetof(Impl_, level_) -
               offsetof(Impl_, subclass_id_) +
               sizeof(Impl_::level_));

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.SubclassInfo)
}
PROTOBUF_NDEBUG_INLINE SubclassInfo::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        armor_proficiencies_{visibility, arena},
        _armor_proficiencies_cached_byte_size_{0},
        weapon_proficiencies_{visibility, arena},
        _weapon_proficiencies_cached_byte_size_{0},
        tool_proficiencies_{visibility, arena},
        _tool_proficiencies_cached_byte_size_{0},
        additional_choices_{visibility, arena},
        features_{visibility, arena},
        armor_proficiency_strings_{visibility, arena},
        weapon_proficiency_strings_{visibility, arena},
        tool_proficiency_strings_{visibility, arena},
        name_(arena),
        description_(arena) {}

inline void SubclassInfo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, subclass_id_),
           0,
           offsetof(Impl_, level_) -
               offsetof(Impl_, subclass_id_) +
               sizeof(Impl_::level_));
}
SubclassInfo::~SubclassInfo() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.SubclassInfo)
  SharedDtor(*this);
}
inline void SubclassInfo::SharedDtor(MessageLite& self) {
  SubclassInfo& this_ = static_cast<SubclassInfo&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SubclassInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubclassInfo(arena);
}
constexpr auto SubclassInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_.armor_proficiencies_) +
          decltype(SubclassInfo::_impl_.armor_proficiencies_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_.weapon_proficiencies_) +
          decltype(SubclassInfo::_impl_.weapon_proficiencies_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_.tool_proficiencies_) +
          decltype(SubclassInfo::_impl_.tool_proficiencies_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_.additional_choices_) +
          decltype(SubclassInfo::_impl_.additional_choices_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_.features_) +
          decltype(SubclassInfo::_impl_.features_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_.armor_proficiency_strings_) +
          decltype(SubclassInfo::_impl_.armor_proficiency_strings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_.weapon_proficiency_strings_) +
          decltype(SubclassInfo::_impl_.weapon_proficiency_strings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_.tool_proficiency_strings_) +
          decltype(SubclassInfo::_impl_.tool_proficiency_strings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SubclassInfo), alignof(SubclassInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SubclassInfo::PlacementNew_,
                                 sizeof(SubclassInfo),
                                 alignof(SubclassInfo));
  }
}
constexpr auto SubclassInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubclassInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubclassInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubclassInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubclassInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SubclassInfo>(), &SubclassInfo::ByteSizeLong,
              &SubclassInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_._cached_size_),
          false,
      },
      &SubclassInfo::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubclassInfo_class_data_ =
        SubclassInfo::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubclassInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubclassInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubclassInfo_class_data_.tc_table);
  return SubclassInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 2, 138, 2>
SubclassInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_._has_bits_),
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SubclassInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::SubclassInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .dnd5e.api.v1alpha1.Subclass subclass_id = 1 [json_name = "subclassId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SubclassInfo, _impl_.subclass_id_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_.subclass_id_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_.name_)}},
    // string description = 3 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_.description_)}},
    // int32 level = 4 [json_name = "level"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SubclassInfo, _impl_.level_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_.level_)}},
    // repeated .dnd5e.api.v1alpha1.Armor armor_proficiencies = 5 [json_name = "armorProficiencies"];
    {::_pbi::TcParser::FastV32P1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_.armor_proficiencies_)}},
    // repeated .dnd5e.api.v1alpha1.Weapon weapon_proficiencies = 6 [json_name = "weaponProficiencies"];
    {::_pbi::TcParser::FastV32P1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_.weapon_proficiencies_)}},
    // repeated .dnd5e.api.v1alpha1.Tool tool_proficiencies = 7 [json_name = "toolProficiencies"];
    {::_pbi::TcParser::FastV32P1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_.tool_proficiencies_)}},
    // repeated .dnd5e.api.v1alpha1.Choice additional_choices = 8 [json_name = "additionalChoices"];
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_.additional_choices_)}},
    // repeated .dnd5e.api.v1alpha1.FeatureInfo features = 9 [json_name = "features"];
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 1, PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_.features_)}},
    // repeated string armor_proficiency_strings = 10 [json_name = "armorProficiencyStrings", deprecated = true];
    {::_pbi::TcParser::FastUR1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_.armor_proficiency_strings_)}},
    // repeated string weapon_proficiency_strings = 11 [json_name = "weaponProficiencyStrings", deprecated = true];
    {::_pbi::TcParser::FastUR1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_.weapon_proficiency_strings_)}},
    // repeated string tool_proficiency_strings = 12 [json_name = "toolProficiencyStrings", deprecated = true];
    {::_pbi::TcParser::FastUR1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_.tool_proficiency_strings_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.Subclass subclass_id = 1 [json_name = "subclassId"];
    {PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_.subclass_id_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_.name_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 3 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_.description_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 level = 4 [json_name = "level"];
    {PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_.level_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated .dnd5e.api.v1alpha1.Armor armor_proficiencies = 5 [json_name = "armorProficiencies"];
    {PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_.armor_proficiencies_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated .dnd5e.api.v1alpha1.Weapon weapon_proficiencies = 6 [json_name = "weaponProficiencies"];
    {PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_.weapon_proficiencies_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated .dnd5e.api.v1alpha1.Tool tool_proficiencies = 7 [json_name = "toolProficiencies"];
    {PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_.tool_proficiencies_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated .dnd5e.api.v1alpha1.Choice additional_choices = 8 [json_name = "additionalChoices"];
    {PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_.additional_choices_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dnd5e.api.v1alpha1.FeatureInfo features = 9 [json_name = "features"];
    {PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_.features_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string armor_proficiency_strings = 10 [json_name = "armorProficiencyStrings", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_.armor_proficiency_strings_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string weapon_proficiency_strings = 11 [json_name = "weaponProficiencyStrings", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_.weapon_proficiency_strings_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string tool_proficiency_strings = 12 [json_name = "toolProficiencyStrings", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_.tool_proficiency_strings_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::Choice>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::FeatureInfo>()},
  }},
  {{
    "\37\0\4\13\0\0\0\0\0\0\31\32\30\0\0\0"
    "dnd5e.api.v1alpha1.SubclassInfo"
    "name"
    "description"
    "armor_proficiency_strings"
    "weapon_proficiency_strings"
    "tool_proficiency_strings"
  }},
};
PROTOBUF_NOINLINE void SubclassInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.SubclassInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.armor_proficiencies_.Clear();
  _impl_.weapon_proficiencies_.Clear();
  _impl_.tool_proficiencies_.Clear();
  _impl_.additional_choices_.Clear();
  _impl_.features_.Clear();
  _impl_.armor_proficiency_strings_.Clear();
  _impl_.weapon_proficiency_strings_.Clear();
  _impl_.tool_proficiency_strings_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000000cU) != 0) {
    ::memset(&_impl_.subclass_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.level_) -
        reinterpret_cast<char*>(&_impl_.subclass_id_)) + sizeof(_impl_.level_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SubclassInfo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SubclassInfo& this_ = static_cast<const SubclassInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SubclassInfo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SubclassInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.SubclassInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .dnd5e.api.v1alpha1.Subclass subclass_id = 1 [json_name = "subclassId"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_subclass_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_subclass_id(), target);
    }
  }

  // string name = 2 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.SubclassInfo.name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string description = 3 [json_name = "description"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.SubclassInfo.description");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // int32 level = 4 [json_name = "level"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_level() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_level(), target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.Armor armor_proficiencies = 5 [json_name = "armorProficiencies"];
  {
    ::size_t byte_size = this_._impl_._armor_proficiencies_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          5, this_._internal_armor_proficiencies(), byte_size, target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.Weapon weapon_proficiencies = 6 [json_name = "weaponProficiencies"];
  {
    ::size_t byte_size = this_._impl_._weapon_proficiencies_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          6, this_._internal_weapon_proficiencies(), byte_size, target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.Tool tool_proficiencies = 7 [json_name = "toolProficiencies"];
  {
    ::size_t byte_size = this_._impl_._tool_proficiencies_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          7, this_._internal_tool_proficiencies(), byte_size, target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.Choice additional_choices = 8 [json_name = "additionalChoices"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_additional_choices_size());
       i < n; i++) {
    const auto& repfield = this_._internal_additional_choices().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            8, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .dnd5e.api.v1alpha1.FeatureInfo features = 9 [json_name = "features"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_features_size());
       i < n; i++) {
    const auto& repfield = this_._internal_features().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            9, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated string armor_proficiency_strings = 10 [json_name = "armorProficiencyStrings", deprecated = true];
  for (int i = 0, n = this_._internal_armor_proficiency_strings_size(); i < n; ++i) {
    const auto& s = this_._internal_armor_proficiency_strings().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.SubclassInfo.armor_proficiency_strings");
    target = stream->WriteString(10, s, target);
  }

  // repeated string weapon_proficiency_strings = 11 [json_name = "weaponProficiencyStrings", deprecated = true];
  for (int i = 0, n = this_._internal_weapon_proficiency_strings_size(); i < n; ++i) {
    const auto& s = this_._internal_weapon_proficiency_strings().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.SubclassInfo.weapon_proficiency_strings");
    target = stream->WriteString(11, s, target);
  }

  // repeated string tool_proficiency_strings = 12 [json_name = "toolProficiencyStrings", deprecated = true];
  for (int i = 0, n = this_._internal_tool_proficiency_strings_size(); i < n; ++i) {
    const auto& s = this_._internal_tool_proficiency_strings().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.SubclassInfo.tool_proficiency_strings");
    target = stream->WriteString(12, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.SubclassInfo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SubclassInfo::ByteSizeLong(const MessageLite& base) {
  const SubclassInfo& this_ = static_cast<const SubclassInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SubclassInfo::ByteSizeLong() const {
  const SubclassInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.SubclassInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.Armor armor_proficiencies = 5 [json_name = "armorProficiencies"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_armor_proficiencies(), 1, this_._impl_._armor_proficiencies_cached_byte_size_);
    }
    // repeated .dnd5e.api.v1alpha1.Weapon weapon_proficiencies = 6 [json_name = "weaponProficiencies"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_weapon_proficiencies(), 1, this_._impl_._weapon_proficiencies_cached_byte_size_);
    }
    // repeated .dnd5e.api.v1alpha1.Tool tool_proficiencies = 7 [json_name = "toolProficiencies"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_tool_proficiencies(), 1, this_._impl_._tool_proficiencies_cached_byte_size_);
    }
    // repeated .dnd5e.api.v1alpha1.Choice additional_choices = 8 [json_name = "additionalChoices"];
    {
      total_size += 1UL * this_._internal_additional_choices_size();
      for (const auto& msg : this_._internal_additional_choices()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .dnd5e.api.v1alpha1.FeatureInfo features = 9 [json_name = "features"];
    {
      total_size += 1UL * this_._internal_features_size();
      for (const auto& msg : this_._internal_features()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated string armor_proficiency_strings = 10 [json_name = "armorProficiencyStrings", deprecated = true];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_armor_proficiency_strings().size());
      for (int i = 0, n = this_._internal_armor_proficiency_strings().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_armor_proficiency_strings().Get(i));
      }
    }
    // repeated string weapon_proficiency_strings = 11 [json_name = "weaponProficiencyStrings", deprecated = true];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_weapon_proficiency_strings().size());
      for (int i = 0, n = this_._internal_weapon_proficiency_strings().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_weapon_proficiency_strings().Get(i));
      }
    }
    // repeated string tool_proficiency_strings = 12 [json_name = "toolProficiencyStrings", deprecated = true];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_tool_proficiency_strings().size());
      for (int i = 0, n = this_._internal_tool_proficiency_strings().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_tool_proficiency_strings().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string name = 2 [json_name = "name"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string description = 3 [json_name = "description"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // .dnd5e.api.v1alpha1.Subclass subclass_id = 1 [json_name = "subclassId"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_subclass_id() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_subclass_id());
      }
    }
    // int32 level = 4 [json_name = "level"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_level() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_level());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SubclassInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubclassInfo*>(&to_msg);
  auto& from = static_cast<const SubclassInfo&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.SubclassInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_armor_proficiencies()->MergeFrom(from._internal_armor_proficiencies());
  _this->_internal_mutable_weapon_proficiencies()->MergeFrom(from._internal_weapon_proficiencies());
  _this->_internal_mutable_tool_proficiencies()->MergeFrom(from._internal_tool_proficiencies());
  _this->_internal_mutable_additional_choices()->MergeFrom(
      from._internal_additional_choices());
  _this->_internal_mutable_features()->MergeFrom(
      from._internal_features());
  _this->_internal_mutable_armor_proficiency_strings()->MergeFrom(from._internal_armor_proficiency_strings());
  _this->_internal_mutable_weapon_proficiency_strings()->MergeFrom(from._internal_weapon_proficiency_strings());
  _this->_internal_mutable_tool_proficiency_strings()->MergeFrom(from._internal_tool_proficiency_strings());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_subclass_id() != 0) {
        _this->_impl_.subclass_id_ = from._impl_.subclass_id_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_level() != 0) {
        _this->_impl_.level_ = from._impl_.level_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubclassInfo::CopyFrom(const SubclassInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.SubclassInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubclassInfo::InternalSwap(SubclassInfo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.armor_proficiencies_.InternalSwap(&other->_impl_.armor_proficiencies_);
  _impl_.weapon_proficiencies_.InternalSwap(&other->_impl_.weapon_proficiencies_);
  _impl_.tool_proficiencies_.InternalSwap(&other->_impl_.tool_proficiencies_);
  _impl_.additional_choices_.InternalSwap(&other->_impl_.additional_choices_);
  _impl_.features_.InternalSwap(&other->_impl_.features_);
  _impl_.armor_proficiency_strings_.InternalSwap(&other->_impl_.armor_proficiency_strings_);
  _impl_.weapon_proficiency_strings_.InternalSwap(&other->_impl_.weapon_proficiency_strings_);
  _impl_.tool_proficiency_strings_.InternalSwap(&other->_impl_.tool_proficiency_strings_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_.level_)
      + sizeof(SubclassInfo::_impl_.level_)
      - PROTOBUF_FIELD_OFFSET(SubclassInfo, _impl_.subclass_id_)>(
          reinterpret_cast<char*>(&_impl_.subclass_id_),
          reinterpret_cast<char*>(&other->_impl_.subclass_id_));
}

::google::protobuf::Metadata SubclassInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SpellcastingInfo::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SpellcastingInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SpellcastingInfo, _impl_._has_bits_);
};

SpellcastingInfo::SpellcastingInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SpellcastingInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.SpellcastingInfo)
}
PROTOBUF_NDEBUG_INLINE SpellcastingInfo::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::SpellcastingInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        spellcasting_ability_(arena, from.spellcasting_ability_),
        spellcasting_focus_(arena, from.spellcasting_focus_) {}

SpellcastingInfo::SpellcastingInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SpellcastingInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SpellcastingInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SpellcastingInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ritual_casting_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, ritual_casting_),
           offsetof(Impl_, spell_slots_level_1_) -
               offsetof(Impl_, ritual_casting_) +
               sizeof(Impl_::spell_slots_level_1_));

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.SpellcastingInfo)
}
PROTOBUF_NDEBUG_INLINE SpellcastingInfo::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        spellcasting_ability_(arena),
        spellcasting_focus_(arena) {}

inline void SpellcastingInfo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ritual_casting_),
           0,
           offsetof(Impl_, spell_slots_level_1_) -
               offsetof(Impl_, ritual_casting_) +
               sizeof(Impl_::spell_slots_level_1_));
}
SpellcastingInfo::~SpellcastingInfo() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.SpellcastingInfo)
  SharedDtor(*this);
}
inline void SpellcastingInfo::SharedDtor(MessageLite& self) {
  SpellcastingInfo& this_ = static_cast<SpellcastingInfo&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.spellcasting_ability_.Destroy();
  this_._impl_.spellcasting_focus_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SpellcastingInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SpellcastingInfo(arena);
}
constexpr auto SpellcastingInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SpellcastingInfo),
                                            alignof(SpellcastingInfo));
}
constexpr auto SpellcastingInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SpellcastingInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SpellcastingInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SpellcastingInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SpellcastingInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SpellcastingInfo>(), &SpellcastingInfo::ByteSizeLong,
              &SpellcastingInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SpellcastingInfo, _impl_._cached_size_),
          false,
      },
      &SpellcastingInfo::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SpellcastingInfo_class_data_ =
        SpellcastingInfo::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SpellcastingInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SpellcastingInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SpellcastingInfo_class_data_.tc_table);
  return SpellcastingInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 82, 2>
SpellcastingInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SpellcastingInfo, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SpellcastingInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::SpellcastingInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string spellcasting_ability = 1 [json_name = "spellcastingAbility"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SpellcastingInfo, _impl_.spellcasting_ability_)}},
    // bool ritual_casting = 2 [json_name = "ritualCasting"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SpellcastingInfo, _impl_.ritual_casting_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(SpellcastingInfo, _impl_.ritual_casting_)}},
    // string spellcasting_focus = 3 [json_name = "spellcastingFocus"];
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(SpellcastingInfo, _impl_.spellcasting_focus_)}},
    // int32 cantrips_known = 4 [json_name = "cantripsKnown"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpellcastingInfo, _impl_.cantrips_known_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(SpellcastingInfo, _impl_.cantrips_known_)}},
    // int32 spells_known = 5 [json_name = "spellsKnown"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpellcastingInfo, _impl_.spells_known_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(SpellcastingInfo, _impl_.spells_known_)}},
    // int32 spell_slots_level_1 = 6 [json_name = "spellSlotsLevel1"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpellcastingInfo, _impl_.spell_slots_level_1_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(SpellcastingInfo, _impl_.spell_slots_level_1_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string spellcasting_ability = 1 [json_name = "spellcastingAbility"];
    {PROTOBUF_FIELD_OFFSET(SpellcastingInfo, _impl_.spellcasting_ability_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool ritual_casting = 2 [json_name = "ritualCasting"];
    {PROTOBUF_FIELD_OFFSET(SpellcastingInfo, _impl_.ritual_casting_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string spellcasting_focus = 3 [json_name = "spellcastingFocus"];
    {PROTOBUF_FIELD_OFFSET(SpellcastingInfo, _impl_.spellcasting_focus_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 cantrips_known = 4 [json_name = "cantripsKnown"];
    {PROTOBUF_FIELD_OFFSET(SpellcastingInfo, _impl_.cantrips_known_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 spells_known = 5 [json_name = "spellsKnown"];
    {PROTOBUF_FIELD_OFFSET(SpellcastingInfo, _impl_.spells_known_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 spell_slots_level_1 = 6 [json_name = "spellSlotsLevel1"];
    {PROTOBUF_FIELD_OFFSET(SpellcastingInfo, _impl_.spell_slots_level_1_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\43\24\0\22\0\0\0\0"
    "dnd5e.api.v1alpha1.SpellcastingInfo"
    "spellcasting_ability"
    "spellcasting_focus"
  }},
};
PROTOBUF_NOINLINE void SpellcastingInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.SpellcastingInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.spellcasting_ability_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.spellcasting_focus_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000003cU) != 0) {
    ::memset(&_impl_.ritual_casting_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.spell_slots_level_1_) -
        reinterpret_cast<char*>(&_impl_.ritual_casting_)) + sizeof(_impl_.spell_slots_level_1_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SpellcastingInfo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SpellcastingInfo& this_ = static_cast<const SpellcastingInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SpellcastingInfo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SpellcastingInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.SpellcastingInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string spellcasting_ability = 1 [json_name = "spellcastingAbility"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_spellcasting_ability().empty()) {
      const ::std::string& _s = this_._internal_spellcasting_ability();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.SpellcastingInfo.spellcasting_ability");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // bool ritual_casting = 2 [json_name = "ritualCasting"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_ritual_casting() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_ritual_casting(), target);
    }
  }

  // string spellcasting_focus = 3 [json_name = "spellcastingFocus"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_spellcasting_focus().empty()) {
      const ::std::string& _s = this_._internal_spellcasting_focus();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.SpellcastingInfo.spellcasting_focus");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // int32 cantrips_known = 4 [json_name = "cantripsKnown"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_cantrips_known() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_cantrips_known(), target);
    }
  }

  // int32 spells_known = 5 [json_name = "spellsKnown"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_spells_known() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
              stream, this_._internal_spells_known(), target);
    }
  }

  // int32 spell_slots_level_1 = 6 [json_name = "spellSlotsLevel1"];
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (this_._internal_spell_slots_level_1() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<6>(
              stream, this_._internal_spell_slots_level_1(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.SpellcastingInfo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SpellcastingInfo::ByteSizeLong(const MessageLite& base) {
  const SpellcastingInfo& this_ = static_cast<const SpellcastingInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SpellcastingInfo::ByteSizeLong() const {
  const SpellcastingInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.SpellcastingInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    // string spellcasting_ability = 1 [json_name = "spellcastingAbility"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_spellcasting_ability().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_spellcasting_ability());
      }
    }
    // string spellcasting_focus = 3 [json_name = "spellcastingFocus"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_spellcasting_focus().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_spellcasting_focus());
      }
    }
    // bool ritual_casting = 2 [json_name = "ritualCasting"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_ritual_casting() != 0) {
        total_size += 2;
      }
    }
    // int32 cantrips_known = 4 [json_name = "cantripsKnown"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_cantrips_known() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_cantrips_known());
      }
    }
    // int32 spells_known = 5 [json_name = "spellsKnown"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_spells_known() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_spells_known());
      }
    }
    // int32 spell_slots_level_1 = 6 [json_name = "spellSlotsLevel1"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_spell_slots_level_1() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_spell_slots_level_1());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SpellcastingInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SpellcastingInfo*>(&to_msg);
  auto& from = static_cast<const SpellcastingInfo&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.SpellcastingInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_spellcasting_ability().empty()) {
        _this->_internal_set_spellcasting_ability(from._internal_spellcasting_ability());
      } else {
        if (_this->_impl_.spellcasting_ability_.IsDefault()) {
          _this->_internal_set_spellcasting_ability("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_spellcasting_focus().empty()) {
        _this->_internal_set_spellcasting_focus(from._internal_spellcasting_focus());
      } else {
        if (_this->_impl_.spellcasting_focus_.IsDefault()) {
          _this->_internal_set_spellcasting_focus("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_ritual_casting() != 0) {
        _this->_impl_.ritual_casting_ = from._impl_.ritual_casting_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_cantrips_known() != 0) {
        _this->_impl_.cantrips_known_ = from._impl_.cantrips_known_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_spells_known() != 0) {
        _this->_impl_.spells_known_ = from._impl_.spells_known_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_spell_slots_level_1() != 0) {
        _this->_impl_.spell_slots_level_1_ = from._impl_.spell_slots_level_1_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SpellcastingInfo::CopyFrom(const SpellcastingInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.SpellcastingInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SpellcastingInfo::InternalSwap(SpellcastingInfo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.spellcasting_ability_, &other->_impl_.spellcasting_ability_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.spellcasting_focus_, &other->_impl_.spellcasting_focus_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpellcastingInfo, _impl_.spell_slots_level_1_)
      + sizeof(SpellcastingInfo::_impl_.spell_slots_level_1_)
      - PROTOBUF_FIELD_OFFSET(SpellcastingInfo, _impl_.ritual_casting_)>(
          reinterpret_cast<char*>(&_impl_.ritual_casting_),
          reinterpret_cast<char*>(&other->_impl_.ritual_casting_));
}

::google::protobuf::Metadata SpellcastingInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BackgroundInfo::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<BackgroundInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_._has_bits_);
};

BackgroundInfo::BackgroundInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BackgroundInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.BackgroundInfo)
}
PROTOBUF_NDEBUG_INLINE BackgroundInfo::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::BackgroundInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        skill_proficiencies_{visibility, arena, from.skill_proficiencies_},
        _skill_proficiencies_cached_byte_size_{0},
        tool_proficiencies_{visibility, arena, from.tool_proficiencies_},
        _tool_proficiencies_cached_byte_size_{0},
        languages_{visibility, arena, from.languages_},
        _languages_cached_byte_size_{0},
        starting_equipment_{visibility, arena, from.starting_equipment_},
        personality_traits_{visibility, arena, from.personality_traits_},
        ideals_{visibility, arena, from.ideals_},
        bonds_{visibility, arena, from.bonds_},
        flaws_{visibility, arena, from.flaws_},
        skill_proficiency_strings_{visibility, arena, from.skill_proficiency_strings_},
        tool_proficiency_strings_{visibility, arena, from.tool_proficiency_strings_},
        name_(arena, from.name_),
        description_(arena, from.description_),
        feature_name_(arena, from.feature_name_),
        feature_description_(arena, from.feature_description_) {}

BackgroundInfo::BackgroundInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const BackgroundInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BackgroundInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BackgroundInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, background_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, background_id_),
           offsetof(Impl_, starting_gold_) -
               offsetof(Impl_, background_id_) +
               sizeof(Impl_::starting_gold_));

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.BackgroundInfo)
}
PROTOBUF_NDEBUG_INLINE BackgroundInfo::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        skill_proficiencies_{visibility, arena},
        _skill_proficiencies_cached_byte_size_{0},
        tool_proficiencies_{visibility, arena},
        _tool_proficiencies_cached_byte_size_{0},
        languages_{visibility, arena},
        _languages_cached_byte_size_{0},
        starting_equipment_{visibility, arena},
        personality_traits_{visibility, arena},
        ideals_{visibility, arena},
        bonds_{visibility, arena},
        flaws_{visibility, arena},
        skill_proficiency_strings_{visibility, arena},
        tool_proficiency_strings_{visibility, arena},
        name_(arena),
        description_(arena),
        feature_name_(arena),
        feature_description_(arena) {}

inline void BackgroundInfo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, background_id_),
           0,
           offsetof(Impl_, starting_gold_) -
               offsetof(Impl_, background_id_) +
               sizeof(Impl_::starting_gold_));
}
BackgroundInfo::~BackgroundInfo() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.BackgroundInfo)
  SharedDtor(*this);
}
inline void BackgroundInfo::SharedDtor(MessageLite& self) {
  BackgroundInfo& this_ = static_cast<BackgroundInfo&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.feature_name_.Destroy();
  this_._impl_.feature_description_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL BackgroundInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) BackgroundInfo(arena);
}
constexpr auto BackgroundInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.skill_proficiencies_) +
          decltype(BackgroundInfo::_impl_.skill_proficiencies_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.tool_proficiencies_) +
          decltype(BackgroundInfo::_impl_.tool_proficiencies_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.languages_) +
          decltype(BackgroundInfo::_impl_.languages_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.starting_equipment_) +
          decltype(BackgroundInfo::_impl_.starting_equipment_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.personality_traits_) +
          decltype(BackgroundInfo::_impl_.personality_traits_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.ideals_) +
          decltype(BackgroundInfo::_impl_.ideals_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.bonds_) +
          decltype(BackgroundInfo::_impl_.bonds_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.flaws_) +
          decltype(BackgroundInfo::_impl_.flaws_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.skill_proficiency_strings_) +
          decltype(BackgroundInfo::_impl_.skill_proficiency_strings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.tool_proficiency_strings_) +
          decltype(BackgroundInfo::_impl_.tool_proficiency_strings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(BackgroundInfo), alignof(BackgroundInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&BackgroundInfo::PlacementNew_,
                                 sizeof(BackgroundInfo),
                                 alignof(BackgroundInfo));
  }
}
constexpr auto BackgroundInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_BackgroundInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &BackgroundInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<BackgroundInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &BackgroundInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<BackgroundInfo>(), &BackgroundInfo::ByteSizeLong,
              &BackgroundInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_._cached_size_),
          false,
      },
      &BackgroundInfo::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull BackgroundInfo_class_data_ =
        BackgroundInfo::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
BackgroundInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&BackgroundInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(BackgroundInfo_class_data_.tc_table);
  return BackgroundInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 17, 1, 187, 2>
BackgroundInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_._has_bits_),
    0, // no _extensions_
    17, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294836224,  // skipmap
    offsetof(decltype(_table_), field_entries),
    17,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    BackgroundInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::BackgroundInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .dnd5e.api.v1alpha1.Background background_id = 1 [json_name = "backgroundId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BackgroundInfo, _impl_.background_id_), 4>(),
     {8, 4, 0, PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.background_id_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.name_)}},
    // string description = 3 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.description_)}},
    // repeated .dnd5e.api.v1alpha1.Skill skill_proficiencies = 4 [json_name = "skillProficiencies"];
    {::_pbi::TcParser::FastV32P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.skill_proficiencies_)}},
    // repeated .dnd5e.api.v1alpha1.Tool tool_proficiencies = 5 [json_name = "toolProficiencies"];
    {::_pbi::TcParser::FastV32P1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.tool_proficiencies_)}},
    // repeated .dnd5e.api.v1alpha1.Language languages = 6 [json_name = "languages"];
    {::_pbi::TcParser::FastV32P1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.languages_)}},
    // int32 additional_languages = 7 [json_name = "additionalLanguages"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BackgroundInfo, _impl_.additional_languages_), 5>(),
     {56, 5, 0, PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.additional_languages_)}},
    // repeated .dnd5e.api.v1alpha1.EquipmentSelection starting_equipment = 8 [json_name = "startingEquipment"];
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.starting_equipment_)}},
    // int32 starting_gold = 9 [json_name = "startingGold"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BackgroundInfo, _impl_.starting_gold_), 6>(),
     {72, 6, 0, PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.starting_gold_)}},
    // string feature_name = 10 [json_name = "featureName"];
    {::_pbi::TcParser::FastUS1,
     {82, 2, 0, PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.feature_name_)}},
    // string feature_description = 11 [json_name = "featureDescription"];
    {::_pbi::TcParser::FastUS1,
     {90, 3, 0, PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.feature_description_)}},
    // repeated string personality_traits = 12 [json_name = "personalityTraits"];
    {::_pbi::TcParser::FastUR1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.personality_traits_)}},
    // repeated string ideals = 13 [json_name = "ideals"];
    {::_pbi::TcParser::FastUR1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.ideals_)}},
    // repeated string bonds = 14 [json_name = "bonds"];
    {::_pbi::TcParser::FastUR1,
     {114, 63, 0, PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.bonds_)}},
    // repeated string flaws = 15 [json_name = "flaws"];
    {::_pbi::TcParser::FastUR1,
     {122, 63, 0, PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.flaws_)}},
    // repeated string skill_proficiency_strings = 16 [json_name = "skillProficiencyStrings", deprecated = true];
    {::_pbi::TcParser::FastUR2,
     {386, 63, 0, PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.skill_proficiency_strings_)}},
    // repeated string tool_proficiency_strings = 17 [json_name = "toolProficiencyStrings", deprecated = true];
    {::_pbi::TcParser::FastUR2,
     {394, 63, 0, PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.tool_proficiency_strings_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.Background background_id = 1 [json_name = "backgroundId"];
    {PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.background_id_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.name_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 3 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.description_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .dnd5e.api.v1alpha1.Skill skill_proficiencies = 4 [json_name = "skillProficiencies"];
    {PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.skill_proficiencies_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated .dnd5e.api.v1alpha1.Tool tool_proficiencies = 5 [json_name = "toolProficiencies"];
    {PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.tool_proficiencies_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated .dnd5e.api.v1alpha1.Language languages = 6 [json_name = "languages"];
    {PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.languages_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // int32 additional_languages = 7 [json_name = "additionalLanguages"];
    {PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.additional_languages_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated .dnd5e.api.v1alpha1.EquipmentSelection starting_equipment = 8 [json_name = "startingEquipment"];
    {PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.starting_equipment_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 starting_gold = 9 [json_name = "startingGold"];
    {PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.starting_gold_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string feature_name = 10 [json_name = "featureName"];
    {PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.feature_name_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string feature_description = 11 [json_name = "featureDescription"];
    {PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.feature_description_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string personality_traits = 12 [json_name = "personalityTraits"];
    {PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.personality_traits_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string ideals = 13 [json_name = "ideals"];
    {PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.ideals_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string bonds = 14 [json_name = "bonds"];
    {PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.bonds_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string flaws = 15 [json_name = "flaws"];
    {PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.flaws_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string skill_proficiency_strings = 16 [json_name = "skillProficiencyStrings", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.skill_proficiency_strings_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string tool_proficiency_strings = 17 [json_name = "toolProficiencyStrings", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.tool_proficiency_strings_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::EquipmentSelection>()},
  }},
  {{
    "\41\0\4\13\0\0\0\0\0\0\14\23\22\6\5\5\31\30\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.BackgroundInfo"
    "name"
    "description"
    "feature_name"
    "feature_description"
    "personality_traits"
    "ideals"
    "bonds"
    "flaws"
    "skill_proficiency_strings"
    "tool_proficiency_strings"
  }},
};
PROTOBUF_NOINLINE void BackgroundInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.BackgroundInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.skill_proficiencies_.Clear();
  _impl_.tool_proficiencies_.Clear();
  _impl_.languages_.Clear();
  _impl_.starting_equipment_.Clear();
  _impl_.personality_traits_.Clear();
  _impl_.ideals_.Clear();
  _impl_.bonds_.Clear();
  _impl_.flaws_.Clear();
  _impl_.skill_proficiency_strings_.Clear();
  _impl_.tool_proficiency_strings_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.feature_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.feature_description_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x00000070U) != 0) {
    ::memset(&_impl_.background_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.starting_gold_) -
        reinterpret_cast<char*>(&_impl_.background_id_)) + sizeof(_impl_.starting_gold_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL BackgroundInfo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const BackgroundInfo& this_ = static_cast<const BackgroundInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL BackgroundInfo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const BackgroundInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.BackgroundInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .dnd5e.api.v1alpha1.Background background_id = 1 [json_name = "backgroundId"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_background_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_background_id(), target);
    }
  }

  // string name = 2 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.BackgroundInfo.name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string description = 3 [json_name = "description"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.BackgroundInfo.description");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.Skill skill_proficiencies = 4 [json_name = "skillProficiencies"];
  {
    ::size_t byte_size = this_._impl_._skill_proficiencies_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          4, this_._internal_skill_proficiencies(), byte_size, target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.Tool tool_proficiencies = 5 [json_name = "toolProficiencies"];
  {
    ::size_t byte_size = this_._impl_._tool_proficiencies_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          5, this_._internal_tool_proficiencies(), byte_size, target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.Language languages = 6 [json_name = "languages"];
  {
    ::size_t byte_size = this_._impl_._languages_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          6, this_._internal_languages(), byte_size, target);
    }
  }

  // int32 additional_languages = 7 [json_name = "additionalLanguages"];
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (this_._internal_additional_languages() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<7>(
              stream, this_._internal_additional_languages(), target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.EquipmentSelection starting_equipment = 8 [json_name = "startingEquipment"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_starting_equipment_size());
       i < n; i++) {
    const auto& repfield = this_._internal_starting_equipment().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            8, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // int32 starting_gold = 9 [json_name = "startingGold"];
  if ((this_._impl_._has_bits_[0] & 0x00000040U) != 0) {
    if (this_._internal_starting_gold() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<9>(
              stream, this_._internal_starting_gold(), target);
    }
  }

  // string feature_name = 10 [json_name = "featureName"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_feature_name().empty()) {
      const ::std::string& _s = this_._internal_feature_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.BackgroundInfo.feature_name");
      target = stream->WriteStringMaybeAliased(10, _s, target);
    }
  }

  // string feature_description = 11 [json_name = "featureDescription"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (!this_._internal_feature_description().empty()) {
      const ::std::string& _s = this_._internal_feature_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.BackgroundInfo.feature_description");
      target = stream->WriteStringMaybeAliased(11, _s, target);
    }
  }

  // repeated string personality_traits = 12 [json_name = "personalityTraits"];
  for (int i = 0, n = this_._internal_personality_traits_size(); i < n; ++i) {
    const auto& s = this_._internal_personality_traits().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.BackgroundInfo.personality_traits");
    target = stream->WriteString(12, s, target);
  }

  // repeated string ideals = 13 [json_name = "ideals"];
  for (int i = 0, n = this_._internal_ideals_size(); i < n; ++i) {
    const auto& s = this_._internal_ideals().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.BackgroundInfo.ideals");
    target = stream->WriteString(13, s, target);
  }

  // repeated string bonds = 14 [json_name = "bonds"];
  for (int i = 0, n = this_._internal_bonds_size(); i < n; ++i) {
    const auto& s = this_._internal_bonds().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.BackgroundInfo.bonds");
    target = stream->WriteString(14, s, target);
  }

  // repeated string flaws = 15 [json_name = "flaws"];
  for (int i = 0, n = this_._internal_flaws_size(); i < n; ++i) {
    const auto& s = this_._internal_flaws().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.BackgroundInfo.flaws");
    target = stream->WriteString(15, s, target);
  }

  // repeated string skill_proficiency_strings = 16 [json_name = "skillProficiencyStrings", deprecated = true];
  for (int i = 0, n = this_._internal_skill_proficiency_strings_size(); i < n; ++i) {
    const auto& s = this_._internal_skill_proficiency_strings().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.BackgroundInfo.skill_proficiency_strings");
    target = stream->WriteString(16, s, target);
  }

  // repeated string tool_proficiency_strings = 17 [json_name = "toolProficiencyStrings", deprecated = true];
  for (int i = 0, n = this_._internal_tool_proficiency_strings_size(); i < n; ++i) {
    const auto& s = this_._internal_tool_proficiency_strings().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.BackgroundInfo.tool_proficiency_strings");
    target = stream->WriteString(17, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.BackgroundInfo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t BackgroundInfo::ByteSizeLong(const MessageLite& base) {
  const BackgroundInfo& this_ = static_cast<const BackgroundInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t BackgroundInfo::ByteSizeLong() const {
  const BackgroundInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.BackgroundInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.Skill skill_proficiencies = 4 [json_name = "skillProficiencies"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_skill_proficiencies(), 1, this_._impl_._skill_proficiencies_cached_byte_size_);
    }
    // repeated .dnd5e.api.v1alpha1.Tool tool_proficiencies = 5 [json_name = "toolProficiencies"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_tool_proficiencies(), 1, this_._impl_._tool_proficiencies_cached_byte_size_);
    }
    // repeated .dnd5e.api.v1alpha1.Language languages = 6 [json_name = "languages"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_languages(), 1, this_._impl_._languages_cached_byte_size_);
    }
    // repeated .dnd5e.api.v1alpha1.EquipmentSelection starting_equipment = 8 [json_name = "startingEquipment"];
    {
      total_size += 1UL * this_._internal_starting_equipment_size();
      for (const auto& msg : this_._internal_starting_equipment()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated string personality_traits = 12 [json_name = "personalityTraits"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_personality_traits().size());
      for (int i = 0, n = this_._internal_personality_traits().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_personality_traits().Get(i));
      }
    }
    // repeated string ideals = 13 [json_name = "ideals"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_ideals().size());
      for (int i = 0, n = this_._internal_ideals().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_ideals().Get(i));
      }
    }
    // repeated string bonds = 14 [json_name = "bonds"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_bonds().size());
      for (int i = 0, n = this_._internal_bonds().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_bonds().Get(i));
      }
    }
    // repeated string flaws = 15 [json_name = "flaws"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_flaws().size());
      for (int i = 0, n = this_._internal_flaws().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_flaws().Get(i));
      }
    }
    // repeated string skill_proficiency_strings = 16 [json_name = "skillProficiencyStrings", deprecated = true];
    {
      total_size +=
          2 * ::google::protobuf::internal::FromIntSize(this_._internal_skill_proficiency_strings().size());
      for (int i = 0, n = this_._internal_skill_proficiency_strings().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_skill_proficiency_strings().Get(i));
      }
    }
    // repeated string tool_proficiency_strings = 17 [json_name = "toolProficiencyStrings", deprecated = true];
    {
      total_size +=
          2 * ::google::protobuf::internal::FromIntSize(this_._internal_tool_proficiency_strings().size());
      for (int i = 0, n = this_._internal_tool_proficiency_strings().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_tool_proficiency_strings().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    // string name = 2 [json_name = "name"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string description = 3 [json_name = "description"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // string feature_name = 10 [json_name = "featureName"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_feature_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_feature_name());
      }
    }
    // string feature_description = 11 [json_name = "featureDescription"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_feature_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_feature_description());
      }
    }
    // .dnd5e.api.v1alpha1.Background background_id = 1 [json_name = "backgroundId"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_background_id() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_background_id());
      }
    }
    // int32 additional_languages = 7 [json_name = "additionalLanguages"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_additional_languages() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_additional_languages());
      }
    }
    // int32 starting_gold = 9 [json_name = "startingGold"];
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (this_._internal_starting_gold() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_starting_gold());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void BackgroundInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BackgroundInfo*>(&to_msg);
  auto& from = static_cast<const BackgroundInfo&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.BackgroundInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_skill_proficiencies()->MergeFrom(from._internal_skill_proficiencies());
  _this->_internal_mutable_tool_proficiencies()->MergeFrom(from._internal_tool_proficiencies());
  _this->_internal_mutable_languages()->MergeFrom(from._internal_languages());
  _this->_internal_mutable_starting_equipment()->MergeFrom(
      from._internal_starting_equipment());
  _this->_internal_mutable_personality_traits()->MergeFrom(from._internal_personality_traits());
  _this->_internal_mutable_ideals()->MergeFrom(from._internal_ideals());
  _this->_internal_mutable_bonds()->MergeFrom(from._internal_bonds());
  _this->_internal_mutable_flaws()->MergeFrom(from._internal_flaws());
  _this->_internal_mutable_skill_proficiency_strings()->MergeFrom(from._internal_skill_proficiency_strings());
  _this->_internal_mutable_tool_proficiency_strings()->MergeFrom(from._internal_tool_proficiency_strings());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_feature_name().empty()) {
        _this->_internal_set_feature_name(from._internal_feature_name());
      } else {
        if (_this->_impl_.feature_name_.IsDefault()) {
          _this->_internal_set_feature_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_feature_description().empty()) {
        _this->_internal_set_feature_description(from._internal_feature_description());
      } else {
        if (_this->_impl_.feature_description_.IsDefault()) {
          _this->_internal_set_feature_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_background_id() != 0) {
        _this->_impl_.background_id_ = from._impl_.background_id_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_additional_languages() != 0) {
        _this->_impl_.additional_languages_ = from._impl_.additional_languages_;
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (from._internal_starting_gold() != 0) {
        _this->_impl_.starting_gold_ = from._impl_.starting_gold_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BackgroundInfo::CopyFrom(const BackgroundInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.BackgroundInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BackgroundInfo::InternalSwap(BackgroundInfo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.skill_proficiencies_.InternalSwap(&other->_impl_.skill_proficiencies_);
  _impl_.tool_proficiencies_.InternalSwap(&other->_impl_.tool_proficiencies_);
  _impl_.languages_.InternalSwap(&other->_impl_.languages_);
  _impl_.starting_equipment_.InternalSwap(&other->_impl_.starting_equipment_);
  _impl_.personality_traits_.InternalSwap(&other->_impl_.personality_traits_);
  _impl_.ideals_.InternalSwap(&other->_impl_.ideals_);
  _impl_.bonds_.InternalSwap(&other->_impl_.bonds_);
  _impl_.flaws_.InternalSwap(&other->_impl_.flaws_);
  _impl_.skill_proficiency_strings_.InternalSwap(&other->_impl_.skill_proficiency_strings_);
  _impl_.tool_proficiency_strings_.InternalSwap(&other->_impl_.tool_proficiency_strings_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.feature_name_, &other->_impl_.feature_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.feature_description_, &other->_impl_.feature_description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.starting_gold_)
      + sizeof(BackgroundInfo::_impl_.starting_gold_)
      - PROTOBUF_FIELD_OFFSET(BackgroundInfo, _impl_.background_id_)>(
          reinterpret_cast<char*>(&_impl_.background_id_),
          reinterpret_cast<char*>(&other->_impl_.background_id_));
}

::google::protobuf::Metadata BackgroundInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FeatureInfo::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<FeatureInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(FeatureInfo, _impl_._has_bits_);
};

FeatureInfo::FeatureInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, FeatureInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.FeatureInfo)
}
PROTOBUF_NDEBUG_INLINE FeatureInfo::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::FeatureInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        choices_{visibility, arena, from.choices_},
        id_(arena, from.id_),
        name_(arena, from.name_),
        description_(arena, from.description_),
        class_name_(arena, from.class_name_) {}

FeatureInfo::FeatureInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const FeatureInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, FeatureInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FeatureInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.spell_selection_ = ((cached_has_bits & 0x00000010U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.spell_selection_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, level_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, level_),
           offsetof(Impl_, has_choices_) -
               offsetof(Impl_, level_) +
               sizeof(Impl_::has_choices_));

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.FeatureInfo)
}
PROTOBUF_NDEBUG_INLINE FeatureInfo::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        choices_{visibility, arena},
        id_(arena),
        name_(arena),
        description_(arena),
        class_name_(arena) {}

inline void FeatureInfo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, spell_selection_),
           0,
           offsetof(Impl_, has_choices_) -
               offsetof(Impl_, spell_selection_) +
               sizeof(Impl_::has_choices_));
}
FeatureInfo::~FeatureInfo() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.FeatureInfo)
  SharedDtor(*this);
}
inline void FeatureInfo::SharedDtor(MessageLite& self) {
  FeatureInfo& this_ = static_cast<FeatureInfo&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.class_name_.Destroy();
  delete this_._impl_.spell_selection_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL FeatureInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) FeatureInfo(arena);
}
constexpr auto FeatureInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(FeatureInfo, _impl_.choices_) +
          decltype(FeatureInfo::_impl_.choices_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(FeatureInfo), alignof(FeatureInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&FeatureInfo::PlacementNew_,
                                 sizeof(FeatureInfo),
                                 alignof(FeatureInfo));
  }
}
constexpr auto FeatureInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_FeatureInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &FeatureInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<FeatureInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &FeatureInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<FeatureInfo>(), &FeatureInfo::ByteSizeLong,
              &FeatureInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(FeatureInfo, _impl_._cached_size_),
          false,
      },
      &FeatureInfo::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull FeatureInfo_class_data_ =
        FeatureInfo::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
FeatureInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&FeatureInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(FeatureInfo_class_data_.tc_table);
  return FeatureInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 2, 74, 2>
FeatureInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FeatureInfo, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    FeatureInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::FeatureInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .dnd5e.api.v1alpha1.SpellSelectionInfo spell_selection = 8 [json_name = "spellSelection"];
    {::_pbi::TcParser::FastMtS1,
     {66, 4, 1, PROTOBUF_FIELD_OFFSET(FeatureInfo, _impl_.spell_selection_)}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(FeatureInfo, _impl_.id_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(FeatureInfo, _impl_.name_)}},
    // string description = 3 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(FeatureInfo, _impl_.description_)}},
    // int32 level = 4 [json_name = "level"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FeatureInfo, _impl_.level_), 5>(),
     {32, 5, 0, PROTOBUF_FIELD_OFFSET(FeatureInfo, _impl_.level_)}},
    // string class_name = 5 [json_name = "className"];
    {::_pbi::TcParser::FastUS1,
     {42, 3, 0, PROTOBUF_FIELD_OFFSET(FeatureInfo, _impl_.class_name_)}},
    // repeated .dnd5e.api.v1alpha1.Choice choices = 6 [json_name = "choices"];
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(FeatureInfo, _impl_.choices_)}},
    // bool has_choices = 7 [json_name = "hasChoices"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(FeatureInfo, _impl_.has_choices_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(FeatureInfo, _impl_.has_choices_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(FeatureInfo, _impl_.id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(FeatureInfo, _impl_.name_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 3 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(FeatureInfo, _impl_.description_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 level = 4 [json_name = "level"];
    {PROTOBUF_FIELD_OFFSET(FeatureInfo, _impl_.level_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string class_name = 5 [json_name = "className"];
    {PROTOBUF_FIELD_OFFSET(FeatureInfo, _impl_.class_name_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .dnd5e.api.v1alpha1.Choice choices = 6 [json_name = "choices"];
    {PROTOBUF_FIELD_OFFSET(FeatureInfo, _impl_.choices_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool has_choices = 7 [json_name = "hasChoices"];
    {PROTOBUF_FIELD_OFFSET(FeatureInfo, _impl_.has_choices_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // .dnd5e.api.v1alpha1.SpellSelectionInfo spell_selection = 8 [json_name = "spellSelection"];
    {PROTOBUF_FIELD_OFFSET(FeatureInfo, _impl_.spell_selection_), _Internal::kHasBitsOffset + 4, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::Choice>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::SpellSelectionInfo>()},
  }},
  {{
    "\36\2\4\13\0\12\0\0\0\0\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.FeatureInfo"
    "id"
    "name"
    "description"
    "class_name"
  }},
};
PROTOBUF_NOINLINE void FeatureInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.FeatureInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.choices_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.class_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(_impl_.spell_selection_ != nullptr);
      _impl_.spell_selection_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000060U) != 0) {
    ::memset(&_impl_.level_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.has_choices_) -
        reinterpret_cast<char*>(&_impl_.level_)) + sizeof(_impl_.has_choices_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL FeatureInfo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const FeatureInfo& this_ = static_cast<const FeatureInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL FeatureInfo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const FeatureInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.FeatureInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1 [json_name = "id"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_id().empty()) {
      const ::std::string& _s = this_._internal_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.FeatureInfo.id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string name = 2 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.FeatureInfo.name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string description = 3 [json_name = "description"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.FeatureInfo.description");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // int32 level = 4 [json_name = "level"];
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (this_._internal_level() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_level(), target);
    }
  }

  // string class_name = 5 [json_name = "className"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (!this_._internal_class_name().empty()) {
      const ::std::string& _s = this_._internal_class_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.FeatureInfo.class_name");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.Choice choices = 6 [json_name = "choices"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_choices_size());
       i < n; i++) {
    const auto& repfield = this_._internal_choices().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            6, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // bool has_choices = 7 [json_name = "hasChoices"];
  if ((this_._impl_._has_bits_[0] & 0x00000040U) != 0) {
    if (this_._internal_has_choices() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          7, this_._internal_has_choices(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.SpellSelectionInfo spell_selection = 8 [json_name = "spellSelection"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *this_._impl_.spell_selection_, this_._impl_.spell_selection_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.FeatureInfo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t FeatureInfo::ByteSizeLong(const MessageLite& base) {
  const FeatureInfo& this_ = static_cast<const FeatureInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t FeatureInfo::ByteSizeLong() const {
  const FeatureInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.FeatureInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.Choice choices = 6 [json_name = "choices"];
    {
      total_size += 1UL * this_._internal_choices_size();
      for (const auto& msg : this_._internal_choices()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    // string id = 1 [json_name = "id"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_id());
      }
    }
    // string name = 2 [json_name = "name"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string description = 3 [json_name = "description"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // string class_name = 5 [json_name = "className"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_class_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_class_name());
      }
    }
    // .dnd5e.api.v1alpha1.SpellSelectionInfo spell_selection = 8 [json_name = "spellSelection"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.spell_selection_);
    }
    // int32 level = 4 [json_name = "level"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_level() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_level());
      }
    }
    // bool has_choices = 7 [json_name = "hasChoices"];
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (this_._internal_has_choices() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void FeatureInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FeatureInfo*>(&to_msg);
  auto& from = static_cast<const FeatureInfo&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.FeatureInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_choices()->MergeFrom(
      from._internal_choices());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_id().empty()) {
        _this->_internal_set_id(from._internal_id());
      } else {
        if (_this->_impl_.id_.IsDefault()) {
          _this->_internal_set_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_class_name().empty()) {
        _this->_internal_set_class_name(from._internal_class_name());
      } else {
        if (_this->_impl_.class_name_.IsDefault()) {
          _this->_internal_set_class_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(from._impl_.spell_selection_ != nullptr);
      if (_this->_impl_.spell_selection_ == nullptr) {
        _this->_impl_.spell_selection_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.spell_selection_);
      } else {
        _this->_impl_.spell_selection_->MergeFrom(*from._impl_.spell_selection_);
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_level() != 0) {
        _this->_impl_.level_ = from._impl_.level_;
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (from._internal_has_choices() != 0) {
        _this->_impl_.has_choices_ = from._impl_.has_choices_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FeatureInfo::CopyFrom(const FeatureInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.FeatureInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FeatureInfo::InternalSwap(FeatureInfo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.choices_.InternalSwap(&other->_impl_.choices_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.class_name_, &other->_impl_.class_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FeatureInfo, _impl_.has_choices_)
      + sizeof(FeatureInfo::_impl_.has_choices_)
      - PROTOBUF_FIELD_OFFSET(FeatureInfo, _impl_.spell_selection_)>(
          reinterpret_cast<char*>(&_impl_.spell_selection_),
          reinterpret_cast<char*>(&other->_impl_.spell_selection_));
}

::google::protobuf::Metadata FeatureInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SpellSelectionInfo::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SpellSelectionInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SpellSelectionInfo, _impl_._has_bits_);
};

SpellSelectionInfo::SpellSelectionInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SpellSelectionInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.SpellSelectionInfo)
}
PROTOBUF_NDEBUG_INLINE SpellSelectionInfo::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::SpellSelectionInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        spell_levels_{visibility, arena, from.spell_levels_},
        _spell_levels_cached_byte_size_{0},
        spell_lists_{visibility, arena, from.spell_lists_} {}

SpellSelectionInfo::SpellSelectionInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SpellSelectionInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SpellSelectionInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SpellSelectionInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, spells_to_select_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, spells_to_select_),
           offsetof(Impl_, requires_replace_) -
               offsetof(Impl_, spells_to_select_) +
               sizeof(Impl_::requires_replace_));

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.SpellSelectionInfo)
}
PROTOBUF_NDEBUG_INLINE SpellSelectionInfo::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        spell_levels_{visibility, arena},
        _spell_levels_cached_byte_size_{0},
        spell_lists_{visibility, arena} {}

inline void SpellSelectionInfo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, spells_to_select_),
           0,
           offsetof(Impl_, requires_replace_) -
               offsetof(Impl_, spells_to_select_) +
               sizeof(Impl_::requires_replace_));
}
SpellSelectionInfo::~SpellSelectionInfo() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.SpellSelectionInfo)
  SharedDtor(*this);
}
inline void SpellSelectionInfo::SharedDtor(MessageLite& self) {
  SpellSelectionInfo& this_ = static_cast<SpellSelectionInfo&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SpellSelectionInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SpellSelectionInfo(arena);
}
constexpr auto SpellSelectionInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SpellSelectionInfo, _impl_.spell_levels_) +
          decltype(SpellSelectionInfo::_impl_.spell_levels_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SpellSelectionInfo, _impl_.spell_lists_) +
          decltype(SpellSelectionInfo::_impl_.spell_lists_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SpellSelectionInfo), alignof(SpellSelectionInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SpellSelectionInfo::PlacementNew_,
                                 sizeof(SpellSelectionInfo),
                                 alignof(SpellSelectionInfo));
  }
}
constexpr auto SpellSelectionInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SpellSelectionInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SpellSelectionInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SpellSelectionInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SpellSelectionInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SpellSelectionInfo>(), &SpellSelectionInfo::ByteSizeLong,
              &SpellSelectionInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SpellSelectionInfo, _impl_._cached_size_),
          false,
      },
      &SpellSelectionInfo::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SpellSelectionInfo_class_data_ =
        SpellSelectionInfo::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SpellSelectionInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SpellSelectionInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SpellSelectionInfo_class_data_.tc_table);
  return SpellSelectionInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 57, 2>
SpellSelectionInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SpellSelectionInfo, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SpellSelectionInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::SpellSelectionInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 spells_to_select = 1 [json_name = "spellsToSelect"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpellSelectionInfo, _impl_.spells_to_select_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SpellSelectionInfo, _impl_.spells_to_select_)}},
    // repeated int32 spell_levels = 2 [json_name = "spellLevels"];
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SpellSelectionInfo, _impl_.spell_levels_)}},
    // repeated string spell_lists = 3 [json_name = "spellLists"];
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SpellSelectionInfo, _impl_.spell_lists_)}},
    // .dnd5e.api.v1alpha1.SpellSelectionType selection_type = 4 [json_name = "selectionType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpellSelectionInfo, _impl_.selection_type_), 1>(),
     {32, 1, 0, PROTOBUF_FIELD_OFFSET(SpellSelectionInfo, _impl_.selection_type_)}},
    // bool requires_replace = 5 [json_name = "requiresReplace"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SpellSelectionInfo, _impl_.requires_replace_), 2>(),
     {40, 2, 0, PROTOBUF_FIELD_OFFSET(SpellSelectionInfo, _impl_.requires_replace_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 spells_to_select = 1 [json_name = "spellsToSelect"];
    {PROTOBUF_FIELD_OFFSET(SpellSelectionInfo, _impl_.spells_to_select_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated int32 spell_levels = 2 [json_name = "spellLevels"];
    {PROTOBUF_FIELD_OFFSET(SpellSelectionInfo, _impl_.spell_levels_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // repeated string spell_lists = 3 [json_name = "spellLists"];
    {PROTOBUF_FIELD_OFFSET(SpellSelectionInfo, _impl_.spell_lists_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .dnd5e.api.v1alpha1.SpellSelectionType selection_type = 4 [json_name = "selectionType"];
    {PROTOBUF_FIELD_OFFSET(SpellSelectionInfo, _impl_.selection_type_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // bool requires_replace = 5 [json_name = "requiresReplace"];
    {PROTOBUF_FIELD_OFFSET(SpellSelectionInfo, _impl_.requires_replace_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\45\0\0\13\0\0\0\0"
    "dnd5e.api.v1alpha1.SpellSelectionInfo"
    "spell_lists"
  }},
};
PROTOBUF_NOINLINE void SpellSelectionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.SpellSelectionInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.spell_levels_.Clear();
  _impl_.spell_lists_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    ::memset(&_impl_.spells_to_select_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.requires_replace_) -
        reinterpret_cast<char*>(&_impl_.spells_to_select_)) + sizeof(_impl_.requires_replace_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SpellSelectionInfo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SpellSelectionInfo& this_ = static_cast<const SpellSelectionInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SpellSelectionInfo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SpellSelectionInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.SpellSelectionInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 spells_to_select = 1 [json_name = "spellsToSelect"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_spells_to_select() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_spells_to_select(), target);
    }
  }

  // repeated int32 spell_levels = 2 [json_name = "spellLevels"];
  {
    int byte_size = this_._impl_._spell_levels_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, this_._internal_spell_levels(), byte_size, target);
    }
  }

  // repeated string spell_lists = 3 [json_name = "spellLists"];
  for (int i = 0, n = this_._internal_spell_lists_size(); i < n; ++i) {
    const auto& s = this_._internal_spell_lists().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.SpellSelectionInfo.spell_lists");
    target = stream->WriteString(3, s, target);
  }

  // .dnd5e.api.v1alpha1.SpellSelectionType selection_type = 4 [json_name = "selectionType"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_selection_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          4, this_._internal_selection_type(), target);
    }
  }

  // bool requires_replace = 5 [json_name = "requiresReplace"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_requires_replace() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          5, this_._internal_requires_replace(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.SpellSelectionInfo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SpellSelectionInfo::ByteSizeLong(const MessageLite& base) {
  const SpellSelectionInfo& this_ = static_cast<const SpellSelectionInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SpellSelectionInfo::ByteSizeLong() const {
  const SpellSelectionInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.SpellSelectionInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated int32 spell_levels = 2 [json_name = "spellLevels"];
    {
      total_size +=
          ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
              this_._internal_spell_levels(), 1,
              this_._impl_._spell_levels_cached_byte_size_);
    }
    // repeated string spell_lists = 3 [json_name = "spellLists"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_spell_lists().size());
      for (int i = 0, n = this_._internal_spell_lists().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_spell_lists().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // int32 spells_to_select = 1 [json_name = "spellsToSelect"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_spells_to_select() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_spells_to_select());
      }
    }
    // .dnd5e.api.v1alpha1.SpellSelectionType selection_type = 4 [json_name = "selectionType"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_selection_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_selection_type());
      }
    }
    // bool requires_replace = 5 [json_name = "requiresReplace"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_requires_replace() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SpellSelectionInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SpellSelectionInfo*>(&to_msg);
  auto& from = static_cast<const SpellSelectionInfo&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.SpellSelectionInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_spell_levels()->MergeFrom(from._internal_spell_levels());
  _this->_internal_mutable_spell_lists()->MergeFrom(from._internal_spell_lists());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (from._internal_spells_to_select() != 0) {
        _this->_impl_.spells_to_select_ = from._impl_.spells_to_select_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_selection_type() != 0) {
        _this->_impl_.selection_type_ = from._impl_.selection_type_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_requires_replace() != 0) {
        _this->_impl_.requires_replace_ = from._impl_.requires_replace_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SpellSelectionInfo::CopyFrom(const SpellSelectionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.SpellSelectionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SpellSelectionInfo::InternalSwap(SpellSelectionInfo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.spell_levels_.InternalSwap(&other->_impl_.spell_levels_);
  _impl_.spell_lists_.InternalSwap(&other->_impl_.spell_lists_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpellSelectionInfo, _impl_.requires_replace_)
      + sizeof(SpellSelectionInfo::_impl_.requires_replace_)
      - PROTOBUF_FIELD_OFFSET(SpellSelectionInfo, _impl_.spells_to_select_)>(
          reinterpret_cast<char*>(&_impl_.spells_to_select_),
          reinterpret_cast<char*>(&other->_impl_.spells_to_select_));
}

::google::protobuf::Metadata SpellSelectionInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListRacesRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ListRacesRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ListRacesRequest, _impl_._has_bits_);
};

ListRacesRequest::ListRacesRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListRacesRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.ListRacesRequest)
}
PROTOBUF_NDEBUG_INLINE ListRacesRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::ListRacesRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        page_token_(arena, from.page_token_) {}

ListRacesRequest::ListRacesRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ListRacesRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListRacesRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListRacesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, page_size_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, page_size_),
           offsetof(Impl_, include_subraces_) -
               offsetof(Impl_, page_size_) +
               sizeof(Impl_::include_subraces_));

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.ListRacesRequest)
}
PROTOBUF_NDEBUG_INLINE ListRacesRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        page_token_(arena) {}

inline void ListRacesRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, page_size_),
           0,
           offsetof(Impl_, include_subraces_) -
               offsetof(Impl_, page_size_) +
               sizeof(Impl_::include_subraces_));
}
ListRacesRequest::~ListRacesRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.ListRacesRequest)
  SharedDtor(*this);
}
inline void ListRacesRequest::SharedDtor(MessageLite& self) {
  ListRacesRequest& this_ = static_cast<ListRacesRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.page_token_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ListRacesRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ListRacesRequest(arena);
}
constexpr auto ListRacesRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ListRacesRequest),
                                            alignof(ListRacesRequest));
}
constexpr auto ListRacesRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ListRacesRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ListRacesRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ListRacesRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ListRacesRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ListRacesRequest>(), &ListRacesRequest::ByteSizeLong,
              &ListRacesRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ListRacesRequest, _impl_._cached_size_),
          false,
      },
      &ListRacesRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ListRacesRequest_class_data_ =
        ListRacesRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ListRacesRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ListRacesRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ListRacesRequest_class_data_.tc_table);
  return ListRacesRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 54, 2>
ListRacesRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ListRacesRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ListRacesRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ListRacesRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 page_size = 1 [json_name = "pageSize"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListRacesRequest, _impl_.page_size_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(ListRacesRequest, _impl_.page_size_)}},
    // string page_token = 2 [json_name = "pageToken"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ListRacesRequest, _impl_.page_token_)}},
    // bool include_subraces = 3 [json_name = "includeSubraces"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ListRacesRequest, _impl_.include_subraces_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(ListRacesRequest, _impl_.include_subraces_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 page_size = 1 [json_name = "pageSize"];
    {PROTOBUF_FIELD_OFFSET(ListRacesRequest, _impl_.page_size_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string page_token = 2 [json_name = "pageToken"];
    {PROTOBUF_FIELD_OFFSET(ListRacesRequest, _impl_.page_token_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool include_subraces = 3 [json_name = "includeSubraces"];
    {PROTOBUF_FIELD_OFFSET(ListRacesRequest, _impl_.include_subraces_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\43\0\12\0\0\0\0\0"
    "dnd5e.api.v1alpha1.ListRacesRequest"
    "page_token"
  }},
};
PROTOBUF_NOINLINE void ListRacesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.ListRacesRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.page_token_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x00000006U) != 0) {
    ::memset(&_impl_.page_size_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.include_subraces_) -
        reinterpret_cast<char*>(&_impl_.page_size_)) + sizeof(_impl_.include_subraces_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ListRacesRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ListRacesRequest& this_ = static_cast<const ListRacesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ListRacesRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ListRacesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.ListRacesRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 page_size = 1 [json_name = "pageSize"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_page_size() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_page_size(), target);
    }
  }

  // string page_token = 2 [json_name = "pageToken"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_page_token().empty()) {
      const ::std::string& _s = this_._internal_page_token();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.ListRacesRequest.page_token");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // bool include_subraces = 3 [json_name = "includeSubraces"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_include_subraces() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_include_subraces(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.ListRacesRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ListRacesRequest::ByteSizeLong(const MessageLite& base) {
  const ListRacesRequest& this_ = static_cast<const ListRacesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ListRacesRequest::ByteSizeLong() const {
  const ListRacesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.ListRacesRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string page_token = 2 [json_name = "pageToken"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_page_token().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_page_token());
      }
    }
    // int32 page_size = 1 [json_name = "pageSize"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_page_size() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_page_size());
      }
    }
    // bool include_subraces = 3 [json_name = "includeSubraces"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_include_subraces() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ListRacesRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListRacesRequest*>(&to_msg);
  auto& from = static_cast<const ListRacesRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.ListRacesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_page_token().empty()) {
        _this->_internal_set_page_token(from._internal_page_token());
      } else {
        if (_this->_impl_.page_token_.IsDefault()) {
          _this->_internal_set_page_token("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_page_size() != 0) {
        _this->_impl_.page_size_ = from._impl_.page_size_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_include_subraces() != 0) {
        _this->_impl_.include_subraces_ = from._impl_.include_subraces_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListRacesRequest::CopyFrom(const ListRacesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.ListRacesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListRacesRequest::InternalSwap(ListRacesRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.page_token_, &other->_impl_.page_token_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListRacesRequest, _impl_.include_subraces_)
      + sizeof(ListRacesRequest::_impl_.include_subraces_)
      - PROTOBUF_FIELD_OFFSET(ListRacesRequest, _impl_.page_size_)>(
          reinterpret_cast<char*>(&_impl_.page_size_),
          reinterpret_cast<char*>(&other->_impl_.page_size_));
}

::google::protobuf::Metadata ListRacesRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListRacesResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ListRacesResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ListRacesResponse, _impl_._has_bits_);
};

ListRacesResponse::ListRacesResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListRacesResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.ListRacesResponse)
}
PROTOBUF_NDEBUG_INLINE ListRacesResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::ListRacesResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        races_{visibility, arena, from.races_},
        next_page_token_(arena, from.next_page_token_) {}

ListRacesResponse::ListRacesResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ListRacesResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListRacesResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListRacesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.total_size_ = from._impl_.total_size_;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.ListRacesResponse)
}
PROTOBUF_NDEBUG_INLINE ListRacesResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        races_{visibility, arena},
        next_page_token_(arena) {}

inline void ListRacesResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.total_size_ = {};
}
ListRacesResponse::~ListRacesResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.ListRacesResponse)
  SharedDtor(*this);
}
inline void ListRacesResponse::SharedDtor(MessageLite& self) {
  ListRacesResponse& this_ = static_cast<ListRacesResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.next_page_token_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ListRacesResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ListRacesResponse(arena);
}
constexpr auto ListRacesResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ListRacesResponse, _impl_.races_) +
          decltype(ListRacesResponse::_impl_.races_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ListRacesResponse), alignof(ListRacesResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ListRacesResponse::PlacementNew_,
                                 sizeof(ListRacesResponse),
                                 alignof(ListRacesResponse));
  }
}
constexpr auto ListRacesResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ListRacesResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ListRacesResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ListRacesResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ListRacesResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ListRacesResponse>(), &ListRacesResponse::ByteSizeLong,
              &ListRacesResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ListRacesResponse, _impl_._cached_size_),
          false,
      },
      &ListRacesResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ListRacesResponse_class_data_ =
        ListRacesResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ListRacesResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ListRacesResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ListRacesResponse_class_data_.tc_table);
  return ListRacesResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 60, 2>
ListRacesResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ListRacesResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ListRacesResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ListRacesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .dnd5e.api.v1alpha1.RaceInfo races = 1 [json_name = "races"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListRacesResponse, _impl_.races_)}},
    // string next_page_token = 2 [json_name = "nextPageToken"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ListRacesResponse, _impl_.next_page_token_)}},
    // int32 total_size = 3 [json_name = "totalSize"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListRacesResponse, _impl_.total_size_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(ListRacesResponse, _impl_.total_size_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dnd5e.api.v1alpha1.RaceInfo races = 1 [json_name = "races"];
    {PROTOBUF_FIELD_OFFSET(ListRacesResponse, _impl_.races_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string next_page_token = 2 [json_name = "nextPageToken"];
    {PROTOBUF_FIELD_OFFSET(ListRacesResponse, _impl_.next_page_token_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 total_size = 3 [json_name = "totalSize"];
    {PROTOBUF_FIELD_OFFSET(ListRacesResponse, _impl_.total_size_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::RaceInfo>()},
  }},
  {{
    "\44\0\17\0\0\0\0\0"
    "dnd5e.api.v1alpha1.ListRacesResponse"
    "next_page_token"
  }},
};
PROTOBUF_NOINLINE void ListRacesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.ListRacesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.races_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.next_page_token_.ClearNonDefaultToEmpty();
  }
  _impl_.total_size_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ListRacesResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ListRacesResponse& this_ = static_cast<const ListRacesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ListRacesResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ListRacesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.ListRacesResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dnd5e.api.v1alpha1.RaceInfo races = 1 [json_name = "races"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_races_size());
       i < n; i++) {
    const auto& repfield = this_._internal_races().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // string next_page_token = 2 [json_name = "nextPageToken"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_next_page_token().empty()) {
      const ::std::string& _s = this_._internal_next_page_token();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.ListRacesResponse.next_page_token");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int32 total_size = 3 [json_name = "totalSize"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_total_size() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_total_size(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.ListRacesResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ListRacesResponse::ByteSizeLong(const MessageLite& base) {
  const ListRacesResponse& this_ = static_cast<const ListRacesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ListRacesResponse::ByteSizeLong() const {
  const ListRacesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.ListRacesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.RaceInfo races = 1 [json_name = "races"];
    {
      total_size += 1UL * this_._internal_races_size();
      for (const auto& msg : this_._internal_races()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string next_page_token = 2 [json_name = "nextPageToken"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_next_page_token().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_next_page_token());
      }
    }
    // int32 total_size = 3 [json_name = "totalSize"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_total_size() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_total_size());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ListRacesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListRacesResponse*>(&to_msg);
  auto& from = static_cast<const ListRacesResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.ListRacesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_races()->MergeFrom(
      from._internal_races());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_next_page_token().empty()) {
        _this->_internal_set_next_page_token(from._internal_next_page_token());
      } else {
        if (_this->_impl_.next_page_token_.IsDefault()) {
          _this->_internal_set_next_page_token("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_total_size() != 0) {
        _this->_impl_.total_size_ = from._impl_.total_size_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListRacesResponse::CopyFrom(const ListRacesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.ListRacesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListRacesResponse::InternalSwap(ListRacesResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.races_.InternalSwap(&other->_impl_.races_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.next_page_token_, &other->_impl_.next_page_token_, arena);
  swap(_impl_.total_size_, other->_impl_.total_size_);
}

::google::protobuf::Metadata ListRacesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListClassesRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ListClassesRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ListClassesRequest, _impl_._has_bits_);
};

ListClassesRequest::ListClassesRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListClassesRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.ListClassesRequest)
}
PROTOBUF_NDEBUG_INLINE ListClassesRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::ListClassesRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        page_token_(arena, from.page_token_) {}

ListClassesRequest::ListClassesRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ListClassesRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListClassesRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListClassesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, page_size_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, page_size_),
           offsetof(Impl_, include_features_) -
               offsetof(Impl_, page_size_) +
               sizeof(Impl_::include_features_));

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.ListClassesRequest)
}
PROTOBUF_NDEBUG_INLINE ListClassesRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        page_token_(arena) {}

inline void ListClassesRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, page_size_),
           0,
           offsetof(Impl_, include_features_) -
               offsetof(Impl_, page_size_) +
               sizeof(Impl_::include_features_));
}
ListClassesRequest::~ListClassesRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.ListClassesRequest)
  SharedDtor(*this);
}
inline void ListClassesRequest::SharedDtor(MessageLite& self) {
  ListClassesRequest& this_ = static_cast<ListClassesRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.page_token_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ListClassesRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ListClassesRequest(arena);
}
constexpr auto ListClassesRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ListClassesRequest),
                                            alignof(ListClassesRequest));
}
constexpr auto ListClassesRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ListClassesRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ListClassesRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ListClassesRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ListClassesRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ListClassesRequest>(), &ListClassesRequest::ByteSizeLong,
              &ListClassesRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ListClassesRequest, _impl_._cached_size_),
          false,
      },
      &ListClassesRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ListClassesRequest_class_data_ =
        ListClassesRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ListClassesRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ListClassesRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ListClassesRequest_class_data_.tc_table);
  return ListClassesRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 56, 2>
ListClassesRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ListClassesRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ListClassesRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ListClassesRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool include_features = 4 [json_name = "includeFeatures"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ListClassesRequest, _impl_.include_features_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(ListClassesRequest, _impl_.include_features_)}},
    // int32 page_size = 1 [json_name = "pageSize"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListClassesRequest, _impl_.page_size_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(ListClassesRequest, _impl_.page_size_)}},
    // string page_token = 2 [json_name = "pageToken"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ListClassesRequest, _impl_.page_token_)}},
    // bool include_spellcasters_only = 3 [json_name = "includeSpellcastersOnly"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ListClassesRequest, _impl_.include_spellcasters_only_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(ListClassesRequest, _impl_.include_spellcasters_only_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 page_size = 1 [json_name = "pageSize"];
    {PROTOBUF_FIELD_OFFSET(ListClassesRequest, _impl_.page_size_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string page_token = 2 [json_name = "pageToken"];
    {PROTOBUF_FIELD_OFFSET(ListClassesRequest, _impl_.page_token_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool include_spellcasters_only = 3 [json_name = "includeSpellcastersOnly"];
    {PROTOBUF_FIELD_OFFSET(ListClassesRequest, _impl_.include_spellcasters_only_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool include_features = 4 [json_name = "includeFeatures"];
    {PROTOBUF_FIELD_OFFSET(ListClassesRequest, _impl_.include_features_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\45\0\12\0\0\0\0\0"
    "dnd5e.api.v1alpha1.ListClassesRequest"
    "page_token"
  }},
};
PROTOBUF_NOINLINE void ListClassesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.ListClassesRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.page_token_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x0000000eU) != 0) {
    ::memset(&_impl_.page_size_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.include_features_) -
        reinterpret_cast<char*>(&_impl_.page_size_)) + sizeof(_impl_.include_features_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ListClassesRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ListClassesRequest& this_ = static_cast<const ListClassesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ListClassesRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ListClassesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.ListClassesRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 page_size = 1 [json_name = "pageSize"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_page_size() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_page_size(), target);
    }
  }

  // string page_token = 2 [json_name = "pageToken"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_page_token().empty()) {
      const ::std::string& _s = this_._internal_page_token();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.ListClassesRequest.page_token");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // bool include_spellcasters_only = 3 [json_name = "includeSpellcastersOnly"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_include_spellcasters_only() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_include_spellcasters_only(), target);
    }
  }

  // bool include_features = 4 [json_name = "includeFeatures"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_include_features() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_include_features(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.ListClassesRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ListClassesRequest::ByteSizeLong(const MessageLite& base) {
  const ListClassesRequest& this_ = static_cast<const ListClassesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ListClassesRequest::ByteSizeLong() const {
  const ListClassesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.ListClassesRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string page_token = 2 [json_name = "pageToken"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_page_token().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_page_token());
      }
    }
    // int32 page_size = 1 [json_name = "pageSize"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_page_size() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_page_size());
      }
    }
    // bool include_spellcasters_only = 3 [json_name = "includeSpellcastersOnly"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_include_spellcasters_only() != 0) {
        total_size += 2;
      }
    }
    // bool include_features = 4 [json_name = "includeFeatures"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_include_features() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ListClassesRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListClassesRequest*>(&to_msg);
  auto& from = static_cast<const ListClassesRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.ListClassesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_page_token().empty()) {
        _this->_internal_set_page_token(from._internal_page_token());
      } else {
        if (_this->_impl_.page_token_.IsDefault()) {
          _this->_internal_set_page_token("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_page_size() != 0) {
        _this->_impl_.page_size_ = from._impl_.page_size_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_include_spellcasters_only() != 0) {
        _this->_impl_.include_spellcasters_only_ = from._impl_.include_spellcasters_only_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_include_features() != 0) {
        _this->_impl_.include_features_ = from._impl_.include_features_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListClassesRequest::CopyFrom(const ListClassesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.ListClassesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListClassesRequest::InternalSwap(ListClassesRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.page_token_, &other->_impl_.page_token_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListClassesRequest, _impl_.include_features_)
      + sizeof(ListClassesRequest::_impl_.include_features_)
      - PROTOBUF_FIELD_OFFSET(ListClassesRequest, _impl_.page_size_)>(
          reinterpret_cast<char*>(&_impl_.page_size_),
          reinterpret_cast<char*>(&other->_impl_.page_size_));
}

::google::protobuf::Metadata ListClassesRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListClassesResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ListClassesResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ListClassesResponse, _impl_._has_bits_);
};

ListClassesResponse::ListClassesResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListClassesResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.ListClassesResponse)
}
PROTOBUF_NDEBUG_INLINE ListClassesResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::ListClassesResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        classes_{visibility, arena, from.classes_},
        next_page_token_(arena, from.next_page_token_) {}

ListClassesResponse::ListClassesResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ListClassesResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListClassesResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListClassesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.total_size_ = from._impl_.total_size_;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.ListClassesResponse)
}
PROTOBUF_NDEBUG_INLINE ListClassesResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        classes_{visibility, arena},
        next_page_token_(arena) {}

inline void ListClassesResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.total_size_ = {};
}
ListClassesResponse::~ListClassesResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.ListClassesResponse)
  SharedDtor(*this);
}
inline void ListClassesResponse::SharedDtor(MessageLite& self) {
  ListClassesResponse& this_ = static_cast<ListClassesResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.next_page_token_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ListClassesResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ListClassesResponse(arena);
}
constexpr auto ListClassesResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ListClassesResponse, _impl_.classes_) +
          decltype(ListClassesResponse::_impl_.classes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ListClassesResponse), alignof(ListClassesResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ListClassesResponse::PlacementNew_,
                                 sizeof(ListClassesResponse),
                                 alignof(ListClassesResponse));
  }
}
constexpr auto ListClassesResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ListClassesResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ListClassesResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ListClassesResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ListClassesResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ListClassesResponse>(), &ListClassesResponse::ByteSizeLong,
              &ListClassesResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ListClassesResponse, _impl_._cached_size_),
          false,
      },
      &ListClassesResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ListClassesResponse_class_data_ =
        ListClassesResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ListClassesResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ListClassesResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ListClassesResponse_class_data_.tc_table);
  return ListClassesResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 62, 2>
ListClassesResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ListClassesResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ListClassesResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ListClassesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .dnd5e.api.v1alpha1.ClassInfo classes = 1 [json_name = "classes"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListClassesResponse, _impl_.classes_)}},
    // string next_page_token = 2 [json_name = "nextPageToken"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ListClassesResponse, _impl_.next_page_token_)}},
    // int32 total_size = 3 [json_name = "totalSize"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListClassesResponse, _impl_.total_size_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(ListClassesResponse, _impl_.total_size_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dnd5e.api.v1alpha1.ClassInfo classes = 1 [json_name = "classes"];
    {PROTOBUF_FIELD_OFFSET(ListClassesResponse, _impl_.classes_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string next_page_token = 2 [json_name = "nextPageToken"];
    {PROTOBUF_FIELD_OFFSET(ListClassesResponse, _impl_.next_page_token_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 total_size = 3 [json_name = "totalSize"];
    {PROTOBUF_FIELD_OFFSET(ListClassesResponse, _impl_.total_size_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ClassInfo>()},
  }},
  {{
    "\46\0\17\0\0\0\0\0"
    "dnd5e.api.v1alpha1.ListClassesResponse"
    "next_page_token"
  }},
};
PROTOBUF_NOINLINE void ListClassesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.ListClassesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.classes_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.next_page_token_.ClearNonDefaultToEmpty();
  }
  _impl_.total_size_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ListClassesResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ListClassesResponse& this_ = static_cast<const ListClassesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ListClassesResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ListClassesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.ListClassesResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dnd5e.api.v1alpha1.ClassInfo classes = 1 [json_name = "classes"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_classes_size());
       i < n; i++) {
    const auto& repfield = this_._internal_classes().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // string next_page_token = 2 [json_name = "nextPageToken"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_next_page_token().empty()) {
      const ::std::string& _s = this_._internal_next_page_token();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.ListClassesResponse.next_page_token");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int32 total_size = 3 [json_name = "totalSize"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_total_size() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_total_size(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.ListClassesResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ListClassesResponse::ByteSizeLong(const MessageLite& base) {
  const ListClassesResponse& this_ = static_cast<const ListClassesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ListClassesResponse::ByteSizeLong() const {
  const ListClassesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.ListClassesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.ClassInfo classes = 1 [json_name = "classes"];
    {
      total_size += 1UL * this_._internal_classes_size();
      for (const auto& msg : this_._internal_classes()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string next_page_token = 2 [json_name = "nextPageToken"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_next_page_token().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_next_page_token());
      }
    }
    // int32 total_size = 3 [json_name = "totalSize"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_total_size() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_total_size());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ListClassesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListClassesResponse*>(&to_msg);
  auto& from = static_cast<const ListClassesResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.ListClassesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_classes()->MergeFrom(
      from._internal_classes());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_next_page_token().empty()) {
        _this->_internal_set_next_page_token(from._internal_next_page_token());
      } else {
        if (_this->_impl_.next_page_token_.IsDefault()) {
          _this->_internal_set_next_page_token("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_total_size() != 0) {
        _this->_impl_.total_size_ = from._impl_.total_size_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListClassesResponse::CopyFrom(const ListClassesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.ListClassesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListClassesResponse::InternalSwap(ListClassesResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.classes_.InternalSwap(&other->_impl_.classes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.next_page_token_, &other->_impl_.next_page_token_, arena);
  swap(_impl_.total_size_, other->_impl_.total_size_);
}

::google::protobuf::Metadata ListClassesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListBackgroundsRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ListBackgroundsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ListBackgroundsRequest, _impl_._has_bits_);
};

ListBackgroundsRequest::ListBackgroundsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListBackgroundsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.ListBackgroundsRequest)
}
PROTOBUF_NDEBUG_INLINE ListBackgroundsRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::ListBackgroundsRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        page_token_(arena, from.page_token_) {}

ListBackgroundsRequest::ListBackgroundsRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ListBackgroundsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListBackgroundsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListBackgroundsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.page_size_ = from._impl_.page_size_;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.ListBackgroundsRequest)
}
PROTOBUF_NDEBUG_INLINE ListBackgroundsRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        page_token_(arena) {}

inline void ListBackgroundsRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.page_size_ = {};
}
ListBackgroundsRequest::~ListBackgroundsRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.ListBackgroundsRequest)
  SharedDtor(*this);
}
inline void ListBackgroundsRequest::SharedDtor(MessageLite& self) {
  ListBackgroundsRequest& this_ = static_cast<ListBackgroundsRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.page_token_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ListBackgroundsRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ListBackgroundsRequest(arena);
}
constexpr auto ListBackgroundsRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ListBackgroundsRequest),
                                            alignof(ListBackgroundsRequest));
}
constexpr auto ListBackgroundsRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ListBackgroundsRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ListBackgroundsRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ListBackgroundsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ListBackgroundsRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ListBackgroundsRequest>(), &ListBackgroundsRequest::ByteSizeLong,
              &ListBackgroundsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ListBackgroundsRequest, _impl_._cached_size_),
          false,
      },
      &ListBackgroundsRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ListBackgroundsRequest_class_data_ =
        ListBackgroundsRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ListBackgroundsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ListBackgroundsRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ListBackgroundsRequest_class_data_.tc_table);
  return ListBackgroundsRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 60, 2>
ListBackgroundsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ListBackgroundsRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ListBackgroundsRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ListBackgroundsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string page_token = 2 [json_name = "pageToken"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ListBackgroundsRequest, _impl_.page_token_)}},
    // int32 page_size = 1 [json_name = "pageSize"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListBackgroundsRequest, _impl_.page_size_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(ListBackgroundsRequest, _impl_.page_size_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 page_size = 1 [json_name = "pageSize"];
    {PROTOBUF_FIELD_OFFSET(ListBackgroundsRequest, _impl_.page_size_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string page_token = 2 [json_name = "pageToken"];
    {PROTOBUF_FIELD_OFFSET(ListBackgroundsRequest, _impl_.page_token_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\0\12\0\0\0\0\0"
    "dnd5e.api.v1alpha1.ListBackgroundsRequest"
    "page_token"
  }},
};
PROTOBUF_NOINLINE void ListBackgroundsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.ListBackgroundsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.page_token_.ClearNonDefaultToEmpty();
  }
  _impl_.page_size_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ListBackgroundsRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ListBackgroundsRequest& this_ = static_cast<const ListBackgroundsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ListBackgroundsRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ListBackgroundsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.ListBackgroundsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 page_size = 1 [json_name = "pageSize"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_page_size() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_page_size(), target);
    }
  }

  // string page_token = 2 [json_name = "pageToken"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_page_token().empty()) {
      const ::std::string& _s = this_._internal_page_token();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.ListBackgroundsRequest.page_token");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.ListBackgroundsRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ListBackgroundsRequest::ByteSizeLong(const MessageLite& base) {
  const ListBackgroundsRequest& this_ = static_cast<const ListBackgroundsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ListBackgroundsRequest::ByteSizeLong() const {
  const ListBackgroundsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.ListBackgroundsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string page_token = 2 [json_name = "pageToken"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_page_token().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_page_token());
      }
    }
    // int32 page_size = 1 [json_name = "pageSize"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_page_size() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_page_size());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ListBackgroundsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListBackgroundsRequest*>(&to_msg);
  auto& from = static_cast<const ListBackgroundsRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.ListBackgroundsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_page_token().empty()) {
        _this->_internal_set_page_token(from._internal_page_token());
      } else {
        if (_this->_impl_.page_token_.IsDefault()) {
          _this->_internal_set_page_token("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_page_size() != 0) {
        _this->_impl_.page_size_ = from._impl_.page_size_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListBackgroundsRequest::CopyFrom(const ListBackgroundsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.ListBackgroundsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListBackgroundsRequest::InternalSwap(ListBackgroundsRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.page_token_, &other->_impl_.page_token_, arena);
  swap(_impl_.page_size_, other->_impl_.page_size_);
}

::google::protobuf::Metadata ListBackgroundsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListBackgroundsResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ListBackgroundsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ListBackgroundsResponse, _impl_._has_bits_);
};

ListBackgroundsResponse::ListBackgroundsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListBackgroundsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.ListBackgroundsResponse)
}
PROTOBUF_NDEBUG_INLINE ListBackgroundsResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::ListBackgroundsResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        backgrounds_{visibility, arena, from.backgrounds_},
        next_page_token_(arena, from.next_page_token_) {}

ListBackgroundsResponse::ListBackgroundsResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ListBackgroundsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListBackgroundsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListBackgroundsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.total_size_ = from._impl_.total_size_;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.ListBackgroundsResponse)
}
PROTOBUF_NDEBUG_INLINE ListBackgroundsResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        backgrounds_{visibility, arena},
        next_page_token_(arena) {}

inline void ListBackgroundsResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.total_size_ = {};
}
ListBackgroundsResponse::~ListBackgroundsResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.ListBackgroundsResponse)
  SharedDtor(*this);
}
inline void ListBackgroundsResponse::SharedDtor(MessageLite& self) {
  ListBackgroundsResponse& this_ = static_cast<ListBackgroundsResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.next_page_token_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ListBackgroundsResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ListBackgroundsResponse(arena);
}
constexpr auto ListBackgroundsResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ListBackgroundsResponse, _impl_.backgrounds_) +
          decltype(ListBackgroundsResponse::_impl_.backgrounds_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ListBackgroundsResponse), alignof(ListBackgroundsResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ListBackgroundsResponse::PlacementNew_,
                                 sizeof(ListBackgroundsResponse),
                                 alignof(ListBackgroundsResponse));
  }
}
constexpr auto ListBackgroundsResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ListBackgroundsResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ListBackgroundsResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ListBackgroundsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ListBackgroundsResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ListBackgroundsResponse>(), &ListBackgroundsResponse::ByteSizeLong,
              &ListBackgroundsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ListBackgroundsResponse, _impl_._cached_size_),
          false,
      },
      &ListBackgroundsResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ListBackgroundsResponse_class_data_ =
        ListBackgroundsResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ListBackgroundsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ListBackgroundsResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ListBackgroundsResponse_class_data_.tc_table);
  return ListBackgroundsResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 66, 2>
ListBackgroundsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ListBackgroundsResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ListBackgroundsResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ListBackgroundsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .dnd5e.api.v1alpha1.BackgroundInfo backgrounds = 1 [json_name = "backgrounds"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListBackgroundsResponse, _impl_.backgrounds_)}},
    // string next_page_token = 2 [json_name = "nextPageToken"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ListBackgroundsResponse, _impl_.next_page_token_)}},
    // int32 total_size = 3 [json_name = "totalSize"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListBackgroundsResponse, _impl_.total_size_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(ListBackgroundsResponse, _impl_.total_size_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dnd5e.api.v1alpha1.BackgroundInfo backgrounds = 1 [json_name = "backgrounds"];
    {PROTOBUF_FIELD_OFFSET(ListBackgroundsResponse, _impl_.backgrounds_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string next_page_token = 2 [json_name = "nextPageToken"];
    {PROTOBUF_FIELD_OFFSET(ListBackgroundsResponse, _impl_.next_page_token_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 total_size = 3 [json_name = "totalSize"];
    {PROTOBUF_FIELD_OFFSET(ListBackgroundsResponse, _impl_.total_size_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::BackgroundInfo>()},
  }},
  {{
    "\52\0\17\0\0\0\0\0"
    "dnd5e.api.v1alpha1.ListBackgroundsResponse"
    "next_page_token"
  }},
};
PROTOBUF_NOINLINE void ListBackgroundsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.ListBackgroundsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.backgrounds_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.next_page_token_.ClearNonDefaultToEmpty();
  }
  _impl_.total_size_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ListBackgroundsResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ListBackgroundsResponse& this_ = static_cast<const ListBackgroundsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ListBackgroundsResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ListBackgroundsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.ListBackgroundsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dnd5e.api.v1alpha1.BackgroundInfo backgrounds = 1 [json_name = "backgrounds"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_backgrounds_size());
       i < n; i++) {
    const auto& repfield = this_._internal_backgrounds().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // string next_page_token = 2 [json_name = "nextPageToken"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_next_page_token().empty()) {
      const ::std::string& _s = this_._internal_next_page_token();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.ListBackgroundsResponse.next_page_token");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int32 total_size = 3 [json_name = "totalSize"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_total_size() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_total_size(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.ListBackgroundsResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ListBackgroundsResponse::ByteSizeLong(const MessageLite& base) {
  const ListBackgroundsResponse& this_ = static_cast<const ListBackgroundsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ListBackgroundsResponse::ByteSizeLong() const {
  const ListBackgroundsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.ListBackgroundsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.BackgroundInfo backgrounds = 1 [json_name = "backgrounds"];
    {
      total_size += 1UL * this_._internal_backgrounds_size();
      for (const auto& msg : this_._internal_backgrounds()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string next_page_token = 2 [json_name = "nextPageToken"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_next_page_token().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_next_page_token());
      }
    }
    // int32 total_size = 3 [json_name = "totalSize"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_total_size() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_total_size());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ListBackgroundsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListBackgroundsResponse*>(&to_msg);
  auto& from = static_cast<const ListBackgroundsResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.ListBackgroundsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_backgrounds()->MergeFrom(
      from._internal_backgrounds());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_next_page_token().empty()) {
        _this->_internal_set_next_page_token(from._internal_next_page_token());
      } else {
        if (_this->_impl_.next_page_token_.IsDefault()) {
          _this->_internal_set_next_page_token("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_total_size() != 0) {
        _this->_impl_.total_size_ = from._impl_.total_size_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListBackgroundsResponse::CopyFrom(const ListBackgroundsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.ListBackgroundsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListBackgroundsResponse::InternalSwap(ListBackgroundsResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.backgrounds_.InternalSwap(&other->_impl_.backgrounds_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.next_page_token_, &other->_impl_.next_page_token_, arena);
  swap(_impl_.total_size_, other->_impl_.total_size_);
}

::google::protobuf::Metadata ListBackgroundsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetRaceDetailsRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetRaceDetailsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetRaceDetailsRequest, _impl_._has_bits_);
};

GetRaceDetailsRequest::GetRaceDetailsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetRaceDetailsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.GetRaceDetailsRequest)
}
PROTOBUF_NDEBUG_INLINE GetRaceDetailsRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::GetRaceDetailsRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        race_id_(arena, from.race_id_) {}

GetRaceDetailsRequest::GetRaceDetailsRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetRaceDetailsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetRaceDetailsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetRaceDetailsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.GetRaceDetailsRequest)
}
PROTOBUF_NDEBUG_INLINE GetRaceDetailsRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        race_id_(arena) {}

inline void GetRaceDetailsRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetRaceDetailsRequest::~GetRaceDetailsRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.GetRaceDetailsRequest)
  SharedDtor(*this);
}
inline void GetRaceDetailsRequest::SharedDtor(MessageLite& self) {
  GetRaceDetailsRequest& this_ = static_cast<GetRaceDetailsRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.race_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetRaceDetailsRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetRaceDetailsRequest(arena);
}
constexpr auto GetRaceDetailsRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetRaceDetailsRequest),
                                            alignof(GetRaceDetailsRequest));
}
constexpr auto GetRaceDetailsRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetRaceDetailsRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetRaceDetailsRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetRaceDetailsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetRaceDetailsRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetRaceDetailsRequest>(), &GetRaceDetailsRequest::ByteSizeLong,
              &GetRaceDetailsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetRaceDetailsRequest, _impl_._cached_size_),
          false,
      },
      &GetRaceDetailsRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetRaceDetailsRequest_class_data_ =
        GetRaceDetailsRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetRaceDetailsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetRaceDetailsRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetRaceDetailsRequest_class_data_.tc_table);
  return GetRaceDetailsRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 56, 2>
GetRaceDetailsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetRaceDetailsRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetRaceDetailsRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::GetRaceDetailsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string race_id = 1 [json_name = "raceId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetRaceDetailsRequest, _impl_.race_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string race_id = 1 [json_name = "raceId"];
    {PROTOBUF_FIELD_OFFSET(GetRaceDetailsRequest, _impl_.race_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\50\7\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.GetRaceDetailsRequest"
    "race_id"
  }},
};
PROTOBUF_NOINLINE void GetRaceDetailsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.GetRaceDetailsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.race_id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetRaceDetailsRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetRaceDetailsRequest& this_ = static_cast<const GetRaceDetailsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetRaceDetailsRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetRaceDetailsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.GetRaceDetailsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string race_id = 1 [json_name = "raceId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_race_id().empty()) {
      const ::std::string& _s = this_._internal_race_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.GetRaceDetailsRequest.race_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.GetRaceDetailsRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetRaceDetailsRequest::ByteSizeLong(const MessageLite& base) {
  const GetRaceDetailsRequest& this_ = static_cast<const GetRaceDetailsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetRaceDetailsRequest::ByteSizeLong() const {
  const GetRaceDetailsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.GetRaceDetailsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string race_id = 1 [json_name = "raceId"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_race_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_race_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetRaceDetailsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetRaceDetailsRequest*>(&to_msg);
  auto& from = static_cast<const GetRaceDetailsRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.GetRaceDetailsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!from._internal_race_id().empty()) {
      _this->_internal_set_race_id(from._internal_race_id());
    } else {
      if (_this->_impl_.race_id_.IsDefault()) {
        _this->_internal_set_race_id("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetRaceDetailsRequest::CopyFrom(const GetRaceDetailsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.GetRaceDetailsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetRaceDetailsRequest::InternalSwap(GetRaceDetailsRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.race_id_, &other->_impl_.race_id_, arena);
}

::google::protobuf::Metadata GetRaceDetailsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetRaceDetailsResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetRaceDetailsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetRaceDetailsResponse, _impl_._has_bits_);
};

GetRaceDetailsResponse::GetRaceDetailsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetRaceDetailsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.GetRaceDetailsResponse)
}
PROTOBUF_NDEBUG_INLINE GetRaceDetailsResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::GetRaceDetailsResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetRaceDetailsResponse::GetRaceDetailsResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetRaceDetailsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetRaceDetailsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetRaceDetailsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.race_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.race_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.GetRaceDetailsResponse)
}
PROTOBUF_NDEBUG_INLINE GetRaceDetailsResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void GetRaceDetailsResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.race_ = {};
}
GetRaceDetailsResponse::~GetRaceDetailsResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.GetRaceDetailsResponse)
  SharedDtor(*this);
}
inline void GetRaceDetailsResponse::SharedDtor(MessageLite& self) {
  GetRaceDetailsResponse& this_ = static_cast<GetRaceDetailsResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.race_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetRaceDetailsResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetRaceDetailsResponse(arena);
}
constexpr auto GetRaceDetailsResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetRaceDetailsResponse),
                                            alignof(GetRaceDetailsResponse));
}
constexpr auto GetRaceDetailsResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetRaceDetailsResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetRaceDetailsResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetRaceDetailsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetRaceDetailsResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetRaceDetailsResponse>(), &GetRaceDetailsResponse::ByteSizeLong,
              &GetRaceDetailsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetRaceDetailsResponse, _impl_._cached_size_),
          false,
      },
      &GetRaceDetailsResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetRaceDetailsResponse_class_data_ =
        GetRaceDetailsResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetRaceDetailsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetRaceDetailsResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetRaceDetailsResponse_class_data_.tc_table);
  return GetRaceDetailsResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
GetRaceDetailsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetRaceDetailsResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetRaceDetailsResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::GetRaceDetailsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .dnd5e.api.v1alpha1.RaceInfo race = 1 [json_name = "race"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetRaceDetailsResponse, _impl_.race_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.RaceInfo race = 1 [json_name = "race"];
    {PROTOBUF_FIELD_OFFSET(GetRaceDetailsResponse, _impl_.race_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::RaceInfo>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void GetRaceDetailsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.GetRaceDetailsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.race_ != nullptr);
    _impl_.race_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetRaceDetailsResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetRaceDetailsResponse& this_ = static_cast<const GetRaceDetailsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetRaceDetailsResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetRaceDetailsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.GetRaceDetailsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.RaceInfo race = 1 [json_name = "race"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.race_, this_._impl_.race_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.GetRaceDetailsResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetRaceDetailsResponse::ByteSizeLong(const MessageLite& base) {
  const GetRaceDetailsResponse& this_ = static_cast<const GetRaceDetailsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetRaceDetailsResponse::ByteSizeLong() const {
  const GetRaceDetailsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.GetRaceDetailsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .dnd5e.api.v1alpha1.RaceInfo race = 1 [json_name = "race"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.race_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetRaceDetailsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetRaceDetailsResponse*>(&to_msg);
  auto& from = static_cast<const GetRaceDetailsResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.GetRaceDetailsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(from._impl_.race_ != nullptr);
    if (_this->_impl_.race_ == nullptr) {
      _this->_impl_.race_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.race_);
    } else {
      _this->_impl_.race_->MergeFrom(*from._impl_.race_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetRaceDetailsResponse::CopyFrom(const GetRaceDetailsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.GetRaceDetailsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetRaceDetailsResponse::InternalSwap(GetRaceDetailsResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.race_, other->_impl_.race_);
}

::google::protobuf::Metadata GetRaceDetailsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetClassDetailsRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetClassDetailsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetClassDetailsRequest, _impl_._has_bits_);
};

GetClassDetailsRequest::GetClassDetailsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetClassDetailsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.GetClassDetailsRequest)
}
PROTOBUF_NDEBUG_INLINE GetClassDetailsRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::GetClassDetailsRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        class_id_(arena, from.class_id_) {}

GetClassDetailsRequest::GetClassDetailsRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetClassDetailsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetClassDetailsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetClassDetailsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.GetClassDetailsRequest)
}
PROTOBUF_NDEBUG_INLINE GetClassDetailsRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        class_id_(arena) {}

inline void GetClassDetailsRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetClassDetailsRequest::~GetClassDetailsRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.GetClassDetailsRequest)
  SharedDtor(*this);
}
inline void GetClassDetailsRequest::SharedDtor(MessageLite& self) {
  GetClassDetailsRequest& this_ = static_cast<GetClassDetailsRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.class_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetClassDetailsRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetClassDetailsRequest(arena);
}
constexpr auto GetClassDetailsRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetClassDetailsRequest),
                                            alignof(GetClassDetailsRequest));
}
constexpr auto GetClassDetailsRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetClassDetailsRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetClassDetailsRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetClassDetailsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetClassDetailsRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetClassDetailsRequest>(), &GetClassDetailsRequest::ByteSizeLong,
              &GetClassDetailsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetClassDetailsRequest, _impl_._cached_size_),
          false,
      },
      &GetClassDetailsRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetClassDetailsRequest_class_data_ =
        GetClassDetailsRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetClassDetailsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetClassDetailsRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetClassDetailsRequest_class_data_.tc_table);
  return GetClassDetailsRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 58, 2>
GetClassDetailsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetClassDetailsRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetClassDetailsRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::GetClassDetailsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string class_id = 1 [json_name = "classId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetClassDetailsRequest, _impl_.class_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string class_id = 1 [json_name = "classId"];
    {PROTOBUF_FIELD_OFFSET(GetClassDetailsRequest, _impl_.class_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\10\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.GetClassDetailsRequest"
    "class_id"
  }},
};
PROTOBUF_NOINLINE void GetClassDetailsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.GetClassDetailsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.class_id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetClassDetailsRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetClassDetailsRequest& this_ = static_cast<const GetClassDetailsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetClassDetailsRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetClassDetailsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.GetClassDetailsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string class_id = 1 [json_name = "classId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_class_id().empty()) {
      const ::std::string& _s = this_._internal_class_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.GetClassDetailsRequest.class_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.GetClassDetailsRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetClassDetailsRequest::ByteSizeLong(const MessageLite& base) {
  const GetClassDetailsRequest& this_ = static_cast<const GetClassDetailsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetClassDetailsRequest::ByteSizeLong() const {
  const GetClassDetailsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.GetClassDetailsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string class_id = 1 [json_name = "classId"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_class_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_class_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetClassDetailsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetClassDetailsRequest*>(&to_msg);
  auto& from = static_cast<const GetClassDetailsRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.GetClassDetailsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!from._internal_class_id().empty()) {
      _this->_internal_set_class_id(from._internal_class_id());
    } else {
      if (_this->_impl_.class_id_.IsDefault()) {
        _this->_internal_set_class_id("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetClassDetailsRequest::CopyFrom(const GetClassDetailsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.GetClassDetailsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetClassDetailsRequest::InternalSwap(GetClassDetailsRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.class_id_, &other->_impl_.class_id_, arena);
}

::google::protobuf::Metadata GetClassDetailsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetClassDetailsResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetClassDetailsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetClassDetailsResponse, _impl_._has_bits_);
};

GetClassDetailsResponse::GetClassDetailsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetClassDetailsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.GetClassDetailsResponse)
}
PROTOBUF_NDEBUG_INLINE GetClassDetailsResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::GetClassDetailsResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetClassDetailsResponse::GetClassDetailsResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetClassDetailsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetClassDetailsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetClassDetailsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.class__ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.class__)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.GetClassDetailsResponse)
}
PROTOBUF_NDEBUG_INLINE GetClassDetailsResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void GetClassDetailsResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.class__ = {};
}
GetClassDetailsResponse::~GetClassDetailsResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.GetClassDetailsResponse)
  SharedDtor(*this);
}
inline void GetClassDetailsResponse::SharedDtor(MessageLite& self) {
  GetClassDetailsResponse& this_ = static_cast<GetClassDetailsResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.class__;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetClassDetailsResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetClassDetailsResponse(arena);
}
constexpr auto GetClassDetailsResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetClassDetailsResponse),
                                            alignof(GetClassDetailsResponse));
}
constexpr auto GetClassDetailsResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetClassDetailsResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetClassDetailsResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetClassDetailsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetClassDetailsResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetClassDetailsResponse>(), &GetClassDetailsResponse::ByteSizeLong,
              &GetClassDetailsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetClassDetailsResponse, _impl_._cached_size_),
          false,
      },
      &GetClassDetailsResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetClassDetailsResponse_class_data_ =
        GetClassDetailsResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetClassDetailsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetClassDetailsResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetClassDetailsResponse_class_data_.tc_table);
  return GetClassDetailsResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
GetClassDetailsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetClassDetailsResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetClassDetailsResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::GetClassDetailsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .dnd5e.api.v1alpha1.ClassInfo class = 1 [json_name = "class"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetClassDetailsResponse, _impl_.class__)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.ClassInfo class = 1 [json_name = "class"];
    {PROTOBUF_FIELD_OFFSET(GetClassDetailsResponse, _impl_.class__), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ClassInfo>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void GetClassDetailsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.GetClassDetailsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.class__ != nullptr);
    _impl_.class__->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetClassDetailsResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetClassDetailsResponse& this_ = static_cast<const GetClassDetailsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetClassDetailsResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetClassDetailsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.GetClassDetailsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.ClassInfo class = 1 [json_name = "class"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.class__, this_._impl_.class__->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.GetClassDetailsResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetClassDetailsResponse::ByteSizeLong(const MessageLite& base) {
  const GetClassDetailsResponse& this_ = static_cast<const GetClassDetailsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetClassDetailsResponse::ByteSizeLong() const {
  const GetClassDetailsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.GetClassDetailsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .dnd5e.api.v1alpha1.ClassInfo class = 1 [json_name = "class"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.class__);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetClassDetailsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetClassDetailsResponse*>(&to_msg);
  auto& from = static_cast<const GetClassDetailsResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.GetClassDetailsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(from._impl_.class__ != nullptr);
    if (_this->_impl_.class__ == nullptr) {
      _this->_impl_.class__ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.class__);
    } else {
      _this->_impl_.class__->MergeFrom(*from._impl_.class__);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetClassDetailsResponse::CopyFrom(const GetClassDetailsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.GetClassDetailsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetClassDetailsResponse::InternalSwap(GetClassDetailsResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.class__, other->_impl_.class__);
}

::google::protobuf::Metadata GetClassDetailsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetBackgroundDetailsRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetBackgroundDetailsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetBackgroundDetailsRequest, _impl_._has_bits_);
};

GetBackgroundDetailsRequest::GetBackgroundDetailsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetBackgroundDetailsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.GetBackgroundDetailsRequest)
}
PROTOBUF_NDEBUG_INLINE GetBackgroundDetailsRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        background_id_(arena, from.background_id_) {}

GetBackgroundDetailsRequest::GetBackgroundDetailsRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetBackgroundDetailsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetBackgroundDetailsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetBackgroundDetailsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.GetBackgroundDetailsRequest)
}
PROTOBUF_NDEBUG_INLINE GetBackgroundDetailsRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        background_id_(arena) {}

inline void GetBackgroundDetailsRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetBackgroundDetailsRequest::~GetBackgroundDetailsRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.GetBackgroundDetailsRequest)
  SharedDtor(*this);
}
inline void GetBackgroundDetailsRequest::SharedDtor(MessageLite& self) {
  GetBackgroundDetailsRequest& this_ = static_cast<GetBackgroundDetailsRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.background_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetBackgroundDetailsRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetBackgroundDetailsRequest(arena);
}
constexpr auto GetBackgroundDetailsRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetBackgroundDetailsRequest),
                                            alignof(GetBackgroundDetailsRequest));
}
constexpr auto GetBackgroundDetailsRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetBackgroundDetailsRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetBackgroundDetailsRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetBackgroundDetailsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetBackgroundDetailsRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetBackgroundDetailsRequest>(), &GetBackgroundDetailsRequest::ByteSizeLong,
              &GetBackgroundDetailsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetBackgroundDetailsRequest, _impl_._cached_size_),
          false,
      },
      &GetBackgroundDetailsRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetBackgroundDetailsRequest_class_data_ =
        GetBackgroundDetailsRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetBackgroundDetailsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetBackgroundDetailsRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetBackgroundDetailsRequest_class_data_.tc_table);
  return GetBackgroundDetailsRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 68, 2>
GetBackgroundDetailsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetBackgroundDetailsRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetBackgroundDetailsRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::GetBackgroundDetailsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string background_id = 1 [json_name = "backgroundId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetBackgroundDetailsRequest, _impl_.background_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string background_id = 1 [json_name = "backgroundId"];
    {PROTOBUF_FIELD_OFFSET(GetBackgroundDetailsRequest, _impl_.background_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\56\15\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.GetBackgroundDetailsRequest"
    "background_id"
  }},
};
PROTOBUF_NOINLINE void GetBackgroundDetailsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.GetBackgroundDetailsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.background_id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetBackgroundDetailsRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetBackgroundDetailsRequest& this_ = static_cast<const GetBackgroundDetailsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetBackgroundDetailsRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetBackgroundDetailsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.GetBackgroundDetailsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string background_id = 1 [json_name = "backgroundId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_background_id().empty()) {
      const ::std::string& _s = this_._internal_background_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.GetBackgroundDetailsRequest.background_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.GetBackgroundDetailsRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetBackgroundDetailsRequest::ByteSizeLong(const MessageLite& base) {
  const GetBackgroundDetailsRequest& this_ = static_cast<const GetBackgroundDetailsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetBackgroundDetailsRequest::ByteSizeLong() const {
  const GetBackgroundDetailsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.GetBackgroundDetailsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string background_id = 1 [json_name = "backgroundId"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_background_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_background_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetBackgroundDetailsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetBackgroundDetailsRequest*>(&to_msg);
  auto& from = static_cast<const GetBackgroundDetailsRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.GetBackgroundDetailsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!from._internal_background_id().empty()) {
      _this->_internal_set_background_id(from._internal_background_id());
    } else {
      if (_this->_impl_.background_id_.IsDefault()) {
        _this->_internal_set_background_id("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetBackgroundDetailsRequest::CopyFrom(const GetBackgroundDetailsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.GetBackgroundDetailsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetBackgroundDetailsRequest::InternalSwap(GetBackgroundDetailsRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.background_id_, &other->_impl_.background_id_, arena);
}

::google::protobuf::Metadata GetBackgroundDetailsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetBackgroundDetailsResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetBackgroundDetailsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetBackgroundDetailsResponse, _impl_._has_bits_);
};

GetBackgroundDetailsResponse::GetBackgroundDetailsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetBackgroundDetailsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.GetBackgroundDetailsResponse)
}
PROTOBUF_NDEBUG_INLINE GetBackgroundDetailsResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetBackgroundDetailsResponse::GetBackgroundDetailsResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetBackgroundDetailsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetBackgroundDetailsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetBackgroundDetailsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.background_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.background_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.GetBackgroundDetailsResponse)
}
PROTOBUF_NDEBUG_INLINE GetBackgroundDetailsResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void GetBackgroundDetailsResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.background_ = {};
}
GetBackgroundDetailsResponse::~GetBackgroundDetailsResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.GetBackgroundDetailsResponse)
  SharedDtor(*this);
}
inline void GetBackgroundDetailsResponse::SharedDtor(MessageLite& self) {
  GetBackgroundDetailsResponse& this_ = static_cast<GetBackgroundDetailsResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.background_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetBackgroundDetailsResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetBackgroundDetailsResponse(arena);
}
constexpr auto GetBackgroundDetailsResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetBackgroundDetailsResponse),
                                            alignof(GetBackgroundDetailsResponse));
}
constexpr auto GetBackgroundDetailsResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetBackgroundDetailsResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetBackgroundDetailsResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetBackgroundDetailsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetBackgroundDetailsResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetBackgroundDetailsResponse>(), &GetBackgroundDetailsResponse::ByteSizeLong,
              &GetBackgroundDetailsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetBackgroundDetailsResponse, _impl_._cached_size_),
          false,
      },
      &GetBackgroundDetailsResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetBackgroundDetailsResponse_class_data_ =
        GetBackgroundDetailsResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetBackgroundDetailsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetBackgroundDetailsResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetBackgroundDetailsResponse_class_data_.tc_table);
  return GetBackgroundDetailsResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
GetBackgroundDetailsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetBackgroundDetailsResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetBackgroundDetailsResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::GetBackgroundDetailsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .dnd5e.api.v1alpha1.BackgroundInfo background = 1 [json_name = "background"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetBackgroundDetailsResponse, _impl_.background_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.BackgroundInfo background = 1 [json_name = "background"];
    {PROTOBUF_FIELD_OFFSET(GetBackgroundDetailsResponse, _impl_.background_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::BackgroundInfo>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void GetBackgroundDetailsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.GetBackgroundDetailsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.background_ != nullptr);
    _impl_.background_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetBackgroundDetailsResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetBackgroundDetailsResponse& this_ = static_cast<const GetBackgroundDetailsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetBackgroundDetailsResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetBackgroundDetailsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.GetBackgroundDetailsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.BackgroundInfo background = 1 [json_name = "background"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.background_, this_._impl_.background_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.GetBackgroundDetailsResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetBackgroundDetailsResponse::ByteSizeLong(const MessageLite& base) {
  const GetBackgroundDetailsResponse& this_ = static_cast<const GetBackgroundDetailsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetBackgroundDetailsResponse::ByteSizeLong() const {
  const GetBackgroundDetailsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.GetBackgroundDetailsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .dnd5e.api.v1alpha1.BackgroundInfo background = 1 [json_name = "background"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.background_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetBackgroundDetailsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetBackgroundDetailsResponse*>(&to_msg);
  auto& from = static_cast<const GetBackgroundDetailsResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.GetBackgroundDetailsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(from._impl_.background_ != nullptr);
    if (_this->_impl_.background_ == nullptr) {
      _this->_impl_.background_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.background_);
    } else {
      _this->_impl_.background_->MergeFrom(*from._impl_.background_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetBackgroundDetailsResponse::CopyFrom(const GetBackgroundDetailsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.GetBackgroundDetailsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetBackgroundDetailsResponse::InternalSwap(GetBackgroundDetailsResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.background_, other->_impl_.background_);
}

::google::protobuf::Metadata GetBackgroundDetailsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetFeatureRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetFeatureRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetFeatureRequest, _impl_._has_bits_);
};

GetFeatureRequest::GetFeatureRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetFeatureRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.GetFeatureRequest)
}
PROTOBUF_NDEBUG_INLINE GetFeatureRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::GetFeatureRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        feature_id_(arena, from.feature_id_) {}

GetFeatureRequest::GetFeatureRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetFeatureRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetFeatureRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetFeatureRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.GetFeatureRequest)
}
PROTOBUF_NDEBUG_INLINE GetFeatureRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        feature_id_(arena) {}

inline void GetFeatureRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetFeatureRequest::~GetFeatureRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.GetFeatureRequest)
  SharedDtor(*this);
}
inline void GetFeatureRequest::SharedDtor(MessageLite& self) {
  GetFeatureRequest& this_ = static_cast<GetFeatureRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.feature_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetFeatureRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetFeatureRequest(arena);
}
constexpr auto GetFeatureRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetFeatureRequest),
                                            alignof(GetFeatureRequest));
}
constexpr auto GetFeatureRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetFeatureRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetFeatureRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetFeatureRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetFeatureRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetFeatureRequest>(), &GetFeatureRequest::ByteSizeLong,
              &GetFeatureRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetFeatureRequest, _impl_._cached_size_),
          false,
      },
      &GetFeatureRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetFeatureRequest_class_data_ =
        GetFeatureRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetFeatureRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetFeatureRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetFeatureRequest_class_data_.tc_table);
  return GetFeatureRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 55, 2>
GetFeatureRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetFeatureRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetFeatureRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::GetFeatureRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string feature_id = 1 [json_name = "featureId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetFeatureRequest, _impl_.feature_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string feature_id = 1 [json_name = "featureId"];
    {PROTOBUF_FIELD_OFFSET(GetFeatureRequest, _impl_.feature_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\12\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.GetFeatureRequest"
    "feature_id"
  }},
};
PROTOBUF_NOINLINE void GetFeatureRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.GetFeatureRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.feature_id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetFeatureRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetFeatureRequest& this_ = static_cast<const GetFeatureRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetFeatureRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetFeatureRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.GetFeatureRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string feature_id = 1 [json_name = "featureId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_feature_id().empty()) {
      const ::std::string& _s = this_._internal_feature_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.GetFeatureRequest.feature_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.GetFeatureRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetFeatureRequest::ByteSizeLong(const MessageLite& base) {
  const GetFeatureRequest& this_ = static_cast<const GetFeatureRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetFeatureRequest::ByteSizeLong() const {
  const GetFeatureRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.GetFeatureRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string feature_id = 1 [json_name = "featureId"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_feature_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_feature_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetFeatureRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetFeatureRequest*>(&to_msg);
  auto& from = static_cast<const GetFeatureRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.GetFeatureRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!from._internal_feature_id().empty()) {
      _this->_internal_set_feature_id(from._internal_feature_id());
    } else {
      if (_this->_impl_.feature_id_.IsDefault()) {
        _this->_internal_set_feature_id("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetFeatureRequest::CopyFrom(const GetFeatureRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.GetFeatureRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetFeatureRequest::InternalSwap(GetFeatureRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.feature_id_, &other->_impl_.feature_id_, arena);
}

::google::protobuf::Metadata GetFeatureRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetFeatureResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetFeatureResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetFeatureResponse, _impl_._has_bits_);
};

GetFeatureResponse::GetFeatureResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetFeatureResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.GetFeatureResponse)
}
PROTOBUF_NDEBUG_INLINE GetFeatureResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::GetFeatureResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetFeatureResponse::GetFeatureResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetFeatureResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetFeatureResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetFeatureResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.feature_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.feature_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.GetFeatureResponse)
}
PROTOBUF_NDEBUG_INLINE GetFeatureResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void GetFeatureResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.feature_ = {};
}
GetFeatureResponse::~GetFeatureResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.GetFeatureResponse)
  SharedDtor(*this);
}
inline void GetFeatureResponse::SharedDtor(MessageLite& self) {
  GetFeatureResponse& this_ = static_cast<GetFeatureResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.feature_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetFeatureResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetFeatureResponse(arena);
}
constexpr auto GetFeatureResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetFeatureResponse),
                                            alignof(GetFeatureResponse));
}
constexpr auto GetFeatureResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetFeatureResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetFeatureResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetFeatureResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetFeatureResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetFeatureResponse>(), &GetFeatureResponse::ByteSizeLong,
              &GetFeatureResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetFeatureResponse, _impl_._cached_size_),
          false,
      },
      &GetFeatureResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetFeatureResponse_class_data_ =
        GetFeatureResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetFeatureResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetFeatureResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetFeatureResponse_class_data_.tc_table);
  return GetFeatureResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
GetFeatureResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetFeatureResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetFeatureResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::GetFeatureResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .dnd5e.api.v1alpha1.FeatureInfo feature = 1 [json_name = "feature"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetFeatureResponse, _impl_.feature_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.FeatureInfo feature = 1 [json_name = "feature"];
    {PROTOBUF_FIELD_OFFSET(GetFeatureResponse, _impl_.feature_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::FeatureInfo>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void GetFeatureResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.GetFeatureResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.feature_ != nullptr);
    _impl_.feature_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetFeatureResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetFeatureResponse& this_ = static_cast<const GetFeatureResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetFeatureResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetFeatureResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.GetFeatureResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.FeatureInfo feature = 1 [json_name = "feature"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.feature_, this_._impl_.feature_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.GetFeatureResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetFeatureResponse::ByteSizeLong(const MessageLite& base) {
  const GetFeatureResponse& this_ = static_cast<const GetFeatureResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetFeatureResponse::ByteSizeLong() const {
  const GetFeatureResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.GetFeatureResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .dnd5e.api.v1alpha1.FeatureInfo feature = 1 [json_name = "feature"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.feature_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetFeatureResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetFeatureResponse*>(&to_msg);
  auto& from = static_cast<const GetFeatureResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.GetFeatureResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(from._impl_.feature_ != nullptr);
    if (_this->_impl_.feature_ == nullptr) {
      _this->_impl_.feature_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.feature_);
    } else {
      _this->_impl_.feature_->MergeFrom(*from._impl_.feature_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetFeatureResponse::CopyFrom(const GetFeatureResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.GetFeatureResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetFeatureResponse::InternalSwap(GetFeatureResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.feature_, other->_impl_.feature_);
}

::google::protobuf::Metadata GetFeatureResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RollAbilityScoresRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RollAbilityScoresRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RollAbilityScoresRequest, _impl_._has_bits_);
};

RollAbilityScoresRequest::RollAbilityScoresRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RollAbilityScoresRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.RollAbilityScoresRequest)
}
PROTOBUF_NDEBUG_INLINE RollAbilityScoresRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::RollAbilityScoresRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        draft_id_(arena, from.draft_id_) {}

RollAbilityScoresRequest::RollAbilityScoresRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RollAbilityScoresRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RollAbilityScoresRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RollAbilityScoresRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.RollAbilityScoresRequest)
}
PROTOBUF_NDEBUG_INLINE RollAbilityScoresRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        draft_id_(arena) {}

inline void RollAbilityScoresRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RollAbilityScoresRequest::~RollAbilityScoresRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.RollAbilityScoresRequest)
  SharedDtor(*this);
}
inline void RollAbilityScoresRequest::SharedDtor(MessageLite& self) {
  RollAbilityScoresRequest& this_ = static_cast<RollAbilityScoresRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.draft_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RollAbilityScoresRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RollAbilityScoresRequest(arena);
}
constexpr auto RollAbilityScoresRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RollAbilityScoresRequest),
                                            alignof(RollAbilityScoresRequest));
}
constexpr auto RollAbilityScoresRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RollAbilityScoresRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RollAbilityScoresRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RollAbilityScoresRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RollAbilityScoresRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RollAbilityScoresRequest>(), &RollAbilityScoresRequest::ByteSizeLong,
              &RollAbilityScoresRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RollAbilityScoresRequest, _impl_._cached_size_),
          false,
      },
      &RollAbilityScoresRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RollAbilityScoresRequest_class_data_ =
        RollAbilityScoresRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RollAbilityScoresRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RollAbilityScoresRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RollAbilityScoresRequest_class_data_.tc_table);
  return RollAbilityScoresRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 60, 2>
RollAbilityScoresRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RollAbilityScoresRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RollAbilityScoresRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::RollAbilityScoresRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string draft_id = 1 [json_name = "draftId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RollAbilityScoresRequest, _impl_.draft_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string draft_id = 1 [json_name = "draftId"];
    {PROTOBUF_FIELD_OFFSET(RollAbilityScoresRequest, _impl_.draft_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\53\10\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.RollAbilityScoresRequest"
    "draft_id"
  }},
};
PROTOBUF_NOINLINE void RollAbilityScoresRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.RollAbilityScoresRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.draft_id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RollAbilityScoresRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RollAbilityScoresRequest& this_ = static_cast<const RollAbilityScoresRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RollAbilityScoresRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RollAbilityScoresRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.RollAbilityScoresRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string draft_id = 1 [json_name = "draftId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_draft_id().empty()) {
      const ::std::string& _s = this_._internal_draft_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.RollAbilityScoresRequest.draft_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.RollAbilityScoresRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RollAbilityScoresRequest::ByteSizeLong(const MessageLite& base) {
  const RollAbilityScoresRequest& this_ = static_cast<const RollAbilityScoresRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RollAbilityScoresRequest::ByteSizeLong() const {
  const RollAbilityScoresRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.RollAbilityScoresRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string draft_id = 1 [json_name = "draftId"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_draft_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_draft_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RollAbilityScoresRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RollAbilityScoresRequest*>(&to_msg);
  auto& from = static_cast<const RollAbilityScoresRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.RollAbilityScoresRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!from._internal_draft_id().empty()) {
      _this->_internal_set_draft_id(from._internal_draft_id());
    } else {
      if (_this->_impl_.draft_id_.IsDefault()) {
        _this->_internal_set_draft_id("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RollAbilityScoresRequest::CopyFrom(const RollAbilityScoresRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.RollAbilityScoresRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RollAbilityScoresRequest::InternalSwap(RollAbilityScoresRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.draft_id_, &other->_impl_.draft_id_, arena);
}

::google::protobuf::Metadata RollAbilityScoresRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AbilityScoreRoll::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<AbilityScoreRoll>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AbilityScoreRoll, _impl_._has_bits_);
};

AbilityScoreRoll::AbilityScoreRoll(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AbilityScoreRoll_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.AbilityScoreRoll)
}
PROTOBUF_NDEBUG_INLINE AbilityScoreRoll::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::AbilityScoreRoll& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        dice_{visibility, arena, from.dice_},
        _dice_cached_byte_size_{0},
        roll_id_(arena, from.roll_id_),
        notation_(arena, from.notation_) {}

AbilityScoreRoll::AbilityScoreRoll(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const AbilityScoreRoll& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AbilityScoreRoll_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AbilityScoreRoll* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, total_),
           offsetof(Impl_, dropped_) -
               offsetof(Impl_, total_) +
               sizeof(Impl_::dropped_));

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.AbilityScoreRoll)
}
PROTOBUF_NDEBUG_INLINE AbilityScoreRoll::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        dice_{visibility, arena},
        _dice_cached_byte_size_{0},
        roll_id_(arena),
        notation_(arena) {}

inline void AbilityScoreRoll::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_),
           0,
           offsetof(Impl_, dropped_) -
               offsetof(Impl_, total_) +
               sizeof(Impl_::dropped_));
}
AbilityScoreRoll::~AbilityScoreRoll() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.AbilityScoreRoll)
  SharedDtor(*this);
}
inline void AbilityScoreRoll::SharedDtor(MessageLite& self) {
  AbilityScoreRoll& this_ = static_cast<AbilityScoreRoll&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.roll_id_.Destroy();
  this_._impl_.notation_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL AbilityScoreRoll::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AbilityScoreRoll(arena);
}
constexpr auto AbilityScoreRoll::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(AbilityScoreRoll, _impl_.dice_) +
          decltype(AbilityScoreRoll::_impl_.dice_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(AbilityScoreRoll), alignof(AbilityScoreRoll), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&AbilityScoreRoll::PlacementNew_,
                                 sizeof(AbilityScoreRoll),
                                 alignof(AbilityScoreRoll));
  }
}
constexpr auto AbilityScoreRoll::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AbilityScoreRoll_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AbilityScoreRoll::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AbilityScoreRoll>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AbilityScoreRoll::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AbilityScoreRoll>(), &AbilityScoreRoll::ByteSizeLong,
              &AbilityScoreRoll::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AbilityScoreRoll, _impl_._cached_size_),
          false,
      },
      &AbilityScoreRoll::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull AbilityScoreRoll_class_data_ =
        AbilityScoreRoll::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
AbilityScoreRoll::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AbilityScoreRoll_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AbilityScoreRoll_class_data_.tc_table);
  return AbilityScoreRoll_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 59, 2>
AbilityScoreRoll::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AbilityScoreRoll, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    AbilityScoreRoll_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::AbilityScoreRoll>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string roll_id = 1 [json_name = "rollId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AbilityScoreRoll, _impl_.roll_id_)}},
    // repeated int32 dice = 2 [json_name = "dice"];
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AbilityScoreRoll, _impl_.dice_)}},
    // int32 total = 3 [json_name = "total"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AbilityScoreRoll, _impl_.total_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(AbilityScoreRoll, _impl_.total_)}},
    // int32 dropped = 4 [json_name = "dropped"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AbilityScoreRoll, _impl_.dropped_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(AbilityScoreRoll, _impl_.dropped_)}},
    // string notation = 5 [json_name = "notation"];
    {::_pbi::TcParser::FastUS1,
     {42, 1, 0, PROTOBUF_FIELD_OFFSET(AbilityScoreRoll, _impl_.notation_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string roll_id = 1 [json_name = "rollId"];
    {PROTOBUF_FIELD_OFFSET(AbilityScoreRoll, _impl_.roll_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated int32 dice = 2 [json_name = "dice"];
    {PROTOBUF_FIELD_OFFSET(AbilityScoreRoll, _impl_.dice_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // int32 total = 3 [json_name = "total"];
    {PROTOBUF_FIELD_OFFSET(AbilityScoreRoll, _impl_.total_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 dropped = 4 [json_name = "dropped"];
    {PROTOBUF_FIELD_OFFSET(AbilityScoreRoll, _impl_.dropped_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string notation = 5 [json_name = "notation"];
    {PROTOBUF_FIELD_OFFSET(AbilityScoreRoll, _impl_.notation_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\7\0\0\0\10\0\0"
    "dnd5e.api.v1alpha1.AbilityScoreRoll"
    "roll_id"
    "notation"
  }},
};
PROTOBUF_NOINLINE void AbilityScoreRoll::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.AbilityScoreRoll)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dice_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.roll_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.notation_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000000cU) != 0) {
    ::memset(&_impl_.total_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.dropped_) -
        reinterpret_cast<char*>(&_impl_.total_)) + sizeof(_impl_.dropped_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL AbilityScoreRoll::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const AbilityScoreRoll& this_ = static_cast<const AbilityScoreRoll&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL AbilityScoreRoll::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const AbilityScoreRoll& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.AbilityScoreRoll)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string roll_id = 1 [json_name = "rollId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_roll_id().empty()) {
      const ::std::string& _s = this_._internal_roll_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.AbilityScoreRoll.roll_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // repeated int32 dice = 2 [json_name = "dice"];
  {
    int byte_size = this_._impl_._dice_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, this_._internal_dice(), byte_size, target);
    }
  }

  // int32 total = 3 [json_name = "total"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_total() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_total(), target);
    }
  }

  // int32 dropped = 4 [json_name = "dropped"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_dropped() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_dropped(), target);
    }
  }

  // string notation = 5 [json_name = "notation"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_notation().empty()) {
      const ::std::string& _s = this_._internal_notation();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.AbilityScoreRoll.notation");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.AbilityScoreRoll)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AbilityScoreRoll::ByteSizeLong(const MessageLite& base) {
  const AbilityScoreRoll& this_ = static_cast<const AbilityScoreRoll&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AbilityScoreRoll::ByteSizeLong() const {
  const AbilityScoreRoll& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.AbilityScoreRoll)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated int32 dice = 2 [json_name = "dice"];
    {
      total_size +=
          ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
              this_._internal_dice(), 1,
              this_._impl_._dice_cached_byte_size_);
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string roll_id = 1 [json_name = "rollId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_roll_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_roll_id());
      }
    }
    // string notation = 5 [json_name = "notation"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_notation().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_notation());
      }
    }
    // int32 total = 3 [json_name = "total"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_total() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_total());
      }
    }
    // int32 dropped = 4 [json_name = "dropped"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_dropped() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_dropped());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void AbilityScoreRoll::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AbilityScoreRoll*>(&to_msg);
  auto& from = static_cast<const AbilityScoreRoll&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.AbilityScoreRoll)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_dice()->MergeFrom(from._internal_dice());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_roll_id().empty()) {
        _this->_internal_set_roll_id(from._internal_roll_id());
      } else {
        if (_this->_impl_.roll_id_.IsDefault()) {
          _this->_internal_set_roll_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_notation().empty()) {
        _this->_internal_set_notation(from._internal_notation());
      } else {
        if (_this->_impl_.notation_.IsDefault()) {
          _this->_internal_set_notation("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_total() != 0) {
        _this->_impl_.total_ = from._impl_.total_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_dropped() != 0) {
        _this->_impl_.dropped_ = from._impl_.dropped_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AbilityScoreRoll::CopyFrom(const AbilityScoreRoll& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.AbilityScoreRoll)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AbilityScoreRoll::InternalSwap(AbilityScoreRoll* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.dice_.InternalSwap(&other->_impl_.dice_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.roll_id_, &other->_impl_.roll_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.notation_, &other->_impl_.notation_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AbilityScoreRoll, _impl_.dropped_)
      + sizeof(AbilityScoreRoll::_impl_.dropped_)
      - PROTOBUF_FIELD_OFFSET(AbilityScoreRoll, _impl_.total_)>(
          reinterpret_cast<char*>(&_impl_.total_),
          reinterpret_cast<char*>(&other->_impl_.total_));
}

::google::protobuf::Metadata AbilityScoreRoll::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RollAbilityScoresResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RollAbilityScoresResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RollAbilityScoresResponse, _impl_._has_bits_);
};

RollAbilityScoresResponse::RollAbilityScoresResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RollAbilityScoresResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.RollAbilityScoresResponse)
}
PROTOBUF_NDEBUG_INLINE RollAbilityScoresResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::RollAbilityScoresResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        rolls_{visibility, arena, from.rolls_} {}

RollAbilityScoresResponse::RollAbilityScoresResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RollAbilityScoresResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RollAbilityScoresResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RollAbilityScoresResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.expires_at_ = from._impl_.expires_at_;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.RollAbilityScoresResponse)
}
PROTOBUF_NDEBUG_INLINE RollAbilityScoresResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        rolls_{visibility, arena} {}

inline void RollAbilityScoresResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.expires_at_ = {};
}
RollAbilityScoresResponse::~RollAbilityScoresResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.RollAbilityScoresResponse)
  SharedDtor(*this);
}
inline void RollAbilityScoresResponse::SharedDtor(MessageLite& self) {
  RollAbilityScoresResponse& this_ = static_cast<RollAbilityScoresResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RollAbilityScoresResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RollAbilityScoresResponse(arena);
}
constexpr auto RollAbilityScoresResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RollAbilityScoresResponse, _impl_.rolls_) +
          decltype(RollAbilityScoresResponse::_impl_.rolls_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(RollAbilityScoresResponse), alignof(RollAbilityScoresResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RollAbilityScoresResponse::PlacementNew_,
                                 sizeof(RollAbilityScoresResponse),
                                 alignof(RollAbilityScoresResponse));
  }
}
constexpr auto RollAbilityScoresResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RollAbilityScoresResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RollAbilityScoresResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RollAbilityScoresResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RollAbilityScoresResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RollAbilityScoresResponse>(), &RollAbilityScoresResponse::ByteSizeLong,
              &RollAbilityScoresResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RollAbilityScoresResponse, _impl_._cached_size_),
          false,
      },
      &RollAbilityScoresResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RollAbilityScoresResponse_class_data_ =
        RollAbilityScoresResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RollAbilityScoresResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RollAbilityScoresResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RollAbilityScoresResponse_class_data_.tc_table);
  return RollAbilityScoresResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
RollAbilityScoresResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RollAbilityScoresResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RollAbilityScoresResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::RollAbilityScoresResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 expires_at = 2 [json_name = "expiresAt"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RollAbilityScoresResponse, _impl_.expires_at_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(RollAbilityScoresResponse, _impl_.expires_at_)}},
    // repeated .dnd5e.api.v1alpha1.AbilityScoreRoll rolls = 1 [json_name = "rolls"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RollAbilityScoresResponse, _impl_.rolls_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dnd5e.api.v1alpha1.AbilityScoreRoll rolls = 1 [json_name = "rolls"];
    {PROTOBUF_FIELD_OFFSET(RollAbilityScoresResponse, _impl_.rolls_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 expires_at = 2 [json_name = "expiresAt"];
    {PROTOBUF_FIELD_OFFSET(RollAbilityScoresResponse, _impl_.expires_at_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::AbilityScoreRoll>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void RollAbilityScoresResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.RollAbilityScoresResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rolls_.Clear();
  _impl_.expires_at_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RollAbilityScoresResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RollAbilityScoresResponse& this_ = static_cast<const RollAbilityScoresResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RollAbilityScoresResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RollAbilityScoresResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.RollAbilityScoresResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dnd5e.api.v1alpha1.AbilityScoreRoll rolls = 1 [json_name = "rolls"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_rolls_size());
       i < n; i++) {
    const auto& repfield = this_._internal_rolls().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // int64 expires_at = 2 [json_name = "expiresAt"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_expires_at() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
              stream, this_._internal_expires_at(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.RollAbilityScoresResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RollAbilityScoresResponse::ByteSizeLong(const MessageLite& base) {
  const RollAbilityScoresResponse& this_ = static_cast<const RollAbilityScoresResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RollAbilityScoresResponse::ByteSizeLong() const {
  const RollAbilityScoresResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.RollAbilityScoresResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.AbilityScoreRoll rolls = 1 [json_name = "rolls"];
    {
      total_size += 1UL * this_._internal_rolls_size();
      for (const auto& msg : this_._internal_rolls()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // int64 expires_at = 2 [json_name = "expiresAt"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_expires_at() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_expires_at());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RollAbilityScoresResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RollAbilityScoresResponse*>(&to_msg);
  auto& from = static_cast<const RollAbilityScoresResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.RollAbilityScoresResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_rolls()->MergeFrom(
      from._internal_rolls());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (from._internal_expires_at() != 0) {
      _this->_impl_.expires_at_ = from._impl_.expires_at_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RollAbilityScoresResponse::CopyFrom(const RollAbilityScoresResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.RollAbilityScoresResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RollAbilityScoresResponse::InternalSwap(RollAbilityScoresResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.rolls_.InternalSwap(&other->_impl_.rolls_);
  swap(_impl_.expires_at_, other->_impl_.expires_at_);
}

::google::protobuf::Metadata RollAbilityScoresResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetRequirementsRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetRequirementsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetRequirementsRequest, _impl_._has_bits_);
};

GetRequirementsRequest::GetRequirementsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetRequirementsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.GetRequirementsRequest)
}
PROTOBUF_NDEBUG_INLINE GetRequirementsRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::GetRequirementsRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        draft_id_(arena, from.draft_id_) {}

GetRequirementsRequest::GetRequirementsRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetRequirementsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetRequirementsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetRequirementsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, class__),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, class__),
           offsetof(Impl_, race_) -
               offsetof(Impl_, class__) +
               sizeof(Impl_::race_));

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.GetRequirementsRequest)
}
PROTOBUF_NDEBUG_INLINE GetRequirementsRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        draft_id_(arena) {}

inline void GetRequirementsRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, class__),
           0,
           offsetof(Impl_, race_) -
               offsetof(Impl_, class__) +
               sizeof(Impl_::race_));
}
GetRequirementsRequest::~GetRequirementsRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.GetRequirementsRequest)
  SharedDtor(*this);
}
inline void GetRequirementsRequest::SharedDtor(MessageLite& self) {
  GetRequirementsRequest& this_ = static_cast<GetRequirementsRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.draft_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetRequirementsRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetRequirementsRequest(arena);
}
constexpr auto GetRequirementsRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetRequirementsRequest),
                                            alignof(GetRequirementsRequest));
}
constexpr auto GetRequirementsRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetRequirementsRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetRequirementsRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetRequirementsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetRequirementsRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetRequirementsRequest>(), &GetRequirementsRequest::ByteSizeLong,
              &GetRequirementsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetRequirementsRequest, _impl_._cached_size_),
          false,
      },
      &GetRequirementsRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetRequirementsRequest_class_data_ =
        GetRequirementsRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetRequirementsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetRequirementsRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetRequirementsRequest_class_data_.tc_table);
  return GetRequirementsRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 58, 2>
GetRequirementsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetRequirementsRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetRequirementsRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::GetRequirementsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string draft_id = 1 [json_name = "draftId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetRequirementsRequest, _impl_.draft_id_)}},
    // .dnd5e.api.v1alpha1.Class class = 2 [json_name = "class"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetRequirementsRequest, _impl_.class__), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(GetRequirementsRequest, _impl_.class__)}},
    // .dnd5e.api.v1alpha1.Race race = 3 [json_name = "race"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetRequirementsRequest, _impl_.race_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(GetRequirementsRequest, _impl_.race_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string draft_id = 1 [json_name = "draftId"];
    {PROTOBUF_FIELD_OFFSET(GetRequirementsRequest, _impl_.draft_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .dnd5e.api.v1alpha1.Class class = 2 [json_name = "class"];
    {PROTOBUF_FIELD_OFFSET(GetRequirementsRequest, _impl_.class__), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.Race race = 3 [json_name = "race"];
    {PROTOBUF_FIELD_OFFSET(GetRequirementsRequest, _impl_.race_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\51\10\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.GetRequirementsRequest"
    "draft_id"
  }},
};
PROTOBUF_NOINLINE void GetRequirementsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.GetRequirementsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.draft_id_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x00000006U) != 0) {
    ::memset(&_impl_.class__, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.race_) -
        reinterpret_cast<char*>(&_impl_.class__)) + sizeof(_impl_.race_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetRequirementsRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetRequirementsRequest& this_ = static_cast<const GetRequirementsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetRequirementsRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetRequirementsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.GetRequirementsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string draft_id = 1 [json_name = "draftId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_draft_id().empty()) {
      const ::std::string& _s = this_._internal_draft_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.GetRequirementsRequest.draft_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // .dnd5e.api.v1alpha1.Class class = 2 [json_name = "class"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_class_() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_class_(), target);
    }
  }

  // .dnd5e.api.v1alpha1.Race race = 3 [json_name = "race"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_race() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_race(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.GetRequirementsRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetRequirementsRequest::ByteSizeLong(const MessageLite& base) {
  const GetRequirementsRequest& this_ = static_cast<const GetRequirementsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetRequirementsRequest::ByteSizeLong() const {
  const GetRequirementsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.GetRequirementsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string draft_id = 1 [json_name = "draftId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_draft_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_draft_id());
      }
    }
    // .dnd5e.api.v1alpha1.Class class = 2 [json_name = "class"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_class_() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_class_());
      }
    }
    // .dnd5e.api.v1alpha1.Race race = 3 [json_name = "race"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_race() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_race());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetRequirementsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetRequirementsRequest*>(&to_msg);
  auto& from = static_cast<const GetRequirementsRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.GetRequirementsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_draft_id().empty()) {
        _this->_internal_set_draft_id(from._internal_draft_id());
      } else {
        if (_this->_impl_.draft_id_.IsDefault()) {
          _this->_internal_set_draft_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_class_() != 0) {
        _this->_impl_.class__ = from._impl_.class__;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_race() != 0) {
        _this->_impl_.race_ = from._impl_.race_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetRequirementsRequest::CopyFrom(const GetRequirementsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.GetRequirementsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetRequirementsRequest::InternalSwap(GetRequirementsRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.draft_id_, &other->_impl_.draft_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetRequirementsRequest, _impl_.race_)
      + sizeof(GetRequirementsRequest::_impl_.race_)
      - PROTOBUF_FIELD_OFFSET(GetRequirementsRequest, _impl_.class__)>(
          reinterpret_cast<char*>(&_impl_.class__),
          reinterpret_cast<char*>(&other->_impl_.class__));
}

::google::protobuf::Metadata GetRequirementsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetRequirementsResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetRequirementsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetRequirementsResponse, _impl_._has_bits_);
};

GetRequirementsResponse::GetRequirementsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetRequirementsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.GetRequirementsResponse)
}
PROTOBUF_NDEBUG_INLINE GetRequirementsResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::GetRequirementsResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetRequirementsResponse::GetRequirementsResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetRequirementsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetRequirementsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetRequirementsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.requirements_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.requirements_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.GetRequirementsResponse)
}
PROTOBUF_NDEBUG_INLINE GetRequirementsResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void GetRequirementsResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.requirements_ = {};
}
GetRequirementsResponse::~GetRequirementsResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.GetRequirementsResponse)
  SharedDtor(*this);
}
inline void GetRequirementsResponse::SharedDtor(MessageLite& self) {
  GetRequirementsResponse& this_ = static_cast<GetRequirementsResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.requirements_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetRequirementsResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetRequirementsResponse(arena);
}
constexpr auto GetRequirementsResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetRequirementsResponse),
                                            alignof(GetRequirementsResponse));
}
constexpr auto GetRequirementsResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetRequirementsResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetRequirementsResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetRequirementsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetRequirementsResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetRequirementsResponse>(), &GetRequirementsResponse::ByteSizeLong,
              &GetRequirementsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetRequirementsResponse, _impl_._cached_size_),
          false,
      },
      &GetRequirementsResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetRequirementsResponse_class_data_ =
        GetRequirementsResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetRequirementsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetRequirementsResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetRequirementsResponse_class_data_.tc_table);
  return GetRequirementsResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
GetRequirementsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetRequirementsResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetRequirementsResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::GetRequirementsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .dnd5e.api.v1alpha1.CharacterRequirements requirements = 1 [json_name = "requirements"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetRequirementsResponse, _impl_.requirements_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.CharacterRequirements requirements = 1 [json_name = "requirements"];
    {PROTOBUF_FIELD_OFFSET(GetRequirementsResponse, _impl_.requirements_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CharacterRequirements>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void GetRequirementsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.GetRequirementsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.requirements_ != nullptr);
    _impl_.requirements_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetRequirementsResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetRequirementsResponse& this_ = static_cast<const GetRequirementsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetRequirementsResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetRequirementsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.GetRequirementsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.CharacterRequirements requirements = 1 [json_name = "requirements"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.requirements_, this_._impl_.requirements_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.GetRequirementsResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetRequirementsResponse::ByteSizeLong(const MessageLite& base) {
  const GetRequirementsResponse& this_ = static_cast<const GetRequirementsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetRequirementsResponse::ByteSizeLong() const {
  const GetRequirementsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.GetRequirementsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .dnd5e.api.v1alpha1.CharacterRequirements requirements = 1 [json_name = "requirements"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.requirements_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetRequirementsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetRequirementsResponse*>(&to_msg);
  auto& from = static_cast<const GetRequirementsResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.GetRequirementsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(from._impl_.requirements_ != nullptr);
    if (_this->_impl_.requirements_ == nullptr) {
      _this->_impl_.requirements_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.requirements_);
    } else {
      _this->_impl_.requirements_->MergeFrom(*from._impl_.requirements_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetRequirementsResponse::CopyFrom(const GetRequirementsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.GetRequirementsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetRequirementsResponse::InternalSwap(GetRequirementsResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.requirements_, other->_impl_.requirements_);
}

::google::protobuf::Metadata GetRequirementsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubmitChoicesRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SubmitChoicesRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubmitChoicesRequest, _impl_._has_bits_);
};

SubmitChoicesRequest::SubmitChoicesRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubmitChoicesRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.SubmitChoicesRequest)
}
PROTOBUF_NDEBUG_INLINE SubmitChoicesRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::SubmitChoicesRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        submissions_{visibility, arena, from.submissions_},
        draft_id_(arena, from.draft_id_) {}

SubmitChoicesRequest::SubmitChoicesRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SubmitChoicesRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubmitChoicesRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubmitChoicesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.SubmitChoicesRequest)
}
PROTOBUF_NDEBUG_INLINE SubmitChoicesRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        submissions_{visibility, arena},
        draft_id_(arena) {}

inline void SubmitChoicesRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SubmitChoicesRequest::~SubmitChoicesRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.SubmitChoicesRequest)
  SharedDtor(*this);
}
inline void SubmitChoicesRequest::SharedDtor(MessageLite& self) {
  SubmitChoicesRequest& this_ = static_cast<SubmitChoicesRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.draft_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SubmitChoicesRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubmitChoicesRequest(arena);
}
constexpr auto SubmitChoicesRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SubmitChoicesRequest, _impl_.submissions_) +
          decltype(SubmitChoicesRequest::_impl_.submissions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SubmitChoicesRequest), alignof(SubmitChoicesRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SubmitChoicesRequest::PlacementNew_,
                                 sizeof(SubmitChoicesRequest),
                                 alignof(SubmitChoicesRequest));
  }
}
constexpr auto SubmitChoicesRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubmitChoicesRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubmitChoicesRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubmitChoicesRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubmitChoicesRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SubmitChoicesRequest>(), &SubmitChoicesRequest::ByteSizeLong,
              &SubmitChoicesRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubmitChoicesRequest, _impl_._cached_size_),
          false,
      },
      &SubmitChoicesRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubmitChoicesRequest_class_data_ =
        SubmitChoicesRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubmitChoicesRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubmitChoicesRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubmitChoicesRequest_class_data_.tc_table);
  return SubmitChoicesRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 56, 2>
SubmitChoicesRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubmitChoicesRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SubmitChoicesRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::SubmitChoicesRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dnd5e.api.v1alpha1.ChoiceSubmission submissions = 2 [json_name = "submissions"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SubmitChoicesRequest, _impl_.submissions_)}},
    // string draft_id = 1 [json_name = "draftId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SubmitChoicesRequest, _impl_.draft_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string draft_id = 1 [json_name = "draftId"];
    {PROTOBUF_FIELD_OFFSET(SubmitChoicesRequest, _impl_.draft_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .dnd5e.api.v1alpha1.ChoiceSubmission submissions = 2 [json_name = "submissions"];
    {PROTOBUF_FIELD_OFFSET(SubmitChoicesRequest, _impl_.submissions_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ChoiceSubmission>()},
  }},
  {{
    "\47\10\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.SubmitChoicesRequest"
    "draft_id"
  }},
};
PROTOBUF_NOINLINE void SubmitChoicesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.SubmitChoicesRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.submissions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.draft_id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SubmitChoicesRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SubmitChoicesRequest& this_ = static_cast<const SubmitChoicesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SubmitChoicesRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SubmitChoicesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.SubmitChoicesRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string draft_id = 1 [json_name = "draftId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_draft_id().empty()) {
      const ::std::string& _s = this_._internal_draft_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.SubmitChoicesRequest.draft_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.ChoiceSubmission submissions = 2 [json_name = "submissions"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_submissions_size());
       i < n; i++) {
    const auto& repfield = this_._internal_submissions().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.SubmitChoicesRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SubmitChoicesRequest::ByteSizeLong(const MessageLite& base) {
  const SubmitChoicesRequest& this_ = static_cast<const SubmitChoicesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SubmitChoicesRequest::ByteSizeLong() const {
  const SubmitChoicesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.SubmitChoicesRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.ChoiceSubmission submissions = 2 [json_name = "submissions"];
    {
      total_size += 1UL * this_._internal_submissions_size();
      for (const auto& msg : this_._internal_submissions()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // string draft_id = 1 [json_name = "draftId"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_draft_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_draft_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SubmitChoicesRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubmitChoicesRequest*>(&to_msg);
  auto& from = static_cast<const SubmitChoicesRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.SubmitChoicesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_submissions()->MergeFrom(
      from._internal_submissions());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!from._internal_draft_id().empty()) {
      _this->_internal_set_draft_id(from._internal_draft_id());
    } else {
      if (_this->_impl_.draft_id_.IsDefault()) {
        _this->_internal_set_draft_id("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubmitChoicesRequest::CopyFrom(const SubmitChoicesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.SubmitChoicesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubmitChoicesRequest::InternalSwap(SubmitChoicesRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.submissions_.InternalSwap(&other->_impl_.submissions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.draft_id_, &other->_impl_.draft_id_, arena);
}

::google::protobuf::Metadata SubmitChoicesRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubmitChoicesResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SubmitChoicesResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubmitChoicesResponse, _impl_._has_bits_);
};

void SubmitChoicesResponse::clear_validation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.validation_ != nullptr) _impl_.validation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
SubmitChoicesResponse::SubmitChoicesResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubmitChoicesResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.SubmitChoicesResponse)
}
PROTOBUF_NDEBUG_INLINE SubmitChoicesResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::SubmitChoicesResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SubmitChoicesResponse::SubmitChoicesResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SubmitChoicesResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubmitChoicesResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubmitChoicesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.draft_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.draft_)
                : nullptr;
  _impl_.validation_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.validation_)
                : nullptr;
  _impl_.remaining_requirements_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.remaining_requirements_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.SubmitChoicesResponse)
}
PROTOBUF_NDEBUG_INLINE SubmitChoicesResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SubmitChoicesResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, draft_),
           0,
           offsetof(Impl_, remaining_requirements_) -
               offsetof(Impl_, draft_) +
               sizeof(Impl_::remaining_requirements_));
}
SubmitChoicesResponse::~SubmitChoicesResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.SubmitChoicesResponse)
  SharedDtor(*this);
}
inline void SubmitChoicesResponse::SharedDtor(MessageLite& self) {
  SubmitChoicesResponse& this_ = static_cast<SubmitChoicesResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.draft_;
  delete this_._impl_.validation_;
  delete this_._impl_.remaining_requirements_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SubmitChoicesResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubmitChoicesResponse(arena);
}
constexpr auto SubmitChoicesResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubmitChoicesResponse),
                                            alignof(SubmitChoicesResponse));
}
constexpr auto SubmitChoicesResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubmitChoicesResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubmitChoicesResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubmitChoicesResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubmitChoicesResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SubmitChoicesResponse>(), &SubmitChoicesResponse::ByteSizeLong,
              &SubmitChoicesResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubmitChoicesResponse, _impl_._cached_size_),
          false,
      },
      &SubmitChoicesResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubmitChoicesResponse_class_data_ =
        SubmitChoicesResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubmitChoicesResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubmitChoicesResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubmitChoicesResponse_class_data_.tc_table);
  return SubmitChoicesResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
SubmitChoicesResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubmitChoicesResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SubmitChoicesResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::SubmitChoicesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SubmitChoicesResponse, _impl_.draft_)}},
    // .dnd5e.api.v1alpha1.ValidationResult validation = 2 [json_name = "validation"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(SubmitChoicesResponse, _impl_.validation_)}},
    // .dnd5e.api.v1alpha1.CharacterRequirements remaining_requirements = 3 [json_name = "remainingRequirements"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(SubmitChoicesResponse, _impl_.remaining_requirements_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
    {PROTOBUF_FIELD_OFFSET(SubmitChoicesResponse, _impl_.draft_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.ValidationResult validation = 2 [json_name = "validation"];
    {PROTOBUF_FIELD_OFFSET(SubmitChoicesResponse, _impl_.validation_), _Internal::kHasBitsOffset + 1, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.CharacterRequirements remaining_requirements = 3 [json_name = "remainingRequirements"];
    {PROTOBUF_FIELD_OFFSET(SubmitChoicesResponse, _impl_.remaining_requirements_), _Internal::kHasBitsOffset + 2, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CharacterDraft>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ValidationResult>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CharacterRequirements>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SubmitChoicesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.SubmitChoicesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.draft_ != nullptr);
      _impl_.draft_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.validation_ != nullptr);
      _impl_.validation_->Clear();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.remaining_requirements_ != nullptr);
      _impl_.remaining_requirements_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SubmitChoicesResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SubmitChoicesResponse& this_ = static_cast<const SubmitChoicesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SubmitChoicesResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SubmitChoicesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.SubmitChoicesResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.draft_, this_._impl_.draft_->GetCachedSize(), target,
        stream);
  }

  // .dnd5e.api.v1alpha1.ValidationResult validation = 2 [json_name = "validation"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.validation_, this_._impl_.validation_->GetCachedSize(), target,
        stream);
  }

  // .dnd5e.api.v1alpha1.CharacterRequirements remaining_requirements = 3 [json_name = "remainingRequirements"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.remaining_requirements_, this_._impl_.remaining_requirements_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.SubmitChoicesResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SubmitChoicesResponse::ByteSizeLong(const MessageLite& base) {
  const SubmitChoicesResponse& this_ = static_cast<const SubmitChoicesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SubmitChoicesResponse::ByteSizeLong() const {
  const SubmitChoicesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.SubmitChoicesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // .dnd5e.api.v1alpha1.CharacterDraft draft = 1 [json_name = "draft"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.draft_);
    }
    // .dnd5e.api.v1alpha1.ValidationResult validation = 2 [json_name = "validation"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.validation_);
    }
    // .dnd5e.api.v1alpha1.CharacterRequirements remaining_requirements = 3 [json_name = "remainingRequirements"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.remaining_requirements_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SubmitChoicesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubmitChoicesResponse*>(&to_msg);
  auto& from = static_cast<const SubmitChoicesResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.SubmitChoicesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.draft_ != nullptr);
      if (_this->_impl_.draft_ == nullptr) {
        _this->_impl_.draft_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.draft_);
      } else {
        _this->_impl_.draft_->MergeFrom(*from._impl_.draft_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.validation_ != nullptr);
      if (_this->_impl_.validation_ == nullptr) {
        _this->_impl_.validation_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.validation_);
      } else {
        _this->_impl_.validation_->MergeFrom(*from._impl_.validation_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.remaining_requirements_ != nullptr);
      if (_this->_impl_.remaining_requirements_ == nullptr) {
        _this->_impl_.remaining_requirements_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.remaining_requirements_);
      } else {
        _this->_impl_.remaining_requirements_->MergeFrom(*from._impl_.remaining_requirements_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubmitChoicesResponse::CopyFrom(const SubmitChoicesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.SubmitChoicesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubmitChoicesResponse::InternalSwap(SubmitChoicesResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubmitChoicesResponse, _impl_.remaining_requirements_)
      + sizeof(SubmitChoicesResponse::_impl_.remaining_requirements_)
      - PROTOBUF_FIELD_OFFSET(SubmitChoicesResponse, _impl_.draft_)>(
          reinterpret_cast<char*>(&_impl_.draft_),
          reinterpret_cast<char*>(&other->_impl_.draft_));
}

::google::protobuf::Metadata SubmitChoicesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RollAssignments::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RollAssignments>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RollAssignments, _impl_._has_bits_);
};

RollAssignments::RollAssignments(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RollAssignments_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.RollAssignments)
}
PROTOBUF_NDEBUG_INLINE RollAssignments::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::RollAssignments& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        strength_roll_id_(arena, from.strength_roll_id_),
        dexterity_roll_id_(arena, from.dexterity_roll_id_),
        constitution_roll_id_(arena, from.constitution_roll_id_),
        intelligence_roll_id_(arena, from.intelligence_roll_id_),
        wisdom_roll_id_(arena, from.wisdom_roll_id_),
        charisma_roll_id_(arena, from.charisma_roll_id_) {}

RollAssignments::RollAssignments(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RollAssignments& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RollAssignments_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RollAssignments* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.RollAssignments)
}
PROTOBUF_NDEBUG_INLINE RollAssignments::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        strength_roll_id_(arena),
        dexterity_roll_id_(arena),
        constitution_roll_id_(arena),
        intelligence_roll_id_(arena),
        wisdom_roll_id_(arena),
        charisma_roll_id_(arena) {}

inline void RollAssignments::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RollAssignments::~RollAssignments() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.RollAssignments)
  SharedDtor(*this);
}
inline void RollAssignments::SharedDtor(MessageLite& self) {
  RollAssignments& this_ = static_cast<RollAssignments&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.strength_roll_id_.Destroy();
  this_._impl_.dexterity_roll_id_.Destroy();
  this_._impl_.constitution_roll_id_.Destroy();
  this_._impl_.intelligence_roll_id_.Destroy();
  this_._impl_.wisdom_roll_id_.Destroy();
  this_._impl_.charisma_roll_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RollAssignments::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RollAssignments(arena);
}
constexpr auto RollAssignments::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RollAssignments),
                                            alignof(RollAssignments));
}
constexpr auto RollAssignments::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RollAssignments_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RollAssignments::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RollAssignments>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RollAssignments::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RollAssignments>(), &RollAssignments::ByteSizeLong,
              &RollAssignments::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RollAssignments, _impl_._cached_size_),
          false,
      },
      &RollAssignments::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RollAssignments_class_data_ =
        RollAssignments::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RollAssignments::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RollAssignments_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RollAssignments_class_data_.tc_table);
  return RollAssignments_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 146, 2>
RollAssignments::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RollAssignments, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RollAssignments_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::RollAssignments>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string strength_roll_id = 1 [json_name = "strengthRollId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RollAssignments, _impl_.strength_roll_id_)}},
    // string dexterity_roll_id = 2 [json_name = "dexterityRollId"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(RollAssignments, _impl_.dexterity_roll_id_)}},
    // string constitution_roll_id = 3 [json_name = "constitutionRollId"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(RollAssignments, _impl_.constitution_roll_id_)}},
    // string intelligence_roll_id = 4 [json_name = "intelligenceRollId"];
    {::_pbi::TcParser::FastUS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(RollAssignments, _impl_.intelligence_roll_id_)}},
    // string wisdom_roll_id = 5 [json_name = "wisdomRollId"];
    {::_pbi::TcParser::FastUS1,
     {42, 4, 0, PROTOBUF_FIELD_OFFSET(RollAssignments, _impl_.wisdom_roll_id_)}},
    // string charisma_roll_id = 6 [json_name = "charismaRollId"];
    {::_pbi::TcParser::FastUS1,
     {50, 5, 0, PROTOBUF_FIELD_OFFSET(RollAssignments, _impl_.charisma_roll_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string strength_roll_id = 1 [json_name = "strengthRollId"];
    {PROTOBUF_FIELD_OFFSET(RollAssignments, _impl_.strength_roll_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string dexterity_roll_id = 2 [json_name = "dexterityRollId"];
    {PROTOBUF_FIELD_OFFSET(RollAssignments, _impl_.dexterity_roll_id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string constitution_roll_id = 3 [json_name = "constitutionRollId"];
    {PROTOBUF_FIELD_OFFSET(RollAssignments, _impl_.constitution_roll_id_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string intelligence_roll_id = 4 [json_name = "intelligenceRollId"];
    {PROTOBUF_FIELD_OFFSET(RollAssignments, _impl_.intelligence_roll_id_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string wisdom_roll_id = 5 [json_name = "wisdomRollId"];
    {PROTOBUF_FIELD_OFFSET(RollAssignments, _impl_.wisdom_roll_id_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string charisma_roll_id = 6 [json_name = "charismaRollId"];
    {PROTOBUF_FIELD_OFFSET(RollAssignments, _impl_.charisma_roll_id_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\20\21\24\24\16\20\0"
    "dnd5e.api.v1alpha1.RollAssignments"
    "strength_roll_id"
    "dexterity_roll_id"
    "constitution_roll_id"
    "intelligence_roll_id"
    "wisdom_roll_id"
    "charisma_roll_id"
  }},
};
PROTOBUF_NOINLINE void RollAssignments::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.RollAssignments)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.strength_roll_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.dexterity_roll_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.constitution_roll_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.intelligence_roll_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      _impl_.wisdom_roll_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      _impl_.charisma_roll_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RollAssignments::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RollAssignments& this_ = static_cast<const RollAssignments&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RollAssignments::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RollAssignments& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.RollAssignments)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string strength_roll_id = 1 [json_name = "strengthRollId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_strength_roll_id().empty()) {
      const ::std::string& _s = this_._internal_strength_roll_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.RollAssignments.strength_roll_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string dexterity_roll_id = 2 [json_name = "dexterityRollId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_dexterity_roll_id().empty()) {
      const ::std::string& _s = this_._internal_dexterity_roll_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.RollAssignments.dexterity_roll_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string constitution_roll_id = 3 [json_name = "constitutionRollId"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_constitution_roll_id().empty()) {
      const ::std::string& _s = this_._internal_constitution_roll_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.RollAssignments.constitution_roll_id");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string intelligence_roll_id = 4 [json_name = "intelligenceRollId"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (!this_._internal_intelligence_roll_id().empty()) {
      const ::std::string& _s = this_._internal_intelligence_roll_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.RollAssignments.intelligence_roll_id");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // string wisdom_roll_id = 5 [json_name = "wisdomRollId"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (!this_._internal_wisdom_roll_id().empty()) {
      const ::std::string& _s = this_._internal_wisdom_roll_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.RollAssignments.wisdom_roll_id");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  // string charisma_roll_id = 6 [json_name = "charismaRollId"];
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (!this_._internal_charisma_roll_id().empty()) {
      const ::std::string& _s = this_._internal_charisma_roll_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.RollAssignments.charisma_roll_id");
      target = stream->WriteStringMaybeAliased(6, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.RollAssignments)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RollAssignments::ByteSizeLong(const MessageLite& base) {
  const RollAssignments& this_ = static_cast<const RollAssignments&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RollAssignments::ByteSizeLong() const {
  const RollAssignments& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.RollAssignments)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    // string strength_roll_id = 1 [json_name = "strengthRollId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_strength_roll_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_strength_roll_id());
      }
    }
    // string dexterity_roll_id = 2 [json_name = "dexterityRollId"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_dexterity_roll_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_dexterity_roll_id());
      }
    }
    // string constitution_roll_id = 3 [json_name = "constitutionRollId"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_constitution_roll_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_constitution_roll_id());
      }
    }
    // string intelligence_roll_id = 4 [json_name = "intelligenceRollId"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_intelligence_roll_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_intelligence_roll_id());
      }
    }
    // string wisdom_roll_id = 5 [json_name = "wisdomRollId"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (!this_._internal_wisdom_roll_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_wisdom_roll_id());
      }
    }
    // string charisma_roll_id = 6 [json_name = "charismaRollId"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (!this_._internal_charisma_roll_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_charisma_roll_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RollAssignments::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RollAssignments*>(&to_msg);
  auto& from = static_cast<const RollAssignments&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.RollAssignments)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_strength_roll_id().empty()) {
        _this->_internal_set_strength_roll_id(from._internal_strength_roll_id());
      } else {
        if (_this->_impl_.strength_roll_id_.IsDefault()) {
          _this->_internal_set_strength_roll_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_dexterity_roll_id().empty()) {
        _this->_internal_set_dexterity_roll_id(from._internal_dexterity_roll_id());
      } else {
        if (_this->_impl_.dexterity_roll_id_.IsDefault()) {
          _this->_internal_set_dexterity_roll_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_constitution_roll_id().empty()) {
        _this->_internal_set_constitution_roll_id(from._internal_constitution_roll_id());
      } else {
        if (_this->_impl_.constitution_roll_id_.IsDefault()) {
          _this->_internal_set_constitution_roll_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_intelligence_roll_id().empty()) {
        _this->_internal_set_intelligence_roll_id(from._internal_intelligence_roll_id());
      } else {
        if (_this->_impl_.intelligence_roll_id_.IsDefault()) {
          _this->_internal_set_intelligence_roll_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (!from._internal_wisdom_roll_id().empty()) {
        _this->_internal_set_wisdom_roll_id(from._internal_wisdom_roll_id());
      } else {
        if (_this->_impl_.wisdom_roll_id_.IsDefault()) {
          _this->_internal_set_wisdom_roll_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (!from._internal_charisma_roll_id().empty()) {
        _this->_internal_set_charisma_roll_id(from._internal_charisma_roll_id());
      } else {
        if (_this->_impl_.charisma_roll_id_.IsDefault()) {
          _this->_internal_set_charisma_roll_id("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RollAssignments::CopyFrom(const RollAssignments& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.RollAssignments)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RollAssignments::InternalSwap(RollAssignments* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.strength_roll_id_, &other->_impl_.strength_roll_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dexterity_roll_id_, &other->_impl_.dexterity_roll_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.constitution_roll_id_, &other->_impl_.constitution_roll_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.intelligence_roll_id_, &other->_impl_.intelligence_roll_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.wisdom_roll_id_, &other->_impl_.wisdom_roll_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.charisma_roll_id_, &other->_impl_.charisma_roll_id_, arena);
}

::google::protobuf::Metadata RollAssignments::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Cost::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Cost>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Cost, _impl_._has_bits_);
};

Cost::Cost(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Cost_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.Cost)
}
PROTOBUF_NDEBUG_INLINE Cost::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::Cost& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        unit_(arena, from.unit_) {}

Cost::Cost(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Cost& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Cost_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Cost* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.quantity_ = from._impl_.quantity_;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.Cost)
}
PROTOBUF_NDEBUG_INLINE Cost::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        unit_(arena) {}

inline void Cost::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.quantity_ = {};
}
Cost::~Cost() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.Cost)
  SharedDtor(*this);
}
inline void Cost::SharedDtor(MessageLite& self) {
  Cost& this_ = static_cast<Cost&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.unit_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Cost::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Cost(arena);
}
constexpr auto Cost::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Cost),
                                            alignof(Cost));
}
constexpr auto Cost::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Cost_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Cost::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Cost>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Cost::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Cost>(), &Cost::ByteSizeLong,
              &Cost::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Cost, _impl_._cached_size_),
          false,
      },
      &Cost::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Cost_class_data_ =
        Cost::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Cost::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Cost_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Cost_class_data_.tc_table);
  return Cost_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 36, 2>
Cost::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Cost, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Cost_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::Cost>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string unit = 2 [json_name = "unit"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Cost, _impl_.unit_)}},
    // int32 quantity = 1 [json_name = "quantity"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Cost, _impl_.quantity_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(Cost, _impl_.quantity_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 quantity = 1 [json_name = "quantity"];
    {PROTOBUF_FIELD_OFFSET(Cost, _impl_.quantity_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string unit = 2 [json_name = "unit"];
    {PROTOBUF_FIELD_OFFSET(Cost, _impl_.unit_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\0\4\0\0\0\0\0"
    "dnd5e.api.v1alpha1.Cost"
    "unit"
  }},
};
PROTOBUF_NOINLINE void Cost::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.Cost)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.unit_.ClearNonDefaultToEmpty();
  }
  _impl_.quantity_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Cost::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Cost& this_ = static_cast<const Cost&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Cost::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Cost& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.Cost)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 quantity = 1 [json_name = "quantity"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_quantity() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_quantity(), target);
    }
  }

  // string unit = 2 [json_name = "unit"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_unit().empty()) {
      const ::std::string& _s = this_._internal_unit();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.Cost.unit");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.Cost)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Cost::ByteSizeLong(const MessageLite& base) {
  const Cost& this_ = static_cast<const Cost&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Cost::ByteSizeLong() const {
  const Cost& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.Cost)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string unit = 2 [json_name = "unit"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_unit().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_unit());
      }
    }
    // int32 quantity = 1 [json_name = "quantity"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_quantity() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_quantity());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Cost::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Cost*>(&to_msg);
  auto& from = static_cast<const Cost&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.Cost)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_unit().empty()) {
        _this->_internal_set_unit(from._internal_unit());
      } else {
        if (_this->_impl_.unit_.IsDefault()) {
          _this->_internal_set_unit("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_quantity() != 0) {
        _this->_impl_.quantity_ = from._impl_.quantity_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Cost::CopyFrom(const Cost& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.Cost)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Cost::InternalSwap(Cost* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.unit_, &other->_impl_.unit_, arena);
  swap(_impl_.quantity_, other->_impl_.quantity_);
}

::google::protobuf::Metadata Cost::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Weight::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Weight>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Weight, _impl_._has_bits_);
};

Weight::Weight(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Weight_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.Weight)
}
PROTOBUF_NDEBUG_INLINE Weight::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::Weight& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        unit_(arena, from.unit_) {}

Weight::Weight(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Weight& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Weight_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Weight* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.quantity_ = from._impl_.quantity_;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.Weight)
}
PROTOBUF_NDEBUG_INLINE Weight::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        unit_(arena) {}

inline void Weight::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.quantity_ = {};
}
Weight::~Weight() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.Weight)
  SharedDtor(*this);
}
inline void Weight::SharedDtor(MessageLite& self) {
  Weight& this_ = static_cast<Weight&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.unit_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Weight::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Weight(arena);
}
constexpr auto Weight::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Weight),
                                            alignof(Weight));
}
constexpr auto Weight::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Weight_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Weight::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Weight>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Weight::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Weight>(), &Weight::ByteSizeLong,
              &Weight::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Weight, _impl_._cached_size_),
          false,
      },
      &Weight::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Weight_class_data_ =
        Weight::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Weight::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Weight_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Weight_class_data_.tc_table);
  return Weight_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 38, 2>
Weight::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Weight, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Weight_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::Weight>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string unit = 2 [json_name = "unit"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Weight, _impl_.unit_)}},
    // int32 quantity = 1 [json_name = "quantity"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Weight, _impl_.quantity_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(Weight, _impl_.quantity_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 quantity = 1 [json_name = "quantity"];
    {PROTOBUF_FIELD_OFFSET(Weight, _impl_.quantity_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string unit = 2 [json_name = "unit"];
    {PROTOBUF_FIELD_OFFSET(Weight, _impl_.unit_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\0\4\0\0\0\0\0"
    "dnd5e.api.v1alpha1.Weight"
    "unit"
  }},
};
PROTOBUF_NOINLINE void Weight::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.Weight)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.unit_.ClearNonDefaultToEmpty();
  }
  _impl_.quantity_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Weight::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Weight& this_ = static_cast<const Weight&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Weight::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Weight& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.Weight)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 quantity = 1 [json_name = "quantity"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_quantity() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_quantity(), target);
    }
  }

  // string unit = 2 [json_name = "unit"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_unit().empty()) {
      const ::std::string& _s = this_._internal_unit();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.Weight.unit");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.Weight)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Weight::ByteSizeLong(const MessageLite& base) {
  const Weight& this_ = static_cast<const Weight&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Weight::ByteSizeLong() const {
  const Weight& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.Weight)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string unit = 2 [json_name = "unit"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_unit().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_unit());
      }
    }
    // int32 quantity = 1 [json_name = "quantity"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_quantity() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_quantity());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Weight::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Weight*>(&to_msg);
  auto& from = static_cast<const Weight&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.Weight)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_unit().empty()) {
        _this->_internal_set_unit(from._internal_unit());
      } else {
        if (_this->_impl_.unit_.IsDefault()) {
          _this->_internal_set_unit("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_quantity() != 0) {
        _this->_impl_.quantity_ = from._impl_.quantity_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Weight::CopyFrom(const Weight& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.Weight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Weight::InternalSwap(Weight* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.unit_, &other->_impl_.unit_, arena);
  swap(_impl_.quantity_, other->_impl_.quantity_);
}

::google::protobuf::Metadata Weight::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Equipment::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Equipment>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Equipment, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::Equipment, _impl_._oneof_case_);
};

void Equipment::set_allocated_weapon_data(::dnd5e::api::v1alpha1::WeaponData* PROTOBUF_NULLABLE weapon_data) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_equipment_data();
  if (weapon_data) {
    ::google::protobuf::Arena* submessage_arena = weapon_data->GetArena();
    if (message_arena != submessage_arena) {
      weapon_data = ::google::protobuf::internal::GetOwnedMessage(message_arena, weapon_data, submessage_arena);
    }
    set_has_weapon_data();
    _impl_.equipment_data_.weapon_data_ = weapon_data;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.Equipment.weapon_data)
}
void Equipment::set_allocated_armor_data(::dnd5e::api::v1alpha1::ArmorData* PROTOBUF_NULLABLE armor_data) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_equipment_data();
  if (armor_data) {
    ::google::protobuf::Arena* submessage_arena = armor_data->GetArena();
    if (message_arena != submessage_arena) {
      armor_data = ::google::protobuf::internal::GetOwnedMessage(message_arena, armor_data, submessage_arena);
    }
    set_has_armor_data();
    _impl_.equipment_data_.armor_data_ = armor_data;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.Equipment.armor_data)
}
void Equipment::set_allocated_gear_data(::dnd5e::api::v1alpha1::GearData* PROTOBUF_NULLABLE gear_data) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_equipment_data();
  if (gear_data) {
    ::google::protobuf::Arena* submessage_arena = gear_data->GetArena();
    if (message_arena != submessage_arena) {
      gear_data = ::google::protobuf::internal::GetOwnedMessage(message_arena, gear_data, submessage_arena);
    }
    set_has_gear_data();
    _impl_.equipment_data_.gear_data_ = gear_data;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.Equipment.gear_data)
}
Equipment::Equipment(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Equipment_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.Equipment)
}
PROTOBUF_NDEBUG_INLINE Equipment::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::Equipment& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_),
        name_(arena, from.name_),
        description_(arena, from.description_),
        equipment_data_{},
        _oneof_case_{from._oneof_case_[0]} {}

Equipment::Equipment(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Equipment& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Equipment_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Equipment* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.cost_ = ((cached_has_bits & 0x00000008U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.cost_)
                : nullptr;
  _impl_.weight_ = ((cached_has_bits & 0x00000010U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.weight_)
                : nullptr;
  _impl_.category_ = from._impl_.category_;
  switch (equipment_data_case()) {
    case EQUIPMENT_DATA_NOT_SET:
      break;
      case kWeaponData:
        _impl_.equipment_data_.weapon_data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.equipment_data_.weapon_data_);
        break;
      case kArmorData:
        _impl_.equipment_data_.armor_data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.equipment_data_.armor_data_);
        break;
      case kGearData:
        _impl_.equipment_data_.gear_data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.equipment_data_.gear_data_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.Equipment)
}
PROTOBUF_NDEBUG_INLINE Equipment::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        id_(arena),
        name_(arena),
        description_(arena),
        equipment_data_{},
        _oneof_case_{} {}

inline void Equipment::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cost_),
           0,
           offsetof(Impl_, category_) -
               offsetof(Impl_, cost_) +
               sizeof(Impl_::category_));
}
Equipment::~Equipment() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.Equipment)
  SharedDtor(*this);
}
inline void Equipment::SharedDtor(MessageLite& self) {
  Equipment& this_ = static_cast<Equipment&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.description_.Destroy();
  delete this_._impl_.cost_;
  delete this_._impl_.weight_;
  if (this_.has_equipment_data()) {
    this_.clear_equipment_data();
  }
  this_._impl_.~Impl_();
}

void Equipment::clear_equipment_data() {
// @@protoc_insertion_point(one_of_clear_start:dnd5e.api.v1alpha1.Equipment)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (equipment_data_case()) {
    case kWeaponData: {
      if (GetArena() == nullptr) {
        delete _impl_.equipment_data_.weapon_data_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.equipment_data_.weapon_data_);
      }
      break;
    }
    case kArmorData: {
      if (GetArena() == nullptr) {
        delete _impl_.equipment_data_.armor_data_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.equipment_data_.armor_data_);
      }
      break;
    }
    case kGearData: {
      if (GetArena() == nullptr) {
        delete _impl_.equipment_data_.gear_data_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.equipment_data_.gear_data_);
      }
      break;
    }
    case EQUIPMENT_DATA_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = EQUIPMENT_DATA_NOT_SET;
}


inline void* PROTOBUF_NONNULL Equipment::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Equipment(arena);
}
constexpr auto Equipment::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Equipment),
                                            alignof(Equipment));
}
constexpr auto Equipment::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Equipment_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Equipment::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Equipment>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Equipment::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Equipment>(), &Equipment::ByteSizeLong,
              &Equipment::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Equipment, _impl_._cached_size_),
          false,
      },
      &Equipment::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Equipment_class_data_ =
        Equipment::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Equipment::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Equipment_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Equipment_class_data_.tc_table);
  return Equipment_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 9, 5, 62, 2>
Equipment::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Equipment, _impl_._has_bits_),
    0, // no _extensions_
    9, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Equipment_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::Equipment>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Equipment, _impl_.id_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Equipment, _impl_.name_)}},
    // .dnd5e.api.v1alpha1.EquipmentCategory category = 3 [json_name = "category"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Equipment, _impl_.category_), 5>(),
     {24, 5, 0, PROTOBUF_FIELD_OFFSET(Equipment, _impl_.category_)}},
    // .dnd5e.api.v1alpha1.Cost cost = 4 [json_name = "cost"];
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(Equipment, _impl_.cost_)}},
    // .dnd5e.api.v1alpha1.Weight weight = 5 [json_name = "weight"];
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 1, PROTOBUF_FIELD_OFFSET(Equipment, _impl_.weight_)}},
    // string description = 6 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {50, 2, 0, PROTOBUF_FIELD_OFFSET(Equipment, _impl_.description_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(Equipment, _impl_.id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(Equipment, _impl_.name_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .dnd5e.api.v1alpha1.EquipmentCategory category = 3 [json_name = "category"];
    {PROTOBUF_FIELD_OFFSET(Equipment, _impl_.category_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.Cost cost = 4 [json_name = "cost"];
    {PROTOBUF_FIELD_OFFSET(Equipment, _impl_.cost_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.Weight weight = 5 [json_name = "weight"];
    {PROTOBUF_FIELD_OFFSET(Equipment, _impl_.weight_), _Internal::kHasBitsOffset + 4, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string description = 6 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(Equipment, _impl_.description_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .dnd5e.api.v1alpha1.WeaponData weapon_data = 7 [json_name = "weaponData"];
    {PROTOBUF_FIELD_OFFSET(Equipment, _impl_.equipment_data_.weapon_data_), _Internal::kOneofCaseOffset + 0, 2, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.ArmorData armor_data = 8 [json_name = "armorData"];
    {PROTOBUF_FIELD_OFFSET(Equipment, _impl_.equipment_data_.armor_data_), _Internal::kOneofCaseOffset + 0, 3, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.GearData gear_data = 9 [json_name = "gearData"];
    {PROTOBUF_FIELD_OFFSET(Equipment, _impl_.equipment_data_.gear_data_), _Internal::kOneofCaseOffset + 0, 4, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::Cost>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::Weight>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::WeaponData>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ArmorData>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::GearData>()},
  }},
  {{
    "\34\2\4\0\0\0\13\0\0\0\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.Equipment"
    "id"
    "name"
    "description"
  }},
};
PROTOBUF_NOINLINE void Equipment::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.Equipment)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(_impl_.cost_ != nullptr);
      _impl_.cost_->Clear();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(_impl_.weight_ != nullptr);
      _impl_.weight_->Clear();
    }
  }
  _impl_.category_ = 0;
  clear_equipment_data();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Equipment::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Equipment& this_ = static_cast<const Equipment&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Equipment::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Equipment& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.Equipment)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1 [json_name = "id"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_id().empty()) {
      const ::std::string& _s = this_._internal_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.Equipment.id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string name = 2 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.Equipment.name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // .dnd5e.api.v1alpha1.EquipmentCategory category = 3 [json_name = "category"];
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (this_._internal_category() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_category(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.Cost cost = 4 [json_name = "cost"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.cost_, this_._impl_.cost_->GetCachedSize(), target,
        stream);
  }

  // .dnd5e.api.v1alpha1.Weight weight = 5 [json_name = "weight"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.weight_, this_._impl_.weight_->GetCachedSize(), target,
        stream);
  }

  // string description = 6 [json_name = "description"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.Equipment.description");
      target = stream->WriteStringMaybeAliased(6, _s, target);
    }
  }

  switch (this_.equipment_data_case()) {
    case kWeaponData: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          7, *this_._impl_.equipment_data_.weapon_data_, this_._impl_.equipment_data_.weapon_data_->GetCachedSize(), target,
          stream);
      break;
    }
    case kArmorData: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          8, *this_._impl_.equipment_data_.armor_data_, this_._impl_.equipment_data_.armor_data_->GetCachedSize(), target,
          stream);
      break;
    }
    case kGearData: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          9, *this_._impl_.equipment_data_.gear_data_, this_._impl_.equipment_data_.gear_data_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.Equipment)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Equipment::ByteSizeLong(const MessageLite& base) {
  const Equipment& this_ = static_cast<const Equipment&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Equipment::ByteSizeLong() const {
  const Equipment& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.Equipment)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    // string id = 1 [json_name = "id"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_id());
      }
    }
    // string name = 2 [json_name = "name"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string description = 6 [json_name = "description"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // .dnd5e.api.v1alpha1.Cost cost = 4 [json_name = "cost"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.cost_);
    }
    // .dnd5e.api.v1alpha1.Weight weight = 5 [json_name = "weight"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.weight_);
    }
    // .dnd5e.api.v1alpha1.EquipmentCategory category = 3 [json_name = "category"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_category() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_category());
      }
    }
  }
  switch (this_.equipment_data_case()) {
    // .dnd5e.api.v1alpha1.WeaponData weapon_data = 7 [json_name = "weaponData"];
    case kWeaponData: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.equipment_data_.weapon_data_);
      break;
    }
    // .dnd5e.api.v1alpha1.ArmorData armor_data = 8 [json_name = "armorData"];
    case kArmorData: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.equipment_data_.armor_data_);
      break;
    }
    // .dnd5e.api.v1alpha1.GearData gear_data = 9 [json_name = "gearData"];
    case kGearData: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.equipment_data_.gear_data_);
      break;
    }
    case EQUIPMENT_DATA_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Equipment::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Equipment*>(&to_msg);
  auto& from = static_cast<const Equipment&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.Equipment)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_id().empty()) {
        _this->_internal_set_id(from._internal_id());
      } else {
        if (_this->_impl_.id_.IsDefault()) {
          _this->_internal_set_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(from._impl_.cost_ != nullptr);
      if (_this->_impl_.cost_ == nullptr) {
        _this->_impl_.cost_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.cost_);
      } else {
        _this->_impl_.cost_->MergeFrom(*from._impl_.cost_);
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(from._impl_.weight_ != nullptr);
      if (_this->_impl_.weight_ == nullptr) {
        _this->_impl_.weight_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.weight_);
      } else {
        _this->_impl_.weight_->MergeFrom(*from._impl_.weight_);
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_category() != 0) {
        _this->_impl_.category_ = from._impl_.category_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_equipment_data();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kWeaponData: {
        if (oneof_needs_init) {
          _this->_impl_.equipment_data_.weapon_data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.equipment_data_.weapon_data_);
        } else {
          _this->_impl_.equipment_data_.weapon_data_->MergeFrom(*from._impl_.equipment_data_.weapon_data_);
        }
        break;
      }
      case kArmorData: {
        if (oneof_needs_init) {
          _this->_impl_.equipment_data_.armor_data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.equipment_data_.armor_data_);
        } else {
          _this->_impl_.equipment_data_.armor_data_->MergeFrom(*from._impl_.equipment_data_.armor_data_);
        }
        break;
      }
      case kGearData: {
        if (oneof_needs_init) {
          _this->_impl_.equipment_data_.gear_data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.equipment_data_.gear_data_);
        } else {
          _this->_impl_.equipment_data_.gear_data_->MergeFrom(*from._impl_.equipment_data_.gear_data_);
        }
        break;
      }
      case EQUIPMENT_DATA_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Equipment::CopyFrom(const Equipment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.Equipment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Equipment::InternalSwap(Equipment* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Equipment, _impl_.category_)
      + sizeof(Equipment::_impl_.category_)
      - PROTOBUF_FIELD_OFFSET(Equipment, _impl_.cost_)>(
          reinterpret_cast<char*>(&_impl_.cost_),
          reinterpret_cast<char*>(&other->_impl_.cost_));
  swap(_impl_.equipment_data_, other->_impl_.equipment_data_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Equipment::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WeaponData::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<WeaponData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(WeaponData, _impl_._has_bits_);
};

WeaponData::WeaponData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WeaponData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.WeaponData)
}
PROTOBUF_NDEBUG_INLINE WeaponData::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::WeaponData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        properties_{visibility, arena, from.properties_},
        _properties_cached_byte_size_{0},
        damage_dice_(arena, from.damage_dice_),
        range_(arena, from.range_) {}

WeaponData::WeaponData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const WeaponData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WeaponData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WeaponData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, weapon_category_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, weapon_category_),
           offsetof(Impl_, long_range_) -
               offsetof(Impl_, weapon_category_) +
               sizeof(Impl_::long_range_));

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.WeaponData)
}
PROTOBUF_NDEBUG_INLINE WeaponData::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        properties_{visibility, arena},
        _properties_cached_byte_size_{0},
        damage_dice_(arena),
        range_(arena) {}

inline void WeaponData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, weapon_category_),
           0,
           offsetof(Impl_, long_range_) -
               offsetof(Impl_, weapon_category_) +
               sizeof(Impl_::long_range_));
}
WeaponData::~WeaponData() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.WeaponData)
  SharedDtor(*this);
}
inline void WeaponData::SharedDtor(MessageLite& self) {
  WeaponData& this_ = static_cast<WeaponData&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.damage_dice_.Destroy();
  this_._impl_.range_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL WeaponData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) WeaponData(arena);
}
constexpr auto WeaponData::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(WeaponData, _impl_.properties_) +
          decltype(WeaponData::_impl_.properties_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(WeaponData), alignof(WeaponData), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&WeaponData::PlacementNew_,
                                 sizeof(WeaponData),
                                 alignof(WeaponData));
  }
}
constexpr auto WeaponData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_WeaponData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &WeaponData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<WeaponData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &WeaponData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<WeaponData>(), &WeaponData::ByteSizeLong,
              &WeaponData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(WeaponData, _impl_._cached_size_),
          false,
      },
      &WeaponData::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull WeaponData_class_data_ =
        WeaponData::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
WeaponData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&WeaponData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(WeaponData_class_data_.tc_table);
  return WeaponData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 54, 2>
WeaponData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WeaponData, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    WeaponData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::WeaponData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .dnd5e.api.v1alpha1.WeaponCategory weapon_category = 1 [json_name = "weaponCategory"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WeaponData, _impl_.weapon_category_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(WeaponData, _impl_.weapon_category_)}},
    // string damage_dice = 2 [json_name = "damageDice"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(WeaponData, _impl_.damage_dice_)}},
    // .dnd5e.api.v1alpha1.DamageType damage_type = 3 [json_name = "damageType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WeaponData, _impl_.damage_type_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(WeaponData, _impl_.damage_type_)}},
    // repeated .dnd5e.api.v1alpha1.WeaponProperty properties = 4 [json_name = "properties"];
    {::_pbi::TcParser::FastV32P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(WeaponData, _impl_.properties_)}},
    // string range = 5 [json_name = "range"];
    {::_pbi::TcParser::FastUS1,
     {42, 1, 0, PROTOBUF_FIELD_OFFSET(WeaponData, _impl_.range_)}},
    // int32 normal_range = 6 [json_name = "normalRange"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WeaponData, _impl_.normal_range_), 4>(),
     {48, 4, 0, PROTOBUF_FIELD_OFFSET(WeaponData, _impl_.normal_range_)}},
    // int32 long_range = 7 [json_name = "longRange"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WeaponData, _impl_.long_range_), 5>(),
     {56, 5, 0, PROTOBUF_FIELD_OFFSET(WeaponData, _impl_.long_range_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.WeaponCategory weapon_category = 1 [json_name = "weaponCategory"];
    {PROTOBUF_FIELD_OFFSET(WeaponData, _impl_.weapon_category_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string damage_dice = 2 [json_name = "damageDice"];
    {PROTOBUF_FIELD_OFFSET(WeaponData, _impl_.damage_dice_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .dnd5e.api.v1alpha1.DamageType damage_type = 3 [json_name = "damageType"];
    {PROTOBUF_FIELD_OFFSET(WeaponData, _impl_.damage_type_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // repeated .dnd5e.api.v1alpha1.WeaponProperty properties = 4 [json_name = "properties"];
    {PROTOBUF_FIELD_OFFSET(WeaponData, _impl_.properties_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // string range = 5 [json_name = "range"];
    {PROTOBUF_FIELD_OFFSET(WeaponData, _impl_.range_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 normal_range = 6 [json_name = "normalRange"];
    {PROTOBUF_FIELD_OFFSET(WeaponData, _impl_.normal_range_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 long_range = 7 [json_name = "longRange"];
    {PROTOBUF_FIELD_OFFSET(WeaponData, _impl_.long_range_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\35\0\13\0\0\5\0\0"
    "dnd5e.api.v1alpha1.WeaponData"
    "damage_dice"
    "range"
  }},
};
PROTOBUF_NOINLINE void WeaponData::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.WeaponData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.properties_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.damage_dice_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.range_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000003cU) != 0) {
    ::memset(&_impl_.weapon_category_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.long_range_) -
        reinterpret_cast<char*>(&_impl_.weapon_category_)) + sizeof(_impl_.long_range_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL WeaponData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const WeaponData& this_ = static_cast<const WeaponData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL WeaponData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const WeaponData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.WeaponData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .dnd5e.api.v1alpha1.WeaponCategory weapon_category = 1 [json_name = "weaponCategory"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_weapon_category() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_weapon_category(), target);
    }
  }

  // string damage_dice = 2 [json_name = "damageDice"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_damage_dice().empty()) {
      const ::std::string& _s = this_._internal_damage_dice();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.WeaponData.damage_dice");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // .dnd5e.api.v1alpha1.DamageType damage_type = 3 [json_name = "damageType"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_damage_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_damage_type(), target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.WeaponProperty properties = 4 [json_name = "properties"];
  {
    ::size_t byte_size = this_._impl_._properties_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          4, this_._internal_properties(), byte_size, target);
    }
  }

  // string range = 5 [json_name = "range"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_range().empty()) {
      const ::std::string& _s = this_._internal_range();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.WeaponData.range");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  // int32 normal_range = 6 [json_name = "normalRange"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_normal_range() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<6>(
              stream, this_._internal_normal_range(), target);
    }
  }

  // int32 long_range = 7 [json_name = "longRange"];
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (this_._internal_long_range() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<7>(
              stream, this_._internal_long_range(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.WeaponData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t WeaponData::ByteSizeLong(const MessageLite& base) {
  const WeaponData& this_ = static_cast<const WeaponData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t WeaponData::ByteSizeLong() const {
  const WeaponData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.WeaponData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.WeaponProperty properties = 4 [json_name = "properties"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_properties(), 1, this_._impl_._properties_cached_byte_size_);
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    // string damage_dice = 2 [json_name = "damageDice"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_damage_dice().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_damage_dice());
      }
    }
    // string range = 5 [json_name = "range"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_range().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_range());
      }
    }
    // .dnd5e.api.v1alpha1.WeaponCategory weapon_category = 1 [json_name = "weaponCategory"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_weapon_category() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_weapon_category());
      }
    }
    // .dnd5e.api.v1alpha1.DamageType damage_type = 3 [json_name = "damageType"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_damage_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_damage_type());
      }
    }
    // int32 normal_range = 6 [json_name = "normalRange"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_normal_range() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_normal_range());
      }
    }
    // int32 long_range = 7 [json_name = "longRange"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_long_range() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_long_range());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void WeaponData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WeaponData*>(&to_msg);
  auto& from = static_cast<const WeaponData&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.WeaponData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_properties()->MergeFrom(from._internal_properties());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_damage_dice().empty()) {
        _this->_internal_set_damage_dice(from._internal_damage_dice());
      } else {
        if (_this->_impl_.damage_dice_.IsDefault()) {
          _this->_internal_set_damage_dice("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_range().empty()) {
        _this->_internal_set_range(from._internal_range());
      } else {
        if (_this->_impl_.range_.IsDefault()) {
          _this->_internal_set_range("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_weapon_category() != 0) {
        _this->_impl_.weapon_category_ = from._impl_.weapon_category_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_damage_type() != 0) {
        _this->_impl_.damage_type_ = from._impl_.damage_type_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_normal_range() != 0) {
        _this->_impl_.normal_range_ = from._impl_.normal_range_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_long_range() != 0) {
        _this->_impl_.long_range_ = from._impl_.long_range_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WeaponData::CopyFrom(const WeaponData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.WeaponData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WeaponData::InternalSwap(WeaponData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.properties_.InternalSwap(&other->_impl_.properties_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.damage_dice_, &other->_impl_.damage_dice_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.range_, &other->_impl_.range_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WeaponData, _impl_.long_range_)
      + sizeof(WeaponData::_impl_.long_range_)
      - PROTOBUF_FIELD_OFFSET(WeaponData, _impl_.weapon_category_)>(
          reinterpret_cast<char*>(&_impl_.weapon_category_),
          reinterpret_cast<char*>(&other->_impl_.weapon_category_));
}

::google::protobuf::Metadata WeaponData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ArmorData::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ArmorData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ArmorData, _impl_._has_bits_);
};

ArmorData::ArmorData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ArmorData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.ArmorData)
}
ArmorData::ArmorData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ArmorData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ArmorData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE ArmorData::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ArmorData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, armor_category_),
           0,
           offsetof(Impl_, str_minimum_) -
               offsetof(Impl_, armor_category_) +
               sizeof(Impl_::str_minimum_));
}
ArmorData::~ArmorData() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.ArmorData)
  SharedDtor(*this);
}
inline void ArmorData::SharedDtor(MessageLite& self) {
  ArmorData& this_ = static_cast<ArmorData&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ArmorData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ArmorData(arena);
}
constexpr auto ArmorData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ArmorData),
                                            alignof(ArmorData));
}
constexpr auto ArmorData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ArmorData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ArmorData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ArmorData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ArmorData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ArmorData>(), &ArmorData::ByteSizeLong,
              &ArmorData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ArmorData, _impl_._cached_size_),
          false,
      },
      &ArmorData::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ArmorData_class_data_ =
        ArmorData::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ArmorData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ArmorData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ArmorData_class_data_.tc_table);
  return ArmorData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 0, 2>
ArmorData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ArmorData, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ArmorData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ArmorData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .dnd5e.api.v1alpha1.ArmorCategory armor_category = 1 [json_name = "armorCategory"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ArmorData, _impl_.armor_category_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ArmorData, _impl_.armor_category_)}},
    // int32 base_ac = 2 [json_name = "baseAc"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ArmorData, _impl_.base_ac_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ArmorData, _impl_.base_ac_)}},
    // bool dex_bonus = 3 [json_name = "dexBonus"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ArmorData, _impl_.dex_bonus_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(ArmorData, _impl_.dex_bonus_)}},
    // bool has_dex_limit = 4 [json_name = "hasDexLimit"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ArmorData, _impl_.has_dex_limit_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(ArmorData, _impl_.has_dex_limit_)}},
    // int32 max_dex_bonus = 5 [json_name = "maxDexBonus"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ArmorData, _impl_.max_dex_bonus_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(ArmorData, _impl_.max_dex_bonus_)}},
    // int32 str_minimum = 6 [json_name = "strMinimum"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ArmorData, _impl_.str_minimum_), 6>(),
     {48, 6, 0, PROTOBUF_FIELD_OFFSET(ArmorData, _impl_.str_minimum_)}},
    // bool stealth_disadvantage = 7 [json_name = "stealthDisadvantage"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ArmorData, _impl_.stealth_disadvantage_), 4>(),
     {56, 4, 0, PROTOBUF_FIELD_OFFSET(ArmorData, _impl_.stealth_disadvantage_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.ArmorCategory armor_category = 1 [json_name = "armorCategory"];
    {PROTOBUF_FIELD_OFFSET(ArmorData, _impl_.armor_category_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // int32 base_ac = 2 [json_name = "baseAc"];
    {PROTOBUF_FIELD_OFFSET(ArmorData, _impl_.base_ac_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // bool dex_bonus = 3 [json_name = "dexBonus"];
    {PROTOBUF_FIELD_OFFSET(ArmorData, _impl_.dex_bonus_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool has_dex_limit = 4 [json_name = "hasDexLimit"];
    {PROTOBUF_FIELD_OFFSET(ArmorData, _impl_.has_dex_limit_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // int32 max_dex_bonus = 5 [json_name = "maxDexBonus"];
    {PROTOBUF_FIELD_OFFSET(ArmorData, _impl_.max_dex_bonus_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 str_minimum = 6 [json_name = "strMinimum"];
    {PROTOBUF_FIELD_OFFSET(ArmorData, _impl_.str_minimum_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // bool stealth_disadvantage = 7 [json_name = "stealthDisadvantage"];
    {PROTOBUF_FIELD_OFFSET(ArmorData, _impl_.stealth_disadvantage_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void ArmorData::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.ArmorData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    ::memset(&_impl_.armor_category_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.str_minimum_) -
        reinterpret_cast<char*>(&_impl_.armor_category_)) + sizeof(_impl_.str_minimum_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ArmorData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ArmorData& this_ = static_cast<const ArmorData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ArmorData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ArmorData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.ArmorData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .dnd5e.api.v1alpha1.ArmorCategory armor_category = 1 [json_name = "armorCategory"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_armor_category() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_armor_category(), target);
    }
  }

  // int32 base_ac = 2 [json_name = "baseAc"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_base_ac() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_base_ac(), target);
    }
  }

  // bool dex_bonus = 3 [json_name = "dexBonus"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_dex_bonus() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_dex_bonus(), target);
    }
  }

  // bool has_dex_limit = 4 [json_name = "hasDexLimit"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_has_dex_limit() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_has_dex_limit(), target);
    }
  }

  // int32 max_dex_bonus = 5 [json_name = "maxDexBonus"];
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (this_._internal_max_dex_bonus() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
              stream, this_._internal_max_dex_bonus(), target);
    }
  }

  // int32 str_minimum = 6 [json_name = "strMinimum"];
  if ((this_._impl_._has_bits_[0] & 0x00000040U) != 0) {
    if (this_._internal_str_minimum() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<6>(
              stream, this_._internal_str_minimum(), target);
    }
  }

  // bool stealth_disadvantage = 7 [json_name = "stealthDisadvantage"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_stealth_disadvantage() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          7, this_._internal_stealth_disadvantage(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.ArmorData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ArmorData::ByteSizeLong(const MessageLite& base) {
  const ArmorData& this_ = static_cast<const ArmorData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ArmorData::ByteSizeLong() const {
  const ArmorData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.ArmorData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    // .dnd5e.api.v1alpha1.ArmorCategory armor_category = 1 [json_name = "armorCategory"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_armor_category() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_armor_category());
      }
    }
    // int32 base_ac = 2 [json_name = "baseAc"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_base_ac() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_base_ac());
      }
    }
    // bool dex_bonus = 3 [json_name = "dexBonus"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_dex_bonus() != 0) {
        total_size += 2;
      }
    }
    // bool has_dex_limit = 4 [json_name = "hasDexLimit"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_has_dex_limit() != 0) {
        total_size += 2;
      }
    }
    // bool stealth_disadvantage = 7 [json_name = "stealthDisadvantage"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_stealth_disadvantage() != 0) {
        total_size += 2;
      }
    }
    // int32 max_dex_bonus = 5 [json_name = "maxDexBonus"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_max_dex_bonus() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_max_dex_bonus());
      }
    }
    // int32 str_minimum = 6 [json_name = "strMinimum"];
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (this_._internal_str_minimum() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_str_minimum());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ArmorData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ArmorData*>(&to_msg);
  auto& from = static_cast<const ArmorData&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.ArmorData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (from._internal_armor_category() != 0) {
        _this->_impl_.armor_category_ = from._impl_.armor_category_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_base_ac() != 0) {
        _this->_impl_.base_ac_ = from._impl_.base_ac_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_dex_bonus() != 0) {
        _this->_impl_.dex_bonus_ = from._impl_.dex_bonus_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_has_dex_limit() != 0) {
        _this->_impl_.has_dex_limit_ = from._impl_.has_dex_limit_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_stealth_disadvantage() != 0) {
        _this->_impl_.stealth_disadvantage_ = from._impl_.stealth_disadvantage_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_max_dex_bonus() != 0) {
        _this->_impl_.max_dex_bonus_ = from._impl_.max_dex_bonus_;
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (from._internal_str_minimum() != 0) {
        _this->_impl_.str_minimum_ = from._impl_.str_minimum_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ArmorData::CopyFrom(const ArmorData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.ArmorData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ArmorData::InternalSwap(ArmorData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ArmorData, _impl_.str_minimum_)
      + sizeof(ArmorData::_impl_.str_minimum_)
      - PROTOBUF_FIELD_OFFSET(ArmorData, _impl_.armor_category_)>(
          reinterpret_cast<char*>(&_impl_.armor_category_),
          reinterpret_cast<char*>(&other->_impl_.armor_category_));
}

::google::protobuf::Metadata ArmorData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GearData::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GearData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GearData, _impl_._has_bits_);
};

GearData::GearData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GearData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.GearData)
}
PROTOBUF_NDEBUG_INLINE GearData::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::GearData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        properties_{visibility, arena, from.properties_} {}

GearData::GearData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GearData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GearData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GearData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.gear_category_ = from._impl_.gear_category_;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.GearData)
}
PROTOBUF_NDEBUG_INLINE GearData::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        properties_{visibility, arena} {}

inline void GearData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.gear_category_ = {};
}
GearData::~GearData() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.GearData)
  SharedDtor(*this);
}
inline void GearData::SharedDtor(MessageLite& self) {
  GearData& this_ = static_cast<GearData&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GearData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GearData(arena);
}
constexpr auto GearData::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GearData, _impl_.properties_) +
          decltype(GearData::_impl_.properties_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GearData), alignof(GearData), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GearData::PlacementNew_,
                                 sizeof(GearData),
                                 alignof(GearData));
  }
}
constexpr auto GearData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GearData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GearData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GearData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GearData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GearData>(), &GearData::ByteSizeLong,
              &GearData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GearData, _impl_._cached_size_),
          false,
      },
      &GearData::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GearData_class_data_ =
        GearData::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GearData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GearData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GearData_class_data_.tc_table);
  return GearData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 46, 2>
GearData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GearData, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GearData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::GearData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string properties = 2 [json_name = "properties"];
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GearData, _impl_.properties_)}},
    // .dnd5e.api.v1alpha1.GearCategory gear_category = 1 [json_name = "gearCategory"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GearData, _impl_.gear_category_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(GearData, _impl_.gear_category_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.GearCategory gear_category = 1 [json_name = "gearCategory"];
    {PROTOBUF_FIELD_OFFSET(GearData, _impl_.gear_category_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // repeated string properties = 2 [json_name = "properties"];
    {PROTOBUF_FIELD_OFFSET(GearData, _impl_.properties_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\33\0\12\0\0\0\0\0"
    "dnd5e.api.v1alpha1.GearData"
    "properties"
  }},
};
PROTOBUF_NOINLINE void GearData::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.GearData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.properties_.Clear();
  _impl_.gear_category_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GearData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GearData& this_ = static_cast<const GearData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GearData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GearData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.GearData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .dnd5e.api.v1alpha1.GearCategory gear_category = 1 [json_name = "gearCategory"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_gear_category() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_gear_category(), target);
    }
  }

  // repeated string properties = 2 [json_name = "properties"];
  for (int i = 0, n = this_._internal_properties_size(); i < n; ++i) {
    const auto& s = this_._internal_properties().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.GearData.properties");
    target = stream->WriteString(2, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.GearData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GearData::ByteSizeLong(const MessageLite& base) {
  const GearData& this_ = static_cast<const GearData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GearData::ByteSizeLong() const {
  const GearData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.GearData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string properties = 2 [json_name = "properties"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_properties().size());
      for (int i = 0, n = this_._internal_properties().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_properties().Get(i));
      }
    }
  }
   {
    // .dnd5e.api.v1alpha1.GearCategory gear_category = 1 [json_name = "gearCategory"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_gear_category() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_gear_category());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GearData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GearData*>(&to_msg);
  auto& from = static_cast<const GearData&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.GearData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_properties()->MergeFrom(from._internal_properties());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (from._internal_gear_category() != 0) {
      _this->_impl_.gear_category_ = from._impl_.gear_category_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GearData::CopyFrom(const GearData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.GearData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GearData::InternalSwap(GearData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.properties_.InternalSwap(&other->_impl_.properties_);
  swap(_impl_.gear_category_, other->_impl_.gear_category_);
}

::google::protobuf::Metadata GearData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EquipmentSlots::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<EquipmentSlots>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EquipmentSlots, _impl_._has_bits_);
};

EquipmentSlots::EquipmentSlots(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EquipmentSlots_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.EquipmentSlots)
}
PROTOBUF_NDEBUG_INLINE EquipmentSlots::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::EquipmentSlots& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

EquipmentSlots::EquipmentSlots(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EquipmentSlots& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EquipmentSlots_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EquipmentSlots* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.main_hand_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.main_hand_)
                : nullptr;
  _impl_.off_hand_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.off_hand_)
                : nullptr;
  _impl_.armor_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.armor_)
                : nullptr;
  _impl_.helmet_ = ((cached_has_bits & 0x00000008U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.helmet_)
                : nullptr;
  _impl_.boots_ = ((cached_has_bits & 0x00000010U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.boots_)
                : nullptr;
  _impl_.gloves_ = ((cached_has_bits & 0x00000020U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.gloves_)
                : nullptr;
  _impl_.cloak_ = ((cached_has_bits & 0x00000040U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.cloak_)
                : nullptr;
  _impl_.amulet_ = ((cached_has_bits & 0x00000080U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.amulet_)
                : nullptr;
  _impl_.ring_1_ = ((cached_has_bits & 0x00000100U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ring_1_)
                : nullptr;
  _impl_.ring_2_ = ((cached_has_bits & 0x00000200U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ring_2_)
                : nullptr;
  _impl_.belt_ = ((cached_has_bits & 0x00000400U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.belt_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.EquipmentSlots)
}
PROTOBUF_NDEBUG_INLINE EquipmentSlots::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void EquipmentSlots::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, main_hand_),
           0,
           offsetof(Impl_, belt_) -
               offsetof(Impl_, main_hand_) +
               sizeof(Impl_::belt_));
}
EquipmentSlots::~EquipmentSlots() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.EquipmentSlots)
  SharedDtor(*this);
}
inline void EquipmentSlots::SharedDtor(MessageLite& self) {
  EquipmentSlots& this_ = static_cast<EquipmentSlots&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.main_hand_;
  delete this_._impl_.off_hand_;
  delete this_._impl_.armor_;
  delete this_._impl_.helmet_;
  delete this_._impl_.boots_;
  delete this_._impl_.gloves_;
  delete this_._impl_.cloak_;
  delete this_._impl_.amulet_;
  delete this_._impl_.ring_1_;
  delete this_._impl_.ring_2_;
  delete this_._impl_.belt_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EquipmentSlots::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EquipmentSlots(arena);
}
constexpr auto EquipmentSlots::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(EquipmentSlots),
                                            alignof(EquipmentSlots));
}
constexpr auto EquipmentSlots::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EquipmentSlots_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EquipmentSlots::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EquipmentSlots>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EquipmentSlots::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EquipmentSlots>(), &EquipmentSlots::ByteSizeLong,
              &EquipmentSlots::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EquipmentSlots, _impl_._cached_size_),
          false,
      },
      &EquipmentSlots::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EquipmentSlots_class_data_ =
        EquipmentSlots::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EquipmentSlots::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EquipmentSlots_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EquipmentSlots_class_data_.tc_table);
  return EquipmentSlots_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 11, 0, 2>
EquipmentSlots::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EquipmentSlots, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    11,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    EquipmentSlots_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::EquipmentSlots>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .dnd5e.api.v1alpha1.InventoryItem main_hand = 1 [json_name = "mainHand"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EquipmentSlots, _impl_.main_hand_)}},
    // .dnd5e.api.v1alpha1.InventoryItem off_hand = 2 [json_name = "offHand"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(EquipmentSlots, _impl_.off_hand_)}},
    // .dnd5e.api.v1alpha1.InventoryItem armor = 3 [json_name = "armor"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(EquipmentSlots, _impl_.armor_)}},
    // .dnd5e.api.v1alpha1.InventoryItem helmet = 4 [json_name = "helmet"];
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(EquipmentSlots, _impl_.helmet_)}},
    // .dnd5e.api.v1alpha1.InventoryItem boots = 5 [json_name = "boots"];
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 4, PROTOBUF_FIELD_OFFSET(EquipmentSlots, _impl_.boots_)}},
    // .dnd5e.api.v1alpha1.InventoryItem gloves = 6 [json_name = "gloves"];
    {::_pbi::TcParser::FastMtS1,
     {50, 5, 5, PROTOBUF_FIELD_OFFSET(EquipmentSlots, _impl_.gloves_)}},
    // .dnd5e.api.v1alpha1.InventoryItem cloak = 7 [json_name = "cloak"];
    {::_pbi::TcParser::FastMtS1,
     {58, 6, 6, PROTOBUF_FIELD_OFFSET(EquipmentSlots, _impl_.cloak_)}},
    // .dnd5e.api.v1alpha1.InventoryItem amulet = 8 [json_name = "amulet"];
    {::_pbi::TcParser::FastMtS1,
     {66, 7, 7, PROTOBUF_FIELD_OFFSET(EquipmentSlots, _impl_.amulet_)}},
    // .dnd5e.api.v1alpha1.InventoryItem ring_1 = 9 [json_name = "ring1"];
    {::_pbi::TcParser::FastMtS1,
     {74, 8, 8, PROTOBUF_FIELD_OFFSET(EquipmentSlots, _impl_.ring_1_)}},
    // .dnd5e.api.v1alpha1.InventoryItem ring_2 = 10 [json_name = "ring2"];
    {::_pbi::TcParser::FastMtS1,
     {82, 9, 9, PROTOBUF_FIELD_OFFSET(EquipmentSlots, _impl_.ring_2_)}},
    // .dnd5e.api.v1alpha1.InventoryItem belt = 11 [json_name = "belt"];
    {::_pbi::TcParser::FastMtS1,
     {90, 10, 10, PROTOBUF_FIELD_OFFSET(EquipmentSlots, _impl_.belt_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.InventoryItem main_hand = 1 [json_name = "mainHand"];
    {PROTOBUF_FIELD_OFFSET(EquipmentSlots, _impl_.main_hand_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.InventoryItem off_hand = 2 [json_name = "offHand"];
    {PROTOBUF_FIELD_OFFSET(EquipmentSlots, _impl_.off_hand_), _Internal::kHasBitsOffset + 1, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.InventoryItem armor = 3 [json_name = "armor"];
    {PROTOBUF_FIELD_OFFSET(EquipmentSlots, _impl_.armor_), _Internal::kHasBitsOffset + 2, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.InventoryItem helmet = 4 [json_name = "helmet"];
    {PROTOBUF_FIELD_OFFSET(EquipmentSlots, _impl_.helmet_), _Internal::kHasBitsOffset + 3, 3, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.InventoryItem boots = 5 [json_name = "boots"];
    {PROTOBUF_FIELD_OFFSET(EquipmentSlots, _impl_.boots_), _Internal::kHasBitsOffset + 4, 4, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.InventoryItem gloves = 6 [json_name = "gloves"];
    {PROTOBUF_FIELD_OFFSET(EquipmentSlots, _impl_.gloves_), _Internal::kHasBitsOffset + 5, 5, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.InventoryItem cloak = 7 [json_name = "cloak"];
    {PROTOBUF_FIELD_OFFSET(EquipmentSlots, _impl_.cloak_), _Internal::kHasBitsOffset + 6, 6, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.InventoryItem amulet = 8 [json_name = "amulet"];
    {PROTOBUF_FIELD_OFFSET(EquipmentSlots, _impl_.amulet_), _Internal::kHasBitsOffset + 7, 7, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.InventoryItem ring_1 = 9 [json_name = "ring1"];
    {PROTOBUF_FIELD_OFFSET(EquipmentSlots, _impl_.ring_1_), _Internal::kHasBitsOffset + 8, 8, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.InventoryItem ring_2 = 10 [json_name = "ring2"];
    {PROTOBUF_FIELD_OFFSET(EquipmentSlots, _impl_.ring_2_), _Internal::kHasBitsOffset + 9, 9, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.InventoryItem belt = 11 [json_name = "belt"];
    {PROTOBUF_FIELD_OFFSET(EquipmentSlots, _impl_.belt_), _Internal::kHasBitsOffset + 10, 10, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::InventoryItem>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::InventoryItem>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::InventoryItem>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::InventoryItem>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::InventoryItem>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::InventoryItem>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::InventoryItem>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::InventoryItem>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::InventoryItem>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::InventoryItem>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::InventoryItem>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void EquipmentSlots::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.EquipmentSlots)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.main_hand_ != nullptr);
      _impl_.main_hand_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.off_hand_ != nullptr);
      _impl_.off_hand_->Clear();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.armor_ != nullptr);
      _impl_.armor_->Clear();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(_impl_.helmet_ != nullptr);
      _impl_.helmet_->Clear();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(_impl_.boots_ != nullptr);
      _impl_.boots_->Clear();
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      ABSL_DCHECK(_impl_.gloves_ != nullptr);
      _impl_.gloves_->Clear();
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      ABSL_DCHECK(_impl_.cloak_ != nullptr);
      _impl_.cloak_->Clear();
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      ABSL_DCHECK(_impl_.amulet_ != nullptr);
      _impl_.amulet_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000700U) != 0) {
    if ((cached_has_bits & 0x00000100U) != 0) {
      ABSL_DCHECK(_impl_.ring_1_ != nullptr);
      _impl_.ring_1_->Clear();
    }
    if ((cached_has_bits & 0x00000200U) != 0) {
      ABSL_DCHECK(_impl_.ring_2_ != nullptr);
      _impl_.ring_2_->Clear();
    }
    if ((cached_has_bits & 0x00000400U) != 0) {
      ABSL_DCHECK(_impl_.belt_ != nullptr);
      _impl_.belt_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EquipmentSlots::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EquipmentSlots& this_ = static_cast<const EquipmentSlots&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EquipmentSlots::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EquipmentSlots& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.EquipmentSlots)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.InventoryItem main_hand = 1 [json_name = "mainHand"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.main_hand_, this_._impl_.main_hand_->GetCachedSize(), target,
        stream);
  }

  // .dnd5e.api.v1alpha1.InventoryItem off_hand = 2 [json_name = "offHand"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.off_hand_, this_._impl_.off_hand_->GetCachedSize(), target,
        stream);
  }

  // .dnd5e.api.v1alpha1.InventoryItem armor = 3 [json_name = "armor"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.armor_, this_._impl_.armor_->GetCachedSize(), target,
        stream);
  }

  // .dnd5e.api.v1alpha1.InventoryItem helmet = 4 [json_name = "helmet"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.helmet_, this_._impl_.helmet_->GetCachedSize(), target,
        stream);
  }

  // .dnd5e.api.v1alpha1.InventoryItem boots = 5 [json_name = "boots"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.boots_, this_._impl_.boots_->GetCachedSize(), target,
        stream);
  }

  // .dnd5e.api.v1alpha1.InventoryItem gloves = 6 [json_name = "gloves"];
  if ((cached_has_bits & 0x00000020U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.gloves_, this_._impl_.gloves_->GetCachedSize(), target,
        stream);
  }

  // .dnd5e.api.v1alpha1.InventoryItem cloak = 7 [json_name = "cloak"];
  if ((cached_has_bits & 0x00000040U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *this_._impl_.cloak_, this_._impl_.cloak_->GetCachedSize(), target,
        stream);
  }

  // .dnd5e.api.v1alpha1.InventoryItem amulet = 8 [json_name = "amulet"];
  if ((cached_has_bits & 0x00000080U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *this_._impl_.amulet_, this_._impl_.amulet_->GetCachedSize(), target,
        stream);
  }

  // .dnd5e.api.v1alpha1.InventoryItem ring_1 = 9 [json_name = "ring1"];
  if ((cached_has_bits & 0x00000100U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        9, *this_._impl_.ring_1_, this_._impl_.ring_1_->GetCachedSize(), target,
        stream);
  }

  // .dnd5e.api.v1alpha1.InventoryItem ring_2 = 10 [json_name = "ring2"];
  if ((cached_has_bits & 0x00000200U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        10, *this_._impl_.ring_2_, this_._impl_.ring_2_->GetCachedSize(), target,
        stream);
  }

  // .dnd5e.api.v1alpha1.InventoryItem belt = 11 [json_name = "belt"];
  if ((cached_has_bits & 0x00000400U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        11, *this_._impl_.belt_, this_._impl_.belt_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.EquipmentSlots)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EquipmentSlots::ByteSizeLong(const MessageLite& base) {
  const EquipmentSlots& this_ = static_cast<const EquipmentSlots&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EquipmentSlots::ByteSizeLong() const {
  const EquipmentSlots& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.EquipmentSlots)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    // .dnd5e.api.v1alpha1.InventoryItem main_hand = 1 [json_name = "mainHand"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.main_hand_);
    }
    // .dnd5e.api.v1alpha1.InventoryItem off_hand = 2 [json_name = "offHand"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.off_hand_);
    }
    // .dnd5e.api.v1alpha1.InventoryItem armor = 3 [json_name = "armor"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.armor_);
    }
    // .dnd5e.api.v1alpha1.InventoryItem helmet = 4 [json_name = "helmet"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.helmet_);
    }
    // .dnd5e.api.v1alpha1.InventoryItem boots = 5 [json_name = "boots"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.boots_);
    }
    // .dnd5e.api.v1alpha1.InventoryItem gloves = 6 [json_name = "gloves"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.gloves_);
    }
    // .dnd5e.api.v1alpha1.InventoryItem cloak = 7 [json_name = "cloak"];
    if ((cached_has_bits & 0x00000040U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.cloak_);
    }
    // .dnd5e.api.v1alpha1.InventoryItem amulet = 8 [json_name = "amulet"];
    if ((cached_has_bits & 0x00000080U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.amulet_);
    }
  }
  if ((cached_has_bits & 0x00000700U) != 0) {
    // .dnd5e.api.v1alpha1.InventoryItem ring_1 = 9 [json_name = "ring1"];
    if ((cached_has_bits & 0x00000100U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ring_1_);
    }
    // .dnd5e.api.v1alpha1.InventoryItem ring_2 = 10 [json_name = "ring2"];
    if ((cached_has_bits & 0x00000200U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ring_2_);
    }
    // .dnd5e.api.v1alpha1.InventoryItem belt = 11 [json_name = "belt"];
    if ((cached_has_bits & 0x00000400U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.belt_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EquipmentSlots::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EquipmentSlots*>(&to_msg);
  auto& from = static_cast<const EquipmentSlots&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.EquipmentSlots)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.main_hand_ != nullptr);
      if (_this->_impl_.main_hand_ == nullptr) {
        _this->_impl_.main_hand_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.main_hand_);
      } else {
        _this->_impl_.main_hand_->MergeFrom(*from._impl_.main_hand_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.off_hand_ != nullptr);
      if (_this->_impl_.off_hand_ == nullptr) {
        _this->_impl_.off_hand_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.off_hand_);
      } else {
        _this->_impl_.off_hand_->MergeFrom(*from._impl_.off_hand_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.armor_ != nullptr);
      if (_this->_impl_.armor_ == nullptr) {
        _this->_impl_.armor_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.armor_);
      } else {
        _this->_impl_.armor_->MergeFrom(*from._impl_.armor_);
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(from._impl_.helmet_ != nullptr);
      if (_this->_impl_.helmet_ == nullptr) {
        _this->_impl_.helmet_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.helmet_);
      } else {
        _this->_impl_.helmet_->MergeFrom(*from._impl_.helmet_);
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(from._impl_.boots_ != nullptr);
      if (_this->_impl_.boots_ == nullptr) {
        _this->_impl_.boots_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.boots_);
      } else {
        _this->_impl_.boots_->MergeFrom(*from._impl_.boots_);
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      ABSL_DCHECK(from._impl_.gloves_ != nullptr);
      if (_this->_impl_.gloves_ == nullptr) {
        _this->_impl_.gloves_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.gloves_);
      } else {
        _this->_impl_.gloves_->MergeFrom(*from._impl_.gloves_);
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      ABSL_DCHECK(from._impl_.cloak_ != nullptr);
      if (_this->_impl_.cloak_ == nullptr) {
        _this->_impl_.cloak_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.cloak_);
      } else {
        _this->_impl_.cloak_->MergeFrom(*from._impl_.cloak_);
      }
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      ABSL_DCHECK(from._impl_.amulet_ != nullptr);
      if (_this->_impl_.amulet_ == nullptr) {
        _this->_impl_.amulet_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.amulet_);
      } else {
        _this->_impl_.amulet_->MergeFrom(*from._impl_.amulet_);
      }
    }
  }
  if ((cached_has_bits & 0x00000700U) != 0) {
    if ((cached_has_bits & 0x00000100U) != 0) {
      ABSL_DCHECK(from._impl_.ring_1_ != nullptr);
      if (_this->_impl_.ring_1_ == nullptr) {
        _this->_impl_.ring_1_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ring_1_);
      } else {
        _this->_impl_.ring_1_->MergeFrom(*from._impl_.ring_1_);
      }
    }
    if ((cached_has_bits & 0x00000200U) != 0) {
      ABSL_DCHECK(from._impl_.ring_2_ != nullptr);
      if (_this->_impl_.ring_2_ == nullptr) {
        _this->_impl_.ring_2_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ring_2_);
      } else {
        _this->_impl_.ring_2_->MergeFrom(*from._impl_.ring_2_);
      }
    }
    if ((cached_has_bits & 0x00000400U) != 0) {
      ABSL_DCHECK(from._impl_.belt_ != nullptr);
      if (_this->_impl_.belt_ == nullptr) {
        _this->_impl_.belt_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.belt_);
      } else {
        _this->_impl_.belt_->MergeFrom(*from._impl_.belt_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EquipmentSlots::CopyFrom(const EquipmentSlots& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.EquipmentSlots)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EquipmentSlots::InternalSwap(EquipmentSlots* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EquipmentSlots, _impl_.belt_)
      + sizeof(EquipmentSlots::_impl_.belt_)
      - PROTOBUF_FIELD_OFFSET(EquipmentSlots, _impl_.main_hand_)>(
          reinterpret_cast<char*>(&_impl_.main_hand_),
          reinterpret_cast<char*>(&other->_impl_.main_hand_));
}

::google::protobuf::Metadata EquipmentSlots::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InventoryItem::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<InventoryItem>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(InventoryItem, _impl_._has_bits_);
};

InventoryItem::InventoryItem(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, InventoryItem_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.InventoryItem)
}
PROTOBUF_NDEBUG_INLINE InventoryItem::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::InventoryItem& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        item_id_(arena, from.item_id_),
        custom_name_(arena, from.custom_name_) {}

InventoryItem::InventoryItem(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const InventoryItem& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, InventoryItem_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InventoryItem* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.equipment_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.equipment_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, quantity_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, quantity_),
           offsetof(Impl_, is_attuned_) -
               offsetof(Impl_, quantity_) +
               sizeof(Impl_::is_attuned_));

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.InventoryItem)
}
PROTOBUF_NDEBUG_INLINE InventoryItem::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        item_id_(arena),
        custom_name_(arena) {}

inline void InventoryItem::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, equipment_),
           0,
           offsetof(Impl_, is_attuned_) -
               offsetof(Impl_, equipment_) +
               sizeof(Impl_::is_attuned_));
}
InventoryItem::~InventoryItem() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.InventoryItem)
  SharedDtor(*this);
}
inline void InventoryItem::SharedDtor(MessageLite& self) {
  InventoryItem& this_ = static_cast<InventoryItem&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.item_id_.Destroy();
  this_._impl_.custom_name_.Destroy();
  delete this_._impl_.equipment_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL InventoryItem::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) InventoryItem(arena);
}
constexpr auto InventoryItem::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(InventoryItem),
                                            alignof(InventoryItem));
}
constexpr auto InventoryItem::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_InventoryItem_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &InventoryItem::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<InventoryItem>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &InventoryItem::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<InventoryItem>(), &InventoryItem::ByteSizeLong,
              &InventoryItem::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(InventoryItem, _impl_._cached_size_),
          false,
      },
      &InventoryItem::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull InventoryItem_class_data_ =
        InventoryItem::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
InventoryItem::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&InventoryItem_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(InventoryItem_class_data_.tc_table);
  return InventoryItem_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 59, 2>
InventoryItem::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InventoryItem, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    InventoryItem_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::InventoryItem>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string item_id = 1 [json_name = "itemId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(InventoryItem, _impl_.item_id_)}},
    // int32 quantity = 2 [json_name = "quantity"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InventoryItem, _impl_.quantity_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(InventoryItem, _impl_.quantity_)}},
    // bool is_attuned = 3 [json_name = "isAttuned"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(InventoryItem, _impl_.is_attuned_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(InventoryItem, _impl_.is_attuned_)}},
    // string custom_name = 4 [json_name = "customName"];
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(InventoryItem, _impl_.custom_name_)}},
    // .dnd5e.api.v1alpha1.Equipment equipment = 5 [json_name = "equipment"];
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(InventoryItem, _impl_.equipment_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string item_id = 1 [json_name = "itemId"];
    {PROTOBUF_FIELD_OFFSET(InventoryItem, _impl_.item_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 quantity = 2 [json_name = "quantity"];
    {PROTOBUF_FIELD_OFFSET(InventoryItem, _impl_.quantity_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // bool is_attuned = 3 [json_name = "isAttuned"];
    {PROTOBUF_FIELD_OFFSET(InventoryItem, _impl_.is_attuned_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string custom_name = 4 [json_name = "customName"];
    {PROTOBUF_FIELD_OFFSET(InventoryItem, _impl_.custom_name_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .dnd5e.api.v1alpha1.Equipment equipment = 5 [json_name = "equipment"];
    {PROTOBUF_FIELD_OFFSET(InventoryItem, _impl_.equipment_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::Equipment>()},
  }},
  {{
    "\40\7\0\0\13\0\0\0"
    "dnd5e.api.v1alpha1.InventoryItem"
    "item_id"
    "custom_name"
  }},
};
PROTOBUF_NOINLINE void InventoryItem::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.InventoryItem)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.item_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.custom_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.equipment_ != nullptr);
      _impl_.equipment_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000018U) != 0) {
    ::memset(&_impl_.quantity_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_attuned_) -
        reinterpret_cast<char*>(&_impl_.quantity_)) + sizeof(_impl_.is_attuned_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL InventoryItem::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const InventoryItem& this_ = static_cast<const InventoryItem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL InventoryItem::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const InventoryItem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.InventoryItem)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string item_id = 1 [json_name = "itemId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_item_id().empty()) {
      const ::std::string& _s = this_._internal_item_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.InventoryItem.item_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // int32 quantity = 2 [json_name = "quantity"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_quantity() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_quantity(), target);
    }
  }

  // bool is_attuned = 3 [json_name = "isAttuned"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_is_attuned() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_is_attuned(), target);
    }
  }

  // string custom_name = 4 [json_name = "customName"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_custom_name().empty()) {
      const ::std::string& _s = this_._internal_custom_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.InventoryItem.custom_name");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.Equipment equipment = 5 [json_name = "equipment"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.equipment_, this_._impl_.equipment_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.InventoryItem)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t InventoryItem::ByteSizeLong(const MessageLite& base) {
  const InventoryItem& this_ = static_cast<const InventoryItem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t InventoryItem::ByteSizeLong() const {
  const InventoryItem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.InventoryItem)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // string item_id = 1 [json_name = "itemId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_item_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_item_id());
      }
    }
    // string custom_name = 4 [json_name = "customName"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_custom_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_custom_name());
      }
    }
    // .dnd5e.api.v1alpha1.Equipment equipment = 5 [json_name = "equipment"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.equipment_);
    }
    // int32 quantity = 2 [json_name = "quantity"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_quantity() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_quantity());
      }
    }
    // bool is_attuned = 3 [json_name = "isAttuned"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_is_attuned() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void InventoryItem::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InventoryItem*>(&to_msg);
  auto& from = static_cast<const InventoryItem&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.InventoryItem)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_item_id().empty()) {
        _this->_internal_set_item_id(from._internal_item_id());
      } else {
        if (_this->_impl_.item_id_.IsDefault()) {
          _this->_internal_set_item_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_custom_name().empty()) {
        _this->_internal_set_custom_name(from._internal_custom_name());
      } else {
        if (_this->_impl_.custom_name_.IsDefault()) {
          _this->_internal_set_custom_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.equipment_ != nullptr);
      if (_this->_impl_.equipment_ == nullptr) {
        _this->_impl_.equipment_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.equipment_);
      } else {
        _this->_impl_.equipment_->MergeFrom(*from._impl_.equipment_);
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_quantity() != 0) {
        _this->_impl_.quantity_ = from._impl_.quantity_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_is_attuned() != 0) {
        _this->_impl_.is_attuned_ = from._impl_.is_attuned_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InventoryItem::CopyFrom(const InventoryItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.InventoryItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InventoryItem::InternalSwap(InventoryItem* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.item_id_, &other->_impl_.item_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.custom_name_, &other->_impl_.custom_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InventoryItem, _impl_.is_attuned_)
      + sizeof(InventoryItem::_impl_.is_attuned_)
      - PROTOBUF_FIELD_OFFSET(InventoryItem, _impl_.equipment_)>(
          reinterpret_cast<char*>(&_impl_.equipment_),
          reinterpret_cast<char*>(&other->_impl_.equipment_));
}

::google::protobuf::Metadata InventoryItem::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EncumbranceInfo::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<EncumbranceInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EncumbranceInfo, _impl_._has_bits_);
};

EncumbranceInfo::EncumbranceInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EncumbranceInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.EncumbranceInfo)
}
EncumbranceInfo::EncumbranceInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const EncumbranceInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EncumbranceInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE EncumbranceInfo::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void EncumbranceInfo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, current_weight_),
           0,
           offsetof(Impl_, level_) -
               offsetof(Impl_, current_weight_) +
               sizeof(Impl_::level_));
}
EncumbranceInfo::~EncumbranceInfo() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.EncumbranceInfo)
  SharedDtor(*this);
}
inline void EncumbranceInfo::SharedDtor(MessageLite& self) {
  EncumbranceInfo& this_ = static_cast<EncumbranceInfo&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EncumbranceInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EncumbranceInfo(arena);
}
constexpr auto EncumbranceInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(EncumbranceInfo),
                                            alignof(EncumbranceInfo));
}
constexpr auto EncumbranceInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EncumbranceInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EncumbranceInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EncumbranceInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EncumbranceInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EncumbranceInfo>(), &EncumbranceInfo::ByteSizeLong,
              &EncumbranceInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EncumbranceInfo, _impl_._cached_size_),
          false,
      },
      &EncumbranceInfo::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EncumbranceInfo_class_data_ =
        EncumbranceInfo::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EncumbranceInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EncumbranceInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EncumbranceInfo_class_data_.tc_table);
  return EncumbranceInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2>
EncumbranceInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EncumbranceInfo, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    EncumbranceInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::EncumbranceInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .dnd5e.api.v1alpha1.EncumbranceLevel level = 4 [json_name = "level"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EncumbranceInfo, _impl_.level_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(EncumbranceInfo, _impl_.level_)}},
    // int32 current_weight = 1 [json_name = "currentWeight"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EncumbranceInfo, _impl_.current_weight_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(EncumbranceInfo, _impl_.current_weight_)}},
    // int32 carrying_capacity = 2 [json_name = "carryingCapacity"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EncumbranceInfo, _impl_.carrying_capacity_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(EncumbranceInfo, _impl_.carrying_capacity_)}},
    // int32 max_capacity = 3 [json_name = "maxCapacity"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EncumbranceInfo, _impl_.max_capacity_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(EncumbranceInfo, _impl_.max_capacity_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 current_weight = 1 [json_name = "currentWeight"];
    {PROTOBUF_FIELD_OFFSET(EncumbranceInfo, _impl_.current_weight_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 carrying_capacity = 2 [json_name = "carryingCapacity"];
    {PROTOBUF_FIELD_OFFSET(EncumbranceInfo, _impl_.carrying_capacity_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 max_capacity = 3 [json_name = "maxCapacity"];
    {PROTOBUF_FIELD_OFFSET(EncumbranceInfo, _impl_.max_capacity_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .dnd5e.api.v1alpha1.EncumbranceLevel level = 4 [json_name = "level"];
    {PROTOBUF_FIELD_OFFSET(EncumbranceInfo, _impl_.level_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void EncumbranceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.EncumbranceInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    ::memset(&_impl_.current_weight_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.level_) -
        reinterpret_cast<char*>(&_impl_.current_weight_)) + sizeof(_impl_.level_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EncumbranceInfo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EncumbranceInfo& this_ = static_cast<const EncumbranceInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EncumbranceInfo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EncumbranceInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.EncumbranceInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 current_weight = 1 [json_name = "currentWeight"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_current_weight() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_current_weight(), target);
    }
  }

  // int32 carrying_capacity = 2 [json_name = "carryingCapacity"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_carrying_capacity() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_carrying_capacity(), target);
    }
  }

  // int32 max_capacity = 3 [json_name = "maxCapacity"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_max_capacity() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_max_capacity(), target);
    }
  }

  // .dnd5e.api.v1alpha1.EncumbranceLevel level = 4 [json_name = "level"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_level() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          4, this_._internal_level(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.EncumbranceInfo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EncumbranceInfo::ByteSizeLong(const MessageLite& base) {
  const EncumbranceInfo& this_ = static_cast<const EncumbranceInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EncumbranceInfo::ByteSizeLong() const {
  const EncumbranceInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.EncumbranceInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // int32 current_weight = 1 [json_name = "currentWeight"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_current_weight() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_current_weight());
      }
    }
    // int32 carrying_capacity = 2 [json_name = "carryingCapacity"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_carrying_capacity() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_carrying_capacity());
      }
    }
    // int32 max_capacity = 3 [json_name = "maxCapacity"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_max_capacity() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_max_capacity());
      }
    }
    // .dnd5e.api.v1alpha1.EncumbranceLevel level = 4 [json_name = "level"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_level() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_level());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EncumbranceInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EncumbranceInfo*>(&to_msg);
  auto& from = static_cast<const EncumbranceInfo&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.EncumbranceInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (from._internal_current_weight() != 0) {
        _this->_impl_.current_weight_ = from._impl_.current_weight_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_carrying_capacity() != 0) {
        _this->_impl_.carrying_capacity_ = from._impl_.carrying_capacity_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_max_capacity() != 0) {
        _this->_impl_.max_capacity_ = from._impl_.max_capacity_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_level() != 0) {
        _this->_impl_.level_ = from._impl_.level_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EncumbranceInfo::CopyFrom(const EncumbranceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.EncumbranceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EncumbranceInfo::InternalSwap(EncumbranceInfo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EncumbranceInfo, _impl_.level_)
      + sizeof(EncumbranceInfo::_impl_.level_)
      - PROTOBUF_FIELD_OFFSET(EncumbranceInfo, _impl_.current_weight_)>(
          reinterpret_cast<char*>(&_impl_.current_weight_),
          reinterpret_cast<char*>(&other->_impl_.current_weight_));
}

::google::protobuf::Metadata EncumbranceInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ChoiceData::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ChoiceData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ChoiceData, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceData, _impl_._oneof_case_);
};

void ChoiceData::set_allocated_skills(::dnd5e::api::v1alpha1::SkillList* PROTOBUF_NULLABLE skills) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_selection();
  if (skills) {
    ::google::protobuf::Arena* submessage_arena = skills->GetArena();
    if (message_arena != submessage_arena) {
      skills = ::google::protobuf::internal::GetOwnedMessage(message_arena, skills, submessage_arena);
    }
    set_has_skills();
    _impl_.selection_.skills_ = skills;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.ChoiceData.skills)
}
void ChoiceData::set_allocated_languages(::dnd5e::api::v1alpha1::LanguageList* PROTOBUF_NULLABLE languages) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_selection();
  if (languages) {
    ::google::protobuf::Arena* submessage_arena = languages->GetArena();
    if (message_arena != submessage_arena) {
      languages = ::google::protobuf::internal::GetOwnedMessage(message_arena, languages, submessage_arena);
    }
    set_has_languages();
    _impl_.selection_.languages_ = languages;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.ChoiceData.languages)
}
void ChoiceData::set_allocated_ability_scores(::dnd5e::api::v1alpha1::AbilityScores* PROTOBUF_NULLABLE ability_scores) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_selection();
  if (ability_scores) {
    ::google::protobuf::Arena* submessage_arena = ability_scores->GetArena();
    if (message_arena != submessage_arena) {
      ability_scores = ::google::protobuf::internal::GetOwnedMessage(message_arena, ability_scores, submessage_arena);
    }
    set_has_ability_scores();
    _impl_.selection_.ability_scores_ = ability_scores;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.ChoiceData.ability_scores)
}
void ChoiceData::set_allocated_equipment(::dnd5e::api::v1alpha1::EquipmentList* PROTOBUF_NULLABLE equipment) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_selection();
  if (equipment) {
    ::google::protobuf::Arena* submessage_arena = equipment->GetArena();
    if (message_arena != submessage_arena) {
      equipment = ::google::protobuf::internal::GetOwnedMessage(message_arena, equipment, submessage_arena);
    }
    set_has_equipment();
    _impl_.selection_.equipment_ = equipment;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.ChoiceData.equipment)
}
void ChoiceData::set_allocated_race(::dnd5e::api::v1alpha1::RaceChoice* PROTOBUF_NULLABLE race) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_selection();
  if (race) {
    ::google::protobuf::Arena* submessage_arena = race->GetArena();
    if (message_arena != submessage_arena) {
      race = ::google::protobuf::internal::GetOwnedMessage(message_arena, race, submessage_arena);
    }
    set_has_race();
    _impl_.selection_.race_ = race;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.ChoiceData.race)
}
void ChoiceData::set_allocated_class_(::dnd5e::api::v1alpha1::ClassChoice* PROTOBUF_NULLABLE class_) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_selection();
  if (class_) {
    ::google::protobuf::Arena* submessage_arena = class_->GetArena();
    if (message_arena != submessage_arena) {
      class_ = ::google::protobuf::internal::GetOwnedMessage(message_arena, class_, submessage_arena);
    }
    set_has_class_();
    _impl_.selection_.class__ = class_;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.ChoiceData.class)
}
void ChoiceData::set_allocated_spells(::dnd5e::api::v1alpha1::SpellList* PROTOBUF_NULLABLE spells) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_selection();
  if (spells) {
    ::google::protobuf::Arena* submessage_arena = spells->GetArena();
    if (message_arena != submessage_arena) {
      spells = ::google::protobuf::internal::GetOwnedMessage(message_arena, spells, submessage_arena);
    }
    set_has_spells();
    _impl_.selection_.spells_ = spells;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.ChoiceData.spells)
}
void ChoiceData::set_allocated_cantrips(::dnd5e::api::v1alpha1::CantripList* PROTOBUF_NULLABLE cantrips) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_selection();
  if (cantrips) {
    ::google::protobuf::Arena* submessage_arena = cantrips->GetArena();
    if (message_arena != submessage_arena) {
      cantrips = ::google::protobuf::internal::GetOwnedMessage(message_arena, cantrips, submessage_arena);
    }
    set_has_cantrips();
    _impl_.selection_.cantrips_ = cantrips;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.ChoiceData.cantrips)
}
void ChoiceData::set_allocated_expertise(::dnd5e::api::v1alpha1::ExpertiseList* PROTOBUF_NULLABLE expertise) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_selection();
  if (expertise) {
    ::google::protobuf::Arena* submessage_arena = expertise->GetArena();
    if (message_arena != submessage_arena) {
      expertise = ::google::protobuf::internal::GetOwnedMessage(message_arena, expertise, submessage_arena);
    }
    set_has_expertise();
    _impl_.selection_.expertise_ = expertise;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.ChoiceData.expertise)
}
void ChoiceData::set_allocated_traits(::dnd5e::api::v1alpha1::TraitList* PROTOBUF_NULLABLE traits) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_selection();
  if (traits) {
    ::google::protobuf::Arena* submessage_arena = traits->GetArena();
    if (message_arena != submessage_arena) {
      traits = ::google::protobuf::internal::GetOwnedMessage(message_arena, traits, submessage_arena);
    }
    set_has_traits();
    _impl_.selection_.traits_ = traits;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.ChoiceData.traits)
}
void ChoiceData::set_allocated_tool_proficiencies(::dnd5e::api::v1alpha1::ToolProficiencyList* PROTOBUF_NULLABLE tool_proficiencies) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_selection();
  if (tool_proficiencies) {
    ::google::protobuf::Arena* submessage_arena = tool_proficiencies->GetArena();
    if (message_arena != submessage_arena) {
      tool_proficiencies = ::google::protobuf::internal::GetOwnedMessage(message_arena, tool_proficiencies, submessage_arena);
    }
    set_has_tool_proficiencies();
    _impl_.selection_.tool_proficiencies_ = tool_proficiencies;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.ChoiceData.tool_proficiencies)
}
ChoiceData::ChoiceData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ChoiceData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.ChoiceData)
}
PROTOBUF_NDEBUG_INLINE ChoiceData::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::ChoiceData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        choice_id_(arena, from.choice_id_),
        selection_{},
        _oneof_case_{from._oneof_case_[0]} {}

ChoiceData::ChoiceData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ChoiceData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ChoiceData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ChoiceData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, category_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, category_),
           offsetof(Impl_, source_) -
               offsetof(Impl_, category_) +
               sizeof(Impl_::source_));
  switch (selection_case()) {
    case SELECTION_NOT_SET:
      break;
      case kName:
        new (&_impl_.selection_.name_) decltype(_impl_.selection_.name_){arena, from._impl_.selection_.name_};
        break;
      case kSkills:
        _impl_.selection_.skills_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.selection_.skills_);
        break;
      case kLanguages:
        _impl_.selection_.languages_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.selection_.languages_);
        break;
      case kAbilityScores:
        _impl_.selection_.ability_scores_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.selection_.ability_scores_);
        break;
      case kFightingStyle:
        _impl_.selection_.fighting_style_ = from._impl_.selection_.fighting_style_;
        break;
      case kEquipment:
        _impl_.selection_.equipment_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.selection_.equipment_);
        break;
      case kRace:
        _impl_.selection_.race_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.selection_.race_);
        break;
      case kClass:
        _impl_.selection_.class__ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.selection_.class__);
        break;
      case kBackground:
        _impl_.selection_.background_ = from._impl_.selection_.background_;
        break;
      case kSpells:
        _impl_.selection_.spells_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.selection_.spells_);
        break;
      case kCantrips:
        _impl_.selection_.cantrips_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.selection_.cantrips_);
        break;
      case kExpertise:
        _impl_.selection_.expertise_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.selection_.expertise_);
        break;
      case kTraits:
        _impl_.selection_.traits_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.selection_.traits_);
        break;
      case kToolProficiencies:
        _impl_.selection_.tool_proficiencies_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.selection_.tool_proficiencies_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.ChoiceData)
}
PROTOBUF_NDEBUG_INLINE ChoiceData::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        choice_id_(arena),
        selection_{},
        _oneof_case_{} {}

inline void ChoiceData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, category_),
           0,
           offsetof(Impl_, source_) -
               offsetof(Impl_, category_) +
               sizeof(Impl_::source_));
}
ChoiceData::~ChoiceData() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.ChoiceData)
  SharedDtor(*this);
}
inline void ChoiceData::SharedDtor(MessageLite& self) {
  ChoiceData& this_ = static_cast<ChoiceData&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.choice_id_.Destroy();
  if (this_.has_selection()) {
    this_.clear_selection();
  }
  this_._impl_.~Impl_();
}

void ChoiceData::clear_selection() {
// @@protoc_insertion_point(one_of_clear_start:dnd5e.api.v1alpha1.ChoiceData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (selection_case()) {
    case kName: {
      _impl_.selection_.name_.Destroy();
      break;
    }
    case kSkills: {
      if (GetArena() == nullptr) {
        delete _impl_.selection_.skills_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.selection_.skills_);
      }
      break;
    }
    case kLanguages: {
      if (GetArena() == nullptr) {
        delete _impl_.selection_.languages_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.selection_.languages_);
      }
      break;
    }
    case kAbilityScores: {
      if (GetArena() == nullptr) {
        delete _impl_.selection_.ability_scores_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.selection_.ability_scores_);
      }
      break;
    }
    case kFightingStyle: {
      // No need to clear
      break;
    }
    case kEquipment: {
      if (GetArena() == nullptr) {
        delete _impl_.selection_.equipment_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.selection_.equipment_);
      }
      break;
    }
    case kRace: {
      if (GetArena() == nullptr) {
        delete _impl_.selection_.race_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.selection_.race_);
      }
      break;
    }
    case kClass: {
      if (GetArena() == nullptr) {
        delete _impl_.selection_.class__;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.selection_.class__);
      }
      break;
    }
    case kBackground: {
      // No need to clear
      break;
    }
    case kSpells: {
      if (GetArena() == nullptr) {
        delete _impl_.selection_.spells_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.selection_.spells_);
      }
      break;
    }
    case kCantrips: {
      if (GetArena() == nullptr) {
        delete _impl_.selection_.cantrips_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.selection_.cantrips_);
      }
      break;
    }
    case kExpertise: {
      if (GetArena() == nullptr) {
        delete _impl_.selection_.expertise_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.selection_.expertise_);
      }
      break;
    }
    case kTraits: {
      if (GetArena() == nullptr) {
        delete _impl_.selection_.traits_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.selection_.traits_);
      }
      break;
    }
    case kToolProficiencies: {
      if (GetArena() == nullptr) {
        delete _impl_.selection_.tool_proficiencies_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.selection_.tool_proficiencies_);
      }
      break;
    }
    case SELECTION_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = SELECTION_NOT_SET;
}


inline void* PROTOBUF_NONNULL ChoiceData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ChoiceData(arena);
}
constexpr auto ChoiceData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ChoiceData),
                                            alignof(ChoiceData));
}
constexpr auto ChoiceData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ChoiceData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ChoiceData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ChoiceData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ChoiceData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ChoiceData>(), &ChoiceData::ByteSizeLong,
              &ChoiceData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ChoiceData, _impl_._cached_size_),
          false,
      },
      &ChoiceData::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ChoiceData_class_data_ =
        ChoiceData::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ChoiceData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ChoiceData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ChoiceData_class_data_.tc_table);
  return ChoiceData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 17, 11, 67, 2>
ChoiceData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ChoiceData, _impl_._has_bits_),
    0, // no _extensions_
    17, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294836224,  // skipmap
    offsetof(decltype(_table_), field_entries),
    17,  // num_field_entries
    11,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ChoiceData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ChoiceData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .dnd5e.api.v1alpha1.ChoiceCategory category = 1 [json_name = "category"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ChoiceData, _impl_.category_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(ChoiceData, _impl_.category_)}},
    // .dnd5e.api.v1alpha1.ChoiceSource source = 2 [json_name = "source"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ChoiceData, _impl_.source_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(ChoiceData, _impl_.source_)}},
    // string choice_id = 3 [json_name = "choiceId"];
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(ChoiceData, _impl_.choice_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.ChoiceCategory category = 1 [json_name = "category"];
    {PROTOBUF_FIELD_OFFSET(ChoiceData, _impl_.category_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.ChoiceSource source = 2 [json_name = "source"];
    {PROTOBUF_FIELD_OFFSET(ChoiceData, _impl_.source_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string choice_id = 3 [json_name = "choiceId"];
    {PROTOBUF_FIELD_OFFSET(ChoiceData, _impl_.choice_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 4 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(ChoiceData, _impl_.selection_.name_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .dnd5e.api.v1alpha1.SkillList skills = 5 [json_name = "skills"];
    {PROTOBUF_FIELD_OFFSET(ChoiceData, _impl_.selection_.skills_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.LanguageList languages = 6 [json_name = "languages"];
    {PROTOBUF_FIELD_OFFSET(ChoiceData, _impl_.selection_.languages_), _Internal::kOneofCaseOffset + 0, 1, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.AbilityScores ability_scores = 7 [json_name = "abilityScores"];
    {PROTOBUF_FIELD_OFFSET(ChoiceData, _impl_.selection_.ability_scores_), _Internal::kOneofCaseOffset + 0, 2, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.FightingStyle fighting_style = 8 [json_name = "fightingStyle"];
    {PROTOBUF_FIELD_OFFSET(ChoiceData, _impl_.selection_.fighting_style_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.EquipmentList equipment = 9 [json_name = "equipment"];
    {PROTOBUF_FIELD_OFFSET(ChoiceData, _impl_.selection_.equipment_), _Internal::kOneofCaseOffset + 0, 3, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.RaceChoice race = 10 [json_name = "race"];
    {PROTOBUF_FIELD_OFFSET(ChoiceData, _impl_.selection_.race_), _Internal::kOneofCaseOffset + 0, 4, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.ClassChoice class = 11 [json_name = "class"];
    {PROTOBUF_FIELD_OFFSET(ChoiceData, _impl_.selection_.class__), _Internal::kOneofCaseOffset + 0, 5, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.Background background = 12 [json_name = "background"];
    {PROTOBUF_FIELD_OFFSET(ChoiceData, _impl_.selection_.background_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.SpellList spells = 13 [json_name = "spells"];
    {PROTOBUF_FIELD_OFFSET(ChoiceData, _impl_.selection_.spells_), _Internal::kOneofCaseOffset + 0, 6, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.CantripList cantrips = 14 [json_name = "cantrips"];
    {PROTOBUF_FIELD_OFFSET(ChoiceData, _impl_.selection_.cantrips_), _Internal::kOneofCaseOffset + 0, 7, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.ExpertiseList expertise = 15 [json_name = "expertise"];
    {PROTOBUF_FIELD_OFFSET(ChoiceData, _impl_.selection_.expertise_), _Internal::kOneofCaseOffset + 0, 8, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.TraitList traits = 16 [json_name = "traits"];
    {PROTOBUF_FIELD_OFFSET(ChoiceData, _impl_.selection_.traits_), _Internal::kOneofCaseOffset + 0, 9, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.ToolProficiencyList tool_proficiencies = 17 [json_name = "toolProficiencies"];
    {PROTOBUF_FIELD_OFFSET(ChoiceData, _impl_.selection_.tool_proficiencies_), _Internal::kOneofCaseOffset + 0, 10, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::SkillList>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::LanguageList>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::AbilityScores>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::EquipmentList>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::RaceChoice>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ClassChoice>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::SpellList>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CantripList>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ExpertiseList>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::TraitList>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ToolProficiencyList>()},
  }},
  {{
    "\35\0\0\11\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.ChoiceData"
    "choice_id"
    "name"
  }},
};
PROTOBUF_NOINLINE void ChoiceData::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.ChoiceData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.choice_id_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x00000006U) != 0) {
    ::memset(&_impl_.category_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.source_) -
        reinterpret_cast<char*>(&_impl_.category_)) + sizeof(_impl_.source_));
  }
  clear_selection();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ChoiceData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ChoiceData& this_ = static_cast<const ChoiceData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ChoiceData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ChoiceData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.ChoiceData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .dnd5e.api.v1alpha1.ChoiceCategory category = 1 [json_name = "category"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_category() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_category(), target);
    }
  }

  // .dnd5e.api.v1alpha1.ChoiceSource source = 2 [json_name = "source"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_source() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_source(), target);
    }
  }

  // string choice_id = 3 [json_name = "choiceId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_choice_id().empty()) {
      const ::std::string& _s = this_._internal_choice_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.ChoiceData.choice_id");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  switch (this_.selection_case()) {
    case kName: {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.ChoiceData.name");
      target = stream->WriteStringMaybeAliased(4, _s, target);
      break;
    }
    case kSkills: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, *this_._impl_.selection_.skills_, this_._impl_.selection_.skills_->GetCachedSize(), target,
          stream);
      break;
    }
    case kLanguages: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, *this_._impl_.selection_.languages_, this_._impl_.selection_.languages_->GetCachedSize(), target,
          stream);
      break;
    }
    case kAbilityScores: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          7, *this_._impl_.selection_.ability_scores_, this_._impl_.selection_.ability_scores_->GetCachedSize(), target,
          stream);
      break;
    }
    case kFightingStyle: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          8, this_._internal_fighting_style(), target);
      break;
    }
    case kEquipment: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          9, *this_._impl_.selection_.equipment_, this_._impl_.selection_.equipment_->GetCachedSize(), target,
          stream);
      break;
    }
    case kRace: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          10, *this_._impl_.selection_.race_, this_._impl_.selection_.race_->GetCachedSize(), target,
          stream);
      break;
    }
    case kClass: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          11, *this_._impl_.selection_.class__, this_._impl_.selection_.class__->GetCachedSize(), target,
          stream);
      break;
    }
    case kBackground: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          12, this_._internal_background(), target);
      break;
    }
    case kSpells: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          13, *this_._impl_.selection_.spells_, this_._impl_.selection_.spells_->GetCachedSize(), target,
          stream);
      break;
    }
    case kCantrips: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          14, *this_._impl_.selection_.cantrips_, this_._impl_.selection_.cantrips_->GetCachedSize(), target,
          stream);
      break;
    }
    case kExpertise: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          15, *this_._impl_.selection_.expertise_, this_._impl_.selection_.expertise_->GetCachedSize(), target,
          stream);
      break;
    }
    case kTraits: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          16, *this_._impl_.selection_.traits_, this_._impl_.selection_.traits_->GetCachedSize(), target,
          stream);
      break;
    }
    case kToolProficiencies: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          17, *this_._impl_.selection_.tool_proficiencies_, this_._impl_.selection_.tool_proficiencies_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.ChoiceData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ChoiceData::ByteSizeLong(const MessageLite& base) {
  const ChoiceData& this_ = static_cast<const ChoiceData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ChoiceData::ByteSizeLong() const {
  const ChoiceData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.ChoiceData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string choice_id = 3 [json_name = "choiceId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_choice_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_choice_id());
      }
    }
    // .dnd5e.api.v1alpha1.ChoiceCategory category = 1 [json_name = "category"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_category() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_category());
      }
    }
    // .dnd5e.api.v1alpha1.ChoiceSource source = 2 [json_name = "source"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_source() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_source());
      }
    }
  }
  switch (this_.selection_case()) {
    // string name = 4 [json_name = "name"];
    case kName: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_name());
      break;
    }
    // .dnd5e.api.v1alpha1.SkillList skills = 5 [json_name = "skills"];
    case kSkills: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.selection_.skills_);
      break;
    }
    // .dnd5e.api.v1alpha1.LanguageList languages = 6 [json_name = "languages"];
    case kLanguages: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.selection_.languages_);
      break;
    }
    // .dnd5e.api.v1alpha1.AbilityScores ability_scores = 7 [json_name = "abilityScores"];
    case kAbilityScores: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.selection_.ability_scores_);
      break;
    }
    // .dnd5e.api.v1alpha1.FightingStyle fighting_style = 8 [json_name = "fightingStyle"];
    case kFightingStyle: {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_fighting_style());
      break;
    }
    // .dnd5e.api.v1alpha1.EquipmentList equipment = 9 [json_name = "equipment"];
    case kEquipment: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.selection_.equipment_);
      break;
    }
    // .dnd5e.api.v1alpha1.RaceChoice race = 10 [json_name = "race"];
    case kRace: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.selection_.race_);
      break;
    }
    // .dnd5e.api.v1alpha1.ClassChoice class = 11 [json_name = "class"];
    case kClass: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.selection_.class__);
      break;
    }
    // .dnd5e.api.v1alpha1.Background background = 12 [json_name = "background"];
    case kBackground: {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_background());
      break;
    }
    // .dnd5e.api.v1alpha1.SpellList spells = 13 [json_name = "spells"];
    case kSpells: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.selection_.spells_);
      break;
    }
    // .dnd5e.api.v1alpha1.CantripList cantrips = 14 [json_name = "cantrips"];
    case kCantrips: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.selection_.cantrips_);
      break;
    }
    // .dnd5e.api.v1alpha1.ExpertiseList expertise = 15 [json_name = "expertise"];
    case kExpertise: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.selection_.expertise_);
      break;
    }
    // .dnd5e.api.v1alpha1.TraitList traits = 16 [json_name = "traits"];
    case kTraits: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.selection_.traits_);
      break;
    }
    // .dnd5e.api.v1alpha1.ToolProficiencyList tool_proficiencies = 17 [json_name = "toolProficiencies"];
    case kToolProficiencies: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.selection_.tool_proficiencies_);
      break;
    }
    case SELECTION_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ChoiceData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ChoiceData*>(&to_msg);
  auto& from = static_cast<const ChoiceData&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.ChoiceData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_choice_id().empty()) {
        _this->_internal_set_choice_id(from._internal_choice_id());
      } else {
        if (_this->_impl_.choice_id_.IsDefault()) {
          _this->_internal_set_choice_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_category() != 0) {
        _this->_impl_.category_ = from._impl_.category_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_source() != 0) {
        _this->_impl_.source_ = from._impl_.source_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_selection();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kName: {
        if (oneof_needs_init) {
          _this->_impl_.selection_.name_.InitDefault();
        }
        _this->_impl_.selection_.name_.Set(from._internal_name(), arena);
        break;
      }
      case kSkills: {
        if (oneof_needs_init) {
          _this->_impl_.selection_.skills_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.selection_.skills_);
        } else {
          _this->_impl_.selection_.skills_->MergeFrom(*from._impl_.selection_.skills_);
        }
        break;
      }
      case kLanguages: {
        if (oneof_needs_init) {
          _this->_impl_.selection_.languages_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.selection_.languages_);
        } else {
          _this->_impl_.selection_.languages_->MergeFrom(*from._impl_.selection_.languages_);
        }
        break;
      }
      case kAbilityScores: {
        if (oneof_needs_init) {
          _this->_impl_.selection_.ability_scores_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.selection_.ability_scores_);
        } else {
          _this->_impl_.selection_.ability_scores_->MergeFrom(*from._impl_.selection_.ability_scores_);
        }
        break;
      }
      case kFightingStyle: {
        _this->_impl_.selection_.fighting_style_ = from._impl_.selection_.fighting_style_;
        break;
      }
      case kEquipment: {
        if (oneof_needs_init) {
          _this->_impl_.selection_.equipment_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.selection_.equipment_);
        } else {
          _this->_impl_.selection_.equipment_->MergeFrom(*from._impl_.selection_.equipment_);
        }
        break;
      }
      case kRace: {
        if (oneof_needs_init) {
          _this->_impl_.selection_.race_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.selection_.race_);
        } else {
          _this->_impl_.selection_.race_->MergeFrom(*from._impl_.selection_.race_);
        }
        break;
      }
      case kClass: {
        if (oneof_needs_init) {
          _this->_impl_.selection_.class__ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.selection_.class__);
        } else {
          _this->_impl_.selection_.class__->MergeFrom(*from._impl_.selection_.class__);
        }
        break;
      }
      case kBackground: {
        _this->_impl_.selection_.background_ = from._impl_.selection_.background_;
        break;
      }
      case kSpells: {
        if (oneof_needs_init) {
          _this->_impl_.selection_.spells_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.selection_.spells_);
        } else {
          _this->_impl_.selection_.spells_->MergeFrom(*from._impl_.selection_.spells_);
        }
        break;
      }
      case kCantrips: {
        if (oneof_needs_init) {
          _this->_impl_.selection_.cantrips_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.selection_.cantrips_);
        } else {
          _this->_impl_.selection_.cantrips_->MergeFrom(*from._impl_.selection_.cantrips_);
        }
        break;
      }
      case kExpertise: {
        if (oneof_needs_init) {
          _this->_impl_.selection_.expertise_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.selection_.expertise_);
        } else {
          _this->_impl_.selection_.expertise_->MergeFrom(*from._impl_.selection_.expertise_);
        }
        break;
      }
      case kTraits: {
        if (oneof_needs_init) {
          _this->_impl_.selection_.traits_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.selection_.traits_);
        } else {
          _this->_impl_.selection_.traits_->MergeFrom(*from._impl_.selection_.traits_);
        }
        break;
      }
      case kToolProficiencies: {
        if (oneof_needs_init) {
          _this->_impl_.selection_.tool_proficiencies_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.selection_.tool_proficiencies_);
        } else {
          _this->_impl_.selection_.tool_proficiencies_->MergeFrom(*from._impl_.selection_.tool_proficiencies_);
        }
        break;
      }
      case SELECTION_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChoiceData::CopyFrom(const ChoiceData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.ChoiceData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ChoiceData::InternalSwap(ChoiceData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.choice_id_, &other->_impl_.choice_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChoiceData, _impl_.source_)
      + sizeof(ChoiceData::_impl_.source_)
      - PROTOBUF_FIELD_OFFSET(ChoiceData, _impl_.category_)>(
          reinterpret_cast<char*>(&_impl_.category_),
          reinterpret_cast<char*>(&other->_impl_.category_));
  swap(_impl_.selection_, other->_impl_.selection_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ChoiceData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SkillList::_Internal {
 public:
};

SkillList::SkillList(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SkillList_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.SkillList)
}
PROTOBUF_NDEBUG_INLINE SkillList::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::SkillList& from_msg)
      : skills_{visibility, arena, from.skills_},
        _skills_cached_byte_size_{0},
        _cached_size_{0} {}

SkillList::SkillList(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SkillList& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SkillList_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SkillList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.SkillList)
}
PROTOBUF_NDEBUG_INLINE SkillList::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : skills_{visibility, arena},
        _skills_cached_byte_size_{0},
        _cached_size_{0} {}

inline void SkillList::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SkillList::~SkillList() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.SkillList)
  SharedDtor(*this);
}
inline void SkillList::SharedDtor(MessageLite& self) {
  SkillList& this_ = static_cast<SkillList&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SkillList::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SkillList(arena);
}
constexpr auto SkillList::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SkillList, _impl_.skills_) +
          decltype(SkillList::_impl_.skills_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SkillList), alignof(SkillList), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SkillList::PlacementNew_,
                                 sizeof(SkillList),
                                 alignof(SkillList));
  }
}
constexpr auto SkillList::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SkillList_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SkillList::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SkillList>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SkillList::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SkillList>(), &SkillList::ByteSizeLong,
              &SkillList::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SkillList, _impl_._cached_size_),
          false,
      },
      &SkillList::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SkillList_class_data_ =
        SkillList::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SkillList::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SkillList_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SkillList_class_data_.tc_table);
  return SkillList_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
SkillList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SkillList_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::SkillList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dnd5e.api.v1alpha1.Skill skills = 1 [json_name = "skills"];
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SkillList, _impl_.skills_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dnd5e.api.v1alpha1.Skill skills = 1 [json_name = "skills"];
    {PROTOBUF_FIELD_OFFSET(SkillList, _impl_.skills_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void SkillList::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.SkillList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.skills_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SkillList::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SkillList& this_ = static_cast<const SkillList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SkillList::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SkillList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.SkillList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dnd5e.api.v1alpha1.Skill skills = 1 [json_name = "skills"];
  {
    ::size_t byte_size = this_._impl_._skills_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          1, this_._internal_skills(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.SkillList)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SkillList::ByteSizeLong(const MessageLite& base) {
  const SkillList& this_ = static_cast<const SkillList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SkillList::ByteSizeLong() const {
  const SkillList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.SkillList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.Skill skills = 1 [json_name = "skills"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_skills(), 1, this_._impl_._skills_cached_byte_size_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SkillList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SkillList*>(&to_msg);
  auto& from = static_cast<const SkillList&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.SkillList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_skills()->MergeFrom(from._internal_skills());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SkillList::CopyFrom(const SkillList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.SkillList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SkillList::InternalSwap(SkillList* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.skills_.InternalSwap(&other->_impl_.skills_);
}

::google::protobuf::Metadata SkillList::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LanguageList::_Internal {
 public:
};

LanguageList::LanguageList(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LanguageList_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.LanguageList)
}
PROTOBUF_NDEBUG_INLINE LanguageList::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::LanguageList& from_msg)
      : languages_{visibility, arena, from.languages_},
        _languages_cached_byte_size_{0},
        _cached_size_{0} {}

LanguageList::LanguageList(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const LanguageList& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LanguageList_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LanguageList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.LanguageList)
}
PROTOBUF_NDEBUG_INLINE LanguageList::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : languages_{visibility, arena},
        _languages_cached_byte_size_{0},
        _cached_size_{0} {}

inline void LanguageList::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LanguageList::~LanguageList() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.LanguageList)
  SharedDtor(*this);
}
inline void LanguageList::SharedDtor(MessageLite& self) {
  LanguageList& this_ = static_cast<LanguageList&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LanguageList::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LanguageList(arena);
}
constexpr auto LanguageList::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(LanguageList, _impl_.languages_) +
          decltype(LanguageList::_impl_.languages_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(LanguageList), alignof(LanguageList), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&LanguageList::PlacementNew_,
                                 sizeof(LanguageList),
                                 alignof(LanguageList));
  }
}
constexpr auto LanguageList::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LanguageList_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LanguageList::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LanguageList>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LanguageList::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LanguageList>(), &LanguageList::ByteSizeLong,
              &LanguageList::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LanguageList, _impl_._cached_size_),
          false,
      },
      &LanguageList::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LanguageList_class_data_ =
        LanguageList::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LanguageList::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LanguageList_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LanguageList_class_data_.tc_table);
  return LanguageList_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
LanguageList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    LanguageList_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::LanguageList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dnd5e.api.v1alpha1.Language languages = 1 [json_name = "languages"];
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LanguageList, _impl_.languages_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dnd5e.api.v1alpha1.Language languages = 1 [json_name = "languages"];
    {PROTOBUF_FIELD_OFFSET(LanguageList, _impl_.languages_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void LanguageList::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.LanguageList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.languages_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LanguageList::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LanguageList& this_ = static_cast<const LanguageList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LanguageList::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LanguageList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.LanguageList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dnd5e.api.v1alpha1.Language languages = 1 [json_name = "languages"];
  {
    ::size_t byte_size = this_._impl_._languages_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          1, this_._internal_languages(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.LanguageList)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LanguageList::ByteSizeLong(const MessageLite& base) {
  const LanguageList& this_ = static_cast<const LanguageList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LanguageList::ByteSizeLong() const {
  const LanguageList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.LanguageList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.Language languages = 1 [json_name = "languages"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_languages(), 1, this_._impl_._languages_cached_byte_size_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LanguageList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LanguageList*>(&to_msg);
  auto& from = static_cast<const LanguageList&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.LanguageList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_languages()->MergeFrom(from._internal_languages());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LanguageList::CopyFrom(const LanguageList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.LanguageList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LanguageList::InternalSwap(LanguageList* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.languages_.InternalSwap(&other->_impl_.languages_);
}

::google::protobuf::Metadata LanguageList::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EquipmentList::_Internal {
 public:
};

EquipmentList::EquipmentList(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EquipmentList_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.EquipmentList)
}
PROTOBUF_NDEBUG_INLINE EquipmentList::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::EquipmentList& from_msg)
      : items_{visibility, arena, from.items_},
        _cached_size_{0} {}

EquipmentList::EquipmentList(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EquipmentList& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EquipmentList_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EquipmentList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.EquipmentList)
}
PROTOBUF_NDEBUG_INLINE EquipmentList::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : items_{visibility, arena},
        _cached_size_{0} {}

inline void EquipmentList::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
EquipmentList::~EquipmentList() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.EquipmentList)
  SharedDtor(*this);
}
inline void EquipmentList::SharedDtor(MessageLite& self) {
  EquipmentList& this_ = static_cast<EquipmentList&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EquipmentList::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EquipmentList(arena);
}
constexpr auto EquipmentList::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(EquipmentList, _impl_.items_) +
          decltype(EquipmentList::_impl_.items_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(EquipmentList), alignof(EquipmentList), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&EquipmentList::PlacementNew_,
                                 sizeof(EquipmentList),
                                 alignof(EquipmentList));
  }
}
constexpr auto EquipmentList::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EquipmentList_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EquipmentList::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EquipmentList>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EquipmentList::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EquipmentList>(), &EquipmentList::ByteSizeLong,
              &EquipmentList::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EquipmentList, _impl_._cached_size_),
          false,
      },
      &EquipmentList::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EquipmentList_class_data_ =
        EquipmentList::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EquipmentList::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EquipmentList_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EquipmentList_class_data_.tc_table);
  return EquipmentList_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
EquipmentList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    EquipmentList_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::EquipmentList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dnd5e.api.v1alpha1.EquipmentSelection items = 1 [json_name = "items"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EquipmentList, _impl_.items_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dnd5e.api.v1alpha1.EquipmentSelection items = 1 [json_name = "items"];
    {PROTOBUF_FIELD_OFFSET(EquipmentList, _impl_.items_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::EquipmentSelection>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void EquipmentList::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.EquipmentList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EquipmentList::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EquipmentList& this_ = static_cast<const EquipmentList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EquipmentList::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EquipmentList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.EquipmentList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dnd5e.api.v1alpha1.EquipmentSelection items = 1 [json_name = "items"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_items_size());
       i < n; i++) {
    const auto& repfield = this_._internal_items().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.EquipmentList)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EquipmentList::ByteSizeLong(const MessageLite& base) {
  const EquipmentList& this_ = static_cast<const EquipmentList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EquipmentList::ByteSizeLong() const {
  const EquipmentList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.EquipmentList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.EquipmentSelection items = 1 [json_name = "items"];
    {
      total_size += 1UL * this_._internal_items_size();
      for (const auto& msg : this_._internal_items()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EquipmentList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EquipmentList*>(&to_msg);
  auto& from = static_cast<const EquipmentList&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.EquipmentList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_items()->MergeFrom(
      from._internal_items());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EquipmentList::CopyFrom(const EquipmentList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.EquipmentList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EquipmentList::InternalSwap(EquipmentList* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
}

::google::protobuf::Metadata EquipmentList::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SpellList::_Internal {
 public:
};

SpellList::SpellList(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SpellList_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.SpellList)
}
PROTOBUF_NDEBUG_INLINE SpellList::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::SpellList& from_msg)
      : spells_{visibility, arena, from.spells_},
        _spells_cached_byte_size_{0},
        _cached_size_{0} {}

SpellList::SpellList(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SpellList& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SpellList_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SpellList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.SpellList)
}
PROTOBUF_NDEBUG_INLINE SpellList::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : spells_{visibility, arena},
        _spells_cached_byte_size_{0},
        _cached_size_{0} {}

inline void SpellList::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SpellList::~SpellList() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.SpellList)
  SharedDtor(*this);
}
inline void SpellList::SharedDtor(MessageLite& self) {
  SpellList& this_ = static_cast<SpellList&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SpellList::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SpellList(arena);
}
constexpr auto SpellList::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SpellList, _impl_.spells_) +
          decltype(SpellList::_impl_.spells_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SpellList), alignof(SpellList), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SpellList::PlacementNew_,
                                 sizeof(SpellList),
                                 alignof(SpellList));
  }
}
constexpr auto SpellList::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SpellList_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SpellList::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SpellList>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SpellList::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SpellList>(), &SpellList::ByteSizeLong,
              &SpellList::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SpellList, _impl_._cached_size_),
          false,
      },
      &SpellList::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SpellList_class_data_ =
        SpellList::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SpellList::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SpellList_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SpellList_class_data_.tc_table);
  return SpellList_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
SpellList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SpellList_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::SpellList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dnd5e.api.v1alpha1.Spell spells = 1 [json_name = "spells"];
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SpellList, _impl_.spells_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dnd5e.api.v1alpha1.Spell spells = 1 [json_name = "spells"];
    {PROTOBUF_FIELD_OFFSET(SpellList, _impl_.spells_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void SpellList::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.SpellList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.spells_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SpellList::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SpellList& this_ = static_cast<const SpellList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SpellList::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SpellList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.SpellList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dnd5e.api.v1alpha1.Spell spells = 1 [json_name = "spells"];
  {
    ::size_t byte_size = this_._impl_._spells_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          1, this_._internal_spells(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.SpellList)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SpellList::ByteSizeLong(const MessageLite& base) {
  const SpellList& this_ = static_cast<const SpellList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SpellList::ByteSizeLong() const {
  const SpellList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.SpellList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.Spell spells = 1 [json_name = "spells"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_spells(), 1, this_._impl_._spells_cached_byte_size_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SpellList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SpellList*>(&to_msg);
  auto& from = static_cast<const SpellList&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.SpellList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_spells()->MergeFrom(from._internal_spells());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SpellList::CopyFrom(const SpellList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.SpellList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SpellList::InternalSwap(SpellList* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.spells_.InternalSwap(&other->_impl_.spells_);
}

::google::protobuf::Metadata SpellList::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CantripList::_Internal {
 public:
};

CantripList::CantripList(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CantripList_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.CantripList)
}
PROTOBUF_NDEBUG_INLINE CantripList::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::CantripList& from_msg)
      : cantrips_{visibility, arena, from.cantrips_},
        _cantrips_cached_byte_size_{0},
        _cached_size_{0} {}

CantripList::CantripList(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CantripList& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CantripList_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CantripList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.CantripList)
}
PROTOBUF_NDEBUG_INLINE CantripList::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : cantrips_{visibility, arena},
        _cantrips_cached_byte_size_{0},
        _cached_size_{0} {}

inline void CantripList::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CantripList::~CantripList() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.CantripList)
  SharedDtor(*this);
}
inline void CantripList::SharedDtor(MessageLite& self) {
  CantripList& this_ = static_cast<CantripList&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CantripList::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CantripList(arena);
}
constexpr auto CantripList::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CantripList, _impl_.cantrips_) +
          decltype(CantripList::_impl_.cantrips_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CantripList), alignof(CantripList), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CantripList::PlacementNew_,
                                 sizeof(CantripList),
                                 alignof(CantripList));
  }
}
constexpr auto CantripList::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CantripList_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CantripList::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CantripList>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CantripList::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CantripList>(), &CantripList::ByteSizeLong,
              &CantripList::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CantripList, _impl_._cached_size_),
          false,
      },
      &CantripList::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CantripList_class_data_ =
        CantripList::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CantripList::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CantripList_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CantripList_class_data_.tc_table);
  return CantripList_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
CantripList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CantripList_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CantripList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dnd5e.api.v1alpha1.Spell cantrips = 1 [json_name = "cantrips"];
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CantripList, _impl_.cantrips_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dnd5e.api.v1alpha1.Spell cantrips = 1 [json_name = "cantrips"];
    {PROTOBUF_FIELD_OFFSET(CantripList, _impl_.cantrips_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CantripList::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.CantripList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cantrips_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CantripList::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CantripList& this_ = static_cast<const CantripList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CantripList::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CantripList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.CantripList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dnd5e.api.v1alpha1.Spell cantrips = 1 [json_name = "cantrips"];
  {
    ::size_t byte_size = this_._impl_._cantrips_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          1, this_._internal_cantrips(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.CantripList)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CantripList::ByteSizeLong(const MessageLite& base) {
  const CantripList& this_ = static_cast<const CantripList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CantripList::ByteSizeLong() const {
  const CantripList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.CantripList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.Spell cantrips = 1 [json_name = "cantrips"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_cantrips(), 1, this_._impl_._cantrips_cached_byte_size_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CantripList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CantripList*>(&to_msg);
  auto& from = static_cast<const CantripList&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.CantripList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_cantrips()->MergeFrom(from._internal_cantrips());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CantripList::CopyFrom(const CantripList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.CantripList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CantripList::InternalSwap(CantripList* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.cantrips_.InternalSwap(&other->_impl_.cantrips_);
}

::google::protobuf::Metadata CantripList::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ExpertiseList::_Internal {
 public:
};

ExpertiseList::ExpertiseList(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ExpertiseList_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.ExpertiseList)
}
PROTOBUF_NDEBUG_INLINE ExpertiseList::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::ExpertiseList& from_msg)
      : skills_{visibility, arena, from.skills_},
        _skills_cached_byte_size_{0},
        _cached_size_{0} {}

ExpertiseList::ExpertiseList(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ExpertiseList& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ExpertiseList_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ExpertiseList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.ExpertiseList)
}
PROTOBUF_NDEBUG_INLINE ExpertiseList::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : skills_{visibility, arena},
        _skills_cached_byte_size_{0},
        _cached_size_{0} {}

inline void ExpertiseList::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ExpertiseList::~ExpertiseList() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.ExpertiseList)
  SharedDtor(*this);
}
inline void ExpertiseList::SharedDtor(MessageLite& self) {
  ExpertiseList& this_ = static_cast<ExpertiseList&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ExpertiseList::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ExpertiseList(arena);
}
constexpr auto ExpertiseList::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ExpertiseList, _impl_.skills_) +
          decltype(ExpertiseList::_impl_.skills_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ExpertiseList), alignof(ExpertiseList), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ExpertiseList::PlacementNew_,
                                 sizeof(ExpertiseList),
                                 alignof(ExpertiseList));
  }
}
constexpr auto ExpertiseList::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ExpertiseList_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ExpertiseList::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ExpertiseList>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ExpertiseList::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ExpertiseList>(), &ExpertiseList::ByteSizeLong,
              &ExpertiseList::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ExpertiseList, _impl_._cached_size_),
          false,
      },
      &ExpertiseList::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ExpertiseList_class_data_ =
        ExpertiseList::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ExpertiseList::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ExpertiseList_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ExpertiseList_class_data_.tc_table);
  return ExpertiseList_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
ExpertiseList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ExpertiseList_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ExpertiseList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dnd5e.api.v1alpha1.Skill skills = 1 [json_name = "skills"];
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ExpertiseList, _impl_.skills_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dnd5e.api.v1alpha1.Skill skills = 1 [json_name = "skills"];
    {PROTOBUF_FIELD_OFFSET(ExpertiseList, _impl_.skills_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void ExpertiseList::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.ExpertiseList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.skills_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ExpertiseList::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ExpertiseList& this_ = static_cast<const ExpertiseList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ExpertiseList::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ExpertiseList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.ExpertiseList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dnd5e.api.v1alpha1.Skill skills = 1 [json_name = "skills"];
  {
    ::size_t byte_size = this_._impl_._skills_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          1, this_._internal_skills(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.ExpertiseList)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ExpertiseList::ByteSizeLong(const MessageLite& base) {
  const ExpertiseList& this_ = static_cast<const ExpertiseList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ExpertiseList::ByteSizeLong() const {
  const ExpertiseList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.ExpertiseList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.Skill skills = 1 [json_name = "skills"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_skills(), 1, this_._impl_._skills_cached_byte_size_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ExpertiseList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExpertiseList*>(&to_msg);
  auto& from = static_cast<const ExpertiseList&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.ExpertiseList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_skills()->MergeFrom(from._internal_skills());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExpertiseList::CopyFrom(const ExpertiseList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.ExpertiseList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExpertiseList::InternalSwap(ExpertiseList* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.skills_.InternalSwap(&other->_impl_.skills_);
}

::google::protobuf::Metadata ExpertiseList::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TraitList::_Internal {
 public:
};

TraitList::TraitList(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TraitList_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.TraitList)
}
PROTOBUF_NDEBUG_INLINE TraitList::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::TraitList& from_msg)
      : traits_{visibility, arena, from.traits_},
        _traits_cached_byte_size_{0},
        _cached_size_{0} {}

TraitList::TraitList(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TraitList& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TraitList_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TraitList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.TraitList)
}
PROTOBUF_NDEBUG_INLINE TraitList::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : traits_{visibility, arena},
        _traits_cached_byte_size_{0},
        _cached_size_{0} {}

inline void TraitList::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TraitList::~TraitList() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.TraitList)
  SharedDtor(*this);
}
inline void TraitList::SharedDtor(MessageLite& self) {
  TraitList& this_ = static_cast<TraitList&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TraitList::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TraitList(arena);
}
constexpr auto TraitList::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TraitList, _impl_.traits_) +
          decltype(TraitList::_impl_.traits_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(TraitList), alignof(TraitList), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TraitList::PlacementNew_,
                                 sizeof(TraitList),
                                 alignof(TraitList));
  }
}
constexpr auto TraitList::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TraitList_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TraitList::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TraitList>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TraitList::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TraitList>(), &TraitList::ByteSizeLong,
              &TraitList::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TraitList, _impl_._cached_size_),
          false,
      },
      &TraitList::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TraitList_class_data_ =
        TraitList::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TraitList::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TraitList_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TraitList_class_data_.tc_table);
  return TraitList_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
TraitList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TraitList_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::TraitList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dnd5e.api.v1alpha1.Trait traits = 1 [json_name = "traits"];
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TraitList, _impl_.traits_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dnd5e.api.v1alpha1.Trait traits = 1 [json_name = "traits"];
    {PROTOBUF_FIELD_OFFSET(TraitList, _impl_.traits_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void TraitList::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.TraitList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.traits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TraitList::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TraitList& this_ = static_cast<const TraitList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TraitList::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TraitList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.TraitList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dnd5e.api.v1alpha1.Trait traits = 1 [json_name = "traits"];
  {
    ::size_t byte_size = this_._impl_._traits_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          1, this_._internal_traits(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.TraitList)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TraitList::ByteSizeLong(const MessageLite& base) {
  const TraitList& this_ = static_cast<const TraitList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TraitList::ByteSizeLong() const {
  const TraitList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.TraitList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.Trait traits = 1 [json_name = "traits"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_traits(), 1, this_._impl_._traits_cached_byte_size_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TraitList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TraitList*>(&to_msg);
  auto& from = static_cast<const TraitList&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.TraitList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_traits()->MergeFrom(from._internal_traits());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TraitList::CopyFrom(const TraitList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.TraitList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TraitList::InternalSwap(TraitList* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.traits_.InternalSwap(&other->_impl_.traits_);
}

::google::protobuf::Metadata TraitList::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ToolProficiencyList::_Internal {
 public:
};

ToolProficiencyList::ToolProficiencyList(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ToolProficiencyList_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.ToolProficiencyList)
}
PROTOBUF_NDEBUG_INLINE ToolProficiencyList::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::ToolProficiencyList& from_msg)
      : tools_{visibility, arena, from.tools_},
        _tools_cached_byte_size_{0},
        _cached_size_{0} {}

ToolProficiencyList::ToolProficiencyList(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ToolProficiencyList& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ToolProficiencyList_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ToolProficiencyList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.ToolProficiencyList)
}
PROTOBUF_NDEBUG_INLINE ToolProficiencyList::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : tools_{visibility, arena},
        _tools_cached_byte_size_{0},
        _cached_size_{0} {}

inline void ToolProficiencyList::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ToolProficiencyList::~ToolProficiencyList() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.ToolProficiencyList)
  SharedDtor(*this);
}
inline void ToolProficiencyList::SharedDtor(MessageLite& self) {
  ToolProficiencyList& this_ = static_cast<ToolProficiencyList&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ToolProficiencyList::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ToolProficiencyList(arena);
}
constexpr auto ToolProficiencyList::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ToolProficiencyList, _impl_.tools_) +
          decltype(ToolProficiencyList::_impl_.tools_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ToolProficiencyList), alignof(ToolProficiencyList), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ToolProficiencyList::PlacementNew_,
                                 sizeof(ToolProficiencyList),
                                 alignof(ToolProficiencyList));
  }
}
constexpr auto ToolProficiencyList::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ToolProficiencyList_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ToolProficiencyList::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ToolProficiencyList>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ToolProficiencyList::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ToolProficiencyList>(), &ToolProficiencyList::ByteSizeLong,
              &ToolProficiencyList::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ToolProficiencyList, _impl_._cached_size_),
          false,
      },
      &ToolProficiencyList::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ToolProficiencyList_class_data_ =
        ToolProficiencyList::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ToolProficiencyList::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ToolProficiencyList_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ToolProficiencyList_class_data_.tc_table);
  return ToolProficiencyList_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
ToolProficiencyList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ToolProficiencyList_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ToolProficiencyList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dnd5e.api.v1alpha1.Tool tools = 1 [json_name = "tools"];
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ToolProficiencyList, _impl_.tools_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dnd5e.api.v1alpha1.Tool tools = 1 [json_name = "tools"];
    {PROTOBUF_FIELD_OFFSET(ToolProficiencyList, _impl_.tools_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void ToolProficiencyList::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.ToolProficiencyList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tools_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ToolProficiencyList::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ToolProficiencyList& this_ = static_cast<const ToolProficiencyList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ToolProficiencyList::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ToolProficiencyList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.ToolProficiencyList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dnd5e.api.v1alpha1.Tool tools = 1 [json_name = "tools"];
  {
    ::size_t byte_size = this_._impl_._tools_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          1, this_._internal_tools(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.ToolProficiencyList)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ToolProficiencyList::ByteSizeLong(const MessageLite& base) {
  const ToolProficiencyList& this_ = static_cast<const ToolProficiencyList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ToolProficiencyList::ByteSizeLong() const {
  const ToolProficiencyList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.ToolProficiencyList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.Tool tools = 1 [json_name = "tools"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_tools(), 1, this_._impl_._tools_cached_byte_size_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ToolProficiencyList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ToolProficiencyList*>(&to_msg);
  auto& from = static_cast<const ToolProficiencyList&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.ToolProficiencyList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tools()->MergeFrom(from._internal_tools());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ToolProficiencyList::CopyFrom(const ToolProficiencyList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.ToolProficiencyList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ToolProficiencyList::InternalSwap(ToolProficiencyList* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tools_.InternalSwap(&other->_impl_.tools_);
}

::google::protobuf::Metadata ToolProficiencyList::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RaceChoice::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RaceChoice>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RaceChoice, _impl_._has_bits_);
};

RaceChoice::RaceChoice(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RaceChoice_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.RaceChoice)
}
RaceChoice::RaceChoice(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RaceChoice& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RaceChoice_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE RaceChoice::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void RaceChoice::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, race_),
           0,
           offsetof(Impl_, subrace_) -
               offsetof(Impl_, race_) +
               sizeof(Impl_::subrace_));
}
RaceChoice::~RaceChoice() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.RaceChoice)
  SharedDtor(*this);
}
inline void RaceChoice::SharedDtor(MessageLite& self) {
  RaceChoice& this_ = static_cast<RaceChoice&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RaceChoice::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RaceChoice(arena);
}
constexpr auto RaceChoice::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RaceChoice),
                                            alignof(RaceChoice));
}
constexpr auto RaceChoice::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RaceChoice_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RaceChoice::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RaceChoice>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RaceChoice::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RaceChoice>(), &RaceChoice::ByteSizeLong,
              &RaceChoice::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RaceChoice, _impl_._cached_size_),
          false,
      },
      &RaceChoice::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RaceChoice_class_data_ =
        RaceChoice::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RaceChoice::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RaceChoice_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RaceChoice_class_data_.tc_table);
  return RaceChoice_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
RaceChoice::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RaceChoice, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RaceChoice_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::RaceChoice>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .dnd5e.api.v1alpha1.Subrace subrace = 2 [json_name = "subrace"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RaceChoice, _impl_.subrace_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(RaceChoice, _impl_.subrace_)}},
    // .dnd5e.api.v1alpha1.Race race = 1 [json_name = "race"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RaceChoice, _impl_.race_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(RaceChoice, _impl_.race_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.Race race = 1 [json_name = "race"];
    {PROTOBUF_FIELD_OFFSET(RaceChoice, _impl_.race_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.Subrace subrace = 2 [json_name = "subrace"];
    {PROTOBUF_FIELD_OFFSET(RaceChoice, _impl_.subrace_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void RaceChoice::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.RaceChoice)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    ::memset(&_impl_.race_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.subrace_) -
        reinterpret_cast<char*>(&_impl_.race_)) + sizeof(_impl_.subrace_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RaceChoice::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RaceChoice& this_ = static_cast<const RaceChoice&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RaceChoice::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RaceChoice& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.RaceChoice)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .dnd5e.api.v1alpha1.Race race = 1 [json_name = "race"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_race() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_race(), target);
    }
  }

  // .dnd5e.api.v1alpha1.Subrace subrace = 2 [json_name = "subrace"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_subrace() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_subrace(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.RaceChoice)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RaceChoice::ByteSizeLong(const MessageLite& base) {
  const RaceChoice& this_ = static_cast<const RaceChoice&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RaceChoice::ByteSizeLong() const {
  const RaceChoice& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.RaceChoice)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // .dnd5e.api.v1alpha1.Race race = 1 [json_name = "race"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_race() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_race());
      }
    }
    // .dnd5e.api.v1alpha1.Subrace subrace = 2 [json_name = "subrace"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_subrace() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_subrace());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RaceChoice::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RaceChoice*>(&to_msg);
  auto& from = static_cast<const RaceChoice&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.RaceChoice)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (from._internal_race() != 0) {
        _this->_impl_.race_ = from._impl_.race_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_subrace() != 0) {
        _this->_impl_.subrace_ = from._impl_.subrace_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RaceChoice::CopyFrom(const RaceChoice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.RaceChoice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RaceChoice::InternalSwap(RaceChoice* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RaceChoice, _impl_.subrace_)
      + sizeof(RaceChoice::_impl_.subrace_)
      - PROTOBUF_FIELD_OFFSET(RaceChoice, _impl_.race_)>(
          reinterpret_cast<char*>(&_impl_.race_),
          reinterpret_cast<char*>(&other->_impl_.race_));
}

::google::protobuf::Metadata RaceChoice::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ClassChoice::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ClassChoice>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ClassChoice, _impl_._has_bits_);
};

ClassChoice::ClassChoice(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ClassChoice_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.ClassChoice)
}
ClassChoice::ClassChoice(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ClassChoice& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ClassChoice_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE ClassChoice::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ClassChoice::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.class__ = {};
}
ClassChoice::~ClassChoice() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.ClassChoice)
  SharedDtor(*this);
}
inline void ClassChoice::SharedDtor(MessageLite& self) {
  ClassChoice& this_ = static_cast<ClassChoice&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ClassChoice::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ClassChoice(arena);
}
constexpr auto ClassChoice::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ClassChoice),
                                            alignof(ClassChoice));
}
constexpr auto ClassChoice::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ClassChoice_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ClassChoice::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ClassChoice>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ClassChoice::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ClassChoice>(), &ClassChoice::ByteSizeLong,
              &ClassChoice::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ClassChoice, _impl_._cached_size_),
          false,
      },
      &ClassChoice::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ClassChoice_class_data_ =
        ClassChoice::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ClassChoice::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ClassChoice_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ClassChoice_class_data_.tc_table);
  return ClassChoice_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
ClassChoice::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ClassChoice, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ClassChoice_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ClassChoice>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .dnd5e.api.v1alpha1.Class class = 1 [json_name = "class"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ClassChoice, _impl_.class__), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ClassChoice, _impl_.class__)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.Class class = 1 [json_name = "class"];
    {PROTOBUF_FIELD_OFFSET(ClassChoice, _impl_.class__), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void ClassChoice::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.ClassChoice)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.class__ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ClassChoice::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ClassChoice& this_ = static_cast<const ClassChoice&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ClassChoice::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ClassChoice& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.ClassChoice)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .dnd5e.api.v1alpha1.Class class = 1 [json_name = "class"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_class_() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_class_(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.ClassChoice)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ClassChoice::ByteSizeLong(const MessageLite& base) {
  const ClassChoice& this_ = static_cast<const ClassChoice&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ClassChoice::ByteSizeLong() const {
  const ClassChoice& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.ClassChoice)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .dnd5e.api.v1alpha1.Class class = 1 [json_name = "class"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_class_() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_class_());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ClassChoice::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ClassChoice*>(&to_msg);
  auto& from = static_cast<const ClassChoice&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.ClassChoice)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (from._internal_class_() != 0) {
      _this->_impl_.class__ = from._impl_.class__;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClassChoice::CopyFrom(const ClassChoice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.ClassChoice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ClassChoice::InternalSwap(ClassChoice* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.class__, other->_impl_.class__);
}

::google::protobuf::Metadata ClassChoice::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EquipmentChoice::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<EquipmentChoice>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EquipmentChoice, _impl_._has_bits_);
};

EquipmentChoice::EquipmentChoice(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EquipmentChoice_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.EquipmentChoice)
}
PROTOBUF_NDEBUG_INLINE EquipmentChoice::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::EquipmentChoice& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        options_{visibility, arena, from.options_},
        choice_id_(arena, from.choice_id_),
        description_(arena, from.description_) {}

EquipmentChoice::EquipmentChoice(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EquipmentChoice& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EquipmentChoice_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EquipmentChoice* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.EquipmentChoice)
}
PROTOBUF_NDEBUG_INLINE EquipmentChoice::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        options_{visibility, arena},
        choice_id_(arena),
        description_(arena) {}

inline void EquipmentChoice::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
EquipmentChoice::~EquipmentChoice() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.EquipmentChoice)
  SharedDtor(*this);
}
inline void EquipmentChoice::SharedDtor(MessageLite& self) {
  EquipmentChoice& this_ = static_cast<EquipmentChoice&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.choice_id_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EquipmentChoice::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EquipmentChoice(arena);
}
constexpr auto EquipmentChoice::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(EquipmentChoice, _impl_.options_) +
          decltype(EquipmentChoice::_impl_.options_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(EquipmentChoice), alignof(EquipmentChoice), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&EquipmentChoice::PlacementNew_,
                                 sizeof(EquipmentChoice),
                                 alignof(EquipmentChoice));
  }
}
constexpr auto EquipmentChoice::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EquipmentChoice_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EquipmentChoice::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EquipmentChoice>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EquipmentChoice::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EquipmentChoice>(), &EquipmentChoice::ByteSizeLong,
              &EquipmentChoice::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EquipmentChoice, _impl_._cached_size_),
          false,
      },
      &EquipmentChoice::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EquipmentChoice_class_data_ =
        EquipmentChoice::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EquipmentChoice::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EquipmentChoice_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EquipmentChoice_class_data_.tc_table);
  return EquipmentChoice_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 63, 2>
EquipmentChoice::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EquipmentChoice, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    EquipmentChoice_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::EquipmentChoice>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string choice_id = 1 [json_name = "choiceId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EquipmentChoice, _impl_.choice_id_)}},
    // string description = 2 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(EquipmentChoice, _impl_.description_)}},
    // repeated .dnd5e.api.v1alpha1.EquipmentOption options = 3 [json_name = "options"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(EquipmentChoice, _impl_.options_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string choice_id = 1 [json_name = "choiceId"];
    {PROTOBUF_FIELD_OFFSET(EquipmentChoice, _impl_.choice_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 2 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(EquipmentChoice, _impl_.description_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .dnd5e.api.v1alpha1.EquipmentOption options = 3 [json_name = "options"];
    {PROTOBUF_FIELD_OFFSET(EquipmentChoice, _impl_.options_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::EquipmentOption>()},
  }},
  {{
    "\42\11\13\0\0\0\0\0"
    "dnd5e.api.v1alpha1.EquipmentChoice"
    "choice_id"
    "description"
  }},
};
PROTOBUF_NOINLINE void EquipmentChoice::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.EquipmentChoice)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.options_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.choice_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EquipmentChoice::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EquipmentChoice& this_ = static_cast<const EquipmentChoice&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EquipmentChoice::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EquipmentChoice& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.EquipmentChoice)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string choice_id = 1 [json_name = "choiceId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_choice_id().empty()) {
      const ::std::string& _s = this_._internal_choice_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.EquipmentChoice.choice_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string description = 2 [json_name = "description"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.EquipmentChoice.description");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.EquipmentOption options = 3 [json_name = "options"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_options_size());
       i < n; i++) {
    const auto& repfield = this_._internal_options().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.EquipmentChoice)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EquipmentChoice::ByteSizeLong(const MessageLite& base) {
  const EquipmentChoice& this_ = static_cast<const EquipmentChoice&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EquipmentChoice::ByteSizeLong() const {
  const EquipmentChoice& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.EquipmentChoice)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.EquipmentOption options = 3 [json_name = "options"];
    {
      total_size += 1UL * this_._internal_options_size();
      for (const auto& msg : this_._internal_options()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string choice_id = 1 [json_name = "choiceId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_choice_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_choice_id());
      }
    }
    // string description = 2 [json_name = "description"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EquipmentChoice::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EquipmentChoice*>(&to_msg);
  auto& from = static_cast<const EquipmentChoice&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.EquipmentChoice)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_options()->MergeFrom(
      from._internal_options());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_choice_id().empty()) {
        _this->_internal_set_choice_id(from._internal_choice_id());
      } else {
        if (_this->_impl_.choice_id_.IsDefault()) {
          _this->_internal_set_choice_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EquipmentChoice::CopyFrom(const EquipmentChoice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.EquipmentChoice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EquipmentChoice::InternalSwap(EquipmentChoice* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.options_.InternalSwap(&other->_impl_.options_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.choice_id_, &other->_impl_.choice_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
}

::google::protobuf::Metadata EquipmentChoice::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EquipmentOption::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<EquipmentOption>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EquipmentOption, _impl_._has_bits_);
};

EquipmentOption::EquipmentOption(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EquipmentOption_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.EquipmentOption)
}
PROTOBUF_NDEBUG_INLINE EquipmentOption::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::EquipmentOption& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        items_{visibility, arena, from.items_},
        option_id_(arena, from.option_id_),
        description_(arena, from.description_) {}

EquipmentOption::EquipmentOption(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EquipmentOption& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EquipmentOption_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EquipmentOption* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.EquipmentOption)
}
PROTOBUF_NDEBUG_INLINE EquipmentOption::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        items_{visibility, arena},
        option_id_(arena),
        description_(arena) {}

inline void EquipmentOption::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
EquipmentOption::~EquipmentOption() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.EquipmentOption)
  SharedDtor(*this);
}
inline void EquipmentOption::SharedDtor(MessageLite& self) {
  EquipmentOption& this_ = static_cast<EquipmentOption&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.option_id_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EquipmentOption::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EquipmentOption(arena);
}
constexpr auto EquipmentOption::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(EquipmentOption, _impl_.items_) +
          decltype(EquipmentOption::_impl_.items_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(EquipmentOption), alignof(EquipmentOption), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&EquipmentOption::PlacementNew_,
                                 sizeof(EquipmentOption),
                                 alignof(EquipmentOption));
  }
}
constexpr auto EquipmentOption::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EquipmentOption_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EquipmentOption::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EquipmentOption>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EquipmentOption::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EquipmentOption>(), &EquipmentOption::ByteSizeLong,
              &EquipmentOption::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EquipmentOption, _impl_._cached_size_),
          false,
      },
      &EquipmentOption::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EquipmentOption_class_data_ =
        EquipmentOption::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EquipmentOption::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EquipmentOption_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EquipmentOption_class_data_.tc_table);
  return EquipmentOption_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 63, 2>
EquipmentOption::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EquipmentOption, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    EquipmentOption_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::EquipmentOption>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string option_id = 1 [json_name = "optionId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EquipmentOption, _impl_.option_id_)}},
    // string description = 2 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(EquipmentOption, _impl_.description_)}},
    // repeated .dnd5e.api.v1alpha1.EquipmentSelection items = 3 [json_name = "items"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(EquipmentOption, _impl_.items_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string option_id = 1 [json_name = "optionId"];
    {PROTOBUF_FIELD_OFFSET(EquipmentOption, _impl_.option_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 2 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(EquipmentOption, _impl_.description_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .dnd5e.api.v1alpha1.EquipmentSelection items = 3 [json_name = "items"];
    {PROTOBUF_FIELD_OFFSET(EquipmentOption, _impl_.items_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::EquipmentSelection>()},
  }},
  {{
    "\42\11\13\0\0\0\0\0"
    "dnd5e.api.v1alpha1.EquipmentOption"
    "option_id"
    "description"
  }},
};
PROTOBUF_NOINLINE void EquipmentOption::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.EquipmentOption)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.option_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EquipmentOption::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EquipmentOption& this_ = static_cast<const EquipmentOption&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EquipmentOption::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EquipmentOption& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.EquipmentOption)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string option_id = 1 [json_name = "optionId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_option_id().empty()) {
      const ::std::string& _s = this_._internal_option_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.EquipmentOption.option_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string description = 2 [json_name = "description"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.EquipmentOption.description");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.EquipmentSelection items = 3 [json_name = "items"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_items_size());
       i < n; i++) {
    const auto& repfield = this_._internal_items().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.EquipmentOption)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EquipmentOption::ByteSizeLong(const MessageLite& base) {
  const EquipmentOption& this_ = static_cast<const EquipmentOption&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EquipmentOption::ByteSizeLong() const {
  const EquipmentOption& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.EquipmentOption)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.EquipmentSelection items = 3 [json_name = "items"];
    {
      total_size += 1UL * this_._internal_items_size();
      for (const auto& msg : this_._internal_items()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string option_id = 1 [json_name = "optionId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_option_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_option_id());
      }
    }
    // string description = 2 [json_name = "description"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EquipmentOption::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EquipmentOption*>(&to_msg);
  auto& from = static_cast<const EquipmentOption&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.EquipmentOption)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_items()->MergeFrom(
      from._internal_items());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_option_id().empty()) {
        _this->_internal_set_option_id(from._internal_option_id());
      } else {
        if (_this->_impl_.option_id_.IsDefault()) {
          _this->_internal_set_option_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EquipmentOption::CopyFrom(const EquipmentOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.EquipmentOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EquipmentOption::InternalSwap(EquipmentOption* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.option_id_, &other->_impl_.option_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
}

::google::protobuf::Metadata EquipmentOption::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EquipmentSelection::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<EquipmentSelection>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EquipmentSelection, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::EquipmentSelection, _impl_._oneof_case_);
};

EquipmentSelection::EquipmentSelection(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EquipmentSelection_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.EquipmentSelection)
}
PROTOBUF_NDEBUG_INLINE EquipmentSelection::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::EquipmentSelection& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        equipment_{},
        _oneof_case_{from._oneof_case_[0]} {}

EquipmentSelection::EquipmentSelection(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EquipmentSelection& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EquipmentSelection_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EquipmentSelection* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.quantity_ = from._impl_.quantity_;
  switch (equipment_case()) {
    case EQUIPMENT_NOT_SET:
      break;
      case kWeapon:
        _impl_.equipment_.weapon_ = from._impl_.equipment_.weapon_;
        break;
      case kArmor:
        _impl_.equipment_.armor_ = from._impl_.equipment_.armor_;
        break;
      case kTool:
        _impl_.equipment_.tool_ = from._impl_.equipment_.tool_;
        break;
      case kPack:
        _impl_.equipment_.pack_ = from._impl_.equipment_.pack_;
        break;
      case kAmmunition:
        _impl_.equipment_.ammunition_ = from._impl_.equipment_.ammunition_;
        break;
      case kOtherEquipmentId:
        new (&_impl_.equipment_.other_equipment_id_) decltype(_impl_.equipment_.other_equipment_id_){arena, from._impl_.equipment_.other_equipment_id_};
        break;
  }

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.EquipmentSelection)
}
PROTOBUF_NDEBUG_INLINE EquipmentSelection::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        equipment_{},
        _oneof_case_{} {}

inline void EquipmentSelection::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.quantity_ = {};
}
EquipmentSelection::~EquipmentSelection() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.EquipmentSelection)
  SharedDtor(*this);
}
inline void EquipmentSelection::SharedDtor(MessageLite& self) {
  EquipmentSelection& this_ = static_cast<EquipmentSelection&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_equipment()) {
    this_.clear_equipment();
  }
  this_._impl_.~Impl_();
}

void EquipmentSelection::clear_equipment() {
// @@protoc_insertion_point(one_of_clear_start:dnd5e.api.v1alpha1.EquipmentSelection)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (equipment_case()) {
    case kWeapon: {
      // No need to clear
      break;
    }
    case kArmor: {
      // No need to clear
      break;
    }
    case kTool: {
      // No need to clear
      break;
    }
    case kPack: {
      // No need to clear
      break;
    }
    case kAmmunition: {
      // No need to clear
      break;
    }
    case kOtherEquipmentId: {
      _impl_.equipment_.other_equipment_id_.Destroy();
      break;
    }
    case EQUIPMENT_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = EQUIPMENT_NOT_SET;
}


inline void* PROTOBUF_NONNULL EquipmentSelection::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EquipmentSelection(arena);
}
constexpr auto EquipmentSelection::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(EquipmentSelection),
                                            alignof(EquipmentSelection));
}
constexpr auto EquipmentSelection::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EquipmentSelection_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EquipmentSelection::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EquipmentSelection>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EquipmentSelection::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EquipmentSelection>(), &EquipmentSelection::ByteSizeLong,
              &EquipmentSelection::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EquipmentSelection, _impl_._cached_size_),
          false,
      },
      &EquipmentSelection::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EquipmentSelection_class_data_ =
        EquipmentSelection::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EquipmentSelection::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EquipmentSelection_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EquipmentSelection_class_data_.tc_table);
  return EquipmentSelection_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 7, 0, 64, 2>
EquipmentSelection::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EquipmentSelection, _impl_._has_bits_),
    0, // no _extensions_
    7, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    EquipmentSelection_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::EquipmentSelection>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 quantity = 7 [json_name = "quantity"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EquipmentSelection, _impl_.quantity_), 0>(),
     {56, 0, 0, PROTOBUF_FIELD_OFFSET(EquipmentSelection, _impl_.quantity_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.Weapon weapon = 1 [json_name = "weapon"];
    {PROTOBUF_FIELD_OFFSET(EquipmentSelection, _impl_.equipment_.weapon_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.Armor armor = 2 [json_name = "armor"];
    {PROTOBUF_FIELD_OFFSET(EquipmentSelection, _impl_.equipment_.armor_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.Tool tool = 3 [json_name = "tool"];
    {PROTOBUF_FIELD_OFFSET(EquipmentSelection, _impl_.equipment_.tool_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.Pack pack = 4 [json_name = "pack"];
    {PROTOBUF_FIELD_OFFSET(EquipmentSelection, _impl_.equipment_.pack_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.Ammunition ammunition = 5 [json_name = "ammunition"];
    {PROTOBUF_FIELD_OFFSET(EquipmentSelection, _impl_.equipment_.ammunition_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
    // string other_equipment_id = 6 [json_name = "otherEquipmentId"];
    {PROTOBUF_FIELD_OFFSET(EquipmentSelection, _impl_.equipment_.other_equipment_id_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 quantity = 7 [json_name = "quantity"];
    {PROTOBUF_FIELD_OFFSET(EquipmentSelection, _impl_.quantity_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\45\0\0\0\0\0\22\0"
    "dnd5e.api.v1alpha1.EquipmentSelection"
    "other_equipment_id"
  }},
};
PROTOBUF_NOINLINE void EquipmentSelection::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.EquipmentSelection)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.quantity_ = 0;
  clear_equipment();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EquipmentSelection::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EquipmentSelection& this_ = static_cast<const EquipmentSelection&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EquipmentSelection::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EquipmentSelection& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.EquipmentSelection)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.equipment_case()) {
    case kWeapon: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_weapon(), target);
      break;
    }
    case kArmor: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_armor(), target);
      break;
    }
    case kTool: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_tool(), target);
      break;
    }
    case kPack: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          4, this_._internal_pack(), target);
      break;
    }
    case kAmmunition: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          5, this_._internal_ammunition(), target);
      break;
    }
    case kOtherEquipmentId: {
      const ::std::string& _s = this_._internal_other_equipment_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.EquipmentSelection.other_equipment_id");
      target = stream->WriteStringMaybeAliased(6, _s, target);
      break;
    }
    default:
      break;
  }
  // int32 quantity = 7 [json_name = "quantity"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_quantity() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<7>(
              stream, this_._internal_quantity(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.EquipmentSelection)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EquipmentSelection::ByteSizeLong(const MessageLite& base) {
  const EquipmentSelection& this_ = static_cast<const EquipmentSelection&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EquipmentSelection::ByteSizeLong() const {
  const EquipmentSelection& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.EquipmentSelection)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // int32 quantity = 7 [json_name = "quantity"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_quantity() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_quantity());
      }
    }
  }
  switch (this_.equipment_case()) {
    // .dnd5e.api.v1alpha1.Weapon weapon = 1 [json_name = "weapon"];
    case kWeapon: {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_weapon());
      break;
    }
    // .dnd5e.api.v1alpha1.Armor armor = 2 [json_name = "armor"];
    case kArmor: {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_armor());
      break;
    }
    // .dnd5e.api.v1alpha1.Tool tool = 3 [json_name = "tool"];
    case kTool: {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_tool());
      break;
    }
    // .dnd5e.api.v1alpha1.Pack pack = 4 [json_name = "pack"];
    case kPack: {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_pack());
      break;
    }
    // .dnd5e.api.v1alpha1.Ammunition ammunition = 5 [json_name = "ammunition"];
    case kAmmunition: {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_ammunition());
      break;
    }
    // string other_equipment_id = 6 [json_name = "otherEquipmentId"];
    case kOtherEquipmentId: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_other_equipment_id());
      break;
    }
    case EQUIPMENT_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EquipmentSelection::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EquipmentSelection*>(&to_msg);
  auto& from = static_cast<const EquipmentSelection&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.EquipmentSelection)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (from._internal_quantity() != 0) {
      _this->_impl_.quantity_ = from._impl_.quantity_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_equipment();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kWeapon: {
        _this->_impl_.equipment_.weapon_ = from._impl_.equipment_.weapon_;
        break;
      }
      case kArmor: {
        _this->_impl_.equipment_.armor_ = from._impl_.equipment_.armor_;
        break;
      }
      case kTool: {
        _this->_impl_.equipment_.tool_ = from._impl_.equipment_.tool_;
        break;
      }
      case kPack: {
        _this->_impl_.equipment_.pack_ = from._impl_.equipment_.pack_;
        break;
      }
      case kAmmunition: {
        _this->_impl_.equipment_.ammunition_ = from._impl_.equipment_.ammunition_;
        break;
      }
      case kOtherEquipmentId: {
        if (oneof_needs_init) {
          _this->_impl_.equipment_.other_equipment_id_.InitDefault();
        }
        _this->_impl_.equipment_.other_equipment_id_.Set(from._internal_other_equipment_id(), arena);
        break;
      }
      case EQUIPMENT_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EquipmentSelection::CopyFrom(const EquipmentSelection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.EquipmentSelection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EquipmentSelection::InternalSwap(EquipmentSelection* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.quantity_, other->_impl_.quantity_);
  swap(_impl_.equipment_, other->_impl_.equipment_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata EquipmentSelection::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ChoiceSubmission::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ChoiceSubmission>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ChoiceSubmission, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::ChoiceSubmission, _impl_._oneof_case_);
};

void ChoiceSubmission::set_allocated_skills(::dnd5e::api::v1alpha1::SkillSelection* PROTOBUF_NULLABLE skills) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_values();
  if (skills) {
    ::google::protobuf::Arena* submessage_arena = skills->GetArena();
    if (message_arena != submessage_arena) {
      skills = ::google::protobuf::internal::GetOwnedMessage(message_arena, skills, submessage_arena);
    }
    set_has_skills();
    _impl_.values_.skills_ = skills;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.ChoiceSubmission.skills)
}
void ChoiceSubmission::set_allocated_languages(::dnd5e::api::v1alpha1::LanguageSelection* PROTOBUF_NULLABLE languages) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_values();
  if (languages) {
    ::google::protobuf::Arena* submessage_arena = languages->GetArena();
    if (message_arena != submessage_arena) {
      languages = ::google::protobuf::internal::GetOwnedMessage(message_arena, languages, submessage_arena);
    }
    set_has_languages();
    _impl_.values_.languages_ = languages;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.ChoiceSubmission.languages)
}
void ChoiceSubmission::set_allocated_equipment(::dnd5e::api::v1alpha1::EquipmentSelection* PROTOBUF_NULLABLE equipment) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_values();
  if (equipment) {
    ::google::protobuf::Arena* submessage_arena = equipment->GetArena();
    if (message_arena != submessage_arena) {
      equipment = ::google::protobuf::internal::GetOwnedMessage(message_arena, equipment, submessage_arena);
    }
    set_has_equipment();
    _impl_.values_.equipment_ = equipment;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.ChoiceSubmission.equipment)
}
void ChoiceSubmission::set_allocated_fighting_style(::dnd5e::api::v1alpha1::FightingStyleSelection* PROTOBUF_NULLABLE fighting_style) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_values();
  if (fighting_style) {
    ::google::protobuf::Arena* submessage_arena = fighting_style->GetArena();
    if (message_arena != submessage_arena) {
      fighting_style = ::google::protobuf::internal::GetOwnedMessage(message_arena, fighting_style, submessage_arena);
    }
    set_has_fighting_style();
    _impl_.values_.fighting_style_ = fighting_style;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.ChoiceSubmission.fighting_style)
}
void ChoiceSubmission::set_allocated_tools(::dnd5e::api::v1alpha1::ToolSelection* PROTOBUF_NULLABLE tools) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_values();
  if (tools) {
    ::google::protobuf::Arena* submessage_arena = tools->GetArena();
    if (message_arena != submessage_arena) {
      tools = ::google::protobuf::internal::GetOwnedMessage(message_arena, tools, submessage_arena);
    }
    set_has_tools();
    _impl_.values_.tools_ = tools;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.ChoiceSubmission.tools)
}
void ChoiceSubmission::set_allocated_weapon_proficiencies(::dnd5e::api::v1alpha1::WeaponProficiencySelection* PROTOBUF_NULLABLE weapon_proficiencies) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_values();
  if (weapon_proficiencies) {
    ::google::protobuf::Arena* submessage_arena = weapon_proficiencies->GetArena();
    if (message_arena != submessage_arena) {
      weapon_proficiencies = ::google::protobuf::internal::GetOwnedMessage(message_arena, weapon_proficiencies, submessage_arena);
    }
    set_has_weapon_proficiencies();
    _impl_.values_.weapon_proficiencies_ = weapon_proficiencies;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.ChoiceSubmission.weapon_proficiencies)
}
void ChoiceSubmission::set_allocated_armor_proficiencies(::dnd5e::api::v1alpha1::ArmorProficiencySelection* PROTOBUF_NULLABLE armor_proficiencies) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_values();
  if (armor_proficiencies) {
    ::google::protobuf::Arena* submessage_arena = armor_proficiencies->GetArena();
    if (message_arena != submessage_arena) {
      armor_proficiencies = ::google::protobuf::internal::GetOwnedMessage(message_arena, armor_proficiencies, submessage_arena);
    }
    set_has_armor_proficiencies();
    _impl_.values_.armor_proficiencies_ = armor_proficiencies;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.ChoiceSubmission.armor_proficiencies)
}
ChoiceSubmission::ChoiceSubmission(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ChoiceSubmission_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.ChoiceSubmission)
}
PROTOBUF_NDEBUG_INLINE ChoiceSubmission::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::ChoiceSubmission& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        choice_id_(arena, from.choice_id_),
        option_id_(arena, from.option_id_),
        values_{},
        _oneof_case_{from._oneof_case_[0]} {}

ChoiceSubmission::ChoiceSubmission(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ChoiceSubmission& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ChoiceSubmission_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ChoiceSubmission* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, category_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, category_),
           offsetof(Impl_, source_) -
               offsetof(Impl_, category_) +
               sizeof(Impl_::source_));
  switch (values_case()) {
    case VALUES_NOT_SET:
      break;
      case kSkills:
        _impl_.values_.skills_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.values_.skills_);
        break;
      case kLanguages:
        _impl_.values_.languages_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.values_.languages_);
        break;
      case kEquipment:
        _impl_.values_.equipment_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.values_.equipment_);
        break;
      case kFightingStyle:
        _impl_.values_.fighting_style_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.values_.fighting_style_);
        break;
      case kTools:
        _impl_.values_.tools_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.values_.tools_);
        break;
      case kWeaponProficiencies:
        _impl_.values_.weapon_proficiencies_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.values_.weapon_proficiencies_);
        break;
      case kArmorProficiencies:
        _impl_.values_.armor_proficiencies_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.values_.armor_proficiencies_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.ChoiceSubmission)
}
PROTOBUF_NDEBUG_INLINE ChoiceSubmission::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        choice_id_(arena),
        option_id_(arena),
        values_{},
        _oneof_case_{} {}

inline void ChoiceSubmission::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, category_),
           0,
           offsetof(Impl_, source_) -
               offsetof(Impl_, category_) +
               sizeof(Impl_::source_));
}
ChoiceSubmission::~ChoiceSubmission() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.ChoiceSubmission)
  SharedDtor(*this);
}
inline void ChoiceSubmission::SharedDtor(MessageLite& self) {
  ChoiceSubmission& this_ = static_cast<ChoiceSubmission&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.choice_id_.Destroy();
  this_._impl_.option_id_.Destroy();
  if (this_.has_values()) {
    this_.clear_values();
  }
  this_._impl_.~Impl_();
}

void ChoiceSubmission::clear_values() {
// @@protoc_insertion_point(one_of_clear_start:dnd5e.api.v1alpha1.ChoiceSubmission)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (values_case()) {
    case kSkills: {
      if (GetArena() == nullptr) {
        delete _impl_.values_.skills_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.values_.skills_);
      }
      break;
    }
    case kLanguages: {
      if (GetArena() == nullptr) {
        delete _impl_.values_.languages_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.values_.languages_);
      }
      break;
    }
    case kEquipment: {
      if (GetArena() == nullptr) {
        delete _impl_.values_.equipment_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.values_.equipment_);
      }
      break;
    }
    case kFightingStyle: {
      if (GetArena() == nullptr) {
        delete _impl_.values_.fighting_style_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.values_.fighting_style_);
      }
      break;
    }
    case kTools: {
      if (GetArena() == nullptr) {
        delete _impl_.values_.tools_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.values_.tools_);
      }
      break;
    }
    case kWeaponProficiencies: {
      if (GetArena() == nullptr) {
        delete _impl_.values_.weapon_proficiencies_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.values_.weapon_proficiencies_);
      }
      break;
    }
    case kArmorProficiencies: {
      if (GetArena() == nullptr) {
        delete _impl_.values_.armor_proficiencies_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.values_.armor_proficiencies_);
      }
      break;
    }
    case VALUES_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUES_NOT_SET;
}


inline void* PROTOBUF_NONNULL ChoiceSubmission::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ChoiceSubmission(arena);
}
constexpr auto ChoiceSubmission::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ChoiceSubmission),
                                            alignof(ChoiceSubmission));
}
constexpr auto ChoiceSubmission::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ChoiceSubmission_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ChoiceSubmission::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ChoiceSubmission>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ChoiceSubmission::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ChoiceSubmission>(), &ChoiceSubmission::ByteSizeLong,
              &ChoiceSubmission::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ChoiceSubmission, _impl_._cached_size_),
          false,
      },
      &ChoiceSubmission::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ChoiceSubmission_class_data_ =
        ChoiceSubmission::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ChoiceSubmission::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ChoiceSubmission_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ChoiceSubmission_class_data_.tc_table);
  return ChoiceSubmission_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 11, 7, 70, 2>
ChoiceSubmission::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ChoiceSubmission, _impl_._has_bits_),
    0, // no _extensions_
    11, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    7,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ChoiceSubmission_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ChoiceSubmission>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string option_id = 4 [json_name = "optionId"];
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(ChoiceSubmission, _impl_.option_id_)}},
    // .dnd5e.api.v1alpha1.ChoiceCategory category = 1 [json_name = "category"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ChoiceSubmission, _impl_.category_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(ChoiceSubmission, _impl_.category_)}},
    // .dnd5e.api.v1alpha1.ChoiceSource source = 2 [json_name = "source"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ChoiceSubmission, _impl_.source_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(ChoiceSubmission, _impl_.source_)}},
    // string choice_id = 3 [json_name = "choiceId"];
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(ChoiceSubmission, _impl_.choice_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.ChoiceCategory category = 1 [json_name = "category"];
    {PROTOBUF_FIELD_OFFSET(ChoiceSubmission, _impl_.category_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.ChoiceSource source = 2 [json_name = "source"];
    {PROTOBUF_FIELD_OFFSET(ChoiceSubmission, _impl_.source_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string choice_id = 3 [json_name = "choiceId"];
    {PROTOBUF_FIELD_OFFSET(ChoiceSubmission, _impl_.choice_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string option_id = 4 [json_name = "optionId"];
    {PROTOBUF_FIELD_OFFSET(ChoiceSubmission, _impl_.option_id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .dnd5e.api.v1alpha1.SkillSelection skills = 5 [json_name = "skills"];
    {PROTOBUF_FIELD_OFFSET(ChoiceSubmission, _impl_.values_.skills_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.LanguageSelection languages = 6 [json_name = "languages"];
    {PROTOBUF_FIELD_OFFSET(ChoiceSubmission, _impl_.values_.languages_), _Internal::kOneofCaseOffset + 0, 1, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.EquipmentSelection equipment = 7 [json_name = "equipment"];
    {PROTOBUF_FIELD_OFFSET(ChoiceSubmission, _impl_.values_.equipment_), _Internal::kOneofCaseOffset + 0, 2, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.FightingStyleSelection fighting_style = 8 [json_name = "fightingStyle"];
    {PROTOBUF_FIELD_OFFSET(ChoiceSubmission, _impl_.values_.fighting_style_), _Internal::kOneofCaseOffset + 0, 3, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.ToolSelection tools = 9 [json_name = "tools"];
    {PROTOBUF_FIELD_OFFSET(ChoiceSubmission, _impl_.values_.tools_), _Internal::kOneofCaseOffset + 0, 4, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.WeaponProficiencySelection weapon_proficiencies = 10 [json_name = "weaponProficiencies"];
    {PROTOBUF_FIELD_OFFSET(ChoiceSubmission, _impl_.values_.weapon_proficiencies_), _Internal::kOneofCaseOffset + 0, 5, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.ArmorProficiencySelection armor_proficiencies = 11 [json_name = "armorProficiencies"];
    {PROTOBUF_FIELD_OFFSET(ChoiceSubmission, _impl_.values_.armor_proficiencies_), _Internal::kOneofCaseOffset + 0, 6, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::SkillSelection>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::LanguageSelection>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::EquipmentSelection>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::FightingStyleSelection>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ToolSelection>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::WeaponProficiencySelection>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ArmorProficiencySelection>()},
  }},
  {{
    "\43\0\0\11\11\0\0\0\0\0\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.ChoiceSubmission"
    "choice_id"
    "option_id"
  }},
};
PROTOBUF_NOINLINE void ChoiceSubmission::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.ChoiceSubmission)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.choice_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.option_id_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000000cU) != 0) {
    ::memset(&_impl_.category_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.source_) -
        reinterpret_cast<char*>(&_impl_.category_)) + sizeof(_impl_.source_));
  }
  clear_values();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ChoiceSubmission::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ChoiceSubmission& this_ = static_cast<const ChoiceSubmission&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ChoiceSubmission::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ChoiceSubmission& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.ChoiceSubmission)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .dnd5e.api.v1alpha1.ChoiceCategory category = 1 [json_name = "category"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_category() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_category(), target);
    }
  }

  // .dnd5e.api.v1alpha1.ChoiceSource source = 2 [json_name = "source"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_source() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_source(), target);
    }
  }

  // string choice_id = 3 [json_name = "choiceId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_choice_id().empty()) {
      const ::std::string& _s = this_._internal_choice_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.ChoiceSubmission.choice_id");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string option_id = 4 [json_name = "optionId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_option_id().empty()) {
      const ::std::string& _s = this_._internal_option_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.ChoiceSubmission.option_id");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  switch (this_.values_case()) {
    case kSkills: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, *this_._impl_.values_.skills_, this_._impl_.values_.skills_->GetCachedSize(), target,
          stream);
      break;
    }
    case kLanguages: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, *this_._impl_.values_.languages_, this_._impl_.values_.languages_->GetCachedSize(), target,
          stream);
      break;
    }
    case kEquipment: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          7, *this_._impl_.values_.equipment_, this_._impl_.values_.equipment_->GetCachedSize(), target,
          stream);
      break;
    }
    case kFightingStyle: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          8, *this_._impl_.values_.fighting_style_, this_._impl_.values_.fighting_style_->GetCachedSize(), target,
          stream);
      break;
    }
    case kTools: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          9, *this_._impl_.values_.tools_, this_._impl_.values_.tools_->GetCachedSize(), target,
          stream);
      break;
    }
    case kWeaponProficiencies: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          10, *this_._impl_.values_.weapon_proficiencies_, this_._impl_.values_.weapon_proficiencies_->GetCachedSize(), target,
          stream);
      break;
    }
    case kArmorProficiencies: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          11, *this_._impl_.values_.armor_proficiencies_, this_._impl_.values_.armor_proficiencies_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.ChoiceSubmission)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ChoiceSubmission::ByteSizeLong(const MessageLite& base) {
  const ChoiceSubmission& this_ = static_cast<const ChoiceSubmission&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ChoiceSubmission::ByteSizeLong() const {
  const ChoiceSubmission& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.ChoiceSubmission)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string choice_id = 3 [json_name = "choiceId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_choice_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_choice_id());
      }
    }
    // string option_id = 4 [json_name = "optionId"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_option_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_option_id());
      }
    }
    // .dnd5e.api.v1alpha1.ChoiceCategory category = 1 [json_name = "category"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_category() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_category());
      }
    }
    // .dnd5e.api.v1alpha1.ChoiceSource source = 2 [json_name = "source"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_source() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_source());
      }
    }
  }
  switch (this_.values_case()) {
    // .dnd5e.api.v1alpha1.SkillSelection skills = 5 [json_name = "skills"];
    case kSkills: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.values_.skills_);
      break;
    }
    // .dnd5e.api.v1alpha1.LanguageSelection languages = 6 [json_name = "languages"];
    case kLanguages: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.values_.languages_);
      break;
    }
    // .dnd5e.api.v1alpha1.EquipmentSelection equipment = 7 [json_name = "equipment"];
    case kEquipment: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.values_.equipment_);
      break;
    }
    // .dnd5e.api.v1alpha1.FightingStyleSelection fighting_style = 8 [json_name = "fightingStyle"];
    case kFightingStyle: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.values_.fighting_style_);
      break;
    }
    // .dnd5e.api.v1alpha1.ToolSelection tools = 9 [json_name = "tools"];
    case kTools: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.values_.tools_);
      break;
    }
    // .dnd5e.api.v1alpha1.WeaponProficiencySelection weapon_proficiencies = 10 [json_name = "weaponProficiencies"];
    case kWeaponProficiencies: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.values_.weapon_proficiencies_);
      break;
    }
    // .dnd5e.api.v1alpha1.ArmorProficiencySelection armor_proficiencies = 11 [json_name = "armorProficiencies"];
    case kArmorProficiencies: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.values_.armor_proficiencies_);
      break;
    }
    case VALUES_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ChoiceSubmission::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ChoiceSubmission*>(&to_msg);
  auto& from = static_cast<const ChoiceSubmission&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.ChoiceSubmission)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_choice_id().empty()) {
        _this->_internal_set_choice_id(from._internal_choice_id());
      } else {
        if (_this->_impl_.choice_id_.IsDefault()) {
          _this->_internal_set_choice_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_option_id().empty()) {
        _this->_internal_set_option_id(from._internal_option_id());
      } else {
        if (_this->_impl_.option_id_.IsDefault()) {
          _this->_internal_set_option_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_category() != 0) {
        _this->_impl_.category_ = from._impl_.category_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_source() != 0) {
        _this->_impl_.source_ = from._impl_.source_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_values();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kSkills: {
        if (oneof_needs_init) {
          _this->_impl_.values_.skills_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.values_.skills_);
        } else {
          _this->_impl_.values_.skills_->MergeFrom(*from._impl_.values_.skills_);
        }
        break;
      }
      case kLanguages: {
        if (oneof_needs_init) {
          _this->_impl_.values_.languages_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.values_.languages_);
        } else {
          _this->_impl_.values_.languages_->MergeFrom(*from._impl_.values_.languages_);
        }
        break;
      }
      case kEquipment: {
        if (oneof_needs_init) {
          _this->_impl_.values_.equipment_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.values_.equipment_);
        } else {
          _this->_impl_.values_.equipment_->MergeFrom(*from._impl_.values_.equipment_);
        }
        break;
      }
      case kFightingStyle: {
        if (oneof_needs_init) {
          _this->_impl_.values_.fighting_style_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.values_.fighting_style_);
        } else {
          _this->_impl_.values_.fighting_style_->MergeFrom(*from._impl_.values_.fighting_style_);
        }
        break;
      }
      case kTools: {
        if (oneof_needs_init) {
          _this->_impl_.values_.tools_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.values_.tools_);
        } else {
          _this->_impl_.values_.tools_->MergeFrom(*from._impl_.values_.tools_);
        }
        break;
      }
      case kWeaponProficiencies: {
        if (oneof_needs_init) {
          _this->_impl_.values_.weapon_proficiencies_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.values_.weapon_proficiencies_);
        } else {
          _this->_impl_.values_.weapon_proficiencies_->MergeFrom(*from._impl_.values_.weapon_proficiencies_);
        }
        break;
      }
      case kArmorProficiencies: {
        if (oneof_needs_init) {
          _this->_impl_.values_.armor_proficiencies_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.values_.armor_proficiencies_);
        } else {
          _this->_impl_.values_.armor_proficiencies_->MergeFrom(*from._impl_.values_.armor_proficiencies_);
        }
        break;
      }
      case VALUES_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChoiceSubmission::CopyFrom(const ChoiceSubmission& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.ChoiceSubmission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ChoiceSubmission::InternalSwap(ChoiceSubmission* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.choice_id_, &other->_impl_.choice_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.option_id_, &other->_impl_.option_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChoiceSubmission, _impl_.source_)
      + sizeof(ChoiceSubmission::_impl_.source_)
      - PROTOBUF_FIELD_OFFSET(ChoiceSubmission, _impl_.category_)>(
          reinterpret_cast<char*>(&_impl_.category_),
          reinterpret_cast<char*>(&other->_impl_.category_));
  swap(_impl_.values_, other->_impl_.values_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ChoiceSubmission::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SkillSelection::_Internal {
 public:
};

SkillSelection::SkillSelection(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SkillSelection_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.SkillSelection)
}
PROTOBUF_NDEBUG_INLINE SkillSelection::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::SkillSelection& from_msg)
      : skills_{visibility, arena, from.skills_},
        _skills_cached_byte_size_{0},
        _cached_size_{0} {}

SkillSelection::SkillSelection(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SkillSelection& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SkillSelection_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SkillSelection* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.SkillSelection)
}
PROTOBUF_NDEBUG_INLINE SkillSelection::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : skills_{visibility, arena},
        _skills_cached_byte_size_{0},
        _cached_size_{0} {}

inline void SkillSelection::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SkillSelection::~SkillSelection() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.SkillSelection)
  SharedDtor(*this);
}
inline void SkillSelection::SharedDtor(MessageLite& self) {
  SkillSelection& this_ = static_cast<SkillSelection&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SkillSelection::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SkillSelection(arena);
}
constexpr auto SkillSelection::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SkillSelection, _impl_.skills_) +
          decltype(SkillSelection::_impl_.skills_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SkillSelection), alignof(SkillSelection), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SkillSelection::PlacementNew_,
                                 sizeof(SkillSelection),
                                 alignof(SkillSelection));
  }
}
constexpr auto SkillSelection::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SkillSelection_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SkillSelection::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SkillSelection>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SkillSelection::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SkillSelection>(), &SkillSelection::ByteSizeLong,
              &SkillSelection::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SkillSelection, _impl_._cached_size_),
          false,
      },
      &SkillSelection::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SkillSelection_class_data_ =
        SkillSelection::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SkillSelection::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SkillSelection_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SkillSelection_class_data_.tc_table);
  return SkillSelection_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
SkillSelection::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SkillSelection_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::SkillSelection>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dnd5e.api.v1alpha1.Skill skills = 1 [json_name = "skills"];
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SkillSelection, _impl_.skills_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dnd5e.api.v1alpha1.Skill skills = 1 [json_name = "skills"];
    {PROTOBUF_FIELD_OFFSET(SkillSelection, _impl_.skills_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void SkillSelection::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.SkillSelection)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.skills_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SkillSelection::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SkillSelection& this_ = static_cast<const SkillSelection&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SkillSelection::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SkillSelection& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.SkillSelection)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dnd5e.api.v1alpha1.Skill skills = 1 [json_name = "skills"];
  {
    ::size_t byte_size = this_._impl_._skills_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          1, this_._internal_skills(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.SkillSelection)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SkillSelection::ByteSizeLong(const MessageLite& base) {
  const SkillSelection& this_ = static_cast<const SkillSelection&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SkillSelection::ByteSizeLong() const {
  const SkillSelection& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.SkillSelection)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.Skill skills = 1 [json_name = "skills"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_skills(), 1, this_._impl_._skills_cached_byte_size_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SkillSelection::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SkillSelection*>(&to_msg);
  auto& from = static_cast<const SkillSelection&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.SkillSelection)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_skills()->MergeFrom(from._internal_skills());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SkillSelection::CopyFrom(const SkillSelection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.SkillSelection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SkillSelection::InternalSwap(SkillSelection* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.skills_.InternalSwap(&other->_impl_.skills_);
}

::google::protobuf::Metadata SkillSelection::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LanguageSelection::_Internal {
 public:
};

LanguageSelection::LanguageSelection(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LanguageSelection_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.LanguageSelection)
}
PROTOBUF_NDEBUG_INLINE LanguageSelection::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::LanguageSelection& from_msg)
      : languages_{visibility, arena, from.languages_},
        _languages_cached_byte_size_{0},
        _cached_size_{0} {}

LanguageSelection::LanguageSelection(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const LanguageSelection& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LanguageSelection_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LanguageSelection* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.LanguageSelection)
}
PROTOBUF_NDEBUG_INLINE LanguageSelection::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : languages_{visibility, arena},
        _languages_cached_byte_size_{0},
        _cached_size_{0} {}

inline void LanguageSelection::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LanguageSelection::~LanguageSelection() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.LanguageSelection)
  SharedDtor(*this);
}
inline void LanguageSelection::SharedDtor(MessageLite& self) {
  LanguageSelection& this_ = static_cast<LanguageSelection&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LanguageSelection::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LanguageSelection(arena);
}
constexpr auto LanguageSelection::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(LanguageSelection, _impl_.languages_) +
          decltype(LanguageSelection::_impl_.languages_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(LanguageSelection), alignof(LanguageSelection), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&LanguageSelection::PlacementNew_,
                                 sizeof(LanguageSelection),
                                 alignof(LanguageSelection));
  }
}
constexpr auto LanguageSelection::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LanguageSelection_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LanguageSelection::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LanguageSelection>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LanguageSelection::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LanguageSelection>(), &LanguageSelection::ByteSizeLong,
              &LanguageSelection::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LanguageSelection, _impl_._cached_size_),
          false,
      },
      &LanguageSelection::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LanguageSelection_class_data_ =
        LanguageSelection::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LanguageSelection::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LanguageSelection_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LanguageSelection_class_data_.tc_table);
  return LanguageSelection_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
LanguageSelection::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    LanguageSelection_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::LanguageSelection>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dnd5e.api.v1alpha1.Language languages = 1 [json_name = "languages"];
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LanguageSelection, _impl_.languages_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dnd5e.api.v1alpha1.Language languages = 1 [json_name = "languages"];
    {PROTOBUF_FIELD_OFFSET(LanguageSelection, _impl_.languages_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void LanguageSelection::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.LanguageSelection)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.languages_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LanguageSelection::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LanguageSelection& this_ = static_cast<const LanguageSelection&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LanguageSelection::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LanguageSelection& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.LanguageSelection)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dnd5e.api.v1alpha1.Language languages = 1 [json_name = "languages"];
  {
    ::size_t byte_size = this_._impl_._languages_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          1, this_._internal_languages(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.LanguageSelection)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LanguageSelection::ByteSizeLong(const MessageLite& base) {
  const LanguageSelection& this_ = static_cast<const LanguageSelection&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LanguageSelection::ByteSizeLong() const {
  const LanguageSelection& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.LanguageSelection)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.Language languages = 1 [json_name = "languages"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_languages(), 1, this_._impl_._languages_cached_byte_size_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LanguageSelection::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LanguageSelection*>(&to_msg);
  auto& from = static_cast<const LanguageSelection&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.LanguageSelection)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_languages()->MergeFrom(from._internal_languages());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LanguageSelection::CopyFrom(const LanguageSelection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.LanguageSelection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LanguageSelection::InternalSwap(LanguageSelection* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.languages_.InternalSwap(&other->_impl_.languages_);
}

::google::protobuf::Metadata LanguageSelection::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FightingStyleSelection::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<FightingStyleSelection>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(FightingStyleSelection, _impl_._has_bits_);
};

FightingStyleSelection::FightingStyleSelection(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, FightingStyleSelection_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.FightingStyleSelection)
}
FightingStyleSelection::FightingStyleSelection(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const FightingStyleSelection& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, FightingStyleSelection_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE FightingStyleSelection::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void FightingStyleSelection::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.style_ = {};
}
FightingStyleSelection::~FightingStyleSelection() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.FightingStyleSelection)
  SharedDtor(*this);
}
inline void FightingStyleSelection::SharedDtor(MessageLite& self) {
  FightingStyleSelection& this_ = static_cast<FightingStyleSelection&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL FightingStyleSelection::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) FightingStyleSelection(arena);
}
constexpr auto FightingStyleSelection::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(FightingStyleSelection),
                                            alignof(FightingStyleSelection));
}
constexpr auto FightingStyleSelection::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_FightingStyleSelection_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &FightingStyleSelection::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<FightingStyleSelection>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &FightingStyleSelection::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<FightingStyleSelection>(), &FightingStyleSelection::ByteSizeLong,
              &FightingStyleSelection::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(FightingStyleSelection, _impl_._cached_size_),
          false,
      },
      &FightingStyleSelection::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull FightingStyleSelection_class_data_ =
        FightingStyleSelection::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
FightingStyleSelection::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&FightingStyleSelection_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(FightingStyleSelection_class_data_.tc_table);
  return FightingStyleSelection_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
FightingStyleSelection::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FightingStyleSelection, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    FightingStyleSelection_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::FightingStyleSelection>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .dnd5e.api.v1alpha1.FightingStyle style = 1 [json_name = "style"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FightingStyleSelection, _impl_.style_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(FightingStyleSelection, _impl_.style_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.FightingStyle style = 1 [json_name = "style"];
    {PROTOBUF_FIELD_OFFSET(FightingStyleSelection, _impl_.style_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void FightingStyleSelection::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.FightingStyleSelection)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.style_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL FightingStyleSelection::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const FightingStyleSelection& this_ = static_cast<const FightingStyleSelection&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL FightingStyleSelection::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const FightingStyleSelection& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.FightingStyleSelection)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .dnd5e.api.v1alpha1.FightingStyle style = 1 [json_name = "style"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_style() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_style(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.FightingStyleSelection)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t FightingStyleSelection::ByteSizeLong(const MessageLite& base) {
  const FightingStyleSelection& this_ = static_cast<const FightingStyleSelection&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t FightingStyleSelection::ByteSizeLong() const {
  const FightingStyleSelection& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.FightingStyleSelection)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .dnd5e.api.v1alpha1.FightingStyle style = 1 [json_name = "style"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_style() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_style());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void FightingStyleSelection::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FightingStyleSelection*>(&to_msg);
  auto& from = static_cast<const FightingStyleSelection&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.FightingStyleSelection)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (from._internal_style() != 0) {
      _this->_impl_.style_ = from._impl_.style_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FightingStyleSelection::CopyFrom(const FightingStyleSelection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.FightingStyleSelection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FightingStyleSelection::InternalSwap(FightingStyleSelection* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.style_, other->_impl_.style_);
}

::google::protobuf::Metadata FightingStyleSelection::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ToolSelection::_Internal {
 public:
};

ToolSelection::ToolSelection(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ToolSelection_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.ToolSelection)
}
PROTOBUF_NDEBUG_INLINE ToolSelection::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::ToolSelection& from_msg)
      : tools_{visibility, arena, from.tools_},
        _tools_cached_byte_size_{0},
        _cached_size_{0} {}

ToolSelection::ToolSelection(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ToolSelection& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ToolSelection_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ToolSelection* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.ToolSelection)
}
PROTOBUF_NDEBUG_INLINE ToolSelection::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : tools_{visibility, arena},
        _tools_cached_byte_size_{0},
        _cached_size_{0} {}

inline void ToolSelection::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ToolSelection::~ToolSelection() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.ToolSelection)
  SharedDtor(*this);
}
inline void ToolSelection::SharedDtor(MessageLite& self) {
  ToolSelection& this_ = static_cast<ToolSelection&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ToolSelection::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ToolSelection(arena);
}
constexpr auto ToolSelection::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ToolSelection, _impl_.tools_) +
          decltype(ToolSelection::_impl_.tools_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ToolSelection), alignof(ToolSelection), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ToolSelection::PlacementNew_,
                                 sizeof(ToolSelection),
                                 alignof(ToolSelection));
  }
}
constexpr auto ToolSelection::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ToolSelection_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ToolSelection::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ToolSelection>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ToolSelection::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ToolSelection>(), &ToolSelection::ByteSizeLong,
              &ToolSelection::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ToolSelection, _impl_._cached_size_),
          false,
      },
      &ToolSelection::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ToolSelection_class_data_ =
        ToolSelection::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ToolSelection::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ToolSelection_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ToolSelection_class_data_.tc_table);
  return ToolSelection_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
ToolSelection::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ToolSelection_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ToolSelection>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dnd5e.api.v1alpha1.Tool tools = 1 [json_name = "tools"];
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ToolSelection, _impl_.tools_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dnd5e.api.v1alpha1.Tool tools = 1 [json_name = "tools"];
    {PROTOBUF_FIELD_OFFSET(ToolSelection, _impl_.tools_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void ToolSelection::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.ToolSelection)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tools_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ToolSelection::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ToolSelection& this_ = static_cast<const ToolSelection&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ToolSelection::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ToolSelection& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.ToolSelection)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dnd5e.api.v1alpha1.Tool tools = 1 [json_name = "tools"];
  {
    ::size_t byte_size = this_._impl_._tools_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          1, this_._internal_tools(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.ToolSelection)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ToolSelection::ByteSizeLong(const MessageLite& base) {
  const ToolSelection& this_ = static_cast<const ToolSelection&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ToolSelection::ByteSizeLong() const {
  const ToolSelection& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.ToolSelection)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.Tool tools = 1 [json_name = "tools"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_tools(), 1, this_._impl_._tools_cached_byte_size_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ToolSelection::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ToolSelection*>(&to_msg);
  auto& from = static_cast<const ToolSelection&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.ToolSelection)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tools()->MergeFrom(from._internal_tools());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ToolSelection::CopyFrom(const ToolSelection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.ToolSelection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ToolSelection::InternalSwap(ToolSelection* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tools_.InternalSwap(&other->_impl_.tools_);
}

::google::protobuf::Metadata ToolSelection::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WeaponProficiencySelection::_Internal {
 public:
};

WeaponProficiencySelection::WeaponProficiencySelection(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WeaponProficiencySelection_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.WeaponProficiencySelection)
}
PROTOBUF_NDEBUG_INLINE WeaponProficiencySelection::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::WeaponProficiencySelection& from_msg)
      : weapons_{visibility, arena, from.weapons_},
        _weapons_cached_byte_size_{0},
        categories_{visibility, arena, from.categories_},
        _categories_cached_byte_size_{0},
        _cached_size_{0} {}

WeaponProficiencySelection::WeaponProficiencySelection(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const WeaponProficiencySelection& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WeaponProficiencySelection_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WeaponProficiencySelection* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.WeaponProficiencySelection)
}
PROTOBUF_NDEBUG_INLINE WeaponProficiencySelection::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : weapons_{visibility, arena},
        _weapons_cached_byte_size_{0},
        categories_{visibility, arena},
        _categories_cached_byte_size_{0},
        _cached_size_{0} {}

inline void WeaponProficiencySelection::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
WeaponProficiencySelection::~WeaponProficiencySelection() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.WeaponProficiencySelection)
  SharedDtor(*this);
}
inline void WeaponProficiencySelection::SharedDtor(MessageLite& self) {
  WeaponProficiencySelection& this_ = static_cast<WeaponProficiencySelection&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL WeaponProficiencySelection::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) WeaponProficiencySelection(arena);
}
constexpr auto WeaponProficiencySelection::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(WeaponProficiencySelection, _impl_.weapons_) +
          decltype(WeaponProficiencySelection::_impl_.weapons_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(WeaponProficiencySelection, _impl_.categories_) +
          decltype(WeaponProficiencySelection::_impl_.categories_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(WeaponProficiencySelection), alignof(WeaponProficiencySelection), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&WeaponProficiencySelection::PlacementNew_,
                                 sizeof(WeaponProficiencySelection),
                                 alignof(WeaponProficiencySelection));
  }
}
constexpr auto WeaponProficiencySelection::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_WeaponProficiencySelection_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &WeaponProficiencySelection::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<WeaponProficiencySelection>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &WeaponProficiencySelection::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<WeaponProficiencySelection>(), &WeaponProficiencySelection::ByteSizeLong,
              &WeaponProficiencySelection::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(WeaponProficiencySelection, _impl_._cached_size_),
          false,
      },
      &WeaponProficiencySelection::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull WeaponProficiencySelection_class_data_ =
        WeaponProficiencySelection::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
WeaponProficiencySelection::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&WeaponProficiencySelection_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(WeaponProficiencySelection_class_data_.tc_table);
  return WeaponProficiencySelection_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
WeaponProficiencySelection::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    WeaponProficiencySelection_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::WeaponProficiencySelection>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dnd5e.api.v1alpha1.EquipmentType categories = 2 [json_name = "categories"];
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(WeaponProficiencySelection, _impl_.categories_)}},
    // repeated .dnd5e.api.v1alpha1.Weapon weapons = 1 [json_name = "weapons"];
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WeaponProficiencySelection, _impl_.weapons_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dnd5e.api.v1alpha1.Weapon weapons = 1 [json_name = "weapons"];
    {PROTOBUF_FIELD_OFFSET(WeaponProficiencySelection, _impl_.weapons_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated .dnd5e.api.v1alpha1.EquipmentType categories = 2 [json_name = "categories"];
    {PROTOBUF_FIELD_OFFSET(WeaponProficiencySelection, _impl_.categories_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void WeaponProficiencySelection::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.WeaponProficiencySelection)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.weapons_.Clear();
  _impl_.categories_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL WeaponProficiencySelection::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const WeaponProficiencySelection& this_ = static_cast<const WeaponProficiencySelection&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL WeaponProficiencySelection::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const WeaponProficiencySelection& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.WeaponProficiencySelection)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dnd5e.api.v1alpha1.Weapon weapons = 1 [json_name = "weapons"];
  {
    ::size_t byte_size = this_._impl_._weapons_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          1, this_._internal_weapons(), byte_size, target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.EquipmentType categories = 2 [json_name = "categories"];
  {
    ::size_t byte_size = this_._impl_._categories_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          2, this_._internal_categories(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.WeaponProficiencySelection)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t WeaponProficiencySelection::ByteSizeLong(const MessageLite& base) {
  const WeaponProficiencySelection& this_ = static_cast<const WeaponProficiencySelection&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t WeaponProficiencySelection::ByteSizeLong() const {
  const WeaponProficiencySelection& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.WeaponProficiencySelection)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.Weapon weapons = 1 [json_name = "weapons"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_weapons(), 1, this_._impl_._weapons_cached_byte_size_);
    }
    // repeated .dnd5e.api.v1alpha1.EquipmentType categories = 2 [json_name = "categories"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_categories(), 1, this_._impl_._categories_cached_byte_size_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void WeaponProficiencySelection::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WeaponProficiencySelection*>(&to_msg);
  auto& from = static_cast<const WeaponProficiencySelection&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.WeaponProficiencySelection)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_weapons()->MergeFrom(from._internal_weapons());
  _this->_internal_mutable_categories()->MergeFrom(from._internal_categories());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WeaponProficiencySelection::CopyFrom(const WeaponProficiencySelection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.WeaponProficiencySelection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WeaponProficiencySelection::InternalSwap(WeaponProficiencySelection* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.weapons_.InternalSwap(&other->_impl_.weapons_);
  _impl_.categories_.InternalSwap(&other->_impl_.categories_);
}

::google::protobuf::Metadata WeaponProficiencySelection::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ArmorProficiencySelection::_Internal {
 public:
};

ArmorProficiencySelection::ArmorProficiencySelection(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ArmorProficiencySelection_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.ArmorProficiencySelection)
}
PROTOBUF_NDEBUG_INLINE ArmorProficiencySelection::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::ArmorProficiencySelection& from_msg)
      : armors_{visibility, arena, from.armors_},
        _armors_cached_byte_size_{0},
        categories_{visibility, arena, from.categories_},
        _categories_cached_byte_size_{0},
        _cached_size_{0} {}

ArmorProficiencySelection::ArmorProficiencySelection(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ArmorProficiencySelection& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ArmorProficiencySelection_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ArmorProficiencySelection* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.ArmorProficiencySelection)
}
PROTOBUF_NDEBUG_INLINE ArmorProficiencySelection::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : armors_{visibility, arena},
        _armors_cached_byte_size_{0},
        categories_{visibility, arena},
        _categories_cached_byte_size_{0},
        _cached_size_{0} {}

inline void ArmorProficiencySelection::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ArmorProficiencySelection::~ArmorProficiencySelection() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.ArmorProficiencySelection)
  SharedDtor(*this);
}
inline void ArmorProficiencySelection::SharedDtor(MessageLite& self) {
  ArmorProficiencySelection& this_ = static_cast<ArmorProficiencySelection&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ArmorProficiencySelection::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ArmorProficiencySelection(arena);
}
constexpr auto ArmorProficiencySelection::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ArmorProficiencySelection, _impl_.armors_) +
          decltype(ArmorProficiencySelection::_impl_.armors_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ArmorProficiencySelection, _impl_.categories_) +
          decltype(ArmorProficiencySelection::_impl_.categories_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ArmorProficiencySelection), alignof(ArmorProficiencySelection), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ArmorProficiencySelection::PlacementNew_,
                                 sizeof(ArmorProficiencySelection),
                                 alignof(ArmorProficiencySelection));
  }
}
constexpr auto ArmorProficiencySelection::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ArmorProficiencySelection_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ArmorProficiencySelection::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ArmorProficiencySelection>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ArmorProficiencySelection::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ArmorProficiencySelection>(), &ArmorProficiencySelection::ByteSizeLong,
              &ArmorProficiencySelection::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ArmorProficiencySelection, _impl_._cached_size_),
          false,
      },
      &ArmorProficiencySelection::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ArmorProficiencySelection_class_data_ =
        ArmorProficiencySelection::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ArmorProficiencySelection::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ArmorProficiencySelection_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ArmorProficiencySelection_class_data_.tc_table);
  return ArmorProficiencySelection_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
ArmorProficiencySelection::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ArmorProficiencySelection_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ArmorProficiencySelection>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dnd5e.api.v1alpha1.EquipmentType categories = 2 [json_name = "categories"];
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ArmorProficiencySelection, _impl_.categories_)}},
    // repeated .dnd5e.api.v1alpha1.Armor armors = 1 [json_name = "armors"];
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ArmorProficiencySelection, _impl_.armors_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dnd5e.api.v1alpha1.Armor armors = 1 [json_name = "armors"];
    {PROTOBUF_FIELD_OFFSET(ArmorProficiencySelection, _impl_.armors_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated .dnd5e.api.v1alpha1.EquipmentType categories = 2 [json_name = "categories"];
    {PROTOBUF_FIELD_OFFSET(ArmorProficiencySelection, _impl_.categories_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void ArmorProficiencySelection::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.ArmorProficiencySelection)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.armors_.Clear();
  _impl_.categories_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ArmorProficiencySelection::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ArmorProficiencySelection& this_ = static_cast<const ArmorProficiencySelection&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ArmorProficiencySelection::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ArmorProficiencySelection& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.ArmorProficiencySelection)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dnd5e.api.v1alpha1.Armor armors = 1 [json_name = "armors"];
  {
    ::size_t byte_size = this_._impl_._armors_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          1, this_._internal_armors(), byte_size, target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.EquipmentType categories = 2 [json_name = "categories"];
  {
    ::size_t byte_size = this_._impl_._categories_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          2, this_._internal_categories(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.ArmorProficiencySelection)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ArmorProficiencySelection::ByteSizeLong(const MessageLite& base) {
  const ArmorProficiencySelection& this_ = static_cast<const ArmorProficiencySelection&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ArmorProficiencySelection::ByteSizeLong() const {
  const ArmorProficiencySelection& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.ArmorProficiencySelection)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.Armor armors = 1 [json_name = "armors"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_armors(), 1, this_._impl_._armors_cached_byte_size_);
    }
    // repeated .dnd5e.api.v1alpha1.EquipmentType categories = 2 [json_name = "categories"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_categories(), 1, this_._impl_._categories_cached_byte_size_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ArmorProficiencySelection::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ArmorProficiencySelection*>(&to_msg);
  auto& from = static_cast<const ArmorProficiencySelection&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.ArmorProficiencySelection)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_armors()->MergeFrom(from._internal_armors());
  _this->_internal_mutable_categories()->MergeFrom(from._internal_categories());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ArmorProficiencySelection::CopyFrom(const ArmorProficiencySelection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.ArmorProficiencySelection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ArmorProficiencySelection::InternalSwap(ArmorProficiencySelection* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.armors_.InternalSwap(&other->_impl_.armors_);
  _impl_.categories_.InternalSwap(&other->_impl_.categories_);
}

::google::protobuf::Metadata ArmorProficiencySelection::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CharacterRequirements::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CharacterRequirements>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CharacterRequirements, _impl_._has_bits_);
};

CharacterRequirements::CharacterRequirements(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CharacterRequirements_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.CharacterRequirements)
}
PROTOBUF_NDEBUG_INLINE CharacterRequirements::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::CharacterRequirements& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        choices_{visibility, arena, from.choices_},
        missing_choices_{visibility, arena, from.missing_choices_} {}

CharacterRequirements::CharacterRequirements(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CharacterRequirements& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CharacterRequirements_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CharacterRequirements* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.all_choices_made_ = from._impl_.all_choices_made_;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.CharacterRequirements)
}
PROTOBUF_NDEBUG_INLINE CharacterRequirements::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        choices_{visibility, arena},
        missing_choices_{visibility, arena} {}

inline void CharacterRequirements::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.all_choices_made_ = {};
}
CharacterRequirements::~CharacterRequirements() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.CharacterRequirements)
  SharedDtor(*this);
}
inline void CharacterRequirements::SharedDtor(MessageLite& self) {
  CharacterRequirements& this_ = static_cast<CharacterRequirements&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CharacterRequirements::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CharacterRequirements(arena);
}
constexpr auto CharacterRequirements::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CharacterRequirements, _impl_.choices_) +
          decltype(CharacterRequirements::_impl_.choices_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CharacterRequirements, _impl_.missing_choices_) +
          decltype(CharacterRequirements::_impl_.missing_choices_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CharacterRequirements), alignof(CharacterRequirements), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CharacterRequirements::PlacementNew_,
                                 sizeof(CharacterRequirements),
                                 alignof(CharacterRequirements));
  }
}
constexpr auto CharacterRequirements::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CharacterRequirements_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CharacterRequirements::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CharacterRequirements>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CharacterRequirements::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CharacterRequirements>(), &CharacterRequirements::ByteSizeLong,
              &CharacterRequirements::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CharacterRequirements, _impl_._cached_size_),
          false,
      },
      &CharacterRequirements::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CharacterRequirements_class_data_ =
        CharacterRequirements::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CharacterRequirements::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CharacterRequirements_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CharacterRequirements_class_data_.tc_table);
  return CharacterRequirements_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 64, 2>
CharacterRequirements::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CharacterRequirements, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CharacterRequirements_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::CharacterRequirements>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .dnd5e.api.v1alpha1.RequiredChoice choices = 1 [json_name = "choices"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CharacterRequirements, _impl_.choices_)}},
    // bool all_choices_made = 2 [json_name = "allChoicesMade"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CharacterRequirements, _impl_.all_choices_made_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(CharacterRequirements, _impl_.all_choices_made_)}},
    // repeated string missing_choices = 3 [json_name = "missingChoices"];
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CharacterRequirements, _impl_.missing_choices_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dnd5e.api.v1alpha1.RequiredChoice choices = 1 [json_name = "choices"];
    {PROTOBUF_FIELD_OFFSET(CharacterRequirements, _impl_.choices_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool all_choices_made = 2 [json_name = "allChoicesMade"];
    {PROTOBUF_FIELD_OFFSET(CharacterRequirements, _impl_.all_choices_made_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated string missing_choices = 3 [json_name = "missingChoices"];
    {PROTOBUF_FIELD_OFFSET(CharacterRequirements, _impl_.missing_choices_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::RequiredChoice>()},
  }},
  {{
    "\50\0\0\17\0\0\0\0"
    "dnd5e.api.v1alpha1.CharacterRequirements"
    "missing_choices"
  }},
};
PROTOBUF_NOINLINE void CharacterRequirements::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.CharacterRequirements)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.choices_.Clear();
  _impl_.missing_choices_.Clear();
  _impl_.all_choices_made_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CharacterRequirements::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CharacterRequirements& this_ = static_cast<const CharacterRequirements&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CharacterRequirements::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CharacterRequirements& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.CharacterRequirements)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dnd5e.api.v1alpha1.RequiredChoice choices = 1 [json_name = "choices"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_choices_size());
       i < n; i++) {
    const auto& repfield = this_._internal_choices().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // bool all_choices_made = 2 [json_name = "allChoicesMade"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_all_choices_made() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_all_choices_made(), target);
    }
  }

  // repeated string missing_choices = 3 [json_name = "missingChoices"];
  for (int i = 0, n = this_._internal_missing_choices_size(); i < n; ++i) {
    const auto& s = this_._internal_missing_choices().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.CharacterRequirements.missing_choices");
    target = stream->WriteString(3, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.CharacterRequirements)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CharacterRequirements::ByteSizeLong(const MessageLite& base) {
  const CharacterRequirements& this_ = static_cast<const CharacterRequirements&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CharacterRequirements::ByteSizeLong() const {
  const CharacterRequirements& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.CharacterRequirements)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.RequiredChoice choices = 1 [json_name = "choices"];
    {
      total_size += 1UL * this_._internal_choices_size();
      for (const auto& msg : this_._internal_choices()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated string missing_choices = 3 [json_name = "missingChoices"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_missing_choices().size());
      for (int i = 0, n = this_._internal_missing_choices().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_missing_choices().Get(i));
      }
    }
  }
   {
    // bool all_choices_made = 2 [json_name = "allChoicesMade"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_all_choices_made() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CharacterRequirements::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CharacterRequirements*>(&to_msg);
  auto& from = static_cast<const CharacterRequirements&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.CharacterRequirements)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_choices()->MergeFrom(
      from._internal_choices());
  _this->_internal_mutable_missing_choices()->MergeFrom(from._internal_missing_choices());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (from._internal_all_choices_made() != 0) {
      _this->_impl_.all_choices_made_ = from._impl_.all_choices_made_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CharacterRequirements::CopyFrom(const CharacterRequirements& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.CharacterRequirements)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CharacterRequirements::InternalSwap(CharacterRequirements* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.choices_.InternalSwap(&other->_impl_.choices_);
  _impl_.missing_choices_.InternalSwap(&other->_impl_.missing_choices_);
  swap(_impl_.all_choices_made_, other->_impl_.all_choices_made_);
}

::google::protobuf::Metadata CharacterRequirements::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RequiredChoice::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RequiredChoice>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RequiredChoice, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RequiredChoice, _impl_._oneof_case_);
};

void RequiredChoice::set_allocated_skill_options(::dnd5e::api::v1alpha1::SkillOptions* PROTOBUF_NULLABLE skill_options) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_options();
  if (skill_options) {
    ::google::protobuf::Arena* submessage_arena = skill_options->GetArena();
    if (message_arena != submessage_arena) {
      skill_options = ::google::protobuf::internal::GetOwnedMessage(message_arena, skill_options, submessage_arena);
    }
    set_has_skill_options();
    _impl_.options_.skill_options_ = skill_options;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.RequiredChoice.skill_options)
}
void RequiredChoice::set_allocated_language_options(::dnd5e::api::v1alpha1::LanguageOptions* PROTOBUF_NULLABLE language_options) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_options();
  if (language_options) {
    ::google::protobuf::Arena* submessage_arena = language_options->GetArena();
    if (message_arena != submessage_arena) {
      language_options = ::google::protobuf::internal::GetOwnedMessage(message_arena, language_options, submessage_arena);
    }
    set_has_language_options();
    _impl_.options_.language_options_ = language_options;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.RequiredChoice.language_options)
}
void RequiredChoice::set_allocated_equipment_options(::dnd5e::api::v1alpha1::EquipmentChoice* PROTOBUF_NULLABLE equipment_options) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_options();
  if (equipment_options) {
    ::google::protobuf::Arena* submessage_arena = equipment_options->GetArena();
    if (message_arena != submessage_arena) {
      equipment_options = ::google::protobuf::internal::GetOwnedMessage(message_arena, equipment_options, submessage_arena);
    }
    set_has_equipment_options();
    _impl_.options_.equipment_options_ = equipment_options;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.RequiredChoice.equipment_options)
}
void RequiredChoice::set_allocated_fighting_style_options(::dnd5e::api::v1alpha1::FightingStyleOptions* PROTOBUF_NULLABLE fighting_style_options) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_options();
  if (fighting_style_options) {
    ::google::protobuf::Arena* submessage_arena = fighting_style_options->GetArena();
    if (message_arena != submessage_arena) {
      fighting_style_options = ::google::protobuf::internal::GetOwnedMessage(message_arena, fighting_style_options, submessage_arena);
    }
    set_has_fighting_style_options();
    _impl_.options_.fighting_style_options_ = fighting_style_options;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.RequiredChoice.fighting_style_options)
}
void RequiredChoice::set_allocated_tool_options(::dnd5e::api::v1alpha1::ToolOptions* PROTOBUF_NULLABLE tool_options) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_options();
  if (tool_options) {
    ::google::protobuf::Arena* submessage_arena = tool_options->GetArena();
    if (message_arena != submessage_arena) {
      tool_options = ::google::protobuf::internal::GetOwnedMessage(message_arena, tool_options, submessage_arena);
    }
    set_has_tool_options();
    _impl_.options_.tool_options_ = tool_options;
  }
  // @@protoc_insertion_point(field_set_allocated:dnd5e.api.v1alpha1.RequiredChoice.tool_options)
}
RequiredChoice::RequiredChoice(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RequiredChoice_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.RequiredChoice)
}
PROTOBUF_NDEBUG_INLINE RequiredChoice::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::RequiredChoice& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        choice_id_(arena, from.choice_id_),
        description_(arena, from.description_),
        options_{},
        _oneof_case_{from._oneof_case_[0]} {}

RequiredChoice::RequiredChoice(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RequiredChoice& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RequiredChoice_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RequiredChoice* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, category_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, category_),
           offsetof(Impl_, count_) -
               offsetof(Impl_, category_) +
               sizeof(Impl_::count_));
  switch (options_case()) {
    case OPTIONS_NOT_SET:
      break;
      case kSkillOptions:
        _impl_.options_.skill_options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_.skill_options_);
        break;
      case kLanguageOptions:
        _impl_.options_.language_options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_.language_options_);
        break;
      case kEquipmentOptions:
        _impl_.options_.equipment_options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_.equipment_options_);
        break;
      case kFightingStyleOptions:
        _impl_.options_.fighting_style_options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_.fighting_style_options_);
        break;
      case kToolOptions:
        _impl_.options_.tool_options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_.tool_options_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.RequiredChoice)
}
PROTOBUF_NDEBUG_INLINE RequiredChoice::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        choice_id_(arena),
        description_(arena),
        options_{},
        _oneof_case_{} {}

inline void RequiredChoice::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, category_),
           0,
           offsetof(Impl_, count_) -
               offsetof(Impl_, category_) +
               sizeof(Impl_::count_));
}
RequiredChoice::~RequiredChoice() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.RequiredChoice)
  SharedDtor(*this);
}
inline void RequiredChoice::SharedDtor(MessageLite& self) {
  RequiredChoice& this_ = static_cast<RequiredChoice&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.choice_id_.Destroy();
  this_._impl_.description_.Destroy();
  if (this_.has_options()) {
    this_.clear_options();
  }
  this_._impl_.~Impl_();
}

void RequiredChoice::clear_options() {
// @@protoc_insertion_point(one_of_clear_start:dnd5e.api.v1alpha1.RequiredChoice)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (options_case()) {
    case kSkillOptions: {
      if (GetArena() == nullptr) {
        delete _impl_.options_.skill_options_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.options_.skill_options_);
      }
      break;
    }
    case kLanguageOptions: {
      if (GetArena() == nullptr) {
        delete _impl_.options_.language_options_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.options_.language_options_);
      }
      break;
    }
    case kEquipmentOptions: {
      if (GetArena() == nullptr) {
        delete _impl_.options_.equipment_options_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.options_.equipment_options_);
      }
      break;
    }
    case kFightingStyleOptions: {
      if (GetArena() == nullptr) {
        delete _impl_.options_.fighting_style_options_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.options_.fighting_style_options_);
      }
      break;
    }
    case kToolOptions: {
      if (GetArena() == nullptr) {
        delete _impl_.options_.tool_options_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.options_.tool_options_);
      }
      break;
    }
    case OPTIONS_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = OPTIONS_NOT_SET;
}


inline void* PROTOBUF_NONNULL RequiredChoice::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RequiredChoice(arena);
}
constexpr auto RequiredChoice::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RequiredChoice),
                                            alignof(RequiredChoice));
}
constexpr auto RequiredChoice::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RequiredChoice_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RequiredChoice::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RequiredChoice>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RequiredChoice::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RequiredChoice>(), &RequiredChoice::ByteSizeLong,
              &RequiredChoice::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RequiredChoice, _impl_._cached_size_),
          false,
      },
      &RequiredChoice::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RequiredChoice_class_data_ =
        RequiredChoice::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RequiredChoice::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RequiredChoice_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RequiredChoice_class_data_.tc_table);
  return RequiredChoice_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 10, 5, 70, 2>
RequiredChoice::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RequiredChoice, _impl_._has_bits_),
    0, // no _extensions_
    10, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RequiredChoice_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::RequiredChoice>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string choice_id = 1 [json_name = "choiceId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RequiredChoice, _impl_.choice_id_)}},
    // .dnd5e.api.v1alpha1.ChoiceCategory category = 2 [json_name = "category"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RequiredChoice, _impl_.category_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(RequiredChoice, _impl_.category_)}},
    // .dnd5e.api.v1alpha1.ChoiceSource source = 3 [json_name = "source"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RequiredChoice, _impl_.source_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(RequiredChoice, _impl_.source_)}},
    // string description = 4 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(RequiredChoice, _impl_.description_)}},
    // int32 count = 5 [json_name = "count"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RequiredChoice, _impl_.count_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(RequiredChoice, _impl_.count_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string choice_id = 1 [json_name = "choiceId"];
    {PROTOBUF_FIELD_OFFSET(RequiredChoice, _impl_.choice_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .dnd5e.api.v1alpha1.ChoiceCategory category = 2 [json_name = "category"];
    {PROTOBUF_FIELD_OFFSET(RequiredChoice, _impl_.category_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .dnd5e.api.v1alpha1.ChoiceSource source = 3 [json_name = "source"];
    {PROTOBUF_FIELD_OFFSET(RequiredChoice, _impl_.source_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string description = 4 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(RequiredChoice, _impl_.description_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 count = 5 [json_name = "count"];
    {PROTOBUF_FIELD_OFFSET(RequiredChoice, _impl_.count_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .dnd5e.api.v1alpha1.SkillOptions skill_options = 6 [json_name = "skillOptions"];
    {PROTOBUF_FIELD_OFFSET(RequiredChoice, _impl_.options_.skill_options_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.LanguageOptions language_options = 7 [json_name = "languageOptions"];
    {PROTOBUF_FIELD_OFFSET(RequiredChoice, _impl_.options_.language_options_), _Internal::kOneofCaseOffset + 0, 1, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.EquipmentChoice equipment_options = 8 [json_name = "equipmentOptions"];
    {PROTOBUF_FIELD_OFFSET(RequiredChoice, _impl_.options_.equipment_options_), _Internal::kOneofCaseOffset + 0, 2, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.FightingStyleOptions fighting_style_options = 9 [json_name = "fightingStyleOptions"];
    {PROTOBUF_FIELD_OFFSET(RequiredChoice, _impl_.options_.fighting_style_options_), _Internal::kOneofCaseOffset + 0, 3, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.ToolOptions tool_options = 10 [json_name = "toolOptions"];
    {PROTOBUF_FIELD_OFFSET(RequiredChoice, _impl_.options_.tool_options_), _Internal::kOneofCaseOffset + 0, 4, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::SkillOptions>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::LanguageOptions>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::EquipmentChoice>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::FightingStyleOptions>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ToolOptions>()},
  }},
  {{
    "\41\11\0\0\13\0\0\0\0\0\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.RequiredChoice"
    "choice_id"
    "description"
  }},
};
PROTOBUF_NOINLINE void RequiredChoice::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.RequiredChoice)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.choice_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000001cU) != 0) {
    ::memset(&_impl_.category_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.count_) -
        reinterpret_cast<char*>(&_impl_.category_)) + sizeof(_impl_.count_));
  }
  clear_options();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RequiredChoice::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RequiredChoice& this_ = static_cast<const RequiredChoice&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RequiredChoice::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RequiredChoice& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.RequiredChoice)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string choice_id = 1 [json_name = "choiceId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_choice_id().empty()) {
      const ::std::string& _s = this_._internal_choice_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.RequiredChoice.choice_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // .dnd5e.api.v1alpha1.ChoiceCategory category = 2 [json_name = "category"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_category() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_category(), target);
    }
  }

  // .dnd5e.api.v1alpha1.ChoiceSource source = 3 [json_name = "source"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_source() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_source(), target);
    }
  }

  // string description = 4 [json_name = "description"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.RequiredChoice.description");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // int32 count = 5 [json_name = "count"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (this_._internal_count() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
              stream, this_._internal_count(), target);
    }
  }

  switch (this_.options_case()) {
    case kSkillOptions: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, *this_._impl_.options_.skill_options_, this_._impl_.options_.skill_options_->GetCachedSize(), target,
          stream);
      break;
    }
    case kLanguageOptions: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          7, *this_._impl_.options_.language_options_, this_._impl_.options_.language_options_->GetCachedSize(), target,
          stream);
      break;
    }
    case kEquipmentOptions: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          8, *this_._impl_.options_.equipment_options_, this_._impl_.options_.equipment_options_->GetCachedSize(), target,
          stream);
      break;
    }
    case kFightingStyleOptions: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          9, *this_._impl_.options_.fighting_style_options_, this_._impl_.options_.fighting_style_options_->GetCachedSize(), target,
          stream);
      break;
    }
    case kToolOptions: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          10, *this_._impl_.options_.tool_options_, this_._impl_.options_.tool_options_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.RequiredChoice)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RequiredChoice::ByteSizeLong(const MessageLite& base) {
  const RequiredChoice& this_ = static_cast<const RequiredChoice&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RequiredChoice::ByteSizeLong() const {
  const RequiredChoice& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.RequiredChoice)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // string choice_id = 1 [json_name = "choiceId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_choice_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_choice_id());
      }
    }
    // string description = 4 [json_name = "description"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // .dnd5e.api.v1alpha1.ChoiceCategory category = 2 [json_name = "category"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_category() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_category());
      }
    }
    // .dnd5e.api.v1alpha1.ChoiceSource source = 3 [json_name = "source"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_source() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_source());
      }
    }
    // int32 count = 5 [json_name = "count"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_count());
      }
    }
  }
  switch (this_.options_case()) {
    // .dnd5e.api.v1alpha1.SkillOptions skill_options = 6 [json_name = "skillOptions"];
    case kSkillOptions: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.options_.skill_options_);
      break;
    }
    // .dnd5e.api.v1alpha1.LanguageOptions language_options = 7 [json_name = "languageOptions"];
    case kLanguageOptions: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.options_.language_options_);
      break;
    }
    // .dnd5e.api.v1alpha1.EquipmentChoice equipment_options = 8 [json_name = "equipmentOptions"];
    case kEquipmentOptions: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.options_.equipment_options_);
      break;
    }
    // .dnd5e.api.v1alpha1.FightingStyleOptions fighting_style_options = 9 [json_name = "fightingStyleOptions"];
    case kFightingStyleOptions: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.options_.fighting_style_options_);
      break;
    }
    // .dnd5e.api.v1alpha1.ToolOptions tool_options = 10 [json_name = "toolOptions"];
    case kToolOptions: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.options_.tool_options_);
      break;
    }
    case OPTIONS_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RequiredChoice::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RequiredChoice*>(&to_msg);
  auto& from = static_cast<const RequiredChoice&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.RequiredChoice)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_choice_id().empty()) {
        _this->_internal_set_choice_id(from._internal_choice_id());
      } else {
        if (_this->_impl_.choice_id_.IsDefault()) {
          _this->_internal_set_choice_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_category() != 0) {
        _this->_impl_.category_ = from._impl_.category_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_source() != 0) {
        _this->_impl_.source_ = from._impl_.source_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_count() != 0) {
        _this->_impl_.count_ = from._impl_.count_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_options();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kSkillOptions: {
        if (oneof_needs_init) {
          _this->_impl_.options_.skill_options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_.skill_options_);
        } else {
          _this->_impl_.options_.skill_options_->MergeFrom(*from._impl_.options_.skill_options_);
        }
        break;
      }
      case kLanguageOptions: {
        if (oneof_needs_init) {
          _this->_impl_.options_.language_options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_.language_options_);
        } else {
          _this->_impl_.options_.language_options_->MergeFrom(*from._impl_.options_.language_options_);
        }
        break;
      }
      case kEquipmentOptions: {
        if (oneof_needs_init) {
          _this->_impl_.options_.equipment_options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_.equipment_options_);
        } else {
          _this->_impl_.options_.equipment_options_->MergeFrom(*from._impl_.options_.equipment_options_);
        }
        break;
      }
      case kFightingStyleOptions: {
        if (oneof_needs_init) {
          _this->_impl_.options_.fighting_style_options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_.fighting_style_options_);
        } else {
          _this->_impl_.options_.fighting_style_options_->MergeFrom(*from._impl_.options_.fighting_style_options_);
        }
        break;
      }
      case kToolOptions: {
        if (oneof_needs_init) {
          _this->_impl_.options_.tool_options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_.tool_options_);
        } else {
          _this->_impl_.options_.tool_options_->MergeFrom(*from._impl_.options_.tool_options_);
        }
        break;
      }
      case OPTIONS_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RequiredChoice::CopyFrom(const RequiredChoice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.RequiredChoice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RequiredChoice::InternalSwap(RequiredChoice* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.choice_id_, &other->_impl_.choice_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequiredChoice, _impl_.count_)
      + sizeof(RequiredChoice::_impl_.count_)
      - PROTOBUF_FIELD_OFFSET(RequiredChoice, _impl_.category_)>(
          reinterpret_cast<char*>(&_impl_.category_),
          reinterpret_cast<char*>(&other->_impl_.category_));
  swap(_impl_.options_, other->_impl_.options_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata RequiredChoice::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SkillOptions::_Internal {
 public:
};

SkillOptions::SkillOptions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SkillOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.SkillOptions)
}
PROTOBUF_NDEBUG_INLINE SkillOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::SkillOptions& from_msg)
      : available_{visibility, arena, from.available_},
        _available_cached_byte_size_{0},
        _cached_size_{0} {}

SkillOptions::SkillOptions(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SkillOptions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SkillOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SkillOptions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.SkillOptions)
}
PROTOBUF_NDEBUG_INLINE SkillOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : available_{visibility, arena},
        _available_cached_byte_size_{0},
        _cached_size_{0} {}

inline void SkillOptions::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SkillOptions::~SkillOptions() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.SkillOptions)
  SharedDtor(*this);
}
inline void SkillOptions::SharedDtor(MessageLite& self) {
  SkillOptions& this_ = static_cast<SkillOptions&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SkillOptions::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SkillOptions(arena);
}
constexpr auto SkillOptions::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SkillOptions, _impl_.available_) +
          decltype(SkillOptions::_impl_.available_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SkillOptions), alignof(SkillOptions), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SkillOptions::PlacementNew_,
                                 sizeof(SkillOptions),
                                 alignof(SkillOptions));
  }
}
constexpr auto SkillOptions::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SkillOptions_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SkillOptions::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SkillOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SkillOptions::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SkillOptions>(), &SkillOptions::ByteSizeLong,
              &SkillOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SkillOptions, _impl_._cached_size_),
          false,
      },
      &SkillOptions::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SkillOptions_class_data_ =
        SkillOptions::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SkillOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SkillOptions_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SkillOptions_class_data_.tc_table);
  return SkillOptions_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
SkillOptions::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SkillOptions_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::SkillOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dnd5e.api.v1alpha1.Skill available = 1 [json_name = "available"];
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SkillOptions, _impl_.available_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dnd5e.api.v1alpha1.Skill available = 1 [json_name = "available"];
    {PROTOBUF_FIELD_OFFSET(SkillOptions, _impl_.available_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void SkillOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.SkillOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.available_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SkillOptions::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SkillOptions& this_ = static_cast<const SkillOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SkillOptions::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SkillOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.SkillOptions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dnd5e.api.v1alpha1.Skill available = 1 [json_name = "available"];
  {
    ::size_t byte_size = this_._impl_._available_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          1, this_._internal_available(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.SkillOptions)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SkillOptions::ByteSizeLong(const MessageLite& base) {
  const SkillOptions& this_ = static_cast<const SkillOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SkillOptions::ByteSizeLong() const {
  const SkillOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.SkillOptions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.Skill available = 1 [json_name = "available"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_available(), 1, this_._impl_._available_cached_byte_size_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SkillOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SkillOptions*>(&to_msg);
  auto& from = static_cast<const SkillOptions&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.SkillOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_available()->MergeFrom(from._internal_available());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SkillOptions::CopyFrom(const SkillOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.SkillOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SkillOptions::InternalSwap(SkillOptions* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.available_.InternalSwap(&other->_impl_.available_);
}

::google::protobuf::Metadata SkillOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LanguageOptions::_Internal {
 public:
};

LanguageOptions::LanguageOptions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LanguageOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.LanguageOptions)
}
PROTOBUF_NDEBUG_INLINE LanguageOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::LanguageOptions& from_msg)
      : available_{visibility, arena, from.available_},
        _available_cached_byte_size_{0},
        _cached_size_{0} {}

LanguageOptions::LanguageOptions(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const LanguageOptions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LanguageOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LanguageOptions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.LanguageOptions)
}
PROTOBUF_NDEBUG_INLINE LanguageOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : available_{visibility, arena},
        _available_cached_byte_size_{0},
        _cached_size_{0} {}

inline void LanguageOptions::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LanguageOptions::~LanguageOptions() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.LanguageOptions)
  SharedDtor(*this);
}
inline void LanguageOptions::SharedDtor(MessageLite& self) {
  LanguageOptions& this_ = static_cast<LanguageOptions&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LanguageOptions::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LanguageOptions(arena);
}
constexpr auto LanguageOptions::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(LanguageOptions, _impl_.available_) +
          decltype(LanguageOptions::_impl_.available_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(LanguageOptions), alignof(LanguageOptions), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&LanguageOptions::PlacementNew_,
                                 sizeof(LanguageOptions),
                                 alignof(LanguageOptions));
  }
}
constexpr auto LanguageOptions::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LanguageOptions_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LanguageOptions::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LanguageOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LanguageOptions::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LanguageOptions>(), &LanguageOptions::ByteSizeLong,
              &LanguageOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LanguageOptions, _impl_._cached_size_),
          false,
      },
      &LanguageOptions::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LanguageOptions_class_data_ =
        LanguageOptions::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LanguageOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LanguageOptions_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LanguageOptions_class_data_.tc_table);
  return LanguageOptions_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
LanguageOptions::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    LanguageOptions_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::LanguageOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dnd5e.api.v1alpha1.Language available = 1 [json_name = "available"];
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LanguageOptions, _impl_.available_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dnd5e.api.v1alpha1.Language available = 1 [json_name = "available"];
    {PROTOBUF_FIELD_OFFSET(LanguageOptions, _impl_.available_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void LanguageOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.LanguageOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.available_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LanguageOptions::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LanguageOptions& this_ = static_cast<const LanguageOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LanguageOptions::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LanguageOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.LanguageOptions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dnd5e.api.v1alpha1.Language available = 1 [json_name = "available"];
  {
    ::size_t byte_size = this_._impl_._available_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          1, this_._internal_available(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.LanguageOptions)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LanguageOptions::ByteSizeLong(const MessageLite& base) {
  const LanguageOptions& this_ = static_cast<const LanguageOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LanguageOptions::ByteSizeLong() const {
  const LanguageOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.LanguageOptions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.Language available = 1 [json_name = "available"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_available(), 1, this_._impl_._available_cached_byte_size_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LanguageOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LanguageOptions*>(&to_msg);
  auto& from = static_cast<const LanguageOptions&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.LanguageOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_available()->MergeFrom(from._internal_available());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LanguageOptions::CopyFrom(const LanguageOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.LanguageOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LanguageOptions::InternalSwap(LanguageOptions* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.available_.InternalSwap(&other->_impl_.available_);
}

::google::protobuf::Metadata LanguageOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FightingStyleOptions::_Internal {
 public:
};

FightingStyleOptions::FightingStyleOptions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, FightingStyleOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.FightingStyleOptions)
}
PROTOBUF_NDEBUG_INLINE FightingStyleOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::FightingStyleOptions& from_msg)
      : available_{visibility, arena, from.available_},
        _available_cached_byte_size_{0},
        _cached_size_{0} {}

FightingStyleOptions::FightingStyleOptions(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const FightingStyleOptions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, FightingStyleOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FightingStyleOptions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.FightingStyleOptions)
}
PROTOBUF_NDEBUG_INLINE FightingStyleOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : available_{visibility, arena},
        _available_cached_byte_size_{0},
        _cached_size_{0} {}

inline void FightingStyleOptions::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
FightingStyleOptions::~FightingStyleOptions() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.FightingStyleOptions)
  SharedDtor(*this);
}
inline void FightingStyleOptions::SharedDtor(MessageLite& self) {
  FightingStyleOptions& this_ = static_cast<FightingStyleOptions&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL FightingStyleOptions::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) FightingStyleOptions(arena);
}
constexpr auto FightingStyleOptions::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(FightingStyleOptions, _impl_.available_) +
          decltype(FightingStyleOptions::_impl_.available_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(FightingStyleOptions), alignof(FightingStyleOptions), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&FightingStyleOptions::PlacementNew_,
                                 sizeof(FightingStyleOptions),
                                 alignof(FightingStyleOptions));
  }
}
constexpr auto FightingStyleOptions::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_FightingStyleOptions_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &FightingStyleOptions::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<FightingStyleOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &FightingStyleOptions::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<FightingStyleOptions>(), &FightingStyleOptions::ByteSizeLong,
              &FightingStyleOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(FightingStyleOptions, _impl_._cached_size_),
          false,
      },
      &FightingStyleOptions::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull FightingStyleOptions_class_data_ =
        FightingStyleOptions::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
FightingStyleOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&FightingStyleOptions_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(FightingStyleOptions_class_data_.tc_table);
  return FightingStyleOptions_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
FightingStyleOptions::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    FightingStyleOptions_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::FightingStyleOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dnd5e.api.v1alpha1.FightingStyle available = 1 [json_name = "available"];
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(FightingStyleOptions, _impl_.available_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dnd5e.api.v1alpha1.FightingStyle available = 1 [json_name = "available"];
    {PROTOBUF_FIELD_OFFSET(FightingStyleOptions, _impl_.available_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void FightingStyleOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.FightingStyleOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.available_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL FightingStyleOptions::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const FightingStyleOptions& this_ = static_cast<const FightingStyleOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL FightingStyleOptions::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const FightingStyleOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.FightingStyleOptions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dnd5e.api.v1alpha1.FightingStyle available = 1 [json_name = "available"];
  {
    ::size_t byte_size = this_._impl_._available_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          1, this_._internal_available(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.FightingStyleOptions)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t FightingStyleOptions::ByteSizeLong(const MessageLite& base) {
  const FightingStyleOptions& this_ = static_cast<const FightingStyleOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t FightingStyleOptions::ByteSizeLong() const {
  const FightingStyleOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.FightingStyleOptions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.FightingStyle available = 1 [json_name = "available"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_available(), 1, this_._impl_._available_cached_byte_size_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void FightingStyleOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FightingStyleOptions*>(&to_msg);
  auto& from = static_cast<const FightingStyleOptions&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.FightingStyleOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_available()->MergeFrom(from._internal_available());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FightingStyleOptions::CopyFrom(const FightingStyleOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.FightingStyleOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FightingStyleOptions::InternalSwap(FightingStyleOptions* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.available_.InternalSwap(&other->_impl_.available_);
}

::google::protobuf::Metadata FightingStyleOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ToolOptions::_Internal {
 public:
};

ToolOptions::ToolOptions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ToolOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.ToolOptions)
}
PROTOBUF_NDEBUG_INLINE ToolOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::ToolOptions& from_msg)
      : available_{visibility, arena, from.available_},
        _available_cached_byte_size_{0},
        _cached_size_{0} {}

ToolOptions::ToolOptions(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ToolOptions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ToolOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ToolOptions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.ToolOptions)
}
PROTOBUF_NDEBUG_INLINE ToolOptions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : available_{visibility, arena},
        _available_cached_byte_size_{0},
        _cached_size_{0} {}

inline void ToolOptions::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ToolOptions::~ToolOptions() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.ToolOptions)
  SharedDtor(*this);
}
inline void ToolOptions::SharedDtor(MessageLite& self) {
  ToolOptions& this_ = static_cast<ToolOptions&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ToolOptions::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ToolOptions(arena);
}
constexpr auto ToolOptions::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ToolOptions, _impl_.available_) +
          decltype(ToolOptions::_impl_.available_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ToolOptions), alignof(ToolOptions), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ToolOptions::PlacementNew_,
                                 sizeof(ToolOptions),
                                 alignof(ToolOptions));
  }
}
constexpr auto ToolOptions::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ToolOptions_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ToolOptions::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ToolOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ToolOptions::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ToolOptions>(), &ToolOptions::ByteSizeLong,
              &ToolOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ToolOptions, _impl_._cached_size_),
          false,
      },
      &ToolOptions::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ToolOptions_class_data_ =
        ToolOptions::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ToolOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ToolOptions_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ToolOptions_class_data_.tc_table);
  return ToolOptions_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
ToolOptions::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ToolOptions_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ToolOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dnd5e.api.v1alpha1.Tool available = 1 [json_name = "available"];
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ToolOptions, _impl_.available_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dnd5e.api.v1alpha1.Tool available = 1 [json_name = "available"];
    {PROTOBUF_FIELD_OFFSET(ToolOptions, _impl_.available_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void ToolOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.ToolOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.available_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ToolOptions::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ToolOptions& this_ = static_cast<const ToolOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ToolOptions::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ToolOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.ToolOptions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dnd5e.api.v1alpha1.Tool available = 1 [json_name = "available"];
  {
    ::size_t byte_size = this_._impl_._available_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          1, this_._internal_available(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.ToolOptions)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ToolOptions::ByteSizeLong(const MessageLite& base) {
  const ToolOptions& this_ = static_cast<const ToolOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ToolOptions::ByteSizeLong() const {
  const ToolOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.ToolOptions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.Tool available = 1 [json_name = "available"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_available(), 1, this_._impl_._available_cached_byte_size_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ToolOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ToolOptions*>(&to_msg);
  auto& from = static_cast<const ToolOptions&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.ToolOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_available()->MergeFrom(from._internal_available());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ToolOptions::CopyFrom(const ToolOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.ToolOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ToolOptions::InternalSwap(ToolOptions* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.available_.InternalSwap(&other->_impl_.available_);
}

::google::protobuf::Metadata ToolOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SpellDamage::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SpellDamage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SpellDamage, _impl_._has_bits_);
};

SpellDamage::SpellDamage(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SpellDamage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.SpellDamage)
}
PROTOBUF_NDEBUG_INLINE SpellDamage::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::SpellDamage& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        damage_at_slot_level_{visibility, arena, from.damage_at_slot_level_} {}

SpellDamage::SpellDamage(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SpellDamage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SpellDamage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SpellDamage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.damage_type_ = from._impl_.damage_type_;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.SpellDamage)
}
PROTOBUF_NDEBUG_INLINE SpellDamage::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        damage_at_slot_level_{visibility, arena} {}

inline void SpellDamage::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.damage_type_ = {};
}
SpellDamage::~SpellDamage() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.SpellDamage)
  SharedDtor(*this);
}
inline void SpellDamage::SharedDtor(MessageLite& self) {
  SpellDamage& this_ = static_cast<SpellDamage&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SpellDamage::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SpellDamage(arena);
}
constexpr auto SpellDamage::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SpellDamage, _impl_.damage_at_slot_level_) +
          decltype(SpellDamage::_impl_.damage_at_slot_level_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SpellDamage), alignof(SpellDamage), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SpellDamage::PlacementNew_,
                                 sizeof(SpellDamage),
                                 alignof(SpellDamage));
  }
}
constexpr auto SpellDamage::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SpellDamage_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SpellDamage::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SpellDamage>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SpellDamage::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SpellDamage>(), &SpellDamage::ByteSizeLong,
              &SpellDamage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SpellDamage, _impl_._cached_size_),
          false,
      },
      &SpellDamage::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SpellDamage_class_data_ =
        SpellDamage::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SpellDamage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SpellDamage_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SpellDamage_class_data_.tc_table);
  return SpellDamage_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
SpellDamage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SpellDamage, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SpellDamage_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::SpellDamage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dnd5e.api.v1alpha1.DamageAtSlotLevel damage_at_slot_level = 2 [json_name = "damageAtSlotLevel"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SpellDamage, _impl_.damage_at_slot_level_)}},
    // .dnd5e.api.v1alpha1.DamageType damage_type = 1 [json_name = "damageType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpellDamage, _impl_.damage_type_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SpellDamage, _impl_.damage_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.DamageType damage_type = 1 [json_name = "damageType"];
    {PROTOBUF_FIELD_OFFSET(SpellDamage, _impl_.damage_type_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // repeated .dnd5e.api.v1alpha1.DamageAtSlotLevel damage_at_slot_level = 2 [json_name = "damageAtSlotLevel"];
    {PROTOBUF_FIELD_OFFSET(SpellDamage, _impl_.damage_at_slot_level_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::DamageAtSlotLevel>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SpellDamage::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.SpellDamage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.damage_at_slot_level_.Clear();
  _impl_.damage_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SpellDamage::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SpellDamage& this_ = static_cast<const SpellDamage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SpellDamage::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SpellDamage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.SpellDamage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .dnd5e.api.v1alpha1.DamageType damage_type = 1 [json_name = "damageType"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_damage_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_damage_type(), target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.DamageAtSlotLevel damage_at_slot_level = 2 [json_name = "damageAtSlotLevel"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_damage_at_slot_level_size());
       i < n; i++) {
    const auto& repfield = this_._internal_damage_at_slot_level().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.SpellDamage)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SpellDamage::ByteSizeLong(const MessageLite& base) {
  const SpellDamage& this_ = static_cast<const SpellDamage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SpellDamage::ByteSizeLong() const {
  const SpellDamage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.SpellDamage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.DamageAtSlotLevel damage_at_slot_level = 2 [json_name = "damageAtSlotLevel"];
    {
      total_size += 1UL * this_._internal_damage_at_slot_level_size();
      for (const auto& msg : this_._internal_damage_at_slot_level()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // .dnd5e.api.v1alpha1.DamageType damage_type = 1 [json_name = "damageType"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_damage_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_damage_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SpellDamage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SpellDamage*>(&to_msg);
  auto& from = static_cast<const SpellDamage&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.SpellDamage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_damage_at_slot_level()->MergeFrom(
      from._internal_damage_at_slot_level());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (from._internal_damage_type() != 0) {
      _this->_impl_.damage_type_ = from._impl_.damage_type_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SpellDamage::CopyFrom(const SpellDamage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.SpellDamage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SpellDamage::InternalSwap(SpellDamage* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.damage_at_slot_level_.InternalSwap(&other->_impl_.damage_at_slot_level_);
  swap(_impl_.damage_type_, other->_impl_.damage_type_);
}

::google::protobuf::Metadata SpellDamage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DamageAtSlotLevel::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<DamageAtSlotLevel>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DamageAtSlotLevel, _impl_._has_bits_);
};

DamageAtSlotLevel::DamageAtSlotLevel(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DamageAtSlotLevel_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.DamageAtSlotLevel)
}
PROTOBUF_NDEBUG_INLINE DamageAtSlotLevel::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::DamageAtSlotLevel& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        damage_dice_(arena, from.damage_dice_) {}

DamageAtSlotLevel::DamageAtSlotLevel(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DamageAtSlotLevel& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DamageAtSlotLevel_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DamageAtSlotLevel* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.slot_level_ = from._impl_.slot_level_;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.DamageAtSlotLevel)
}
PROTOBUF_NDEBUG_INLINE DamageAtSlotLevel::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        damage_dice_(arena) {}

inline void DamageAtSlotLevel::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.slot_level_ = {};
}
DamageAtSlotLevel::~DamageAtSlotLevel() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.DamageAtSlotLevel)
  SharedDtor(*this);
}
inline void DamageAtSlotLevel::SharedDtor(MessageLite& self) {
  DamageAtSlotLevel& this_ = static_cast<DamageAtSlotLevel&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.damage_dice_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DamageAtSlotLevel::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DamageAtSlotLevel(arena);
}
constexpr auto DamageAtSlotLevel::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DamageAtSlotLevel),
                                            alignof(DamageAtSlotLevel));
}
constexpr auto DamageAtSlotLevel::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DamageAtSlotLevel_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DamageAtSlotLevel::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DamageAtSlotLevel>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DamageAtSlotLevel::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DamageAtSlotLevel>(), &DamageAtSlotLevel::ByteSizeLong,
              &DamageAtSlotLevel::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DamageAtSlotLevel, _impl_._cached_size_),
          false,
      },
      &DamageAtSlotLevel::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull DamageAtSlotLevel_class_data_ =
        DamageAtSlotLevel::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
DamageAtSlotLevel::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DamageAtSlotLevel_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DamageAtSlotLevel_class_data_.tc_table);
  return DamageAtSlotLevel_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 56, 2>
DamageAtSlotLevel::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DamageAtSlotLevel, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    DamageAtSlotLevel_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::DamageAtSlotLevel>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string damage_dice = 2 [json_name = "damageDice"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(DamageAtSlotLevel, _impl_.damage_dice_)}},
    // int32 slot_level = 1 [json_name = "slotLevel"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DamageAtSlotLevel, _impl_.slot_level_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(DamageAtSlotLevel, _impl_.slot_level_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 slot_level = 1 [json_name = "slotLevel"];
    {PROTOBUF_FIELD_OFFSET(DamageAtSlotLevel, _impl_.slot_level_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string damage_dice = 2 [json_name = "damageDice"];
    {PROTOBUF_FIELD_OFFSET(DamageAtSlotLevel, _impl_.damage_dice_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\0\13\0\0\0\0\0"
    "dnd5e.api.v1alpha1.DamageAtSlotLevel"
    "damage_dice"
  }},
};
PROTOBUF_NOINLINE void DamageAtSlotLevel::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.DamageAtSlotLevel)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.damage_dice_.ClearNonDefaultToEmpty();
  }
  _impl_.slot_level_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DamageAtSlotLevel::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DamageAtSlotLevel& this_ = static_cast<const DamageAtSlotLevel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DamageAtSlotLevel::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DamageAtSlotLevel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.DamageAtSlotLevel)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 slot_level = 1 [json_name = "slotLevel"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_slot_level() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_slot_level(), target);
    }
  }

  // string damage_dice = 2 [json_name = "damageDice"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_damage_dice().empty()) {
      const ::std::string& _s = this_._internal_damage_dice();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.DamageAtSlotLevel.damage_dice");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.DamageAtSlotLevel)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DamageAtSlotLevel::ByteSizeLong(const MessageLite& base) {
  const DamageAtSlotLevel& this_ = static_cast<const DamageAtSlotLevel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DamageAtSlotLevel::ByteSizeLong() const {
  const DamageAtSlotLevel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.DamageAtSlotLevel)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string damage_dice = 2 [json_name = "damageDice"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_damage_dice().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_damage_dice());
      }
    }
    // int32 slot_level = 1 [json_name = "slotLevel"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_slot_level() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_slot_level());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DamageAtSlotLevel::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DamageAtSlotLevel*>(&to_msg);
  auto& from = static_cast<const DamageAtSlotLevel&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.DamageAtSlotLevel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_damage_dice().empty()) {
        _this->_internal_set_damage_dice(from._internal_damage_dice());
      } else {
        if (_this->_impl_.damage_dice_.IsDefault()) {
          _this->_internal_set_damage_dice("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_slot_level() != 0) {
        _this->_impl_.slot_level_ = from._impl_.slot_level_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DamageAtSlotLevel::CopyFrom(const DamageAtSlotLevel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.DamageAtSlotLevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DamageAtSlotLevel::InternalSwap(DamageAtSlotLevel* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.damage_dice_, &other->_impl_.damage_dice_, arena);
  swap(_impl_.slot_level_, other->_impl_.slot_level_);
}

::google::protobuf::Metadata DamageAtSlotLevel::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AreaOfEffect::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<AreaOfEffect>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AreaOfEffect, _impl_._has_bits_);
};

AreaOfEffect::AreaOfEffect(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AreaOfEffect_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.AreaOfEffect)
}
PROTOBUF_NDEBUG_INLINE AreaOfEffect::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::AreaOfEffect& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        type_(arena, from.type_) {}

AreaOfEffect::AreaOfEffect(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const AreaOfEffect& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AreaOfEffect_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AreaOfEffect* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.size_ = from._impl_.size_;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.AreaOfEffect)
}
PROTOBUF_NDEBUG_INLINE AreaOfEffect::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        type_(arena) {}

inline void AreaOfEffect::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.size_ = {};
}
AreaOfEffect::~AreaOfEffect() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.AreaOfEffect)
  SharedDtor(*this);
}
inline void AreaOfEffect::SharedDtor(MessageLite& self) {
  AreaOfEffect& this_ = static_cast<AreaOfEffect&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.type_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL AreaOfEffect::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AreaOfEffect(arena);
}
constexpr auto AreaOfEffect::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AreaOfEffect),
                                            alignof(AreaOfEffect));
}
constexpr auto AreaOfEffect::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AreaOfEffect_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AreaOfEffect::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AreaOfEffect>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AreaOfEffect::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AreaOfEffect>(), &AreaOfEffect::ByteSizeLong,
              &AreaOfEffect::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AreaOfEffect, _impl_._cached_size_),
          false,
      },
      &AreaOfEffect::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull AreaOfEffect_class_data_ =
        AreaOfEffect::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
AreaOfEffect::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AreaOfEffect_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AreaOfEffect_class_data_.tc_table);
  return AreaOfEffect_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 44, 2>
AreaOfEffect::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AreaOfEffect, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    AreaOfEffect_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::AreaOfEffect>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 size = 2 [json_name = "size"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AreaOfEffect, _impl_.size_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(AreaOfEffect, _impl_.size_)}},
    // string type = 1 [json_name = "type"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AreaOfEffect, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string type = 1 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(AreaOfEffect, _impl_.type_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 size = 2 [json_name = "size"];
    {PROTOBUF_FIELD_OFFSET(AreaOfEffect, _impl_.size_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\37\4\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.AreaOfEffect"
    "type"
  }},
};
PROTOBUF_NOINLINE void AreaOfEffect::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.AreaOfEffect)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.type_.ClearNonDefaultToEmpty();
  }
  _impl_.size_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL AreaOfEffect::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const AreaOfEffect& this_ = static_cast<const AreaOfEffect&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL AreaOfEffect::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const AreaOfEffect& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.AreaOfEffect)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string type = 1 [json_name = "type"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_type().empty()) {
      const ::std::string& _s = this_._internal_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.AreaOfEffect.type");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // int32 size = 2 [json_name = "size"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_size() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_size(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.AreaOfEffect)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AreaOfEffect::ByteSizeLong(const MessageLite& base) {
  const AreaOfEffect& this_ = static_cast<const AreaOfEffect&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AreaOfEffect::ByteSizeLong() const {
  const AreaOfEffect& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.AreaOfEffect)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string type = 1 [json_name = "type"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_type());
      }
    }
    // int32 size = 2 [json_name = "size"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_size() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_size());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void AreaOfEffect::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AreaOfEffect*>(&to_msg);
  auto& from = static_cast<const AreaOfEffect&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.AreaOfEffect)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_type().empty()) {
        _this->_internal_set_type(from._internal_type());
      } else {
        if (_this->_impl_.type_.IsDefault()) {
          _this->_internal_set_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_size() != 0) {
        _this->_impl_.size_ = from._impl_.size_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AreaOfEffect::CopyFrom(const AreaOfEffect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.AreaOfEffect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AreaOfEffect::InternalSwap(AreaOfEffect* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  swap(_impl_.size_, other->_impl_.size_);
}

::google::protobuf::Metadata AreaOfEffect::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListEquipmentByTypeRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ListEquipmentByTypeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ListEquipmentByTypeRequest, _impl_._has_bits_);
};

ListEquipmentByTypeRequest::ListEquipmentByTypeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListEquipmentByTypeRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.ListEquipmentByTypeRequest)
}
PROTOBUF_NDEBUG_INLINE ListEquipmentByTypeRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        page_token_(arena, from.page_token_) {}

ListEquipmentByTypeRequest::ListEquipmentByTypeRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ListEquipmentByTypeRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListEquipmentByTypeRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListEquipmentByTypeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, equipment_type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, equipment_type_),
           offsetof(Impl_, page_size_) -
               offsetof(Impl_, equipment_type_) +
               sizeof(Impl_::page_size_));

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.ListEquipmentByTypeRequest)
}
PROTOBUF_NDEBUG_INLINE ListEquipmentByTypeRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        page_token_(arena) {}

inline void ListEquipmentByTypeRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, equipment_type_),
           0,
           offsetof(Impl_, page_size_) -
               offsetof(Impl_, equipment_type_) +
               sizeof(Impl_::page_size_));
}
ListEquipmentByTypeRequest::~ListEquipmentByTypeRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.ListEquipmentByTypeRequest)
  SharedDtor(*this);
}
inline void ListEquipmentByTypeRequest::SharedDtor(MessageLite& self) {
  ListEquipmentByTypeRequest& this_ = static_cast<ListEquipmentByTypeRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.page_token_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ListEquipmentByTypeRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ListEquipmentByTypeRequest(arena);
}
constexpr auto ListEquipmentByTypeRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ListEquipmentByTypeRequest),
                                            alignof(ListEquipmentByTypeRequest));
}
constexpr auto ListEquipmentByTypeRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ListEquipmentByTypeRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ListEquipmentByTypeRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ListEquipmentByTypeRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ListEquipmentByTypeRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ListEquipmentByTypeRequest>(), &ListEquipmentByTypeRequest::ByteSizeLong,
              &ListEquipmentByTypeRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ListEquipmentByTypeRequest, _impl_._cached_size_),
          false,
      },
      &ListEquipmentByTypeRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ListEquipmentByTypeRequest_class_data_ =
        ListEquipmentByTypeRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ListEquipmentByTypeRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ListEquipmentByTypeRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ListEquipmentByTypeRequest_class_data_.tc_table);
  return ListEquipmentByTypeRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 64, 2>
ListEquipmentByTypeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ListEquipmentByTypeRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ListEquipmentByTypeRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ListEquipmentByTypeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .dnd5e.api.v1alpha1.EquipmentType equipment_type = 1 [json_name = "equipmentType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListEquipmentByTypeRequest, _impl_.equipment_type_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(ListEquipmentByTypeRequest, _impl_.equipment_type_)}},
    // int32 page_size = 2 [json_name = "pageSize"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListEquipmentByTypeRequest, _impl_.page_size_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(ListEquipmentByTypeRequest, _impl_.page_size_)}},
    // string page_token = 3 [json_name = "pageToken"];
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(ListEquipmentByTypeRequest, _impl_.page_token_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.EquipmentType equipment_type = 1 [json_name = "equipmentType"];
    {PROTOBUF_FIELD_OFFSET(ListEquipmentByTypeRequest, _impl_.equipment_type_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // int32 page_size = 2 [json_name = "pageSize"];
    {PROTOBUF_FIELD_OFFSET(ListEquipmentByTypeRequest, _impl_.page_size_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string page_token = 3 [json_name = "pageToken"];
    {PROTOBUF_FIELD_OFFSET(ListEquipmentByTypeRequest, _impl_.page_token_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\55\0\0\12\0\0\0\0"
    "dnd5e.api.v1alpha1.ListEquipmentByTypeRequest"
    "page_token"
  }},
};
PROTOBUF_NOINLINE void ListEquipmentByTypeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.ListEquipmentByTypeRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.page_token_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x00000006U) != 0) {
    ::memset(&_impl_.equipment_type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.page_size_) -
        reinterpret_cast<char*>(&_impl_.equipment_type_)) + sizeof(_impl_.page_size_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ListEquipmentByTypeRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ListEquipmentByTypeRequest& this_ = static_cast<const ListEquipmentByTypeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ListEquipmentByTypeRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ListEquipmentByTypeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.ListEquipmentByTypeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .dnd5e.api.v1alpha1.EquipmentType equipment_type = 1 [json_name = "equipmentType"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_equipment_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_equipment_type(), target);
    }
  }

  // int32 page_size = 2 [json_name = "pageSize"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_page_size() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_page_size(), target);
    }
  }

  // string page_token = 3 [json_name = "pageToken"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_page_token().empty()) {
      const ::std::string& _s = this_._internal_page_token();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.ListEquipmentByTypeRequest.page_token");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.ListEquipmentByTypeRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ListEquipmentByTypeRequest::ByteSizeLong(const MessageLite& base) {
  const ListEquipmentByTypeRequest& this_ = static_cast<const ListEquipmentByTypeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ListEquipmentByTypeRequest::ByteSizeLong() const {
  const ListEquipmentByTypeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.ListEquipmentByTypeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string page_token = 3 [json_name = "pageToken"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_page_token().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_page_token());
      }
    }
    // .dnd5e.api.v1alpha1.EquipmentType equipment_type = 1 [json_name = "equipmentType"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_equipment_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_equipment_type());
      }
    }
    // int32 page_size = 2 [json_name = "pageSize"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_page_size() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_page_size());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ListEquipmentByTypeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListEquipmentByTypeRequest*>(&to_msg);
  auto& from = static_cast<const ListEquipmentByTypeRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.ListEquipmentByTypeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_page_token().empty()) {
        _this->_internal_set_page_token(from._internal_page_token());
      } else {
        if (_this->_impl_.page_token_.IsDefault()) {
          _this->_internal_set_page_token("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_equipment_type() != 0) {
        _this->_impl_.equipment_type_ = from._impl_.equipment_type_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_page_size() != 0) {
        _this->_impl_.page_size_ = from._impl_.page_size_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListEquipmentByTypeRequest::CopyFrom(const ListEquipmentByTypeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.ListEquipmentByTypeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListEquipmentByTypeRequest::InternalSwap(ListEquipmentByTypeRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.page_token_, &other->_impl_.page_token_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListEquipmentByTypeRequest, _impl_.page_size_)
      + sizeof(ListEquipmentByTypeRequest::_impl_.page_size_)
      - PROTOBUF_FIELD_OFFSET(ListEquipmentByTypeRequest, _impl_.equipment_type_)>(
          reinterpret_cast<char*>(&_impl_.equipment_type_),
          reinterpret_cast<char*>(&other->_impl_.equipment_type_));
}

::google::protobuf::Metadata ListEquipmentByTypeRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListEquipmentByTypeResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ListEquipmentByTypeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ListEquipmentByTypeResponse, _impl_._has_bits_);
};

ListEquipmentByTypeResponse::ListEquipmentByTypeResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListEquipmentByTypeResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.ListEquipmentByTypeResponse)
}
PROTOBUF_NDEBUG_INLINE ListEquipmentByTypeResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        equipment_{visibility, arena, from.equipment_},
        next_page_token_(arena, from.next_page_token_) {}

ListEquipmentByTypeResponse::ListEquipmentByTypeResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ListEquipmentByTypeResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListEquipmentByTypeResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListEquipmentByTypeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.total_size_ = from._impl_.total_size_;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.ListEquipmentByTypeResponse)
}
PROTOBUF_NDEBUG_INLINE ListEquipmentByTypeResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        equipment_{visibility, arena},
        next_page_token_(arena) {}

inline void ListEquipmentByTypeResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.total_size_ = {};
}
ListEquipmentByTypeResponse::~ListEquipmentByTypeResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.ListEquipmentByTypeResponse)
  SharedDtor(*this);
}
inline void ListEquipmentByTypeResponse::SharedDtor(MessageLite& self) {
  ListEquipmentByTypeResponse& this_ = static_cast<ListEquipmentByTypeResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.next_page_token_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ListEquipmentByTypeResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ListEquipmentByTypeResponse(arena);
}
constexpr auto ListEquipmentByTypeResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ListEquipmentByTypeResponse, _impl_.equipment_) +
          decltype(ListEquipmentByTypeResponse::_impl_.equipment_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ListEquipmentByTypeResponse), alignof(ListEquipmentByTypeResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ListEquipmentByTypeResponse::PlacementNew_,
                                 sizeof(ListEquipmentByTypeResponse),
                                 alignof(ListEquipmentByTypeResponse));
  }
}
constexpr auto ListEquipmentByTypeResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ListEquipmentByTypeResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ListEquipmentByTypeResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ListEquipmentByTypeResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ListEquipmentByTypeResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ListEquipmentByTypeResponse>(), &ListEquipmentByTypeResponse::ByteSizeLong,
              &ListEquipmentByTypeResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ListEquipmentByTypeResponse, _impl_._cached_size_),
          false,
      },
      &ListEquipmentByTypeResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ListEquipmentByTypeResponse_class_data_ =
        ListEquipmentByTypeResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ListEquipmentByTypeResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ListEquipmentByTypeResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ListEquipmentByTypeResponse_class_data_.tc_table);
  return ListEquipmentByTypeResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 70, 2>
ListEquipmentByTypeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ListEquipmentByTypeResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ListEquipmentByTypeResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ListEquipmentByTypeResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .dnd5e.api.v1alpha1.Equipment equipment = 1 [json_name = "equipment"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListEquipmentByTypeResponse, _impl_.equipment_)}},
    // string next_page_token = 2 [json_name = "nextPageToken"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ListEquipmentByTypeResponse, _impl_.next_page_token_)}},
    // int32 total_size = 3 [json_name = "totalSize"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListEquipmentByTypeResponse, _impl_.total_size_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(ListEquipmentByTypeResponse, _impl_.total_size_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dnd5e.api.v1alpha1.Equipment equipment = 1 [json_name = "equipment"];
    {PROTOBUF_FIELD_OFFSET(ListEquipmentByTypeResponse, _impl_.equipment_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string next_page_token = 2 [json_name = "nextPageToken"];
    {PROTOBUF_FIELD_OFFSET(ListEquipmentByTypeResponse, _impl_.next_page_token_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 total_size = 3 [json_name = "totalSize"];
    {PROTOBUF_FIELD_OFFSET(ListEquipmentByTypeResponse, _impl_.total_size_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::Equipment>()},
  }},
  {{
    "\56\0\17\0\0\0\0\0"
    "dnd5e.api.v1alpha1.ListEquipmentByTypeResponse"
    "next_page_token"
  }},
};
PROTOBUF_NOINLINE void ListEquipmentByTypeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.ListEquipmentByTypeResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.equipment_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.next_page_token_.ClearNonDefaultToEmpty();
  }
  _impl_.total_size_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ListEquipmentByTypeResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ListEquipmentByTypeResponse& this_ = static_cast<const ListEquipmentByTypeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ListEquipmentByTypeResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ListEquipmentByTypeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.ListEquipmentByTypeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dnd5e.api.v1alpha1.Equipment equipment = 1 [json_name = "equipment"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_equipment_size());
       i < n; i++) {
    const auto& repfield = this_._internal_equipment().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // string next_page_token = 2 [json_name = "nextPageToken"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_next_page_token().empty()) {
      const ::std::string& _s = this_._internal_next_page_token();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.ListEquipmentByTypeResponse.next_page_token");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int32 total_size = 3 [json_name = "totalSize"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_total_size() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_total_size(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.ListEquipmentByTypeResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ListEquipmentByTypeResponse::ByteSizeLong(const MessageLite& base) {
  const ListEquipmentByTypeResponse& this_ = static_cast<const ListEquipmentByTypeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ListEquipmentByTypeResponse::ByteSizeLong() const {
  const ListEquipmentByTypeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.ListEquipmentByTypeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.Equipment equipment = 1 [json_name = "equipment"];
    {
      total_size += 1UL * this_._internal_equipment_size();
      for (const auto& msg : this_._internal_equipment()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string next_page_token = 2 [json_name = "nextPageToken"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_next_page_token().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_next_page_token());
      }
    }
    // int32 total_size = 3 [json_name = "totalSize"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_total_size() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_total_size());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ListEquipmentByTypeResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListEquipmentByTypeResponse*>(&to_msg);
  auto& from = static_cast<const ListEquipmentByTypeResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.ListEquipmentByTypeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_equipment()->MergeFrom(
      from._internal_equipment());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_next_page_token().empty()) {
        _this->_internal_set_next_page_token(from._internal_next_page_token());
      } else {
        if (_this->_impl_.next_page_token_.IsDefault()) {
          _this->_internal_set_next_page_token("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_total_size() != 0) {
        _this->_impl_.total_size_ = from._impl_.total_size_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListEquipmentByTypeResponse::CopyFrom(const ListEquipmentByTypeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.ListEquipmentByTypeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListEquipmentByTypeResponse::InternalSwap(ListEquipmentByTypeResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.equipment_.InternalSwap(&other->_impl_.equipment_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.next_page_token_, &other->_impl_.next_page_token_, arena);
  swap(_impl_.total_size_, other->_impl_.total_size_);
}

::google::protobuf::Metadata ListEquipmentByTypeResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListSpellsByLevelRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ListSpellsByLevelRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ListSpellsByLevelRequest, _impl_._has_bits_);
};

ListSpellsByLevelRequest::ListSpellsByLevelRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListSpellsByLevelRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.ListSpellsByLevelRequest)
}
PROTOBUF_NDEBUG_INLINE ListSpellsByLevelRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::ListSpellsByLevelRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        page_token_(arena, from.page_token_) {}

ListSpellsByLevelRequest::ListSpellsByLevelRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ListSpellsByLevelRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListSpellsByLevelRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListSpellsByLevelRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, level_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, level_),
           offsetof(Impl_, page_size_) -
               offsetof(Impl_, level_) +
               sizeof(Impl_::page_size_));

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.ListSpellsByLevelRequest)
}
PROTOBUF_NDEBUG_INLINE ListSpellsByLevelRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        page_token_(arena) {}

inline void ListSpellsByLevelRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, level_),
           0,
           offsetof(Impl_, page_size_) -
               offsetof(Impl_, level_) +
               sizeof(Impl_::page_size_));
}
ListSpellsByLevelRequest::~ListSpellsByLevelRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.ListSpellsByLevelRequest)
  SharedDtor(*this);
}
inline void ListSpellsByLevelRequest::SharedDtor(MessageLite& self) {
  ListSpellsByLevelRequest& this_ = static_cast<ListSpellsByLevelRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.page_token_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ListSpellsByLevelRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ListSpellsByLevelRequest(arena);
}
constexpr auto ListSpellsByLevelRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ListSpellsByLevelRequest),
                                            alignof(ListSpellsByLevelRequest));
}
constexpr auto ListSpellsByLevelRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ListSpellsByLevelRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ListSpellsByLevelRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ListSpellsByLevelRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ListSpellsByLevelRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ListSpellsByLevelRequest>(), &ListSpellsByLevelRequest::ByteSizeLong,
              &ListSpellsByLevelRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ListSpellsByLevelRequest, _impl_._cached_size_),
          false,
      },
      &ListSpellsByLevelRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ListSpellsByLevelRequest_class_data_ =
        ListSpellsByLevelRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ListSpellsByLevelRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ListSpellsByLevelRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ListSpellsByLevelRequest_class_data_.tc_table);
  return ListSpellsByLevelRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 62, 2>
ListSpellsByLevelRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ListSpellsByLevelRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ListSpellsByLevelRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ListSpellsByLevelRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string page_token = 4 [json_name = "pageToken"];
    {::_pbi::TcParser::FastUS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(ListSpellsByLevelRequest, _impl_.page_token_)}},
    // int32 level = 1 [json_name = "level"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListSpellsByLevelRequest, _impl_.level_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(ListSpellsByLevelRequest, _impl_.level_)}},
    // .dnd5e.api.v1alpha1.Class class = 2 [json_name = "class"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListSpellsByLevelRequest, _impl_.class__), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(ListSpellsByLevelRequest, _impl_.class__)}},
    // int32 page_size = 3 [json_name = "pageSize"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListSpellsByLevelRequest, _impl_.page_size_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(ListSpellsByLevelRequest, _impl_.page_size_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 level = 1 [json_name = "level"];
    {PROTOBUF_FIELD_OFFSET(ListSpellsByLevelRequest, _impl_.level_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .dnd5e.api.v1alpha1.Class class = 2 [json_name = "class"];
    {PROTOBUF_FIELD_OFFSET(ListSpellsByLevelRequest, _impl_.class__), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // int32 page_size = 3 [json_name = "pageSize"];
    {PROTOBUF_FIELD_OFFSET(ListSpellsByLevelRequest, _impl_.page_size_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string page_token = 4 [json_name = "pageToken"];
    {PROTOBUF_FIELD_OFFSET(ListSpellsByLevelRequest, _impl_.page_token_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\53\0\0\0\12\0\0\0"
    "dnd5e.api.v1alpha1.ListSpellsByLevelRequest"
    "page_token"
  }},
};
PROTOBUF_NOINLINE void ListSpellsByLevelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.ListSpellsByLevelRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.page_token_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x0000000eU) != 0) {
    ::memset(&_impl_.level_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.page_size_) -
        reinterpret_cast<char*>(&_impl_.level_)) + sizeof(_impl_.page_size_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ListSpellsByLevelRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ListSpellsByLevelRequest& this_ = static_cast<const ListSpellsByLevelRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ListSpellsByLevelRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ListSpellsByLevelRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.ListSpellsByLevelRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 level = 1 [json_name = "level"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_level() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_level(), target);
    }
  }

  // .dnd5e.api.v1alpha1.Class class = 2 [json_name = "class"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_class_() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_class_(), target);
    }
  }

  // int32 page_size = 3 [json_name = "pageSize"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_page_size() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_page_size(), target);
    }
  }

  // string page_token = 4 [json_name = "pageToken"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_page_token().empty()) {
      const ::std::string& _s = this_._internal_page_token();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.ListSpellsByLevelRequest.page_token");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.ListSpellsByLevelRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ListSpellsByLevelRequest::ByteSizeLong(const MessageLite& base) {
  const ListSpellsByLevelRequest& this_ = static_cast<const ListSpellsByLevelRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ListSpellsByLevelRequest::ByteSizeLong() const {
  const ListSpellsByLevelRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.ListSpellsByLevelRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string page_token = 4 [json_name = "pageToken"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_page_token().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_page_token());
      }
    }
    // int32 level = 1 [json_name = "level"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_level() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_level());
      }
    }
    // .dnd5e.api.v1alpha1.Class class = 2 [json_name = "class"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_class_() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_class_());
      }
    }
    // int32 page_size = 3 [json_name = "pageSize"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_page_size() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_page_size());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ListSpellsByLevelRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListSpellsByLevelRequest*>(&to_msg);
  auto& from = static_cast<const ListSpellsByLevelRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.ListSpellsByLevelRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_page_token().empty()) {
        _this->_internal_set_page_token(from._internal_page_token());
      } else {
        if (_this->_impl_.page_token_.IsDefault()) {
          _this->_internal_set_page_token("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_level() != 0) {
        _this->_impl_.level_ = from._impl_.level_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_class_() != 0) {
        _this->_impl_.class__ = from._impl_.class__;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_page_size() != 0) {
        _this->_impl_.page_size_ = from._impl_.page_size_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListSpellsByLevelRequest::CopyFrom(const ListSpellsByLevelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.ListSpellsByLevelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListSpellsByLevelRequest::InternalSwap(ListSpellsByLevelRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.page_token_, &other->_impl_.page_token_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListSpellsByLevelRequest, _impl_.page_size_)
      + sizeof(ListSpellsByLevelRequest::_impl_.page_size_)
      - PROTOBUF_FIELD_OFFSET(ListSpellsByLevelRequest, _impl_.level_)>(
          reinterpret_cast<char*>(&_impl_.level_),
          reinterpret_cast<char*>(&other->_impl_.level_));
}

::google::protobuf::Metadata ListSpellsByLevelRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListSpellsByLevelResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ListSpellsByLevelResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ListSpellsByLevelResponse, _impl_._has_bits_);
};

ListSpellsByLevelResponse::ListSpellsByLevelResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListSpellsByLevelResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.ListSpellsByLevelResponse)
}
PROTOBUF_NDEBUG_INLINE ListSpellsByLevelResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::ListSpellsByLevelResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        spells_{visibility, arena, from.spells_},
        _spells_cached_byte_size_{0},
        next_page_token_(arena, from.next_page_token_) {}

ListSpellsByLevelResponse::ListSpellsByLevelResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ListSpellsByLevelResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListSpellsByLevelResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListSpellsByLevelResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.total_size_ = from._impl_.total_size_;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.ListSpellsByLevelResponse)
}
PROTOBUF_NDEBUG_INLINE ListSpellsByLevelResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        spells_{visibility, arena},
        _spells_cached_byte_size_{0},
        next_page_token_(arena) {}

inline void ListSpellsByLevelResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.total_size_ = {};
}
ListSpellsByLevelResponse::~ListSpellsByLevelResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.ListSpellsByLevelResponse)
  SharedDtor(*this);
}
inline void ListSpellsByLevelResponse::SharedDtor(MessageLite& self) {
  ListSpellsByLevelResponse& this_ = static_cast<ListSpellsByLevelResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.next_page_token_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ListSpellsByLevelResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ListSpellsByLevelResponse(arena);
}
constexpr auto ListSpellsByLevelResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ListSpellsByLevelResponse, _impl_.spells_) +
          decltype(ListSpellsByLevelResponse::_impl_.spells_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ListSpellsByLevelResponse), alignof(ListSpellsByLevelResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ListSpellsByLevelResponse::PlacementNew_,
                                 sizeof(ListSpellsByLevelResponse),
                                 alignof(ListSpellsByLevelResponse));
  }
}
constexpr auto ListSpellsByLevelResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ListSpellsByLevelResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ListSpellsByLevelResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ListSpellsByLevelResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ListSpellsByLevelResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ListSpellsByLevelResponse>(), &ListSpellsByLevelResponse::ByteSizeLong,
              &ListSpellsByLevelResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ListSpellsByLevelResponse, _impl_._cached_size_),
          false,
      },
      &ListSpellsByLevelResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ListSpellsByLevelResponse_class_data_ =
        ListSpellsByLevelResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ListSpellsByLevelResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ListSpellsByLevelResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ListSpellsByLevelResponse_class_data_.tc_table);
  return ListSpellsByLevelResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 68, 2>
ListSpellsByLevelResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ListSpellsByLevelResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ListSpellsByLevelResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::ListSpellsByLevelResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .dnd5e.api.v1alpha1.Spell spells = 1 [json_name = "spells"];
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListSpellsByLevelResponse, _impl_.spells_)}},
    // string next_page_token = 2 [json_name = "nextPageToken"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ListSpellsByLevelResponse, _impl_.next_page_token_)}},
    // int32 total_size = 3 [json_name = "totalSize"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListSpellsByLevelResponse, _impl_.total_size_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(ListSpellsByLevelResponse, _impl_.total_size_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dnd5e.api.v1alpha1.Spell spells = 1 [json_name = "spells"];
    {PROTOBUF_FIELD_OFFSET(ListSpellsByLevelResponse, _impl_.spells_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // string next_page_token = 2 [json_name = "nextPageToken"];
    {PROTOBUF_FIELD_OFFSET(ListSpellsByLevelResponse, _impl_.next_page_token_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 total_size = 3 [json_name = "totalSize"];
    {PROTOBUF_FIELD_OFFSET(ListSpellsByLevelResponse, _impl_.total_size_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\54\0\17\0\0\0\0\0"
    "dnd5e.api.v1alpha1.ListSpellsByLevelResponse"
    "next_page_token"
  }},
};
PROTOBUF_NOINLINE void ListSpellsByLevelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.ListSpellsByLevelResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.spells_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.next_page_token_.ClearNonDefaultToEmpty();
  }
  _impl_.total_size_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ListSpellsByLevelResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ListSpellsByLevelResponse& this_ = static_cast<const ListSpellsByLevelResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ListSpellsByLevelResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ListSpellsByLevelResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.ListSpellsByLevelResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dnd5e.api.v1alpha1.Spell spells = 1 [json_name = "spells"];
  {
    ::size_t byte_size = this_._impl_._spells_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          1, this_._internal_spells(), byte_size, target);
    }
  }

  // string next_page_token = 2 [json_name = "nextPageToken"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_next_page_token().empty()) {
      const ::std::string& _s = this_._internal_next_page_token();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.ListSpellsByLevelResponse.next_page_token");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int32 total_size = 3 [json_name = "totalSize"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_total_size() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_total_size(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.ListSpellsByLevelResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ListSpellsByLevelResponse::ByteSizeLong(const MessageLite& base) {
  const ListSpellsByLevelResponse& this_ = static_cast<const ListSpellsByLevelResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ListSpellsByLevelResponse::ByteSizeLong() const {
  const ListSpellsByLevelResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.ListSpellsByLevelResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.Spell spells = 1 [json_name = "spells"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_spells(), 1, this_._impl_._spells_cached_byte_size_);
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string next_page_token = 2 [json_name = "nextPageToken"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_next_page_token().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_next_page_token());
      }
    }
    // int32 total_size = 3 [json_name = "totalSize"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_total_size() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_total_size());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ListSpellsByLevelResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListSpellsByLevelResponse*>(&to_msg);
  auto& from = static_cast<const ListSpellsByLevelResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.ListSpellsByLevelResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_spells()->MergeFrom(from._internal_spells());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_next_page_token().empty()) {
        _this->_internal_set_next_page_token(from._internal_next_page_token());
      } else {
        if (_this->_impl_.next_page_token_.IsDefault()) {
          _this->_internal_set_next_page_token("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_total_size() != 0) {
        _this->_impl_.total_size_ = from._impl_.total_size_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListSpellsByLevelResponse::CopyFrom(const ListSpellsByLevelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.ListSpellsByLevelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListSpellsByLevelResponse::InternalSwap(ListSpellsByLevelResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.spells_.InternalSwap(&other->_impl_.spells_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.next_page_token_, &other->_impl_.next_page_token_, arena);
  swap(_impl_.total_size_, other->_impl_.total_size_);
}

::google::protobuf::Metadata ListSpellsByLevelResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetCharacterInventoryRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetCharacterInventoryRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetCharacterInventoryRequest, _impl_._has_bits_);
};

GetCharacterInventoryRequest::GetCharacterInventoryRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetCharacterInventoryRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.GetCharacterInventoryRequest)
}
PROTOBUF_NDEBUG_INLINE GetCharacterInventoryRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::GetCharacterInventoryRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        character_id_(arena, from.character_id_) {}

GetCharacterInventoryRequest::GetCharacterInventoryRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetCharacterInventoryRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetCharacterInventoryRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetCharacterInventoryRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.GetCharacterInventoryRequest)
}
PROTOBUF_NDEBUG_INLINE GetCharacterInventoryRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        character_id_(arena) {}

inline void GetCharacterInventoryRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetCharacterInventoryRequest::~GetCharacterInventoryRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.GetCharacterInventoryRequest)
  SharedDtor(*this);
}
inline void GetCharacterInventoryRequest::SharedDtor(MessageLite& self) {
  GetCharacterInventoryRequest& this_ = static_cast<GetCharacterInventoryRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.character_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetCharacterInventoryRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetCharacterInventoryRequest(arena);
}
constexpr auto GetCharacterInventoryRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetCharacterInventoryRequest),
                                            alignof(GetCharacterInventoryRequest));
}
constexpr auto GetCharacterInventoryRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetCharacterInventoryRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetCharacterInventoryRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetCharacterInventoryRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetCharacterInventoryRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetCharacterInventoryRequest>(), &GetCharacterInventoryRequest::ByteSizeLong,
              &GetCharacterInventoryRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetCharacterInventoryRequest, _impl_._cached_size_),
          false,
      },
      &GetCharacterInventoryRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetCharacterInventoryRequest_class_data_ =
        GetCharacterInventoryRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetCharacterInventoryRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetCharacterInventoryRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetCharacterInventoryRequest_class_data_.tc_table);
  return GetCharacterInventoryRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 68, 2>
GetCharacterInventoryRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetCharacterInventoryRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetCharacterInventoryRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::GetCharacterInventoryRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string character_id = 1 [json_name = "characterId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetCharacterInventoryRequest, _impl_.character_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string character_id = 1 [json_name = "characterId"];
    {PROTOBUF_FIELD_OFFSET(GetCharacterInventoryRequest, _impl_.character_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\57\14\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.GetCharacterInventoryRequest"
    "character_id"
  }},
};
PROTOBUF_NOINLINE void GetCharacterInventoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.GetCharacterInventoryRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.character_id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetCharacterInventoryRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetCharacterInventoryRequest& this_ = static_cast<const GetCharacterInventoryRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetCharacterInventoryRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetCharacterInventoryRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.GetCharacterInventoryRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string character_id = 1 [json_name = "characterId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_character_id().empty()) {
      const ::std::string& _s = this_._internal_character_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.GetCharacterInventoryRequest.character_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.GetCharacterInventoryRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetCharacterInventoryRequest::ByteSizeLong(const MessageLite& base) {
  const GetCharacterInventoryRequest& this_ = static_cast<const GetCharacterInventoryRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetCharacterInventoryRequest::ByteSizeLong() const {
  const GetCharacterInventoryRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.GetCharacterInventoryRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string character_id = 1 [json_name = "characterId"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_character_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_character_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetCharacterInventoryRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetCharacterInventoryRequest*>(&to_msg);
  auto& from = static_cast<const GetCharacterInventoryRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.GetCharacterInventoryRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!from._internal_character_id().empty()) {
      _this->_internal_set_character_id(from._internal_character_id());
    } else {
      if (_this->_impl_.character_id_.IsDefault()) {
        _this->_internal_set_character_id("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetCharacterInventoryRequest::CopyFrom(const GetCharacterInventoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.GetCharacterInventoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetCharacterInventoryRequest::InternalSwap(GetCharacterInventoryRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.character_id_, &other->_impl_.character_id_, arena);
}

::google::protobuf::Metadata GetCharacterInventoryRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetCharacterInventoryResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetCharacterInventoryResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetCharacterInventoryResponse, _impl_._has_bits_);
};

GetCharacterInventoryResponse::GetCharacterInventoryResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetCharacterInventoryResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.GetCharacterInventoryResponse)
}
PROTOBUF_NDEBUG_INLINE GetCharacterInventoryResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::GetCharacterInventoryResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        inventory_{visibility, arena, from.inventory_} {}

GetCharacterInventoryResponse::GetCharacterInventoryResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetCharacterInventoryResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetCharacterInventoryResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetCharacterInventoryResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.equipment_slots_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.equipment_slots_)
                : nullptr;
  _impl_.encumbrance_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.encumbrance_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, attunement_slots_used_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, attunement_slots_used_),
           offsetof(Impl_, attunement_slots_max_) -
               offsetof(Impl_, attunement_slots_used_) +
               sizeof(Impl_::attunement_slots_max_));

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.GetCharacterInventoryResponse)
}
PROTOBUF_NDEBUG_INLINE GetCharacterInventoryResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        inventory_{visibility, arena} {}

inline void GetCharacterInventoryResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, equipment_slots_),
           0,
           offsetof(Impl_, attunement_slots_max_) -
               offsetof(Impl_, equipment_slots_) +
               sizeof(Impl_::attunement_slots_max_));
}
GetCharacterInventoryResponse::~GetCharacterInventoryResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.GetCharacterInventoryResponse)
  SharedDtor(*this);
}
inline void GetCharacterInventoryResponse::SharedDtor(MessageLite& self) {
  GetCharacterInventoryResponse& this_ = static_cast<GetCharacterInventoryResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.equipment_slots_;
  delete this_._impl_.encumbrance_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetCharacterInventoryResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetCharacterInventoryResponse(arena);
}
constexpr auto GetCharacterInventoryResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetCharacterInventoryResponse, _impl_.inventory_) +
          decltype(GetCharacterInventoryResponse::_impl_.inventory_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetCharacterInventoryResponse), alignof(GetCharacterInventoryResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetCharacterInventoryResponse::PlacementNew_,
                                 sizeof(GetCharacterInventoryResponse),
                                 alignof(GetCharacterInventoryResponse));
  }
}
constexpr auto GetCharacterInventoryResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetCharacterInventoryResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetCharacterInventoryResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetCharacterInventoryResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetCharacterInventoryResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetCharacterInventoryResponse>(), &GetCharacterInventoryResponse::ByteSizeLong,
              &GetCharacterInventoryResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetCharacterInventoryResponse, _impl_._cached_size_),
          false,
      },
      &GetCharacterInventoryResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetCharacterInventoryResponse_class_data_ =
        GetCharacterInventoryResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetCharacterInventoryResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetCharacterInventoryResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetCharacterInventoryResponse_class_data_.tc_table);
  return GetCharacterInventoryResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 0, 2>
GetCharacterInventoryResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetCharacterInventoryResponse, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetCharacterInventoryResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::GetCharacterInventoryResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .dnd5e.api.v1alpha1.EquipmentSlots equipment_slots = 1 [json_name = "equipmentSlots"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetCharacterInventoryResponse, _impl_.equipment_slots_)}},
    // repeated .dnd5e.api.v1alpha1.InventoryItem inventory = 2 [json_name = "inventory"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(GetCharacterInventoryResponse, _impl_.inventory_)}},
    // .dnd5e.api.v1alpha1.EncumbranceInfo encumbrance = 3 [json_name = "encumbrance"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 2, PROTOBUF_FIELD_OFFSET(GetCharacterInventoryResponse, _impl_.encumbrance_)}},
    // int32 attunement_slots_used = 4 [json_name = "attunementSlotsUsed"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetCharacterInventoryResponse, _impl_.attunement_slots_used_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(GetCharacterInventoryResponse, _impl_.attunement_slots_used_)}},
    // int32 attunement_slots_max = 5 [json_name = "attunementSlotsMax"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetCharacterInventoryResponse, _impl_.attunement_slots_max_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(GetCharacterInventoryResponse, _impl_.attunement_slots_max_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.EquipmentSlots equipment_slots = 1 [json_name = "equipmentSlots"];
    {PROTOBUF_FIELD_OFFSET(GetCharacterInventoryResponse, _impl_.equipment_slots_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dnd5e.api.v1alpha1.InventoryItem inventory = 2 [json_name = "inventory"];
    {PROTOBUF_FIELD_OFFSET(GetCharacterInventoryResponse, _impl_.inventory_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.EncumbranceInfo encumbrance = 3 [json_name = "encumbrance"];
    {PROTOBUF_FIELD_OFFSET(GetCharacterInventoryResponse, _impl_.encumbrance_), _Internal::kHasBitsOffset + 1, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 attunement_slots_used = 4 [json_name = "attunementSlotsUsed"];
    {PROTOBUF_FIELD_OFFSET(GetCharacterInventoryResponse, _impl_.attunement_slots_used_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 attunement_slots_max = 5 [json_name = "attunementSlotsMax"];
    {PROTOBUF_FIELD_OFFSET(GetCharacterInventoryResponse, _impl_.attunement_slots_max_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::EquipmentSlots>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::InventoryItem>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::EncumbranceInfo>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void GetCharacterInventoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.GetCharacterInventoryResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.inventory_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.equipment_slots_ != nullptr);
      _impl_.equipment_slots_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.encumbrance_ != nullptr);
      _impl_.encumbrance_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000000cU) != 0) {
    ::memset(&_impl_.attunement_slots_used_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.attunement_slots_max_) -
        reinterpret_cast<char*>(&_impl_.attunement_slots_used_)) + sizeof(_impl_.attunement_slots_max_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetCharacterInventoryResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetCharacterInventoryResponse& this_ = static_cast<const GetCharacterInventoryResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetCharacterInventoryResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetCharacterInventoryResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.GetCharacterInventoryResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.EquipmentSlots equipment_slots = 1 [json_name = "equipmentSlots"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.equipment_slots_, this_._impl_.equipment_slots_->GetCachedSize(), target,
        stream);
  }

  // repeated .dnd5e.api.v1alpha1.InventoryItem inventory = 2 [json_name = "inventory"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_inventory_size());
       i < n; i++) {
    const auto& repfield = this_._internal_inventory().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // .dnd5e.api.v1alpha1.EncumbranceInfo encumbrance = 3 [json_name = "encumbrance"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.encumbrance_, this_._impl_.encumbrance_->GetCachedSize(), target,
        stream);
  }

  // int32 attunement_slots_used = 4 [json_name = "attunementSlotsUsed"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    if (this_._internal_attunement_slots_used() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_attunement_slots_used(), target);
    }
  }

  // int32 attunement_slots_max = 5 [json_name = "attunementSlotsMax"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    if (this_._internal_attunement_slots_max() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
              stream, this_._internal_attunement_slots_max(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.GetCharacterInventoryResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetCharacterInventoryResponse::ByteSizeLong(const MessageLite& base) {
  const GetCharacterInventoryResponse& this_ = static_cast<const GetCharacterInventoryResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetCharacterInventoryResponse::ByteSizeLong() const {
  const GetCharacterInventoryResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.GetCharacterInventoryResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.InventoryItem inventory = 2 [json_name = "inventory"];
    {
      total_size += 1UL * this_._internal_inventory_size();
      for (const auto& msg : this_._internal_inventory()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // .dnd5e.api.v1alpha1.EquipmentSlots equipment_slots = 1 [json_name = "equipmentSlots"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.equipment_slots_);
    }
    // .dnd5e.api.v1alpha1.EncumbranceInfo encumbrance = 3 [json_name = "encumbrance"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.encumbrance_);
    }
    // int32 attunement_slots_used = 4 [json_name = "attunementSlotsUsed"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_attunement_slots_used() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_attunement_slots_used());
      }
    }
    // int32 attunement_slots_max = 5 [json_name = "attunementSlotsMax"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_attunement_slots_max() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_attunement_slots_max());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetCharacterInventoryResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetCharacterInventoryResponse*>(&to_msg);
  auto& from = static_cast<const GetCharacterInventoryResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.GetCharacterInventoryResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_inventory()->MergeFrom(
      from._internal_inventory());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.equipment_slots_ != nullptr);
      if (_this->_impl_.equipment_slots_ == nullptr) {
        _this->_impl_.equipment_slots_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.equipment_slots_);
      } else {
        _this->_impl_.equipment_slots_->MergeFrom(*from._impl_.equipment_slots_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.encumbrance_ != nullptr);
      if (_this->_impl_.encumbrance_ == nullptr) {
        _this->_impl_.encumbrance_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.encumbrance_);
      } else {
        _this->_impl_.encumbrance_->MergeFrom(*from._impl_.encumbrance_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_attunement_slots_used() != 0) {
        _this->_impl_.attunement_slots_used_ = from._impl_.attunement_slots_used_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_attunement_slots_max() != 0) {
        _this->_impl_.attunement_slots_max_ = from._impl_.attunement_slots_max_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetCharacterInventoryResponse::CopyFrom(const GetCharacterInventoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.GetCharacterInventoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetCharacterInventoryResponse::InternalSwap(GetCharacterInventoryResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.inventory_.InternalSwap(&other->_impl_.inventory_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetCharacterInventoryResponse, _impl_.attunement_slots_max_)
      + sizeof(GetCharacterInventoryResponse::_impl_.attunement_slots_max_)
      - PROTOBUF_FIELD_OFFSET(GetCharacterInventoryResponse, _impl_.equipment_slots_)>(
          reinterpret_cast<char*>(&_impl_.equipment_slots_),
          reinterpret_cast<char*>(&other->_impl_.equipment_slots_));
}

::google::protobuf::Metadata GetCharacterInventoryResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EquipItemRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<EquipItemRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EquipItemRequest, _impl_._has_bits_);
};

EquipItemRequest::EquipItemRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EquipItemRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.EquipItemRequest)
}
PROTOBUF_NDEBUG_INLINE EquipItemRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::EquipItemRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        character_id_(arena, from.character_id_),
        item_id_(arena, from.item_id_) {}

EquipItemRequest::EquipItemRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EquipItemRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EquipItemRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EquipItemRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.slot_ = from._impl_.slot_;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.EquipItemRequest)
}
PROTOBUF_NDEBUG_INLINE EquipItemRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        character_id_(arena),
        item_id_(arena) {}

inline void EquipItemRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.slot_ = {};
}
EquipItemRequest::~EquipItemRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.EquipItemRequest)
  SharedDtor(*this);
}
inline void EquipItemRequest::SharedDtor(MessageLite& self) {
  EquipItemRequest& this_ = static_cast<EquipItemRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.character_id_.Destroy();
  this_._impl_.item_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EquipItemRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EquipItemRequest(arena);
}
constexpr auto EquipItemRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EquipItemRequest),
                                            alignof(EquipItemRequest));
}
constexpr auto EquipItemRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EquipItemRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EquipItemRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EquipItemRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EquipItemRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EquipItemRequest>(), &EquipItemRequest::ByteSizeLong,
              &EquipItemRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EquipItemRequest, _impl_._cached_size_),
          false,
      },
      &EquipItemRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EquipItemRequest_class_data_ =
        EquipItemRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EquipItemRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EquipItemRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EquipItemRequest_class_data_.tc_table);
  return EquipItemRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 63, 2>
EquipItemRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EquipItemRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    EquipItemRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::EquipItemRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string character_id = 1 [json_name = "characterId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EquipItemRequest, _impl_.character_id_)}},
    // string item_id = 2 [json_name = "itemId"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(EquipItemRequest, _impl_.item_id_)}},
    // .dnd5e.api.v1alpha1.EquipmentSlot slot = 3 [json_name = "slot"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EquipItemRequest, _impl_.slot_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(EquipItemRequest, _impl_.slot_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string character_id = 1 [json_name = "characterId"];
    {PROTOBUF_FIELD_OFFSET(EquipItemRequest, _impl_.character_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string item_id = 2 [json_name = "itemId"];
    {PROTOBUF_FIELD_OFFSET(EquipItemRequest, _impl_.item_id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .dnd5e.api.v1alpha1.EquipmentSlot slot = 3 [json_name = "slot"];
    {PROTOBUF_FIELD_OFFSET(EquipItemRequest, _impl_.slot_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\43\14\7\0\0\0\0\0"
    "dnd5e.api.v1alpha1.EquipItemRequest"
    "character_id"
    "item_id"
  }},
};
PROTOBUF_NOINLINE void EquipItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.EquipItemRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.character_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.item_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.slot_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EquipItemRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EquipItemRequest& this_ = static_cast<const EquipItemRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EquipItemRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EquipItemRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.EquipItemRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string character_id = 1 [json_name = "characterId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_character_id().empty()) {
      const ::std::string& _s = this_._internal_character_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.EquipItemRequest.character_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string item_id = 2 [json_name = "itemId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_item_id().empty()) {
      const ::std::string& _s = this_._internal_item_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.EquipItemRequest.item_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // .dnd5e.api.v1alpha1.EquipmentSlot slot = 3 [json_name = "slot"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_slot() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_slot(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.EquipItemRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EquipItemRequest::ByteSizeLong(const MessageLite& base) {
  const EquipItemRequest& this_ = static_cast<const EquipItemRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EquipItemRequest::ByteSizeLong() const {
  const EquipItemRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.EquipItemRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string character_id = 1 [json_name = "characterId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_character_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_character_id());
      }
    }
    // string item_id = 2 [json_name = "itemId"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_item_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_item_id());
      }
    }
    // .dnd5e.api.v1alpha1.EquipmentSlot slot = 3 [json_name = "slot"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_slot() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_slot());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EquipItemRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EquipItemRequest*>(&to_msg);
  auto& from = static_cast<const EquipItemRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.EquipItemRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_character_id().empty()) {
        _this->_internal_set_character_id(from._internal_character_id());
      } else {
        if (_this->_impl_.character_id_.IsDefault()) {
          _this->_internal_set_character_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_item_id().empty()) {
        _this->_internal_set_item_id(from._internal_item_id());
      } else {
        if (_this->_impl_.item_id_.IsDefault()) {
          _this->_internal_set_item_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_slot() != 0) {
        _this->_impl_.slot_ = from._impl_.slot_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EquipItemRequest::CopyFrom(const EquipItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.EquipItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EquipItemRequest::InternalSwap(EquipItemRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.character_id_, &other->_impl_.character_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.item_id_, &other->_impl_.item_id_, arena);
  swap(_impl_.slot_, other->_impl_.slot_);
}

::google::protobuf::Metadata EquipItemRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EquipItemResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<EquipItemResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EquipItemResponse, _impl_._has_bits_);
};

EquipItemResponse::EquipItemResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EquipItemResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.EquipItemResponse)
}
PROTOBUF_NDEBUG_INLINE EquipItemResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::EquipItemResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

EquipItemResponse::EquipItemResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EquipItemResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EquipItemResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EquipItemResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.character_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.character_)
                : nullptr;
  _impl_.previously_equipped_item_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.previously_equipped_item_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.EquipItemResponse)
}
PROTOBUF_NDEBUG_INLINE EquipItemResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void EquipItemResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, character_),
           0,
           offsetof(Impl_, previously_equipped_item_) -
               offsetof(Impl_, character_) +
               sizeof(Impl_::previously_equipped_item_));
}
EquipItemResponse::~EquipItemResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.EquipItemResponse)
  SharedDtor(*this);
}
inline void EquipItemResponse::SharedDtor(MessageLite& self) {
  EquipItemResponse& this_ = static_cast<EquipItemResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.character_;
  delete this_._impl_.previously_equipped_item_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EquipItemResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EquipItemResponse(arena);
}
constexpr auto EquipItemResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(EquipItemResponse),
                                            alignof(EquipItemResponse));
}
constexpr auto EquipItemResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EquipItemResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EquipItemResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EquipItemResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EquipItemResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EquipItemResponse>(), &EquipItemResponse::ByteSizeLong,
              &EquipItemResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EquipItemResponse, _impl_._cached_size_),
          false,
      },
      &EquipItemResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EquipItemResponse_class_data_ =
        EquipItemResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EquipItemResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EquipItemResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EquipItemResponse_class_data_.tc_table);
  return EquipItemResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
EquipItemResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EquipItemResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    EquipItemResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::EquipItemResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .dnd5e.api.v1alpha1.InventoryItem previously_equipped_item = 2 [json_name = "previouslyEquippedItem"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(EquipItemResponse, _impl_.previously_equipped_item_)}},
    // .dnd5e.api.v1alpha1.Character character = 1 [json_name = "character"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EquipItemResponse, _impl_.character_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.Character character = 1 [json_name = "character"];
    {PROTOBUF_FIELD_OFFSET(EquipItemResponse, _impl_.character_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dnd5e.api.v1alpha1.InventoryItem previously_equipped_item = 2 [json_name = "previouslyEquippedItem"];
    {PROTOBUF_FIELD_OFFSET(EquipItemResponse, _impl_.previously_equipped_item_), _Internal::kHasBitsOffset + 1, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::Character>()},
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::InventoryItem>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void EquipItemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.EquipItemResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(_impl_.character_ != nullptr);
      _impl_.character_->Clear();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.previously_equipped_item_ != nullptr);
      _impl_.previously_equipped_item_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EquipItemResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EquipItemResponse& this_ = static_cast<const EquipItemResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EquipItemResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EquipItemResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.EquipItemResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.Character character = 1 [json_name = "character"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.character_, this_._impl_.character_->GetCachedSize(), target,
        stream);
  }

  // .dnd5e.api.v1alpha1.InventoryItem previously_equipped_item = 2 [json_name = "previouslyEquippedItem"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.previously_equipped_item_, this_._impl_.previously_equipped_item_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.EquipItemResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EquipItemResponse::ByteSizeLong(const MessageLite& base) {
  const EquipItemResponse& this_ = static_cast<const EquipItemResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EquipItemResponse::ByteSizeLong() const {
  const EquipItemResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.EquipItemResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // .dnd5e.api.v1alpha1.Character character = 1 [json_name = "character"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.character_);
    }
    // .dnd5e.api.v1alpha1.InventoryItem previously_equipped_item = 2 [json_name = "previouslyEquippedItem"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.previously_equipped_item_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EquipItemResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EquipItemResponse*>(&to_msg);
  auto& from = static_cast<const EquipItemResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.EquipItemResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.character_ != nullptr);
      if (_this->_impl_.character_ == nullptr) {
        _this->_impl_.character_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.character_);
      } else {
        _this->_impl_.character_->MergeFrom(*from._impl_.character_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.previously_equipped_item_ != nullptr);
      if (_this->_impl_.previously_equipped_item_ == nullptr) {
        _this->_impl_.previously_equipped_item_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.previously_equipped_item_);
      } else {
        _this->_impl_.previously_equipped_item_->MergeFrom(*from._impl_.previously_equipped_item_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EquipItemResponse::CopyFrom(const EquipItemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.EquipItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EquipItemResponse::InternalSwap(EquipItemResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EquipItemResponse, _impl_.previously_equipped_item_)
      + sizeof(EquipItemResponse::_impl_.previously_equipped_item_)
      - PROTOBUF_FIELD_OFFSET(EquipItemResponse, _impl_.character_)>(
          reinterpret_cast<char*>(&_impl_.character_),
          reinterpret_cast<char*>(&other->_impl_.character_));
}

::google::protobuf::Metadata EquipItemResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UnequipItemRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<UnequipItemRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UnequipItemRequest, _impl_._has_bits_);
};

UnequipItemRequest::UnequipItemRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UnequipItemRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.UnequipItemRequest)
}
PROTOBUF_NDEBUG_INLINE UnequipItemRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::UnequipItemRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        character_id_(arena, from.character_id_) {}

UnequipItemRequest::UnequipItemRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const UnequipItemRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UnequipItemRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UnequipItemRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.slot_ = from._impl_.slot_;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.UnequipItemRequest)
}
PROTOBUF_NDEBUG_INLINE UnequipItemRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        character_id_(arena) {}

inline void UnequipItemRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.slot_ = {};
}
UnequipItemRequest::~UnequipItemRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.UnequipItemRequest)
  SharedDtor(*this);
}
inline void UnequipItemRequest::SharedDtor(MessageLite& self) {
  UnequipItemRequest& this_ = static_cast<UnequipItemRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.character_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL UnequipItemRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UnequipItemRequest(arena);
}
constexpr auto UnequipItemRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(UnequipItemRequest),
                                            alignof(UnequipItemRequest));
}
constexpr auto UnequipItemRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UnequipItemRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UnequipItemRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UnequipItemRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UnequipItemRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UnequipItemRequest>(), &UnequipItemRequest::ByteSizeLong,
              &UnequipItemRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UnequipItemRequest, _impl_._cached_size_),
          false,
      },
      &UnequipItemRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull UnequipItemRequest_class_data_ =
        UnequipItemRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
UnequipItemRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UnequipItemRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UnequipItemRequest_class_data_.tc_table);
  return UnequipItemRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 58, 2>
UnequipItemRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UnequipItemRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    UnequipItemRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::UnequipItemRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .dnd5e.api.v1alpha1.EquipmentSlot slot = 2 [json_name = "slot"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UnequipItemRequest, _impl_.slot_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(UnequipItemRequest, _impl_.slot_)}},
    // string character_id = 1 [json_name = "characterId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UnequipItemRequest, _impl_.character_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string character_id = 1 [json_name = "characterId"];
    {PROTOBUF_FIELD_OFFSET(UnequipItemRequest, _impl_.character_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .dnd5e.api.v1alpha1.EquipmentSlot slot = 2 [json_name = "slot"];
    {PROTOBUF_FIELD_OFFSET(UnequipItemRequest, _impl_.slot_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\45\14\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.UnequipItemRequest"
    "character_id"
  }},
};
PROTOBUF_NOINLINE void UnequipItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.UnequipItemRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.character_id_.ClearNonDefaultToEmpty();
  }
  _impl_.slot_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UnequipItemRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UnequipItemRequest& this_ = static_cast<const UnequipItemRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UnequipItemRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UnequipItemRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.UnequipItemRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string character_id = 1 [json_name = "characterId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_character_id().empty()) {
      const ::std::string& _s = this_._internal_character_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.UnequipItemRequest.character_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // .dnd5e.api.v1alpha1.EquipmentSlot slot = 2 [json_name = "slot"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_slot() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_slot(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.UnequipItemRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UnequipItemRequest::ByteSizeLong(const MessageLite& base) {
  const UnequipItemRequest& this_ = static_cast<const UnequipItemRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UnequipItemRequest::ByteSizeLong() const {
  const UnequipItemRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.UnequipItemRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string character_id = 1 [json_name = "characterId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_character_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_character_id());
      }
    }
    // .dnd5e.api.v1alpha1.EquipmentSlot slot = 2 [json_name = "slot"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_slot() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_slot());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UnequipItemRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UnequipItemRequest*>(&to_msg);
  auto& from = static_cast<const UnequipItemRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.UnequipItemRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_character_id().empty()) {
        _this->_internal_set_character_id(from._internal_character_id());
      } else {
        if (_this->_impl_.character_id_.IsDefault()) {
          _this->_internal_set_character_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_slot() != 0) {
        _this->_impl_.slot_ = from._impl_.slot_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UnequipItemRequest::CopyFrom(const UnequipItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.UnequipItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UnequipItemRequest::InternalSwap(UnequipItemRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.character_id_, &other->_impl_.character_id_, arena);
  swap(_impl_.slot_, other->_impl_.slot_);
}

::google::protobuf::Metadata UnequipItemRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UnequipItemResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<UnequipItemResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UnequipItemResponse, _impl_._has_bits_);
};

UnequipItemResponse::UnequipItemResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UnequipItemResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.UnequipItemResponse)
}
PROTOBUF_NDEBUG_INLINE UnequipItemResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::UnequipItemResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UnequipItemResponse::UnequipItemResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const UnequipItemResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UnequipItemResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UnequipItemResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.character_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.character_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.UnequipItemResponse)
}
PROTOBUF_NDEBUG_INLINE UnequipItemResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void UnequipItemResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.character_ = {};
}
UnequipItemResponse::~UnequipItemResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.UnequipItemResponse)
  SharedDtor(*this);
}
inline void UnequipItemResponse::SharedDtor(MessageLite& self) {
  UnequipItemResponse& this_ = static_cast<UnequipItemResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.character_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL UnequipItemResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UnequipItemResponse(arena);
}
constexpr auto UnequipItemResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UnequipItemResponse),
                                            alignof(UnequipItemResponse));
}
constexpr auto UnequipItemResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UnequipItemResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UnequipItemResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UnequipItemResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UnequipItemResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UnequipItemResponse>(), &UnequipItemResponse::ByteSizeLong,
              &UnequipItemResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UnequipItemResponse, _impl_._cached_size_),
          false,
      },
      &UnequipItemResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull UnequipItemResponse_class_data_ =
        UnequipItemResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
UnequipItemResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UnequipItemResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UnequipItemResponse_class_data_.tc_table);
  return UnequipItemResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
UnequipItemResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UnequipItemResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    UnequipItemResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::UnequipItemResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .dnd5e.api.v1alpha1.Character character = 1 [json_name = "character"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UnequipItemResponse, _impl_.character_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.Character character = 1 [json_name = "character"];
    {PROTOBUF_FIELD_OFFSET(UnequipItemResponse, _impl_.character_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::Character>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void UnequipItemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.UnequipItemResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.character_ != nullptr);
    _impl_.character_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UnequipItemResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UnequipItemResponse& this_ = static_cast<const UnequipItemResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UnequipItemResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UnequipItemResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.UnequipItemResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.Character character = 1 [json_name = "character"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.character_, this_._impl_.character_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.UnequipItemResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UnequipItemResponse::ByteSizeLong(const MessageLite& base) {
  const UnequipItemResponse& this_ = static_cast<const UnequipItemResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UnequipItemResponse::ByteSizeLong() const {
  const UnequipItemResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.UnequipItemResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .dnd5e.api.v1alpha1.Character character = 1 [json_name = "character"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.character_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UnequipItemResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UnequipItemResponse*>(&to_msg);
  auto& from = static_cast<const UnequipItemResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.UnequipItemResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(from._impl_.character_ != nullptr);
    if (_this->_impl_.character_ == nullptr) {
      _this->_impl_.character_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.character_);
    } else {
      _this->_impl_.character_->MergeFrom(*from._impl_.character_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UnequipItemResponse::CopyFrom(const UnequipItemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.UnequipItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UnequipItemResponse::InternalSwap(UnequipItemResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.character_, other->_impl_.character_);
}

::google::protobuf::Metadata UnequipItemResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AddToInventoryRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<AddToInventoryRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AddToInventoryRequest, _impl_._has_bits_);
};

AddToInventoryRequest::AddToInventoryRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AddToInventoryRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.AddToInventoryRequest)
}
PROTOBUF_NDEBUG_INLINE AddToInventoryRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::AddToInventoryRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        items_{visibility, arena, from.items_},
        character_id_(arena, from.character_id_) {}

AddToInventoryRequest::AddToInventoryRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const AddToInventoryRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AddToInventoryRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AddToInventoryRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.AddToInventoryRequest)
}
PROTOBUF_NDEBUG_INLINE AddToInventoryRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        items_{visibility, arena},
        character_id_(arena) {}

inline void AddToInventoryRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AddToInventoryRequest::~AddToInventoryRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.AddToInventoryRequest)
  SharedDtor(*this);
}
inline void AddToInventoryRequest::SharedDtor(MessageLite& self) {
  AddToInventoryRequest& this_ = static_cast<AddToInventoryRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.character_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL AddToInventoryRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AddToInventoryRequest(arena);
}
constexpr auto AddToInventoryRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(AddToInventoryRequest, _impl_.items_) +
          decltype(AddToInventoryRequest::_impl_.items_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(AddToInventoryRequest), alignof(AddToInventoryRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&AddToInventoryRequest::PlacementNew_,
                                 sizeof(AddToInventoryRequest),
                                 alignof(AddToInventoryRequest));
  }
}
constexpr auto AddToInventoryRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AddToInventoryRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AddToInventoryRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AddToInventoryRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AddToInventoryRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AddToInventoryRequest>(), &AddToInventoryRequest::ByteSizeLong,
              &AddToInventoryRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AddToInventoryRequest, _impl_._cached_size_),
          false,
      },
      &AddToInventoryRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull AddToInventoryRequest_class_data_ =
        AddToInventoryRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
AddToInventoryRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AddToInventoryRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AddToInventoryRequest_class_data_.tc_table);
  return AddToInventoryRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 61, 2>
AddToInventoryRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AddToInventoryRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    AddToInventoryRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::AddToInventoryRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dnd5e.api.v1alpha1.InventoryAddition items = 2 [json_name = "items"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AddToInventoryRequest, _impl_.items_)}},
    // string character_id = 1 [json_name = "characterId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AddToInventoryRequest, _impl_.character_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string character_id = 1 [json_name = "characterId"];
    {PROTOBUF_FIELD_OFFSET(AddToInventoryRequest, _impl_.character_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .dnd5e.api.v1alpha1.InventoryAddition items = 2 [json_name = "items"];
    {PROTOBUF_FIELD_OFFSET(AddToInventoryRequest, _impl_.items_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::InventoryAddition>()},
  }},
  {{
    "\50\14\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.AddToInventoryRequest"
    "character_id"
  }},
};
PROTOBUF_NOINLINE void AddToInventoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.AddToInventoryRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.character_id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL AddToInventoryRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const AddToInventoryRequest& this_ = static_cast<const AddToInventoryRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL AddToInventoryRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const AddToInventoryRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.AddToInventoryRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string character_id = 1 [json_name = "characterId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_character_id().empty()) {
      const ::std::string& _s = this_._internal_character_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.AddToInventoryRequest.character_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // repeated .dnd5e.api.v1alpha1.InventoryAddition items = 2 [json_name = "items"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_items_size());
       i < n; i++) {
    const auto& repfield = this_._internal_items().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.AddToInventoryRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AddToInventoryRequest::ByteSizeLong(const MessageLite& base) {
  const AddToInventoryRequest& this_ = static_cast<const AddToInventoryRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AddToInventoryRequest::ByteSizeLong() const {
  const AddToInventoryRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.AddToInventoryRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dnd5e.api.v1alpha1.InventoryAddition items = 2 [json_name = "items"];
    {
      total_size += 1UL * this_._internal_items_size();
      for (const auto& msg : this_._internal_items()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // string character_id = 1 [json_name = "characterId"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_character_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_character_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void AddToInventoryRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AddToInventoryRequest*>(&to_msg);
  auto& from = static_cast<const AddToInventoryRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.AddToInventoryRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_items()->MergeFrom(
      from._internal_items());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!from._internal_character_id().empty()) {
      _this->_internal_set_character_id(from._internal_character_id());
    } else {
      if (_this->_impl_.character_id_.IsDefault()) {
        _this->_internal_set_character_id("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AddToInventoryRequest::CopyFrom(const AddToInventoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.AddToInventoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AddToInventoryRequest::InternalSwap(AddToInventoryRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.character_id_, &other->_impl_.character_id_, arena);
}

::google::protobuf::Metadata AddToInventoryRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InventoryAddition::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<InventoryAddition>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(InventoryAddition, _impl_._has_bits_);
};

InventoryAddition::InventoryAddition(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, InventoryAddition_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.InventoryAddition)
}
PROTOBUF_NDEBUG_INLINE InventoryAddition::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::InventoryAddition& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        item_id_(arena, from.item_id_) {}

InventoryAddition::InventoryAddition(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const InventoryAddition& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, InventoryAddition_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InventoryAddition* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.quantity_ = from._impl_.quantity_;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.InventoryAddition)
}
PROTOBUF_NDEBUG_INLINE InventoryAddition::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        item_id_(arena) {}

inline void InventoryAddition::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.quantity_ = {};
}
InventoryAddition::~InventoryAddition() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.InventoryAddition)
  SharedDtor(*this);
}
inline void InventoryAddition::SharedDtor(MessageLite& self) {
  InventoryAddition& this_ = static_cast<InventoryAddition&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.item_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL InventoryAddition::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) InventoryAddition(arena);
}
constexpr auto InventoryAddition::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(InventoryAddition),
                                            alignof(InventoryAddition));
}
constexpr auto InventoryAddition::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_InventoryAddition_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &InventoryAddition::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<InventoryAddition>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &InventoryAddition::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<InventoryAddition>(), &InventoryAddition::ByteSizeLong,
              &InventoryAddition::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(InventoryAddition, _impl_._cached_size_),
          false,
      },
      &InventoryAddition::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull InventoryAddition_class_data_ =
        InventoryAddition::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
InventoryAddition::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&InventoryAddition_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(InventoryAddition_class_data_.tc_table);
  return InventoryAddition_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 52, 2>
InventoryAddition::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InventoryAddition, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    InventoryAddition_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::InventoryAddition>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 quantity = 2 [json_name = "quantity"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InventoryAddition, _impl_.quantity_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(InventoryAddition, _impl_.quantity_)}},
    // string item_id = 1 [json_name = "itemId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(InventoryAddition, _impl_.item_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string item_id = 1 [json_name = "itemId"];
    {PROTOBUF_FIELD_OFFSET(InventoryAddition, _impl_.item_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 quantity = 2 [json_name = "quantity"];
    {PROTOBUF_FIELD_OFFSET(InventoryAddition, _impl_.quantity_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\44\7\0\0\0\0\0\0"
    "dnd5e.api.v1alpha1.InventoryAddition"
    "item_id"
  }},
};
PROTOBUF_NOINLINE void InventoryAddition::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.InventoryAddition)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.item_id_.ClearNonDefaultToEmpty();
  }
  _impl_.quantity_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL InventoryAddition::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const InventoryAddition& this_ = static_cast<const InventoryAddition&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL InventoryAddition::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const InventoryAddition& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.InventoryAddition)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string item_id = 1 [json_name = "itemId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_item_id().empty()) {
      const ::std::string& _s = this_._internal_item_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.InventoryAddition.item_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // int32 quantity = 2 [json_name = "quantity"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_quantity() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_quantity(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.InventoryAddition)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t InventoryAddition::ByteSizeLong(const MessageLite& base) {
  const InventoryAddition& this_ = static_cast<const InventoryAddition&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t InventoryAddition::ByteSizeLong() const {
  const InventoryAddition& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.InventoryAddition)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string item_id = 1 [json_name = "itemId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_item_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_item_id());
      }
    }
    // int32 quantity = 2 [json_name = "quantity"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_quantity() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_quantity());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void InventoryAddition::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InventoryAddition*>(&to_msg);
  auto& from = static_cast<const InventoryAddition&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.InventoryAddition)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_item_id().empty()) {
        _this->_internal_set_item_id(from._internal_item_id());
      } else {
        if (_this->_impl_.item_id_.IsDefault()) {
          _this->_internal_set_item_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_quantity() != 0) {
        _this->_impl_.quantity_ = from._impl_.quantity_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InventoryAddition::CopyFrom(const InventoryAddition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.InventoryAddition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InventoryAddition::InternalSwap(InventoryAddition* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.item_id_, &other->_impl_.item_id_, arena);
  swap(_impl_.quantity_, other->_impl_.quantity_);
}

::google::protobuf::Metadata InventoryAddition::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AddToInventoryResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<AddToInventoryResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AddToInventoryResponse, _impl_._has_bits_);
};

AddToInventoryResponse::AddToInventoryResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AddToInventoryResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.AddToInventoryResponse)
}
PROTOBUF_NDEBUG_INLINE AddToInventoryResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::AddToInventoryResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        errors_{visibility, arena, from.errors_} {}

AddToInventoryResponse::AddToInventoryResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const AddToInventoryResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AddToInventoryResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AddToInventoryResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.character_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.character_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.AddToInventoryResponse)
}
PROTOBUF_NDEBUG_INLINE AddToInventoryResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        errors_{visibility, arena} {}

inline void AddToInventoryResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.character_ = {};
}
AddToInventoryResponse::~AddToInventoryResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.AddToInventoryResponse)
  SharedDtor(*this);
}
inline void AddToInventoryResponse::SharedDtor(MessageLite& self) {
  AddToInventoryResponse& this_ = static_cast<AddToInventoryResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.character_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL AddToInventoryResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AddToInventoryResponse(arena);
}
constexpr auto AddToInventoryResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(AddToInventoryResponse, _impl_.errors_) +
          decltype(AddToInventoryResponse::_impl_.errors_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(AddToInventoryResponse), alignof(AddToInventoryResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&AddToInventoryResponse::PlacementNew_,
                                 sizeof(AddToInventoryResponse),
                                 alignof(AddToInventoryResponse));
  }
}
constexpr auto AddToInventoryResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AddToInventoryResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AddToInventoryResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AddToInventoryResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AddToInventoryResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AddToInventoryResponse>(), &AddToInventoryResponse::ByteSizeLong,
              &AddToInventoryResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AddToInventoryResponse, _impl_._cached_size_),
          false,
      },
      &AddToInventoryResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull AddToInventoryResponse_class_data_ =
        AddToInventoryResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
AddToInventoryResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AddToInventoryResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AddToInventoryResponse_class_data_.tc_table);
  return AddToInventoryResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 56, 2>
AddToInventoryResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AddToInventoryResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    AddToInventoryResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::AddToInventoryResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string errors = 2 [json_name = "errors"];
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AddToInventoryResponse, _impl_.errors_)}},
    // .dnd5e.api.v1alpha1.Character character = 1 [json_name = "character"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AddToInventoryResponse, _impl_.character_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.Character character = 1 [json_name = "character"];
    {PROTOBUF_FIELD_OFFSET(AddToInventoryResponse, _impl_.character_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string errors = 2 [json_name = "errors"];
    {PROTOBUF_FIELD_OFFSET(AddToInventoryResponse, _impl_.errors_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::Character>()},
  }},
  {{
    "\51\0\6\0\0\0\0\0"
    "dnd5e.api.v1alpha1.AddToInventoryResponse"
    "errors"
  }},
};
PROTOBUF_NOINLINE void AddToInventoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.AddToInventoryResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.errors_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.character_ != nullptr);
    _impl_.character_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL AddToInventoryResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const AddToInventoryResponse& this_ = static_cast<const AddToInventoryResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL AddToInventoryResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const AddToInventoryResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.AddToInventoryResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.Character character = 1 [json_name = "character"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.character_, this_._impl_.character_->GetCachedSize(), target,
        stream);
  }

  // repeated string errors = 2 [json_name = "errors"];
  for (int i = 0, n = this_._internal_errors_size(); i < n; ++i) {
    const auto& s = this_._internal_errors().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.AddToInventoryResponse.errors");
    target = stream->WriteString(2, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.AddToInventoryResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AddToInventoryResponse::ByteSizeLong(const MessageLite& base) {
  const AddToInventoryResponse& this_ = static_cast<const AddToInventoryResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AddToInventoryResponse::ByteSizeLong() const {
  const AddToInventoryResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.AddToInventoryResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string errors = 2 [json_name = "errors"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_errors().size());
      for (int i = 0, n = this_._internal_errors().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_errors().Get(i));
      }
    }
  }
   {
    // .dnd5e.api.v1alpha1.Character character = 1 [json_name = "character"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.character_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void AddToInventoryResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AddToInventoryResponse*>(&to_msg);
  auto& from = static_cast<const AddToInventoryResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.AddToInventoryResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_errors()->MergeFrom(from._internal_errors());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(from._impl_.character_ != nullptr);
    if (_this->_impl_.character_ == nullptr) {
      _this->_impl_.character_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.character_);
    } else {
      _this->_impl_.character_->MergeFrom(*from._impl_.character_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AddToInventoryResponse::CopyFrom(const AddToInventoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.AddToInventoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AddToInventoryResponse::InternalSwap(AddToInventoryResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.errors_.InternalSwap(&other->_impl_.errors_);
  swap(_impl_.character_, other->_impl_.character_);
}

::google::protobuf::Metadata AddToInventoryResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RemoveFromInventoryRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RemoveFromInventoryRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RemoveFromInventoryRequest, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::dnd5e::api::v1alpha1::RemoveFromInventoryRequest, _impl_._oneof_case_);
};

RemoveFromInventoryRequest::RemoveFromInventoryRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RemoveFromInventoryRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.RemoveFromInventoryRequest)
}
PROTOBUF_NDEBUG_INLINE RemoveFromInventoryRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::RemoveFromInventoryRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        character_id_(arena, from.character_id_),
        item_id_(arena, from.item_id_),
        removal_amount_{},
        _oneof_case_{from._oneof_case_[0]} {}

RemoveFromInventoryRequest::RemoveFromInventoryRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RemoveFromInventoryRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RemoveFromInventoryRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RemoveFromInventoryRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (removal_amount_case()) {
    case REMOVAL_AMOUNT_NOT_SET:
      break;
      case kQuantity:
        _impl_.removal_amount_.quantity_ = from._impl_.removal_amount_.quantity_;
        break;
      case kRemoveAll:
        _impl_.removal_amount_.remove_all_ = from._impl_.removal_amount_.remove_all_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.RemoveFromInventoryRequest)
}
PROTOBUF_NDEBUG_INLINE RemoveFromInventoryRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        character_id_(arena),
        item_id_(arena),
        removal_amount_{},
        _oneof_case_{} {}

inline void RemoveFromInventoryRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RemoveFromInventoryRequest::~RemoveFromInventoryRequest() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.RemoveFromInventoryRequest)
  SharedDtor(*this);
}
inline void RemoveFromInventoryRequest::SharedDtor(MessageLite& self) {
  RemoveFromInventoryRequest& this_ = static_cast<RemoveFromInventoryRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.character_id_.Destroy();
  this_._impl_.item_id_.Destroy();
  if (this_.has_removal_amount()) {
    this_.clear_removal_amount();
  }
  this_._impl_.~Impl_();
}

void RemoveFromInventoryRequest::clear_removal_amount() {
// @@protoc_insertion_point(one_of_clear_start:dnd5e.api.v1alpha1.RemoveFromInventoryRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (removal_amount_case()) {
    case kQuantity: {
      // No need to clear
      break;
    }
    case kRemoveAll: {
      // No need to clear
      break;
    }
    case REMOVAL_AMOUNT_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = REMOVAL_AMOUNT_NOT_SET;
}


inline void* PROTOBUF_NONNULL RemoveFromInventoryRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RemoveFromInventoryRequest(arena);
}
constexpr auto RemoveFromInventoryRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RemoveFromInventoryRequest),
                                            alignof(RemoveFromInventoryRequest));
}
constexpr auto RemoveFromInventoryRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RemoveFromInventoryRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RemoveFromInventoryRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RemoveFromInventoryRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RemoveFromInventoryRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RemoveFromInventoryRequest>(), &RemoveFromInventoryRequest::ByteSizeLong,
              &RemoveFromInventoryRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RemoveFromInventoryRequest, _impl_._cached_size_),
          false,
      },
      &RemoveFromInventoryRequest::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RemoveFromInventoryRequest_class_data_ =
        RemoveFromInventoryRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RemoveFromInventoryRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RemoveFromInventoryRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RemoveFromInventoryRequest_class_data_.tc_table);
  return RemoveFromInventoryRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 4, 0, 73, 2>
RemoveFromInventoryRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RemoveFromInventoryRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RemoveFromInventoryRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::RemoveFromInventoryRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string item_id = 2 [json_name = "itemId"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(RemoveFromInventoryRequest, _impl_.item_id_)}},
    // string character_id = 1 [json_name = "characterId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RemoveFromInventoryRequest, _impl_.character_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string character_id = 1 [json_name = "characterId"];
    {PROTOBUF_FIELD_OFFSET(RemoveFromInventoryRequest, _impl_.character_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string item_id = 2 [json_name = "itemId"];
    {PROTOBUF_FIELD_OFFSET(RemoveFromInventoryRequest, _impl_.item_id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 quantity = 3 [json_name = "quantity"];
    {PROTOBUF_FIELD_OFFSET(RemoveFromInventoryRequest, _impl_.removal_amount_.quantity_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kInt32)},
    // bool remove_all = 4 [json_name = "removeAll"];
    {PROTOBUF_FIELD_OFFSET(RemoveFromInventoryRequest, _impl_.removal_amount_.remove_all_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\55\14\7\0\0\0\0\0"
    "dnd5e.api.v1alpha1.RemoveFromInventoryRequest"
    "character_id"
    "item_id"
  }},
};
PROTOBUF_NOINLINE void RemoveFromInventoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.RemoveFromInventoryRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.character_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.item_id_.ClearNonDefaultToEmpty();
    }
  }
  clear_removal_amount();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RemoveFromInventoryRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RemoveFromInventoryRequest& this_ = static_cast<const RemoveFromInventoryRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RemoveFromInventoryRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RemoveFromInventoryRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.RemoveFromInventoryRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string character_id = 1 [json_name = "characterId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_character_id().empty()) {
      const ::std::string& _s = this_._internal_character_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.RemoveFromInventoryRequest.character_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string item_id = 2 [json_name = "itemId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_item_id().empty()) {
      const ::std::string& _s = this_._internal_item_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dnd5e.api.v1alpha1.RemoveFromInventoryRequest.item_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  switch (this_.removal_amount_case()) {
    case kQuantity: {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_quantity(), target);
      break;
    }
    case kRemoveAll: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_remove_all(), target);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.RemoveFromInventoryRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RemoveFromInventoryRequest::ByteSizeLong(const MessageLite& base) {
  const RemoveFromInventoryRequest& this_ = static_cast<const RemoveFromInventoryRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RemoveFromInventoryRequest::ByteSizeLong() const {
  const RemoveFromInventoryRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.RemoveFromInventoryRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string character_id = 1 [json_name = "characterId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_character_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_character_id());
      }
    }
    // string item_id = 2 [json_name = "itemId"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_item_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_item_id());
      }
    }
  }
  switch (this_.removal_amount_case()) {
    // int32 quantity = 3 [json_name = "quantity"];
    case kQuantity: {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_quantity());
      break;
    }
    // bool remove_all = 4 [json_name = "removeAll"];
    case kRemoveAll: {
      total_size += 2;
      break;
    }
    case REMOVAL_AMOUNT_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RemoveFromInventoryRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RemoveFromInventoryRequest*>(&to_msg);
  auto& from = static_cast<const RemoveFromInventoryRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.RemoveFromInventoryRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_character_id().empty()) {
        _this->_internal_set_character_id(from._internal_character_id());
      } else {
        if (_this->_impl_.character_id_.IsDefault()) {
          _this->_internal_set_character_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_item_id().empty()) {
        _this->_internal_set_item_id(from._internal_item_id());
      } else {
        if (_this->_impl_.item_id_.IsDefault()) {
          _this->_internal_set_item_id("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_removal_amount();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kQuantity: {
        _this->_impl_.removal_amount_.quantity_ = from._impl_.removal_amount_.quantity_;
        break;
      }
      case kRemoveAll: {
        _this->_impl_.removal_amount_.remove_all_ = from._impl_.removal_amount_.remove_all_;
        break;
      }
      case REMOVAL_AMOUNT_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RemoveFromInventoryRequest::CopyFrom(const RemoveFromInventoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.RemoveFromInventoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RemoveFromInventoryRequest::InternalSwap(RemoveFromInventoryRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.character_id_, &other->_impl_.character_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.item_id_, &other->_impl_.item_id_, arena);
  swap(_impl_.removal_amount_, other->_impl_.removal_amount_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata RemoveFromInventoryRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RemoveFromInventoryResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RemoveFromInventoryResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RemoveFromInventoryResponse, _impl_._has_bits_);
};

RemoveFromInventoryResponse::RemoveFromInventoryResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RemoveFromInventoryResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dnd5e.api.v1alpha1.RemoveFromInventoryResponse)
}
PROTOBUF_NDEBUG_INLINE RemoveFromInventoryResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::dnd5e::api::v1alpha1::RemoveFromInventoryResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RemoveFromInventoryResponse::RemoveFromInventoryResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RemoveFromInventoryResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RemoveFromInventoryResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RemoveFromInventoryResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.character_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.character_)
                : nullptr;
  _impl_.quantity_removed_ = from._impl_.quantity_removed_;

  // @@protoc_insertion_point(copy_constructor:dnd5e.api.v1alpha1.RemoveFromInventoryResponse)
}
PROTOBUF_NDEBUG_INLINE RemoveFromInventoryResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void RemoveFromInventoryResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, character_),
           0,
           offsetof(Impl_, quantity_removed_) -
               offsetof(Impl_, character_) +
               sizeof(Impl_::quantity_removed_));
}
RemoveFromInventoryResponse::~RemoveFromInventoryResponse() {
  // @@protoc_insertion_point(destructor:dnd5e.api.v1alpha1.RemoveFromInventoryResponse)
  SharedDtor(*this);
}
inline void RemoveFromInventoryResponse::SharedDtor(MessageLite& self) {
  RemoveFromInventoryResponse& this_ = static_cast<RemoveFromInventoryResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.character_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RemoveFromInventoryResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RemoveFromInventoryResponse(arena);
}
constexpr auto RemoveFromInventoryResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RemoveFromInventoryResponse),
                                            alignof(RemoveFromInventoryResponse));
}
constexpr auto RemoveFromInventoryResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RemoveFromInventoryResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RemoveFromInventoryResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RemoveFromInventoryResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RemoveFromInventoryResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RemoveFromInventoryResponse>(), &RemoveFromInventoryResponse::ByteSizeLong,
              &RemoveFromInventoryResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RemoveFromInventoryResponse, _impl_._cached_size_),
          false,
      },
      &RemoveFromInventoryResponse::kDescriptorMethods,
      &descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RemoveFromInventoryResponse_class_data_ =
        RemoveFromInventoryResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RemoveFromInventoryResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RemoveFromInventoryResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RemoveFromInventoryResponse_class_data_.tc_table);
  return RemoveFromInventoryResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
RemoveFromInventoryResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RemoveFromInventoryResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RemoveFromInventoryResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::RemoveFromInventoryResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 quantity_removed = 2 [json_name = "quantityRemoved"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RemoveFromInventoryResponse, _impl_.quantity_removed_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(RemoveFromInventoryResponse, _impl_.quantity_removed_)}},
    // .dnd5e.api.v1alpha1.Character character = 1 [json_name = "character"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RemoveFromInventoryResponse, _impl_.character_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dnd5e.api.v1alpha1.Character character = 1 [json_name = "character"];
    {PROTOBUF_FIELD_OFFSET(RemoveFromInventoryResponse, _impl_.character_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 quantity_removed = 2 [json_name = "quantityRemoved"];
    {PROTOBUF_FIELD_OFFSET(RemoveFromInventoryResponse, _impl_.quantity_removed_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dnd5e::api::v1alpha1::Character>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void RemoveFromInventoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dnd5e.api.v1alpha1.RemoveFromInventoryResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.character_ != nullptr);
    _impl_.character_->Clear();
  }
  _impl_.quantity_removed_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RemoveFromInventoryResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RemoveFromInventoryResponse& this_ = static_cast<const RemoveFromInventoryResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RemoveFromInventoryResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RemoveFromInventoryResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:dnd5e.api.v1alpha1.RemoveFromInventoryResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dnd5e.api.v1alpha1.Character character = 1 [json_name = "character"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.character_, this_._impl_.character_->GetCachedSize(), target,
        stream);
  }

  // int32 quantity_removed = 2 [json_name = "quantityRemoved"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    if (this_._internal_quantity_removed() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_quantity_removed(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dnd5e.api.v1alpha1.RemoveFromInventoryResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RemoveFromInventoryResponse::ByteSizeLong(const MessageLite& base) {
  const RemoveFromInventoryResponse& this_ = static_cast<const RemoveFromInventoryResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RemoveFromInventoryResponse::ByteSizeLong() const {
  const RemoveFromInventoryResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:dnd5e.api.v1alpha1.RemoveFromInventoryResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // .dnd5e.api.v1alpha1.Character character = 1 [json_name = "character"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.character_);
    }
    // int32 quantity_removed = 2 [json_name = "quantityRemoved"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_quantity_removed() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_quantity_removed());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RemoveFromInventoryResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RemoveFromInventoryResponse*>(&to_msg);
  auto& from = static_cast<const RemoveFromInventoryResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dnd5e.api.v1alpha1.RemoveFromInventoryResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.character_ != nullptr);
      if (_this->_impl_.character_ == nullptr) {
        _this->_impl_.character_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.character_);
      } else {
        _this->_impl_.character_->MergeFrom(*from._impl_.character_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_quantity_removed() != 0) {
        _this->_impl_.quantity_removed_ = from._impl_.quantity_removed_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RemoveFromInventoryResponse::CopyFrom(const RemoveFromInventoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dnd5e.api.v1alpha1.RemoveFromInventoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RemoveFromInventoryResponse::InternalSwap(RemoveFromInventoryResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RemoveFromInventoryResponse, _impl_.quantity_removed_)
      + sizeof(RemoveFromInventoryResponse::_impl_.quantity_removed_)
      - PROTOBUF_FIELD_OFFSET(RemoveFromInventoryResponse, _impl_.character_)>(
          reinterpret_cast<char*>(&_impl_.character_),
          reinterpret_cast<char*>(&other->_impl_.character_));
}

::google::protobuf::Metadata RemoveFromInventoryResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace api
}  // namespace dnd5e
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_dnd5e_2fapi_2fv1alpha1_2fcharacter_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
