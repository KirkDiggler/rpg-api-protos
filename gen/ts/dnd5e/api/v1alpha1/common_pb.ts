// @generated by protoc-gen-es v2.7.0 with parameter "target=ts"
// @generated from file dnd5e/api/v1alpha1/common.proto (package dnd5e.api.v1alpha1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file dnd5e/api/v1alpha1/common.proto.
 */
export const file_dnd5e_api_v1alpha1_common: GenFile = /*@__PURE__*/
  fileDesc("Ch9kbmQ1ZS9hcGkvdjFhbHBoYTEvY29tbW9uLnByb3RvEhJkbmQ1ZS5hcGkudjFhbHBoYTEiPwoPVmFsaWRhdGlvbkVycm9yEg0KBWZpZWxkGAEgASgJEg8KB21lc3NhZ2UYAiABKAkSDAoEY29kZRgDIAEoCSJLCghEaWNlUm9sbBINCgVjb3VudBgBIAEoBRIMCgRzaXplGAIgASgFEhAKCG1vZGlmaWVyGAMgASgFEhAKCG5vdGF0aW9uGAQgASgJIkcKCE1vZGlmaWVyEg4KBnRhcmdldBgBIAEoCRINCgV2YWx1ZRgCIAEoBRIOCgZzb3VyY2UYAyABKAkSDAoEdHlwZRgEIAEoCSJOCghSZXNvdXJjZRIMCgRuYW1lGAEgASgJEg8KB2N1cnJlbnQYAiABKAUSDwoHbWF4aW11bRgDIAEoBRISCgpyZWZyZXNoX29uGAQgASgJIkoKCUNvbmRpdGlvbhIMCgRuYW1lGAEgASgJEg4KBnNvdXJjZRgCIAEoCRIQCghkdXJhdGlvbhgDIAEoBRINCgVub3RlcxgEIAEoCSJBChFWYWxpZGF0aW9uV2FybmluZxINCgVmaWVsZBgBIAEoCRIPCgdtZXNzYWdlGAIgASgJEgwKBHR5cGUYAyABKAki/QMKEFZhbGlkYXRpb25SZXN1bHQSEAoIaXNfdmFsaWQYASABKAgSOgoGaXNzdWVzGAIgAygLMiouZG5kNWUuYXBpLnYxYWxwaGExLlZhbGlkYXRpb25SZXN1bHQuSXNzdWUSEwoLZXJyb3JfY291bnQYAyABKAUSGAoQaW5jb21wbGV0ZV9jb3VudBgEIAEoBRIVCg13YXJuaW5nX2NvdW50GAUgASgFGusBCgVJc3N1ZRI/CghzZXZlcml0eRgBIAEoDjItLmRuZDVlLmFwaS52MWFscGhhMS5WYWxpZGF0aW9uUmVzdWx0LlNldmVyaXR5EjQKBnNvdXJjZRgCIAEoDjIkLmRuZDVlLmFwaS52MWFscGhhMS5WYWxpZGF0aW9uU291cmNlEjIKBWZpZWxkGAMgASgOMiMuZG5kNWUuYXBpLnYxYWxwaGExLlZhbGlkYXRpb25GaWVsZBIPCgdtZXNzYWdlGAQgASgJEg8KB2RldGFpbHMYBSADKAkSFQoNc291cmNlX2RldGFpbBgGIAEoCSJnCghTZXZlcml0eRIYChRTRVZFUklUWV9VTlNQRUNJRklFRBAAEhIKDlNFVkVSSVRZX0VSUk9SEAESFwoTU0VWRVJJVFlfSU5DT01QTEVURRACEhQKEFNFVkVSSVRZX1dBUk5JTkcQAyqQAgoQVmFsaWRhdGlvblNvdXJjZRIhCh1WQUxJREFUSU9OX1NPVVJDRV9VTlNQRUNJRklFRBAAEhoKFlZBTElEQVRJT05fU09VUkNFX1JBQ0UQARIbChdWQUxJREFUSU9OX1NPVVJDRV9DTEFTUxACEiAKHFZBTElEQVRJT05fU09VUkNFX0JBQ0tHUk9VTkQQAxIkCiBWQUxJREFUSU9OX1NPVVJDRV9BQklMSVRZX1NDT1JFUxAEEhoKFlZBTElEQVRJT05fU09VUkNFX05BTUUQBRIfChtWQUxJREFUSU9OX1NPVVJDRV9BTElHTk1FTlQQBhIbChdWQUxJREFUSU9OX1NPVVJDRV9MRVZFTBAHKu0DCg9WYWxpZGF0aW9uRmllbGQSIAocVkFMSURBVElPTl9GSUVMRF9VTlNQRUNJRklFRBAAEhsKF1ZBTElEQVRJT05fRklFTERfU0tJTExTEAESHgoaVkFMSURBVElPTl9GSUVMRF9MQU5HVUFHRVMQAhIeChpWQUxJREFUSU9OX0ZJRUxEX0VRVUlQTUVOVBADEhsKF1ZBTElEQVRJT05fRklFTERfU1BFTExTEAQSHQoZVkFMSURBVElPTl9GSUVMRF9DQU5UUklQUxAFEhoKFlZBTElEQVRJT05fRklFTERfVE9PTFMQBhIeChpWQUxJREFUSU9OX0ZJRUxEX0VYUEVSVElTRRAHEiMKH1ZBTElEQVRJT05fRklFTERfRklHSFRJTkdfU1RZTEUQCBIjCh9WQUxJREFUSU9OX0ZJRUxEX0FCSUxJVFlfU0NPUkVTEAkSGQoVVkFMSURBVElPTl9GSUVMRF9OQU1FEAoSGQoVVkFMSURBVElPTl9GSUVMRF9SQUNFEAsSGgoWVkFMSURBVElPTl9GSUVMRF9DTEFTUxAMEh8KG1ZBTElEQVRJT05fRklFTERfQkFDS0dST1VORBANEiYKIlZBTElEQVRJT05fRklFTERfRFJBQ09OSUNfQU5DRVNUUlkQDkLcAQoWY29tLmRuZDVlLmFwaS52MWFscGhhMUILQ29tbW9uUHJvdG9QAVpLZ2l0aHViLmNvbS9LaXJrRGlnZ2xlci9ycGctYXBpLXByb3Rvcy9nZW4vZ28vZG5kNWUvYXBpL3YxYWxwaGExO2FwaXYxYWxwaGExogIDREFYqgISRG5kNWUuQXBpLlYxYWxwaGExygISRG5kNWVcQXBpXFYxYWxwaGEx4gIeRG5kNWVcQXBpXFYxYWxwaGExXEdQQk1ldGFkYXRh6gIURG5kNWU6OkFwaTo6VjFhbHBoYTFiBnByb3RvMw");

/**
 * Common error details for D&D 5e validation
 *
 * @generated from message dnd5e.api.v1alpha1.ValidationError
 */
export type ValidationError = Message<"dnd5e.api.v1alpha1.ValidationError"> & {
  /**
   * Field that failed validation
   *
   * @generated from field: string field = 1;
   */
  field: string;

  /**
   * Human-readable error message
   *
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * Error code for programmatic handling
   *
   * @generated from field: string code = 3;
   */
  code: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ValidationError.
 * Use `create(ValidationErrorSchema)` to create a new message.
 */
export const ValidationErrorSchema: GenMessage<ValidationError> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_common, 0);

/**
 * Dice notation for various game mechanics
 *
 * @generated from message dnd5e.api.v1alpha1.DiceRoll
 */
export type DiceRoll = Message<"dnd5e.api.v1alpha1.DiceRoll"> & {
  /**
   * Number of dice
   *
   * @generated from field: int32 count = 1;
   */
  count: number;

  /**
   * Die size (4, 6, 8, 10, 12, 20, 100)
   *
   * @generated from field: int32 size = 2;
   */
  size: number;

  /**
   * Modifier to add/subtract
   *
   * @generated from field: int32 modifier = 3;
   */
  modifier: number;

  /**
   * String representation (e.g., "1d20+5")
   *
   * @generated from field: string notation = 4;
   */
  notation: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.DiceRoll.
 * Use `create(DiceRollSchema)` to create a new message.
 */
export const DiceRollSchema: GenMessage<DiceRoll> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_common, 1);

/**
 * Modifier with a source for tracking
 *
 * @generated from message dnd5e.api.v1alpha1.Modifier
 */
export type Modifier = Message<"dnd5e.api.v1alpha1.Modifier"> & {
  /**
   * The ability or skill being modified
   *
   * @generated from field: string target = 1;
   */
  target: string;

  /**
   * The modifier value (can be negative)
   *
   * @generated from field: int32 value = 2;
   */
  value: number;

  /**
   * Source of the modifier (e.g., "racial", "class feature")
   *
   * @generated from field: string source = 3;
   */
  source: string;

  /**
   * Type of modifier (e.g., "enhancement", "circumstance")
   *
   * @generated from field: string type = 4;
   */
  type: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.Modifier.
 * Use `create(ModifierSchema)` to create a new message.
 */
export const ModifierSchema: GenMessage<Modifier> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_common, 2);

/**
 * Resource tracking (spell slots, hit dice, etc.)
 *
 * @generated from message dnd5e.api.v1alpha1.Resource
 */
export type Resource = Message<"dnd5e.api.v1alpha1.Resource"> & {
  /**
   * Resource name
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Current value
   *
   * @generated from field: int32 current = 2;
   */
  current: number;

  /**
   * Maximum value
   *
   * @generated from field: int32 maximum = 3;
   */
  maximum: number;

  /**
   * When the resource refreshes ("short rest", "long rest", "daily")
   *
   * @generated from field: string refresh_on = 4;
   */
  refreshOn: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.Resource.
 * Use `create(ResourceSchema)` to create a new message.
 */
export const ResourceSchema: GenMessage<Resource> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_common, 3);

/**
 * Status effect or condition
 *
 * @generated from message dnd5e.api.v1alpha1.Condition
 */
export type Condition = Message<"dnd5e.api.v1alpha1.Condition"> & {
  /**
   * Condition name (e.g., "poisoned", "frightened")
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Source of the condition
   *
   * @generated from field: string source = 2;
   */
  source: string;

  /**
   * Duration in rounds (-1 for indefinite)
   *
   * @generated from field: int32 duration = 3;
   */
  duration: number;

  /**
   * Any additional notes
   *
   * @generated from field: string notes = 4;
   */
  notes: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.Condition.
 * Use `create(ConditionSchema)` to create a new message.
 */
export const ConditionSchema: GenMessage<Condition> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_common, 4);

/**
 * Validation warning (non-blocking)
 *
 * @generated from message dnd5e.api.v1alpha1.ValidationWarning
 */
export type ValidationWarning = Message<"dnd5e.api.v1alpha1.ValidationWarning"> & {
  /**
   * Field with warning
   *
   * @generated from field: string field = 1;
   */
  field: string;

  /**
   * Warning message
   *
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * Warning severity/type
   *
   * @generated from field: string type = 3;
   */
  type: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ValidationWarning.
 * Use `create(ValidationWarningSchema)` to create a new message.
 */
export const ValidationWarningSchema: GenMessage<ValidationWarning> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_common, 5);

/**
 * Validation result matching toolkit's 3-tier system
 *
 * @generated from message dnd5e.api.v1alpha1.ValidationResult
 */
export type ValidationResult = Message<"dnd5e.api.v1alpha1.ValidationResult"> & {
  /**
   * Whether the character/draft is valid for its current state
   *
   * @generated from field: bool is_valid = 1;
   */
  isValid: boolean;

  /**
   * All validation issues found
   *
   * @generated from field: repeated dnd5e.api.v1alpha1.ValidationResult.Issue issues = 2;
   */
  issues: ValidationResult_Issue[];

  /**
   * Quick access to counts by severity
   *
   * @generated from field: int32 error_count = 3;
   */
  errorCount: number;

  /**
   * @generated from field: int32 incomplete_count = 4;
   */
  incompleteCount: number;

  /**
   * @generated from field: int32 warning_count = 5;
   */
  warningCount: number;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ValidationResult.
 * Use `create(ValidationResultSchema)` to create a new message.
 */
export const ValidationResultSchema: GenMessage<ValidationResult> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_common, 6);

/**
 * Individual validation issue
 *
 * @generated from message dnd5e.api.v1alpha1.ValidationResult.Issue
 */
export type ValidationResult_Issue = Message<"dnd5e.api.v1alpha1.ValidationResult.Issue"> & {
  /**
   * @generated from field: dnd5e.api.v1alpha1.ValidationResult.Severity severity = 1;
   */
  severity: ValidationResult_Severity;

  /**
   * Where the issue originates
   *
   * @generated from field: dnd5e.api.v1alpha1.ValidationSource source = 2;
   */
  source: ValidationSource;

  /**
   * What field has the issue
   *
   * @generated from field: dnd5e.api.v1alpha1.ValidationField field = 3;
   */
  field: ValidationField;

  /**
   * Human-readable description
   *
   * @generated from field: string message = 4;
   */
  message: string;

  /**
   * Additional context (e.g., conflicting choices)
   *
   * @generated from field: repeated string details = 5;
   */
  details: string[];

  /**
   * Optional: specific source ID (e.g., "fighter", "elf")
   *
   * @generated from field: string source_detail = 6;
   */
  sourceDetail: string;
};

/**
 * Describes the message dnd5e.api.v1alpha1.ValidationResult.Issue.
 * Use `create(ValidationResult_IssueSchema)` to create a new message.
 */
export const ValidationResult_IssueSchema: GenMessage<ValidationResult_Issue> = /*@__PURE__*/
  messageDesc(file_dnd5e_api_v1alpha1_common, 6, 0);

/**
 * Severity levels for validation issues
 *
 * @generated from enum dnd5e.api.v1alpha1.ValidationResult.Severity
 */
export enum ValidationResult_Severity {
  /**
   * @generated from enum value: SEVERITY_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Critical issues that prevent character use
   *
   * @generated from enum value: SEVERITY_ERROR = 1;
   */
  ERROR = 1,

  /**
   * Missing required choices (OK for drafts)
   *
   * @generated from enum value: SEVERITY_INCOMPLETE = 2;
   */
  INCOMPLETE = 2,

  /**
   * Non-blocking issues like duplicates
   *
   * @generated from enum value: SEVERITY_WARNING = 3;
   */
  WARNING = 3,
}

/**
 * Describes the enum dnd5e.api.v1alpha1.ValidationResult.Severity.
 */
export const ValidationResult_SeveritySchema: GenEnum<ValidationResult_Severity> = /*@__PURE__*/
  enumDesc(file_dnd5e_api_v1alpha1_common, 6, 0);

/**
 * Sources of validation issues (matches toolkit constants)
 *
 * @generated from enum dnd5e.api.v1alpha1.ValidationSource
 */
export enum ValidationSource {
  /**
   * @generated from enum value: VALIDATION_SOURCE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: VALIDATION_SOURCE_RACE = 1;
   */
  RACE = 1,

  /**
   * @generated from enum value: VALIDATION_SOURCE_CLASS = 2;
   */
  CLASS = 2,

  /**
   * @generated from enum value: VALIDATION_SOURCE_BACKGROUND = 3;
   */
  BACKGROUND = 3,

  /**
   * @generated from enum value: VALIDATION_SOURCE_ABILITY_SCORES = 4;
   */
  ABILITY_SCORES = 4,

  /**
   * @generated from enum value: VALIDATION_SOURCE_NAME = 5;
   */
  NAME = 5,

  /**
   * @generated from enum value: VALIDATION_SOURCE_ALIGNMENT = 6;
   */
  ALIGNMENT = 6,

  /**
   * @generated from enum value: VALIDATION_SOURCE_LEVEL = 7;
   */
  LEVEL = 7,
}

/**
 * Describes the enum dnd5e.api.v1alpha1.ValidationSource.
 */
export const ValidationSourceSchema: GenEnum<ValidationSource> = /*@__PURE__*/
  enumDesc(file_dnd5e_api_v1alpha1_common, 0);

/**
 * Fields that can have validation issues (matches toolkit constants)
 *
 * @generated from enum dnd5e.api.v1alpha1.ValidationField
 */
export enum ValidationField {
  /**
   * @generated from enum value: VALIDATION_FIELD_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: VALIDATION_FIELD_SKILLS = 1;
   */
  SKILLS = 1,

  /**
   * @generated from enum value: VALIDATION_FIELD_LANGUAGES = 2;
   */
  LANGUAGES = 2,

  /**
   * @generated from enum value: VALIDATION_FIELD_EQUIPMENT = 3;
   */
  EQUIPMENT = 3,

  /**
   * @generated from enum value: VALIDATION_FIELD_SPELLS = 4;
   */
  SPELLS = 4,

  /**
   * @generated from enum value: VALIDATION_FIELD_CANTRIPS = 5;
   */
  CANTRIPS = 5,

  /**
   * @generated from enum value: VALIDATION_FIELD_TOOLS = 6;
   */
  TOOLS = 6,

  /**
   * @generated from enum value: VALIDATION_FIELD_EXPERTISE = 7;
   */
  EXPERTISE = 7,

  /**
   * @generated from enum value: VALIDATION_FIELD_FIGHTING_STYLE = 8;
   */
  FIGHTING_STYLE = 8,

  /**
   * @generated from enum value: VALIDATION_FIELD_ABILITY_SCORES = 9;
   */
  ABILITY_SCORES = 9,

  /**
   * @generated from enum value: VALIDATION_FIELD_NAME = 10;
   */
  NAME = 10,

  /**
   * @generated from enum value: VALIDATION_FIELD_RACE = 11;
   */
  RACE = 11,

  /**
   * @generated from enum value: VALIDATION_FIELD_CLASS = 12;
   */
  CLASS = 12,

  /**
   * @generated from enum value: VALIDATION_FIELD_BACKGROUND = 13;
   */
  BACKGROUND = 13,

  /**
   * @generated from enum value: VALIDATION_FIELD_DRACONIC_ANCESTRY = 14;
   */
  DRACONIC_ANCESTRY = 14,
}

/**
 * Describes the enum dnd5e.api.v1alpha1.ValidationField.
 */
export const ValidationFieldSchema: GenEnum<ValidationField> = /*@__PURE__*/
  enumDesc(file_dnd5e_api_v1alpha1_common, 1);

