// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: dnd5e/api/v1alpha1/common.proto

package apiv1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Common error details for D&D 5e validation
type ValidationError struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Field that failed validation
	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	// Human-readable error message
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Error code for programmatic handling
	Code          string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidationError) Reset() {
	*x = ValidationError{}
	mi := &file_dnd5e_api_v1alpha1_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationError) ProtoMessage() {}

func (x *ValidationError) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationError.ProtoReflect.Descriptor instead.
func (*ValidationError) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_common_proto_rawDescGZIP(), []int{0}
}

func (x *ValidationError) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *ValidationError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ValidationError) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// Dice notation for various game mechanics
type DiceRoll struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Number of dice
	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// Die size (4, 6, 8, 10, 12, 20, 100)
	Size int32 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	// Modifier to add/subtract
	Modifier int32 `protobuf:"varint,3,opt,name=modifier,proto3" json:"modifier,omitempty"`
	// String representation (e.g., "1d20+5")
	Notation      string `protobuf:"bytes,4,opt,name=notation,proto3" json:"notation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiceRoll) Reset() {
	*x = DiceRoll{}
	mi := &file_dnd5e_api_v1alpha1_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiceRoll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiceRoll) ProtoMessage() {}

func (x *DiceRoll) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiceRoll.ProtoReflect.Descriptor instead.
func (*DiceRoll) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_common_proto_rawDescGZIP(), []int{1}
}

func (x *DiceRoll) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *DiceRoll) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *DiceRoll) GetModifier() int32 {
	if x != nil {
		return x.Modifier
	}
	return 0
}

func (x *DiceRoll) GetNotation() string {
	if x != nil {
		return x.Notation
	}
	return ""
}

// Modifier with a source for tracking
type Modifier struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ability or skill being modified
	Target string `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	// The modifier value (can be negative)
	Value int32 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	// Source of the modifier (e.g., "racial", "class feature")
	Source string `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	// Type of modifier (e.g., "enhancement", "circumstance")
	Type          string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Modifier) Reset() {
	*x = Modifier{}
	mi := &file_dnd5e_api_v1alpha1_common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Modifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Modifier) ProtoMessage() {}

func (x *Modifier) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Modifier.ProtoReflect.Descriptor instead.
func (*Modifier) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_common_proto_rawDescGZIP(), []int{2}
}

func (x *Modifier) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *Modifier) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Modifier) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Modifier) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// Resource tracking (spell slots, hit dice, etc.)
type Resource struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Resource name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Current value
	Current int32 `protobuf:"varint,2,opt,name=current,proto3" json:"current,omitempty"`
	// Maximum value
	Maximum int32 `protobuf:"varint,3,opt,name=maximum,proto3" json:"maximum,omitempty"`
	// When the resource refreshes ("short rest", "long rest", "daily")
	RefreshOn     string `protobuf:"bytes,4,opt,name=refresh_on,json=refreshOn,proto3" json:"refresh_on,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Resource) Reset() {
	*x = Resource{}
	mi := &file_dnd5e_api_v1alpha1_common_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_common_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_common_proto_rawDescGZIP(), []int{3}
}

func (x *Resource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Resource) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *Resource) GetMaximum() int32 {
	if x != nil {
		return x.Maximum
	}
	return 0
}

func (x *Resource) GetRefreshOn() string {
	if x != nil {
		return x.RefreshOn
	}
	return ""
}

// Status effect or condition
type Condition struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Condition name (e.g., "poisoned", "frightened")
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Source of the condition
	Source string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	// Duration in rounds (-1 for indefinite)
	Duration int32 `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	// Any additional notes
	Notes         string `protobuf:"bytes,4,opt,name=notes,proto3" json:"notes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Condition) Reset() {
	*x = Condition{}
	mi := &file_dnd5e_api_v1alpha1_common_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Condition) ProtoMessage() {}

func (x *Condition) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_common_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Condition.ProtoReflect.Descriptor instead.
func (*Condition) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_common_proto_rawDescGZIP(), []int{4}
}

func (x *Condition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Condition) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Condition) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Condition) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

// Validation warning (non-blocking)
type ValidationWarning struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Field with warning
	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	// Warning message
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Warning severity/type
	Type          string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidationWarning) Reset() {
	*x = ValidationWarning{}
	mi := &file_dnd5e_api_v1alpha1_common_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationWarning) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationWarning) ProtoMessage() {}

func (x *ValidationWarning) ProtoReflect() protoreflect.Message {
	mi := &file_dnd5e_api_v1alpha1_common_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationWarning.ProtoReflect.Descriptor instead.
func (*ValidationWarning) Descriptor() ([]byte, []int) {
	return file_dnd5e_api_v1alpha1_common_proto_rawDescGZIP(), []int{5}
}

func (x *ValidationWarning) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *ValidationWarning) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ValidationWarning) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

var File_dnd5e_api_v1alpha1_common_proto protoreflect.FileDescriptor

const file_dnd5e_api_v1alpha1_common_proto_rawDesc = "" +
	"\n" +
	"\x1fdnd5e/api/v1alpha1/common.proto\x12\x12dnd5e.api.v1alpha1\"U\n" +
	"\x0fValidationError\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x12\n" +
	"\x04code\x18\x03 \x01(\tR\x04code\"l\n" +
	"\bDiceRoll\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x05R\x04size\x12\x1a\n" +
	"\bmodifier\x18\x03 \x01(\x05R\bmodifier\x12\x1a\n" +
	"\bnotation\x18\x04 \x01(\tR\bnotation\"d\n" +
	"\bModifier\x12\x16\n" +
	"\x06target\x18\x01 \x01(\tR\x06target\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value\x12\x16\n" +
	"\x06source\x18\x03 \x01(\tR\x06source\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\"q\n" +
	"\bResource\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\acurrent\x18\x02 \x01(\x05R\acurrent\x12\x18\n" +
	"\amaximum\x18\x03 \x01(\x05R\amaximum\x12\x1d\n" +
	"\n" +
	"refresh_on\x18\x04 \x01(\tR\trefreshOn\"i\n" +
	"\tCondition\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06source\x18\x02 \x01(\tR\x06source\x12\x1a\n" +
	"\bduration\x18\x03 \x01(\x05R\bduration\x12\x14\n" +
	"\x05notes\x18\x04 \x01(\tR\x05notes\"W\n" +
	"\x11ValidationWarning\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04typeB\xb7\x01\n" +
	"\x16com.dnd5e.api.v1alpha1B\vCommonProtoP\x01Z&clients/dnd5e/api/v1alpha1;apiv1alpha1\xa2\x02\x03DAX\xaa\x02\x12Dnd5e.Api.V1alpha1\xca\x02\x12Dnd5e\\Api\\V1alpha1\xe2\x02\x1eDnd5e\\Api\\V1alpha1\\GPBMetadata\xea\x02\x14Dnd5e::Api::V1alpha1b\x06proto3"

var (
	file_dnd5e_api_v1alpha1_common_proto_rawDescOnce sync.Once
	file_dnd5e_api_v1alpha1_common_proto_rawDescData []byte
)

func file_dnd5e_api_v1alpha1_common_proto_rawDescGZIP() []byte {
	file_dnd5e_api_v1alpha1_common_proto_rawDescOnce.Do(func() {
		file_dnd5e_api_v1alpha1_common_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dnd5e_api_v1alpha1_common_proto_rawDesc), len(file_dnd5e_api_v1alpha1_common_proto_rawDesc)))
	})
	return file_dnd5e_api_v1alpha1_common_proto_rawDescData
}

var file_dnd5e_api_v1alpha1_common_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_dnd5e_api_v1alpha1_common_proto_goTypes = []any{
	(*ValidationError)(nil),   // 0: dnd5e.api.v1alpha1.ValidationError
	(*DiceRoll)(nil),          // 1: dnd5e.api.v1alpha1.DiceRoll
	(*Modifier)(nil),          // 2: dnd5e.api.v1alpha1.Modifier
	(*Resource)(nil),          // 3: dnd5e.api.v1alpha1.Resource
	(*Condition)(nil),         // 4: dnd5e.api.v1alpha1.Condition
	(*ValidationWarning)(nil), // 5: dnd5e.api.v1alpha1.ValidationWarning
}
var file_dnd5e_api_v1alpha1_common_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_dnd5e_api_v1alpha1_common_proto_init() }
func file_dnd5e_api_v1alpha1_common_proto_init() {
	if File_dnd5e_api_v1alpha1_common_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dnd5e_api_v1alpha1_common_proto_rawDesc), len(file_dnd5e_api_v1alpha1_common_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dnd5e_api_v1alpha1_common_proto_goTypes,
		DependencyIndexes: file_dnd5e_api_v1alpha1_common_proto_depIdxs,
		MessageInfos:      file_dnd5e_api_v1alpha1_common_proto_msgTypes,
	}.Build()
	File_dnd5e_api_v1alpha1_common_proto = out.File
	file_dnd5e_api_v1alpha1_common_proto_goTypes = nil
	file_dnd5e_api_v1alpha1_common_proto_depIdxs = nil
}
