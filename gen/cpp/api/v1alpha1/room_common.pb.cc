// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: api/v1alpha1/room_common.proto
// Protobuf C++ Version: 6.32.0

#include "api/v1alpha1/room_common.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace api {
namespace v1alpha1 {
template <typename>
PROTOBUF_CONSTEXPR Wall_PropertiesEntry_DoNotUse::Wall_PropertiesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Wall_PropertiesEntry_DoNotUse::MapEntry(Wall_PropertiesEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Wall_PropertiesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Wall_PropertiesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Wall_PropertiesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Wall_PropertiesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Wall_PropertiesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Wall_PropertiesEntry_DoNotUseDefaultTypeInternal _Wall_PropertiesEntry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR TerrainFeature_PropertiesEntry_DoNotUse::TerrainFeature_PropertiesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : TerrainFeature_PropertiesEntry_DoNotUse::MapEntry(TerrainFeature_PropertiesEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : TerrainFeature_PropertiesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct TerrainFeature_PropertiesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TerrainFeature_PropertiesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TerrainFeature_PropertiesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TerrainFeature_PropertiesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TerrainFeature_PropertiesEntry_DoNotUseDefaultTypeInternal _TerrainFeature_PropertiesEntry_DoNotUse_default_instance_;

inline constexpr RoomDimensions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        width_{0},
        height_{0},
        grid_size_{0},
        grid_type_{static_cast< ::api::v1alpha1::GridType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR RoomDimensions::RoomDimensions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RoomDimensions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RoomDimensionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoomDimensionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoomDimensionsDefaultTypeInternal() {}
  union {
    RoomDimensions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoomDimensionsDefaultTypeInternal _RoomDimensions_default_instance_;

inline constexpr RoomDimensionFilter::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        grid_types_{},
        _grid_types_cached_byte_size_{0},
        min_width_{0},
        max_width_{0},
        min_height_{0},
        max_height_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RoomDimensionFilter::RoomDimensionFilter(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RoomDimensionFilter_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RoomDimensionFilterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoomDimensionFilterDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoomDimensionFilterDefaultTypeInternal() {}
  union {
    RoomDimensionFilter _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoomDimensionFilterDefaultTypeInternal _RoomDimensionFilter_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR RoomConnection_PropertiesEntry_DoNotUse::RoomConnection_PropertiesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : RoomConnection_PropertiesEntry_DoNotUse::MapEntry(RoomConnection_PropertiesEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : RoomConnection_PropertiesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct RoomConnection_PropertiesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoomConnection_PropertiesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoomConnection_PropertiesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    RoomConnection_PropertiesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoomConnection_PropertiesEntry_DoNotUseDefaultTypeInternal _RoomConnection_PropertiesEntry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR RoomConfig_ParametersEntry_DoNotUse::RoomConfig_ParametersEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : RoomConfig_ParametersEntry_DoNotUse::MapEntry(RoomConfig_ParametersEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : RoomConfig_ParametersEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct RoomConfig_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoomConfig_ParametersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoomConfig_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    RoomConfig_ParametersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoomConfig_ParametersEntry_DoNotUseDefaultTypeInternal _RoomConfig_ParametersEntry_DoNotUse_default_instance_;

inline constexpr Position::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        x_{0},
        y_{0},
        z_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Position::Position(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Position_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionDefaultTypeInternal() {}
  union {
    Position _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionDefaultTypeInternal _Position_default_instance_;

inline constexpr PageInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        page_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        next_page_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        page_size_{0},
        total_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PageInfo::PageInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PageInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PageInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PageInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PageInfoDefaultTypeInternal() {}
  union {
    PageInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PageInfoDefaultTypeInternal _PageInfo_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR EntitySpawnConfig_TypeWeightsEntry_DoNotUse::EntitySpawnConfig_TypeWeightsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : EntitySpawnConfig_TypeWeightsEntry_DoNotUse::MapEntry(EntitySpawnConfig_TypeWeightsEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : EntitySpawnConfig_TypeWeightsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct EntitySpawnConfig_TypeWeightsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EntitySpawnConfig_TypeWeightsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EntitySpawnConfig_TypeWeightsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    EntitySpawnConfig_TypeWeightsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EntitySpawnConfig_TypeWeightsEntry_DoNotUseDefaultTypeInternal _EntitySpawnConfig_TypeWeightsEntry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR Entity_PropertiesEntry_DoNotUse::Entity_PropertiesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Entity_PropertiesEntry_DoNotUse::MapEntry(Entity_PropertiesEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Entity_PropertiesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Entity_PropertiesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Entity_PropertiesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Entity_PropertiesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Entity_PropertiesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Entity_PropertiesEntry_DoNotUseDefaultTypeInternal _Entity_PropertiesEntry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR Door_PropertiesEntry_DoNotUse::Door_PropertiesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Door_PropertiesEntry_DoNotUse::MapEntry(Door_PropertiesEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Door_PropertiesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Door_PropertiesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Door_PropertiesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Door_PropertiesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Door_PropertiesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Door_PropertiesEntry_DoNotUseDefaultTypeInternal _Door_PropertiesEntry_DoNotUse_default_instance_;

inline constexpr Wall::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        properties_{},
        material_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        texture_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        start_{nullptr},
        end_{nullptr},
        thickness_{0},
        blocks_movement_{false},
        blocks_line_of_sight_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Wall::Wall(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Wall_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WallDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WallDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WallDefaultTypeInternal() {}
  union {
    Wall _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WallDefaultTypeInternal _Wall_default_instance_;

inline constexpr TerrainFeature::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        area_{},
        properties_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        texture_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        color_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        movement_cost_multiplier_{0},
        blocks_movement_{false},
        blocks_line_of_sight_{false} {}

template <typename>
PROTOBUF_CONSTEXPR TerrainFeature::TerrainFeature(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TerrainFeature_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TerrainFeatureDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TerrainFeatureDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TerrainFeatureDefaultTypeInternal() {}
  union {
    TerrainFeature _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TerrainFeatureDefaultTypeInternal _TerrainFeature_default_instance_;

inline constexpr RoomFilter::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        room_types_{},
        themes_{},
        states_{},
        tags_{},
        session_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        owner_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dimension_filter_{nullptr},
        created_after_{::int64_t{0}},
        created_before_{::int64_t{0}},
        accessed_after_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR RoomFilter::RoomFilter(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RoomFilter_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RoomFilterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoomFilterDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoomFilterDefaultTypeInternal() {}
  union {
    RoomFilter _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoomFilterDefaultTypeInternal _RoomFilter_default_instance_;

inline constexpr RoomError::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        field_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        room_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        entity_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        position_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RoomError::RoomError(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RoomError_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RoomErrorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoomErrorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoomErrorDefaultTypeInternal() {}
  union {
    RoomError _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoomErrorDefaultTypeInternal _RoomError_default_instance_;

inline constexpr RoomConnection::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        properties_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        connected_room_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        connection_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        required_action_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        this_room_position_{nullptr},
        other_room_position_{nullptr},
        is_bidirectional_{false},
        requires_action_{false} {}

template <typename>
PROTOBUF_CONSTEXPR RoomConnection::RoomConnection(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RoomConnection_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RoomConnectionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoomConnectionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoomConnectionDefaultTypeInternal() {}
  union {
    RoomConnection _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoomConnectionDefaultTypeInternal _RoomConnection_default_instance_;

inline constexpr EntitySpawnConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        allowed_types_{},
        forbidden_types_{},
        type_weights_{},
        min_entities_{0},
        max_entities_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EntitySpawnConfig::EntitySpawnConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EntitySpawnConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EntitySpawnConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EntitySpawnConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EntitySpawnConfigDefaultTypeInternal() {}
  union {
    EntitySpawnConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EntitySpawnConfigDefaultTypeInternal _EntitySpawnConfig_default_instance_;

inline constexpr Entity::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        properties_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sprite_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        color_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        position_{nullptr},
        size_{0},
        created_at_{::int64_t{0}},
        updated_at_{::int64_t{0}},
        blocks_movement_{false},
        blocks_line_of_sight_{false},
        is_interactive_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Entity::Entity(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Entity_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EntityDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EntityDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EntityDefaultTypeInternal() {}
  union {
    Entity _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EntityDefaultTypeInternal _Entity_default_instance_;

inline constexpr Door::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        properties_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        state_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        leads_to_room_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        key_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sprite_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        position_{nullptr},
        leads_to_position_{nullptr},
        is_secret_{false},
        requires_key_{false},
        difficulty_class_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Door::Door(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Door_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DoorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DoorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DoorDefaultTypeInternal() {}
  union {
    Door _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DoorDefaultTypeInternal _Door_default_instance_;

inline constexpr ValidationResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        errors_{},
        warnings_{},
        is_valid_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ValidationResult::ValidationResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ValidationResult_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValidationResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidationResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidationResultDefaultTypeInternal() {}
  union {
    ValidationResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidationResultDefaultTypeInternal _ValidationResult_default_instance_;

inline constexpr RoomConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        parameters_{},
        room_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        theme_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        difficulty_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dimensions_{nullptr},
        spawn_config_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RoomConfig::RoomConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RoomConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RoomConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoomConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoomConfigDefaultTypeInternal() {}
  union {
    RoomConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoomConfigDefaultTypeInternal _RoomConfig_default_instance_;

inline constexpr RoomStructure::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        walls_{},
        doors_{},
        terrain_features_{},
        connections_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        seed_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dimensions_{nullptr},
        config_{nullptr},
        generated_at_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR RoomStructure::RoomStructure(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RoomStructure_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RoomStructureDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoomStructureDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoomStructureDefaultTypeInternal() {}
  union {
    RoomStructure _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoomStructureDefaultTypeInternal _RoomStructure_default_instance_;

inline constexpr Room::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        entities_{},
        tags_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        state_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        session_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        owner_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        structure_{nullptr},
        created_at_{::int64_t{0}},
        updated_at_{::int64_t{0}},
        last_accessed_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR Room::Room(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Room_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RoomDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoomDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoomDefaultTypeInternal() {}
  union {
    Room _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoomDefaultTypeInternal _Room_default_instance_;
}  // namespace v1alpha1
}  // namespace api
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_api_2fv1alpha1_2froom_5fcommon_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_api_2fv1alpha1_2froom_5fcommon_2eproto = nullptr;
const ::uint32_t
    TableStruct_api_2fv1alpha1_2froom_5fcommon_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Position, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Position, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Position, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Position, _impl_.z_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomDimensions, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomDimensions, _impl_.width_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomDimensions, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomDimensions, _impl_.grid_type_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomDimensions, _impl_.grid_size_),
        0,
        1,
        3,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Entity_PropertiesEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Entity_PropertiesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Entity_PropertiesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Entity, _impl_._has_bits_),
        16, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Entity, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Entity, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Entity, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Entity, _impl_.position_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Entity, _impl_.size_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Entity, _impl_.properties_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Entity, _impl_.sprite_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Entity, _impl_.color_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Entity, _impl_.blocks_movement_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Entity, _impl_.blocks_line_of_sight_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Entity, _impl_.is_interactive_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Entity, _impl_.created_at_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Entity, _impl_.updated_at_),
        0,
        1,
        2,
        5,
        6,
        ~0u,
        3,
        4,
        9,
        10,
        11,
        7,
        8,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomConfig_ParametersEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomConfig_ParametersEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomConfig_ParametersEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomConfig, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomConfig, _impl_.room_type_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomConfig, _impl_.theme_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomConfig, _impl_.difficulty_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomConfig, _impl_.dimensions_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomConfig, _impl_.parameters_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomConfig, _impl_.spawn_config_),
        0,
        1,
        2,
        3,
        ~0u,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntitySpawnConfig_TypeWeightsEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntitySpawnConfig_TypeWeightsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntitySpawnConfig_TypeWeightsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntitySpawnConfig, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntitySpawnConfig, _impl_.min_entities_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntitySpawnConfig, _impl_.max_entities_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntitySpawnConfig, _impl_.allowed_types_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntitySpawnConfig, _impl_.forbidden_types_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::EntitySpawnConfig, _impl_.type_weights_),
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomStructure, _impl_._has_bits_),
        12, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomStructure, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomStructure, _impl_.dimensions_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomStructure, _impl_.walls_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomStructure, _impl_.doors_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomStructure, _impl_.terrain_features_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomStructure, _impl_.connections_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomStructure, _impl_.seed_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomStructure, _impl_.config_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomStructure, _impl_.generated_at_),
        0,
        2,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        1,
        3,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Wall_PropertiesEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Wall_PropertiesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Wall_PropertiesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Wall, _impl_._has_bits_),
        11, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Wall, _impl_.start_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Wall, _impl_.end_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Wall, _impl_.material_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Wall, _impl_.thickness_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Wall, _impl_.blocks_movement_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Wall, _impl_.blocks_line_of_sight_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Wall, _impl_.texture_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Wall, _impl_.properties_),
        2,
        3,
        0,
        4,
        5,
        6,
        1,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Door_PropertiesEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Door_PropertiesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Door_PropertiesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Door, _impl_._has_bits_),
        15, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Door, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Door, _impl_.position_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Door, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Door, _impl_.state_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Door, _impl_.leads_to_room_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Door, _impl_.leads_to_position_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Door, _impl_.is_secret_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Door, _impl_.requires_key_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Door, _impl_.key_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Door, _impl_.difficulty_class_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Door, _impl_.sprite_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Door, _impl_.properties_),
        0,
        6,
        1,
        2,
        3,
        7,
        8,
        9,
        4,
        10,
        5,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TerrainFeature_PropertiesEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TerrainFeature_PropertiesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TerrainFeature_PropertiesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TerrainFeature, _impl_._has_bits_),
        12, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TerrainFeature, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TerrainFeature, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TerrainFeature, _impl_.area_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TerrainFeature, _impl_.blocks_movement_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TerrainFeature, _impl_.blocks_line_of_sight_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TerrainFeature, _impl_.movement_cost_multiplier_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TerrainFeature, _impl_.properties_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TerrainFeature, _impl_.texture_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::TerrainFeature, _impl_.color_),
        0,
        1,
        ~0u,
        5,
        6,
        4,
        ~0u,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomConnection_PropertiesEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomConnection_PropertiesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomConnection_PropertiesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomConnection, _impl_._has_bits_),
        12, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomConnection, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomConnection, _impl_.connected_room_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomConnection, _impl_.connection_type_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomConnection, _impl_.this_room_position_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomConnection, _impl_.other_room_position_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomConnection, _impl_.is_bidirectional_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomConnection, _impl_.requires_action_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomConnection, _impl_.required_action_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomConnection, _impl_.properties_),
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        3,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Room, _impl_._has_bits_),
        15, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Room, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Room, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Room, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Room, _impl_.structure_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Room, _impl_.entities_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Room, _impl_.state_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Room, _impl_.session_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Room, _impl_.owner_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Room, _impl_.created_at_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Room, _impl_.updated_at_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Room, _impl_.last_accessed_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::Room, _impl_.tags_),
        0,
        1,
        2,
        6,
        ~0u,
        3,
        4,
        5,
        7,
        8,
        9,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomError, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomError, _impl_.code_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomError, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomError, _impl_.field_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomError, _impl_.room_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomError, _impl_.position_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomError, _impl_.entity_id_),
        0,
        1,
        2,
        3,
        5,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidationResult, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidationResult, _impl_.is_valid_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidationResult, _impl_.errors_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::ValidationResult, _impl_.warnings_),
        0,
        ~0u,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PageInfo, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PageInfo, _impl_.page_size_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PageInfo, _impl_.page_token_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PageInfo, _impl_.next_page_token_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::PageInfo, _impl_.total_size_),
        2,
        0,
        1,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomFilter, _impl_._has_bits_),
        13, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomFilter, _impl_.room_types_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomFilter, _impl_.themes_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomFilter, _impl_.states_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomFilter, _impl_.session_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomFilter, _impl_.owner_id_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomFilter, _impl_.tags_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomFilter, _impl_.dimension_filter_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomFilter, _impl_.created_after_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomFilter, _impl_.created_before_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomFilter, _impl_.accessed_after_),
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        2,
        3,
        4,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomDimensionFilter, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomDimensionFilter, _impl_.min_width_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomDimensionFilter, _impl_.max_width_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomDimensionFilter, _impl_.min_height_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomDimensionFilter, _impl_.max_height_),
        PROTOBUF_FIELD_OFFSET(::api::v1alpha1::RoomDimensionFilter, _impl_.grid_types_),
        0,
        1,
        2,
        3,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::api::v1alpha1::Position)},
        {9, sizeof(::api::v1alpha1::RoomDimensions)},
        {20, sizeof(::api::v1alpha1::Entity_PropertiesEntry_DoNotUse)},
        {27, sizeof(::api::v1alpha1::Entity)},
        {56, sizeof(::api::v1alpha1::RoomConfig_ParametersEntry_DoNotUse)},
        {63, sizeof(::api::v1alpha1::RoomConfig)},
        {78, sizeof(::api::v1alpha1::EntitySpawnConfig_TypeWeightsEntry_DoNotUse)},
        {85, sizeof(::api::v1alpha1::EntitySpawnConfig)},
        {98, sizeof(::api::v1alpha1::RoomStructure)},
        {119, sizeof(::api::v1alpha1::Wall_PropertiesEntry_DoNotUse)},
        {126, sizeof(::api::v1alpha1::Wall)},
        {145, sizeof(::api::v1alpha1::Door_PropertiesEntry_DoNotUse)},
        {152, sizeof(::api::v1alpha1::Door)},
        {179, sizeof(::api::v1alpha1::TerrainFeature_PropertiesEntry_DoNotUse)},
        {186, sizeof(::api::v1alpha1::TerrainFeature)},
        {207, sizeof(::api::v1alpha1::RoomConnection_PropertiesEntry_DoNotUse)},
        {214, sizeof(::api::v1alpha1::RoomConnection)},
        {235, sizeof(::api::v1alpha1::Room)},
        {262, sizeof(::api::v1alpha1::RoomError)},
        {277, sizeof(::api::v1alpha1::ValidationResult)},
        {286, sizeof(::api::v1alpha1::PageInfo)},
        {297, sizeof(::api::v1alpha1::RoomFilter)},
        {320, sizeof(::api::v1alpha1::RoomDimensionFilter)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::api::v1alpha1::_Position_default_instance_._instance,
    &::api::v1alpha1::_RoomDimensions_default_instance_._instance,
    &::api::v1alpha1::_Entity_PropertiesEntry_DoNotUse_default_instance_._instance,
    &::api::v1alpha1::_Entity_default_instance_._instance,
    &::api::v1alpha1::_RoomConfig_ParametersEntry_DoNotUse_default_instance_._instance,
    &::api::v1alpha1::_RoomConfig_default_instance_._instance,
    &::api::v1alpha1::_EntitySpawnConfig_TypeWeightsEntry_DoNotUse_default_instance_._instance,
    &::api::v1alpha1::_EntitySpawnConfig_default_instance_._instance,
    &::api::v1alpha1::_RoomStructure_default_instance_._instance,
    &::api::v1alpha1::_Wall_PropertiesEntry_DoNotUse_default_instance_._instance,
    &::api::v1alpha1::_Wall_default_instance_._instance,
    &::api::v1alpha1::_Door_PropertiesEntry_DoNotUse_default_instance_._instance,
    &::api::v1alpha1::_Door_default_instance_._instance,
    &::api::v1alpha1::_TerrainFeature_PropertiesEntry_DoNotUse_default_instance_._instance,
    &::api::v1alpha1::_TerrainFeature_default_instance_._instance,
    &::api::v1alpha1::_RoomConnection_PropertiesEntry_DoNotUse_default_instance_._instance,
    &::api::v1alpha1::_RoomConnection_default_instance_._instance,
    &::api::v1alpha1::_Room_default_instance_._instance,
    &::api::v1alpha1::_RoomError_default_instance_._instance,
    &::api::v1alpha1::_ValidationResult_default_instance_._instance,
    &::api::v1alpha1::_PageInfo_default_instance_._instance,
    &::api::v1alpha1::_RoomFilter_default_instance_._instance,
    &::api::v1alpha1::_RoomDimensionFilter_default_instance_._instance,
};
const char descriptor_table_protodef_api_2fv1alpha1_2froom_5fcommon_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\036api/v1alpha1/room_common.proto\022\014api.v1"
    "alpha1\"4\n\010Position\022\014\n\001x\030\001 \001(\001R\001x\022\014\n\001y\030\002 "
    "\001(\001R\001y\022\014\n\001z\030\003 \001(\001R\001z\"\220\001\n\016RoomDimensions\022"
    "\024\n\005width\030\001 \001(\001R\005width\022\026\n\006height\030\002 \001(\001R\006h"
    "eight\0223\n\tgrid_type\030\003 \001(\0162\026.api.v1alpha1."
    "GridTypeR\010gridType\022\033\n\tgrid_size\030\004 \001(\001R\010g"
    "ridSize\"\377\003\n\006Entity\022\016\n\002id\030\001 \001(\tR\002id\022\022\n\004ty"
    "pe\030\002 \001(\tR\004type\022\022\n\004name\030\003 \001(\tR\004name\0222\n\010po"
    "sition\030\004 \001(\0132\026.api.v1alpha1.PositionR\010po"
    "sition\022\022\n\004size\030\005 \001(\001R\004size\022D\n\nproperties"
    "\030\006 \003(\0132$.api.v1alpha1.Entity.PropertiesE"
    "ntryR\nproperties\022\033\n\tsprite_id\030\007 \001(\tR\010spr"
    "iteId\022\024\n\005color\030\010 \001(\tR\005color\022\'\n\017blocks_mo"
    "vement\030\t \001(\010R\016blocksMovement\022/\n\024blocks_l"
    "ine_of_sight\030\n \001(\010R\021blocksLineOfSight\022%\n"
    "\016is_interactive\030\013 \001(\010R\risInteractive\022\035\n\n"
    "created_at\030\014 \001(\003R\tcreatedAt\022\035\n\nupdated_a"
    "t\030\r \001(\003R\tupdatedAt\032=\n\017PropertiesEntry\022\020\n"
    "\003key\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001(\tR\005value:\0028"
    "\001\"\352\002\n\nRoomConfig\022\033\n\troom_type\030\001 \001(\tR\010roo"
    "mType\022\024\n\005theme\030\002 \001(\tR\005theme\022\036\n\ndifficult"
    "y\030\003 \001(\tR\ndifficulty\022<\n\ndimensions\030\004 \001(\0132"
    "\034.api.v1alpha1.RoomDimensionsR\ndimension"
    "s\022H\n\nparameters\030\005 \003(\0132(.api.v1alpha1.Roo"
    "mConfig.ParametersEntryR\nparameters\022B\n\014s"
    "pawn_config\030\006 \001(\0132\037.api.v1alpha1.EntityS"
    "pawnConfigR\013spawnConfig\032=\n\017ParametersEnt"
    "ry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001(\tR\005val"
    "ue:\0028\001\"\274\002\n\021EntitySpawnConfig\022!\n\014min_enti"
    "ties\030\001 \001(\005R\013minEntities\022!\n\014max_entities\030"
    "\002 \001(\005R\013maxEntities\022#\n\rallowed_types\030\003 \003("
    "\tR\014allowedTypes\022\'\n\017forbidden_types\030\004 \003(\t"
    "R\016forbiddenTypes\022S\n\014type_weights\030\005 \003(\01320"
    ".api.v1alpha1.EntitySpawnConfig.TypeWeig"
    "htsEntryR\013typeWeights\032>\n\020TypeWeightsEntr"
    "y\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001(\005R\005valu"
    "e:\0028\001\"\243\003\n\rRoomStructure\022\016\n\002id\030\001 \001(\tR\002id\022"
    "<\n\ndimensions\030\002 \001(\0132\034.api.v1alpha1.RoomD"
    "imensionsR\ndimensions\022(\n\005walls\030\003 \003(\0132\022.a"
    "pi.v1alpha1.WallR\005walls\022(\n\005doors\030\004 \003(\0132\022"
    ".api.v1alpha1.DoorR\005doors\022G\n\020terrain_fea"
    "tures\030\005 \003(\0132\034.api.v1alpha1.TerrainFeatur"
    "eR\017terrainFeatures\022>\n\013connections\030\006 \003(\0132"
    "\034.api.v1alpha1.RoomConnectionR\013connectio"
    "ns\022\022\n\004seed\030\007 \001(\tR\004seed\0220\n\006config\030\010 \001(\0132\030"
    ".api.v1alpha1.RoomConfigR\006config\022!\n\014gene"
    "rated_at\030\t \001(\003R\013generatedAt\"\224\003\n\004Wall\022,\n\005"
    "start\030\001 \001(\0132\026.api.v1alpha1.PositionR\005sta"
    "rt\022(\n\003end\030\002 \001(\0132\026.api.v1alpha1.PositionR"
    "\003end\022\032\n\010material\030\003 \001(\tR\010material\022\034\n\tthic"
    "kness\030\004 \001(\001R\tthickness\022\'\n\017blocks_movemen"
    "t\030\005 \001(\010R\016blocksMovement\022/\n\024blocks_line_o"
    "f_sight\030\006 \001(\010R\021blocksLineOfSight\022\035\n\ntext"
    "ure_id\030\007 \001(\tR\ttextureId\022B\n\nproperties\030\010 "
    "\003(\0132\".api.v1alpha1.Wall.PropertiesEntryR"
    "\nproperties\032=\n\017PropertiesEntry\022\020\n\003key\030\001 "
    "\001(\tR\003key\022\024\n\005value\030\002 \001(\tR\005value:\0028\001\"\376\003\n\004D"
    "oor\022\016\n\002id\030\001 \001(\tR\002id\0222\n\010position\030\002 \001(\0132\026."
    "api.v1alpha1.PositionR\010position\022\022\n\004type\030"
    "\003 \001(\tR\004type\022\024\n\005state\030\004 \001(\tR\005state\022\"\n\rlea"
    "ds_to_room\030\005 \001(\tR\013leadsToRoom\022B\n\021leads_t"
    "o_position\030\006 \001(\0132\026.api.v1alpha1.Position"
    "R\017leadsToPosition\022\033\n\tis_secret\030\007 \001(\010R\010is"
    "Secret\022!\n\014requires_key\030\010 \001(\010R\013requiresKe"
    "y\022\025\n\006key_id\030\t \001(\tR\005keyId\022)\n\020difficulty_c"
    "lass\030\n \001(\005R\017difficultyClass\022\033\n\tsprite_id"
    "\030\013 \001(\tR\010spriteId\022B\n\nproperties\030\014 \003(\0132\".a"
    "pi.v1alpha1.Door.PropertiesEntryR\nproper"
    "ties\032=\n\017PropertiesEntry\022\020\n\003key\030\001 \001(\tR\003ke"
    "y\022\024\n\005value\030\002 \001(\tR\005value:\0028\001\"\266\003\n\016TerrainF"
    "eature\022\016\n\002id\030\001 \001(\tR\002id\022\022\n\004type\030\002 \001(\tR\004ty"
    "pe\022*\n\004area\030\003 \003(\0132\026.api.v1alpha1.Position"
    "R\004area\022\'\n\017blocks_movement\030\004 \001(\010R\016blocksM"
    "ovement\022/\n\024blocks_line_of_sight\030\005 \001(\010R\021b"
    "locksLineOfSight\0228\n\030movement_cost_multip"
    "lier\030\006 \001(\001R\026movementCostMultiplier\022L\n\npr"
    "operties\030\007 \003(\0132,.api.v1alpha1.TerrainFea"
    "ture.PropertiesEntryR\nproperties\022\035\n\ntext"
    "ure_id\030\010 \001(\tR\ttextureId\022\024\n\005color\030\t \001(\tR\005"
    "color\032=\n\017PropertiesEntry\022\020\n\003key\030\001 \001(\tR\003k"
    "ey\022\024\n\005value\030\002 \001(\tR\005value:\0028\001\"\215\004\n\016RoomCon"
    "nection\022\016\n\002id\030\001 \001(\tR\002id\022*\n\021connected_roo"
    "m_id\030\002 \001(\tR\017connectedRoomId\022\'\n\017connectio"
    "n_type\030\003 \001(\tR\016connectionType\022D\n\022this_roo"
    "m_position\030\004 \001(\0132\026.api.v1alpha1.Position"
    "R\020thisRoomPosition\022F\n\023other_room_positio"
    "n\030\005 \001(\0132\026.api.v1alpha1.PositionR\021otherRo"
    "omPosition\022)\n\020is_bidirectional\030\006 \001(\010R\017is"
    "Bidirectional\022\'\n\017requires_action\030\007 \001(\010R\016"
    "requiresAction\022\'\n\017required_action\030\010 \001(\tR"
    "\016requiredAction\022L\n\nproperties\030\t \003(\0132,.ap"
    "i.v1alpha1.RoomConnection.PropertiesEntr"
    "yR\nproperties\032=\n\017PropertiesEntry\022\020\n\003key\030"
    "\001 \001(\tR\003key\022\024\n\005value\030\002 \001(\tR\005value:\0028\001\"\200\003\n"
    "\004Room\022\016\n\002id\030\001 \001(\tR\002id\022\022\n\004name\030\002 \001(\tR\004nam"
    "e\022 \n\013description\030\003 \001(\tR\013description\0229\n\ts"
    "tructure\030\004 \001(\0132\033.api.v1alpha1.RoomStruct"
    "ureR\tstructure\0220\n\010entities\030\005 \003(\0132\024.api.v"
    "1alpha1.EntityR\010entities\022\024\n\005state\030\006 \001(\tR"
    "\005state\022\035\n\nsession_id\030\007 \001(\tR\tsessionId\022\031\n"
    "\010owner_id\030\010 \001(\tR\007ownerId\022\035\n\ncreated_at\030\t"
    " \001(\003R\tcreatedAt\022\035\n\nupdated_at\030\n \001(\003R\tupd"
    "atedAt\022#\n\rlast_accessed\030\013 \001(\003R\014lastAcces"
    "sed\022\022\n\004tags\030\014 \003(\tR\004tags\"\271\001\n\tRoomError\022\022\n"
    "\004code\030\001 \001(\tR\004code\022\030\n\007message\030\002 \001(\tR\007mess"
    "age\022\024\n\005field\030\003 \001(\tR\005field\022\027\n\007room_id\030\004 \001"
    "(\tR\006roomId\0222\n\010position\030\005 \001(\0132\026.api.v1alp"
    "ha1.PositionR\010position\022\033\n\tentity_id\030\006 \001("
    "\tR\010entityId\"\223\001\n\020ValidationResult\022\031\n\010is_v"
    "alid\030\001 \001(\010R\007isValid\022/\n\006errors\030\002 \003(\0132\027.ap"
    "i.v1alpha1.RoomErrorR\006errors\0223\n\010warnings"
    "\030\003 \003(\0132\027.api.v1alpha1.RoomErrorR\010warning"
    "s\"\215\001\n\010PageInfo\022\033\n\tpage_size\030\001 \001(\005R\010pageS"
    "ize\022\035\n\npage_token\030\002 \001(\tR\tpageToken\022&\n\017ne"
    "xt_page_token\030\003 \001(\tR\rnextPageToken\022\035\n\nto"
    "tal_size\030\004 \001(\005R\ttotalSize\"\352\002\n\nRoomFilter"
    "\022\035\n\nroom_types\030\001 \003(\tR\troomTypes\022\026\n\006theme"
    "s\030\002 \003(\tR\006themes\022\026\n\006states\030\003 \003(\tR\006states\022"
    "\035\n\nsession_id\030\004 \001(\tR\tsessionId\022\031\n\010owner_"
    "id\030\005 \001(\tR\007ownerId\022\022\n\004tags\030\006 \003(\tR\004tags\022L\n"
    "\020dimension_filter\030\007 \001(\0132!.api.v1alpha1.R"
    "oomDimensionFilterR\017dimensionFilter\022#\n\rc"
    "reated_after\030\010 \001(\003R\014createdAfter\022%\n\016crea"
    "ted_before\030\t \001(\003R\rcreatedBefore\022%\n\016acces"
    "sed_after\030\n \001(\003R\raccessedAfter\"\304\001\n\023RoomD"
    "imensionFilter\022\033\n\tmin_width\030\001 \001(\001R\010minWi"
    "dth\022\033\n\tmax_width\030\002 \001(\001R\010maxWidth\022\035\n\nmin_"
    "height\030\003 \001(\001R\tminHeight\022\035\n\nmax_height\030\004 "
    "\001(\001R\tmaxHeight\0225\n\ngrid_types\030\005 \003(\0162\026.api"
    ".v1alpha1.GridTypeR\tgridTypes*\205\001\n\010GridTy"
    "pe\022\031\n\025GRID_TYPE_UNSPECIFIED\020\000\022\024\n\020GRID_TY"
    "PE_SQUARE\020\001\022\030\n\024GRID_TYPE_HEX_POINTY\020\002\022\026\n"
    "\022GRID_TYPE_HEX_FLAT\020\003\022\026\n\022GRID_TYPE_GRIDL"
    "ESS\020\004B\273\001\n\020com.api.v1alpha1B\017RoomCommonPr"
    "otoP\001ZEgithub.com/KirkDiggler/rpg-api-pr"
    "otos/gen/go/api/v1alpha1;apiv1alpha1\242\002\003A"
    "XX\252\002\014Api.V1alpha1\312\002\014Api\\V1alpha1\342\002\030Api\\V"
    "1alpha1\\GPBMetadata\352\002\rApi::V1alpha1b\006pro"
    "to3"
};
static ::absl::once_flag descriptor_table_api_2fv1alpha1_2froom_5fcommon_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_api_2fv1alpha1_2froom_5fcommon_2eproto = {
    false,
    false,
    5523,
    descriptor_table_protodef_api_2fv1alpha1_2froom_5fcommon_2eproto,
    "api/v1alpha1/room_common.proto",
    &descriptor_table_api_2fv1alpha1_2froom_5fcommon_2eproto_once,
    nullptr,
    0,
    23,
    schemas,
    file_default_instances,
    TableStruct_api_2fv1alpha1_2froom_5fcommon_2eproto::offsets,
    file_level_enum_descriptors_api_2fv1alpha1_2froom_5fcommon_2eproto,
    file_level_service_descriptors_api_2fv1alpha1_2froom_5fcommon_2eproto,
};
namespace api {
namespace v1alpha1 {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL GridType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_api_2fv1alpha1_2froom_5fcommon_2eproto);
  return file_level_enum_descriptors_api_2fv1alpha1_2froom_5fcommon_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t GridType_internal_data_[] = {
    327680u, 0u, };
// ===================================================================

class Position::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Position>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Position, _impl_._has_bits_);
};

Position::Position(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Position_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.Position)
}
Position::Position(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Position& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Position_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE Position::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Position::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));
}
Position::~Position() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.Position)
  SharedDtor(*this);
}
inline void Position::SharedDtor(MessageLite& self) {
  Position& this_ = static_cast<Position&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Position::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Position(arena);
}
constexpr auto Position::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Position),
                                            alignof(Position));
}
constexpr auto Position::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Position_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Position::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Position>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Position::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Position>(), &Position::ByteSizeLong,
              &Position::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Position, _impl_._cached_size_),
          false,
      },
      &Position::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fcommon_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Position_class_data_ =
        Position::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Position::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Position_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Position_class_data_.tc_table);
  return Position_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
Position::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Position, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Position_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::Position>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double x = 1 [json_name = "x"];
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.x_)}},
    // double y = 2 [json_name = "y"];
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.y_)}},
    // double z = 3 [json_name = "z"];
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double x = 1 [json_name = "x"];
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.x_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double y = 2 [json_name = "y"];
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.y_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double z = 3 [json_name = "z"];
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.z_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void Position::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.Position)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    ::memset(&_impl_.x_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.z_) -
        reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Position::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Position& this_ = static_cast<const Position&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Position::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Position& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.Position)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double x = 1 [json_name = "x"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_x()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          1, this_._internal_x(), target);
    }
  }

  // double y = 2 [json_name = "y"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_y()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_y(), target);
    }
  }

  // double z = 3 [json_name = "z"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_z()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_z(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.Position)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Position::ByteSizeLong(const MessageLite& base) {
  const Position& this_ = static_cast<const Position&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Position::ByteSizeLong() const {
  const Position& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.Position)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // double x = 1 [json_name = "x"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_x()) != 0) {
        total_size += 9;
      }
    }
    // double y = 2 [json_name = "y"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_y()) != 0) {
        total_size += 9;
      }
    }
    // double z = 3 [json_name = "z"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_z()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Position::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Position*>(&to_msg);
  auto& from = static_cast<const Position&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.Position)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_x()) != 0) {
        _this->_impl_.x_ = from._impl_.x_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_y()) != 0) {
        _this->_impl_.y_ = from._impl_.y_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_z()) != 0) {
        _this->_impl_.z_ = from._impl_.z_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Position::CopyFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Position::InternalSwap(Position* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Position, _impl_.z_)
      + sizeof(Position::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(Position, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Position::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RoomDimensions::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RoomDimensions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RoomDimensions, _impl_._has_bits_);
};

RoomDimensions::RoomDimensions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RoomDimensions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.RoomDimensions)
}
RoomDimensions::RoomDimensions(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RoomDimensions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RoomDimensions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE RoomDimensions::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void RoomDimensions::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, width_),
           0,
           offsetof(Impl_, grid_type_) -
               offsetof(Impl_, width_) +
               sizeof(Impl_::grid_type_));
}
RoomDimensions::~RoomDimensions() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.RoomDimensions)
  SharedDtor(*this);
}
inline void RoomDimensions::SharedDtor(MessageLite& self) {
  RoomDimensions& this_ = static_cast<RoomDimensions&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RoomDimensions::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RoomDimensions(arena);
}
constexpr auto RoomDimensions::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RoomDimensions),
                                            alignof(RoomDimensions));
}
constexpr auto RoomDimensions::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RoomDimensions_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RoomDimensions::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RoomDimensions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RoomDimensions::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RoomDimensions>(), &RoomDimensions::ByteSizeLong,
              &RoomDimensions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RoomDimensions, _impl_._cached_size_),
          false,
      },
      &RoomDimensions::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fcommon_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RoomDimensions_class_data_ =
        RoomDimensions::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RoomDimensions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RoomDimensions_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RoomDimensions_class_data_.tc_table);
  return RoomDimensions_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2>
RoomDimensions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RoomDimensions, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RoomDimensions_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::RoomDimensions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double grid_size = 4 [json_name = "gridSize"];
    {::_pbi::TcParser::FastF64S1,
     {33, 2, 0, PROTOBUF_FIELD_OFFSET(RoomDimensions, _impl_.grid_size_)}},
    // double width = 1 [json_name = "width"];
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(RoomDimensions, _impl_.width_)}},
    // double height = 2 [json_name = "height"];
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(RoomDimensions, _impl_.height_)}},
    // .api.v1alpha1.GridType grid_type = 3 [json_name = "gridType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RoomDimensions, _impl_.grid_type_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(RoomDimensions, _impl_.grid_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double width = 1 [json_name = "width"];
    {PROTOBUF_FIELD_OFFSET(RoomDimensions, _impl_.width_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double height = 2 [json_name = "height"];
    {PROTOBUF_FIELD_OFFSET(RoomDimensions, _impl_.height_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // .api.v1alpha1.GridType grid_type = 3 [json_name = "gridType"];
    {PROTOBUF_FIELD_OFFSET(RoomDimensions, _impl_.grid_type_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // double grid_size = 4 [json_name = "gridSize"];
    {PROTOBUF_FIELD_OFFSET(RoomDimensions, _impl_.grid_size_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void RoomDimensions::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.RoomDimensions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    ::memset(&_impl_.width_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.grid_type_) -
        reinterpret_cast<char*>(&_impl_.width_)) + sizeof(_impl_.grid_type_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RoomDimensions::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RoomDimensions& this_ = static_cast<const RoomDimensions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RoomDimensions::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RoomDimensions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.RoomDimensions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double width = 1 [json_name = "width"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_width()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          1, this_._internal_width(), target);
    }
  }

  // double height = 2 [json_name = "height"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_height()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_height(), target);
    }
  }

  // .api.v1alpha1.GridType grid_type = 3 [json_name = "gridType"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_grid_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_grid_type(), target);
    }
  }

  // double grid_size = 4 [json_name = "gridSize"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_grid_size()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          4, this_._internal_grid_size(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.RoomDimensions)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RoomDimensions::ByteSizeLong(const MessageLite& base) {
  const RoomDimensions& this_ = static_cast<const RoomDimensions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RoomDimensions::ByteSizeLong() const {
  const RoomDimensions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.RoomDimensions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // double width = 1 [json_name = "width"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_width()) != 0) {
        total_size += 9;
      }
    }
    // double height = 2 [json_name = "height"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_height()) != 0) {
        total_size += 9;
      }
    }
    // double grid_size = 4 [json_name = "gridSize"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_grid_size()) != 0) {
        total_size += 9;
      }
    }
    // .api.v1alpha1.GridType grid_type = 3 [json_name = "gridType"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_grid_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_grid_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RoomDimensions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RoomDimensions*>(&to_msg);
  auto& from = static_cast<const RoomDimensions&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.RoomDimensions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_width()) != 0) {
        _this->_impl_.width_ = from._impl_.width_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_height()) != 0) {
        _this->_impl_.height_ = from._impl_.height_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_grid_size()) != 0) {
        _this->_impl_.grid_size_ = from._impl_.grid_size_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_grid_type() != 0) {
        _this->_impl_.grid_type_ = from._impl_.grid_type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RoomDimensions::CopyFrom(const RoomDimensions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.RoomDimensions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RoomDimensions::InternalSwap(RoomDimensions* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RoomDimensions, _impl_.grid_type_)
      + sizeof(RoomDimensions::_impl_.grid_type_)
      - PROTOBUF_FIELD_OFFSET(RoomDimensions, _impl_.width_)>(
          reinterpret_cast<char*>(&_impl_.width_),
          reinterpret_cast<char*>(&other->_impl_.width_));
}

::google::protobuf::Metadata RoomDimensions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
Entity_PropertiesEntry_DoNotUse::Entity_PropertiesEntry_DoNotUse()
    : SuperType(Entity_PropertiesEntry_DoNotUse_class_data_.base()) {}
Entity_PropertiesEntry_DoNotUse::Entity_PropertiesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, Entity_PropertiesEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
Entity_PropertiesEntry_DoNotUse::Entity_PropertiesEntry_DoNotUse() : SuperType() {}
Entity_PropertiesEntry_DoNotUse::Entity_PropertiesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL Entity_PropertiesEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Entity_PropertiesEntry_DoNotUse(arena);
}
constexpr auto Entity_PropertiesEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Entity_PropertiesEntry_DoNotUse),
                                            alignof(Entity_PropertiesEntry_DoNotUse));
}
constexpr auto Entity_PropertiesEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Entity_PropertiesEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Entity_PropertiesEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Entity_PropertiesEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Entity_PropertiesEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&Entity_PropertiesEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Entity_PropertiesEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &Entity_PropertiesEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fcommon_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Entity_PropertiesEntry_DoNotUse_class_data_ =
        Entity_PropertiesEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Entity_PropertiesEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Entity_PropertiesEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Entity_PropertiesEntry_DoNotUse_class_data_.tc_table);
  return Entity_PropertiesEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 52, 2>
Entity_PropertiesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Entity_PropertiesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Entity_PropertiesEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::Entity_PropertiesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Entity_PropertiesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Entity_PropertiesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(Entity_PropertiesEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(Entity_PropertiesEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\3\5\0\0\0\0\0"
    "api.v1alpha1.Entity.PropertiesEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class Entity::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Entity>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Entity, _impl_._has_bits_);
};

Entity::Entity(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Entity_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.Entity)
}
PROTOBUF_NDEBUG_INLINE Entity::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::Entity& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        properties_{visibility, arena, from.properties_},
        id_(arena, from.id_),
        type_(arena, from.type_),
        name_(arena, from.name_),
        sprite_id_(arena, from.sprite_id_),
        color_(arena, from.color_) {}

Entity::Entity(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Entity& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Entity_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Entity* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ = ((cached_has_bits & 0x00000020U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.position_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, size_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, size_),
           offsetof(Impl_, is_interactive_) -
               offsetof(Impl_, size_) +
               sizeof(Impl_::is_interactive_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.Entity)
}
PROTOBUF_NDEBUG_INLINE Entity::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        properties_{visibility, arena},
        id_(arena),
        type_(arena),
        name_(arena),
        sprite_id_(arena),
        color_(arena) {}

inline void Entity::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_),
           0,
           offsetof(Impl_, is_interactive_) -
               offsetof(Impl_, position_) +
               sizeof(Impl_::is_interactive_));
}
Entity::~Entity() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.Entity)
  SharedDtor(*this);
}
inline void Entity::SharedDtor(MessageLite& self) {
  Entity& this_ = static_cast<Entity&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.type_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.sprite_id_.Destroy();
  this_._impl_.color_.Destroy();
  delete this_._impl_.position_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Entity::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Entity(arena);
}
constexpr auto Entity::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Entity, _impl_.properties_) +
          decltype(Entity::_impl_.properties_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Entity, _impl_.properties_) +
          decltype(Entity::_impl_.properties_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Entity), alignof(Entity), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Entity::PlacementNew_,
                                 sizeof(Entity),
                                 alignof(Entity));
  }
}
constexpr auto Entity::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Entity_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Entity::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Entity>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Entity::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Entity>(), &Entity::ByteSizeLong,
              &Entity::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Entity, _impl_._cached_size_),
          false,
      },
      &Entity::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fcommon_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Entity_class_data_ =
        Entity::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Entity::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Entity_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Entity_class_data_.tc_table);
  return Entity_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 2, 70, 2>
Entity::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Entity, _impl_._has_bits_),
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Entity_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::Entity>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Entity, _impl_.id_)}},
    // string type = 2 [json_name = "type"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Entity, _impl_.type_)}},
    // string name = 3 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(Entity, _impl_.name_)}},
    // .api.v1alpha1.Position position = 4 [json_name = "position"];
    {::_pbi::TcParser::FastMtS1,
     {34, 5, 0, PROTOBUF_FIELD_OFFSET(Entity, _impl_.position_)}},
    // double size = 5 [json_name = "size"];
    {::_pbi::TcParser::FastF64S1,
     {41, 6, 0, PROTOBUF_FIELD_OFFSET(Entity, _impl_.size_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string sprite_id = 7 [json_name = "spriteId"];
    {::_pbi::TcParser::FastUS1,
     {58, 3, 0, PROTOBUF_FIELD_OFFSET(Entity, _impl_.sprite_id_)}},
    // string color = 8 [json_name = "color"];
    {::_pbi::TcParser::FastUS1,
     {66, 4, 0, PROTOBUF_FIELD_OFFSET(Entity, _impl_.color_)}},
    // bool blocks_movement = 9 [json_name = "blocksMovement"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Entity, _impl_.blocks_movement_), 9>(),
     {72, 9, 0, PROTOBUF_FIELD_OFFSET(Entity, _impl_.blocks_movement_)}},
    // bool blocks_line_of_sight = 10 [json_name = "blocksLineOfSight"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Entity, _impl_.blocks_line_of_sight_), 10>(),
     {80, 10, 0, PROTOBUF_FIELD_OFFSET(Entity, _impl_.blocks_line_of_sight_)}},
    // bool is_interactive = 11 [json_name = "isInteractive"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Entity, _impl_.is_interactive_), 11>(),
     {88, 11, 0, PROTOBUF_FIELD_OFFSET(Entity, _impl_.is_interactive_)}},
    // int64 created_at = 12 [json_name = "createdAt"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Entity, _impl_.created_at_), 7>(),
     {96, 7, 0, PROTOBUF_FIELD_OFFSET(Entity, _impl_.created_at_)}},
    // int64 updated_at = 13 [json_name = "updatedAt"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Entity, _impl_.updated_at_), 8>(),
     {104, 8, 0, PROTOBUF_FIELD_OFFSET(Entity, _impl_.updated_at_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string type = 2 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.type_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 3 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.name_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.Position position = 4 [json_name = "position"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.position_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // double size = 5 [json_name = "size"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.size_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // map<string, string> properties = 6 [json_name = "properties"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.properties_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string sprite_id = 7 [json_name = "spriteId"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.sprite_id_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string color = 8 [json_name = "color"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.color_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool blocks_movement = 9 [json_name = "blocksMovement"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.blocks_movement_), _Internal::kHasBitsOffset + 9, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool blocks_line_of_sight = 10 [json_name = "blocksLineOfSight"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.blocks_line_of_sight_), _Internal::kHasBitsOffset + 10, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool is_interactive = 11 [json_name = "isInteractive"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.is_interactive_), _Internal::kHasBitsOffset + 11, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // int64 created_at = 12 [json_name = "createdAt"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.created_at_), _Internal::kHasBitsOffset + 7, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 updated_at = 13 [json_name = "updatedAt"];
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.updated_at_), _Internal::kHasBitsOffset + 8, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\23\2\4\4\0\0\12\11\5\0\0\0\0\0\0\0"
    "api.v1alpha1.Entity"
    "id"
    "type"
    "name"
    "properties"
    "sprite_id"
    "color"
  }},
};
PROTOBUF_NOINLINE void Entity::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.Entity)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.properties_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.type_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.sprite_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      _impl_.color_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      ABSL_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
  }
  if ((cached_has_bits & 0x000000c0U) != 0) {
    ::memset(&_impl_.size_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.created_at_) -
        reinterpret_cast<char*>(&_impl_.size_)) + sizeof(_impl_.created_at_));
  }
  if ((cached_has_bits & 0x00000f00U) != 0) {
    ::memset(&_impl_.updated_at_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_interactive_) -
        reinterpret_cast<char*>(&_impl_.updated_at_)) + sizeof(_impl_.is_interactive_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Entity::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Entity& this_ = static_cast<const Entity&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Entity::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Entity& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.Entity)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1 [json_name = "id"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_id().empty()) {
      const ::std::string& _s = this_._internal_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.Entity.id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string type = 2 [json_name = "type"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_type().empty()) {
      const ::std::string& _s = this_._internal_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.Entity.type");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string name = 3 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.Entity.name");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.Position position = 4 [json_name = "position"];
  if ((cached_has_bits & 0x00000020U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.position_, this_._impl_.position_->GetCachedSize(), target,
        stream);
  }

  // double size = 5 [json_name = "size"];
  if ((cached_has_bits & 0x00000040U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_size()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          5, this_._internal_size(), target);
    }
  }

  // map<string, string> properties = 6 [json_name = "properties"];
  if (!this_._internal_properties().empty()) {
    using MapType = ::google::protobuf::Map<::std::string, ::std::string>;
    using WireHelper = _pbi::MapEntryFuncs<::std::string, ::std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_properties();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.Entity.properties");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.Entity.properties");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.Entity.properties");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.Entity.properties");
      }
    }
  }

  // string sprite_id = 7 [json_name = "spriteId"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    if (!this_._internal_sprite_id().empty()) {
      const ::std::string& _s = this_._internal_sprite_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.Entity.sprite_id");
      target = stream->WriteStringMaybeAliased(7, _s, target);
    }
  }

  // string color = 8 [json_name = "color"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    if (!this_._internal_color().empty()) {
      const ::std::string& _s = this_._internal_color();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.Entity.color");
      target = stream->WriteStringMaybeAliased(8, _s, target);
    }
  }

  // bool blocks_movement = 9 [json_name = "blocksMovement"];
  if ((cached_has_bits & 0x00000200U) != 0) {
    if (this_._internal_blocks_movement() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          9, this_._internal_blocks_movement(), target);
    }
  }

  // bool blocks_line_of_sight = 10 [json_name = "blocksLineOfSight"];
  if ((cached_has_bits & 0x00000400U) != 0) {
    if (this_._internal_blocks_line_of_sight() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          10, this_._internal_blocks_line_of_sight(), target);
    }
  }

  // bool is_interactive = 11 [json_name = "isInteractive"];
  if ((cached_has_bits & 0x00000800U) != 0) {
    if (this_._internal_is_interactive() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          11, this_._internal_is_interactive(), target);
    }
  }

  // int64 created_at = 12 [json_name = "createdAt"];
  if ((cached_has_bits & 0x00000080U) != 0) {
    if (this_._internal_created_at() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<12>(
              stream, this_._internal_created_at(), target);
    }
  }

  // int64 updated_at = 13 [json_name = "updatedAt"];
  if ((cached_has_bits & 0x00000100U) != 0) {
    if (this_._internal_updated_at() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<13>(
              stream, this_._internal_updated_at(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.Entity)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Entity::ByteSizeLong(const MessageLite& base) {
  const Entity& this_ = static_cast<const Entity&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Entity::ByteSizeLong() const {
  const Entity& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.Entity)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, string> properties = 6 [json_name = "properties"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_properties_size());
      for (const auto& entry : this_._internal_properties()) {
        total_size += _pbi::MapEntryFuncs<::std::string, ::std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    // string id = 1 [json_name = "id"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_id());
      }
    }
    // string type = 2 [json_name = "type"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_type());
      }
    }
    // string name = 3 [json_name = "name"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string sprite_id = 7 [json_name = "spriteId"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_sprite_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_sprite_id());
      }
    }
    // string color = 8 [json_name = "color"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (!this_._internal_color().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_color());
      }
    }
    // .api.v1alpha1.Position position = 4 [json_name = "position"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.position_);
    }
    // double size = 5 [json_name = "size"];
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_size()) != 0) {
        total_size += 9;
      }
    }
    // int64 created_at = 12 [json_name = "createdAt"];
    if ((cached_has_bits & 0x00000080U) != 0) {
      if (this_._internal_created_at() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_created_at());
      }
    }
  }
  if ((cached_has_bits & 0x00000f00U) != 0) {
    // int64 updated_at = 13 [json_name = "updatedAt"];
    if ((cached_has_bits & 0x00000100U) != 0) {
      if (this_._internal_updated_at() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_updated_at());
      }
    }
    // bool blocks_movement = 9 [json_name = "blocksMovement"];
    if ((cached_has_bits & 0x00000200U) != 0) {
      if (this_._internal_blocks_movement() != 0) {
        total_size += 2;
      }
    }
    // bool blocks_line_of_sight = 10 [json_name = "blocksLineOfSight"];
    if ((cached_has_bits & 0x00000400U) != 0) {
      if (this_._internal_blocks_line_of_sight() != 0) {
        total_size += 2;
      }
    }
    // bool is_interactive = 11 [json_name = "isInteractive"];
    if ((cached_has_bits & 0x00000800U) != 0) {
      if (this_._internal_is_interactive() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Entity::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Entity*>(&to_msg);
  auto& from = static_cast<const Entity&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.Entity)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.properties_.MergeFrom(from._impl_.properties_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_id().empty()) {
        _this->_internal_set_id(from._internal_id());
      } else {
        if (_this->_impl_.id_.IsDefault()) {
          _this->_internal_set_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_type().empty()) {
        _this->_internal_set_type(from._internal_type());
      } else {
        if (_this->_impl_.type_.IsDefault()) {
          _this->_internal_set_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_sprite_id().empty()) {
        _this->_internal_set_sprite_id(from._internal_sprite_id());
      } else {
        if (_this->_impl_.sprite_id_.IsDefault()) {
          _this->_internal_set_sprite_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (!from._internal_color().empty()) {
        _this->_internal_set_color(from._internal_color());
      } else {
        if (_this->_impl_.color_.IsDefault()) {
          _this->_internal_set_color("");
        }
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      ABSL_DCHECK(from._impl_.position_ != nullptr);
      if (_this->_impl_.position_ == nullptr) {
        _this->_impl_.position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.position_);
      } else {
        _this->_impl_.position_->MergeFrom(*from._impl_.position_);
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_size()) != 0) {
        _this->_impl_.size_ = from._impl_.size_;
      }
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      if (from._internal_created_at() != 0) {
        _this->_impl_.created_at_ = from._impl_.created_at_;
      }
    }
  }
  if ((cached_has_bits & 0x00000f00U) != 0) {
    if ((cached_has_bits & 0x00000100U) != 0) {
      if (from._internal_updated_at() != 0) {
        _this->_impl_.updated_at_ = from._impl_.updated_at_;
      }
    }
    if ((cached_has_bits & 0x00000200U) != 0) {
      if (from._internal_blocks_movement() != 0) {
        _this->_impl_.blocks_movement_ = from._impl_.blocks_movement_;
      }
    }
    if ((cached_has_bits & 0x00000400U) != 0) {
      if (from._internal_blocks_line_of_sight() != 0) {
        _this->_impl_.blocks_line_of_sight_ = from._impl_.blocks_line_of_sight_;
      }
    }
    if ((cached_has_bits & 0x00000800U) != 0) {
      if (from._internal_is_interactive() != 0) {
        _this->_impl_.is_interactive_ = from._impl_.is_interactive_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Entity::CopyFrom(const Entity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.Entity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Entity::InternalSwap(Entity* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.properties_.InternalSwap(&other->_impl_.properties_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sprite_id_, &other->_impl_.sprite_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.color_, &other->_impl_.color_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Entity, _impl_.is_interactive_)
      + sizeof(Entity::_impl_.is_interactive_)
      - PROTOBUF_FIELD_OFFSET(Entity, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::google::protobuf::Metadata Entity::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
RoomConfig_ParametersEntry_DoNotUse::RoomConfig_ParametersEntry_DoNotUse()
    : SuperType(RoomConfig_ParametersEntry_DoNotUse_class_data_.base()) {}
RoomConfig_ParametersEntry_DoNotUse::RoomConfig_ParametersEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, RoomConfig_ParametersEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
RoomConfig_ParametersEntry_DoNotUse::RoomConfig_ParametersEntry_DoNotUse() : SuperType() {}
RoomConfig_ParametersEntry_DoNotUse::RoomConfig_ParametersEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL RoomConfig_ParametersEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RoomConfig_ParametersEntry_DoNotUse(arena);
}
constexpr auto RoomConfig_ParametersEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RoomConfig_ParametersEntry_DoNotUse),
                                            alignof(RoomConfig_ParametersEntry_DoNotUse));
}
constexpr auto RoomConfig_ParametersEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RoomConfig_ParametersEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RoomConfig_ParametersEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RoomConfig_ParametersEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RoomConfig_ParametersEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&RoomConfig_ParametersEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RoomConfig_ParametersEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &RoomConfig_ParametersEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fcommon_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RoomConfig_ParametersEntry_DoNotUse_class_data_ =
        RoomConfig_ParametersEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RoomConfig_ParametersEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RoomConfig_ParametersEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RoomConfig_ParametersEntry_DoNotUse_class_data_.tc_table);
  return RoomConfig_ParametersEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 56, 2>
RoomConfig_ParametersEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RoomConfig_ParametersEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RoomConfig_ParametersEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::RoomConfig_ParametersEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(RoomConfig_ParametersEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RoomConfig_ParametersEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(RoomConfig_ParametersEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(RoomConfig_ParametersEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\47\3\5\0\0\0\0\0"
    "api.v1alpha1.RoomConfig.ParametersEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class RoomConfig::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RoomConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RoomConfig, _impl_._has_bits_);
};

RoomConfig::RoomConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RoomConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.RoomConfig)
}
PROTOBUF_NDEBUG_INLINE RoomConfig::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::RoomConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        parameters_{visibility, arena, from.parameters_},
        room_type_(arena, from.room_type_),
        theme_(arena, from.theme_),
        difficulty_(arena, from.difficulty_) {}

RoomConfig::RoomConfig(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RoomConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RoomConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RoomConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.dimensions_ = ((cached_has_bits & 0x00000008U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dimensions_)
                : nullptr;
  _impl_.spawn_config_ = ((cached_has_bits & 0x00000010U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.spawn_config_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.RoomConfig)
}
PROTOBUF_NDEBUG_INLINE RoomConfig::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        parameters_{visibility, arena},
        room_type_(arena),
        theme_(arena),
        difficulty_(arena) {}

inline void RoomConfig::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, dimensions_),
           0,
           offsetof(Impl_, spawn_config_) -
               offsetof(Impl_, dimensions_) +
               sizeof(Impl_::spawn_config_));
}
RoomConfig::~RoomConfig() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.RoomConfig)
  SharedDtor(*this);
}
inline void RoomConfig::SharedDtor(MessageLite& self) {
  RoomConfig& this_ = static_cast<RoomConfig&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.room_type_.Destroy();
  this_._impl_.theme_.Destroy();
  this_._impl_.difficulty_.Destroy();
  delete this_._impl_.dimensions_;
  delete this_._impl_.spawn_config_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RoomConfig::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RoomConfig(arena);
}
constexpr auto RoomConfig::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RoomConfig, _impl_.parameters_) +
          decltype(RoomConfig::_impl_.parameters_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RoomConfig, _impl_.parameters_) +
          decltype(RoomConfig::_impl_.parameters_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RoomConfig), alignof(RoomConfig), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RoomConfig::PlacementNew_,
                                 sizeof(RoomConfig),
                                 alignof(RoomConfig));
  }
}
constexpr auto RoomConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RoomConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RoomConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RoomConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RoomConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RoomConfig>(), &RoomConfig::ByteSizeLong,
              &RoomConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RoomConfig, _impl_._cached_size_),
          false,
      },
      &RoomConfig::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fcommon_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RoomConfig_class_data_ =
        RoomConfig::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RoomConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RoomConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RoomConfig_class_data_.tc_table);
  return RoomConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 3, 66, 2>
RoomConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RoomConfig, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RoomConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::RoomConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string room_type = 1 [json_name = "roomType"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RoomConfig, _impl_.room_type_)}},
    // string theme = 2 [json_name = "theme"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(RoomConfig, _impl_.theme_)}},
    // string difficulty = 3 [json_name = "difficulty"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(RoomConfig, _impl_.difficulty_)}},
    // .api.v1alpha1.RoomDimensions dimensions = 4 [json_name = "dimensions"];
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(RoomConfig, _impl_.dimensions_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .api.v1alpha1.EntitySpawnConfig spawn_config = 6 [json_name = "spawnConfig"];
    {::_pbi::TcParser::FastMtS1,
     {50, 4, 1, PROTOBUF_FIELD_OFFSET(RoomConfig, _impl_.spawn_config_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string room_type = 1 [json_name = "roomType"];
    {PROTOBUF_FIELD_OFFSET(RoomConfig, _impl_.room_type_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string theme = 2 [json_name = "theme"];
    {PROTOBUF_FIELD_OFFSET(RoomConfig, _impl_.theme_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string difficulty = 3 [json_name = "difficulty"];
    {PROTOBUF_FIELD_OFFSET(RoomConfig, _impl_.difficulty_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.RoomDimensions dimensions = 4 [json_name = "dimensions"];
    {PROTOBUF_FIELD_OFFSET(RoomConfig, _impl_.dimensions_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, string> parameters = 5 [json_name = "parameters"];
    {PROTOBUF_FIELD_OFFSET(RoomConfig, _impl_.parameters_), -1, 2, (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // .api.v1alpha1.EntitySpawnConfig spawn_config = 6 [json_name = "spawnConfig"];
    {PROTOBUF_FIELD_OFFSET(RoomConfig, _impl_.spawn_config_), _Internal::kHasBitsOffset + 4, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RoomDimensions>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::EntitySpawnConfig>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\27\11\5\12\0\12\0\0"
    "api.v1alpha1.RoomConfig"
    "room_type"
    "theme"
    "difficulty"
    "parameters"
  }},
};
PROTOBUF_NOINLINE void RoomConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.RoomConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parameters_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.room_type_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.theme_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.difficulty_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(_impl_.dimensions_ != nullptr);
      _impl_.dimensions_->Clear();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(_impl_.spawn_config_ != nullptr);
      _impl_.spawn_config_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RoomConfig::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RoomConfig& this_ = static_cast<const RoomConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RoomConfig::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RoomConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.RoomConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string room_type = 1 [json_name = "roomType"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_room_type().empty()) {
      const ::std::string& _s = this_._internal_room_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RoomConfig.room_type");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string theme = 2 [json_name = "theme"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_theme().empty()) {
      const ::std::string& _s = this_._internal_theme();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RoomConfig.theme");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string difficulty = 3 [json_name = "difficulty"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_difficulty().empty()) {
      const ::std::string& _s = this_._internal_difficulty();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RoomConfig.difficulty");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.RoomDimensions dimensions = 4 [json_name = "dimensions"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.dimensions_, this_._impl_.dimensions_->GetCachedSize(), target,
        stream);
  }

  // map<string, string> parameters = 5 [json_name = "parameters"];
  if (!this_._internal_parameters().empty()) {
    using MapType = ::google::protobuf::Map<::std::string, ::std::string>;
    using WireHelper = _pbi::MapEntryFuncs<::std::string, ::std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_parameters();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RoomConfig.parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RoomConfig.parameters");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RoomConfig.parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RoomConfig.parameters");
      }
    }
  }

  // .api.v1alpha1.EntitySpawnConfig spawn_config = 6 [json_name = "spawnConfig"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.spawn_config_, this_._impl_.spawn_config_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.RoomConfig)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RoomConfig::ByteSizeLong(const MessageLite& base) {
  const RoomConfig& this_ = static_cast<const RoomConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RoomConfig::ByteSizeLong() const {
  const RoomConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.RoomConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, string> parameters = 5 [json_name = "parameters"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_parameters_size());
      for (const auto& entry : this_._internal_parameters()) {
        total_size += _pbi::MapEntryFuncs<::std::string, ::std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // string room_type = 1 [json_name = "roomType"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_room_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_room_type());
      }
    }
    // string theme = 2 [json_name = "theme"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_theme().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_theme());
      }
    }
    // string difficulty = 3 [json_name = "difficulty"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_difficulty().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_difficulty());
      }
    }
    // .api.v1alpha1.RoomDimensions dimensions = 4 [json_name = "dimensions"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.dimensions_);
    }
    // .api.v1alpha1.EntitySpawnConfig spawn_config = 6 [json_name = "spawnConfig"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.spawn_config_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RoomConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RoomConfig*>(&to_msg);
  auto& from = static_cast<const RoomConfig&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.RoomConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_room_type().empty()) {
        _this->_internal_set_room_type(from._internal_room_type());
      } else {
        if (_this->_impl_.room_type_.IsDefault()) {
          _this->_internal_set_room_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_theme().empty()) {
        _this->_internal_set_theme(from._internal_theme());
      } else {
        if (_this->_impl_.theme_.IsDefault()) {
          _this->_internal_set_theme("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_difficulty().empty()) {
        _this->_internal_set_difficulty(from._internal_difficulty());
      } else {
        if (_this->_impl_.difficulty_.IsDefault()) {
          _this->_internal_set_difficulty("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(from._impl_.dimensions_ != nullptr);
      if (_this->_impl_.dimensions_ == nullptr) {
        _this->_impl_.dimensions_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dimensions_);
      } else {
        _this->_impl_.dimensions_->MergeFrom(*from._impl_.dimensions_);
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(from._impl_.spawn_config_ != nullptr);
      if (_this->_impl_.spawn_config_ == nullptr) {
        _this->_impl_.spawn_config_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.spawn_config_);
      } else {
        _this->_impl_.spawn_config_->MergeFrom(*from._impl_.spawn_config_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RoomConfig::CopyFrom(const RoomConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.RoomConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RoomConfig::InternalSwap(RoomConfig* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.parameters_.InternalSwap(&other->_impl_.parameters_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.room_type_, &other->_impl_.room_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.theme_, &other->_impl_.theme_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.difficulty_, &other->_impl_.difficulty_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RoomConfig, _impl_.spawn_config_)
      + sizeof(RoomConfig::_impl_.spawn_config_)
      - PROTOBUF_FIELD_OFFSET(RoomConfig, _impl_.dimensions_)>(
          reinterpret_cast<char*>(&_impl_.dimensions_),
          reinterpret_cast<char*>(&other->_impl_.dimensions_));
}

::google::protobuf::Metadata RoomConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
EntitySpawnConfig_TypeWeightsEntry_DoNotUse::EntitySpawnConfig_TypeWeightsEntry_DoNotUse()
    : SuperType(EntitySpawnConfig_TypeWeightsEntry_DoNotUse_class_data_.base()) {}
EntitySpawnConfig_TypeWeightsEntry_DoNotUse::EntitySpawnConfig_TypeWeightsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, EntitySpawnConfig_TypeWeightsEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
EntitySpawnConfig_TypeWeightsEntry_DoNotUse::EntitySpawnConfig_TypeWeightsEntry_DoNotUse() : SuperType() {}
EntitySpawnConfig_TypeWeightsEntry_DoNotUse::EntitySpawnConfig_TypeWeightsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL EntitySpawnConfig_TypeWeightsEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EntitySpawnConfig_TypeWeightsEntry_DoNotUse(arena);
}
constexpr auto EntitySpawnConfig_TypeWeightsEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EntitySpawnConfig_TypeWeightsEntry_DoNotUse),
                                            alignof(EntitySpawnConfig_TypeWeightsEntry_DoNotUse));
}
constexpr auto EntitySpawnConfig_TypeWeightsEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EntitySpawnConfig_TypeWeightsEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EntitySpawnConfig_TypeWeightsEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EntitySpawnConfig_TypeWeightsEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EntitySpawnConfig_TypeWeightsEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&EntitySpawnConfig_TypeWeightsEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EntitySpawnConfig_TypeWeightsEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &EntitySpawnConfig_TypeWeightsEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fcommon_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EntitySpawnConfig_TypeWeightsEntry_DoNotUse_class_data_ =
        EntitySpawnConfig_TypeWeightsEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EntitySpawnConfig_TypeWeightsEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EntitySpawnConfig_TypeWeightsEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EntitySpawnConfig_TypeWeightsEntry_DoNotUse_class_data_.tc_table);
  return EntitySpawnConfig_TypeWeightsEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 59, 2>
EntitySpawnConfig_TypeWeightsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EntitySpawnConfig_TypeWeightsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    EntitySpawnConfig_TypeWeightsEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::EntitySpawnConfig_TypeWeightsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 value = 2 [json_name = "value"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EntitySpawnConfig_TypeWeightsEntry_DoNotUse, _impl_.value_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(EntitySpawnConfig_TypeWeightsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EntitySpawnConfig_TypeWeightsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(EntitySpawnConfig_TypeWeightsEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(EntitySpawnConfig_TypeWeightsEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\57\3\0\0\0\0\0\0"
    "api.v1alpha1.EntitySpawnConfig.TypeWeightsEntry"
    "key"
  }},
};
// ===================================================================

class EntitySpawnConfig::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<EntitySpawnConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EntitySpawnConfig, _impl_._has_bits_);
};

EntitySpawnConfig::EntitySpawnConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EntitySpawnConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.EntitySpawnConfig)
}
PROTOBUF_NDEBUG_INLINE EntitySpawnConfig::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::EntitySpawnConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        allowed_types_{visibility, arena, from.allowed_types_},
        forbidden_types_{visibility, arena, from.forbidden_types_},
        type_weights_{visibility, arena, from.type_weights_} {}

EntitySpawnConfig::EntitySpawnConfig(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EntitySpawnConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EntitySpawnConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EntitySpawnConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, min_entities_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, min_entities_),
           offsetof(Impl_, max_entities_) -
               offsetof(Impl_, min_entities_) +
               sizeof(Impl_::max_entities_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.EntitySpawnConfig)
}
PROTOBUF_NDEBUG_INLINE EntitySpawnConfig::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        allowed_types_{visibility, arena},
        forbidden_types_{visibility, arena},
        type_weights_{visibility, arena} {}

inline void EntitySpawnConfig::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, min_entities_),
           0,
           offsetof(Impl_, max_entities_) -
               offsetof(Impl_, min_entities_) +
               sizeof(Impl_::max_entities_));
}
EntitySpawnConfig::~EntitySpawnConfig() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.EntitySpawnConfig)
  SharedDtor(*this);
}
inline void EntitySpawnConfig::SharedDtor(MessageLite& self) {
  EntitySpawnConfig& this_ = static_cast<EntitySpawnConfig&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EntitySpawnConfig::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EntitySpawnConfig(arena);
}
constexpr auto EntitySpawnConfig::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(EntitySpawnConfig, _impl_.allowed_types_) +
          decltype(EntitySpawnConfig::_impl_.allowed_types_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EntitySpawnConfig, _impl_.forbidden_types_) +
          decltype(EntitySpawnConfig::_impl_.forbidden_types_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EntitySpawnConfig, _impl_.type_weights_) +
          decltype(EntitySpawnConfig::_impl_.type_weights_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EntitySpawnConfig, _impl_.type_weights_) +
          decltype(EntitySpawnConfig::_impl_.type_weights_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(EntitySpawnConfig), alignof(EntitySpawnConfig), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&EntitySpawnConfig::PlacementNew_,
                                 sizeof(EntitySpawnConfig),
                                 alignof(EntitySpawnConfig));
  }
}
constexpr auto EntitySpawnConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EntitySpawnConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EntitySpawnConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EntitySpawnConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EntitySpawnConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EntitySpawnConfig>(), &EntitySpawnConfig::ByteSizeLong,
              &EntitySpawnConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EntitySpawnConfig, _impl_._cached_size_),
          false,
      },
      &EntitySpawnConfig::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fcommon_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EntitySpawnConfig_class_data_ =
        EntitySpawnConfig::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EntitySpawnConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EntitySpawnConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EntitySpawnConfig_class_data_.tc_table);
  return EntitySpawnConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 1, 79, 2>
EntitySpawnConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EntitySpawnConfig, _impl_._has_bits_),
    0, // no _extensions_
    5, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    EntitySpawnConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::EntitySpawnConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string forbidden_types = 4 [json_name = "forbiddenTypes"];
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(EntitySpawnConfig, _impl_.forbidden_types_)}},
    // int32 min_entities = 1 [json_name = "minEntities"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EntitySpawnConfig, _impl_.min_entities_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(EntitySpawnConfig, _impl_.min_entities_)}},
    // int32 max_entities = 2 [json_name = "maxEntities"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EntitySpawnConfig, _impl_.max_entities_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(EntitySpawnConfig, _impl_.max_entities_)}},
    // repeated string allowed_types = 3 [json_name = "allowedTypes"];
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(EntitySpawnConfig, _impl_.allowed_types_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 min_entities = 1 [json_name = "minEntities"];
    {PROTOBUF_FIELD_OFFSET(EntitySpawnConfig, _impl_.min_entities_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 max_entities = 2 [json_name = "maxEntities"];
    {PROTOBUF_FIELD_OFFSET(EntitySpawnConfig, _impl_.max_entities_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated string allowed_types = 3 [json_name = "allowedTypes"];
    {PROTOBUF_FIELD_OFFSET(EntitySpawnConfig, _impl_.allowed_types_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string forbidden_types = 4 [json_name = "forbiddenTypes"];
    {PROTOBUF_FIELD_OFFSET(EntitySpawnConfig, _impl_.forbidden_types_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // map<string, int32> type_weights = 5 [json_name = "typeWeights"];
    {PROTOBUF_FIELD_OFFSET(EntitySpawnConfig, _impl_.type_weights_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }},
  {{
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 5,
                                       0)},
  }},
  {{
    "\36\0\0\15\17\14\0\0"
    "api.v1alpha1.EntitySpawnConfig"
    "allowed_types"
    "forbidden_types"
    "type_weights"
  }},
};
PROTOBUF_NOINLINE void EntitySpawnConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.EntitySpawnConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.allowed_types_.Clear();
  _impl_.forbidden_types_.Clear();
  _impl_.type_weights_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    ::memset(&_impl_.min_entities_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.max_entities_) -
        reinterpret_cast<char*>(&_impl_.min_entities_)) + sizeof(_impl_.max_entities_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EntitySpawnConfig::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EntitySpawnConfig& this_ = static_cast<const EntitySpawnConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EntitySpawnConfig::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EntitySpawnConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.EntitySpawnConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 min_entities = 1 [json_name = "minEntities"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_min_entities() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_min_entities(), target);
    }
  }

  // int32 max_entities = 2 [json_name = "maxEntities"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_max_entities() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_max_entities(), target);
    }
  }

  // repeated string allowed_types = 3 [json_name = "allowedTypes"];
  for (int i = 0, n = this_._internal_allowed_types_size(); i < n; ++i) {
    const auto& s = this_._internal_allowed_types().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EntitySpawnConfig.allowed_types");
    target = stream->WriteString(3, s, target);
  }

  // repeated string forbidden_types = 4 [json_name = "forbiddenTypes"];
  for (int i = 0, n = this_._internal_forbidden_types_size(); i < n; ++i) {
    const auto& s = this_._internal_forbidden_types().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EntitySpawnConfig.forbidden_types");
    target = stream->WriteString(4, s, target);
  }

  // map<string, int32> type_weights = 5 [json_name = "typeWeights"];
  if (!this_._internal_type_weights().empty()) {
    using MapType = ::google::protobuf::Map<::std::string, ::int32_t>;
    using WireHelper = _pbi::MapEntryFuncs<::std::string, ::int32_t,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_INT32>;
    const auto& field = this_._internal_type_weights();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EntitySpawnConfig.type_weights");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.EntitySpawnConfig.type_weights");
      }
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.EntitySpawnConfig)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EntitySpawnConfig::ByteSizeLong(const MessageLite& base) {
  const EntitySpawnConfig& this_ = static_cast<const EntitySpawnConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EntitySpawnConfig::ByteSizeLong() const {
  const EntitySpawnConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.EntitySpawnConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string allowed_types = 3 [json_name = "allowedTypes"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_allowed_types().size());
      for (int i = 0, n = this_._internal_allowed_types().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_allowed_types().Get(i));
      }
    }
    // repeated string forbidden_types = 4 [json_name = "forbiddenTypes"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_forbidden_types().size());
      for (int i = 0, n = this_._internal_forbidden_types().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_forbidden_types().Get(i));
      }
    }
    // map<string, int32> type_weights = 5 [json_name = "typeWeights"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_type_weights_size());
      for (const auto& entry : this_._internal_type_weights()) {
        total_size += _pbi::MapEntryFuncs<::std::string, ::int32_t,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_INT32>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // int32 min_entities = 1 [json_name = "minEntities"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_min_entities() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_min_entities());
      }
    }
    // int32 max_entities = 2 [json_name = "maxEntities"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_max_entities() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_max_entities());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EntitySpawnConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EntitySpawnConfig*>(&to_msg);
  auto& from = static_cast<const EntitySpawnConfig&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.EntitySpawnConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_allowed_types()->MergeFrom(from._internal_allowed_types());
  _this->_internal_mutable_forbidden_types()->MergeFrom(from._internal_forbidden_types());
  _this->_impl_.type_weights_.MergeFrom(from._impl_.type_weights_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (from._internal_min_entities() != 0) {
        _this->_impl_.min_entities_ = from._impl_.min_entities_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_max_entities() != 0) {
        _this->_impl_.max_entities_ = from._impl_.max_entities_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EntitySpawnConfig::CopyFrom(const EntitySpawnConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.EntitySpawnConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EntitySpawnConfig::InternalSwap(EntitySpawnConfig* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.allowed_types_.InternalSwap(&other->_impl_.allowed_types_);
  _impl_.forbidden_types_.InternalSwap(&other->_impl_.forbidden_types_);
  _impl_.type_weights_.InternalSwap(&other->_impl_.type_weights_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EntitySpawnConfig, _impl_.max_entities_)
      + sizeof(EntitySpawnConfig::_impl_.max_entities_)
      - PROTOBUF_FIELD_OFFSET(EntitySpawnConfig, _impl_.min_entities_)>(
          reinterpret_cast<char*>(&_impl_.min_entities_),
          reinterpret_cast<char*>(&other->_impl_.min_entities_));
}

::google::protobuf::Metadata EntitySpawnConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RoomStructure::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RoomStructure>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RoomStructure, _impl_._has_bits_);
};

RoomStructure::RoomStructure(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RoomStructure_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.RoomStructure)
}
PROTOBUF_NDEBUG_INLINE RoomStructure::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::RoomStructure& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        walls_{visibility, arena, from.walls_},
        doors_{visibility, arena, from.doors_},
        terrain_features_{visibility, arena, from.terrain_features_},
        connections_{visibility, arena, from.connections_},
        id_(arena, from.id_),
        seed_(arena, from.seed_) {}

RoomStructure::RoomStructure(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RoomStructure& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RoomStructure_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RoomStructure* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.dimensions_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dimensions_)
                : nullptr;
  _impl_.config_ = ((cached_has_bits & 0x00000008U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.config_)
                : nullptr;
  _impl_.generated_at_ = from._impl_.generated_at_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.RoomStructure)
}
PROTOBUF_NDEBUG_INLINE RoomStructure::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        walls_{visibility, arena},
        doors_{visibility, arena},
        terrain_features_{visibility, arena},
        connections_{visibility, arena},
        id_(arena),
        seed_(arena) {}

inline void RoomStructure::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, dimensions_),
           0,
           offsetof(Impl_, generated_at_) -
               offsetof(Impl_, dimensions_) +
               sizeof(Impl_::generated_at_));
}
RoomStructure::~RoomStructure() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.RoomStructure)
  SharedDtor(*this);
}
inline void RoomStructure::SharedDtor(MessageLite& self) {
  RoomStructure& this_ = static_cast<RoomStructure&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.seed_.Destroy();
  delete this_._impl_.dimensions_;
  delete this_._impl_.config_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RoomStructure::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RoomStructure(arena);
}
constexpr auto RoomStructure::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RoomStructure, _impl_.walls_) +
          decltype(RoomStructure::_impl_.walls_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RoomStructure, _impl_.doors_) +
          decltype(RoomStructure::_impl_.doors_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RoomStructure, _impl_.terrain_features_) +
          decltype(RoomStructure::_impl_.terrain_features_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RoomStructure, _impl_.connections_) +
          decltype(RoomStructure::_impl_.connections_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RoomStructure), alignof(RoomStructure), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RoomStructure::PlacementNew_,
                                 sizeof(RoomStructure),
                                 alignof(RoomStructure));
  }
}
constexpr auto RoomStructure::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RoomStructure_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RoomStructure::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RoomStructure>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RoomStructure::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RoomStructure>(), &RoomStructure::ByteSizeLong,
              &RoomStructure::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RoomStructure, _impl_._cached_size_),
          false,
      },
      &RoomStructure::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fcommon_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RoomStructure_class_data_ =
        RoomStructure::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RoomStructure::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RoomStructure_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RoomStructure_class_data_.tc_table);
  return RoomStructure_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 6, 49, 2>
RoomStructure::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RoomStructure, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RoomStructure_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::RoomStructure>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RoomStructure, _impl_.id_)}},
    // .api.v1alpha1.RoomDimensions dimensions = 2 [json_name = "dimensions"];
    {::_pbi::TcParser::FastMtS1,
     {18, 2, 0, PROTOBUF_FIELD_OFFSET(RoomStructure, _impl_.dimensions_)}},
    // repeated .api.v1alpha1.Wall walls = 3 [json_name = "walls"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(RoomStructure, _impl_.walls_)}},
    // repeated .api.v1alpha1.Door doors = 4 [json_name = "doors"];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 2, PROTOBUF_FIELD_OFFSET(RoomStructure, _impl_.doors_)}},
    // repeated .api.v1alpha1.TerrainFeature terrain_features = 5 [json_name = "terrainFeatures"];
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 3, PROTOBUF_FIELD_OFFSET(RoomStructure, _impl_.terrain_features_)}},
    // repeated .api.v1alpha1.RoomConnection connections = 6 [json_name = "connections"];
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 4, PROTOBUF_FIELD_OFFSET(RoomStructure, _impl_.connections_)}},
    // string seed = 7 [json_name = "seed"];
    {::_pbi::TcParser::FastUS1,
     {58, 1, 0, PROTOBUF_FIELD_OFFSET(RoomStructure, _impl_.seed_)}},
    // .api.v1alpha1.RoomConfig config = 8 [json_name = "config"];
    {::_pbi::TcParser::FastMtS1,
     {66, 3, 5, PROTOBUF_FIELD_OFFSET(RoomStructure, _impl_.config_)}},
    // int64 generated_at = 9 [json_name = "generatedAt"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RoomStructure, _impl_.generated_at_), 4>(),
     {72, 4, 0, PROTOBUF_FIELD_OFFSET(RoomStructure, _impl_.generated_at_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(RoomStructure, _impl_.id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.RoomDimensions dimensions = 2 [json_name = "dimensions"];
    {PROTOBUF_FIELD_OFFSET(RoomStructure, _impl_.dimensions_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .api.v1alpha1.Wall walls = 3 [json_name = "walls"];
    {PROTOBUF_FIELD_OFFSET(RoomStructure, _impl_.walls_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .api.v1alpha1.Door doors = 4 [json_name = "doors"];
    {PROTOBUF_FIELD_OFFSET(RoomStructure, _impl_.doors_), -1, 2, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .api.v1alpha1.TerrainFeature terrain_features = 5 [json_name = "terrainFeatures"];
    {PROTOBUF_FIELD_OFFSET(RoomStructure, _impl_.terrain_features_), -1, 3, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .api.v1alpha1.RoomConnection connections = 6 [json_name = "connections"];
    {PROTOBUF_FIELD_OFFSET(RoomStructure, _impl_.connections_), -1, 4, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string seed = 7 [json_name = "seed"];
    {PROTOBUF_FIELD_OFFSET(RoomStructure, _impl_.seed_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.RoomConfig config = 8 [json_name = "config"];
    {PROTOBUF_FIELD_OFFSET(RoomStructure, _impl_.config_), _Internal::kHasBitsOffset + 3, 5, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 generated_at = 9 [json_name = "generatedAt"];
    {PROTOBUF_FIELD_OFFSET(RoomStructure, _impl_.generated_at_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RoomDimensions>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Wall>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Door>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::TerrainFeature>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RoomConnection>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RoomConfig>()},
  }},
  {{
    "\32\2\0\0\0\0\0\4\0\0\0\0\0\0\0\0"
    "api.v1alpha1.RoomStructure"
    "id"
    "seed"
  }},
};
PROTOBUF_NOINLINE void RoomStructure::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.RoomStructure)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.walls_.Clear();
  _impl_.doors_.Clear();
  _impl_.terrain_features_.Clear();
  _impl_.connections_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.seed_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.dimensions_ != nullptr);
      _impl_.dimensions_->Clear();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(_impl_.config_ != nullptr);
      _impl_.config_->Clear();
    }
  }
  _impl_.generated_at_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RoomStructure::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RoomStructure& this_ = static_cast<const RoomStructure&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RoomStructure::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RoomStructure& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.RoomStructure)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1 [json_name = "id"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_id().empty()) {
      const ::std::string& _s = this_._internal_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RoomStructure.id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.RoomDimensions dimensions = 2 [json_name = "dimensions"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.dimensions_, this_._impl_.dimensions_->GetCachedSize(), target,
        stream);
  }

  // repeated .api.v1alpha1.Wall walls = 3 [json_name = "walls"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_walls_size());
       i < n; i++) {
    const auto& repfield = this_._internal_walls().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .api.v1alpha1.Door doors = 4 [json_name = "doors"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_doors_size());
       i < n; i++) {
    const auto& repfield = this_._internal_doors().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .api.v1alpha1.TerrainFeature terrain_features = 5 [json_name = "terrainFeatures"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_terrain_features_size());
       i < n; i++) {
    const auto& repfield = this_._internal_terrain_features().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .api.v1alpha1.RoomConnection connections = 6 [json_name = "connections"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_connections_size());
       i < n; i++) {
    const auto& repfield = this_._internal_connections().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            6, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // string seed = 7 [json_name = "seed"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    if (!this_._internal_seed().empty()) {
      const ::std::string& _s = this_._internal_seed();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RoomStructure.seed");
      target = stream->WriteStringMaybeAliased(7, _s, target);
    }
  }

  // .api.v1alpha1.RoomConfig config = 8 [json_name = "config"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *this_._impl_.config_, this_._impl_.config_->GetCachedSize(), target,
        stream);
  }

  // int64 generated_at = 9 [json_name = "generatedAt"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    if (this_._internal_generated_at() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<9>(
              stream, this_._internal_generated_at(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.RoomStructure)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RoomStructure::ByteSizeLong(const MessageLite& base) {
  const RoomStructure& this_ = static_cast<const RoomStructure&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RoomStructure::ByteSizeLong() const {
  const RoomStructure& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.RoomStructure)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.Wall walls = 3 [json_name = "walls"];
    {
      total_size += 1UL * this_._internal_walls_size();
      for (const auto& msg : this_._internal_walls()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .api.v1alpha1.Door doors = 4 [json_name = "doors"];
    {
      total_size += 1UL * this_._internal_doors_size();
      for (const auto& msg : this_._internal_doors()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .api.v1alpha1.TerrainFeature terrain_features = 5 [json_name = "terrainFeatures"];
    {
      total_size += 1UL * this_._internal_terrain_features_size();
      for (const auto& msg : this_._internal_terrain_features()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .api.v1alpha1.RoomConnection connections = 6 [json_name = "connections"];
    {
      total_size += 1UL * this_._internal_connections_size();
      for (const auto& msg : this_._internal_connections()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // string id = 1 [json_name = "id"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_id());
      }
    }
    // string seed = 7 [json_name = "seed"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_seed().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_seed());
      }
    }
    // .api.v1alpha1.RoomDimensions dimensions = 2 [json_name = "dimensions"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.dimensions_);
    }
    // .api.v1alpha1.RoomConfig config = 8 [json_name = "config"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.config_);
    }
    // int64 generated_at = 9 [json_name = "generatedAt"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_generated_at() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_generated_at());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RoomStructure::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RoomStructure*>(&to_msg);
  auto& from = static_cast<const RoomStructure&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.RoomStructure)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_walls()->MergeFrom(
      from._internal_walls());
  _this->_internal_mutable_doors()->MergeFrom(
      from._internal_doors());
  _this->_internal_mutable_terrain_features()->MergeFrom(
      from._internal_terrain_features());
  _this->_internal_mutable_connections()->MergeFrom(
      from._internal_connections());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_id().empty()) {
        _this->_internal_set_id(from._internal_id());
      } else {
        if (_this->_impl_.id_.IsDefault()) {
          _this->_internal_set_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_seed().empty()) {
        _this->_internal_set_seed(from._internal_seed());
      } else {
        if (_this->_impl_.seed_.IsDefault()) {
          _this->_internal_set_seed("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.dimensions_ != nullptr);
      if (_this->_impl_.dimensions_ == nullptr) {
        _this->_impl_.dimensions_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dimensions_);
      } else {
        _this->_impl_.dimensions_->MergeFrom(*from._impl_.dimensions_);
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(from._impl_.config_ != nullptr);
      if (_this->_impl_.config_ == nullptr) {
        _this->_impl_.config_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.config_);
      } else {
        _this->_impl_.config_->MergeFrom(*from._impl_.config_);
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_generated_at() != 0) {
        _this->_impl_.generated_at_ = from._impl_.generated_at_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RoomStructure::CopyFrom(const RoomStructure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.RoomStructure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RoomStructure::InternalSwap(RoomStructure* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.walls_.InternalSwap(&other->_impl_.walls_);
  _impl_.doors_.InternalSwap(&other->_impl_.doors_);
  _impl_.terrain_features_.InternalSwap(&other->_impl_.terrain_features_);
  _impl_.connections_.InternalSwap(&other->_impl_.connections_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.seed_, &other->_impl_.seed_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RoomStructure, _impl_.generated_at_)
      + sizeof(RoomStructure::_impl_.generated_at_)
      - PROTOBUF_FIELD_OFFSET(RoomStructure, _impl_.dimensions_)>(
          reinterpret_cast<char*>(&_impl_.dimensions_),
          reinterpret_cast<char*>(&other->_impl_.dimensions_));
}

::google::protobuf::Metadata RoomStructure::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
Wall_PropertiesEntry_DoNotUse::Wall_PropertiesEntry_DoNotUse()
    : SuperType(Wall_PropertiesEntry_DoNotUse_class_data_.base()) {}
Wall_PropertiesEntry_DoNotUse::Wall_PropertiesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, Wall_PropertiesEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
Wall_PropertiesEntry_DoNotUse::Wall_PropertiesEntry_DoNotUse() : SuperType() {}
Wall_PropertiesEntry_DoNotUse::Wall_PropertiesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL Wall_PropertiesEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Wall_PropertiesEntry_DoNotUse(arena);
}
constexpr auto Wall_PropertiesEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Wall_PropertiesEntry_DoNotUse),
                                            alignof(Wall_PropertiesEntry_DoNotUse));
}
constexpr auto Wall_PropertiesEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Wall_PropertiesEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Wall_PropertiesEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Wall_PropertiesEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Wall_PropertiesEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&Wall_PropertiesEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Wall_PropertiesEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &Wall_PropertiesEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fcommon_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Wall_PropertiesEntry_DoNotUse_class_data_ =
        Wall_PropertiesEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Wall_PropertiesEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Wall_PropertiesEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Wall_PropertiesEntry_DoNotUse_class_data_.tc_table);
  return Wall_PropertiesEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 50, 2>
Wall_PropertiesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Wall_PropertiesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Wall_PropertiesEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::Wall_PropertiesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Wall_PropertiesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Wall_PropertiesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(Wall_PropertiesEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(Wall_PropertiesEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\41\3\5\0\0\0\0\0"
    "api.v1alpha1.Wall.PropertiesEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class Wall::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Wall>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Wall, _impl_._has_bits_);
};

Wall::Wall(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Wall_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.Wall)
}
PROTOBUF_NDEBUG_INLINE Wall::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::Wall& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        properties_{visibility, arena, from.properties_},
        material_(arena, from.material_),
        texture_id_(arena, from.texture_id_) {}

Wall::Wall(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Wall& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Wall_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Wall* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.start_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.start_)
                : nullptr;
  _impl_.end_ = ((cached_has_bits & 0x00000008U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.end_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, thickness_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, thickness_),
           offsetof(Impl_, blocks_line_of_sight_) -
               offsetof(Impl_, thickness_) +
               sizeof(Impl_::blocks_line_of_sight_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.Wall)
}
PROTOBUF_NDEBUG_INLINE Wall::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        properties_{visibility, arena},
        material_(arena),
        texture_id_(arena) {}

inline void Wall::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, start_),
           0,
           offsetof(Impl_, blocks_line_of_sight_) -
               offsetof(Impl_, start_) +
               sizeof(Impl_::blocks_line_of_sight_));
}
Wall::~Wall() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.Wall)
  SharedDtor(*this);
}
inline void Wall::SharedDtor(MessageLite& self) {
  Wall& this_ = static_cast<Wall&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.material_.Destroy();
  this_._impl_.texture_id_.Destroy();
  delete this_._impl_.start_;
  delete this_._impl_.end_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Wall::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Wall(arena);
}
constexpr auto Wall::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Wall, _impl_.properties_) +
          decltype(Wall::_impl_.properties_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Wall, _impl_.properties_) +
          decltype(Wall::_impl_.properties_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Wall), alignof(Wall), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Wall::PlacementNew_,
                                 sizeof(Wall),
                                 alignof(Wall));
  }
}
constexpr auto Wall::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Wall_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Wall::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Wall>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Wall::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Wall>(), &Wall::ByteSizeLong,
              &Wall::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Wall, _impl_._cached_size_),
          false,
      },
      &Wall::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fcommon_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Wall_class_data_ =
        Wall::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Wall::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Wall_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Wall_class_data_.tc_table);
  return Wall_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 3, 62, 2>
Wall::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Wall, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Wall_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::Wall>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .api.v1alpha1.Position start = 1 [json_name = "start"];
    {::_pbi::TcParser::FastMtS1,
     {10, 2, 0, PROTOBUF_FIELD_OFFSET(Wall, _impl_.start_)}},
    // .api.v1alpha1.Position end = 2 [json_name = "end"];
    {::_pbi::TcParser::FastMtS1,
     {18, 3, 1, PROTOBUF_FIELD_OFFSET(Wall, _impl_.end_)}},
    // string material = 3 [json_name = "material"];
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Wall, _impl_.material_)}},
    // double thickness = 4 [json_name = "thickness"];
    {::_pbi::TcParser::FastF64S1,
     {33, 4, 0, PROTOBUF_FIELD_OFFSET(Wall, _impl_.thickness_)}},
    // bool blocks_movement = 5 [json_name = "blocksMovement"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Wall, _impl_.blocks_movement_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(Wall, _impl_.blocks_movement_)}},
    // bool blocks_line_of_sight = 6 [json_name = "blocksLineOfSight"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Wall, _impl_.blocks_line_of_sight_), 6>(),
     {48, 6, 0, PROTOBUF_FIELD_OFFSET(Wall, _impl_.blocks_line_of_sight_)}},
    // string texture_id = 7 [json_name = "textureId"];
    {::_pbi::TcParser::FastUS1,
     {58, 1, 0, PROTOBUF_FIELD_OFFSET(Wall, _impl_.texture_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .api.v1alpha1.Position start = 1 [json_name = "start"];
    {PROTOBUF_FIELD_OFFSET(Wall, _impl_.start_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.Position end = 2 [json_name = "end"];
    {PROTOBUF_FIELD_OFFSET(Wall, _impl_.end_), _Internal::kHasBitsOffset + 3, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string material = 3 [json_name = "material"];
    {PROTOBUF_FIELD_OFFSET(Wall, _impl_.material_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double thickness = 4 [json_name = "thickness"];
    {PROTOBUF_FIELD_OFFSET(Wall, _impl_.thickness_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // bool blocks_movement = 5 [json_name = "blocksMovement"];
    {PROTOBUF_FIELD_OFFSET(Wall, _impl_.blocks_movement_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool blocks_line_of_sight = 6 [json_name = "blocksLineOfSight"];
    {PROTOBUF_FIELD_OFFSET(Wall, _impl_.blocks_line_of_sight_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string texture_id = 7 [json_name = "textureId"];
    {PROTOBUF_FIELD_OFFSET(Wall, _impl_.texture_id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> properties = 8 [json_name = "properties"];
    {PROTOBUF_FIELD_OFFSET(Wall, _impl_.properties_), -1, 2, (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\21\0\0\10\0\0\0\12\12\0\0\0\0\0\0\0"
    "api.v1alpha1.Wall"
    "material"
    "texture_id"
    "properties"
  }},
};
PROTOBUF_NOINLINE void Wall::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.Wall)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.properties_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.material_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.texture_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.start_ != nullptr);
      _impl_.start_->Clear();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(_impl_.end_ != nullptr);
      _impl_.end_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000070U) != 0) {
    ::memset(&_impl_.thickness_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.blocks_line_of_sight_) -
        reinterpret_cast<char*>(&_impl_.thickness_)) + sizeof(_impl_.blocks_line_of_sight_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Wall::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Wall& this_ = static_cast<const Wall&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Wall::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Wall& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.Wall)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.Position start = 1 [json_name = "start"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.start_, this_._impl_.start_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.Position end = 2 [json_name = "end"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.end_, this_._impl_.end_->GetCachedSize(), target,
        stream);
  }

  // string material = 3 [json_name = "material"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!this_._internal_material().empty()) {
      const ::std::string& _s = this_._internal_material();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.Wall.material");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // double thickness = 4 [json_name = "thickness"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_thickness()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          4, this_._internal_thickness(), target);
    }
  }

  // bool blocks_movement = 5 [json_name = "blocksMovement"];
  if ((cached_has_bits & 0x00000020U) != 0) {
    if (this_._internal_blocks_movement() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          5, this_._internal_blocks_movement(), target);
    }
  }

  // bool blocks_line_of_sight = 6 [json_name = "blocksLineOfSight"];
  if ((cached_has_bits & 0x00000040U) != 0) {
    if (this_._internal_blocks_line_of_sight() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          6, this_._internal_blocks_line_of_sight(), target);
    }
  }

  // string texture_id = 7 [json_name = "textureId"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    if (!this_._internal_texture_id().empty()) {
      const ::std::string& _s = this_._internal_texture_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.Wall.texture_id");
      target = stream->WriteStringMaybeAliased(7, _s, target);
    }
  }

  // map<string, string> properties = 8 [json_name = "properties"];
  if (!this_._internal_properties().empty()) {
    using MapType = ::google::protobuf::Map<::std::string, ::std::string>;
    using WireHelper = _pbi::MapEntryFuncs<::std::string, ::std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_properties();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            8, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.Wall.properties");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.Wall.properties");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            8, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.Wall.properties");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.Wall.properties");
      }
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.Wall)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Wall::ByteSizeLong(const MessageLite& base) {
  const Wall& this_ = static_cast<const Wall&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Wall::ByteSizeLong() const {
  const Wall& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.Wall)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, string> properties = 8 [json_name = "properties"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_properties_size());
      for (const auto& entry : this_._internal_properties()) {
        total_size += _pbi::MapEntryFuncs<::std::string, ::std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    // string material = 3 [json_name = "material"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_material().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_material());
      }
    }
    // string texture_id = 7 [json_name = "textureId"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_texture_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_texture_id());
      }
    }
    // .api.v1alpha1.Position start = 1 [json_name = "start"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.start_);
    }
    // .api.v1alpha1.Position end = 2 [json_name = "end"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.end_);
    }
    // double thickness = 4 [json_name = "thickness"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_thickness()) != 0) {
        total_size += 9;
      }
    }
    // bool blocks_movement = 5 [json_name = "blocksMovement"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_blocks_movement() != 0) {
        total_size += 2;
      }
    }
    // bool blocks_line_of_sight = 6 [json_name = "blocksLineOfSight"];
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (this_._internal_blocks_line_of_sight() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Wall::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Wall*>(&to_msg);
  auto& from = static_cast<const Wall&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.Wall)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.properties_.MergeFrom(from._impl_.properties_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_material().empty()) {
        _this->_internal_set_material(from._internal_material());
      } else {
        if (_this->_impl_.material_.IsDefault()) {
          _this->_internal_set_material("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_texture_id().empty()) {
        _this->_internal_set_texture_id(from._internal_texture_id());
      } else {
        if (_this->_impl_.texture_id_.IsDefault()) {
          _this->_internal_set_texture_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.start_ != nullptr);
      if (_this->_impl_.start_ == nullptr) {
        _this->_impl_.start_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.start_);
      } else {
        _this->_impl_.start_->MergeFrom(*from._impl_.start_);
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(from._impl_.end_ != nullptr);
      if (_this->_impl_.end_ == nullptr) {
        _this->_impl_.end_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.end_);
      } else {
        _this->_impl_.end_->MergeFrom(*from._impl_.end_);
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_thickness()) != 0) {
        _this->_impl_.thickness_ = from._impl_.thickness_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_blocks_movement() != 0) {
        _this->_impl_.blocks_movement_ = from._impl_.blocks_movement_;
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (from._internal_blocks_line_of_sight() != 0) {
        _this->_impl_.blocks_line_of_sight_ = from._impl_.blocks_line_of_sight_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Wall::CopyFrom(const Wall& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.Wall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Wall::InternalSwap(Wall* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.properties_.InternalSwap(&other->_impl_.properties_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.material_, &other->_impl_.material_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.texture_id_, &other->_impl_.texture_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Wall, _impl_.blocks_line_of_sight_)
      + sizeof(Wall::_impl_.blocks_line_of_sight_)
      - PROTOBUF_FIELD_OFFSET(Wall, _impl_.start_)>(
          reinterpret_cast<char*>(&_impl_.start_),
          reinterpret_cast<char*>(&other->_impl_.start_));
}

::google::protobuf::Metadata Wall::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
Door_PropertiesEntry_DoNotUse::Door_PropertiesEntry_DoNotUse()
    : SuperType(Door_PropertiesEntry_DoNotUse_class_data_.base()) {}
Door_PropertiesEntry_DoNotUse::Door_PropertiesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, Door_PropertiesEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
Door_PropertiesEntry_DoNotUse::Door_PropertiesEntry_DoNotUse() : SuperType() {}
Door_PropertiesEntry_DoNotUse::Door_PropertiesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL Door_PropertiesEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Door_PropertiesEntry_DoNotUse(arena);
}
constexpr auto Door_PropertiesEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Door_PropertiesEntry_DoNotUse),
                                            alignof(Door_PropertiesEntry_DoNotUse));
}
constexpr auto Door_PropertiesEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Door_PropertiesEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Door_PropertiesEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Door_PropertiesEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Door_PropertiesEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&Door_PropertiesEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Door_PropertiesEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &Door_PropertiesEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fcommon_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Door_PropertiesEntry_DoNotUse_class_data_ =
        Door_PropertiesEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Door_PropertiesEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Door_PropertiesEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Door_PropertiesEntry_DoNotUse_class_data_.tc_table);
  return Door_PropertiesEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 50, 2>
Door_PropertiesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Door_PropertiesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Door_PropertiesEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::Door_PropertiesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Door_PropertiesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Door_PropertiesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(Door_PropertiesEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(Door_PropertiesEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\41\3\5\0\0\0\0\0"
    "api.v1alpha1.Door.PropertiesEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class Door::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Door>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Door, _impl_._has_bits_);
};

Door::Door(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Door_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.Door)
}
PROTOBUF_NDEBUG_INLINE Door::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::Door& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        properties_{visibility, arena, from.properties_},
        id_(arena, from.id_),
        type_(arena, from.type_),
        state_(arena, from.state_),
        leads_to_room_(arena, from.leads_to_room_),
        key_id_(arena, from.key_id_),
        sprite_id_(arena, from.sprite_id_) {}

Door::Door(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Door& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Door_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Door* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ = ((cached_has_bits & 0x00000040U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.position_)
                : nullptr;
  _impl_.leads_to_position_ = ((cached_has_bits & 0x00000080U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.leads_to_position_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, is_secret_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, is_secret_),
           offsetof(Impl_, difficulty_class_) -
               offsetof(Impl_, is_secret_) +
               sizeof(Impl_::difficulty_class_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.Door)
}
PROTOBUF_NDEBUG_INLINE Door::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        properties_{visibility, arena},
        id_(arena),
        type_(arena),
        state_(arena),
        leads_to_room_(arena),
        key_id_(arena),
        sprite_id_(arena) {}

inline void Door::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_),
           0,
           offsetof(Impl_, difficulty_class_) -
               offsetof(Impl_, position_) +
               sizeof(Impl_::difficulty_class_));
}
Door::~Door() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.Door)
  SharedDtor(*this);
}
inline void Door::SharedDtor(MessageLite& self) {
  Door& this_ = static_cast<Door&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.type_.Destroy();
  this_._impl_.state_.Destroy();
  this_._impl_.leads_to_room_.Destroy();
  this_._impl_.key_id_.Destroy();
  this_._impl_.sprite_id_.Destroy();
  delete this_._impl_.position_;
  delete this_._impl_.leads_to_position_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Door::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Door(arena);
}
constexpr auto Door::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Door, _impl_.properties_) +
          decltype(Door::_impl_.properties_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Door, _impl_.properties_) +
          decltype(Door::_impl_.properties_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Door), alignof(Door), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Door::PlacementNew_,
                                 sizeof(Door),
                                 alignof(Door));
  }
}
constexpr auto Door::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Door_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Door::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Door>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Door::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Door>(), &Door::ByteSizeLong,
              &Door::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Door, _impl_._cached_size_),
          false,
      },
      &Door::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fcommon_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Door_class_data_ =
        Door::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Door::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Door_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Door_class_data_.tc_table);
  return Door_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 3, 83, 2>
Door::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Door, _impl_._has_bits_),
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Door_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::Door>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Door, _impl_.id_)}},
    // .api.v1alpha1.Position position = 2 [json_name = "position"];
    {::_pbi::TcParser::FastMtS1,
     {18, 6, 0, PROTOBUF_FIELD_OFFSET(Door, _impl_.position_)}},
    // string type = 3 [json_name = "type"];
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(Door, _impl_.type_)}},
    // string state = 4 [json_name = "state"];
    {::_pbi::TcParser::FastUS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(Door, _impl_.state_)}},
    // string leads_to_room = 5 [json_name = "leadsToRoom"];
    {::_pbi::TcParser::FastUS1,
     {42, 3, 0, PROTOBUF_FIELD_OFFSET(Door, _impl_.leads_to_room_)}},
    // .api.v1alpha1.Position leads_to_position = 6 [json_name = "leadsToPosition"];
    {::_pbi::TcParser::FastMtS1,
     {50, 7, 1, PROTOBUF_FIELD_OFFSET(Door, _impl_.leads_to_position_)}},
    // bool is_secret = 7 [json_name = "isSecret"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Door, _impl_.is_secret_), 8>(),
     {56, 8, 0, PROTOBUF_FIELD_OFFSET(Door, _impl_.is_secret_)}},
    // bool requires_key = 8 [json_name = "requiresKey"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Door, _impl_.requires_key_), 9>(),
     {64, 9, 0, PROTOBUF_FIELD_OFFSET(Door, _impl_.requires_key_)}},
    // string key_id = 9 [json_name = "keyId"];
    {::_pbi::TcParser::FastUS1,
     {74, 4, 0, PROTOBUF_FIELD_OFFSET(Door, _impl_.key_id_)}},
    // int32 difficulty_class = 10 [json_name = "difficultyClass"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Door, _impl_.difficulty_class_), 10>(),
     {80, 10, 0, PROTOBUF_FIELD_OFFSET(Door, _impl_.difficulty_class_)}},
    // string sprite_id = 11 [json_name = "spriteId"];
    {::_pbi::TcParser::FastUS1,
     {90, 5, 0, PROTOBUF_FIELD_OFFSET(Door, _impl_.sprite_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(Door, _impl_.id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.Position position = 2 [json_name = "position"];
    {PROTOBUF_FIELD_OFFSET(Door, _impl_.position_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string type = 3 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(Door, _impl_.type_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string state = 4 [json_name = "state"];
    {PROTOBUF_FIELD_OFFSET(Door, _impl_.state_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string leads_to_room = 5 [json_name = "leadsToRoom"];
    {PROTOBUF_FIELD_OFFSET(Door, _impl_.leads_to_room_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.Position leads_to_position = 6 [json_name = "leadsToPosition"];
    {PROTOBUF_FIELD_OFFSET(Door, _impl_.leads_to_position_), _Internal::kHasBitsOffset + 7, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool is_secret = 7 [json_name = "isSecret"];
    {PROTOBUF_FIELD_OFFSET(Door, _impl_.is_secret_), _Internal::kHasBitsOffset + 8, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool requires_key = 8 [json_name = "requiresKey"];
    {PROTOBUF_FIELD_OFFSET(Door, _impl_.requires_key_), _Internal::kHasBitsOffset + 9, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string key_id = 9 [json_name = "keyId"];
    {PROTOBUF_FIELD_OFFSET(Door, _impl_.key_id_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 difficulty_class = 10 [json_name = "difficultyClass"];
    {PROTOBUF_FIELD_OFFSET(Door, _impl_.difficulty_class_), _Internal::kHasBitsOffset + 10, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string sprite_id = 11 [json_name = "spriteId"];
    {PROTOBUF_FIELD_OFFSET(Door, _impl_.sprite_id_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> properties = 12 [json_name = "properties"];
    {PROTOBUF_FIELD_OFFSET(Door, _impl_.properties_), -1, 2, (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\21\2\0\4\5\15\0\0\0\6\0\11\12\0\0\0"
    "api.v1alpha1.Door"
    "id"
    "type"
    "state"
    "leads_to_room"
    "key_id"
    "sprite_id"
    "properties"
  }},
};
PROTOBUF_NOINLINE void Door::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.Door)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.properties_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.type_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.state_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.leads_to_room_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      _impl_.key_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      _impl_.sprite_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      ABSL_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      ABSL_DCHECK(_impl_.leads_to_position_ != nullptr);
      _impl_.leads_to_position_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000700U) != 0) {
    ::memset(&_impl_.is_secret_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.difficulty_class_) -
        reinterpret_cast<char*>(&_impl_.is_secret_)) + sizeof(_impl_.difficulty_class_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Door::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Door& this_ = static_cast<const Door&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Door::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Door& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.Door)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1 [json_name = "id"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_id().empty()) {
      const ::std::string& _s = this_._internal_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.Door.id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.Position position = 2 [json_name = "position"];
  if ((cached_has_bits & 0x00000040U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.position_, this_._impl_.position_->GetCachedSize(), target,
        stream);
  }

  // string type = 3 [json_name = "type"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    if (!this_._internal_type().empty()) {
      const ::std::string& _s = this_._internal_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.Door.type");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string state = 4 [json_name = "state"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    if (!this_._internal_state().empty()) {
      const ::std::string& _s = this_._internal_state();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.Door.state");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // string leads_to_room = 5 [json_name = "leadsToRoom"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    if (!this_._internal_leads_to_room().empty()) {
      const ::std::string& _s = this_._internal_leads_to_room();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.Door.leads_to_room");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  // .api.v1alpha1.Position leads_to_position = 6 [json_name = "leadsToPosition"];
  if ((cached_has_bits & 0x00000080U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.leads_to_position_, this_._impl_.leads_to_position_->GetCachedSize(), target,
        stream);
  }

  // bool is_secret = 7 [json_name = "isSecret"];
  if ((cached_has_bits & 0x00000100U) != 0) {
    if (this_._internal_is_secret() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          7, this_._internal_is_secret(), target);
    }
  }

  // bool requires_key = 8 [json_name = "requiresKey"];
  if ((cached_has_bits & 0x00000200U) != 0) {
    if (this_._internal_requires_key() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          8, this_._internal_requires_key(), target);
    }
  }

  // string key_id = 9 [json_name = "keyId"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    if (!this_._internal_key_id().empty()) {
      const ::std::string& _s = this_._internal_key_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.Door.key_id");
      target = stream->WriteStringMaybeAliased(9, _s, target);
    }
  }

  // int32 difficulty_class = 10 [json_name = "difficultyClass"];
  if ((cached_has_bits & 0x00000400U) != 0) {
    if (this_._internal_difficulty_class() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<10>(
              stream, this_._internal_difficulty_class(), target);
    }
  }

  // string sprite_id = 11 [json_name = "spriteId"];
  if ((cached_has_bits & 0x00000020U) != 0) {
    if (!this_._internal_sprite_id().empty()) {
      const ::std::string& _s = this_._internal_sprite_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.Door.sprite_id");
      target = stream->WriteStringMaybeAliased(11, _s, target);
    }
  }

  // map<string, string> properties = 12 [json_name = "properties"];
  if (!this_._internal_properties().empty()) {
    using MapType = ::google::protobuf::Map<::std::string, ::std::string>;
    using WireHelper = _pbi::MapEntryFuncs<::std::string, ::std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_properties();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            12, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.Door.properties");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.Door.properties");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            12, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.Door.properties");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.Door.properties");
      }
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.Door)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Door::ByteSizeLong(const MessageLite& base) {
  const Door& this_ = static_cast<const Door&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Door::ByteSizeLong() const {
  const Door& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.Door)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, string> properties = 12 [json_name = "properties"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_properties_size());
      for (const auto& entry : this_._internal_properties()) {
        total_size += _pbi::MapEntryFuncs<::std::string, ::std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    // string id = 1 [json_name = "id"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_id());
      }
    }
    // string type = 3 [json_name = "type"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_type());
      }
    }
    // string state = 4 [json_name = "state"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_state().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_state());
      }
    }
    // string leads_to_room = 5 [json_name = "leadsToRoom"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_leads_to_room().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_leads_to_room());
      }
    }
    // string key_id = 9 [json_name = "keyId"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (!this_._internal_key_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_key_id());
      }
    }
    // string sprite_id = 11 [json_name = "spriteId"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (!this_._internal_sprite_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_sprite_id());
      }
    }
    // .api.v1alpha1.Position position = 2 [json_name = "position"];
    if ((cached_has_bits & 0x00000040U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.position_);
    }
    // .api.v1alpha1.Position leads_to_position = 6 [json_name = "leadsToPosition"];
    if ((cached_has_bits & 0x00000080U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.leads_to_position_);
    }
  }
  if ((cached_has_bits & 0x00000700U) != 0) {
    // bool is_secret = 7 [json_name = "isSecret"];
    if ((cached_has_bits & 0x00000100U) != 0) {
      if (this_._internal_is_secret() != 0) {
        total_size += 2;
      }
    }
    // bool requires_key = 8 [json_name = "requiresKey"];
    if ((cached_has_bits & 0x00000200U) != 0) {
      if (this_._internal_requires_key() != 0) {
        total_size += 2;
      }
    }
    // int32 difficulty_class = 10 [json_name = "difficultyClass"];
    if ((cached_has_bits & 0x00000400U) != 0) {
      if (this_._internal_difficulty_class() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_difficulty_class());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Door::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Door*>(&to_msg);
  auto& from = static_cast<const Door&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.Door)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.properties_.MergeFrom(from._impl_.properties_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_id().empty()) {
        _this->_internal_set_id(from._internal_id());
      } else {
        if (_this->_impl_.id_.IsDefault()) {
          _this->_internal_set_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_type().empty()) {
        _this->_internal_set_type(from._internal_type());
      } else {
        if (_this->_impl_.type_.IsDefault()) {
          _this->_internal_set_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_state().empty()) {
        _this->_internal_set_state(from._internal_state());
      } else {
        if (_this->_impl_.state_.IsDefault()) {
          _this->_internal_set_state("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_leads_to_room().empty()) {
        _this->_internal_set_leads_to_room(from._internal_leads_to_room());
      } else {
        if (_this->_impl_.leads_to_room_.IsDefault()) {
          _this->_internal_set_leads_to_room("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (!from._internal_key_id().empty()) {
        _this->_internal_set_key_id(from._internal_key_id());
      } else {
        if (_this->_impl_.key_id_.IsDefault()) {
          _this->_internal_set_key_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (!from._internal_sprite_id().empty()) {
        _this->_internal_set_sprite_id(from._internal_sprite_id());
      } else {
        if (_this->_impl_.sprite_id_.IsDefault()) {
          _this->_internal_set_sprite_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      ABSL_DCHECK(from._impl_.position_ != nullptr);
      if (_this->_impl_.position_ == nullptr) {
        _this->_impl_.position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.position_);
      } else {
        _this->_impl_.position_->MergeFrom(*from._impl_.position_);
      }
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      ABSL_DCHECK(from._impl_.leads_to_position_ != nullptr);
      if (_this->_impl_.leads_to_position_ == nullptr) {
        _this->_impl_.leads_to_position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.leads_to_position_);
      } else {
        _this->_impl_.leads_to_position_->MergeFrom(*from._impl_.leads_to_position_);
      }
    }
  }
  if ((cached_has_bits & 0x00000700U) != 0) {
    if ((cached_has_bits & 0x00000100U) != 0) {
      if (from._internal_is_secret() != 0) {
        _this->_impl_.is_secret_ = from._impl_.is_secret_;
      }
    }
    if ((cached_has_bits & 0x00000200U) != 0) {
      if (from._internal_requires_key() != 0) {
        _this->_impl_.requires_key_ = from._impl_.requires_key_;
      }
    }
    if ((cached_has_bits & 0x00000400U) != 0) {
      if (from._internal_difficulty_class() != 0) {
        _this->_impl_.difficulty_class_ = from._impl_.difficulty_class_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Door::CopyFrom(const Door& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.Door)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Door::InternalSwap(Door* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.properties_.InternalSwap(&other->_impl_.properties_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.state_, &other->_impl_.state_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.leads_to_room_, &other->_impl_.leads_to_room_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_id_, &other->_impl_.key_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sprite_id_, &other->_impl_.sprite_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Door, _impl_.difficulty_class_)
      + sizeof(Door::_impl_.difficulty_class_)
      - PROTOBUF_FIELD_OFFSET(Door, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::google::protobuf::Metadata Door::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
TerrainFeature_PropertiesEntry_DoNotUse::TerrainFeature_PropertiesEntry_DoNotUse()
    : SuperType(TerrainFeature_PropertiesEntry_DoNotUse_class_data_.base()) {}
TerrainFeature_PropertiesEntry_DoNotUse::TerrainFeature_PropertiesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, TerrainFeature_PropertiesEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
TerrainFeature_PropertiesEntry_DoNotUse::TerrainFeature_PropertiesEntry_DoNotUse() : SuperType() {}
TerrainFeature_PropertiesEntry_DoNotUse::TerrainFeature_PropertiesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL TerrainFeature_PropertiesEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TerrainFeature_PropertiesEntry_DoNotUse(arena);
}
constexpr auto TerrainFeature_PropertiesEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TerrainFeature_PropertiesEntry_DoNotUse),
                                            alignof(TerrainFeature_PropertiesEntry_DoNotUse));
}
constexpr auto TerrainFeature_PropertiesEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TerrainFeature_PropertiesEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TerrainFeature_PropertiesEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TerrainFeature_PropertiesEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TerrainFeature_PropertiesEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&TerrainFeature_PropertiesEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TerrainFeature_PropertiesEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &TerrainFeature_PropertiesEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fcommon_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TerrainFeature_PropertiesEntry_DoNotUse_class_data_ =
        TerrainFeature_PropertiesEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TerrainFeature_PropertiesEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TerrainFeature_PropertiesEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TerrainFeature_PropertiesEntry_DoNotUse_class_data_.tc_table);
  return TerrainFeature_PropertiesEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 60, 2>
TerrainFeature_PropertiesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TerrainFeature_PropertiesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TerrainFeature_PropertiesEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::TerrainFeature_PropertiesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(TerrainFeature_PropertiesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TerrainFeature_PropertiesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(TerrainFeature_PropertiesEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(TerrainFeature_PropertiesEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\53\3\5\0\0\0\0\0"
    "api.v1alpha1.TerrainFeature.PropertiesEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class TerrainFeature::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TerrainFeature>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TerrainFeature, _impl_._has_bits_);
};

TerrainFeature::TerrainFeature(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TerrainFeature_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.TerrainFeature)
}
PROTOBUF_NDEBUG_INLINE TerrainFeature::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::TerrainFeature& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        area_{visibility, arena, from.area_},
        properties_{visibility, arena, from.properties_},
        id_(arena, from.id_),
        type_(arena, from.type_),
        texture_id_(arena, from.texture_id_),
        color_(arena, from.color_) {}

TerrainFeature::TerrainFeature(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TerrainFeature& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TerrainFeature_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TerrainFeature* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, movement_cost_multiplier_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, movement_cost_multiplier_),
           offsetof(Impl_, blocks_line_of_sight_) -
               offsetof(Impl_, movement_cost_multiplier_) +
               sizeof(Impl_::blocks_line_of_sight_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.TerrainFeature)
}
PROTOBUF_NDEBUG_INLINE TerrainFeature::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        area_{visibility, arena},
        properties_{visibility, arena},
        id_(arena),
        type_(arena),
        texture_id_(arena),
        color_(arena) {}

inline void TerrainFeature::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, movement_cost_multiplier_),
           0,
           offsetof(Impl_, blocks_line_of_sight_) -
               offsetof(Impl_, movement_cost_multiplier_) +
               sizeof(Impl_::blocks_line_of_sight_));
}
TerrainFeature::~TerrainFeature() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.TerrainFeature)
  SharedDtor(*this);
}
inline void TerrainFeature::SharedDtor(MessageLite& self) {
  TerrainFeature& this_ = static_cast<TerrainFeature&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.type_.Destroy();
  this_._impl_.texture_id_.Destroy();
  this_._impl_.color_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TerrainFeature::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TerrainFeature(arena);
}
constexpr auto TerrainFeature::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TerrainFeature, _impl_.area_) +
          decltype(TerrainFeature::_impl_.area_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TerrainFeature, _impl_.properties_) +
          decltype(TerrainFeature::_impl_.properties_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TerrainFeature, _impl_.properties_) +
          decltype(TerrainFeature::_impl_.properties_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(TerrainFeature), alignof(TerrainFeature), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TerrainFeature::PlacementNew_,
                                 sizeof(TerrainFeature),
                                 alignof(TerrainFeature));
  }
}
constexpr auto TerrainFeature::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TerrainFeature_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TerrainFeature::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TerrainFeature>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TerrainFeature::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TerrainFeature>(), &TerrainFeature::ByteSizeLong,
              &TerrainFeature::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TerrainFeature, _impl_._cached_size_),
          false,
      },
      &TerrainFeature::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fcommon_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TerrainFeature_class_data_ =
        TerrainFeature::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TerrainFeature::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TerrainFeature_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TerrainFeature_class_data_.tc_table);
  return TerrainFeature_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 2, 75, 2>
TerrainFeature::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TerrainFeature, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TerrainFeature_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::TerrainFeature>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TerrainFeature, _impl_.id_)}},
    // string type = 2 [json_name = "type"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(TerrainFeature, _impl_.type_)}},
    // repeated .api.v1alpha1.Position area = 3 [json_name = "area"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(TerrainFeature, _impl_.area_)}},
    // bool blocks_movement = 4 [json_name = "blocksMovement"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TerrainFeature, _impl_.blocks_movement_), 5>(),
     {32, 5, 0, PROTOBUF_FIELD_OFFSET(TerrainFeature, _impl_.blocks_movement_)}},
    // bool blocks_line_of_sight = 5 [json_name = "blocksLineOfSight"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TerrainFeature, _impl_.blocks_line_of_sight_), 6>(),
     {40, 6, 0, PROTOBUF_FIELD_OFFSET(TerrainFeature, _impl_.blocks_line_of_sight_)}},
    // double movement_cost_multiplier = 6 [json_name = "movementCostMultiplier"];
    {::_pbi::TcParser::FastF64S1,
     {49, 4, 0, PROTOBUF_FIELD_OFFSET(TerrainFeature, _impl_.movement_cost_multiplier_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string texture_id = 8 [json_name = "textureId"];
    {::_pbi::TcParser::FastUS1,
     {66, 2, 0, PROTOBUF_FIELD_OFFSET(TerrainFeature, _impl_.texture_id_)}},
    // string color = 9 [json_name = "color"];
    {::_pbi::TcParser::FastUS1,
     {74, 3, 0, PROTOBUF_FIELD_OFFSET(TerrainFeature, _impl_.color_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(TerrainFeature, _impl_.id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string type = 2 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(TerrainFeature, _impl_.type_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .api.v1alpha1.Position area = 3 [json_name = "area"];
    {PROTOBUF_FIELD_OFFSET(TerrainFeature, _impl_.area_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool blocks_movement = 4 [json_name = "blocksMovement"];
    {PROTOBUF_FIELD_OFFSET(TerrainFeature, _impl_.blocks_movement_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool blocks_line_of_sight = 5 [json_name = "blocksLineOfSight"];
    {PROTOBUF_FIELD_OFFSET(TerrainFeature, _impl_.blocks_line_of_sight_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // double movement_cost_multiplier = 6 [json_name = "movementCostMultiplier"];
    {PROTOBUF_FIELD_OFFSET(TerrainFeature, _impl_.movement_cost_multiplier_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // map<string, string> properties = 7 [json_name = "properties"];
    {PROTOBUF_FIELD_OFFSET(TerrainFeature, _impl_.properties_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string texture_id = 8 [json_name = "textureId"];
    {PROTOBUF_FIELD_OFFSET(TerrainFeature, _impl_.texture_id_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string color = 9 [json_name = "color"];
    {PROTOBUF_FIELD_OFFSET(TerrainFeature, _impl_.color_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\33\2\4\0\0\0\0\12\12\5\0\0\0\0\0\0"
    "api.v1alpha1.TerrainFeature"
    "id"
    "type"
    "properties"
    "texture_id"
    "color"
  }},
};
PROTOBUF_NOINLINE void TerrainFeature::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.TerrainFeature)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.area_.Clear();
  _impl_.properties_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.type_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.texture_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.color_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x00000070U) != 0) {
    ::memset(&_impl_.movement_cost_multiplier_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.blocks_line_of_sight_) -
        reinterpret_cast<char*>(&_impl_.movement_cost_multiplier_)) + sizeof(_impl_.blocks_line_of_sight_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TerrainFeature::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TerrainFeature& this_ = static_cast<const TerrainFeature&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TerrainFeature::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TerrainFeature& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.TerrainFeature)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1 [json_name = "id"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_id().empty()) {
      const ::std::string& _s = this_._internal_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TerrainFeature.id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string type = 2 [json_name = "type"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_type().empty()) {
      const ::std::string& _s = this_._internal_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TerrainFeature.type");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // repeated .api.v1alpha1.Position area = 3 [json_name = "area"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_area_size());
       i < n; i++) {
    const auto& repfield = this_._internal_area().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // bool blocks_movement = 4 [json_name = "blocksMovement"];
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (this_._internal_blocks_movement() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_blocks_movement(), target);
    }
  }

  // bool blocks_line_of_sight = 5 [json_name = "blocksLineOfSight"];
  if ((this_._impl_._has_bits_[0] & 0x00000040U) != 0) {
    if (this_._internal_blocks_line_of_sight() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          5, this_._internal_blocks_line_of_sight(), target);
    }
  }

  // double movement_cost_multiplier = 6 [json_name = "movementCostMultiplier"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_movement_cost_multiplier()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          6, this_._internal_movement_cost_multiplier(), target);
    }
  }

  // map<string, string> properties = 7 [json_name = "properties"];
  if (!this_._internal_properties().empty()) {
    using MapType = ::google::protobuf::Map<::std::string, ::std::string>;
    using WireHelper = _pbi::MapEntryFuncs<::std::string, ::std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_properties();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            7, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TerrainFeature.properties");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TerrainFeature.properties");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            7, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TerrainFeature.properties");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TerrainFeature.properties");
      }
    }
  }

  // string texture_id = 8 [json_name = "textureId"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_texture_id().empty()) {
      const ::std::string& _s = this_._internal_texture_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TerrainFeature.texture_id");
      target = stream->WriteStringMaybeAliased(8, _s, target);
    }
  }

  // string color = 9 [json_name = "color"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (!this_._internal_color().empty()) {
      const ::std::string& _s = this_._internal_color();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.TerrainFeature.color");
      target = stream->WriteStringMaybeAliased(9, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.TerrainFeature)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TerrainFeature::ByteSizeLong(const MessageLite& base) {
  const TerrainFeature& this_ = static_cast<const TerrainFeature&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TerrainFeature::ByteSizeLong() const {
  const TerrainFeature& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.TerrainFeature)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.Position area = 3 [json_name = "area"];
    {
      total_size += 1UL * this_._internal_area_size();
      for (const auto& msg : this_._internal_area()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // map<string, string> properties = 7 [json_name = "properties"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_properties_size());
      for (const auto& entry : this_._internal_properties()) {
        total_size += _pbi::MapEntryFuncs<::std::string, ::std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    // string id = 1 [json_name = "id"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_id());
      }
    }
    // string type = 2 [json_name = "type"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_type());
      }
    }
    // string texture_id = 8 [json_name = "textureId"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_texture_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_texture_id());
      }
    }
    // string color = 9 [json_name = "color"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_color().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_color());
      }
    }
    // double movement_cost_multiplier = 6 [json_name = "movementCostMultiplier"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_movement_cost_multiplier()) != 0) {
        total_size += 9;
      }
    }
    // bool blocks_movement = 4 [json_name = "blocksMovement"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_blocks_movement() != 0) {
        total_size += 2;
      }
    }
    // bool blocks_line_of_sight = 5 [json_name = "blocksLineOfSight"];
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (this_._internal_blocks_line_of_sight() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TerrainFeature::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TerrainFeature*>(&to_msg);
  auto& from = static_cast<const TerrainFeature&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.TerrainFeature)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_area()->MergeFrom(
      from._internal_area());
  _this->_impl_.properties_.MergeFrom(from._impl_.properties_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_id().empty()) {
        _this->_internal_set_id(from._internal_id());
      } else {
        if (_this->_impl_.id_.IsDefault()) {
          _this->_internal_set_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_type().empty()) {
        _this->_internal_set_type(from._internal_type());
      } else {
        if (_this->_impl_.type_.IsDefault()) {
          _this->_internal_set_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_texture_id().empty()) {
        _this->_internal_set_texture_id(from._internal_texture_id());
      } else {
        if (_this->_impl_.texture_id_.IsDefault()) {
          _this->_internal_set_texture_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_color().empty()) {
        _this->_internal_set_color(from._internal_color());
      } else {
        if (_this->_impl_.color_.IsDefault()) {
          _this->_internal_set_color("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_movement_cost_multiplier()) != 0) {
        _this->_impl_.movement_cost_multiplier_ = from._impl_.movement_cost_multiplier_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_blocks_movement() != 0) {
        _this->_impl_.blocks_movement_ = from._impl_.blocks_movement_;
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (from._internal_blocks_line_of_sight() != 0) {
        _this->_impl_.blocks_line_of_sight_ = from._impl_.blocks_line_of_sight_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TerrainFeature::CopyFrom(const TerrainFeature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.TerrainFeature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TerrainFeature::InternalSwap(TerrainFeature* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.area_.InternalSwap(&other->_impl_.area_);
  _impl_.properties_.InternalSwap(&other->_impl_.properties_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.texture_id_, &other->_impl_.texture_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.color_, &other->_impl_.color_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TerrainFeature, _impl_.blocks_line_of_sight_)
      + sizeof(TerrainFeature::_impl_.blocks_line_of_sight_)
      - PROTOBUF_FIELD_OFFSET(TerrainFeature, _impl_.movement_cost_multiplier_)>(
          reinterpret_cast<char*>(&_impl_.movement_cost_multiplier_),
          reinterpret_cast<char*>(&other->_impl_.movement_cost_multiplier_));
}

::google::protobuf::Metadata TerrainFeature::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
RoomConnection_PropertiesEntry_DoNotUse::RoomConnection_PropertiesEntry_DoNotUse()
    : SuperType(RoomConnection_PropertiesEntry_DoNotUse_class_data_.base()) {}
RoomConnection_PropertiesEntry_DoNotUse::RoomConnection_PropertiesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, RoomConnection_PropertiesEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
RoomConnection_PropertiesEntry_DoNotUse::RoomConnection_PropertiesEntry_DoNotUse() : SuperType() {}
RoomConnection_PropertiesEntry_DoNotUse::RoomConnection_PropertiesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL RoomConnection_PropertiesEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RoomConnection_PropertiesEntry_DoNotUse(arena);
}
constexpr auto RoomConnection_PropertiesEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RoomConnection_PropertiesEntry_DoNotUse),
                                            alignof(RoomConnection_PropertiesEntry_DoNotUse));
}
constexpr auto RoomConnection_PropertiesEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RoomConnection_PropertiesEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RoomConnection_PropertiesEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RoomConnection_PropertiesEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RoomConnection_PropertiesEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&RoomConnection_PropertiesEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RoomConnection_PropertiesEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &RoomConnection_PropertiesEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fcommon_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RoomConnection_PropertiesEntry_DoNotUse_class_data_ =
        RoomConnection_PropertiesEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RoomConnection_PropertiesEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RoomConnection_PropertiesEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RoomConnection_PropertiesEntry_DoNotUse_class_data_.tc_table);
  return RoomConnection_PropertiesEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 60, 2>
RoomConnection_PropertiesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RoomConnection_PropertiesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RoomConnection_PropertiesEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::RoomConnection_PropertiesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(RoomConnection_PropertiesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RoomConnection_PropertiesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(RoomConnection_PropertiesEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(RoomConnection_PropertiesEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\53\3\5\0\0\0\0\0"
    "api.v1alpha1.RoomConnection.PropertiesEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class RoomConnection::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RoomConnection>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RoomConnection, _impl_._has_bits_);
};

RoomConnection::RoomConnection(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RoomConnection_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.RoomConnection)
}
PROTOBUF_NDEBUG_INLINE RoomConnection::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::RoomConnection& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        properties_{visibility, arena, from.properties_},
        id_(arena, from.id_),
        connected_room_id_(arena, from.connected_room_id_),
        connection_type_(arena, from.connection_type_),
        required_action_(arena, from.required_action_) {}

RoomConnection::RoomConnection(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RoomConnection& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RoomConnection_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RoomConnection* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.this_room_position_ = ((cached_has_bits & 0x00000010U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.this_room_position_)
                : nullptr;
  _impl_.other_room_position_ = ((cached_has_bits & 0x00000020U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.other_room_position_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, is_bidirectional_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, is_bidirectional_),
           offsetof(Impl_, requires_action_) -
               offsetof(Impl_, is_bidirectional_) +
               sizeof(Impl_::requires_action_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.RoomConnection)
}
PROTOBUF_NDEBUG_INLINE RoomConnection::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        properties_{visibility, arena},
        id_(arena),
        connected_room_id_(arena),
        connection_type_(arena),
        required_action_(arena) {}

inline void RoomConnection::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, this_room_position_),
           0,
           offsetof(Impl_, requires_action_) -
               offsetof(Impl_, this_room_position_) +
               sizeof(Impl_::requires_action_));
}
RoomConnection::~RoomConnection() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.RoomConnection)
  SharedDtor(*this);
}
inline void RoomConnection::SharedDtor(MessageLite& self) {
  RoomConnection& this_ = static_cast<RoomConnection&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.connected_room_id_.Destroy();
  this_._impl_.connection_type_.Destroy();
  this_._impl_.required_action_.Destroy();
  delete this_._impl_.this_room_position_;
  delete this_._impl_.other_room_position_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RoomConnection::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RoomConnection(arena);
}
constexpr auto RoomConnection::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RoomConnection, _impl_.properties_) +
          decltype(RoomConnection::_impl_.properties_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RoomConnection, _impl_.properties_) +
          decltype(RoomConnection::_impl_.properties_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RoomConnection), alignof(RoomConnection), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RoomConnection::PlacementNew_,
                                 sizeof(RoomConnection),
                                 alignof(RoomConnection));
  }
}
constexpr auto RoomConnection::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RoomConnection_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RoomConnection::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RoomConnection>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RoomConnection::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RoomConnection>(), &RoomConnection::ByteSizeLong,
              &RoomConnection::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RoomConnection, _impl_._cached_size_),
          false,
      },
      &RoomConnection::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fcommon_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RoomConnection_class_data_ =
        RoomConnection::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RoomConnection::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RoomConnection_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RoomConnection_class_data_.tc_table);
  return RoomConnection_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 9, 3, 103, 2>
RoomConnection::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RoomConnection, _impl_._has_bits_),
    0, // no _extensions_
    9, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RoomConnection_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::RoomConnection>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string required_action = 8 [json_name = "requiredAction"];
    {::_pbi::TcParser::FastUS1,
     {66, 3, 0, PROTOBUF_FIELD_OFFSET(RoomConnection, _impl_.required_action_)}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RoomConnection, _impl_.id_)}},
    // string connected_room_id = 2 [json_name = "connectedRoomId"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(RoomConnection, _impl_.connected_room_id_)}},
    // string connection_type = 3 [json_name = "connectionType"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(RoomConnection, _impl_.connection_type_)}},
    // .api.v1alpha1.Position this_room_position = 4 [json_name = "thisRoomPosition"];
    {::_pbi::TcParser::FastMtS1,
     {34, 4, 0, PROTOBUF_FIELD_OFFSET(RoomConnection, _impl_.this_room_position_)}},
    // .api.v1alpha1.Position other_room_position = 5 [json_name = "otherRoomPosition"];
    {::_pbi::TcParser::FastMtS1,
     {42, 5, 1, PROTOBUF_FIELD_OFFSET(RoomConnection, _impl_.other_room_position_)}},
    // bool is_bidirectional = 6 [json_name = "isBidirectional"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RoomConnection, _impl_.is_bidirectional_), 6>(),
     {48, 6, 0, PROTOBUF_FIELD_OFFSET(RoomConnection, _impl_.is_bidirectional_)}},
    // bool requires_action = 7 [json_name = "requiresAction"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RoomConnection, _impl_.requires_action_), 7>(),
     {56, 7, 0, PROTOBUF_FIELD_OFFSET(RoomConnection, _impl_.requires_action_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(RoomConnection, _impl_.id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string connected_room_id = 2 [json_name = "connectedRoomId"];
    {PROTOBUF_FIELD_OFFSET(RoomConnection, _impl_.connected_room_id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string connection_type = 3 [json_name = "connectionType"];
    {PROTOBUF_FIELD_OFFSET(RoomConnection, _impl_.connection_type_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.Position this_room_position = 4 [json_name = "thisRoomPosition"];
    {PROTOBUF_FIELD_OFFSET(RoomConnection, _impl_.this_room_position_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .api.v1alpha1.Position other_room_position = 5 [json_name = "otherRoomPosition"];
    {PROTOBUF_FIELD_OFFSET(RoomConnection, _impl_.other_room_position_), _Internal::kHasBitsOffset + 5, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool is_bidirectional = 6 [json_name = "isBidirectional"];
    {PROTOBUF_FIELD_OFFSET(RoomConnection, _impl_.is_bidirectional_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool requires_action = 7 [json_name = "requiresAction"];
    {PROTOBUF_FIELD_OFFSET(RoomConnection, _impl_.requires_action_), _Internal::kHasBitsOffset + 7, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string required_action = 8 [json_name = "requiredAction"];
    {PROTOBUF_FIELD_OFFSET(RoomConnection, _impl_.required_action_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> properties = 9 [json_name = "properties"];
    {PROTOBUF_FIELD_OFFSET(RoomConnection, _impl_.properties_), -1, 2, (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\33\2\21\17\0\0\0\0\17\12\0\0\0\0\0\0"
    "api.v1alpha1.RoomConnection"
    "id"
    "connected_room_id"
    "connection_type"
    "required_action"
    "properties"
  }},
};
PROTOBUF_NOINLINE void RoomConnection::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.RoomConnection)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.properties_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.connected_room_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.connection_type_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.required_action_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(_impl_.this_room_position_ != nullptr);
      _impl_.this_room_position_->Clear();
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      ABSL_DCHECK(_impl_.other_room_position_ != nullptr);
      _impl_.other_room_position_->Clear();
    }
  }
  ::memset(&_impl_.is_bidirectional_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.requires_action_) -
      reinterpret_cast<char*>(&_impl_.is_bidirectional_)) + sizeof(_impl_.requires_action_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RoomConnection::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RoomConnection& this_ = static_cast<const RoomConnection&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RoomConnection::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RoomConnection& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.RoomConnection)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1 [json_name = "id"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_id().empty()) {
      const ::std::string& _s = this_._internal_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RoomConnection.id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string connected_room_id = 2 [json_name = "connectedRoomId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_connected_room_id().empty()) {
      const ::std::string& _s = this_._internal_connected_room_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RoomConnection.connected_room_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string connection_type = 3 [json_name = "connectionType"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_connection_type().empty()) {
      const ::std::string& _s = this_._internal_connection_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RoomConnection.connection_type");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.Position this_room_position = 4 [json_name = "thisRoomPosition"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.this_room_position_, this_._impl_.this_room_position_->GetCachedSize(), target,
        stream);
  }

  // .api.v1alpha1.Position other_room_position = 5 [json_name = "otherRoomPosition"];
  if ((cached_has_bits & 0x00000020U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.other_room_position_, this_._impl_.other_room_position_->GetCachedSize(), target,
        stream);
  }

  // bool is_bidirectional = 6 [json_name = "isBidirectional"];
  if ((cached_has_bits & 0x00000040U) != 0) {
    if (this_._internal_is_bidirectional() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          6, this_._internal_is_bidirectional(), target);
    }
  }

  // bool requires_action = 7 [json_name = "requiresAction"];
  if ((cached_has_bits & 0x00000080U) != 0) {
    if (this_._internal_requires_action() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          7, this_._internal_requires_action(), target);
    }
  }

  // string required_action = 8 [json_name = "requiredAction"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    if (!this_._internal_required_action().empty()) {
      const ::std::string& _s = this_._internal_required_action();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RoomConnection.required_action");
      target = stream->WriteStringMaybeAliased(8, _s, target);
    }
  }

  // map<string, string> properties = 9 [json_name = "properties"];
  if (!this_._internal_properties().empty()) {
    using MapType = ::google::protobuf::Map<::std::string, ::std::string>;
    using WireHelper = _pbi::MapEntryFuncs<::std::string, ::std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_properties();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            9, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RoomConnection.properties");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RoomConnection.properties");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            9, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RoomConnection.properties");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RoomConnection.properties");
      }
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.RoomConnection)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RoomConnection::ByteSizeLong(const MessageLite& base) {
  const RoomConnection& this_ = static_cast<const RoomConnection&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RoomConnection::ByteSizeLong() const {
  const RoomConnection& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.RoomConnection)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, string> properties = 9 [json_name = "properties"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_properties_size());
      for (const auto& entry : this_._internal_properties()) {
        total_size += _pbi::MapEntryFuncs<::std::string, ::std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    // string id = 1 [json_name = "id"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_id());
      }
    }
    // string connected_room_id = 2 [json_name = "connectedRoomId"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_connected_room_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_connected_room_id());
      }
    }
    // string connection_type = 3 [json_name = "connectionType"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_connection_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_connection_type());
      }
    }
    // string required_action = 8 [json_name = "requiredAction"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_required_action().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_required_action());
      }
    }
    // .api.v1alpha1.Position this_room_position = 4 [json_name = "thisRoomPosition"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.this_room_position_);
    }
    // .api.v1alpha1.Position other_room_position = 5 [json_name = "otherRoomPosition"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.other_room_position_);
    }
    // bool is_bidirectional = 6 [json_name = "isBidirectional"];
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (this_._internal_is_bidirectional() != 0) {
        total_size += 2;
      }
    }
    // bool requires_action = 7 [json_name = "requiresAction"];
    if ((cached_has_bits & 0x00000080U) != 0) {
      if (this_._internal_requires_action() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RoomConnection::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RoomConnection*>(&to_msg);
  auto& from = static_cast<const RoomConnection&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.RoomConnection)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.properties_.MergeFrom(from._impl_.properties_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_id().empty()) {
        _this->_internal_set_id(from._internal_id());
      } else {
        if (_this->_impl_.id_.IsDefault()) {
          _this->_internal_set_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_connected_room_id().empty()) {
        _this->_internal_set_connected_room_id(from._internal_connected_room_id());
      } else {
        if (_this->_impl_.connected_room_id_.IsDefault()) {
          _this->_internal_set_connected_room_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_connection_type().empty()) {
        _this->_internal_set_connection_type(from._internal_connection_type());
      } else {
        if (_this->_impl_.connection_type_.IsDefault()) {
          _this->_internal_set_connection_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_required_action().empty()) {
        _this->_internal_set_required_action(from._internal_required_action());
      } else {
        if (_this->_impl_.required_action_.IsDefault()) {
          _this->_internal_set_required_action("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(from._impl_.this_room_position_ != nullptr);
      if (_this->_impl_.this_room_position_ == nullptr) {
        _this->_impl_.this_room_position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.this_room_position_);
      } else {
        _this->_impl_.this_room_position_->MergeFrom(*from._impl_.this_room_position_);
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      ABSL_DCHECK(from._impl_.other_room_position_ != nullptr);
      if (_this->_impl_.other_room_position_ == nullptr) {
        _this->_impl_.other_room_position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.other_room_position_);
      } else {
        _this->_impl_.other_room_position_->MergeFrom(*from._impl_.other_room_position_);
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (from._internal_is_bidirectional() != 0) {
        _this->_impl_.is_bidirectional_ = from._impl_.is_bidirectional_;
      }
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      if (from._internal_requires_action() != 0) {
        _this->_impl_.requires_action_ = from._impl_.requires_action_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RoomConnection::CopyFrom(const RoomConnection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.RoomConnection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RoomConnection::InternalSwap(RoomConnection* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.properties_.InternalSwap(&other->_impl_.properties_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.connected_room_id_, &other->_impl_.connected_room_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.connection_type_, &other->_impl_.connection_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.required_action_, &other->_impl_.required_action_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RoomConnection, _impl_.requires_action_)
      + sizeof(RoomConnection::_impl_.requires_action_)
      - PROTOBUF_FIELD_OFFSET(RoomConnection, _impl_.this_room_position_)>(
          reinterpret_cast<char*>(&_impl_.this_room_position_),
          reinterpret_cast<char*>(&other->_impl_.this_room_position_));
}

::google::protobuf::Metadata RoomConnection::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Room::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Room>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Room, _impl_._has_bits_);
};

Room::Room(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Room_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.Room)
}
PROTOBUF_NDEBUG_INLINE Room::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::Room& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        entities_{visibility, arena, from.entities_},
        tags_{visibility, arena, from.tags_},
        id_(arena, from.id_),
        name_(arena, from.name_),
        description_(arena, from.description_),
        state_(arena, from.state_),
        session_id_(arena, from.session_id_),
        owner_id_(arena, from.owner_id_) {}

Room::Room(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Room& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Room_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Room* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.structure_ = ((cached_has_bits & 0x00000040U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.structure_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, created_at_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, created_at_),
           offsetof(Impl_, last_accessed_) -
               offsetof(Impl_, created_at_) +
               sizeof(Impl_::last_accessed_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.Room)
}
PROTOBUF_NDEBUG_INLINE Room::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        entities_{visibility, arena},
        tags_{visibility, arena},
        id_(arena),
        name_(arena),
        description_(arena),
        state_(arena),
        session_id_(arena),
        owner_id_(arena) {}

inline void Room::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, structure_),
           0,
           offsetof(Impl_, last_accessed_) -
               offsetof(Impl_, structure_) +
               sizeof(Impl_::last_accessed_));
}
Room::~Room() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.Room)
  SharedDtor(*this);
}
inline void Room::SharedDtor(MessageLite& self) {
  Room& this_ = static_cast<Room&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.state_.Destroy();
  this_._impl_.session_id_.Destroy();
  this_._impl_.owner_id_.Destroy();
  delete this_._impl_.structure_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Room::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Room(arena);
}
constexpr auto Room::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Room, _impl_.entities_) +
          decltype(Room::_impl_.entities_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Room, _impl_.tags_) +
          decltype(Room::_impl_.tags_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Room), alignof(Room), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Room::PlacementNew_,
                                 sizeof(Room),
                                 alignof(Room));
  }
}
constexpr auto Room::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Room_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Room::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Room>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Room::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Room>(), &Room::ByteSizeLong,
              &Room::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Room, _impl_._cached_size_),
          false,
      },
      &Room::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fcommon_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Room_class_data_ =
        Room::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Room::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Room_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Room_class_data_.tc_table);
  return Room_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 2, 78, 2>
Room::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Room, _impl_._has_bits_),
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Room_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::Room>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Room, _impl_.id_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Room, _impl_.name_)}},
    // string description = 3 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(Room, _impl_.description_)}},
    // .api.v1alpha1.RoomStructure structure = 4 [json_name = "structure"];
    {::_pbi::TcParser::FastMtS1,
     {34, 6, 0, PROTOBUF_FIELD_OFFSET(Room, _impl_.structure_)}},
    // repeated .api.v1alpha1.Entity entities = 5 [json_name = "entities"];
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 1, PROTOBUF_FIELD_OFFSET(Room, _impl_.entities_)}},
    // string state = 6 [json_name = "state"];
    {::_pbi::TcParser::FastUS1,
     {50, 3, 0, PROTOBUF_FIELD_OFFSET(Room, _impl_.state_)}},
    // string session_id = 7 [json_name = "sessionId"];
    {::_pbi::TcParser::FastUS1,
     {58, 4, 0, PROTOBUF_FIELD_OFFSET(Room, _impl_.session_id_)}},
    // string owner_id = 8 [json_name = "ownerId"];
    {::_pbi::TcParser::FastUS1,
     {66, 5, 0, PROTOBUF_FIELD_OFFSET(Room, _impl_.owner_id_)}},
    // int64 created_at = 9 [json_name = "createdAt"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Room, _impl_.created_at_), 7>(),
     {72, 7, 0, PROTOBUF_FIELD_OFFSET(Room, _impl_.created_at_)}},
    // int64 updated_at = 10 [json_name = "updatedAt"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Room, _impl_.updated_at_), 8>(),
     {80, 8, 0, PROTOBUF_FIELD_OFFSET(Room, _impl_.updated_at_)}},
    // int64 last_accessed = 11 [json_name = "lastAccessed"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Room, _impl_.last_accessed_), 9>(),
     {88, 9, 0, PROTOBUF_FIELD_OFFSET(Room, _impl_.last_accessed_)}},
    // repeated string tags = 12 [json_name = "tags"];
    {::_pbi::TcParser::FastUR1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(Room, _impl_.tags_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.name_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 3 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.description_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.RoomStructure structure = 4 [json_name = "structure"];
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.structure_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .api.v1alpha1.Entity entities = 5 [json_name = "entities"];
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.entities_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string state = 6 [json_name = "state"];
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.state_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string session_id = 7 [json_name = "sessionId"];
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.session_id_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string owner_id = 8 [json_name = "ownerId"];
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.owner_id_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 created_at = 9 [json_name = "createdAt"];
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.created_at_), _Internal::kHasBitsOffset + 7, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 updated_at = 10 [json_name = "updatedAt"];
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.updated_at_), _Internal::kHasBitsOffset + 8, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 last_accessed = 11 [json_name = "lastAccessed"];
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.last_accessed_), _Internal::kHasBitsOffset + 9, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // repeated string tags = 12 [json_name = "tags"];
    {PROTOBUF_FIELD_OFFSET(Room, _impl_.tags_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RoomStructure>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Entity>()},
  }},
  {{
    "\21\2\4\13\0\0\5\12\10\0\0\0\4\0\0\0"
    "api.v1alpha1.Room"
    "id"
    "name"
    "description"
    "state"
    "session_id"
    "owner_id"
    "tags"
  }},
};
PROTOBUF_NOINLINE void Room::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.Room)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entities_.Clear();
  _impl_.tags_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.state_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      _impl_.session_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      _impl_.owner_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      ABSL_DCHECK(_impl_.structure_ != nullptr);
      _impl_.structure_->Clear();
    }
  }
  _impl_.created_at_ = ::int64_t{0};
  if ((cached_has_bits & 0x00000300U) != 0) {
    ::memset(&_impl_.updated_at_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.last_accessed_) -
        reinterpret_cast<char*>(&_impl_.updated_at_)) + sizeof(_impl_.last_accessed_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Room::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Room& this_ = static_cast<const Room&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Room::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Room& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.Room)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1 [json_name = "id"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_id().empty()) {
      const ::std::string& _s = this_._internal_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.Room.id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string name = 2 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.Room.name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string description = 3 [json_name = "description"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.Room.description");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.RoomStructure structure = 4 [json_name = "structure"];
  if ((cached_has_bits & 0x00000040U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.structure_, this_._impl_.structure_->GetCachedSize(), target,
        stream);
  }

  // repeated .api.v1alpha1.Entity entities = 5 [json_name = "entities"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_entities_size());
       i < n; i++) {
    const auto& repfield = this_._internal_entities().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // string state = 6 [json_name = "state"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    if (!this_._internal_state().empty()) {
      const ::std::string& _s = this_._internal_state();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.Room.state");
      target = stream->WriteStringMaybeAliased(6, _s, target);
    }
  }

  // string session_id = 7 [json_name = "sessionId"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    if (!this_._internal_session_id().empty()) {
      const ::std::string& _s = this_._internal_session_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.Room.session_id");
      target = stream->WriteStringMaybeAliased(7, _s, target);
    }
  }

  // string owner_id = 8 [json_name = "ownerId"];
  if ((cached_has_bits & 0x00000020U) != 0) {
    if (!this_._internal_owner_id().empty()) {
      const ::std::string& _s = this_._internal_owner_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.Room.owner_id");
      target = stream->WriteStringMaybeAliased(8, _s, target);
    }
  }

  // int64 created_at = 9 [json_name = "createdAt"];
  if ((cached_has_bits & 0x00000080U) != 0) {
    if (this_._internal_created_at() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<9>(
              stream, this_._internal_created_at(), target);
    }
  }

  // int64 updated_at = 10 [json_name = "updatedAt"];
  if ((cached_has_bits & 0x00000100U) != 0) {
    if (this_._internal_updated_at() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<10>(
              stream, this_._internal_updated_at(), target);
    }
  }

  // int64 last_accessed = 11 [json_name = "lastAccessed"];
  if ((cached_has_bits & 0x00000200U) != 0) {
    if (this_._internal_last_accessed() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<11>(
              stream, this_._internal_last_accessed(), target);
    }
  }

  // repeated string tags = 12 [json_name = "tags"];
  for (int i = 0, n = this_._internal_tags_size(); i < n; ++i) {
    const auto& s = this_._internal_tags().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.Room.tags");
    target = stream->WriteString(12, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.Room)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Room::ByteSizeLong(const MessageLite& base) {
  const Room& this_ = static_cast<const Room&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Room::ByteSizeLong() const {
  const Room& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.Room)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.Entity entities = 5 [json_name = "entities"];
    {
      total_size += 1UL * this_._internal_entities_size();
      for (const auto& msg : this_._internal_entities()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated string tags = 12 [json_name = "tags"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_tags().size());
      for (int i = 0, n = this_._internal_tags().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_tags().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    // string id = 1 [json_name = "id"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_id());
      }
    }
    // string name = 2 [json_name = "name"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string description = 3 [json_name = "description"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // string state = 6 [json_name = "state"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_state().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_state());
      }
    }
    // string session_id = 7 [json_name = "sessionId"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (!this_._internal_session_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_session_id());
      }
    }
    // string owner_id = 8 [json_name = "ownerId"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (!this_._internal_owner_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_owner_id());
      }
    }
    // .api.v1alpha1.RoomStructure structure = 4 [json_name = "structure"];
    if ((cached_has_bits & 0x00000040U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.structure_);
    }
    // int64 created_at = 9 [json_name = "createdAt"];
    if ((cached_has_bits & 0x00000080U) != 0) {
      if (this_._internal_created_at() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_created_at());
      }
    }
  }
  if ((cached_has_bits & 0x00000300U) != 0) {
    // int64 updated_at = 10 [json_name = "updatedAt"];
    if ((cached_has_bits & 0x00000100U) != 0) {
      if (this_._internal_updated_at() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_updated_at());
      }
    }
    // int64 last_accessed = 11 [json_name = "lastAccessed"];
    if ((cached_has_bits & 0x00000200U) != 0) {
      if (this_._internal_last_accessed() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_last_accessed());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Room::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Room*>(&to_msg);
  auto& from = static_cast<const Room&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.Room)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entities()->MergeFrom(
      from._internal_entities());
  _this->_internal_mutable_tags()->MergeFrom(from._internal_tags());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_id().empty()) {
        _this->_internal_set_id(from._internal_id());
      } else {
        if (_this->_impl_.id_.IsDefault()) {
          _this->_internal_set_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_state().empty()) {
        _this->_internal_set_state(from._internal_state());
      } else {
        if (_this->_impl_.state_.IsDefault()) {
          _this->_internal_set_state("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (!from._internal_session_id().empty()) {
        _this->_internal_set_session_id(from._internal_session_id());
      } else {
        if (_this->_impl_.session_id_.IsDefault()) {
          _this->_internal_set_session_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (!from._internal_owner_id().empty()) {
        _this->_internal_set_owner_id(from._internal_owner_id());
      } else {
        if (_this->_impl_.owner_id_.IsDefault()) {
          _this->_internal_set_owner_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      ABSL_DCHECK(from._impl_.structure_ != nullptr);
      if (_this->_impl_.structure_ == nullptr) {
        _this->_impl_.structure_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.structure_);
      } else {
        _this->_impl_.structure_->MergeFrom(*from._impl_.structure_);
      }
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      if (from._internal_created_at() != 0) {
        _this->_impl_.created_at_ = from._impl_.created_at_;
      }
    }
  }
  if ((cached_has_bits & 0x00000300U) != 0) {
    if ((cached_has_bits & 0x00000100U) != 0) {
      if (from._internal_updated_at() != 0) {
        _this->_impl_.updated_at_ = from._impl_.updated_at_;
      }
    }
    if ((cached_has_bits & 0x00000200U) != 0) {
      if (from._internal_last_accessed() != 0) {
        _this->_impl_.last_accessed_ = from._impl_.last_accessed_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Room::CopyFrom(const Room& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.Room)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Room::InternalSwap(Room* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.entities_.InternalSwap(&other->_impl_.entities_);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.state_, &other->_impl_.state_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_id_, &other->_impl_.session_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_id_, &other->_impl_.owner_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Room, _impl_.last_accessed_)
      + sizeof(Room::_impl_.last_accessed_)
      - PROTOBUF_FIELD_OFFSET(Room, _impl_.structure_)>(
          reinterpret_cast<char*>(&_impl_.structure_),
          reinterpret_cast<char*>(&other->_impl_.structure_));
}

::google::protobuf::Metadata Room::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RoomError::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RoomError>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RoomError, _impl_._has_bits_);
};

RoomError::RoomError(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RoomError_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.RoomError)
}
PROTOBUF_NDEBUG_INLINE RoomError::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::RoomError& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        code_(arena, from.code_),
        message_(arena, from.message_),
        field_(arena, from.field_),
        room_id_(arena, from.room_id_),
        entity_id_(arena, from.entity_id_) {}

RoomError::RoomError(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RoomError& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RoomError_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RoomError* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ = ((cached_has_bits & 0x00000020U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.position_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.RoomError)
}
PROTOBUF_NDEBUG_INLINE RoomError::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        code_(arena),
        message_(arena),
        field_(arena),
        room_id_(arena),
        entity_id_(arena) {}

inline void RoomError::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.position_ = {};
}
RoomError::~RoomError() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.RoomError)
  SharedDtor(*this);
}
inline void RoomError::SharedDtor(MessageLite& self) {
  RoomError& this_ = static_cast<RoomError&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.code_.Destroy();
  this_._impl_.message_.Destroy();
  this_._impl_.field_.Destroy();
  this_._impl_.room_id_.Destroy();
  this_._impl_.entity_id_.Destroy();
  delete this_._impl_.position_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RoomError::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RoomError(arena);
}
constexpr auto RoomError::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RoomError),
                                            alignof(RoomError));
}
constexpr auto RoomError::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RoomError_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RoomError::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RoomError>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RoomError::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RoomError>(), &RoomError::ByteSizeLong,
              &RoomError::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RoomError, _impl_._cached_size_),
          false,
      },
      &RoomError::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fcommon_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RoomError_class_data_ =
        RoomError::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RoomError::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RoomError_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RoomError_class_data_.tc_table);
  return RoomError_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 63, 2>
RoomError::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RoomError, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RoomError_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::RoomError>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string code = 1 [json_name = "code"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RoomError, _impl_.code_)}},
    // string message = 2 [json_name = "message"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(RoomError, _impl_.message_)}},
    // string field = 3 [json_name = "field"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(RoomError, _impl_.field_)}},
    // string room_id = 4 [json_name = "roomId"];
    {::_pbi::TcParser::FastUS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(RoomError, _impl_.room_id_)}},
    // .api.v1alpha1.Position position = 5 [json_name = "position"];
    {::_pbi::TcParser::FastMtS1,
     {42, 5, 0, PROTOBUF_FIELD_OFFSET(RoomError, _impl_.position_)}},
    // string entity_id = 6 [json_name = "entityId"];
    {::_pbi::TcParser::FastUS1,
     {50, 4, 0, PROTOBUF_FIELD_OFFSET(RoomError, _impl_.entity_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string code = 1 [json_name = "code"];
    {PROTOBUF_FIELD_OFFSET(RoomError, _impl_.code_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string message = 2 [json_name = "message"];
    {PROTOBUF_FIELD_OFFSET(RoomError, _impl_.message_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string field = 3 [json_name = "field"];
    {PROTOBUF_FIELD_OFFSET(RoomError, _impl_.field_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string room_id = 4 [json_name = "roomId"];
    {PROTOBUF_FIELD_OFFSET(RoomError, _impl_.room_id_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .api.v1alpha1.Position position = 5 [json_name = "position"];
    {PROTOBUF_FIELD_OFFSET(RoomError, _impl_.position_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string entity_id = 6 [json_name = "entityId"];
    {PROTOBUF_FIELD_OFFSET(RoomError, _impl_.entity_id_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::Position>()},
  }},
  {{
    "\26\4\7\5\7\0\11\0"
    "api.v1alpha1.RoomError"
    "code"
    "message"
    "field"
    "room_id"
    "entity_id"
  }},
};
PROTOBUF_NOINLINE void RoomError::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.RoomError)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.code_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.message_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.field_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.room_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      _impl_.entity_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      ABSL_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RoomError::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RoomError& this_ = static_cast<const RoomError&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RoomError::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RoomError& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.RoomError)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string code = 1 [json_name = "code"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_code().empty()) {
      const ::std::string& _s = this_._internal_code();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RoomError.code");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string message = 2 [json_name = "message"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_message().empty()) {
      const ::std::string& _s = this_._internal_message();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RoomError.message");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string field = 3 [json_name = "field"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_field().empty()) {
      const ::std::string& _s = this_._internal_field();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RoomError.field");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string room_id = 4 [json_name = "roomId"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (!this_._internal_room_id().empty()) {
      const ::std::string& _s = this_._internal_room_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RoomError.room_id");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.Position position = 5 [json_name = "position"];
  if ((cached_has_bits & 0x00000020U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.position_, this_._impl_.position_->GetCachedSize(), target,
        stream);
  }

  // string entity_id = 6 [json_name = "entityId"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    if (!this_._internal_entity_id().empty()) {
      const ::std::string& _s = this_._internal_entity_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RoomError.entity_id");
      target = stream->WriteStringMaybeAliased(6, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.RoomError)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RoomError::ByteSizeLong(const MessageLite& base) {
  const RoomError& this_ = static_cast<const RoomError&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RoomError::ByteSizeLong() const {
  const RoomError& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.RoomError)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    // string code = 1 [json_name = "code"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_code().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_code());
      }
    }
    // string message = 2 [json_name = "message"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_message().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_message());
      }
    }
    // string field = 3 [json_name = "field"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_field().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_field());
      }
    }
    // string room_id = 4 [json_name = "roomId"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_room_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_room_id());
      }
    }
    // string entity_id = 6 [json_name = "entityId"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (!this_._internal_entity_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_entity_id());
      }
    }
    // .api.v1alpha1.Position position = 5 [json_name = "position"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.position_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RoomError::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RoomError*>(&to_msg);
  auto& from = static_cast<const RoomError&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.RoomError)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_code().empty()) {
        _this->_internal_set_code(from._internal_code());
      } else {
        if (_this->_impl_.code_.IsDefault()) {
          _this->_internal_set_code("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_message().empty()) {
        _this->_internal_set_message(from._internal_message());
      } else {
        if (_this->_impl_.message_.IsDefault()) {
          _this->_internal_set_message("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_field().empty()) {
        _this->_internal_set_field(from._internal_field());
      } else {
        if (_this->_impl_.field_.IsDefault()) {
          _this->_internal_set_field("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_room_id().empty()) {
        _this->_internal_set_room_id(from._internal_room_id());
      } else {
        if (_this->_impl_.room_id_.IsDefault()) {
          _this->_internal_set_room_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (!from._internal_entity_id().empty()) {
        _this->_internal_set_entity_id(from._internal_entity_id());
      } else {
        if (_this->_impl_.entity_id_.IsDefault()) {
          _this->_internal_set_entity_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      ABSL_DCHECK(from._impl_.position_ != nullptr);
      if (_this->_impl_.position_ == nullptr) {
        _this->_impl_.position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.position_);
      } else {
        _this->_impl_.position_->MergeFrom(*from._impl_.position_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RoomError::CopyFrom(const RoomError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.RoomError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RoomError::InternalSwap(RoomError* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.code_, &other->_impl_.code_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.field_, &other->_impl_.field_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.room_id_, &other->_impl_.room_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entity_id_, &other->_impl_.entity_id_, arena);
  swap(_impl_.position_, other->_impl_.position_);
}

::google::protobuf::Metadata RoomError::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ValidationResult::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ValidationResult>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ValidationResult, _impl_._has_bits_);
};

ValidationResult::ValidationResult(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ValidationResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.ValidationResult)
}
PROTOBUF_NDEBUG_INLINE ValidationResult::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::ValidationResult& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        errors_{visibility, arena, from.errors_},
        warnings_{visibility, arena, from.warnings_} {}

ValidationResult::ValidationResult(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ValidationResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ValidationResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ValidationResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.is_valid_ = from._impl_.is_valid_;

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.ValidationResult)
}
PROTOBUF_NDEBUG_INLINE ValidationResult::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        errors_{visibility, arena},
        warnings_{visibility, arena} {}

inline void ValidationResult::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.is_valid_ = {};
}
ValidationResult::~ValidationResult() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.ValidationResult)
  SharedDtor(*this);
}
inline void ValidationResult::SharedDtor(MessageLite& self) {
  ValidationResult& this_ = static_cast<ValidationResult&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ValidationResult::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ValidationResult(arena);
}
constexpr auto ValidationResult::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ValidationResult, _impl_.errors_) +
          decltype(ValidationResult::_impl_.errors_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ValidationResult, _impl_.warnings_) +
          decltype(ValidationResult::_impl_.warnings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ValidationResult), alignof(ValidationResult), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ValidationResult::PlacementNew_,
                                 sizeof(ValidationResult),
                                 alignof(ValidationResult));
  }
}
constexpr auto ValidationResult::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ValidationResult_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ValidationResult::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ValidationResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ValidationResult::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ValidationResult>(), &ValidationResult::ByteSizeLong,
              &ValidationResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ValidationResult, _impl_._cached_size_),
          false,
      },
      &ValidationResult::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fcommon_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ValidationResult_class_data_ =
        ValidationResult::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ValidationResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ValidationResult_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ValidationResult_class_data_.tc_table);
  return ValidationResult_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2>
ValidationResult::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ValidationResult, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ValidationResult_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::ValidationResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool is_valid = 1 [json_name = "isValid"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ValidationResult, _impl_.is_valid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ValidationResult, _impl_.is_valid_)}},
    // repeated .api.v1alpha1.RoomError errors = 2 [json_name = "errors"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ValidationResult, _impl_.errors_)}},
    // repeated .api.v1alpha1.RoomError warnings = 3 [json_name = "warnings"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(ValidationResult, _impl_.warnings_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool is_valid = 1 [json_name = "isValid"];
    {PROTOBUF_FIELD_OFFSET(ValidationResult, _impl_.is_valid_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated .api.v1alpha1.RoomError errors = 2 [json_name = "errors"];
    {PROTOBUF_FIELD_OFFSET(ValidationResult, _impl_.errors_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .api.v1alpha1.RoomError warnings = 3 [json_name = "warnings"];
    {PROTOBUF_FIELD_OFFSET(ValidationResult, _impl_.warnings_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RoomError>()},
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RoomError>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ValidationResult::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.ValidationResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.errors_.Clear();
  _impl_.warnings_.Clear();
  _impl_.is_valid_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ValidationResult::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ValidationResult& this_ = static_cast<const ValidationResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ValidationResult::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ValidationResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.ValidationResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool is_valid = 1 [json_name = "isValid"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_is_valid() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_is_valid(), target);
    }
  }

  // repeated .api.v1alpha1.RoomError errors = 2 [json_name = "errors"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_errors_size());
       i < n; i++) {
    const auto& repfield = this_._internal_errors().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .api.v1alpha1.RoomError warnings = 3 [json_name = "warnings"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_warnings_size());
       i < n; i++) {
    const auto& repfield = this_._internal_warnings().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.ValidationResult)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ValidationResult::ByteSizeLong(const MessageLite& base) {
  const ValidationResult& this_ = static_cast<const ValidationResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ValidationResult::ByteSizeLong() const {
  const ValidationResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.ValidationResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.RoomError errors = 2 [json_name = "errors"];
    {
      total_size += 1UL * this_._internal_errors_size();
      for (const auto& msg : this_._internal_errors()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .api.v1alpha1.RoomError warnings = 3 [json_name = "warnings"];
    {
      total_size += 1UL * this_._internal_warnings_size();
      for (const auto& msg : this_._internal_warnings()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // bool is_valid = 1 [json_name = "isValid"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_is_valid() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ValidationResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ValidationResult*>(&to_msg);
  auto& from = static_cast<const ValidationResult&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.ValidationResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_errors()->MergeFrom(
      from._internal_errors());
  _this->_internal_mutable_warnings()->MergeFrom(
      from._internal_warnings());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (from._internal_is_valid() != 0) {
      _this->_impl_.is_valid_ = from._impl_.is_valid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValidationResult::CopyFrom(const ValidationResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.ValidationResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ValidationResult::InternalSwap(ValidationResult* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.errors_.InternalSwap(&other->_impl_.errors_);
  _impl_.warnings_.InternalSwap(&other->_impl_.warnings_);
  swap(_impl_.is_valid_, other->_impl_.is_valid_);
}

::google::protobuf::Metadata ValidationResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PageInfo::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<PageInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PageInfo, _impl_._has_bits_);
};

PageInfo::PageInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PageInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.PageInfo)
}
PROTOBUF_NDEBUG_INLINE PageInfo::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::PageInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        page_token_(arena, from.page_token_),
        next_page_token_(arena, from.next_page_token_) {}

PageInfo::PageInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const PageInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PageInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PageInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, page_size_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, page_size_),
           offsetof(Impl_, total_size_) -
               offsetof(Impl_, page_size_) +
               sizeof(Impl_::total_size_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.PageInfo)
}
PROTOBUF_NDEBUG_INLINE PageInfo::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        page_token_(arena),
        next_page_token_(arena) {}

inline void PageInfo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, page_size_),
           0,
           offsetof(Impl_, total_size_) -
               offsetof(Impl_, page_size_) +
               sizeof(Impl_::total_size_));
}
PageInfo::~PageInfo() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.PageInfo)
  SharedDtor(*this);
}
inline void PageInfo::SharedDtor(MessageLite& self) {
  PageInfo& this_ = static_cast<PageInfo&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.page_token_.Destroy();
  this_._impl_.next_page_token_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PageInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PageInfo(arena);
}
constexpr auto PageInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PageInfo),
                                            alignof(PageInfo));
}
constexpr auto PageInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PageInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PageInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PageInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PageInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PageInfo>(), &PageInfo::ByteSizeLong,
              &PageInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PageInfo, _impl_._cached_size_),
          false,
      },
      &PageInfo::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fcommon_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PageInfo_class_data_ =
        PageInfo::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PageInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PageInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PageInfo_class_data_.tc_table);
  return PageInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 55, 2>
PageInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PageInfo, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    PageInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::PageInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 total_size = 4 [json_name = "totalSize"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PageInfo, _impl_.total_size_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(PageInfo, _impl_.total_size_)}},
    // int32 page_size = 1 [json_name = "pageSize"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PageInfo, _impl_.page_size_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(PageInfo, _impl_.page_size_)}},
    // string page_token = 2 [json_name = "pageToken"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(PageInfo, _impl_.page_token_)}},
    // string next_page_token = 3 [json_name = "nextPageToken"];
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(PageInfo, _impl_.next_page_token_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 page_size = 1 [json_name = "pageSize"];
    {PROTOBUF_FIELD_OFFSET(PageInfo, _impl_.page_size_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string page_token = 2 [json_name = "pageToken"];
    {PROTOBUF_FIELD_OFFSET(PageInfo, _impl_.page_token_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string next_page_token = 3 [json_name = "nextPageToken"];
    {PROTOBUF_FIELD_OFFSET(PageInfo, _impl_.next_page_token_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 total_size = 4 [json_name = "totalSize"];
    {PROTOBUF_FIELD_OFFSET(PageInfo, _impl_.total_size_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\25\0\12\17\0\0\0\0"
    "api.v1alpha1.PageInfo"
    "page_token"
    "next_page_token"
  }},
};
PROTOBUF_NOINLINE void PageInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.PageInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.page_token_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.next_page_token_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000000cU) != 0) {
    ::memset(&_impl_.page_size_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.total_size_) -
        reinterpret_cast<char*>(&_impl_.page_size_)) + sizeof(_impl_.total_size_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PageInfo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PageInfo& this_ = static_cast<const PageInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PageInfo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PageInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.PageInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 page_size = 1 [json_name = "pageSize"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_page_size() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_page_size(), target);
    }
  }

  // string page_token = 2 [json_name = "pageToken"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_page_token().empty()) {
      const ::std::string& _s = this_._internal_page_token();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.PageInfo.page_token");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string next_page_token = 3 [json_name = "nextPageToken"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_next_page_token().empty()) {
      const ::std::string& _s = this_._internal_next_page_token();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.PageInfo.next_page_token");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // int32 total_size = 4 [json_name = "totalSize"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_total_size() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_total_size(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.PageInfo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PageInfo::ByteSizeLong(const MessageLite& base) {
  const PageInfo& this_ = static_cast<const PageInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PageInfo::ByteSizeLong() const {
  const PageInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.PageInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string page_token = 2 [json_name = "pageToken"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_page_token().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_page_token());
      }
    }
    // string next_page_token = 3 [json_name = "nextPageToken"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_next_page_token().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_next_page_token());
      }
    }
    // int32 page_size = 1 [json_name = "pageSize"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_page_size() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_page_size());
      }
    }
    // int32 total_size = 4 [json_name = "totalSize"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_total_size() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_total_size());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PageInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PageInfo*>(&to_msg);
  auto& from = static_cast<const PageInfo&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.PageInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_page_token().empty()) {
        _this->_internal_set_page_token(from._internal_page_token());
      } else {
        if (_this->_impl_.page_token_.IsDefault()) {
          _this->_internal_set_page_token("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_next_page_token().empty()) {
        _this->_internal_set_next_page_token(from._internal_next_page_token());
      } else {
        if (_this->_impl_.next_page_token_.IsDefault()) {
          _this->_internal_set_next_page_token("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_page_size() != 0) {
        _this->_impl_.page_size_ = from._impl_.page_size_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_total_size() != 0) {
        _this->_impl_.total_size_ = from._impl_.total_size_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PageInfo::CopyFrom(const PageInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.PageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PageInfo::InternalSwap(PageInfo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.page_token_, &other->_impl_.page_token_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.next_page_token_, &other->_impl_.next_page_token_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PageInfo, _impl_.total_size_)
      + sizeof(PageInfo::_impl_.total_size_)
      - PROTOBUF_FIELD_OFFSET(PageInfo, _impl_.page_size_)>(
          reinterpret_cast<char*>(&_impl_.page_size_),
          reinterpret_cast<char*>(&other->_impl_.page_size_));
}

::google::protobuf::Metadata PageInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RoomFilter::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RoomFilter>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RoomFilter, _impl_._has_bits_);
};

RoomFilter::RoomFilter(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RoomFilter_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.RoomFilter)
}
PROTOBUF_NDEBUG_INLINE RoomFilter::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::RoomFilter& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        room_types_{visibility, arena, from.room_types_},
        themes_{visibility, arena, from.themes_},
        states_{visibility, arena, from.states_},
        tags_{visibility, arena, from.tags_},
        session_id_(arena, from.session_id_),
        owner_id_(arena, from.owner_id_) {}

RoomFilter::RoomFilter(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RoomFilter& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RoomFilter_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RoomFilter* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.dimension_filter_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dimension_filter_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, created_after_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, created_after_),
           offsetof(Impl_, accessed_after_) -
               offsetof(Impl_, created_after_) +
               sizeof(Impl_::accessed_after_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.RoomFilter)
}
PROTOBUF_NDEBUG_INLINE RoomFilter::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        room_types_{visibility, arena},
        themes_{visibility, arena},
        states_{visibility, arena},
        tags_{visibility, arena},
        session_id_(arena),
        owner_id_(arena) {}

inline void RoomFilter::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, dimension_filter_),
           0,
           offsetof(Impl_, accessed_after_) -
               offsetof(Impl_, dimension_filter_) +
               sizeof(Impl_::accessed_after_));
}
RoomFilter::~RoomFilter() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.RoomFilter)
  SharedDtor(*this);
}
inline void RoomFilter::SharedDtor(MessageLite& self) {
  RoomFilter& this_ = static_cast<RoomFilter&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.session_id_.Destroy();
  this_._impl_.owner_id_.Destroy();
  delete this_._impl_.dimension_filter_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RoomFilter::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RoomFilter(arena);
}
constexpr auto RoomFilter::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RoomFilter, _impl_.room_types_) +
          decltype(RoomFilter::_impl_.room_types_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RoomFilter, _impl_.themes_) +
          decltype(RoomFilter::_impl_.themes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RoomFilter, _impl_.states_) +
          decltype(RoomFilter::_impl_.states_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RoomFilter, _impl_.tags_) +
          decltype(RoomFilter::_impl_.tags_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RoomFilter), alignof(RoomFilter), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RoomFilter::PlacementNew_,
                                 sizeof(RoomFilter),
                                 alignof(RoomFilter));
  }
}
constexpr auto RoomFilter::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RoomFilter_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RoomFilter::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RoomFilter>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RoomFilter::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RoomFilter>(), &RoomFilter::ByteSizeLong,
              &RoomFilter::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RoomFilter, _impl_._cached_size_),
          false,
      },
      &RoomFilter::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fcommon_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RoomFilter_class_data_ =
        RoomFilter::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RoomFilter::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RoomFilter_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RoomFilter_class_data_.tc_table);
  return RoomFilter_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 1, 84, 2>
RoomFilter::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RoomFilter, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RoomFilter_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::RoomFilter>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string room_types = 1 [json_name = "roomTypes"];
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RoomFilter, _impl_.room_types_)}},
    // repeated string themes = 2 [json_name = "themes"];
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RoomFilter, _impl_.themes_)}},
    // repeated string states = 3 [json_name = "states"];
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(RoomFilter, _impl_.states_)}},
    // string session_id = 4 [json_name = "sessionId"];
    {::_pbi::TcParser::FastUS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(RoomFilter, _impl_.session_id_)}},
    // string owner_id = 5 [json_name = "ownerId"];
    {::_pbi::TcParser::FastUS1,
     {42, 1, 0, PROTOBUF_FIELD_OFFSET(RoomFilter, _impl_.owner_id_)}},
    // repeated string tags = 6 [json_name = "tags"];
    {::_pbi::TcParser::FastUR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(RoomFilter, _impl_.tags_)}},
    // .api.v1alpha1.RoomDimensionFilter dimension_filter = 7 [json_name = "dimensionFilter"];
    {::_pbi::TcParser::FastMtS1,
     {58, 2, 0, PROTOBUF_FIELD_OFFSET(RoomFilter, _impl_.dimension_filter_)}},
    // int64 created_after = 8 [json_name = "createdAfter"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RoomFilter, _impl_.created_after_), 3>(),
     {64, 3, 0, PROTOBUF_FIELD_OFFSET(RoomFilter, _impl_.created_after_)}},
    // int64 created_before = 9 [json_name = "createdBefore"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RoomFilter, _impl_.created_before_), 4>(),
     {72, 4, 0, PROTOBUF_FIELD_OFFSET(RoomFilter, _impl_.created_before_)}},
    // int64 accessed_after = 10 [json_name = "accessedAfter"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RoomFilter, _impl_.accessed_after_), 5>(),
     {80, 5, 0, PROTOBUF_FIELD_OFFSET(RoomFilter, _impl_.accessed_after_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string room_types = 1 [json_name = "roomTypes"];
    {PROTOBUF_FIELD_OFFSET(RoomFilter, _impl_.room_types_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string themes = 2 [json_name = "themes"];
    {PROTOBUF_FIELD_OFFSET(RoomFilter, _impl_.themes_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string states = 3 [json_name = "states"];
    {PROTOBUF_FIELD_OFFSET(RoomFilter, _impl_.states_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string session_id = 4 [json_name = "sessionId"];
    {PROTOBUF_FIELD_OFFSET(RoomFilter, _impl_.session_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string owner_id = 5 [json_name = "ownerId"];
    {PROTOBUF_FIELD_OFFSET(RoomFilter, _impl_.owner_id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string tags = 6 [json_name = "tags"];
    {PROTOBUF_FIELD_OFFSET(RoomFilter, _impl_.tags_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .api.v1alpha1.RoomDimensionFilter dimension_filter = 7 [json_name = "dimensionFilter"];
    {PROTOBUF_FIELD_OFFSET(RoomFilter, _impl_.dimension_filter_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 created_after = 8 [json_name = "createdAfter"];
    {PROTOBUF_FIELD_OFFSET(RoomFilter, _impl_.created_after_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 created_before = 9 [json_name = "createdBefore"];
    {PROTOBUF_FIELD_OFFSET(RoomFilter, _impl_.created_before_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 accessed_after = 10 [json_name = "accessedAfter"];
    {PROTOBUF_FIELD_OFFSET(RoomFilter, _impl_.accessed_after_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::api::v1alpha1::RoomDimensionFilter>()},
  }},
  {{
    "\27\12\6\6\12\10\4\0\0\0\0\0\0\0\0\0"
    "api.v1alpha1.RoomFilter"
    "room_types"
    "themes"
    "states"
    "session_id"
    "owner_id"
    "tags"
  }},
};
PROTOBUF_NOINLINE void RoomFilter::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.RoomFilter)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.room_types_.Clear();
  _impl_.themes_.Clear();
  _impl_.states_.Clear();
  _impl_.tags_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.session_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.owner_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.dimension_filter_ != nullptr);
      _impl_.dimension_filter_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000038U) != 0) {
    ::memset(&_impl_.created_after_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.accessed_after_) -
        reinterpret_cast<char*>(&_impl_.created_after_)) + sizeof(_impl_.accessed_after_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RoomFilter::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RoomFilter& this_ = static_cast<const RoomFilter&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RoomFilter::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RoomFilter& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.RoomFilter)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string room_types = 1 [json_name = "roomTypes"];
  for (int i = 0, n = this_._internal_room_types_size(); i < n; ++i) {
    const auto& s = this_._internal_room_types().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RoomFilter.room_types");
    target = stream->WriteString(1, s, target);
  }

  // repeated string themes = 2 [json_name = "themes"];
  for (int i = 0, n = this_._internal_themes_size(); i < n; ++i) {
    const auto& s = this_._internal_themes().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RoomFilter.themes");
    target = stream->WriteString(2, s, target);
  }

  // repeated string states = 3 [json_name = "states"];
  for (int i = 0, n = this_._internal_states_size(); i < n; ++i) {
    const auto& s = this_._internal_states().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RoomFilter.states");
    target = stream->WriteString(3, s, target);
  }

  // string session_id = 4 [json_name = "sessionId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_session_id().empty()) {
      const ::std::string& _s = this_._internal_session_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RoomFilter.session_id");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // string owner_id = 5 [json_name = "ownerId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_owner_id().empty()) {
      const ::std::string& _s = this_._internal_owner_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RoomFilter.owner_id");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  // repeated string tags = 6 [json_name = "tags"];
  for (int i = 0, n = this_._internal_tags_size(); i < n; ++i) {
    const auto& s = this_._internal_tags().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "api.v1alpha1.RoomFilter.tags");
    target = stream->WriteString(6, s, target);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .api.v1alpha1.RoomDimensionFilter dimension_filter = 7 [json_name = "dimensionFilter"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *this_._impl_.dimension_filter_, this_._impl_.dimension_filter_->GetCachedSize(), target,
        stream);
  }

  // int64 created_after = 8 [json_name = "createdAfter"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    if (this_._internal_created_after() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<8>(
              stream, this_._internal_created_after(), target);
    }
  }

  // int64 created_before = 9 [json_name = "createdBefore"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    if (this_._internal_created_before() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<9>(
              stream, this_._internal_created_before(), target);
    }
  }

  // int64 accessed_after = 10 [json_name = "accessedAfter"];
  if ((cached_has_bits & 0x00000020U) != 0) {
    if (this_._internal_accessed_after() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<10>(
              stream, this_._internal_accessed_after(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.RoomFilter)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RoomFilter::ByteSizeLong(const MessageLite& base) {
  const RoomFilter& this_ = static_cast<const RoomFilter&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RoomFilter::ByteSizeLong() const {
  const RoomFilter& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.RoomFilter)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string room_types = 1 [json_name = "roomTypes"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_room_types().size());
      for (int i = 0, n = this_._internal_room_types().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_room_types().Get(i));
      }
    }
    // repeated string themes = 2 [json_name = "themes"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_themes().size());
      for (int i = 0, n = this_._internal_themes().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_themes().Get(i));
      }
    }
    // repeated string states = 3 [json_name = "states"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_states().size());
      for (int i = 0, n = this_._internal_states().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_states().Get(i));
      }
    }
    // repeated string tags = 6 [json_name = "tags"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_tags().size());
      for (int i = 0, n = this_._internal_tags().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_tags().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    // string session_id = 4 [json_name = "sessionId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_session_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_session_id());
      }
    }
    // string owner_id = 5 [json_name = "ownerId"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_owner_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_owner_id());
      }
    }
    // .api.v1alpha1.RoomDimensionFilter dimension_filter = 7 [json_name = "dimensionFilter"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.dimension_filter_);
    }
    // int64 created_after = 8 [json_name = "createdAfter"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_created_after() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_created_after());
      }
    }
    // int64 created_before = 9 [json_name = "createdBefore"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (this_._internal_created_before() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_created_before());
      }
    }
    // int64 accessed_after = 10 [json_name = "accessedAfter"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_accessed_after() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_accessed_after());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RoomFilter::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RoomFilter*>(&to_msg);
  auto& from = static_cast<const RoomFilter&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.RoomFilter)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_room_types()->MergeFrom(from._internal_room_types());
  _this->_internal_mutable_themes()->MergeFrom(from._internal_themes());
  _this->_internal_mutable_states()->MergeFrom(from._internal_states());
  _this->_internal_mutable_tags()->MergeFrom(from._internal_tags());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_session_id().empty()) {
        _this->_internal_set_session_id(from._internal_session_id());
      } else {
        if (_this->_impl_.session_id_.IsDefault()) {
          _this->_internal_set_session_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_owner_id().empty()) {
        _this->_internal_set_owner_id(from._internal_owner_id());
      } else {
        if (_this->_impl_.owner_id_.IsDefault()) {
          _this->_internal_set_owner_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.dimension_filter_ != nullptr);
      if (_this->_impl_.dimension_filter_ == nullptr) {
        _this->_impl_.dimension_filter_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dimension_filter_);
      } else {
        _this->_impl_.dimension_filter_->MergeFrom(*from._impl_.dimension_filter_);
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_created_after() != 0) {
        _this->_impl_.created_after_ = from._impl_.created_after_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (from._internal_created_before() != 0) {
        _this->_impl_.created_before_ = from._impl_.created_before_;
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_accessed_after() != 0) {
        _this->_impl_.accessed_after_ = from._impl_.accessed_after_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RoomFilter::CopyFrom(const RoomFilter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.RoomFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RoomFilter::InternalSwap(RoomFilter* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.room_types_.InternalSwap(&other->_impl_.room_types_);
  _impl_.themes_.InternalSwap(&other->_impl_.themes_);
  _impl_.states_.InternalSwap(&other->_impl_.states_);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_id_, &other->_impl_.session_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_id_, &other->_impl_.owner_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RoomFilter, _impl_.accessed_after_)
      + sizeof(RoomFilter::_impl_.accessed_after_)
      - PROTOBUF_FIELD_OFFSET(RoomFilter, _impl_.dimension_filter_)>(
          reinterpret_cast<char*>(&_impl_.dimension_filter_),
          reinterpret_cast<char*>(&other->_impl_.dimension_filter_));
}

::google::protobuf::Metadata RoomFilter::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RoomDimensionFilter::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RoomDimensionFilter>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RoomDimensionFilter, _impl_._has_bits_);
};

RoomDimensionFilter::RoomDimensionFilter(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RoomDimensionFilter_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:api.v1alpha1.RoomDimensionFilter)
}
PROTOBUF_NDEBUG_INLINE RoomDimensionFilter::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::api::v1alpha1::RoomDimensionFilter& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        grid_types_{visibility, arena, from.grid_types_},
        _grid_types_cached_byte_size_{0} {}

RoomDimensionFilter::RoomDimensionFilter(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RoomDimensionFilter& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RoomDimensionFilter_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RoomDimensionFilter* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, min_width_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, min_width_),
           offsetof(Impl_, max_height_) -
               offsetof(Impl_, min_width_) +
               sizeof(Impl_::max_height_));

  // @@protoc_insertion_point(copy_constructor:api.v1alpha1.RoomDimensionFilter)
}
PROTOBUF_NDEBUG_INLINE RoomDimensionFilter::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        grid_types_{visibility, arena},
        _grid_types_cached_byte_size_{0} {}

inline void RoomDimensionFilter::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, min_width_),
           0,
           offsetof(Impl_, max_height_) -
               offsetof(Impl_, min_width_) +
               sizeof(Impl_::max_height_));
}
RoomDimensionFilter::~RoomDimensionFilter() {
  // @@protoc_insertion_point(destructor:api.v1alpha1.RoomDimensionFilter)
  SharedDtor(*this);
}
inline void RoomDimensionFilter::SharedDtor(MessageLite& self) {
  RoomDimensionFilter& this_ = static_cast<RoomDimensionFilter&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RoomDimensionFilter::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RoomDimensionFilter(arena);
}
constexpr auto RoomDimensionFilter::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RoomDimensionFilter, _impl_.grid_types_) +
          decltype(RoomDimensionFilter::_impl_.grid_types_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(RoomDimensionFilter), alignof(RoomDimensionFilter), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RoomDimensionFilter::PlacementNew_,
                                 sizeof(RoomDimensionFilter),
                                 alignof(RoomDimensionFilter));
  }
}
constexpr auto RoomDimensionFilter::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RoomDimensionFilter_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RoomDimensionFilter::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RoomDimensionFilter>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RoomDimensionFilter::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RoomDimensionFilter>(), &RoomDimensionFilter::ByteSizeLong,
              &RoomDimensionFilter::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RoomDimensionFilter, _impl_._cached_size_),
          false,
      },
      &RoomDimensionFilter::kDescriptorMethods,
      &descriptor_table_api_2fv1alpha1_2froom_5fcommon_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RoomDimensionFilter_class_data_ =
        RoomDimensionFilter::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RoomDimensionFilter::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RoomDimensionFilter_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RoomDimensionFilter_class_data_.tc_table);
  return RoomDimensionFilter_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2>
RoomDimensionFilter::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RoomDimensionFilter, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RoomDimensionFilter_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::api::v1alpha1::RoomDimensionFilter>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double min_width = 1 [json_name = "minWidth"];
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(RoomDimensionFilter, _impl_.min_width_)}},
    // double max_width = 2 [json_name = "maxWidth"];
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(RoomDimensionFilter, _impl_.max_width_)}},
    // double min_height = 3 [json_name = "minHeight"];
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(RoomDimensionFilter, _impl_.min_height_)}},
    // double max_height = 4 [json_name = "maxHeight"];
    {::_pbi::TcParser::FastF64S1,
     {33, 3, 0, PROTOBUF_FIELD_OFFSET(RoomDimensionFilter, _impl_.max_height_)}},
    // repeated .api.v1alpha1.GridType grid_types = 5 [json_name = "gridTypes"];
    {::_pbi::TcParser::FastV32P1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(RoomDimensionFilter, _impl_.grid_types_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // double min_width = 1 [json_name = "minWidth"];
    {PROTOBUF_FIELD_OFFSET(RoomDimensionFilter, _impl_.min_width_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double max_width = 2 [json_name = "maxWidth"];
    {PROTOBUF_FIELD_OFFSET(RoomDimensionFilter, _impl_.max_width_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double min_height = 3 [json_name = "minHeight"];
    {PROTOBUF_FIELD_OFFSET(RoomDimensionFilter, _impl_.min_height_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double max_height = 4 [json_name = "maxHeight"];
    {PROTOBUF_FIELD_OFFSET(RoomDimensionFilter, _impl_.max_height_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // repeated .api.v1alpha1.GridType grid_types = 5 [json_name = "gridTypes"];
    {PROTOBUF_FIELD_OFFSET(RoomDimensionFilter, _impl_.grid_types_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void RoomDimensionFilter::Clear() {
// @@protoc_insertion_point(message_clear_start:api.v1alpha1.RoomDimensionFilter)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.grid_types_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    ::memset(&_impl_.min_width_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.max_height_) -
        reinterpret_cast<char*>(&_impl_.min_width_)) + sizeof(_impl_.max_height_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RoomDimensionFilter::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RoomDimensionFilter& this_ = static_cast<const RoomDimensionFilter&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RoomDimensionFilter::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RoomDimensionFilter& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:api.v1alpha1.RoomDimensionFilter)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double min_width = 1 [json_name = "minWidth"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_min_width()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          1, this_._internal_min_width(), target);
    }
  }

  // double max_width = 2 [json_name = "maxWidth"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_max_width()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_max_width(), target);
    }
  }

  // double min_height = 3 [json_name = "minHeight"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_min_height()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_min_height(), target);
    }
  }

  // double max_height = 4 [json_name = "maxHeight"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_max_height()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          4, this_._internal_max_height(), target);
    }
  }

  // repeated .api.v1alpha1.GridType grid_types = 5 [json_name = "gridTypes"];
  {
    ::size_t byte_size = this_._impl_._grid_types_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          5, this_._internal_grid_types(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.v1alpha1.RoomDimensionFilter)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RoomDimensionFilter::ByteSizeLong(const MessageLite& base) {
  const RoomDimensionFilter& this_ = static_cast<const RoomDimensionFilter&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RoomDimensionFilter::ByteSizeLong() const {
  const RoomDimensionFilter& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:api.v1alpha1.RoomDimensionFilter)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .api.v1alpha1.GridType grid_types = 5 [json_name = "gridTypes"];
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_grid_types(), 1, this_._impl_._grid_types_cached_byte_size_);
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // double min_width = 1 [json_name = "minWidth"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_min_width()) != 0) {
        total_size += 9;
      }
    }
    // double max_width = 2 [json_name = "maxWidth"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_max_width()) != 0) {
        total_size += 9;
      }
    }
    // double min_height = 3 [json_name = "minHeight"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_min_height()) != 0) {
        total_size += 9;
      }
    }
    // double max_height = 4 [json_name = "maxHeight"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_max_height()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RoomDimensionFilter::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RoomDimensionFilter*>(&to_msg);
  auto& from = static_cast<const RoomDimensionFilter&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:api.v1alpha1.RoomDimensionFilter)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_grid_types()->MergeFrom(from._internal_grid_types());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_min_width()) != 0) {
        _this->_impl_.min_width_ = from._impl_.min_width_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_max_width()) != 0) {
        _this->_impl_.max_width_ = from._impl_.max_width_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_min_height()) != 0) {
        _this->_impl_.min_height_ = from._impl_.min_height_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_max_height()) != 0) {
        _this->_impl_.max_height_ = from._impl_.max_height_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RoomDimensionFilter::CopyFrom(const RoomDimensionFilter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.v1alpha1.RoomDimensionFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RoomDimensionFilter::InternalSwap(RoomDimensionFilter* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.grid_types_.InternalSwap(&other->_impl_.grid_types_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RoomDimensionFilter, _impl_.max_height_)
      + sizeof(RoomDimensionFilter::_impl_.max_height_)
      - PROTOBUF_FIELD_OFFSET(RoomDimensionFilter, _impl_.min_width_)>(
          reinterpret_cast<char*>(&_impl_.min_width_),
          reinterpret_cast<char*>(&other->_impl_.min_width_));
}

::google::protobuf::Metadata RoomDimensionFilter::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace api
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_api_2fv1alpha1_2froom_5fcommon_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
